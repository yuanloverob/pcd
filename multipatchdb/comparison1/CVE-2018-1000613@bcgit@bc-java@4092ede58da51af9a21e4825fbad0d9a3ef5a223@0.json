{
  "cve_id": "CVE-2018-1000613",
  "cve_desc": "Legion of the Bouncy Castle Legion of the Bouncy Castle Java Cryptography APIs 1.58 up to but not including 1.60 contains a CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') vulnerability in XMSS/XMSS^MT private key deserialization that can result in Deserializing an XMSS/XMSS^MT private key can result in the execution of unexpected code. This attack appear to be exploitable via A handcrafted private key can include references to unexpected classes which will be picked up from the class path for the executing application. This vulnerability appears to have been fixed in 1.60 and later.",
  "repo": "bcgit/bc-java",
  "patch_hash": "4092ede58da51af9a21e4825fbad0d9a3ef5a223",
  "patch_info": {
    "commit_hash": "4092ede58da51af9a21e4825fbad0d9a3ef5a223",
    "repo": "bcgit/bc-java",
    "commit_url": "https://github.com/bcgit/bc-java/commit/4092ede58da51af9a21e4825fbad0d9a3ef5a223",
    "files": [
      "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
      "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
      "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
      "docs/releasenotes.html",
      "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
      "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
    ],
    "message": "added additional checking to XMSS BDS tree parsing. Failures now mostly cause IOException",
    "before_after_code_files": [
      "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
      "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
      "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
      "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
      "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
      "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java -> core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "179:         for (int h = numLayer - 1; h >= 0; h--)",
      "180:         {",
      "197:             }",
      "199:             {",
      "201:             }",
      "",
      "[Removed Lines]",
      "181:             GMSSRootCalc tree = new GMSSRootCalc(this.heightOfTrees[h], this.K[h], digestProvider);",
      "182:             try",
      "183:             {",
      "186:                 if (h == numLayer - 1)",
      "187:                 {",
      "188:                     tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
      "189:                 }",
      "190:                 else",
      "193:                 {",
      "194:                     tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
      "195:                 }",
      "198:             catch (Exception e1)",
      "200:                 e1.printStackTrace();",
      "",
      "[Added Lines]",
      "181:             GMSSRootCalc tree;",
      "185:             if (h == numLayer - 1)",
      "186:             {",
      "187:                 tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
      "189:             else",
      "193:                 tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
      "",
      "---------------"
    ],
    "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:     public RainbowParameters(int[] vi)",
      "45:     {",
      "46:         this.vi = vi;",
      "55:     }",
      "57:     private void checkParams()",
      "59:     {",
      "60:         if (vi == null)",
      "61:         {",
      "63:         }",
      "64:         if (vi.length > 1)",
      "65:         {",
      "",
      "[Removed Lines]",
      "47:         try",
      "48:         {",
      "49:             checkParams();",
      "50:         }",
      "51:         catch (Exception e)",
      "52:         {",
      "53:             e.printStackTrace();",
      "54:         }",
      "58:         throws Exception",
      "62:             throw new Exception(\"no layers defined.\");",
      "",
      "[Added Lines]",
      "48:         checkParams();",
      "55:             throw new IllegalArgumentException(\"no layers defined.\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "67:             {",
      "68:                 if (vi[i] >= vi[i + 1])",
      "69:                 {",
      "71:                         \"v[i] has to be smaller than v[i+1]\");",
      "72:                 }",
      "73:             }",
      "74:         }",
      "75:         else",
      "76:         {",
      "78:                 \"Rainbow needs at least 1 layer, such that v1 < v2.\");",
      "79:         }",
      "80:     }",
      "",
      "[Removed Lines]",
      "70:                     throw new Exception(",
      "77:             throw new Exception(",
      "",
      "[Added Lines]",
      "63:                     throw new IllegalArgumentException(",
      "70:             throw new IllegalArgumentException(",
      "",
      "---------------"
    ],
    "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
      "72:             try",
      "73:             {",
      "75:             }",
      "76:             catch (IOException e)",
      "77:             {",
      "79:             }",
      "80:             catch (ClassNotFoundException e)",
      "81:             {",
      "83:             }",
      "86:         }",
      "87:         else",
      "88:         {",
      "",
      "[Removed Lines]",
      "71:             BDSStateMap bdsImport = null;",
      "74:                 bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary);",
      "78:                 e.printStackTrace();",
      "82:                 e.printStackTrace();",
      "84:             bdsImport.setXMSS(builder.xmss);",
      "85:             bdsState = bdsImport;",
      "",
      "[Added Lines]",
      "73:                 BDSStateMap bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary, BDSStateMap.class);",
      "75:                 bdsImport.setXMSS(builder.xmss);",
      "76:                 bdsState = bdsImport;",
      "80:                 throw new IllegalArgumentException(e.getMessage(), e);",
      "84:                 throw new IllegalArgumentException(e.getMessage(), e);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "261:         XMSSUtil.copyBytesAtOffset(out, root, position);",
      "264:         try",
      "265:         {",
      "267:         }",
      "268:         catch (IOException e)",
      "269:         {",
      "272:         }",
      "274:     }",
      "276:     public long getIndex()",
      "",
      "[Removed Lines]",
      "263:         byte[] bdsStateOut = null;",
      "266:             bdsStateOut = XMSSUtil.serialize(bdsState);",
      "270:             e.printStackTrace();",
      "271:             throw new RuntimeException(\"error serializing bds state\");",
      "273:         return Arrays.concatenate(out, bdsStateOut);",
      "",
      "[Added Lines]",
      "265:             return Arrays.concatenate(out, XMSSUtil.serialize(bdsState));",
      "269:             throw new IllegalStateException(\"error serializing bds state: \" + e.getMessage(), e);",
      "",
      "---------------"
    ],
    "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "86:             position += rootSize;",
      "88:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
      "90:             try",
      "91:             {",
      "93:             }",
      "94:             catch (IOException e)",
      "95:             {",
      "97:             }",
      "98:             catch (ClassNotFoundException e)",
      "99:             {",
      "107:             }",
      "109:         }",
      "110:         else",
      "111:         {",
      "",
      "[Removed Lines]",
      "89:             BDS bdsImport = null;",
      "92:                 bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary);",
      "96:                 e.printStackTrace();",
      "100:                 e.printStackTrace();",
      "101:             }",
      "102:             bdsImport.setXMSS(builder.xmss);",
      "103:             bdsImport.validate();",
      "104:             if (bdsImport.getIndex() != index)",
      "105:             {",
      "106:                 throw new IllegalStateException(\"serialized BDS has wrong index\");",
      "108:             bdsState = bdsImport;",
      "",
      "[Added Lines]",
      "91:                 BDS bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary, BDS.class);",
      "92:                 bdsImport.setXMSS(builder.xmss);",
      "93:                 bdsImport.validate();",
      "94:                 if (bdsImport.getIndex() != index)",
      "95:                 {",
      "96:                     throw new IllegalStateException(\"serialized BDS has wrong index\");",
      "97:                 }",
      "98:                 bdsState = bdsImport;",
      "102:                 throw new IllegalArgumentException(e.getMessage(), e);",
      "106:                 throw new IllegalArgumentException(e.getMessage(), e);",
      "",
      "---------------"
    ],
    "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "321:         return out.toByteArray();",
      "322:     }",
      "325:         throws IOException, ClassNotFoundException",
      "326:     {",
      "327:         ByteArrayInputStream in = new ByteArrayInputStream(data);",
      "328:         ObjectInputStream is = new ObjectInputStream(in);",
      "330:     }",
      "332:     public static int calculateTau(int index, int height)",
      "",
      "[Removed Lines]",
      "324:     public static Object deserialize(byte[] data)",
      "329:         return is.readObject();",
      "",
      "[Added Lines]",
      "324:     public static Object deserialize(byte[] data, Class clazz)",
      "329:         Object obj = is.readObject();",
      "331:         if (is.available() != 0)",
      "332:         {",
      "333:             throw new IOException(\"unexpected data found at end of ObjectInputStream\");",
      "334:         }",
      "335:         if (clazz.isInstance(obj))",
      "336:         {",
      "337:             return obj;",
      "338:         }",
      "339:         else",
      "340:         {",
      "341:             throw new IOException(\"unexpected class found in ObjectInputStream\");",
      "342:         }",
      "",
      "---------------"
    ],
    "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java": [
      "File: core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java -> core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "156:         for (i = 0; i < mDegree; i++)",
      "157:         {",
      "168:         }",
      "",
      "[Removed Lines]",
      "158:             try",
      "159:             {",
      "160:                 a[i] = new GF2Polynomial(matrix[i]);",
      "161:                 inv[i] = new GF2Polynomial(mDegree);",
      "162:                 inv[i].setBit(mDegree - 1 - i);",
      "163:             }",
      "164:             catch (RuntimeException BDNEExc)",
      "165:             {",
      "166:                 BDNEExc.printStackTrace();",
      "167:             }",
      "",
      "[Added Lines]",
      "158:             a[i] = new GF2Polynomial(matrix[i]);",
      "159:             inv[i] = new GF2Polynomial(mDegree);",
      "160:             inv[i].setBit(mDegree - 1 - i);",
      "",
      "---------------"
    ],
    "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java": [
      "File: core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java -> core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: import junit.framework.TestCase;",
      "7: import org.bouncycastle.crypto.digests.SHA256Digest;",
      "8: import org.bouncycastle.pqc.crypto.xmss.XMSSMT;",
      "9: import org.bouncycastle.pqc.crypto.xmss.XMSSMTParameters;",
      "10: import org.bouncycastle.util.Arrays;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8: import org.bouncycastle.pqc.crypto.xmss.XMSS;",
      "11: import org.bouncycastle.pqc.crypto.xmss.XMSSParameters;",
      "12: import org.bouncycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters;",
      "14: import org.bouncycastle.util.encoders.Base64;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "15: public class XMSSMTPrivateKeyTest",
      "16:     extends TestCase",
      "17: {",
      "19:     public void testPrivateKeyParsingSHA256()",
      "21:     {",
      "22:         XMSSMTParameters params = new XMSSMTParameters(20, 10, new SHA256Digest());",
      "23:         XMSSMT mt = new XMSSMT(params, new SecureRandom());",
      "",
      "[Removed Lines]",
      "20:         throws IOException, ClassNotFoundException",
      "",
      "[Added Lines]",
      "22:     public void testPrivateKeySerialisation()",
      "23:         throws Exception",
      "24:     {",
      "25:         String stream = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArO0ABXNyACJzdW4ucm1pLnNlcnZlci5BY3RpdmF0aW9uR3JvdXBJbXBsT+r9SAwuMqcCAARaAA1ncm91cEluYWN0aXZlTAAGYWN0aXZldAAVTGphdmEvdXRpbC9IYXNodGFibGU7TAAHZ3JvdXBJRHQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Hcm91cElEO0wACWxvY2tlZElEc3QAEExqYXZhL3V0aWwvTGlzdDt4cgAjamF2YS5ybWkuYWN0aXZhdGlvbi5BY3RpdmF0aW9uR3JvdXCVLvKwBSnVVAIAA0oAC2luY2FybmF0aW9uTAAHZ3JvdXBJRHEAfgACTAAHbW9uaXRvcnQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Nb25pdG9yO3hyACNqYXZhLnJtaS5zZXJ2ZXIuVW5pY2FzdFJlbW90ZU9iamVjdEUJEhX14n4xAgADSQAEcG9ydEwAA2NzZnQAKExqYXZhL3JtaS9zZXJ2ZXIvUk1JQ2xpZW50U29ja2V0RmFjdG9yeTtMAANzc2Z0AChMamF2YS9ybWkvc2VydmVyL1JNSVNlcnZlclNvY2tldEZhY3Rvcnk7eHIAHGphdmEucm1pLnNlcnZlci5SZW1vdGVTZXJ2ZXLHGQcSaPM5+wIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHcSABBVbmljYXN0U2VydmVyUmVmeAAAFbNwcAAAAAAAAAAAcHAAcHBw\";",
      "27:         XMSSParameters params = new XMSSParameters(10, new SHA256Digest());",
      "29:         byte[] output = Base64.decode(new String(stream).getBytes(\"UTF-8\"));",
      "34:         try",
      "35:         {",
      "36:             new XMSSPrivateKeyParameters.Builder(params).withPrivateKey(output, params).build();",
      "37:         }",
      "38:         catch (IllegalArgumentException e)",
      "39:         {",
      "40:             assertTrue(e.getCause() instanceof IOException);",
      "41:         }",
      "45:         XMSS xmss2 = new XMSS(params, new SecureRandom());",
      "47:         xmss2.generateKeys();",
      "49:         byte[] publicKey = xmss2.exportPublicKey();",
      "51:         try",
      "52:         {",
      "53:             xmss2.importState(output, publicKey);",
      "54:         }",
      "55:         catch (IllegalArgumentException e)",
      "56:         {",
      "57:             assertTrue(e.getCause() instanceof IOException);",
      "58:         }",
      "59:     }",
      "62:         throws Exception",
      "",
      "---------------"
    ],
    "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java": [
      "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:             if (xmssMtPrivateKey.getBdsState() != null)",
      "54:             {",
      "56:             }",
      "58:             this.keyParams = keyBuilder.build();",
      "",
      "[Removed Lines]",
      "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState()));",
      "",
      "[Added Lines]",
      "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState(), BDSStateMap.class));",
      "",
      "---------------"
    ],
    "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java": [
      "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:             if (xmssPrivateKey.getBdsState() != null)",
      "53:             {",
      "55:             }",
      "57:             this.keyParams = keyBuilder.build();",
      "",
      "[Removed Lines]",
      "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState()));",
      "",
      "[Added Lines]",
      "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState(), BDS.class));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4092ede58da51af9a21e4825fbad0d9a3ef5a223",
      "candidate_info": {
        "commit_hash": "4092ede58da51af9a21e4825fbad0d9a3ef5a223",
        "repo": "bcgit/bc-java",
        "commit_url": "https://github.com/bcgit/bc-java/commit/4092ede58da51af9a21e4825fbad0d9a3ef5a223",
        "files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "docs/releasenotes.html",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ],
        "message": "added additional checking to XMSS BDS tree parsing. Failures now mostly cause IOException",
        "before_after_code_files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ],
          "candidate": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java -> core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         for (int h = numLayer - 1; h >= 0; h--)",
          "180:         {",
          "197:             }",
          "199:             {",
          "201:             }",
          "",
          "[Removed Lines]",
          "181:             GMSSRootCalc tree = new GMSSRootCalc(this.heightOfTrees[h], this.K[h], digestProvider);",
          "182:             try",
          "183:             {",
          "186:                 if (h == numLayer - 1)",
          "187:                 {",
          "188:                     tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:                 }",
          "190:                 else",
          "193:                 {",
          "194:                     tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "195:                 }",
          "198:             catch (Exception e1)",
          "200:                 e1.printStackTrace();",
          "",
          "[Added Lines]",
          "181:             GMSSRootCalc tree;",
          "185:             if (h == numLayer - 1)",
          "186:             {",
          "187:                 tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:             else",
          "193:                 tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     public RainbowParameters(int[] vi)",
          "45:     {",
          "46:         this.vi = vi;",
          "55:     }",
          "57:     private void checkParams()",
          "59:     {",
          "60:         if (vi == null)",
          "61:         {",
          "63:         }",
          "64:         if (vi.length > 1)",
          "65:         {",
          "",
          "[Removed Lines]",
          "47:         try",
          "48:         {",
          "49:             checkParams();",
          "50:         }",
          "51:         catch (Exception e)",
          "52:         {",
          "53:             e.printStackTrace();",
          "54:         }",
          "58:         throws Exception",
          "62:             throw new Exception(\"no layers defined.\");",
          "",
          "[Added Lines]",
          "48:         checkParams();",
          "55:             throw new IllegalArgumentException(\"no layers defined.\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:             {",
          "68:                 if (vi[i] >= vi[i + 1])",
          "69:                 {",
          "71:                         \"v[i] has to be smaller than v[i+1]\");",
          "72:                 }",
          "73:             }",
          "74:         }",
          "75:         else",
          "76:         {",
          "78:                 \"Rainbow needs at least 1 layer, such that v1 < v2.\");",
          "79:         }",
          "80:     }",
          "",
          "[Removed Lines]",
          "70:                     throw new Exception(",
          "77:             throw new Exception(",
          "",
          "[Added Lines]",
          "63:                     throw new IllegalArgumentException(",
          "70:             throw new IllegalArgumentException(",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "72:             try",
          "73:             {",
          "75:             }",
          "76:             catch (IOException e)",
          "77:             {",
          "79:             }",
          "80:             catch (ClassNotFoundException e)",
          "81:             {",
          "83:             }",
          "86:         }",
          "87:         else",
          "88:         {",
          "",
          "[Removed Lines]",
          "71:             BDSStateMap bdsImport = null;",
          "74:                 bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary);",
          "78:                 e.printStackTrace();",
          "82:                 e.printStackTrace();",
          "84:             bdsImport.setXMSS(builder.xmss);",
          "85:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "73:                 BDSStateMap bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary, BDSStateMap.class);",
          "75:                 bdsImport.setXMSS(builder.xmss);",
          "76:                 bdsState = bdsImport;",
          "80:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "84:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:         XMSSUtil.copyBytesAtOffset(out, root, position);",
          "264:         try",
          "265:         {",
          "267:         }",
          "268:         catch (IOException e)",
          "269:         {",
          "272:         }",
          "274:     }",
          "276:     public long getIndex()",
          "",
          "[Removed Lines]",
          "263:         byte[] bdsStateOut = null;",
          "266:             bdsStateOut = XMSSUtil.serialize(bdsState);",
          "270:             e.printStackTrace();",
          "271:             throw new RuntimeException(\"error serializing bds state\");",
          "273:         return Arrays.concatenate(out, bdsStateOut);",
          "",
          "[Added Lines]",
          "265:             return Arrays.concatenate(out, XMSSUtil.serialize(bdsState));",
          "269:             throw new IllegalStateException(\"error serializing bds state: \" + e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             position += rootSize;",
          "88:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "90:             try",
          "91:             {",
          "93:             }",
          "94:             catch (IOException e)",
          "95:             {",
          "97:             }",
          "98:             catch (ClassNotFoundException e)",
          "99:             {",
          "107:             }",
          "109:         }",
          "110:         else",
          "111:         {",
          "",
          "[Removed Lines]",
          "89:             BDS bdsImport = null;",
          "92:                 bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary);",
          "96:                 e.printStackTrace();",
          "100:                 e.printStackTrace();",
          "101:             }",
          "102:             bdsImport.setXMSS(builder.xmss);",
          "103:             bdsImport.validate();",
          "104:             if (bdsImport.getIndex() != index)",
          "105:             {",
          "106:                 throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "108:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "91:                 BDS bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary, BDS.class);",
          "92:                 bdsImport.setXMSS(builder.xmss);",
          "93:                 bdsImport.validate();",
          "94:                 if (bdsImport.getIndex() != index)",
          "95:                 {",
          "96:                     throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "97:                 }",
          "98:                 bdsState = bdsImport;",
          "102:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "106:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:         return out.toByteArray();",
          "322:     }",
          "325:         throws IOException, ClassNotFoundException",
          "326:     {",
          "327:         ByteArrayInputStream in = new ByteArrayInputStream(data);",
          "328:         ObjectInputStream is = new ObjectInputStream(in);",
          "330:     }",
          "332:     public static int calculateTau(int index, int height)",
          "",
          "[Removed Lines]",
          "324:     public static Object deserialize(byte[] data)",
          "329:         return is.readObject();",
          "",
          "[Added Lines]",
          "324:     public static Object deserialize(byte[] data, Class clazz)",
          "329:         Object obj = is.readObject();",
          "331:         if (is.available() != 0)",
          "332:         {",
          "333:             throw new IOException(\"unexpected data found at end of ObjectInputStream\");",
          "334:         }",
          "335:         if (clazz.isInstance(obj))",
          "336:         {",
          "337:             return obj;",
          "338:         }",
          "339:         else",
          "340:         {",
          "341:             throw new IOException(\"unexpected class found in ObjectInputStream\");",
          "342:         }",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java -> core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         for (i = 0; i < mDegree; i++)",
          "157:         {",
          "168:         }",
          "",
          "[Removed Lines]",
          "158:             try",
          "159:             {",
          "160:                 a[i] = new GF2Polynomial(matrix[i]);",
          "161:                 inv[i] = new GF2Polynomial(mDegree);",
          "162:                 inv[i].setBit(mDegree - 1 - i);",
          "163:             }",
          "164:             catch (RuntimeException BDNEExc)",
          "165:             {",
          "166:                 BDNEExc.printStackTrace();",
          "167:             }",
          "",
          "[Added Lines]",
          "158:             a[i] = new GF2Polynomial(matrix[i]);",
          "159:             inv[i] = new GF2Polynomial(mDegree);",
          "160:             inv[i].setBit(mDegree - 1 - i);",
          "",
          "---------------"
        ],
        "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java": [
          "File: core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java -> core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import junit.framework.TestCase;",
          "7: import org.bouncycastle.crypto.digests.SHA256Digest;",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSSMT;",
          "9: import org.bouncycastle.pqc.crypto.xmss.XMSSMTParameters;",
          "10: import org.bouncycastle.util.Arrays;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSS;",
          "11: import org.bouncycastle.pqc.crypto.xmss.XMSSParameters;",
          "12: import org.bouncycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters;",
          "14: import org.bouncycastle.util.encoders.Base64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: public class XMSSMTPrivateKeyTest",
          "16:     extends TestCase",
          "17: {",
          "19:     public void testPrivateKeyParsingSHA256()",
          "21:     {",
          "22:         XMSSMTParameters params = new XMSSMTParameters(20, 10, new SHA256Digest());",
          "23:         XMSSMT mt = new XMSSMT(params, new SecureRandom());",
          "",
          "[Removed Lines]",
          "20:         throws IOException, ClassNotFoundException",
          "",
          "[Added Lines]",
          "22:     public void testPrivateKeySerialisation()",
          "23:         throws Exception",
          "24:     {",
          "25:         String stream = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArO0ABXNyACJzdW4ucm1pLnNlcnZlci5BY3RpdmF0aW9uR3JvdXBJbXBsT+r9SAwuMqcCAARaAA1ncm91cEluYWN0aXZlTAAGYWN0aXZldAAVTGphdmEvdXRpbC9IYXNodGFibGU7TAAHZ3JvdXBJRHQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Hcm91cElEO0wACWxvY2tlZElEc3QAEExqYXZhL3V0aWwvTGlzdDt4cgAjamF2YS5ybWkuYWN0aXZhdGlvbi5BY3RpdmF0aW9uR3JvdXCVLvKwBSnVVAIAA0oAC2luY2FybmF0aW9uTAAHZ3JvdXBJRHEAfgACTAAHbW9uaXRvcnQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Nb25pdG9yO3hyACNqYXZhLnJtaS5zZXJ2ZXIuVW5pY2FzdFJlbW90ZU9iamVjdEUJEhX14n4xAgADSQAEcG9ydEwAA2NzZnQAKExqYXZhL3JtaS9zZXJ2ZXIvUk1JQ2xpZW50U29ja2V0RmFjdG9yeTtMAANzc2Z0AChMamF2YS9ybWkvc2VydmVyL1JNSVNlcnZlclNvY2tldEZhY3Rvcnk7eHIAHGphdmEucm1pLnNlcnZlci5SZW1vdGVTZXJ2ZXLHGQcSaPM5+wIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHcSABBVbmljYXN0U2VydmVyUmVmeAAAFbNwcAAAAAAAAAAAcHAAcHBw\";",
          "27:         XMSSParameters params = new XMSSParameters(10, new SHA256Digest());",
          "29:         byte[] output = Base64.decode(new String(stream).getBytes(\"UTF-8\"));",
          "34:         try",
          "35:         {",
          "36:             new XMSSPrivateKeyParameters.Builder(params).withPrivateKey(output, params).build();",
          "37:         }",
          "38:         catch (IllegalArgumentException e)",
          "39:         {",
          "40:             assertTrue(e.getCause() instanceof IOException);",
          "41:         }",
          "45:         XMSS xmss2 = new XMSS(params, new SecureRandom());",
          "47:         xmss2.generateKeys();",
          "49:         byte[] publicKey = xmss2.exportPublicKey();",
          "51:         try",
          "52:         {",
          "53:             xmss2.importState(output, publicKey);",
          "54:         }",
          "55:         catch (IllegalArgumentException e)",
          "56:         {",
          "57:             assertTrue(e.getCause() instanceof IOException);",
          "58:         }",
          "59:     }",
          "62:         throws Exception",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             if (xmssMtPrivateKey.getBdsState() != null)",
          "54:             {",
          "56:             }",
          "58:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState(), BDSStateMap.class));",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:             if (xmssPrivateKey.getBdsState() != null)",
          "53:             {",
          "55:             }",
          "57:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState(), BDS.class));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b38c8c371cbee58766f18368573bc2215be312c9",
      "candidate_info": {
        "commit_hash": "b38c8c371cbee58766f18368573bc2215be312c9",
        "repo": "bcgit/bc-java",
        "commit_url": "https://github.com/bcgit/bc-java/commit/b38c8c371cbee58766f18368573bc2215be312c9",
        "files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "docs/releasenotes.html",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ],
        "message": "added additional checking to XMSS BDS tree parsing. Failures now mostly cause IOException",
        "before_after_code_files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ],
          "candidate": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java -> core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         for (int h = numLayer - 1; h >= 0; h--)",
          "180:         {",
          "197:             }",
          "199:             {",
          "201:             }",
          "",
          "[Removed Lines]",
          "181:             GMSSRootCalc tree = new GMSSRootCalc(this.heightOfTrees[h], this.K[h], digestProvider);",
          "182:             try",
          "183:             {",
          "186:                 if (h == numLayer - 1)",
          "187:                 {",
          "188:                     tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:                 }",
          "190:                 else",
          "193:                 {",
          "194:                     tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "195:                 }",
          "198:             catch (Exception e1)",
          "200:                 e1.printStackTrace();",
          "",
          "[Added Lines]",
          "181:             GMSSRootCalc tree;",
          "185:             if (h == numLayer - 1)",
          "186:             {",
          "187:                 tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:             else",
          "193:                 tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     public RainbowParameters(int[] vi)",
          "45:     {",
          "46:         this.vi = vi;",
          "55:     }",
          "57:     private void checkParams()",
          "59:     {",
          "60:         if (vi == null)",
          "61:         {",
          "63:         }",
          "64:         if (vi.length > 1)",
          "65:         {",
          "",
          "[Removed Lines]",
          "47:         try",
          "48:         {",
          "49:             checkParams();",
          "50:         }",
          "51:         catch (Exception e)",
          "52:         {",
          "53:             e.printStackTrace();",
          "54:         }",
          "58:         throws Exception",
          "62:             throw new Exception(\"no layers defined.\");",
          "",
          "[Added Lines]",
          "48:         checkParams();",
          "55:             throw new IllegalArgumentException(\"no layers defined.\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:             {",
          "68:                 if (vi[i] >= vi[i + 1])",
          "69:                 {",
          "71:                         \"v[i] has to be smaller than v[i+1]\");",
          "72:                 }",
          "73:             }",
          "74:         }",
          "75:         else",
          "76:         {",
          "78:                 \"Rainbow needs at least 1 layer, such that v1 < v2.\");",
          "79:         }",
          "80:     }",
          "",
          "[Removed Lines]",
          "70:                     throw new Exception(",
          "77:             throw new Exception(",
          "",
          "[Added Lines]",
          "63:                     throw new IllegalArgumentException(",
          "70:             throw new IllegalArgumentException(",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "72:             try",
          "73:             {",
          "75:             }",
          "76:             catch (IOException e)",
          "77:             {",
          "79:             }",
          "80:             catch (ClassNotFoundException e)",
          "81:             {",
          "83:             }",
          "86:         }",
          "87:         else",
          "88:         {",
          "",
          "[Removed Lines]",
          "71:             BDSStateMap bdsImport = null;",
          "74:                 bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary);",
          "78:                 e.printStackTrace();",
          "82:                 e.printStackTrace();",
          "84:             bdsImport.setXMSS(builder.xmss);",
          "85:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "73:                 BDSStateMap bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary, BDSStateMap.class);",
          "75:                 bdsImport.setXMSS(builder.xmss);",
          "76:                 bdsState = bdsImport;",
          "80:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "84:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:         XMSSUtil.copyBytesAtOffset(out, root, position);",
          "264:         try",
          "265:         {",
          "267:         }",
          "268:         catch (IOException e)",
          "269:         {",
          "272:         }",
          "274:     }",
          "276:     public long getIndex()",
          "",
          "[Removed Lines]",
          "263:         byte[] bdsStateOut = null;",
          "266:             bdsStateOut = XMSSUtil.serialize(bdsState);",
          "270:             e.printStackTrace();",
          "271:             throw new RuntimeException(\"error serializing bds state\");",
          "273:         return Arrays.concatenate(out, bdsStateOut);",
          "",
          "[Added Lines]",
          "265:             return Arrays.concatenate(out, XMSSUtil.serialize(bdsState));",
          "269:             throw new IllegalStateException(\"error serializing bds state: \" + e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             position += rootSize;",
          "88:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "90:             try",
          "91:             {",
          "93:             }",
          "94:             catch (IOException e)",
          "95:             {",
          "97:             }",
          "98:             catch (ClassNotFoundException e)",
          "99:             {",
          "107:             }",
          "109:         }",
          "110:         else",
          "111:         {",
          "",
          "[Removed Lines]",
          "89:             BDS bdsImport = null;",
          "92:                 bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary);",
          "96:                 e.printStackTrace();",
          "100:                 e.printStackTrace();",
          "101:             }",
          "102:             bdsImport.setXMSS(builder.xmss);",
          "103:             bdsImport.validate();",
          "104:             if (bdsImport.getIndex() != index)",
          "105:             {",
          "106:                 throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "108:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "91:                 BDS bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary, BDS.class);",
          "92:                 bdsImport.setXMSS(builder.xmss);",
          "93:                 bdsImport.validate();",
          "94:                 if (bdsImport.getIndex() != index)",
          "95:                 {",
          "96:                     throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "97:                 }",
          "98:                 bdsState = bdsImport;",
          "102:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "106:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:         return out.toByteArray();",
          "322:     }",
          "325:         throws IOException, ClassNotFoundException",
          "326:     {",
          "327:         ByteArrayInputStream in = new ByteArrayInputStream(data);",
          "328:         ObjectInputStream is = new ObjectInputStream(in);",
          "330:     }",
          "332:     public static int calculateTau(int index, int height)",
          "",
          "[Removed Lines]",
          "324:     public static Object deserialize(byte[] data)",
          "329:         return is.readObject();",
          "",
          "[Added Lines]",
          "324:     public static Object deserialize(byte[] data, Class clazz)",
          "329:         Object obj = is.readObject();",
          "331:         if (is.available() != 0)",
          "332:         {",
          "333:             throw new IOException(\"unexpected data found at end of ObjectInputStream\");",
          "334:         }",
          "335:         if (clazz.isInstance(obj))",
          "336:         {",
          "337:             return obj;",
          "338:         }",
          "339:         else",
          "340:         {",
          "341:             throw new IOException(\"unexpected class found in ObjectInputStream\");",
          "342:         }",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java -> core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         for (i = 0; i < mDegree; i++)",
          "157:         {",
          "168:         }",
          "",
          "[Removed Lines]",
          "158:             try",
          "159:             {",
          "160:                 a[i] = new GF2Polynomial(matrix[i]);",
          "161:                 inv[i] = new GF2Polynomial(mDegree);",
          "162:                 inv[i].setBit(mDegree - 1 - i);",
          "163:             }",
          "164:             catch (RuntimeException BDNEExc)",
          "165:             {",
          "166:                 BDNEExc.printStackTrace();",
          "167:             }",
          "",
          "[Added Lines]",
          "158:             a[i] = new GF2Polynomial(matrix[i]);",
          "159:             inv[i] = new GF2Polynomial(mDegree);",
          "160:             inv[i].setBit(mDegree - 1 - i);",
          "",
          "---------------"
        ],
        "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java": [
          "File: core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java -> core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import junit.framework.TestCase;",
          "7: import org.bouncycastle.crypto.digests.SHA256Digest;",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSSMT;",
          "9: import org.bouncycastle.pqc.crypto.xmss.XMSSMTParameters;",
          "10: import org.bouncycastle.util.Arrays;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSS;",
          "11: import org.bouncycastle.pqc.crypto.xmss.XMSSParameters;",
          "12: import org.bouncycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters;",
          "14: import org.bouncycastle.util.encoders.Base64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: public class XMSSMTPrivateKeyTest",
          "16:     extends TestCase",
          "17: {",
          "19:     public void testPrivateKeyParsingSHA256()",
          "21:     {",
          "22:         XMSSMTParameters params = new XMSSMTParameters(20, 10, new SHA256Digest());",
          "23:         XMSSMT mt = new XMSSMT(params, new SecureRandom());",
          "",
          "[Removed Lines]",
          "20:         throws IOException, ClassNotFoundException",
          "",
          "[Added Lines]",
          "22:     public void testPrivateKeySerialisation()",
          "23:         throws Exception",
          "24:     {",
          "25:         String stream = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArO0ABXNyACJzdW4ucm1pLnNlcnZlci5BY3RpdmF0aW9uR3JvdXBJbXBsT+r9SAwuMqcCAARaAA1ncm91cEluYWN0aXZlTAAGYWN0aXZldAAVTGphdmEvdXRpbC9IYXNodGFibGU7TAAHZ3JvdXBJRHQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Hcm91cElEO0wACWxvY2tlZElEc3QAEExqYXZhL3V0aWwvTGlzdDt4cgAjamF2YS5ybWkuYWN0aXZhdGlvbi5BY3RpdmF0aW9uR3JvdXCVLvKwBSnVVAIAA0oAC2luY2FybmF0aW9uTAAHZ3JvdXBJRHEAfgACTAAHbW9uaXRvcnQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Nb25pdG9yO3hyACNqYXZhLnJtaS5zZXJ2ZXIuVW5pY2FzdFJlbW90ZU9iamVjdEUJEhX14n4xAgADSQAEcG9ydEwAA2NzZnQAKExqYXZhL3JtaS9zZXJ2ZXIvUk1JQ2xpZW50U29ja2V0RmFjdG9yeTtMAANzc2Z0AChMamF2YS9ybWkvc2VydmVyL1JNSVNlcnZlclNvY2tldEZhY3Rvcnk7eHIAHGphdmEucm1pLnNlcnZlci5SZW1vdGVTZXJ2ZXLHGQcSaPM5+wIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHcSABBVbmljYXN0U2VydmVyUmVmeAAAFbNwcAAAAAAAAAAAcHAAcHBw\";",
          "27:         XMSSParameters params = new XMSSParameters(10, new SHA256Digest());",
          "29:         byte[] output = Base64.decode(new String(stream).getBytes(\"UTF-8\"));",
          "34:         try",
          "35:         {",
          "36:             new XMSSPrivateKeyParameters.Builder(params).withPrivateKey(output, params).build();",
          "37:         }",
          "38:         catch (IllegalArgumentException e)",
          "39:         {",
          "40:             assertTrue(e.getCause() instanceof IOException);",
          "41:         }",
          "45:         XMSS xmss2 = new XMSS(params, new SecureRandom());",
          "47:         xmss2.generateKeys();",
          "49:         byte[] publicKey = xmss2.exportPublicKey();",
          "51:         try",
          "52:         {",
          "53:             xmss2.importState(output, publicKey);",
          "54:         }",
          "55:         catch (IllegalArgumentException e)",
          "56:         {",
          "57:             assertTrue(e.getCause() instanceof IOException);",
          "58:         }",
          "59:     }",
          "62:         throws Exception",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             if (xmssMtPrivateKey.getBdsState() != null)",
          "54:             {",
          "56:             }",
          "58:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState(), BDSStateMap.class));",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:             if (xmssPrivateKey.getBdsState() != null)",
          "53:             {",
          "55:             }",
          "57:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState(), BDS.class));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "540a427e811247979b7be75c4c9cee94c78db69b",
      "candidate_info": {
        "commit_hash": "540a427e811247979b7be75c4c9cee94c78db69b",
        "repo": "bcgit/bc-java",
        "commit_url": "https://github.com/bcgit/bc-java/commit/540a427e811247979b7be75c4c9cee94c78db69b",
        "files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "docs/releasenotes.html",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ],
        "message": "added additional checking to XMSS BDS tree parsing. Failures now mostly cause IOException",
        "before_after_code_files": [
          "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ],
          "candidate": [
            "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
            "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
            "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
            "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
            "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java||core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java -> core/src/main/java/org/bouncycastle/pqc/crypto/gmss/GMSSKeyPairGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         for (int h = numLayer - 1; h >= 0; h--)",
          "180:         {",
          "197:             }",
          "199:             {",
          "201:             }",
          "",
          "[Removed Lines]",
          "181:             GMSSRootCalc tree = new GMSSRootCalc(this.heightOfTrees[h], this.K[h], digestProvider);",
          "182:             try",
          "183:             {",
          "186:                 if (h == numLayer - 1)",
          "187:                 {",
          "188:                     tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:                 }",
          "190:                 else",
          "193:                 {",
          "194:                     tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "195:                 }",
          "198:             catch (Exception e1)",
          "200:                 e1.printStackTrace();",
          "",
          "[Added Lines]",
          "181:             GMSSRootCalc tree;",
          "185:             if (h == numLayer - 1)",
          "186:             {",
          "187:                 tree = this.generateCurrentAuthpathAndRoot(null, currentStack[h], seeds[h], h);",
          "189:             else",
          "193:                 tree = this.generateCurrentAuthpathAndRoot(currentRoots[h + 1], currentStack[h], seeds[h], h);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     public RainbowParameters(int[] vi)",
          "45:     {",
          "46:         this.vi = vi;",
          "55:     }",
          "57:     private void checkParams()",
          "59:     {",
          "60:         if (vi == null)",
          "61:         {",
          "63:         }",
          "64:         if (vi.length > 1)",
          "65:         {",
          "",
          "[Removed Lines]",
          "47:         try",
          "48:         {",
          "49:             checkParams();",
          "50:         }",
          "51:         catch (Exception e)",
          "52:         {",
          "53:             e.printStackTrace();",
          "54:         }",
          "58:         throws Exception",
          "62:             throw new Exception(\"no layers defined.\");",
          "",
          "[Added Lines]",
          "48:         checkParams();",
          "55:             throw new IllegalArgumentException(\"no layers defined.\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:             {",
          "68:                 if (vi[i] >= vi[i + 1])",
          "69:                 {",
          "71:                         \"v[i] has to be smaller than v[i+1]\");",
          "72:                 }",
          "73:             }",
          "74:         }",
          "75:         else",
          "76:         {",
          "78:                 \"Rainbow needs at least 1 layer, such that v1 < v2.\");",
          "79:         }",
          "80:     }",
          "",
          "[Removed Lines]",
          "70:                     throw new Exception(",
          "77:             throw new Exception(",
          "",
          "[Added Lines]",
          "63:                     throw new IllegalArgumentException(",
          "70:             throw new IllegalArgumentException(",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "72:             try",
          "73:             {",
          "75:             }",
          "76:             catch (IOException e)",
          "77:             {",
          "79:             }",
          "80:             catch (ClassNotFoundException e)",
          "81:             {",
          "83:             }",
          "86:         }",
          "87:         else",
          "88:         {",
          "",
          "[Removed Lines]",
          "71:             BDSStateMap bdsImport = null;",
          "74:                 bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary);",
          "78:                 e.printStackTrace();",
          "82:                 e.printStackTrace();",
          "84:             bdsImport.setXMSS(builder.xmss);",
          "85:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "73:                 BDSStateMap bdsImport = (BDSStateMap)XMSSUtil.deserialize(bdsStateBinary, BDSStateMap.class);",
          "75:                 bdsImport.setXMSS(builder.xmss);",
          "76:                 bdsState = bdsImport;",
          "80:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "84:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:         XMSSUtil.copyBytesAtOffset(out, root, position);",
          "264:         try",
          "265:         {",
          "267:         }",
          "268:         catch (IOException e)",
          "269:         {",
          "272:         }",
          "274:     }",
          "276:     public long getIndex()",
          "",
          "[Removed Lines]",
          "263:         byte[] bdsStateOut = null;",
          "266:             bdsStateOut = XMSSUtil.serialize(bdsState);",
          "270:             e.printStackTrace();",
          "271:             throw new RuntimeException(\"error serializing bds state\");",
          "273:         return Arrays.concatenate(out, bdsStateOut);",
          "",
          "[Added Lines]",
          "265:             return Arrays.concatenate(out, XMSSUtil.serialize(bdsState));",
          "269:             throw new IllegalStateException(\"error serializing bds state: \" + e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             position += rootSize;",
          "88:             byte[] bdsStateBinary = XMSSUtil.extractBytesAtOffset(privateKey, position, privateKey.length - position);",
          "90:             try",
          "91:             {",
          "93:             }",
          "94:             catch (IOException e)",
          "95:             {",
          "97:             }",
          "98:             catch (ClassNotFoundException e)",
          "99:             {",
          "107:             }",
          "109:         }",
          "110:         else",
          "111:         {",
          "",
          "[Removed Lines]",
          "89:             BDS bdsImport = null;",
          "92:                 bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary);",
          "96:                 e.printStackTrace();",
          "100:                 e.printStackTrace();",
          "101:             }",
          "102:             bdsImport.setXMSS(builder.xmss);",
          "103:             bdsImport.validate();",
          "104:             if (bdsImport.getIndex() != index)",
          "105:             {",
          "106:                 throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "108:             bdsState = bdsImport;",
          "",
          "[Added Lines]",
          "91:                 BDS bdsImport = (BDS)XMSSUtil.deserialize(bdsStateBinary, BDS.class);",
          "92:                 bdsImport.setXMSS(builder.xmss);",
          "93:                 bdsImport.validate();",
          "94:                 if (bdsImport.getIndex() != index)",
          "95:                 {",
          "96:                     throw new IllegalStateException(\"serialized BDS has wrong index\");",
          "97:                 }",
          "98:                 bdsState = bdsImport;",
          "102:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "106:                 throw new IllegalArgumentException(e.getMessage(), e);",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java||core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java -> core/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:         return out.toByteArray();",
          "322:     }",
          "325:         throws IOException, ClassNotFoundException",
          "326:     {",
          "327:         ByteArrayInputStream in = new ByteArrayInputStream(data);",
          "328:         ObjectInputStream is = new ObjectInputStream(in);",
          "330:     }",
          "332:     public static int calculateTau(int index, int height)",
          "",
          "[Removed Lines]",
          "324:     public static Object deserialize(byte[] data)",
          "329:         return is.readObject();",
          "",
          "[Added Lines]",
          "324:     public static Object deserialize(byte[] data, Class clazz)",
          "329:         Object obj = is.readObject();",
          "331:         if (is.available() != 0)",
          "332:         {",
          "333:             throw new IOException(\"unexpected data found at end of ObjectInputStream\");",
          "334:         }",
          "335:         if (clazz.isInstance(obj))",
          "336:         {",
          "337:             return obj;",
          "338:         }",
          "339:         else",
          "340:         {",
          "341:             throw new IOException(\"unexpected class found in ObjectInputStream\");",
          "342:         }",
          "",
          "---------------"
        ],
        "core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java||core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java": [
          "File: core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java -> core/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         for (i = 0; i < mDegree; i++)",
          "157:         {",
          "168:         }",
          "",
          "[Removed Lines]",
          "158:             try",
          "159:             {",
          "160:                 a[i] = new GF2Polynomial(matrix[i]);",
          "161:                 inv[i] = new GF2Polynomial(mDegree);",
          "162:                 inv[i].setBit(mDegree - 1 - i);",
          "163:             }",
          "164:             catch (RuntimeException BDNEExc)",
          "165:             {",
          "166:                 BDNEExc.printStackTrace();",
          "167:             }",
          "",
          "[Added Lines]",
          "158:             a[i] = new GF2Polynomial(matrix[i]);",
          "159:             inv[i] = new GF2Polynomial(mDegree);",
          "160:             inv[i].setBit(mDegree - 1 - i);",
          "",
          "---------------"
        ],
        "core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java||core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java": [
          "File: core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java -> core/src/test/java/org/bouncycastle/pqc/crypto/test/XMSSMTPrivateKeyTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import junit.framework.TestCase;",
          "7: import org.bouncycastle.crypto.digests.SHA256Digest;",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSSMT;",
          "9: import org.bouncycastle.pqc.crypto.xmss.XMSSMTParameters;",
          "10: import org.bouncycastle.util.Arrays;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import org.bouncycastle.pqc.crypto.xmss.XMSS;",
          "11: import org.bouncycastle.pqc.crypto.xmss.XMSSParameters;",
          "12: import org.bouncycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters;",
          "14: import org.bouncycastle.util.encoders.Base64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: public class XMSSMTPrivateKeyTest",
          "16:     extends TestCase",
          "17: {",
          "19:     public void testPrivateKeyParsingSHA256()",
          "21:     {",
          "22:         XMSSMTParameters params = new XMSSMTParameters(20, 10, new SHA256Digest());",
          "23:         XMSSMT mt = new XMSSMT(params, new SecureRandom());",
          "",
          "[Removed Lines]",
          "20:         throws IOException, ClassNotFoundException",
          "",
          "[Added Lines]",
          "22:     public void testPrivateKeySerialisation()",
          "23:         throws Exception",
          "24:     {",
          "25:         String stream = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArO0ABXNyACJzdW4ucm1pLnNlcnZlci5BY3RpdmF0aW9uR3JvdXBJbXBsT+r9SAwuMqcCAARaAA1ncm91cEluYWN0aXZlTAAGYWN0aXZldAAVTGphdmEvdXRpbC9IYXNodGFibGU7TAAHZ3JvdXBJRHQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Hcm91cElEO0wACWxvY2tlZElEc3QAEExqYXZhL3V0aWwvTGlzdDt4cgAjamF2YS5ybWkuYWN0aXZhdGlvbi5BY3RpdmF0aW9uR3JvdXCVLvKwBSnVVAIAA0oAC2luY2FybmF0aW9uTAAHZ3JvdXBJRHEAfgACTAAHbW9uaXRvcnQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Nb25pdG9yO3hyACNqYXZhLnJtaS5zZXJ2ZXIuVW5pY2FzdFJlbW90ZU9iamVjdEUJEhX14n4xAgADSQAEcG9ydEwAA2NzZnQAKExqYXZhL3JtaS9zZXJ2ZXIvUk1JQ2xpZW50U29ja2V0RmFjdG9yeTtMAANzc2Z0AChMamF2YS9ybWkvc2VydmVyL1JNSVNlcnZlclNvY2tldEZhY3Rvcnk7eHIAHGphdmEucm1pLnNlcnZlci5SZW1vdGVTZXJ2ZXLHGQcSaPM5+wIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHcSABBVbmljYXN0U2VydmVyUmVmeAAAFbNwcAAAAAAAAAAAcHAAcHBw\";",
          "27:         XMSSParameters params = new XMSSParameters(10, new SHA256Digest());",
          "29:         byte[] output = Base64.decode(new String(stream).getBytes(\"UTF-8\"));",
          "34:         try",
          "35:         {",
          "36:             new XMSSPrivateKeyParameters.Builder(params).withPrivateKey(output, params).build();",
          "37:         }",
          "38:         catch (IllegalArgumentException e)",
          "39:         {",
          "40:             assertTrue(e.getCause() instanceof IOException);",
          "41:         }",
          "45:         XMSS xmss2 = new XMSS(params, new SecureRandom());",
          "47:         xmss2.generateKeys();",
          "49:         byte[] publicKey = xmss2.exportPublicKey();",
          "51:         try",
          "52:         {",
          "53:             xmss2.importState(output, publicKey);",
          "54:         }",
          "55:         catch (IllegalArgumentException e)",
          "56:         {",
          "57:             assertTrue(e.getCause() instanceof IOException);",
          "58:         }",
          "59:     }",
          "62:         throws Exception",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             if (xmssMtPrivateKey.getBdsState() != null)",
          "54:             {",
          "56:             }",
          "58:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "55:                 keyBuilder.withBDSState((BDSStateMap)XMSSUtil.deserialize(xmssMtPrivateKey.getBdsState(), BDSStateMap.class));",
          "",
          "---------------"
        ],
        "prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java||prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java": [
          "File: prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java -> prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:             if (xmssPrivateKey.getBdsState() != null)",
          "53:             {",
          "55:             }",
          "57:             this.keyParams = keyBuilder.build();",
          "",
          "[Removed Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState()));",
          "",
          "[Added Lines]",
          "54:                 keyBuilder.withBDSState((BDS)XMSSUtil.deserialize(xmssPrivateKey.getBdsState(), BDS.class));",
          "",
          "---------------"
        ]
      }
    }
  ]
}