{
  "cve_id": "CVE-2022-23556",
  "cve_desc": "CodeIgniter is a PHP full-stack web framework. This vulnerability may allow attackers to spoof their IP address when the server is behind a reverse proxy. This issue has been patched, please upgrade to version 4.2.11 or later, and configure `Config\\App::$proxyIPs`. As a workaround, do not use `$request->getIPAddress()`.\n",
  "repo": "codeigniter4/CodeIgniter4",
  "patch_hash": "5ca8c99b2db09a2a08a013836628028ddc984659",
  "patch_info": {
    "commit_hash": "5ca8c99b2db09a2a08a013836628028ddc984659",
    "repo": "codeigniter4/CodeIgniter4",
    "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/5ca8c99b2db09a2a08a013836628028ddc984659",
    "files": [
      "app/Config/App.php",
      "phpstan-baseline.neon.dist",
      "system/HTTP/Request.php",
      "system/HTTP/RequestTrait.php",
      "system/Test/Mock/MockAppConfig.php",
      "system/Test/Mock/MockCLIConfig.php",
      "tests/system/HTTP/IncomingRequestTest.php",
      "tests/system/HTTP/RequestTest.php",
      "user_guide_src/source/changelogs/v4.2.11.rst",
      "user_guide_src/source/incoming/request.rst",
      "user_guide_src/source/installation/upgrade_4211.rst"
    ],
    "message": "Merge pull request from GHSA-ghw3-5qvm-3mqc\n\nfix: proxyIPs",
    "before_after_code_files": [
      "app/Config/App.php||app/Config/App.php",
      "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist",
      "system/HTTP/Request.php||system/HTTP/Request.php",
      "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php",
      "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php",
      "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php",
      "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php",
      "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php"
    ]
  },
  "patch_diff": {
    "app/Config/App.php||app/Config/App.php": [
      "File: app/Config/App.php -> app/Config/App.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "346:     public $proxyIPs = '';",
      "",
      "[Added Lines]",
      "349:     public $proxyIPs = [];",
      "",
      "---------------"
    ],
    "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist": [
      "File: phpstan-baseline.neon.dist -> phpstan-baseline.neon.dist",
      "--- Hunk 1 ---",
      "[Context before]",
      "500:    count: 1",
      "501:    path: system/HTTP/RedirectResponse.php",
      "508:   -",
      "509:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$uri \\\\(CodeIgniter\\\\\\\\HTTP\\\\\\\\URI\\\\) in empty\\\\(\\\\) is not falsy\\\\.$#\"",
      "510:    count: 1",
      "",
      "[Removed Lines]",
      "503:   -",
      "504:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$proxyIPs \\\\(array\\\\|string\\\\) on left side of \\\\?\\\\? is not nullable\\\\.$#\"",
      "505:    count: 1",
      "506:    path: system/HTTP/Request.php",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "system/HTTP/Request.php||system/HTTP/Request.php": [
      "File: system/HTTP/Request.php -> system/HTTP/Request.php"
    ],
    "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
      "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: namespace CodeIgniter\\HTTP;",
      "14: use CodeIgniter\\Validation\\FormatRules;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: use CodeIgniter\\Exceptions\\ConfigException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:         $proxyIPs = $this->proxyIPs ?? config('App')->proxyIPs;",
      "65:         }",
      "67:         $this->ipAddress = $this->getServer('REMOTE_ADDR');",
      "69:         if ($proxyIPs) {",
      "97:                             $this->ipAddress = $spoof;",
      "98:                             break;",
      "99:                         }",
      "102:                     }",
      "128:                         }",
      "131:                     }",
      "145:                     }",
      "149:                         $this->ipAddress = $spoof;",
      "150:                         break;",
      "151:                     }",
      "",
      "[Removed Lines]",
      "63:         if (! empty($proxyIPs) && ! is_array($proxyIPs)) {",
      "64:             $proxyIPs = explode(',', str_replace(' ', '', $proxyIPs));",
      "70:             foreach (['x-forwarded-for', 'client-ip', 'x-client-ip', 'x-cluster-client-ip'] as $header) {",
      "71:                 $spoof     = null;",
      "72:                 $headerObj = $this->header($header);",
      "74:                 if ($headerObj !== null) {",
      "75:                     $spoof = $headerObj->getValue();",
      "80:                     sscanf($spoof, '%[^,]', $spoof);",
      "82:                     if (! $ipValidator($spoof)) {",
      "83:                         $spoof = null;",
      "84:                     } else {",
      "85:                         break;",
      "86:                     }",
      "87:                 }",
      "88:             }",
      "90:             if ($spoof) {",
      "91:                 foreach ($proxyIPs as $proxyIP) {",
      "93:                     if (strpos($proxyIP, '/') === false) {",
      "96:                         if ($proxyIP === $this->ipAddress) {",
      "101:                         continue;",
      "105:                     if (! isset($separator)) {",
      "106:                         $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
      "107:                     }",
      "110:                     if (strpos($proxyIP, $separator) === false) {",
      "111:                         continue;",
      "112:                     }",
      "115:                     if (! isset($ip, $sprintf)) {",
      "116:                         if ($separator === ':') {",
      "118:                             $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
      "120:                             for ($j = 0; $j < 8; $j++) {",
      "121:                                 $ip[$j] = intval($ip[$j], 16);",
      "122:                             }",
      "124:                             $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
      "125:                         } else {",
      "126:                             $ip      = explode('.', $this->ipAddress);",
      "127:                             $sprintf = '%08b%08b%08b%08b';",
      "130:                         $ip = vsprintf($sprintf, $ip);",
      "134:                     sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
      "137:                     if ($separator === ':') {",
      "138:                         $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
      "140:                         for ($i = 0; $i < 8; $i++) {",
      "141:                             $netaddr[$i] = intval($netaddr[$i], 16);",
      "142:                         }",
      "143:                     } else {",
      "144:                         $netaddr = explode('.', $netaddr);",
      "148:                     if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
      "",
      "[Added Lines]",
      "67:         if (! empty($proxyIPs)) {",
      "69:             if (! is_array($proxyIPs) || is_int(array_key_first($proxyIPs))) {",
      "70:                 throw new ConfigException(",
      "71:                     'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
      "72:                 );",
      "73:             }",
      "80:             foreach ($proxyIPs as $proxyIP => $header) {",
      "82:                 if (strpos($proxyIP, '/') === false) {",
      "85:                     if ($proxyIP === $this->ipAddress) {",
      "86:                         $spoof = $this->getClientIP($header);",
      "88:                         if ($spoof !== null) {",
      "94:                     continue;",
      "95:                 }",
      "98:                 if (! isset($separator)) {",
      "99:                     $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
      "100:                 }",
      "103:                 if (strpos($proxyIP, $separator) === false) {",
      "104:                     continue;",
      "105:                 }",
      "108:                 if (! isset($ip, $sprintf)) {",
      "109:                     if ($separator === ':') {",
      "111:                         $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
      "113:                         for ($j = 0; $j < 8; $j++) {",
      "114:                             $ip[$j] = intval($ip[$j], 16);",
      "117:                         $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
      "118:                     } else {",
      "119:                         $ip      = explode('.', $this->ipAddress);",
      "120:                         $sprintf = '%08b%08b%08b%08b';",
      "123:                     $ip = vsprintf($sprintf, $ip);",
      "124:                 }",
      "127:                 sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
      "130:                 if ($separator === ':') {",
      "131:                     $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
      "133:                     for ($i = 0; $i < 8; $i++) {",
      "134:                         $netaddr[$i] = intval($netaddr[$i], 16);",
      "136:                 } else {",
      "137:                     $netaddr = explode('.', $netaddr);",
      "138:                 }",
      "141:                 if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
      "142:                     $spoof = $this->getClientIP($header);",
      "144:                     if ($spoof !== null) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "160:         return empty($this->ipAddress) ? '' : $this->ipAddress;",
      "161:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:     private function getClientIP(string $header): ?string",
      "163:     {",
      "164:         $ipValidator = [",
      "165:             new FormatRules(),",
      "166:             'valid_ip',",
      "167:         ];",
      "168:         $spoof     = null;",
      "169:         $headerObj = $this->header($header);",
      "171:         if ($headerObj !== null) {",
      "172:             $spoof = $headerObj->getValue();",
      "177:             sscanf($spoof, '%[^,]', $spoof);",
      "179:             if (! $ipValidator($spoof)) {",
      "180:                 $spoof = null;",
      "181:             }",
      "182:         }",
      "184:         return $spoof;",
      "185:     }",
      "",
      "---------------"
    ],
    "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php": [
      "File: system/Test/Mock/MockAppConfig.php -> system/Test/Mock/MockAppConfig.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     public $cookieSecure     = false;",
      "24:     public $cookieHTTPOnly   = false;",
      "25:     public $cookieSameSite   = 'Lax';",
      "27:     public $CSRFTokenName    = 'csrf_test_name';",
      "28:     public $CSRFHeaderName   = 'X-CSRF-TOKEN';",
      "29:     public $CSRFCookieName   = 'csrf_cookie_name';",
      "",
      "[Removed Lines]",
      "26:     public $proxyIPs         = '';",
      "",
      "[Added Lines]",
      "26:     public $proxyIPs         = [];",
      "",
      "---------------"
    ],
    "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php": [
      "File: system/Test/Mock/MockCLIConfig.php -> system/Test/Mock/MockCLIConfig.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     public $cookieSecure     = false;",
      "24:     public $cookieHTTPOnly   = false;",
      "25:     public $cookieSameSite   = 'Lax';",
      "27:     public $CSRFTokenName    = 'csrf_test_name';",
      "28:     public $CSRFCookieName   = 'csrf_cookie_name';",
      "29:     public $CSRFExpire       = 7200;",
      "",
      "[Removed Lines]",
      "26:     public $proxyIPs         = '';",
      "",
      "[Added Lines]",
      "26:     public $proxyIPs         = [];",
      "",
      "---------------"
    ],
    "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
      "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: namespace CodeIgniter\\HTTP;",
      "14: use CodeIgniter\\HTTP\\Exceptions\\HTTPException;",
      "15: use CodeIgniter\\HTTP\\Files\\UploadedFile;",
      "16: use CodeIgniter\\Test\\CIUnitTestCase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: use CodeIgniter\\Exceptions\\ConfigException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "714:         $expected                        = '123.123.123.123';",
      "715:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "716:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
      "720:         $this->request = new Request($config);",
      "721:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "717:         $config                          = new App();",
      "718:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "",
      "[Added Lines]",
      "719:         $config           = new App();",
      "720:         $config->proxyIPs = [",
      "721:             '10.0.1.200'     => 'X-Forwarded-For',",
      "722:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "723:         ];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "724:         $this->assertSame($expected, $this->request->getIPAddress());",
      "725:     }",
      "728:     {",
      "729:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
      "730:         $expected                        = '10.0.1.200';",
      "731:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "735:         $this->request = new Request($config);",
      "736:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "727:     public function testGetIPAddressThruProxyInvalid()",
      "732:         $config                          = new App();",
      "733:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "",
      "[Added Lines]",
      "731:     public function testGetIPAddressThruProxyIPv6()",
      "732:     {",
      "733:         $expected                        = '123.123.123.123';",
      "734:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "735:         $_SERVER['REMOTE_ADDR']          = '2001:db8::2:1';",
      "737:         $config           = new App();",
      "738:         $config->proxyIPs = [",
      "739:             '2001:db8::2:1' => 'X-Forwarded-For',",
      "740:         ];",
      "741:         $this->request = new Request($config);",
      "742:         $this->request->populateHeaders();",
      "745:         $this->assertSame($expected, $this->request->getIPAddress());",
      "746:     }",
      "748:     public function testGetIPAddressThruProxyInvalidIPAddress()",
      "754:         $config           = new App();",
      "755:         $config->proxyIPs = [",
      "756:             '10.0.1.200'     => 'X-Forwarded-For',",
      "757:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "758:         ];",
      "759:         $this->request = new Request($config);",
      "760:         $this->request->populateHeaders();",
      "763:         $this->assertSame($expected, $this->request->getIPAddress());",
      "764:     }",
      "766:     public function testGetIPAddressThruProxyInvalidIPAddressIPv6()",
      "767:     {",
      "768:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '2001:xyz::1';",
      "769:         $expected                        = '2001:db8::2:1';",
      "770:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "772:         $config           = new App();",
      "773:         $config->proxyIPs = [",
      "774:             '2001:db8::2:1' => 'X-Forwarded-For',",
      "775:         ];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "744:         $expected                        = '10.10.1.200';",
      "745:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "746:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
      "750:         $this->request = new Request($config);",
      "751:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "747:         $config                          = new App();",
      "748:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "",
      "[Added Lines]",
      "789:         $config           = new App();",
      "790:         $config->proxyIPs = [",
      "791:             '10.0.1.200'     => 'X-Forwarded-For',",
      "792:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "793:         ];",
      "794:         $this->request = new Request($config);",
      "795:         $this->request->populateHeaders();",
      "798:         $this->assertSame($expected, $this->request->getIPAddress());",
      "799:     }",
      "801:     public function testGetIPAddressThruProxyNotWhitelistedIPv6()",
      "802:     {",
      "803:         $expected                        = '2001:db8::2:2';",
      "804:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "805:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
      "807:         $config           = new App();",
      "808:         $config->proxyIPs = [",
      "809:             '2001:db8::2:1' => 'X-Forwarded-For',",
      "810:         ];",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "759:         $expected                        = '123.123.123.123';",
      "760:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "761:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
      "766:         $this->request->populateHeaders();",
      "769:         $this->assertSame($expected, $this->request->getIPAddress());",
      "770:     }",
      "773:     {",
      "774:         $expected                        = '192.168.5.21';",
      "775:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "778:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
      "780:         $this->request->populateHeaders();",
      "783:         $this->assertSame($expected, $this->request->getIPAddress());",
      "784:     }",
      "787: }",
      "",
      "[Removed Lines]",
      "762:         $config                          = new App();",
      "763:         $config->proxyIPs                = ['192.168.5.0/24'];",
      "765:         $this->request = new Request($config);",
      "772:     public function testGetIPAddressThruProxyOutofSubnet()",
      "776:         $config                          = new App();",
      "777:         $config->proxyIPs                = ['192.168.5.0/28'];",
      "779:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "824:         $config           = new App();",
      "825:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
      "826:         $this->request    = new Request($config);",
      "827:         $this->request->populateHeaders();",
      "830:         $this->assertSame($expected, $this->request->getIPAddress());",
      "831:     }",
      "833:     public function testGetIPAddressThruProxySubnetIPv6()",
      "834:     {",
      "835:         $expected                        = '123.123.123.123';",
      "836:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "837:         $_SERVER['REMOTE_ADDR']          = '2001:db8:1234:ffff:ffff:ffff:ffff:ffff';",
      "839:         $config           = new App();",
      "840:         $config->proxyIPs = ['2001:db8:1234::/48' => 'X-Forwarded-For'];",
      "841:         $this->request    = new Request($config);",
      "848:     public function testGetIPAddressThruProxyOutOfSubnet()",
      "854:         $config           = new App();",
      "855:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
      "856:         $this->request    = new Request($config);",
      "857:         $this->request->populateHeaders();",
      "860:         $this->assertSame($expected, $this->request->getIPAddress());",
      "861:     }",
      "863:     public function testGetIPAddressThruProxyOutOfSubnetIPv6()",
      "864:     {",
      "865:         $expected                        = '2001:db8:1235:ffff:ffff:ffff:ffff:ffff';",
      "866:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "867:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
      "869:         $config           = new App();",
      "870:         $config->proxyIPs = ['2001:db8:1234::/48' => 'X-Forwarded-For'];",
      "871:         $this->request    = new Request($config);",
      "872:         $this->request->populateHeaders();",
      "875:         $this->assertSame($expected, $this->request->getIPAddress());",
      "876:     }",
      "878:     public function testGetIPAddressThruProxyBothIPv4AndIPv6()",
      "879:     {",
      "880:         $expected                        = '2001:db8:1235:ffff:ffff:ffff:ffff:ffff';",
      "881:         $_SERVER['REMOTE_ADDR']          = $expected;",
      "882:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
      "884:         $config           = new App();",
      "885:         $config->proxyIPs = [",
      "886:             '192.168.5.0/28'     => 'X-Forwarded-For',",
      "887:             '2001:db8:1234::/48' => 'X-Forwarded-For',",
      "888:         ];",
      "889:         $this->request = new Request($config);",
      "896:     public function testGetIPAddressThruProxyInvalidConfigString()",
      "897:     {",
      "898:         $this->expectException(ConfigException::class);",
      "899:         $this->expectExceptionMessage(",
      "900:             'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
      "901:         );",
      "903:         $config           = new App();",
      "904:         $config->proxyIPs = '192.168.5.0/28';",
      "905:         $this->request    = new Request($config);",
      "906:         $this->request->populateHeaders();",
      "908:         $this->request->getIPAddress();",
      "909:     }",
      "911:     public function testGetIPAddressThruProxyInvalidConfigArray()",
      "912:     {",
      "913:         $this->expectException(ConfigException::class);",
      "914:         $this->expectExceptionMessage(",
      "915:             'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
      "916:         );",
      "918:         $config           = new App();",
      "919:         $config->proxyIPs = ['192.168.5.0/28'];",
      "920:         $this->request    = new Request($config);",
      "921:         $this->request->populateHeaders();",
      "923:         $this->request->getIPAddress();",
      "924:     }",
      "",
      "---------------"
    ],
    "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php": [
      "File: tests/system/HTTP/RequestTest.php -> tests/system/HTTP/RequestTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "609:     {",
      "610:         $expected                        = '123.123.123.123';",
      "611:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
      "614:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "616:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "612:         $config                          = new App();",
      "613:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "615:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "614:         $config           = new App();",
      "615:         $config->proxyIPs = [",
      "616:             '10.0.1.200'     => 'X-Forwarded-For',",
      "617:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "618:         ];",
      "619:         $this->request = new Request($config);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "623:     {",
      "624:         $expected                        = '123.456.23.123';",
      "625:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
      "628:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "630:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "626:         $config                          = new App();",
      "627:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "629:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "631:         $config                          = new App();",
      "632:         $config->proxyIPs                = [",
      "633:             '10.0.1.200'     => 'X-Forwarded-For',",
      "634:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "635:         ];",
      "637:         $this->request = new Request($config);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "637:     {",
      "638:         $expected                        = '123.456.23.123';",
      "639:         $_SERVER['REMOTE_ADDR']          = '10.10.1.200';",
      "642:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "644:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "640:         $config                          = new App();",
      "641:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
      "643:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "650:         $config           = new App();",
      "651:         $config->proxyIPs = [",
      "652:             '10.0.1.200'     => 'X-Forwarded-For',",
      "653:             '192.168.5.0/24' => 'X-Forwarded-For',",
      "654:         ];",
      "655:         $this->request = new Request($config);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "651:     {",
      "652:         $expected                        = '123.123.123.123';",
      "653:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
      "656:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "658:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "654:         $config                          = new App();",
      "655:         $config->proxyIPs                = ['192.168.5.0/24'];",
      "657:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "668:         $config           = new App();",
      "669:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
      "670:         $this->request    = new Request($config);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "665:     {",
      "666:         $expected                        = '123.123.123.123';",
      "667:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
      "670:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
      "672:         $this->request->populateHeaders();",
      "",
      "[Removed Lines]",
      "668:         $config                          = new App();",
      "669:         $config->proxyIPs                = ['192.168.5.0/28'];",
      "671:         $this->request                   = new Request($config);",
      "",
      "[Added Lines]",
      "683:         $config           = new App();",
      "684:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
      "685:         $this->request    = new Request($config);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6cdb5a63cb17fbc2c47f69f3ee6f0c059a4ecb92",
      "candidate_info": {
        "commit_hash": "6cdb5a63cb17fbc2c47f69f3ee6f0c059a4ecb92",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/6cdb5a63cb17fbc2c47f69f3ee6f0c059a4ecb92",
        "files": [
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: add command prompt",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "374486a75a3b5f16f00a8cf7b2feed39cc75bf4f",
      "candidate_info": {
        "commit_hash": "374486a75a3b5f16f00a8cf7b2feed39cc75bf4f",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/374486a75a3b5f16f00a8cf7b2feed39cc75bf4f",
        "files": [
          "tests/system/HTTP/IncomingRequestTest.php"
        ],
        "message": "test: add test",
        "before_after_code_files": [
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ],
          "candidate": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "875:         $this->assertSame($expected, $this->request->getIPAddress());",
          "876:     }",
          "878:     public function testGetIPAddressThruProxyInvalidConfigString()",
          "879:     {",
          "880:         $this->expectException(ConfigException::class);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "878:     public function testGetIPAddressThruProxyBothIPv4AndIPv6()",
          "879:     {",
          "880:         $expected                        = '2001:db8:1235:ffff:ffff:ffff:ffff:ffff';",
          "881:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "882:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
          "884:         $config           = new App();",
          "885:         $config->proxyIPs = [",
          "886:             '192.168.5.0/28'     => 'X-Forwarded-For',",
          "887:             '2001:db8:1234::/48' => 'X-Forwarded-For',",
          "888:         ];",
          "889:         $this->request = new Request($config);",
          "890:         $this->request->populateHeaders();",
          "893:         $this->assertSame($expected, $this->request->getIPAddress());",
          "894:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "285c06251d7ece77172896a748ffd8adbad4ccde",
      "candidate_info": {
        "commit_hash": "285c06251d7ece77172896a748ffd8adbad4ccde",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/285c06251d7ece77172896a748ffd8adbad4ccde",
        "files": [
          "tests/system/HTTP/IncomingRequestTest.php"
        ],
        "message": "test: add test cases",
        "before_after_code_files": [
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ],
          "candidate": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace CodeIgniter\\HTTP;",
          "14: use CodeIgniter\\HTTP\\Exceptions\\HTTPException;",
          "15: use CodeIgniter\\HTTP\\Files\\UploadedFile;",
          "16: use CodeIgniter\\Test\\CIUnitTestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use CodeIgniter\\Exceptions\\ConfigException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "793:         $this->assertSame($expected, $this->request->getIPAddress());",
          "794:     }",
          "797: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "797:     public function testGetIPAddressThruProxyInvalidConfigString()",
          "798:     {",
          "799:         $this->expectException(ConfigException::class);",
          "800:         $this->expectExceptionMessage(",
          "801:             'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
          "802:         );",
          "804:         $config           = new App();",
          "805:         $config->proxyIPs = '192.168.5.0/28';",
          "806:         $this->request    = new Request($config);",
          "807:         $this->request->populateHeaders();",
          "809:         $this->request->getIPAddress();",
          "810:     }",
          "812:     public function testGetIPAddressThruProxyInvalidConfigArray()",
          "813:     {",
          "814:         $this->expectException(ConfigException::class);",
          "815:         $this->expectExceptionMessage(",
          "816:             'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
          "817:         );",
          "819:         $config           = new App();",
          "820:         $config->proxyIPs = ['192.168.5.0/28'];",
          "821:         $this->request    = new Request($config);",
          "822:         $this->request->populateHeaders();",
          "824:         $this->request->getIPAddress();",
          "825:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a823831df7a460f8da1862df2ee8cd8a8ef001f",
      "candidate_info": {
        "commit_hash": "5a823831df7a460f8da1862df2ee8cd8a8ef001f",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/5a823831df7a460f8da1862df2ee8cd8a8ef001f",
        "files": [
          "user_guide_src/source/installation/upgrade_4211.rst"
        ],
        "message": "docs: add Project Files in upgrade_4211.rst",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "2554dd1b553cf75c2191816caa3e4071b5161422",
      "candidate_info": {
        "commit_hash": "2554dd1b553cf75c2191816caa3e4071b5161422",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/2554dd1b553cf75c2191816caa3e4071b5161422",
        "files": [
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: shorten the width of the table",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
      "candidate_info": {
        "commit_hash": "fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
        "files": [
          "system/HTTP/RequestTrait.php"
        ],
        "message": "docs: add doc comment",
        "before_after_code_files": [
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ],
          "candidate": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ]
        }
      },
      "candidate_diff": {
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php"
        ]
      }
    },
    {
      "candidate_hash": "a7925f69451ae3209b3ac9cce01128385be952dd",
      "candidate_info": {
        "commit_hash": "a7925f69451ae3209b3ac9cce01128385be952dd",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/a7925f69451ae3209b3ac9cce01128385be952dd",
        "files": [
          "app/Config/App.php"
        ],
        "message": "docs: fix by proofreading\n\nCo-authored-by: John Paul E. Balandan, CPA <paulbalandan@gmail.com>",
        "before_after_code_files": [
          "app/Config/App.php||app/Config/App.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "app/Config/App.php||app/Config/App.php"
          ],
          "candidate": [
            "app/Config/App.php||app/Config/App.php"
          ]
        }
      },
      "candidate_diff": {
        "app/Config/App.php||app/Config/App.php": [
          "File: app/Config/App.php -> app/Config/App.php"
        ]
      }
    },
    {
      "candidate_hash": "1c8b0890749338888ef3c7ef897072fb5390fdd7",
      "candidate_info": {
        "commit_hash": "1c8b0890749338888ef3c7ef897072fb5390fdd7",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/1c8b0890749338888ef3c7ef897072fb5390fdd7",
        "files": [
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: session id -> session ID",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "feab19b4cdd457cc739114c176803f10cd47a750",
      "candidate_info": {
        "commit_hash": "feab19b4cdd457cc739114c176803f10cd47a750",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/feab19b4cdd457cc739114c176803f10cd47a750",
        "files": [
          "system/HTTP/RequestTrait.php"
        ],
        "message": "docs: add @TODO",
        "before_after_code_files": [
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ],
          "candidate": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ]
        }
      },
      "candidate_diff": {
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php"
        ]
      }
    },
    {
      "candidate_hash": "3128af94ff7e025edabfaf731367d8427fdd23a8",
      "candidate_info": {
        "commit_hash": "3128af94ff7e025edabfaf731367d8427fdd23a8",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/3128af94ff7e025edabfaf731367d8427fdd23a8",
        "files": [
          "user_guide_src/source/changelogs/v4.2.11.rst",
          "user_guide_src/source/installation/upgrade_4211.rst",
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: fix typo",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "a2cfa3bbaa865f8f12a239d496cb3d72bc448a39",
      "candidate_info": {
        "commit_hash": "a2cfa3bbaa865f8f12a239d496cb3d72bc448a39",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/a2cfa3bbaa865f8f12a239d496cb3d72bc448a39",
        "files": [
          "system/Session/Handlers/DatabaseHandler.php",
          "system/Session/Handlers/MemcachedHandler.php",
          "system/Session/Handlers/RedisHandler.php"
        ],
        "message": "fix: support multiple session cookies",
        "before_after_code_files": [
          "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php",
          "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php",
          "system/Session/Handlers/RedisHandler.php||system/Session/Handlers/RedisHandler.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php": [
          "File: system/Session/Handlers/DatabaseHandler.php -> system/Session/Handlers/DatabaseHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     protected $rowExists = false;",
          "66:     public function __construct(AppConfig $config, string $ipAddress)",
          "67:     {",
          "68:         parent::__construct($config, $ipAddress);",
          "69:         $this->table = $config->sessionSavePath;",
          "71:         if (empty($this->table)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:     protected string $idPrefix;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:         $this->db = Database::connect($this->DBGroup);",
          "79:         $this->platform = $this->db->getPlatform();",
          "80:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:         $this->idPrefix = $config->sessionCookieName . ':';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:             $this->sessionID = $id;",
          "116:         }",
          "120:         if ($this->matchIP) {",
          "121:             $builder = $builder->where('ip_address', $this->ipAddress);",
          "",
          "[Removed Lines]",
          "118:         $builder = $this->db->table($this->table)->where('id', $id);",
          "",
          "[Added Lines]",
          "127:         $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "183:         if ($this->rowExists === false) {",
          "184:             $insertData = [",
          "186:                 'ip_address' => $this->ipAddress,",
          "187:                 'data'       => $this->prepareData($data),",
          "188:             ];",
          "",
          "[Removed Lines]",
          "185:                 'id'         => $id,",
          "",
          "[Added Lines]",
          "194:                 'id'         => $this->idPrefix . $id,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "197:             return true;",
          "198:         }",
          "202:         if ($this->matchIP) {",
          "203:             $builder = $builder->where('ip_address', $this->ipAddress);",
          "",
          "[Removed Lines]",
          "200:         $builder = $this->db->table($this->table)->where('id', $id);",
          "",
          "[Added Lines]",
          "209:         $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "242:     public function destroy($id): bool",
          "243:     {",
          "244:         if ($this->lock) {",
          "247:             if ($this->matchIP) {",
          "248:                 $builder = $builder->where('ip_address', $this->ipAddress);",
          "",
          "[Removed Lines]",
          "245:             $builder = $this->db->table($this->table)->where('id', $id);",
          "",
          "[Added Lines]",
          "254:             $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
          "",
          "---------------"
        ],
        "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php": [
          "File: system/Session/Handlers/MemcachedHandler.php -> system/Session/Handlers/MemcachedHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:             throw SessionException::forEmptySavepath();",
          "62:         }",
          "64:         if ($this->matchIP === true) {",
          "65:             $this->keyPrefix .= $this->ipAddress . ':';",
          "66:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:         $this->keyPrefix .= $config->sessionCookieName . ':';",
          "",
          "---------------"
        ],
        "system/Session/Handlers/RedisHandler.php||system/Session/Handlers/RedisHandler.php": [
          "File: system/Session/Handlers/RedisHandler.php -> system/Session/Handlers/RedisHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:         $this->setSavePath();",
          "74:         if ($this->matchIP === true) {",
          "75:             $this->keyPrefix .= $this->ipAddress . ':';",
          "76:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         $this->keyPrefix .= $config->sessionCookieName . ':';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "caeb549a11443df6438564e29b021766b4466b4b",
      "candidate_info": {
        "commit_hash": "caeb549a11443df6438564e29b021766b4466b4b",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/caeb549a11443df6438564e29b021766b4466b4b",
        "files": [
          "system/HTTP/RequestTrait.php"
        ],
        "message": "refactor: extract method",
        "before_after_code_files": [
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ],
          "candidate": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ]
        }
      },
      "candidate_diff": {
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:                     if ($proxyIP === $this->ipAddress) {",
          "100:                         }",
          "101:                     }",
          "",
          "[Removed Lines]",
          "83:                         $spoof     = null;",
          "84:                         $headerObj = $this->header($header);",
          "86:                         if ($headerObj !== null) {",
          "87:                             $spoof = $headerObj->getValue();",
          "92:                             sscanf($spoof, '%[^,]', $spoof);",
          "94:                             if (! $ipValidator($spoof)) {",
          "95:                                 $spoof = null;",
          "96:                             } else {",
          "97:                                 $this->ipAddress = $spoof;",
          "98:                                 break;",
          "99:                             }",
          "",
          "[Added Lines]",
          "83:                         $spoof = $this->getClientIP($header);",
          "85:                         if ($spoof !== null) {",
          "86:                             $this->ipAddress = $spoof;",
          "87:                             break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:                 if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
          "168:                     }",
          "169:                 }",
          "170:             }",
          "",
          "[Removed Lines]",
          "151:                     $spoof     = null;",
          "152:                     $headerObj = $this->header($header);",
          "154:                     if ($headerObj !== null) {",
          "155:                         $spoof = $headerObj->getValue();",
          "160:                         sscanf($spoof, '%[^,]', $spoof);",
          "162:                         if (! $ipValidator($spoof)) {",
          "163:                             $spoof = null;",
          "164:                         } else {",
          "165:                             $this->ipAddress = $spoof;",
          "166:                             break;",
          "167:                         }",
          "",
          "[Added Lines]",
          "139:                     $spoof = $this->getClientIP($header);",
          "141:                     if ($spoof !== null) {",
          "142:                         $this->ipAddress = $spoof;",
          "143:                         break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "177:         return empty($this->ipAddress) ? '' : $this->ipAddress;",
          "178:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:     private function getClientIP(string $header): ?string",
          "160:     {",
          "161:         $ipValidator = [",
          "162:             new FormatRules(),",
          "163:             'valid_ip',",
          "164:         ];",
          "165:         $spoof     = null;",
          "166:         $headerObj = $this->header($header);",
          "168:         if ($headerObj !== null) {",
          "169:             $spoof = $headerObj->getValue();",
          "174:             sscanf($spoof, '%[^,]', $spoof);",
          "176:             if (! $ipValidator($spoof)) {",
          "177:                 $spoof = null;",
          "178:             }",
          "179:         }",
          "181:         return $spoof;",
          "182:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab3ec6f19b158e1492419d1d570c75b60c111a68",
      "candidate_info": {
        "commit_hash": "ab3ec6f19b158e1492419d1d570c75b60c111a68",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/ab3ec6f19b158e1492419d1d570c75b60c111a68",
        "files": [
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: fix wrong paths in sample commands",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "cf7c9e9c61e0472f20a7a187d96a1d3bf4520da3",
      "candidate_info": {
        "commit_hash": "cf7c9e9c61e0472f20a7a187d96a1d3bf4520da3",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/cf7c9e9c61e0472f20a7a187d96a1d3bf4520da3",
        "files": [
          "user_guide_src/source/changelogs/v4.2.11.rst",
          "user_guide_src/source/installation/upgrade_4211.rst"
        ],
        "message": "docs: add changelog and upgrading guide",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "3bbd391a51c5bfcc6d108a9d19a09677a37641e9",
      "candidate_info": {
        "commit_hash": "3bbd391a51c5bfcc6d108a9d19a09677a37641e9",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/3bbd391a51c5bfcc6d108a9d19a09677a37641e9",
        "files": [
          "user_guide_src/source/changelogs/v4.2.11.rst",
          "user_guide_src/source/installation/upgrade_4211.rst"
        ],
        "message": "docs: add changelog and upgrading",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
      "candidate_info": {
        "commit_hash": "cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
        "files": [
          "app/Config/App.php",
          "phpstan-baseline.neon.dist",
          "system/HTTP/Request.php",
          "system/HTTP/RequestTrait.php",
          "system/Test/Mock/MockAppConfig.php",
          "system/Test/Mock/MockCLIConfig.php",
          "tests/system/HTTP/IncomingRequestTest.php",
          "tests/system/HTTP/RequestTest.php"
        ],
        "message": "fix: format of $proxyIPs\n\nSpecify HTTP header name for security reasons.",
        "before_after_code_files": [
          "app/Config/App.php||app/Config/App.php",
          "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist",
          "system/HTTP/Request.php||system/HTTP/Request.php",
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php",
          "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php",
          "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php",
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php",
          "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "app/Config/App.php||app/Config/App.php",
            "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist",
            "system/HTTP/Request.php||system/HTTP/Request.php",
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php",
            "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php",
            "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php",
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php",
            "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php"
          ],
          "candidate": [
            "app/Config/App.php||app/Config/App.php",
            "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist",
            "system/HTTP/Request.php||system/HTTP/Request.php",
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php",
            "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php",
            "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php",
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php",
            "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php"
          ]
        }
      },
      "candidate_diff": {
        "app/Config/App.php||app/Config/App.php": [
          "File: app/Config/App.php -> app/Config/App.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "346:     public $proxyIPs = '';",
          "",
          "[Added Lines]",
          "349:     public $proxyIPs = [];",
          "",
          "---------------"
        ],
        "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist": [
          "File: phpstan-baseline.neon.dist -> phpstan-baseline.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "500:    count: 1",
          "501:    path: system/HTTP/RedirectResponse.php",
          "508:   -",
          "509:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$uri \\\\(CodeIgniter\\\\\\\\HTTP\\\\\\\\URI\\\\) in empty\\\\(\\\\) is not falsy\\\\.$#\"",
          "510:    count: 1",
          "",
          "[Removed Lines]",
          "503:   -",
          "504:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$proxyIPs \\\\(array\\\\|string\\\\) on left side of \\\\?\\\\? is not nullable\\\\.$#\"",
          "505:    count: 1",
          "506:    path: system/HTTP/Request.php",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "system/HTTP/Request.php||system/HTTP/Request.php": [
          "File: system/HTTP/Request.php -> system/HTTP/Request.php"
        ],
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace CodeIgniter\\HTTP;",
          "14: use CodeIgniter\\Validation\\FormatRules;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use CodeIgniter\\Exceptions\\ConfigException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:         $proxyIPs = $this->proxyIPs ?? config('App')->proxyIPs;",
          "65:         }",
          "67:         $this->ipAddress = $this->getServer('REMOTE_ADDR');",
          "69:         if ($proxyIPs) {",
          "87:                 }",
          "112:                     }",
          "131:                     }",
          "151:                     }",
          "152:                 }",
          "153:             }",
          "",
          "[Removed Lines]",
          "63:         if (! empty($proxyIPs) && ! is_array($proxyIPs)) {",
          "64:             $proxyIPs = explode(',', str_replace(' ', '', $proxyIPs));",
          "70:             foreach (['x-forwarded-for', 'client-ip', 'x-client-ip', 'x-cluster-client-ip'] as $header) {",
          "71:                 $spoof     = null;",
          "72:                 $headerObj = $this->header($header);",
          "74:                 if ($headerObj !== null) {",
          "75:                     $spoof = $headerObj->getValue();",
          "80:                     sscanf($spoof, '%[^,]', $spoof);",
          "82:                     if (! $ipValidator($spoof)) {",
          "83:                         $spoof = null;",
          "84:                     } else {",
          "85:                         break;",
          "86:                     }",
          "88:             }",
          "90:             if ($spoof) {",
          "91:                 foreach ($proxyIPs as $proxyIP) {",
          "93:                     if (strpos($proxyIP, '/') === false) {",
          "96:                         if ($proxyIP === $this->ipAddress) {",
          "97:                             $this->ipAddress = $spoof;",
          "98:                             break;",
          "99:                         }",
          "101:                         continue;",
          "102:                     }",
          "105:                     if (! isset($separator)) {",
          "106:                         $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
          "107:                     }",
          "110:                     if (strpos($proxyIP, $separator) === false) {",
          "111:                         continue;",
          "115:                     if (! isset($ip, $sprintf)) {",
          "116:                         if ($separator === ':') {",
          "118:                             $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
          "120:                             for ($j = 0; $j < 8; $j++) {",
          "121:                                 $ip[$j] = intval($ip[$j], 16);",
          "122:                             }",
          "124:                             $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
          "125:                         } else {",
          "126:                             $ip      = explode('.', $this->ipAddress);",
          "127:                             $sprintf = '%08b%08b%08b%08b';",
          "128:                         }",
          "130:                         $ip = vsprintf($sprintf, $ip);",
          "134:                     sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
          "137:                     if ($separator === ':') {",
          "138:                         $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
          "140:                         for ($i = 0; $i < 8; $i++) {",
          "141:                             $netaddr[$i] = intval($netaddr[$i], 16);",
          "142:                         }",
          "143:                     } else {",
          "144:                         $netaddr = explode('.', $netaddr);",
          "145:                     }",
          "148:                     if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
          "149:                         $this->ipAddress = $spoof;",
          "150:                         break;",
          "",
          "[Added Lines]",
          "65:         if (! empty($proxyIPs)) {",
          "67:             if (! is_array($proxyIPs) || is_int(array_keys($proxyIPs)[0])) {",
          "68:                 throw new ConfigException(",
          "69:                     'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
          "70:                 );",
          "71:             }",
          "77:             foreach ($proxyIPs as $proxyIP => $header) {",
          "79:                 if (strpos($proxyIP, '/') === false) {",
          "82:                     if ($proxyIP === $this->ipAddress) {",
          "83:                         $spoof     = null;",
          "84:                         $headerObj = $this->header($header);",
          "86:                         if ($headerObj !== null) {",
          "87:                             $spoof = $headerObj->getValue();",
          "92:                             sscanf($spoof, '%[^,]', $spoof);",
          "94:                             if (! $ipValidator($spoof)) {",
          "95:                                 $spoof = null;",
          "96:                             } else {",
          "97:                                 $this->ipAddress = $spoof;",
          "98:                                 break;",
          "99:                             }",
          "100:                         }",
          "101:                     }",
          "103:                     continue;",
          "104:                 }",
          "107:                 if (! isset($separator)) {",
          "108:                     $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
          "112:                 if (strpos($proxyIP, $separator) === false) {",
          "113:                     continue;",
          "114:                 }",
          "117:                 if (! isset($ip, $sprintf)) {",
          "118:                     if ($separator === ':') {",
          "120:                         $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
          "122:                         for ($j = 0; $j < 8; $j++) {",
          "123:                             $ip[$j] = intval($ip[$j], 16);",
          "124:                         }",
          "126:                         $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
          "127:                     } else {",
          "128:                         $ip      = explode('.', $this->ipAddress);",
          "129:                         $sprintf = '%08b%08b%08b%08b';",
          "132:                     $ip = vsprintf($sprintf, $ip);",
          "133:                 }",
          "136:                 sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
          "139:                 if ($separator === ':') {",
          "140:                     $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
          "142:                     for ($i = 0; $i < 8; $i++) {",
          "143:                         $netaddr[$i] = intval($netaddr[$i], 16);",
          "145:                 } else {",
          "146:                     $netaddr = explode('.', $netaddr);",
          "147:                 }",
          "150:                 if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
          "151:                     $spoof     = null;",
          "152:                     $headerObj = $this->header($header);",
          "154:                     if ($headerObj !== null) {",
          "155:                         $spoof = $headerObj->getValue();",
          "160:                         sscanf($spoof, '%[^,]', $spoof);",
          "162:                         if (! $ipValidator($spoof)) {",
          "163:                             $spoof = null;",
          "164:                         } else {",
          "165:                             $this->ipAddress = $spoof;",
          "166:                             break;",
          "167:                         }",
          "",
          "---------------"
        ],
        "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php": [
          "File: system/Test/Mock/MockAppConfig.php -> system/Test/Mock/MockAppConfig.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     public $cookieSecure     = false;",
          "24:     public $cookieHTTPOnly   = false;",
          "25:     public $cookieSameSite   = 'Lax';",
          "27:     public $CSRFTokenName    = 'csrf_test_name';",
          "28:     public $CSRFHeaderName   = 'X-CSRF-TOKEN';",
          "29:     public $CSRFCookieName   = 'csrf_cookie_name';",
          "",
          "[Removed Lines]",
          "26:     public $proxyIPs         = '';",
          "",
          "[Added Lines]",
          "26:     public $proxyIPs         = [];",
          "",
          "---------------"
        ],
        "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php": [
          "File: system/Test/Mock/MockCLIConfig.php -> system/Test/Mock/MockCLIConfig.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     public $cookieSecure     = false;",
          "24:     public $cookieHTTPOnly   = false;",
          "25:     public $cookieSameSite   = 'Lax';",
          "27:     public $CSRFTokenName    = 'csrf_test_name';",
          "28:     public $CSRFCookieName   = 'csrf_cookie_name';",
          "29:     public $CSRFExpire       = 7200;",
          "",
          "[Removed Lines]",
          "26:     public $proxyIPs         = '';",
          "",
          "[Added Lines]",
          "26:     public $proxyIPs         = [];",
          "",
          "---------------"
        ],
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "714:         $expected                        = '123.123.123.123';",
          "715:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "716:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "720:         $this->request = new Request($config);",
          "721:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "717:         $config                          = new App();",
          "718:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "718:         $config           = new App();",
          "719:         $config->proxyIPs = [",
          "720:             '10.0.1.200'     => 'X-Forwarded-For',",
          "721:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "722:         ];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "729:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "730:         $expected                        = '10.0.1.200';",
          "731:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "735:         $this->request = new Request($config);",
          "736:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "732:         $config                          = new App();",
          "733:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "736:         $config           = new App();",
          "737:         $config->proxyIPs = [",
          "738:             '10.0.1.200'     => 'X-Forwarded-For',",
          "739:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "740:         ];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "744:         $expected                        = '10.10.1.200';",
          "745:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "746:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "750:         $this->request = new Request($config);",
          "751:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "747:         $config                          = new App();",
          "748:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "754:         $config           = new App();",
          "755:         $config->proxyIPs = [",
          "756:             '10.0.1.200'     => 'X-Forwarded-For',",
          "757:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "758:         ];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "759:         $expected                        = '123.123.123.123';",
          "760:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "761:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "766:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "762:         $config                          = new App();",
          "763:         $config->proxyIPs                = ['192.168.5.0/24'];",
          "765:         $this->request = new Request($config);",
          "",
          "[Added Lines]",
          "772:         $config           = new App();",
          "773:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
          "774:         $this->request    = new Request($config);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "773:     {",
          "774:         $expected                        = '192.168.5.21';",
          "775:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "778:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
          "780:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "776:         $config                          = new App();",
          "777:         $config->proxyIPs                = ['192.168.5.0/28'];",
          "779:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "787:         $config           = new App();",
          "788:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
          "789:         $this->request    = new Request($config);",
          "",
          "---------------"
        ],
        "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php": [
          "File: tests/system/HTTP/RequestTest.php -> tests/system/HTTP/RequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:     {",
          "610:         $expected                        = '123.123.123.123';",
          "611:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "614:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "616:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "612:         $config                          = new App();",
          "613:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "615:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "614:         $config           = new App();",
          "615:         $config->proxyIPs = [",
          "616:             '10.0.1.200'     => 'X-Forwarded-For',",
          "617:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "618:         ];",
          "619:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "623:     {",
          "624:         $expected                        = '123.456.23.123';",
          "625:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "628:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "630:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "626:         $config                          = new App();",
          "627:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "629:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "631:         $config                          = new App();",
          "632:         $config->proxyIPs                = [",
          "633:             '10.0.1.200'     => 'X-Forwarded-For',",
          "634:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "635:         ];",
          "637:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "637:     {",
          "638:         $expected                        = '123.456.23.123';",
          "639:         $_SERVER['REMOTE_ADDR']          = '10.10.1.200';",
          "642:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "644:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "640:         $config                          = new App();",
          "641:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "643:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "650:         $config           = new App();",
          "651:         $config->proxyIPs = [",
          "652:             '10.0.1.200'     => 'X-Forwarded-For',",
          "653:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "654:         ];",
          "655:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "651:     {",
          "652:         $expected                        = '123.123.123.123';",
          "653:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "656:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "658:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "654:         $config                          = new App();",
          "655:         $config->proxyIPs                = ['192.168.5.0/24'];",
          "657:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "668:         $config           = new App();",
          "669:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
          "670:         $this->request    = new Request($config);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "665:     {",
          "666:         $expected                        = '123.123.123.123';",
          "667:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "670:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "672:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "668:         $config                          = new App();",
          "669:         $config->proxyIPs                = ['192.168.5.0/28'];",
          "671:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "683:         $config           = new App();",
          "684:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
          "685:         $this->request    = new Request($config);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c1f2233fb218d02fbf931d5c2bb93e104e90413e",
      "candidate_info": {
        "commit_hash": "c1f2233fb218d02fbf931d5c2bb93e104e90413e",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/c1f2233fb218d02fbf931d5c2bb93e104e90413e",
        "files": [
          "user_guide_src/source/incoming/request.rst"
        ],
        "message": "docs: update getIPAddress()",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "93abfb18c14ed9413a8d4131400fab4fc3df3bf2",
      "candidate_info": {
        "commit_hash": "93abfb18c14ed9413a8d4131400fab4fc3df3bf2",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/93abfb18c14ed9413a8d4131400fab4fc3df3bf2",
        "files": [
          "system/Session/Handlers/DatabaseHandler.php",
          "system/Session/Handlers/MemcachedHandler.php"
        ],
        "message": "style: break long lines",
        "before_after_code_files": [
          "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php",
          "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php": [
          "File: system/Session/Handlers/DatabaseHandler.php -> system/Session/Handlers/DatabaseHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:         $separator = ' ';",
          "277:         $interval  = implode($separator, ['', \"{$max_lifetime} second\", '']);",
          "280:     }",
          "",
          "[Removed Lines]",
          "279:         return $this->db->table($this->table)->where('timestamp <', \"now() - INTERVAL {$interval}\", false)->delete() ? 1 : $this->fail();",
          "",
          "[Added Lines]",
          "279:         return $this->db->table($this->table)->where(",
          "280:             'timestamp <',",
          "281:             \"now() - INTERVAL {$interval}\",",
          "282:             false",
          "283:         )->delete() ? 1 : $this->fail();",
          "",
          "---------------"
        ],
        "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php": [
          "File: system/Session/Handlers/MemcachedHandler.php -> system/Session/Handlers/MemcachedHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:             $serverList[] = $server['host'] . ':' . $server['port'];",
          "90:         }",
          "93:             $this->memcached = null;",
          "94:             $this->logger->error('Session: Invalid Memcached save path format: ' . $this->savePath);",
          "",
          "[Removed Lines]",
          "92:         if (! preg_match_all('#,?([^,:]+)\\:(\\d{1,5})(?:\\:(\\d+))?#', $this->savePath, $matches, PREG_SET_ORDER)) {",
          "",
          "[Added Lines]",
          "92:         if (",
          "93:             ! preg_match_all(",
          "94:                 '#,?([^,:]+)\\:(\\d{1,5})(?:\\:(\\d+))?#',",
          "95:                 $this->savePath,",
          "96:                 $matches,",
          "97:                 PREG_SET_ORDER",
          "98:             )",
          "99:         ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         foreach ($matches as $match) {",
          "101:             if (in_array($match[1] . ':' . $match[2], $serverList, true)) {",
          "104:                 continue;",
          "105:             }",
          "107:             if (! $this->memcached->addServer($match[1], (int) $match[2], $match[3] ?? 0)) {",
          "109:             } else {",
          "110:                 $serverList[] = $match[1] . ':' . $match[2];",
          "111:             }",
          "",
          "[Removed Lines]",
          "102:                 $this->logger->debug('Session: Memcached server pool already has ' . $match[1] . ':' . $match[2]);",
          "108:                 $this->logger->error('Could not add ' . $match[1] . ':' . $match[2] . ' to Memcached server pool.');",
          "",
          "[Added Lines]",
          "109:                 $this->logger->debug(",
          "110:                     'Session: Memcached server pool already has ' . $match[1] . ':' . $match[2]",
          "111:                 );",
          "117:                 $this->logger->error(",
          "118:                     'Could not add ' . $match[1] . ':' . $match[2] . ' to Memcached server pool.'",
          "119:                 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260:             }",
          "262:             if (! $this->memcached->set($lockKey, Time::now()->getTimestamp(), 300)) {",
          "265:                 return false;",
          "266:             }",
          "",
          "[Removed Lines]",
          "263:                 $this->logger->error('Session: Error while trying to obtain lock for ' . $this->keyPrefix . $sessionID);",
          "",
          "[Added Lines]",
          "274:                 $this->logger->error(",
          "275:                     'Session: Error while trying to obtain lock for ' . $this->keyPrefix . $sessionID",
          "276:                 );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "270:         } while (++$attempt < 30);",
          "272:         if ($attempt === 30) {",
          "275:             return false;",
          "276:         }",
          "",
          "[Removed Lines]",
          "273:             $this->logger->error('Session: Unable to obtain lock for ' . $this->keyPrefix . $sessionID . ' after 30 attempts, aborting.');",
          "",
          "[Added Lines]",
          "286:             $this->logger->error(",
          "287:                 'Session: Unable to obtain lock for ' . $this->keyPrefix . $sessionID . ' after 30 attempts, aborting.'",
          "288:             );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "290:                 ! $this->memcached->delete($this->lockKey)",
          "291:                 && $this->memcached->getResultCode() !== Memcached::RES_NOTFOUND",
          "292:             ) {",
          "295:                 return false;",
          "296:             }",
          "",
          "[Removed Lines]",
          "293:                 $this->logger->error('Session: Error while trying to free lock for ' . $this->lockKey);",
          "",
          "[Added Lines]",
          "308:                 $this->logger->error(",
          "309:                     'Session: Error while trying to free lock for ' . $this->lockKey",
          "310:                 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "511b28350a9fed8e1591c4697d38e72ed9d066d9",
      "candidate_info": {
        "commit_hash": "511b28350a9fed8e1591c4697d38e72ed9d066d9",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/511b28350a9fed8e1591c4697d38e72ed9d066d9",
        "files": [
          "tests/system/HTTP/IncomingRequestTest.php"
        ],
        "message": "test: add tests for IPv6",
        "before_after_code_files": [
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ],
          "candidate": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:         $this->assertSame($expected, $this->request->getIPAddress());",
          "729:     }",
          "731:     public function testGetIPAddressThruProxyInvalidIPAddress()",
          "732:     {",
          "733:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "731:     public function testGetIPAddressThruProxyIPv6()",
          "732:     {",
          "733:         $expected                        = '123.123.123.123';",
          "734:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "735:         $_SERVER['REMOTE_ADDR']          = '2001:db8::2:1';",
          "737:         $config           = new App();",
          "738:         $config->proxyIPs = [",
          "739:             '2001:db8::2:1' => 'X-Forwarded-For',",
          "740:         ];",
          "741:         $this->request = new Request($config);",
          "742:         $this->request->populateHeaders();",
          "745:         $this->assertSame($expected, $this->request->getIPAddress());",
          "746:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "746:         $this->assertSame($expected, $this->request->getIPAddress());",
          "747:     }",
          "749:     public function testGetIPAddressThruProxyNotWhitelisted()",
          "750:     {",
          "751:         $expected                        = '10.10.1.200';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "766:     public function testGetIPAddressThruProxyInvalidIPAddressIPv6()",
          "767:     {",
          "768:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '2001:xyz::1';",
          "769:         $expected                        = '2001:db8::2:1';",
          "770:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "772:         $config           = new App();",
          "773:         $config->proxyIPs = [",
          "774:             '2001:db8::2:1' => 'X-Forwarded-For',",
          "775:         ];",
          "776:         $this->request = new Request($config);",
          "777:         $this->request->populateHeaders();",
          "780:         $this->assertSame($expected, $this->request->getIPAddress());",
          "781:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "764:         $this->assertSame($expected, $this->request->getIPAddress());",
          "765:     }",
          "767:     public function testGetIPAddressThruProxySubnet()",
          "768:     {",
          "769:         $expected                        = '123.123.123.123';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "801:     public function testGetIPAddressThruProxyNotWhitelistedIPv6()",
          "802:     {",
          "803:         $expected                        = '2001:db8::2:2';",
          "804:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "805:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "807:         $config           = new App();",
          "808:         $config->proxyIPs = [",
          "809:             '2001:db8::2:1' => 'X-Forwarded-For',",
          "810:         ];",
          "811:         $this->request = new Request($config);",
          "812:         $this->request->populateHeaders();",
          "815:         $this->assertSame($expected, $this->request->getIPAddress());",
          "816:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "779:         $this->assertSame($expected, $this->request->getIPAddress());",
          "780:     }",
          "782:     public function testGetIPAddressThruProxyOutOfSubnet()",
          "783:     {",
          "784:         $expected                        = '192.168.5.21';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "833:     public function testGetIPAddressThruProxySubnetIPv6()",
          "834:     {",
          "835:         $expected                        = '123.123.123.123';",
          "836:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "837:         $_SERVER['REMOTE_ADDR']          = '2001:db8:1234:ffff:ffff:ffff:ffff:ffff';",
          "839:         $config           = new App();",
          "840:         $config->proxyIPs = ['2001:db8:1234::/48' => 'X-Forwarded-For'];",
          "841:         $this->request    = new Request($config);",
          "842:         $this->request->populateHeaders();",
          "845:         $this->assertSame($expected, $this->request->getIPAddress());",
          "846:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "794:         $this->assertSame($expected, $this->request->getIPAddress());",
          "795:     }",
          "797:     public function testGetIPAddressThruProxyInvalidConfigString()",
          "798:     {",
          "799:         $this->expectException(ConfigException::class);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863:     public function testGetIPAddressThruProxyOutOfSubnetIPv6()",
          "864:     {",
          "865:         $expected                        = '2001:db8:1235:ffff:ffff:ffff:ffff:ffff';",
          "866:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "867:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
          "869:         $config           = new App();",
          "870:         $config->proxyIPs = ['2001:db8:1234::/48' => 'X-Forwarded-For'];",
          "871:         $this->request    = new Request($config);",
          "872:         $this->request->populateHeaders();",
          "875:         $this->assertSame($expected, $this->request->getIPAddress());",
          "876:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "900bc84f4aecc439f6a853ba32f023e6f6f88972",
      "candidate_info": {
        "commit_hash": "900bc84f4aecc439f6a853ba32f023e6f6f88972",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/900bc84f4aecc439f6a853ba32f023e6f6f88972",
        "files": [
          "tests/system/HTTP/IncomingRequestTest.php"
        ],
        "message": "test: fix test names",
        "before_after_code_files": [
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ],
          "candidate": [
            "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:         $this->assertSame($expected, $this->request->getIPAddress());",
          "729:     }",
          "732:     {",
          "733:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "734:         $expected                        = '10.0.1.200';",
          "",
          "[Removed Lines]",
          "731:     public function testGetIPAddressThruProxyInvalid()",
          "",
          "[Added Lines]",
          "731:     public function testGetIPAddressThruProxyInvalidIPAddress()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "779:         $this->assertSame($expected, $this->request->getIPAddress());",
          "780:     }",
          "783:     {",
          "784:         $expected                        = '192.168.5.21';",
          "785:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "",
          "[Removed Lines]",
          "782:     public function testGetIPAddressThruProxyOutofSubnet()",
          "",
          "[Added Lines]",
          "782:     public function testGetIPAddressThruProxyOutOfSubnet()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da068cf182307e0ff5b5be80784da081d9b1092f",
      "candidate_info": {
        "commit_hash": "da068cf182307e0ff5b5be80784da081d9b1092f",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/da068cf182307e0ff5b5be80784da081d9b1092f",
        "files": [
          "user_guide_src/source/libraries/sessions/039.php",
          "user_guide_src/source/libraries/sessions/040.php",
          "user_guide_src/source/libraries/sessions/041.php",
          "user_guide_src/source/libraries/sessions/042.php",
          "user_guide_src/source/libraries/sessions/043.php"
        ],
        "message": "docs: add \"// ...\" in sample code",
        "before_after_code_files": [
          "user_guide_src/source/libraries/sessions/039.php||user_guide_src/source/libraries/sessions/039.php",
          "user_guide_src/source/libraries/sessions/040.php||user_guide_src/source/libraries/sessions/040.php",
          "user_guide_src/source/libraries/sessions/041.php||user_guide_src/source/libraries/sessions/041.php",
          "user_guide_src/source/libraries/sessions/042.php||user_guide_src/source/libraries/sessions/042.php",
          "user_guide_src/source/libraries/sessions/043.php||user_guide_src/source/libraries/sessions/043.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "user_guide_src/source/libraries/sessions/039.php||user_guide_src/source/libraries/sessions/039.php": [
          "File: user_guide_src/source/libraries/sessions/039.php -> user_guide_src/source/libraries/sessions/039.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: class App extends BaseConfig",
          "8: {",
          "10:     public $sessionSavePath = 'ci_sessions';",
          "12: }",
          "",
          "[Removed Lines]",
          "9:     public $sessionDriver   = 'CodeIgniter\\Session\\Handlers\\DatabaseHandler';",
          "",
          "[Added Lines]",
          "10:     public $sessionDriver = 'CodeIgniter\\Session\\Handlers\\DatabaseHandler';",
          "",
          "---------------"
        ],
        "user_guide_src/source/libraries/sessions/040.php||user_guide_src/source/libraries/sessions/040.php": [
          "File: user_guide_src/source/libraries/sessions/040.php -> user_guide_src/source/libraries/sessions/040.php"
        ],
        "user_guide_src/source/libraries/sessions/041.php||user_guide_src/source/libraries/sessions/041.php": [
          "File: user_guide_src/source/libraries/sessions/041.php -> user_guide_src/source/libraries/sessions/041.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: class App extends BaseConfig",
          "8: {",
          "10:     public $sessionSavePath = 'tcp://localhost:6379';",
          "12: }",
          "",
          "[Removed Lines]",
          "9:     public $sessionDiver    = 'CodeIgniter\\Session\\Handlers\\RedisHandler';",
          "",
          "[Added Lines]",
          "10:     public $sessionDiver = 'CodeIgniter\\Session\\Handlers\\RedisHandler';",
          "",
          "---------------"
        ],
        "user_guide_src/source/libraries/sessions/042.php||user_guide_src/source/libraries/sessions/042.php": [
          "File: user_guide_src/source/libraries/sessions/042.php -> user_guide_src/source/libraries/sessions/042.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: class App extends BaseConfig",
          "8: {",
          "10:     public $sessionSavePath = 'localhost:11211';",
          "12: }",
          "",
          "[Removed Lines]",
          "9:     public $sessionDriver   = 'CodeIgniter\\Session\\Handlers\\MemcachedHandler';",
          "",
          "[Added Lines]",
          "10:     public $sessionDriver = 'CodeIgniter\\Session\\Handlers\\MemcachedHandler';",
          "",
          "---------------"
        ],
        "user_guide_src/source/libraries/sessions/043.php||user_guide_src/source/libraries/sessions/043.php": [
          "File: user_guide_src/source/libraries/sessions/043.php -> user_guide_src/source/libraries/sessions/043.php"
        ]
      }
    },
    {
      "candidate_hash": "deb6cd47012249ce4f695bc5887dffac72276223",
      "candidate_info": {
        "commit_hash": "deb6cd47012249ce4f695bc5887dffac72276223",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/deb6cd47012249ce4f695bc5887dffac72276223",
        "files": [
          "system/HTTP/RequestTrait.php"
        ],
        "message": "refactor: use array_key_first()",
        "before_after_code_files": [
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ],
          "candidate": [
            "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
          ]
        }
      },
      "candidate_diff": {
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         $proxyIPs = $this->proxyIPs ?? config('App')->proxyIPs;",
          "65:         if (! empty($proxyIPs)) {",
          "68:                 throw new ConfigException(",
          "69:                     'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
          "70:                 );",
          "",
          "[Removed Lines]",
          "67:             if (! is_array($proxyIPs) || is_int(array_keys($proxyIPs)[0])) {",
          "",
          "[Added Lines]",
          "67:             if (! is_array($proxyIPs) || is_int(array_key_first($proxyIPs))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "933bb062d166d30093739c9e149dcbf4106fa92a",
      "candidate_info": {
        "commit_hash": "933bb062d166d30093739c9e149dcbf4106fa92a",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/933bb062d166d30093739c9e149dcbf4106fa92a",
        "files": [
          "user_guide_src/source/libraries/sessions.rst"
        ],
        "message": "docs: add about session key length",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    }
  ]
}