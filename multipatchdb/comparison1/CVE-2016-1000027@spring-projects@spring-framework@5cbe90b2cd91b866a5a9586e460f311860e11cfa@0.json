{
  "cve_id": "CVE-2016-1000027",
  "cve_desc": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
  "repo": "spring-projects/spring-framework",
  "patch_hash": "5cbe90b2cd91b866a5a9586e460f311860e11cfa",
  "patch_info": {
    "commit_hash": "5cbe90b2cd91b866a5a9586e460f311860e11cfa",
    "repo": "spring-projects/spring-framework",
    "commit_url": "https://github.com/spring-projects/spring-framework/commit/5cbe90b2cd91b866a5a9586e460f311860e11cfa",
    "files": [
      "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java",
      "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java"
    ],
    "message": "Explicit note on Java deserialization",
    "before_after_code_files": [
      "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java||spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java",
      "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java||spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java"
    ]
  },
  "patch_diff": {
    "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java||spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java": [
      "File: spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java -> spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.java"
    ],
    "spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java||spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java": [
      "File: spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java -> spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.java"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f85be8ebef8f35ae48dc3e1095b7146e0d066636",
      "candidate_info": {
        "commit_hash": "f85be8ebef8f35ae48dc3e1095b7146e0d066636",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/f85be8ebef8f35ae48dc3e1095b7146e0d066636",
        "files": [
          "build.gradle",
          "buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy",
          "gradle/wrapper/gradle-wrapper.properties"
        ],
        "message": "Upgrade to Gradle 2.5\n\nIssue: SPR-15039",
        "before_after_code_files": [
          "build.gradle||build.gradle",
          "buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy||buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy",
          "gradle/wrapper/gradle-wrapper.properties||gradle/wrapper/gradle-wrapper.properties"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/arun1607/spring-framework/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build.gradle||build.gradle": [
          "File: build.gradle -> build.gradle",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  }",
          "5:  dependencies {",
          "6:   classpath(\"org.springframework.build.gradle:propdeps-plugin:0.0.7\")",
          "8:  }",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   classpath(\"org.springframework.build.gradle:docbook-reference-plugin:0.2.8\")",
          "",
          "[Added Lines]",
          "7:   classpath(\"io.spring.gradle:docbook-reference-plugin:0.3.1\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1051:  task wrapper(type: Wrapper) {",
          "1052:   description = \"Generates gradlew[.bat] scripts\"",
          "1055:   doLast() {",
          "1056:    def gradleOpts = \"-XX:MaxPermSize=1024m -Xmx1024m\"",
          "",
          "[Removed Lines]",
          "1053:   gradleVersion = \"1.12\"",
          "",
          "[Added Lines]",
          "1053:   gradleVersion = \"2.5\"",
          "",
          "---------------"
        ],
        "buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy||buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy": [
          "File: buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy -> buildSrc/src/main/groovy/org/springframework/build/gradle/MergePlugin.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   Configuration runtimeMerge = project.configurations.create(\"runtimeMerge\")",
          "75:   project.afterEvaluate{",
          "",
          "[Removed Lines]",
          "71:   project.eclipse.classpath.plusConfigurations += [runtimeMerge]",
          "72:   project.idea.module.scopes.PROVIDED.plus += runtimeMerge",
          "",
          "[Added Lines]",
          "71:   project.eclipse.classpath.plusConfigurations += [ runtimeMerge ]",
          "72:   project.idea.module.scopes.PROVIDED.plus += [ runtimeMerge ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:       intoConfiguration.dependencies.add(it)",
          "133:      }",
          "134:     }",
          "135:     project.merge.into.install.repositories.mavenInstaller.pom.scopeMappings.addMapping(",
          "137:    }",
          "138:   }",
          "139:  }",
          "",
          "[Removed Lines]",
          "136:      mapping.priority + 100, intoConfiguration, mapping.scope)",
          "",
          "[Added Lines]",
          "135:     def index = project.parent.childProjects.findIndexOf {p -> p.getValue() == project}",
          "137:      mapping.priority + 100 + index, intoConfiguration, mapping.scope)",
          "",
          "---------------"
        ],
        "gradle/wrapper/gradle-wrapper.properties||gradle/wrapper/gradle-wrapper.properties": [
          "File: gradle/wrapper/gradle-wrapper.properties -> gradle/wrapper/gradle-wrapper.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: distributionPath=wrapper/dists",
          "4: zipStoreBase=GRADLE_USER_HOME",
          "5: zipStorePath=wrapper/dists",
          "",
          "[Removed Lines]",
          "6: distributionUrl=https\\://services.gradle.org/distributions/gradle-1.12-bin.zip",
          "",
          "[Added Lines]",
          "6: distributionUrl=https\\://services.gradle.org/distributions/gradle-2.5-bin.zip",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "512d1263f2d93f17beee6a761fc0bb7f38af4010",
      "candidate_info": {
        "commit_hash": "512d1263f2d93f17beee6a761fc0bb7f38af4010",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/512d1263f2d93f17beee6a761fc0bb7f38af4010",
        "files": [
          "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
          "spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java"
        ],
        "message": "ReflectiveMethodResolver lets local static methods override java.lang.Class methods\n\nIssue: SPR-13918\n(cherry picked from commit cf3e460)",
        "before_after_code_files": [
          "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java||spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
          "spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java||spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/arun1607/spring-framework/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java||spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java": [
          "File: spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java -> spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:  private Collection<Method> getMethods(Class<?> type, Object targetObject) {",
          "222:   if (targetObject instanceof Class) {",
          "223:    Set<Method> result = new LinkedHashSet<Method>();",
          "226:    Method[] methods = getMethods(type);",
          "227:    for (Method method : methods) {",
          "228:     if (Modifier.isStatic(method.getModifiers())) {",
          "229:      result.add(method);",
          "230:     }",
          "231:    }",
          "232:    return result;",
          "233:   }",
          "234:   else {",
          "",
          "[Removed Lines]",
          "224:    result.addAll(Arrays.asList(getMethods(targetObject.getClass())));",
          "",
          "[Added Lines]",
          "232:    result.addAll(Arrays.asList(getMethods(Class.class)));",
          "",
          "---------------"
        ],
        "spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java||spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java": [
          "File: spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java -> spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.lang.reflect.Array;",
          "20: import java.lang.reflect.Field;",
          "21: import java.lang.reflect.Method;",
          "22: import java.util.ArrayList;",
          "23: import java.util.Arrays;",
          "24: import java.util.Collection;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.nio.charset.Charset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1836:  }",
          "1838:  @Test",
          "1840:   SpelExpressionParser parser = new SpelExpressionParser();",
          "1841:   Expression expression = parser.parseExpression(\"#root.getClass().getName()\");",
          "1842:   assertEquals(UnnamedUser.class.getName(), expression.getValue(new UnnamedUser()));",
          "",
          "[Removed Lines]",
          "1839:  public void SPR12502() throws Exception {",
          "",
          "[Added Lines]",
          "1840:  public void SPR12502() {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1844:  }",
          "1846:  @Test",
          "1848:   StandardEvaluationContext sec = new StandardEvaluationContext();",
          "1849:   sec.setVariable(\"iterable\", Collections.emptyList());",
          "1850:   SpelExpressionParser parser = new SpelExpressionParser();",
          "",
          "[Removed Lines]",
          "1847:  public void SPR12803() throws Exception {",
          "",
          "[Added Lines]",
          "1848:  public void SPR12803() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1852:   assertTrue(expression.getValue(sec) instanceof ArrayList);",
          "1853:  }",
          "1861:  public static class BooleanHolder {",
          "",
          "[Removed Lines]",
          "1856:  private static enum ABC { A, B, C }",
          "1858:  private static enum XYZ { X, Y, Z }",
          "",
          "[Added Lines]",
          "1856:  @Test",
          "1857:  public void SPR13918() {",
          "1858:   EvaluationContext context = new StandardEvaluationContext();",
          "1859:   context.setVariable(\"encoding\", \"UTF-8\");",
          "1861:   Expression ex = parser.parseExpression(\"T(java.nio.charset.Charset).forName(#encoding)\");",
          "1862:   Object result = ex.getValue(context);",
          "1863:   assertEquals(Charset.forName(\"UTF-8\"), result);",
          "1864:  }",
          "1867:  private enum ABC { A, B, C }",
          "1869:  private enum XYZ { X, Y, Z }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1882:  }",
          "1887:   public T getProperty();",
          "1888:  }",
          "",
          "[Removed Lines]",
          "1885:  private static interface GenericInterface<T extends Number> {",
          "",
          "[Added Lines]",
          "1896:  private interface GenericInterface<T extends Number> {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1909:  }",
          "1915:  }",
          "",
          "[Removed Lines]",
          "1912:  public static interface StaticFinal {",
          "1914:   public static final String VALUE = \"interfaceValue\";",
          "",
          "[Added Lines]",
          "1923:  public interface StaticFinal {",
          "1925:   String VALUE = \"interfaceValue\";",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1988:  }",
          "1991:  public static class MapWithConstant extends HashMap {",
          "1993:   public static final int X = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2002:  @SuppressWarnings({\"rawtypes\", \"serial\"})",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac5b9c7bd690b4a850a4c1697887ab570850ed82",
      "candidate_info": {
        "commit_hash": "ac5b9c7bd690b4a850a4c1697887ab570850ed82",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/ac5b9c7bd690b4a850a4c1697887ab570850ed82",
        "files": [
          "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java"
        ],
        "message": "Fix javadoc issue in ResponseEntityExceptionHandler\n\nIssue: SPR-13869\n(cherry picked from commit 73df50d)",
        "before_after_code_files": [
          "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java||spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/arun1607/spring-framework/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java||spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java": [
          "File: spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java -> spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import org.springframework.web.context.request.WebRequest;",
          "44: import org.springframework.web.multipart.support.MissingServletRequestPartException;",
          "45: import org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException;",
          "70: public abstract class ResponseEntityExceptionHandler {",
          "",
          "[Removed Lines]",
          "72:  protected final Log logger = LogFactory.getLog(getClass());",
          "",
          "[Added Lines]",
          "48: import org.springframework.web.util.WebUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:  public static final String PAGE_NOT_FOUND_LOG_CATEGORY = \"org.springframework.web.servlet.PageNotFound\";",
          "84:  protected static final Log pageNotFoundLogger = LogFactory.getLog(PAGE_NOT_FOUND_LOG_CATEGORY);",
          "93:    NoSuchRequestHandlingMethodException.class,",
          "94:    HttpRequestMethodNotSupportedException.class,",
          "95:    HttpMediaTypeNotSupportedException.class,",
          "",
          "[Removed Lines]",
          "92:  @ExceptionHandler(value={",
          "",
          "[Added Lines]",
          "92:  protected final Log logger = LogFactory.getLog(getClass());",
          "100:  @ExceptionHandler({",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:  protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,",
          "180:    HttpHeaders headers, HttpStatus status, WebRequest request) {",
          "182:   if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {",
          "184:   }",
          "186:   return new ResponseEntity<Object>(body, headers, status);",
          "187:  }",
          "",
          "[Removed Lines]",
          "183:    request.setAttribute(\"javax.servlet.error.exception\", ex, WebRequest.SCOPE_REQUEST);",
          "",
          "[Added Lines]",
          "191:    request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5070d562c1c45db0ffcc4565403c89587ed46c5",
      "candidate_info": {
        "commit_hash": "a5070d562c1c45db0ffcc4565403c89587ed46c5",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/a5070d562c1c45db0ffcc4565403c89587ed46c5",
        "files": [
          "spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java"
        ],
        "message": "Correct ISO DateTime example\n\nIssue: SPR-14675\n(cherry picked from commit 68332bf)",
        "before_after_code_files": [
          "spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java||spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/arun1607/spring-framework/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java||spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java": [
          "File: spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java -> spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.springframework.format.annotation;",
          "19: import java.lang.annotation.ElementType;",
          "20: import java.lang.annotation.Retention;",
          "21: import java.lang.annotation.RetentionPolicy;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import java.lang.annotation.Documented;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: @Retention(RetentionPolicy.RUNTIME)",
          "54: public @interface DateTimeFormat {",
          "",
          "[Removed Lines]",
          "52: @Target({ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER, ElementType.ANNOTATION_TYPE})",
          "",
          "[Added Lines]",
          "53: @Documented",
          "55: @Target({ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER, ElementType.ANNOTATION_TYPE})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:   DATE,",
          "95:   TIME,",
          "102:   DATE_TIME,",
          "",
          "[Removed Lines]",
          "83:  public enum ISO {",
          "",
          "[Added Lines]",
          "85:  enum ISO {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1c09877d94dd04ec3b2ebbd925d601fc965b6b4",
      "candidate_info": {
        "commit_hash": "a1c09877d94dd04ec3b2ebbd925d601fc965b6b4",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/a1c09877d94dd04ec3b2ebbd925d601fc965b6b4",
        "files": [
          "spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java"
        ],
        "message": "Avoid potential deadlock in AbstractBeanFactoryPointcutAdvisor\n\nIssue: SPR-14388\n(cherry picked from commit 0d3a22c)",
        "before_after_code_files": [
          "spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java||spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/arun1607/spring-framework/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java||spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java": [
          "File: spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java -> spring-aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import org.springframework.beans.factory.BeanFactory;",
          "25: import org.springframework.beans.factory.BeanFactoryAware;",
          "26: import org.springframework.util.Assert;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.springframework.beans.factory.support.AbstractBeanFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  public void setBeanFactory(BeanFactory beanFactory) {",
          "73:   this.beanFactory = beanFactory;",
          "74:  }",
          "76:  public void setAdvice(Advice advice) {",
          "77:   synchronized (this.adviceMonitor) {",
          "78:    this.advice = advice;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:   resetAdviceMonitor();",
          "78:  private void resetAdviceMonitor() {",
          "79:   if (this.beanFactory instanceof AbstractBeanFactory) {",
          "80:    this.adviceMonitor = ((AbstractBeanFactory) this.beanFactory).getSingletonMutex();",
          "81:   }",
          "82:   else {",
          "83:    this.adviceMonitor = new Object();",
          "84:   }",
          "85:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:  @Override",
          "93:  public String toString() {",
          "95:  }",
          "",
          "[Removed Lines]",
          "94:   return getClass().getName() + \": advice bean '\" + getAdviceBeanName() + \"'\";",
          "",
          "[Added Lines]",
          "110:   StringBuilder sb = new StringBuilder(getClass().getName());",
          "111:   sb.append(\": advice \");",
          "112:   if (this.adviceBeanName != null) {",
          "113:    sb.append(\"bean '\").append(this.adviceBeanName).append(\"'\");",
          "114:   }",
          "115:   else {",
          "116:    sb.append(this.advice);",
          "117:   }",
          "118:   return sb.toString();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:   ois.defaultReadObject();",
          "108:  }",
          "110: }",
          "",
          "[Removed Lines]",
          "107:   this.adviceMonitor = new Object();",
          "",
          "[Added Lines]",
          "131:   resetAdviceMonitor();",
          "",
          "---------------"
        ]
      }
    }
  ]
}