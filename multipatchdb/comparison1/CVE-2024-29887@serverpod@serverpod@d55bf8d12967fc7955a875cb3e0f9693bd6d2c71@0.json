{
  "cve_id": "CVE-2024-29887",
  "cve_desc": "Serverpod is an app and web server, built for the Flutter and Dart ecosystem. This bug bypassed the validation of TSL certificates on all none web HTTP clients in the `serverpod_client` package. Making them susceptible to a man in the middle attack against encrypted traffic between the client device and the server. An attacker would need to be able to intercept the traffic and highjack the connection to the server for this vulnerability to be used. Upgrading to version `1.2.6` resolves this issue.\n\n",
  "repo": "serverpod/serverpod",
  "patch_hash": "d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
  "patch_info": {
    "commit_hash": "d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
    "repo": "serverpod/serverpod",
    "commit_url": "https://github.com/serverpod/serverpod/commit/d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
    "files": [
      "packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
    ],
    "message": "fix: Remove faulty certificate check. (#2041)",
    "before_after_code_files": [
      "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
    ]
  },
  "patch_diff": {
    "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart": [
      "File: packages/serverpod_client/lib/src/serverpod_client_io.dart -> packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:     _httpClient = HttpClient(context: securityContext);",
      "37:     _httpClient.connectionTimeout = connectionTimeout;",
      "53:   }",
      "55:   Future<void> _initialize() async {",
      "",
      "[Removed Lines]",
      "40:     _httpClient.badCertificateCallback =",
      "41:         ((X509Certificate cert, String host, int port) {",
      "51:       return true;",
      "52:     });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart": [
      "File: tests/serverpod_test_server/test_e2e/tsl_client_test.dart -> tests/serverpod_test_server/test_e2e/tsl_client_test.dart",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import 'dart:io';",
      "3: import 'package:serverpod_service_client/serverpod_service_client.dart';",
      "4: import 'package:test/test.dart';",
      "6: void main() {",
      "7:   test(",
      "8:       'Given valid certificates when a call to the health endpoint of a service with a valid certificate then the requests completes successfully.',",
      "9:       () async {",
      "10:     var client = Client('https://api.serverpod.app/');",
      "12:     expectLater(",
      "13:       client.callServerEndpoint<void>('', '', {}),",
      "14:       completes,",
      "15:     );",
      "16:   });",
      "18:   test(",
      "19:       'Given no valid certificates when a call to the health endpoint of a service then the requests is rejected with a handshake exception.',",
      "20:       () async {",
      "21:     var client = Client(",
      "22:       'https://api.serverpod.app/',",
      "23:       securityContext: SecurityContext(withTrustedRoots: false),",
      "24:     );",
      "26:     expectLater(",
      "27:       client.callServerEndpoint<void>('', '', {}),",
      "28:       throwsA(isA<HandshakeException>()),",
      "29:     );",
      "30:   });",
      "31: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e43d86c4c8028acd932b20cdd022f9aa425de92",
      "candidate_info": {
        "commit_hash": "6e43d86c4c8028acd932b20cdd022f9aa425de92",
        "repo": "serverpod/serverpod",
        "commit_url": "https://github.com/serverpod/serverpod/commit/6e43d86c4c8028acd932b20cdd022f9aa425de92",
        "files": [
          "examples/auth_example/auth_example_client/lib/src/protocol/client.dart",
          "examples/chat/chat_client/lib/src/protocol/client.dart",
          "packages/serverpod_client/lib/src/serverpod_client_browser.dart",
          "packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "packages/serverpod_client/lib/src/serverpod_client_shared.dart",
          "packages/serverpod_service_client/lib/src/protocol/client.dart",
          "templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart",
          "tests/serverpod_test_client/lib/src/protocol/client.dart",
          "tests/serverpod_test_server/test_e2e/client_test.dart",
          "tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart"
        ],
        "message": "Fix: Add `onFailedCall` and `onSuccedeedCall` to `ServerpodClient`.\n\nCo-authored-by: Alexander Sandor <alexander@serverpod.dev>",
        "before_after_code_files": [
          "examples/auth_example/auth_example_client/lib/src/protocol/client.dart||examples/auth_example/auth_example_client/lib/src/protocol/client.dart",
          "examples/chat/chat_client/lib/src/protocol/client.dart||examples/chat/chat_client/lib/src/protocol/client.dart",
          "packages/serverpod_client/lib/src/serverpod_client_browser.dart||packages/serverpod_client/lib/src/serverpod_client_browser.dart",
          "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "packages/serverpod_client/lib/src/serverpod_client_shared.dart||packages/serverpod_client/lib/src/serverpod_client_shared.dart",
          "packages/serverpod_service_client/lib/src/protocol/client.dart||packages/serverpod_service_client/lib/src/protocol/client.dart",
          "templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart||templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart",
          "tests/serverpod_test_client/lib/src/protocol/client.dart||tests/serverpod_test_client/lib/src/protocol/client.dart",
          "tests/serverpod_test_server/test_e2e/client_test.dart||tests/serverpod_test_server/test_e2e/client_test.dart",
          "tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart||tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart"
          ],
          "candidate": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart"
          ]
        }
      },
      "candidate_diff": {
        "examples/auth_example/auth_example_client/lib/src/protocol/client.dart||examples/auth_example/auth_example_client/lib/src/protocol/client.dart": [
          "File: examples/auth_example/auth_example_client/lib/src/protocol/client.dart -> examples/auth_example/auth_example_client/lib/src/protocol/client.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     _i1.AuthenticationKeyManager? authenticationKeyManager,",
          "43:     Duration? streamingConnectionTimeout,",
          "44:     Duration? connectionTimeout,",
          "45:   }) : super(",
          "46:           host,",
          "47:           _i4.Protocol(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:     Function(",
          "46:       _i1.MethodCallContext,",
          "47:       Object,",
          "48:       StackTrace,",
          "49:     )? onFailedCall,",
          "50:     Function(_i1.MethodCallContext)? onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:           authenticationKeyManager: authenticationKeyManager,",
          "50:           streamingConnectionTimeout: streamingConnectionTimeout,",
          "51:           connectionTimeout: connectionTimeout,",
          "52:         ) {",
          "53:     example = EndpointExample(this);",
          "54:     modules = _Modules(this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:           onFailedCall: onFailedCall,",
          "59:           onSucceededCall: onSucceededCall,",
          "",
          "---------------"
        ],
        "examples/chat/chat_client/lib/src/protocol/client.dart||examples/chat/chat_client/lib/src/protocol/client.dart": [
          "File: examples/chat/chat_client/lib/src/protocol/client.dart -> examples/chat/chat_client/lib/src/protocol/client.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     _i1.AuthenticationKeyManager? authenticationKeyManager,",
          "49:     Duration? streamingConnectionTimeout,",
          "50:     Duration? connectionTimeout,",
          "51:   }) : super(",
          "52:           host,",
          "53:           _i6.Protocol(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     Function(",
          "52:       _i1.MethodCallContext,",
          "53:       Object,",
          "54:       StackTrace,",
          "55:     )? onFailedCall,",
          "56:     Function(_i1.MethodCallContext)? onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:           authenticationKeyManager: authenticationKeyManager,",
          "56:           streamingConnectionTimeout: streamingConnectionTimeout,",
          "57:           connectionTimeout: connectionTimeout,",
          "58:         ) {",
          "59:     channels = EndpointChannels(this);",
          "60:     modules = _Modules(this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:           onFailedCall: onFailedCall,",
          "65:           onSucceededCall: onSucceededCall,",
          "",
          "---------------"
        ],
        "packages/serverpod_client/lib/src/serverpod_client_browser.dart||packages/serverpod_client/lib/src/serverpod_client_browser.dart": [
          "File: packages/serverpod_client/lib/src/serverpod_client_browser.dart -> packages/serverpod_client/lib/src/serverpod_client_browser.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     super.logFailedCalls,",
          "27:     super.streamingConnectionTimeout,",
          "28:     super.connectionTimeout,",
          "29:   }) {",
          "30:     _httpClient = http.Client();",
          "31:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     super.onFailedCall,",
          "30:     super.onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:       String endpoint, String method, Map<String, dynamic> args) async {",
          "40:     if (!_initialized) await _initialize();",
          "42:     String? data;",
          "43:     try {",
          "44:       var body =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     var callContext = MethodCallContext(",
          "45:       endpointName: endpoint,",
          "46:       methodName: method,",
          "47:       arguments: args,",
          "48:     );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:         );",
          "63:       }",
          "65:       if (T == getType<void>()) {",
          "67:       } else {",
          "69:       }",
          "71:       if (e is http.ClientException) {",
          "72:         var message = data ?? 'Unknown server response code. ($e)';",
          "73:         throw (ServerpodClientException(message, -1));",
          "",
          "[Removed Lines]",
          "66:         return returnVoid() as T;",
          "68:         return parseData<T>(data, T, serializationManager);",
          "70:     } catch (e) {",
          "",
          "[Added Lines]",
          "72:       T result;",
          "74:         result = returnVoid() as T;",
          "76:         result = parseData<T>(data, T, serializationManager);",
          "79:       onSucceededCall?.call(callContext);",
          "80:       return result;",
          "81:     } catch (e, s) {",
          "82:       onFailedCall?.call(callContext, e, s);",
          "",
          "---------------"
        ],
        "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart": [
          "File: packages/serverpod_client/lib/src/serverpod_client_io.dart -> packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     super.logFailedCalls,",
          "27:     super.streamingConnectionTimeout,",
          "28:     super.connectionTimeout,",
          "29:   }) {",
          "30:     assert(securityContext == null || securityContext is SecurityContext,",
          "31:         'Context must be of type SecurityContext');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     super.onFailedCall,",
          "30:     super.onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:       String endpoint, String method, Map<String, dynamic> args) async {",
          "60:     if (!_initialized) await _initialize();",
          "62:     try {",
          "63:       var body =",
          "64:           formatArgs(args, await authenticationKeyManager?.get(), method);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     var callContext = MethodCallContext(",
          "65:       endpointName: endpoint,",
          "66:       methodName: method,",
          "67:       arguments: args,",
          "68:     );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:         );",
          "86:       }",
          "88:       if (T == getType<void>()) {",
          "90:       } else {",
          "92:       }",
          "94:       if (logFailedCalls) {",
          "95:         print('Failed call: $endpoint.$method');",
          "96:         print('$e');",
          "",
          "[Removed Lines]",
          "89:         return returnVoid() as T;",
          "91:         return parseData<T>(data, T, serializationManager);",
          "93:     } catch (e) {",
          "",
          "[Added Lines]",
          "95:       T result;",
          "97:         result = returnVoid() as T;",
          "99:         result = parseData<T>(data, T, serializationManager);",
          "102:       onSucceededCall?.call(callContext);",
          "103:       return result;",
          "104:     } catch (e, s) {",
          "105:       onFailedCall?.call(callContext, e, s);",
          "",
          "---------------"
        ],
        "packages/serverpod_client/lib/src/serverpod_client_shared.dart||packages/serverpod_client/lib/src/serverpod_client_shared.dart": [
          "File: packages/serverpod_client/lib/src/serverpod_client_shared.dart -> packages/serverpod_client/lib/src/serverpod_client_shared.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:   waitingToRetry,",
          "23: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: class MethodCallContext {",
          "28:   final String endpointName;",
          "31:   final String methodName;",
          "34:   final Map<String, dynamic> arguments;",
          "37:   const MethodCallContext({",
          "38:     required this.endpointName,",
          "39:     required this.methodName,",
          "40:     required this.arguments,",
          "41:   });",
          "42: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:   Duration connectionTimeout;",
          "100:   bool _firstMessageReceived = false;",
          "102:   ConnectivityMonitor? _connectivityMonitor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:   final void Function(",
          "122:     MethodCallContext callContext,",
          "123:     Object error,",
          "124:     StackTrace stackTrace,",
          "125:   )? onFailedCall;",
          "128:   final void Function(MethodCallContext callContext)? onSucceededCall;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:     this.logFailedCalls = true,",
          "129:     required Duration? streamingConnectionTimeout,",
          "130:     required Duration? connectionTimeout,",
          "131:   })  : connectionTimeout = connectionTimeout ?? const Duration(seconds: 20),",
          "132:         streamingConnectionTimeout =",
          "133:             streamingConnectionTimeout ?? const Duration(seconds: 5) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:     this.onFailedCall,",
          "162:     this.onSucceededCall,",
          "",
          "---------------"
        ],
        "packages/serverpod_service_client/lib/src/protocol/client.dart||packages/serverpod_service_client/lib/src/protocol/client.dart": [
          "File: packages/serverpod_service_client/lib/src/protocol/client.dart -> packages/serverpod_service_client/lib/src/protocol/client.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:     _i1.AuthenticationKeyManager? authenticationKeyManager,",
          "239:     Duration? streamingConnectionTimeout,",
          "240:     Duration? connectionTimeout,",
          "241:   }) : super(",
          "242:           host,",
          "243:           _i14.Protocol(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "241:     Function(",
          "242:       _i1.MethodCallContext,",
          "243:       Object,",
          "244:       StackTrace,",
          "245:     )? onFailedCall,",
          "246:     Function(_i1.MethodCallContext)? onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:           authenticationKeyManager: authenticationKeyManager,",
          "246:           streamingConnectionTimeout: streamingConnectionTimeout,",
          "247:           connectionTimeout: connectionTimeout,",
          "248:         ) {",
          "249:     insights = EndpointInsights(this);",
          "250:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:           onFailedCall: onFailedCall,",
          "255:           onSucceededCall: onSucceededCall,",
          "",
          "---------------"
        ],
        "templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart||templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart": [
          "File: templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart -> templates/serverpod_templates/projectname_client/lib/src/protocol/client.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     _i1.AuthenticationKeyManager? authenticationKeyManager,",
          "34:     Duration? streamingConnectionTimeout,",
          "35:     Duration? connectionTimeout,",
          "36:   }) : super(",
          "37:           host,",
          "38:           _i3.Protocol(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:     Function(",
          "37:       _i1.MethodCallContext,",
          "38:       Object,",
          "39:       StackTrace,",
          "40:     )? onFailedCall,",
          "41:     Function(_i1.MethodCallContext)? onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:           authenticationKeyManager: authenticationKeyManager,",
          "41:           streamingConnectionTimeout: streamingConnectionTimeout,",
          "42:           connectionTimeout: connectionTimeout,",
          "43:         ) {",
          "44:     example = EndpointExample(this);",
          "45:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:           onFailedCall: onFailedCall,",
          "50:           onSucceededCall: onSucceededCall,",
          "",
          "---------------"
        ],
        "tests/serverpod_test_client/lib/src/protocol/client.dart||tests/serverpod_test_client/lib/src/protocol/client.dart": [
          "File: tests/serverpod_test_client/lib/src/protocol/client.dart -> tests/serverpod_test_client/lib/src/protocol/client.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "2056:     _i1.AuthenticationKeyManager? authenticationKeyManager,",
          "2057:     Duration? streamingConnectionTimeout,",
          "2058:     Duration? connectionTimeout,",
          "2059:   }) : super(",
          "2060:           host,",
          "2061:           _i31.Protocol(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2059:     Function(",
          "2060:       _i1.MethodCallContext,",
          "2061:       Object,",
          "2062:       StackTrace,",
          "2063:     )? onFailedCall,",
          "2064:     Function(_i1.MethodCallContext)? onSucceededCall,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2063:           authenticationKeyManager: authenticationKeyManager,",
          "2064:           streamingConnectionTimeout: streamingConnectionTimeout,",
          "2065:           connectionTimeout: connectionTimeout,",
          "2066:         ) {",
          "2067:     asyncTasks = EndpointAsyncTasks(this);",
          "2068:     authentication = EndpointAuthentication(this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2072:           onFailedCall: onFailedCall,",
          "2073:           onSucceededCall: onSucceededCall,",
          "",
          "---------------"
        ],
        "tests/serverpod_test_server/test_e2e/client_test.dart||tests/serverpod_test_server/test_e2e/client_test.dart": [
          "File: tests/serverpod_test_server/test_e2e/client_test.dart -> tests/serverpod_test_server/test_e2e/client_test.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import 'package:serverpod_test_client/serverpod_test_client.dart';",
          "2: import 'package:serverpod_test_server/test_util/config.dart';",
          "3: import 'package:test/test.dart';",
          "5: void main() {",
          "6:   group('Given client with onSucceededCall callback', () {",
          "7:     group('when successfully calling endpoint', () {",
          "8:       var succeededContexts = <MethodCallContext>[];",
          "9:       setUpAll(() async {",
          "10:         var client = Client(",
          "11:           serverUrl,",
          "12:           onSucceededCall: (MethodCallContext context) {",
          "13:             succeededContexts.add(context);",
          "14:           },",
          "15:         );",
          "17:         await client.simple.hello('test');",
          "18:       });",
          "20:       test('then callback is called.', () {",
          "21:         expect(",
          "22:           succeededContexts,",
          "23:           hasLength(1),",
          "24:           reason: 'Callback was not called even if call succeeded.',",
          "25:         );",
          "26:       });",
          "28:       test('then method call context has correct endpoint name.', () {",
          "29:         var callContext = succeededContexts.firstOrNull;",
          "31:         expect(",
          "32:           callContext?.endpointName,",
          "33:           'simple',",
          "34:           reason: 'Call context did not contain correct method name.',",
          "35:         );",
          "36:       });",
          "38:       test('then method call context has correct method name.', () {",
          "39:         var callContext = succeededContexts.firstOrNull;",
          "41:         expect(",
          "42:           callContext?.methodName,",
          "43:           'hello',",
          "44:           reason: 'Call context did not contain correct method name.',",
          "45:         );",
          "46:       });",
          "47:     });",
          "49:     test('when endpoint call fails then callback is not called.', () async {",
          "50:       var succeededContexts = <MethodCallContext>[];",
          "51:       var client = Client(",
          "52:         serverUrl,",
          "53:         onSucceededCall: (MethodCallContext context) {",
          "54:           succeededContexts.add(context);",
          "55:         },",
          "56:       );",
          "58:       try {",
          "59:         await client.failedCalls.failedCall();",
          "60:       } catch (_) {}",
          "62:       expect(",
          "63:         succeededContexts,",
          "64:         hasLength(0),",
          "65:         reason: 'Callback was called even if call failed.',",
          "66:       );",
          "67:     });",
          "68:   });",
          "70:   group('Given client with onFailedCall callback', () {",
          "71:     group('when endpoint call fails ', () {",
          "72:       var failedContexts = <MethodCallContext>[];",
          "73:       setUpAll(() async {",
          "74:         var client = Client(",
          "75:           serverUrl,",
          "76:           onFailedCall: (",
          "77:             MethodCallContext context,",
          "78:             Object error,",
          "79:             StackTrace stackTrace,",
          "80:           ) {",
          "81:             failedContexts.add(context);",
          "82:           },",
          "83:         );",
          "85:         try {",
          "86:           await client.failedCalls.failedCall();",
          "87:         } catch (_) {}",
          "88:       });",
          "90:       test('then callback is called.', () {",
          "91:         expect(",
          "92:           failedContexts,",
          "93:           hasLength(1),",
          "94:           reason: 'Callback was not called even if call succeeded.',",
          "95:         );",
          "96:       });",
          "98:       test('then method call context has correct endpoint name.', () {",
          "99:         var callContext = failedContexts.firstOrNull;",
          "101:         expect(",
          "102:           callContext?.endpointName,",
          "103:           'failedCalls',",
          "104:           reason: 'Call context did not contain correct method name.',",
          "105:         );",
          "106:       });",
          "108:       test('then method call context has correct method name.', () {",
          "109:         var callContext = failedContexts.firstOrNull;",
          "111:         expect(",
          "112:           callContext?.methodName,",
          "113:           'failedCall',",
          "114:           reason: 'Call context did not contain correct method name.',",
          "115:         );",
          "116:       });",
          "117:     });",
          "119:     test('when successfully calling endpoint then callback is not called.',",
          "120:         () async {",
          "121:       var failedContexts = <MethodCallContext>[];",
          "122:       var client = Client(",
          "123:         serverUrl,",
          "124:         onFailedCall: (",
          "125:           MethodCallContext context,",
          "126:           Object error,",
          "127:           StackTrace stackTrace,",
          "128:         ) {",
          "129:           failedContexts.add(context);",
          "130:         },",
          "131:       );",
          "133:       await client.simple.hello('test');",
          "134:       expect(",
          "135:         failedContexts,",
          "136:         hasLength(0),",
          "137:         reason: 'Callback was called even if call failed.',",
          "138:       );",
          "139:     });",
          "140:   });",
          "141: }",
          "",
          "---------------"
        ],
        "tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart||tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart": [
          "File: tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart -> tools/serverpod_cli/lib/src/generator/dart/library_generators/library_generator.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "626:                         ..symbol = 'Duration'",
          "627:                         ..url = 'dart:core'",
          "628:                         ..isNullable = true)),",
          "629:                   ])",
          "630:                   ..initializers.add(refer('super').call([",
          "631:                     refer('host'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "629:                     Parameter((p) => p",
          "630:                       ..name = 'onFailedCall'",
          "631:                       ..named = true",
          "632:                       ..type = FunctionType((f) => f",
          "633:                         ..isNullable = true",
          "634:                         ..requiredParameters.addAll([",
          "635:                           TypeReference((t) => t",
          "636:                             ..symbol = 'MethodCallContext'",
          "637:                             ..url = serverpodUrl(false)",
          "638:                             ..isNullable = false),",
          "639:                           TypeReference((t) => t",
          "640:                             ..symbol = 'Object'",
          "641:                             ..url = 'dart:core'",
          "642:                             ..isNullable = false),",
          "643:                           TypeReference((t) => t",
          "644:                             ..symbol = 'StackTrace'",
          "645:                             ..url = 'dart:core'",
          "646:                             ..isNullable = false),",
          "647:                         ]))),",
          "648:                     Parameter((p) => p",
          "649:                       ..name = 'onSucceededCall'",
          "650:                       ..named = true",
          "651:                       ..type = FunctionType((f) => f",
          "652:                         ..isNullable = true",
          "653:                         ..requiredParameters.add(",
          "654:                           TypeReference((t) => t",
          "655:                             ..symbol = 'MethodCallContext'",
          "656:                             ..url = serverpodUrl(false)",
          "657:                             ..isNullable = false),",
          "658:                         ))),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "637:                     'streamingConnectionTimeout':",
          "638:                         refer('streamingConnectionTimeout'),",
          "639:                     'connectionTimeout': refer('connectionTimeout'),",
          "640:                   }).code);",
          "641:               } else {",
          "642:                 c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "670:                     'onFailedCall': refer('onFailedCall'),",
          "671:                     'onSucceededCall': refer('onSucceededCall'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71bb0a8ee366097c2c8edf0839d850ae187099f9",
      "candidate_info": {
        "commit_hash": "71bb0a8ee366097c2c8edf0839d850ae187099f9",
        "repo": "serverpod/serverpod",
        "commit_url": "https://github.com/serverpod/serverpod/commit/71bb0a8ee366097c2c8edf0839d850ae187099f9",
        "files": [
          "packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
        ],
        "message": "fix: Remove faulty certificate check. (#2042)",
        "before_after_code_files": [
          "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
            "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
          ],
          "candidate": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
            "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
          ]
        }
      },
      "candidate_diff": {
        "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart": [
          "File: packages/serverpod_client/lib/src/serverpod_client_io.dart -> packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     _httpClient = HttpClient(context: securityContext);",
          "35:     _httpClient.connectionTimeout = connectionTimeout;",
          "51:   }",
          "53:   Future<void> _initialize() async {",
          "",
          "[Removed Lines]",
          "38:     _httpClient.badCertificateCallback =",
          "39:         ((X509Certificate cert, String host, int port) {",
          "49:       return true;",
          "50:     });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart": [
          "File: tests/serverpod_test_server/test_e2e/tsl_client_test.dart -> tests/serverpod_test_server/test_e2e/tsl_client_test.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import 'dart:io';",
          "3: import 'package:serverpod_service_client/serverpod_service_client.dart';",
          "4: import 'package:test/test.dart';",
          "6: void main() {",
          "7:   test(",
          "8:       'Given valid certificates when a call to the health endpoint of a service with a valid certificate then the requests completes successfully.',",
          "9:       () async {",
          "10:     var client = Client('https://api.serverpod.app/');",
          "12:     expectLater(",
          "13:       client.callServerEndpoint<void>('', '', {}),",
          "14:       completes,",
          "15:     );",
          "16:   });",
          "18:   test(",
          "19:       'Given no valid certificates when a call to the health endpoint of a service then the requests is rejected with a handshake exception.',",
          "20:       () async {",
          "21:     var client = Client(",
          "22:       'https://api.serverpod.app/',",
          "23:       securityContext: SecurityContext(withTrustedRoots: false),",
          "24:     );",
          "26:     expectLater(",
          "27:       client.callServerEndpoint<void>('', '', {}),",
          "28:       throwsA(isA<HandshakeException>()),",
          "29:     );",
          "30:   });",
          "31: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}