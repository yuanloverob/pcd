{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fef6e8f2857e845dcbd8230618f34a3db60d743c",
      "candidate_info": {
        "commit_hash": "fef6e8f2857e845dcbd8230618f34a3db60d743c",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/fef6e8f2857e845dcbd8230618f34a3db60d743c",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ],
        "message": "AMBARI-24323. Adding a component when the agent scripts are moved out and file download disabled takes > 1 hour and timeout (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py": [
          "File: ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py -> ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "462:       if incremented_commands_for_component:",
          "463:         self.commands_for_component_in_progress[cluster_id][command['role']] -= 1",
          "467:     return ret",
          "",
          "[Removed Lines]",
          "465:       self.conditionally_remove_command_file(json_path, ret)",
          "",
          "[Added Lines]",
          "465:       if json_path:",
          "466:         self.conditionally_remove_command_file(json_path, ret)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a05bb201067f0ae10d40f180bb6216d098f9447f",
      "candidate_info": {
        "commit_hash": "a05bb201067f0ae10d40f180bb6216d098f9447f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/a05bb201067f0ae10d40f180bb6216d098f9447f",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java",
          "ambari-server/src/main/python/ambari_server/setupSecurity.py",
          "ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java"
        ],
        "message": "AMBARI-25141. Encrypting LDAP manager password in case password security is ON (#2810)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java||ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java",
          "ambari-server/src/main/python/ambari_server/setupSecurity.py||ambari-server/src/main/python/ambari_server/setupSecurity.py",
          "ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java||ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java||ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java -> ambari-server/src/main/java/org/apache/ambari/server/utils/PasswordUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:       if (CredentialProvider.isAliasString(passwordProperty)) {",
          "83:         return readPasswordFromStore(passwordProperty);",
          "84:       } else {",
          "86:       }",
          "87:     }",
          "88:     return defaultPassword;",
          "",
          "[Removed Lines]",
          "85:         return readPasswordFromFile(passwordProperty, defaultPassword);",
          "",
          "[Added Lines]",
          "85:         final String pw = readPasswordFromFile(passwordProperty, defaultPassword);",
          "86:         return CredentialProvider.isAliasString(pw) ? readPasswordFromStore(pw) : pw;",
          "",
          "---------------"
        ],
        "ambari-server/src/main/python/ambari_server/setupSecurity.py||ambari-server/src/main/python/ambari_server/setupSecurity.py": [
          "File: ambari-server/src/main/python/ambari_server/setupSecurity.py -> ambari-server/src/main/python/ambari_server/setupSecurity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:     if isSecure:",
          "919:       if mgr_password:",
          "920:         encrypted_passwd = encrypt_password(LDAP_MGR_PASSWORD_ALIAS, mgr_password, options)",
          "924:       if ts_password:",
          "925:         encrypted_passwd = encrypt_password(SSL_TRUSTSTORE_PASSWORD_ALIAS, ts_password, options)",
          "926:         if ts_password != encrypted_passwd:",
          "927:           ldap_property_values_in_ambari_properties[SSL_TRUSTSTORE_PASSWORD_PROPERTY] = encrypted_passwd",
          "935:     print 'Saving LDAP properties...'",
          "",
          "[Removed Lines]",
          "921:         if mgr_password != encrypted_passwd:",
          "922:           ldap_property_value_map[LDAP_MGR_PASSWORD_PROPERTY] = encrypted_passwd",
          "923:       pass",
          "928:       pass",
          "929:     pass",
          "931:     # Persisting values",
          "932:     if mgr_password:",
          "933:       ldap_property_value_map[LDAP_MGR_PASSWORD_PROPERTY] = store_password_file(mgr_password, LDAP_MGR_PASSWORD_FILENAME)",
          "",
          "[Added Lines]",
          "921:         ldap_property_value_map[LDAP_MGR_PASSWORD_PROPERTY] = store_password_file(encrypted_passwd, LDAP_MGR_PASSWORD_FILENAME)",
          "927:     else: #not secure",
          "928:       if mgr_password:",
          "929:         ldap_property_value_map[LDAP_MGR_PASSWORD_PROPERTY] = store_password_file(mgr_password, LDAP_MGR_PASSWORD_FILENAME)",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java||ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java -> ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     final CredentialProvider credentialProvider = PowerMock.createNiceMock(CredentialProvider.class);",
          "67:     setupBasicCredentialProviderExpectations(credentialProvider);",
          "68:     credentialProvider.getPasswordForAlias(CS_ALIAS);",
          "70:     PowerMock.replay(credentialProvider, CredentialProvider.class);",
          "71:     replayAll();",
          "73:     verifyAll();",
          "74:   }",
          "",
          "[Removed Lines]",
          "69:     PowerMock.expectLastCall().andReturn(\"testPassword\".toCharArray()).once();",
          "72:     assertEquals(\"testPassword\", passwordUtils.readPassword(CS_ALIAS, \"testPassword\"));",
          "",
          "[Added Lines]",
          "69:     PowerMock.expectLastCall().andReturn(\"testPassword\".toCharArray()).anyTimes();",
          "72:     assertEquals(\"testPassword\", passwordUtils.readPassword(CS_ALIAS, \"testPasswordDefault\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     assertEquals(\"testPasswordDefault\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"));",
          "96:   }",
          "98:   private File writeTestPasswordFile(final String testPassword) throws IOException {",
          "99:     final TemporaryFolder tempFolder = new TemporaryFolder();",
          "100:     tempFolder.create();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:   @Test",
          "99:   public void shouldResolveEncryptedPaswordIfWeStoreTheAliasInPasswordFile() throws Exception {",
          "100:     final String testPassword = \"testPassword\";",
          "101:     final File passwordFile = writeTestPasswordFile(CS_ALIAS);",
          "102:     final CredentialProvider credentialProvider = PowerMock.createNiceMock(CredentialProvider.class);",
          "103:     setupBasicCredentialProviderExpectations(credentialProvider);",
          "104:     credentialProvider.getPasswordForAlias(CS_ALIAS);",
          "105:     PowerMock.expectLastCall().andReturn(testPassword.toCharArray()).anyTimes();",
          "106:     PowerMock.replay(credentialProvider, CredentialProvider.class);",
          "107:     replayAll();",
          "108:     assertEquals(testPassword, passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"));",
          "109:     verifyAll();",
          "110:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3d245bd8197a4e29df75ef378a161dde4805d59",
      "candidate_info": {
        "commit_hash": "a3d245bd8197a4e29df75ef378a161dde4805d59",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/a3d245bd8197a4e29df75ef378a161dde4805d59",
        "files": [
          "ambari-web/api-docs/index.html"
        ],
        "message": "AMBARI-24830. Add datatype option to the SwaggerUi client being used for api-docs. (jaimin) (#2517)",
        "before_after_code_files": [
          "ambari-web/api-docs/index.html||ambari-web/api-docs/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/api-docs/index.html||ambari-web/api-docs/index.html": [
          "File: ambari-web/api-docs/index.html -> ambari-web/api-docs/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:       window.swaggerUi = new SwaggerUi({",
          "53:         url: url,",
          "54:         dom_id: \"swagger-ui-container\",",
          "55:         supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],",
          "56:         onComplete: function (swaggerApi, swaggerUi) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:         dataType: 'json',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c409ff32dbde8a79b86d73561cf45ad792a7e4c",
      "candidate_info": {
        "commit_hash": "9c409ff32dbde8a79b86d73561cf45ad792a7e4c",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9c409ff32dbde8a79b86d73561cf45ad792a7e4c",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ],
        "message": "AMBARI-24320. Using the proper command name when creating a pre-initialized ActionExecuteContent instead of the hard coded SET_KEYTAB value (#1834)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3866:         String commandName, List<RequestResourceFilter> resourceFilters,",
          "3867:         Map<String, String> parameters, boolean retryAllowed) {",
          "3870:           resourceFilters, parameters);",
          "3872:       actionExecContext.setRetryAllowed(retryAllowed);",
          "",
          "[Removed Lines]",
          "3869:       ActionExecutionContext actionExecContext = new ActionExecutionContext(clusterName, SET_KEYTAB,",
          "",
          "[Added Lines]",
          "3869:       ActionExecutionContext actionExecContext = new ActionExecutionContext(clusterName, commandName,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4529ad5b42cbadeec06213968e7a15c4444f7db",
      "candidate_info": {
        "commit_hash": "a4529ad5b42cbadeec06213968e7a15c4444f7db",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/a4529ad5b42cbadeec06213968e7a15c4444f7db",
        "files": [
          "ambari-agent/conf/unix/custom/sles12.sh",
          "ambari-agent/conf/unix/install-helper.sh",
          "ambari-agent/pom.xml",
          "ambari-agent/src/packages/tarball/all.xml"
        ],
        "message": "AMBARI-14526 Proper SystemD configuration(TasksMax) on SLES12 without any bad impact on other linux distributions.",
        "before_after_code_files": [
          "ambari-agent/conf/unix/ambari-agent.service||ambari-agent/conf/unix/custom/sles12.sh",
          "ambari-agent/conf/unix/install-helper.sh||ambari-agent/conf/unix/install-helper.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/conf/unix/ambari-agent.service||ambari-agent/conf/unix/custom/sles12.sh": [
          "File: ambari-agent/conf/unix/ambari-agent.service -> ambari-agent/conf/unix/custom/sles12.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: # Unless required by applicable law or agreed to in writing, software",
          "11: # distributed under the License is distributed on an \"AS IS\" BASIS,",
          "12: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "",
          "[Removed Lines]",
          "13: # See the License for the specific",
          "15: # This service unit file is tuned for SLES 12.x. It is not suitable for RHEL like distributions due to different",
          "16: # paths for ExecStart/ExecStop.",
          "18: [Unit]",
          "19: Description=Ambari Agent Service for SLES",
          "20: Before=runlevel3.target",
          "21: Before=runlevel5.target",
          "22: Before=shutdown.target",
          "23: After=remote-fs.target",
          "24: After=network-online.target",
          "25: Wants=network-online.target",
          "26: Conflicts=shutdown.target",
          "28: [Service]",
          "29: Type=forking",
          "30: PIDFile=/run/ambari-agent/ambari-agent.pid",
          "31: Restart=no",
          "32: TimeoutSec=5min",
          "33: IgnoreSIGPIPE=no",
          "34: KillMode=process",
          "35: GuessMainPID=no",
          "36: RemainAfterExit=no",
          "37: TasksMax=infinity",
          "38: ExecStart=/etc/init.d/ambari-agent start",
          "39: ExecStop=/etc/init.d/ambari-agent stop",
          "",
          "[Added Lines]",
          "13: # See the License for the specific language governing permissions and",
          "14: # limitations under the License",
          "16: # This is a custom SLES12 dependent script which contains postinstall steps",
          "17: # to execute. Please note executing this might cause unexpected errors on",
          "18: # other linux distributions.",
          "20: systemctl enable ambari-agent",
          "21: systemctl set-property ambari-agent TasksMax=infinity",
          "",
          "---------------"
        ],
        "ambari-agent/conf/unix/install-helper.sh||ambari-agent/conf/unix/install-helper.sh": [
          "File: ambari-agent/conf/unix/install-helper.sh -> ambari-agent/conf/unix/install-helper.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:   fi",
          "119: }",
          "121: locate_python(){",
          "122:   local python_binaries=\"/usr/bin/python;/usr/bin/python2;/usr/bin/python2.7\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121: install_custom(){",
          "122:    if [ -d \"/etc/ambari-agent/conf/custom\" ]; then",
          "123:      for f in /etc/ambari-agent/conf/custom/*.sh; do",
          "124:        echo \"${f}\"",
          "125:        bash \"$f\" -H",
          "126:      done",
          "127:   fi",
          "128: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:   install_autostart 1>>${LOG_FILE} 2>&1",
          "157:   # remove old python wrapper",
          "158:   rm -f \"${PYTHON_WRAPER_TARGET}\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:   install_custom 1>>${LOG_FILE} 2>&1",
          "",
          "---------------"
        ]
      }
    }
  ]
}