{
  "cve_id": "CVE-2024-29019",
  "cve_desc": "ESPHome is a system to control microcontrollers remotely through Home Automation systems. API endpoints in dashboard component of ESPHome version 2023.12.9 (command line installation) are vulnerable to Cross-Site Request Forgery (CSRF) allowing remote attackers to carry out attacks against a logged user of the dashboard to perform operations on configuration files (create, edit, delete). It is possible for a malicious actor to create a specifically crafted web page that triggers a cross site request against ESPHome, this allows bypassing the authentication for API calls on the platform. This vulnerability allows bypassing authentication on API calls accessing configuration file operations on the behalf of a logged user. In order to trigger the vulnerability, the victim must visit a weaponized page. In addition to this, it is possible to chain this vulnerability with GHSA-9p43-hj5j-96h5/ CVE-2024-27287 to obtain a complete takeover of the user account. Version 2024.3.0 contains a patch for this issue.\n\n",
  "repo": "esphome/esphome",
  "patch_hash": "c56c40cb824e34ed2b89ba1cb8a3a5eb31459c74",
  "patch_info": {
    "commit_hash": "c56c40cb824e34ed2b89ba1cb8a3a5eb31459c74",
    "repo": "esphome/esphome",
    "commit_url": "https://github.com/esphome/esphome/commit/c56c40cb824e34ed2b89ba1cb8a3a5eb31459c74",
    "files": [
      "esphome/dashboard/web_server.py",
      "requirements.txt"
    ],
    "message": "Require xsrf/csrf when using a password (#6396)",
    "before_after_code_files": [
      "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py"
    ]
  },
  "patch_diff": {
    "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py": [
      "File: esphome/dashboard/web_server.py -> esphome/dashboard/web_server.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "688:     @authenticated",
      "689:     def get(self) -> None:",
      "690:         begin = bool(self.get_argument(\"begin\", False))",
      "692:         self.render(",
      "693:             \"index.template.html\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "691:         if settings.using_password:",
      "692:             # Simply accessing the xsrf_token sets the cookie for us",
      "693:             self.xsrf_token  # pylint: disable=pointless-statement",
      "694:         else:",
      "695:             self.clear_cookie(\"_xsrf\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1102:         \"log_function\": log_function,",
      "1103:         \"websocket_ping_interval\": 30.0,",
      "1104:         \"template_path\": get_base_frontend_path(),",
      "1105:     }",
      "1106:     rel = settings.relative_url",
      "1107:     return tornado.web.Application(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1110:         \"xsrf_cookies\": settings.using_password,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b7438a56d0ebace3979c9d55e79093e3dd94469",
      "candidate_info": {
        "commit_hash": "9b7438a56d0ebace3979c9d55e79093e3dd94469",
        "repo": "esphome/esphome",
        "commit_url": "https://github.com/esphome/esphome/commit/9b7438a56d0ebace3979c9d55e79093e3dd94469",
        "files": [
          "esphome/dashboard/web_server.py",
          "requirements.txt"
        ],
        "message": "Require xsrf/csrf when using a password (#6396)",
        "before_after_code_files": [
          "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py"
          ],
          "candidate": [
            "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py"
          ]
        }
      },
      "candidate_diff": {
        "esphome/dashboard/web_server.py||esphome/dashboard/web_server.py": [
          "File: esphome/dashboard/web_server.py -> esphome/dashboard/web_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:     @authenticated",
          "689:     def get(self) -> None:",
          "690:         begin = bool(self.get_argument(\"begin\", False))",
          "692:         self.render(",
          "693:             \"index.template.html\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "691:         if settings.using_password:",
          "692:             # Simply accessing the xsrf_token sets the cookie for us",
          "693:             self.xsrf_token  # pylint: disable=pointless-statement",
          "694:         else:",
          "695:             self.clear_cookie(\"_xsrf\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1102:         \"log_function\": log_function,",
          "1103:         \"websocket_ping_interval\": 30.0,",
          "1104:         \"template_path\": get_base_frontend_path(),",
          "1105:     }",
          "1106:     rel = settings.relative_url",
          "1107:     return tornado.web.Application(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1110:         \"xsrf_cookies\": settings.using_password,",
          "",
          "---------------"
        ]
      }
    }
  ]
}