{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e0e0c6751878e4129fb7f19d90702eb86255bb6e",
      "candidate_info": {
        "commit_hash": "e0e0c6751878e4129fb7f19d90702eb86255bb6e",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/e0e0c6751878e4129fb7f19d90702eb86255bb6e",
        "files": [
          "src/resources/js/pages/auth/verify.vue"
        ],
        "message": "Update verify.vue",
        "before_after_code_files": [
          "src/resources/js/pages/auth/verify.vue||src/resources/js/pages/auth/verify.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/auth/verify.vue||src/resources/js/pages/auth/verify.vue": [
          "File: src/resources/js/pages/auth/verify.vue -> src/resources/js/pages/auth/verify.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:           this.retry = false;",
          "164:           this.timeWait = 60;",
          "165:           this.startCounter();",
          "167:           this.$closeLoader();",
          "168:           this.$vs.notify({",
          "169:             title: this.$t(\"alert.success\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:           this.getConfigurationList()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d9ad2da8874b34eb92a2b143098ac744034a97a",
      "candidate_info": {
        "commit_hash": "4d9ad2da8874b34eb92a2b143098ac744034a97a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/4d9ad2da8874b34eb92a2b143098ac744034a97a",
        "files": [
          "phpstan-baseline.neon"
        ],
        "message": "test1",
        "before_after_code_files": [
          "phpstan-baseline.neon||phpstan-baseline.neon"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpstan-baseline.neon||phpstan-baseline.neon": [
          "File: phpstan-baseline.neon -> phpstan-baseline.neon",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:             - src/Models",
          "11:             - src/Seeder",
          "12:             - src/Widgets",
          "15:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\User::[a-zA-Z0-9-()\\_]+.#'",
          "16:     - '#Call to an undefined static method Spatie\\\\Activitylog\\\\Models\\\\Activity::[a-zA-Z0-9-()\\_]+.#'",
          "",
          "[Removed Lines]",
          "13:             - tests",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdedc841db610b5b6c4c3eb63b0d9f0747b4356b",
      "candidate_info": {
        "commit_hash": "cdedc841db610b5b6c4c3eb63b0d9f0747b4356b",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/cdedc841db610b5b6c4c3eb63b0d9f0747b4356b",
        "files": [
          ".eslintignore",
          ".eslintrc.js",
          ".gitignore",
          "package.json"
        ],
        "message": "gitignore",
        "before_after_code_files": [
          ".eslintrc.js||.eslintrc.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".eslintrc.js||.eslintrc.js": [
          "File: .eslintrc.js -> .eslintrc.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: module.exports = {",
          "2:   env: {",
          "3:     es6: true,",
          "4:     node: true,",
          "5:     browser: true,",
          "6:   },",
          "7:   extends: [",
          "8:     \"plugin:vue/essential\",",
          "9:     \"standard\",",
          "10:     \"eslint:recommended\",",
          "11:     \"plugin:prettier/recommended\",",
          "12:   ],",
          "13:   parserOptions: {",
          "14:     ecmaVersion: 2018,",
          "15:     sourceType: \"module\",",
          "16:     allowImportExportEverywhere: true,",
          "17:     ecmaFeatures: {",
          "18:       jsx: true,",
          "19:     },",
          "20:   },",
          "21:   plugins: [\"vue\", \"flowtype\", \"prettier\"],",
          "22:   globals: {",
          "23:     __WEEX__: true,",
          "24:     WXEnvironment: true,",
          "25:   },",
          "26:   rules: {",
          "27:     \"no-console\": process.env.NODE_ENV !== \"production\" ? 0 : 2,",
          "28:     \"no-useless-escape\": 0,",
          "29:     \"no-empty\": 0,",
          "30:     \"vue/no-mutating-props\": \"off\",",
          "31:     \"no-prototype-builtins\": \"off\",",
          "32:     eqeqeq: \"off\",",
          "33:   },",
          "34: };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f83049e23f89863f0da050b047d3ac6a17a328cd",
      "candidate_info": {
        "commit_hash": "f83049e23f89863f0da050b047d3ac6a17a328cd",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/f83049e23f89863f0da050b047d3ac6a17a328cd",
        "files": [
          "src/Controllers/BadasoActivityLogController.php",
          "src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php",
          "src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoDatabaseController.php",
          "src/Controllers/BadasoMenuController.php",
          "src/Controllers/BadasoPermissionController.php",
          "src/Controllers/BadasoRoleController.php",
          "src/Controllers/BadasoRolePermissionController.php",
          "src/Controllers/BadasoTableController.php",
          "src/Controllers/BadasoUserController.php",
          "src/Controllers/BadasoUserRoleController.php",
          "src/Models/DataRow.php",
          "src/Models/DataType.php",
          "src/Models/EmailReset.php",
          "src/Models/FirebaseCloudMessages.php",
          "src/Models/Menu.php",
          "src/Models/MenuItem.php",
          "src/Models/Permission.php",
          "src/Models/Role.php",
          "src/Models/RolePermission.php",
          "src/Models/User.php",
          "src/Models/UserRole.php",
          "src/Models/UserVerification.php",
          "src/resources/js/pages/activity-log/browse.vue"
        ],
        "message": "add activiy log",
        "before_after_code_files": [
          "src/Controllers/BadasoActivityLogController.php||src/Controllers/BadasoActivityLogController.php",
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php",
          "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php",
          "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php",
          "src/Controllers/BadasoRoleController.php||src/Controllers/BadasoRoleController.php",
          "src/Controllers/BadasoRolePermissionController.php||src/Controllers/BadasoRolePermissionController.php",
          "src/Controllers/BadasoTableController.php||src/Controllers/BadasoTableController.php",
          "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php",
          "src/Controllers/BadasoUserRoleController.php||src/Controllers/BadasoUserRoleController.php",
          "src/Models/DataRow.php||src/Models/DataRow.php",
          "src/Models/DataType.php||src/Models/DataType.php",
          "src/Models/EmailReset.php||src/Models/EmailReset.php",
          "src/Models/FirebaseCloudMessages.php||src/Models/FirebaseCloudMessages.php",
          "src/Models/Menu.php||src/Models/Menu.php",
          "src/Models/MenuItem.php||src/Models/MenuItem.php",
          "src/Models/Permission.php||src/Models/Permission.php",
          "src/Models/Role.php||src/Models/Role.php",
          "src/Models/RolePermission.php||src/Models/RolePermission.php",
          "src/Models/User.php||src/Models/User.php",
          "src/Models/UserRole.php||src/Models/UserRole.php",
          "src/Models/UserVerification.php||src/Models/UserVerification.php",
          "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoActivityLogController.php||src/Controllers/BadasoActivityLogController.php": [
          "File: src/Controllers/BadasoActivityLogController.php -> src/Controllers/BadasoActivityLogController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: use Illuminate\\Support\\Str;",
          "8: use Spatie\\Activitylog\\Models\\Activity;",
          "9: use Uasoft\\Badaso\\Helpers\\ApiResponse;",
          "11: class BadasoActivityLogController extends Controller",
          "12: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: use Uasoft\\Badaso\\Models\\User;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:     {",
          "15:         try {",
          "16:             $limit = $request->get('limit', 10);",
          "18:             $order_field = $request->get('order_field');",
          "19:             $order_direction = $request->get('order_direction');",
          "",
          "[Removed Lines]",
          "17:             $filter = '%'.$request->get('filter', '').'%';",
          "",
          "[Added Lines]",
          "18:             $filter = '%' . $request->get('filter', '') . '%';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "40:             $data = json_decode(json_encode($activitylog));",
          "41:             $data->activitylog = $activitylog->getCollection();",
          "43:             return ApiResponse::success(collect($data)->toArray());",
          "44:         } catch (Exception $e) {",
          "45:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:             foreach ($data->data as $index => $value) {",
          "46:                 $user = User::find($value->causer_id);",
          "47:                 $causer_name = \"\";",
          "48:                 if (isset($user)) {",
          "49:                     $causer_name = $user->name;",
          "50:                 }",
          "51:                 $data->data[$index]->causer_name = $causer_name;",
          "52:             }",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:                 'email' => [",
          "47:                     'required',",
          "48:                     function ($attribute, $value, $fail) use ($credentials) {",
          "50:                             $fail(__('badaso::validation.auth.invalid_credentials'));",
          "51:                         }",
          "52:                     },",
          "",
          "[Removed Lines]",
          "49:                         if (! $token = auth()->attempt($credentials)) {",
          "",
          "[Added Lines]",
          "49:                         if (!$token = auth()->attempt($credentials)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:             $ttl = $this->getTTL($remember);",
          "66:             $token = auth()->setTTL($ttl)->attempt($credentials);",
          "68:             return $this->createNewToken($token, auth()->user(), $remember);",
          "69:         } catch (JWTException $e) {",
          "70:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:             activity('Authentication')",
          "69:                 ->causedBy(auth()->user() ?? null)",
          "70:                 ->withProperties(['attributes' => auth()->user()])",
          "71:                 ->log('Login has been success');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:         try {",
          "79:             auth()->logout();",
          "82:             return ApiResponse::success();",
          "83:         } catch (Exception $e) {",
          "84:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:             activity('Authentication')",
          "87:                 ->causedBy(auth()->user() ?? null)",
          "88:                 ->log('Logout has been success');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111:             $user_role->save();",
          "113:             $should_verify_email = Config::get('adminPanelVerifyEmail') == '1' ? true : false;",
          "115:                 $ttl = $this->getTTL();",
          "116:                 $token = auth()->setTTL($ttl)->login($user);",
          "118:                 DB::commit();",
          "120:                 return $this->createNewToken($token, auth()->user());",
          "121:             } else {",
          "122:                 $token = rand(111111, 999999);",
          "",
          "[Removed Lines]",
          "114:             if (! $should_verify_email) {",
          "",
          "[Added Lines]",
          "121:             if (!$should_verify_email) {",
          "127:                 activity('Authentication')",
          "128:                     ->causedBy(auth()->user() ?? null)",
          "129:                     ->withProperties(['attributes' => [",
          "130:                         'user' => $user,",
          "131:                         'role' => $user_role",
          "132:                     ]])",
          "133:                     ->performedOn($user)",
          "134:                     ->event('created')",
          "135:                     ->log('Register has been created');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "163:     public function getAuthenticatedUser()",
          "164:     {",
          "165:         try {",
          "167:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "168:             }",
          "",
          "[Removed Lines]",
          "166:             if (! $user = AuthenticatedUser::getUser()) {",
          "",
          "[Added Lines]",
          "183:             if (!$user = AuthenticatedUser::getUser()) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "229:     public function changePassword(Request $request)",
          "230:     {",
          "231:         try {",
          "233:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "234:             }",
          "",
          "[Removed Lines]",
          "232:             if (! $user = auth()->user()) {",
          "",
          "[Added Lines]",
          "249:             if (!$user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "237:                 'old_password' => [",
          "238:                     'required',",
          "239:                     function ($attribute, $value, $fail) use ($user) {",
          "241:                             $fail(__('badaso::validation.auth.wrong_old_password'));",
          "242:                         }",
          "243:                     },",
          "",
          "[Removed Lines]",
          "240:                         if (! Hash::check($value, $user->password)) {",
          "",
          "[Added Lines]",
          "257:                         if (!Hash::check($value, $user->password)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "259:             $user->password = Hash::make($request->new_password);",
          "260:             $user->save();",
          "262:             return ApiResponse::success($user);",
          "263:         } catch (Exception $e) {",
          "264:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:             activity('Authentication')",
          "280:                 ->causedBy(auth()->user() ?? null)",
          "281:                 ->withProperties(['attributes' => $request->all()])",
          "282:                 ->performedOn($user)",
          "283:                 ->event('updated')",
          "284:                 ->log('Change password has been updated');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "371:             $user_verification = UserVerification::where('user_id', $user->id)",
          "372:                 ->first();",
          "375:                 throw new SingleException(__('badaso::validation.verification.verification_not_found'));",
          "376:             }",
          "",
          "[Removed Lines]",
          "374:             if (! $user_verification) {",
          "",
          "[Added Lines]",
          "398:             if (!$user_verification) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "416:         DB::beginTransaction();",
          "418:         try {",
          "420:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "421:             }",
          "",
          "[Removed Lines]",
          "419:             if (! $user = auth()->user()) {",
          "",
          "[Added Lines]",
          "443:             if (!$user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "436:             $user->additional_info = $request->additional_info;",
          "437:             $user->save();",
          "441:             return ApiResponse::success($user);",
          "442:         } catch (Exception $e) {",
          "443:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "439:             DB::commit();",
          "",
          "[Added Lines]",
          "464:             DB::commit();",
          "465:             activity('Authentication')",
          "466:                 ->causedBy(auth()->user() ?? null)",
          "467:                 ->withProperties(['attributes' => [",
          "468:                     'old' => auth()->user(),",
          "469:                     'new' => $user,",
          "470:                 ]])",
          "471:                 ->performedOn($user)",
          "472:                 ->event('updated')",
          "473:                 ->log('Update profile has been updated');",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "451:         DB::beginTransaction();",
          "453:         try {",
          "455:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "456:             }",
          "",
          "[Removed Lines]",
          "454:             if (! $user = auth()->user()) {",
          "",
          "[Added Lines]",
          "487:             if (!$user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "491:                 $user->save();",
          "492:             }",
          "494:             DB::commit();",
          "496:             return ApiResponse::success([",
          "497:                 'should_verify_email' => false,",
          "498:                 'user'                => $user,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "531:             activity('Authentication')",
          "532:                 ->causedBy(auth()->user() ?? null)",
          "533:                 ->withProperties(['attributes' => [",
          "534:                     'old' => auth()->user()->email,",
          "535:                     'new' => $user->email,",
          "536:                 ]])",
          "537:                 ->performedOn($user)",
          "538:                 ->event('updated')",
          "539:                 ->log('Update email has been updated');",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "507:     public function verifyEmail(Request $request)",
          "508:     {",
          "509:         try {",
          "511:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "512:             }",
          "",
          "[Removed Lines]",
          "510:             if (! $user = auth()->user()) {",
          "",
          "[Added Lines]",
          "555:             if (!$user = auth()->user()) {",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:             $slug = $this->getSlug($request);",
          "62:             $data_type = $this->getDataType($slug);",
          "63:             $request->validate([",
          "65:             ]);",
          "67:             $data = $this->getDataDetail($slug, $request->id);",
          "",
          "[Removed Lines]",
          "64:                 'id' => 'exists:'.$data_type->name,",
          "",
          "[Added Lines]",
          "64:                 'id' => 'exists:' . $data_type->name,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:             $this->validateData($data, $data_type);",
          "97:             $updated = $this->updateData($data, $data_type);",
          "99:             activity($data_type->display_name_singular)",
          "100:                 ->causedBy(auth()->user() ?? null)",
          "101:                 ->withProperties([",
          "102:                     'old' => $updated['old_data'],",
          "103:                     'attributes' => $updated['updated_data'],",
          "104:                 ])",
          "110:             $table_name = $data_type->name;",
          "111:             FCMNotification::notification(FCMNotification::$ACTIVE_EVENT_ON_UPDATE, $table_name);",
          "",
          "[Removed Lines]",
          "105:                 ->log($data_type->display_name_singular.' has been updated');",
          "107:             DB::commit();",
          "",
          "[Added Lines]",
          "101:             DB::commit();",
          "108:                 ->log($data_type->display_name_singular . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:             activity($data_type->display_name_singular)",
          "144:                 ->causedBy(auth()->user() ?? null)",
          "145:                 ->withProperties(['attributes' => $stored_data])",
          "148:             DB::commit();",
          "",
          "[Removed Lines]",
          "146:                 ->log($data_type->display_name_singular.' has been created');",
          "",
          "[Added Lines]",
          "146:                 ->log($data_type->display_name_singular . ' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "184:             activity($data_type->display_name_singular)",
          "185:                 ->causedBy(auth()->user() ?? null)",
          "186:                 ->withProperties($data)",
          "189:             DB::commit();",
          "",
          "[Removed Lines]",
          "187:                 ->log($data_type->display_name_singular.' has been deleted');",
          "",
          "[Added Lines]",
          "187:                 ->log($data_type->display_name_singular . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "223:             activity($data_type->display_name_singular)",
          "224:                 ->causedBy(auth()->user() ?? null)",
          "225:                 ->withProperties($data)",
          "228:             DB::commit();",
          "",
          "[Removed Lines]",
          "226:                 ->log($data_type->display_name_singular.' has been restore');",
          "",
          "[Added Lines]",
          "226:                 ->log($data_type->display_name_singular . ' has been restore');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "265:             activity($data_type->display_name_singular)",
          "266:                 ->causedBy(auth()->user() ?? null)",
          "267:                 ->withProperties($data)",
          "270:             DB::commit();",
          "",
          "[Removed Lines]",
          "268:                 ->log($data_type->display_name_singular.' has been bulk deleted');",
          "",
          "[Added Lines]",
          "268:                 ->log($data_type->display_name_singular . ' has been bulk deleted');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "305:             activity($data_type->display_name_singular)",
          "306:                 ->causedBy(auth()->user() ?? null)",
          "307:                 ->withProperties($data)",
          "310:             DB::commit();",
          "",
          "[Removed Lines]",
          "308:                 ->log($data_type->display_name_singular.' has been bulk deleted');",
          "",
          "[Added Lines]",
          "308:                 ->log($data_type->display_name_singular . ' has been bulk deleted');",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "343:                     activity($data_type->display_name_singular)",
          "344:                         ->causedBy(auth()->user() ?? null)",
          "345:                         ->withProperties(['attributes' => $single_data])",
          "347:                 }",
          "348:             } else {",
          "349:                 foreach ($request->data as $index => $row) {",
          "",
          "[Removed Lines]",
          "346:                         ->log($data_type->display_name_singular.' has been sorted');",
          "",
          "[Added Lines]",
          "346:                         ->log($data_type->display_name_singular . ' has been sorted');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "353:                     activity($data_type->display_name_singular)",
          "354:                         ->causedBy(auth()->user() ?? null)",
          "355:                         ->withProperties(['attributes' => $updated_data])",
          "357:                 }",
          "358:             }",
          "",
          "[Removed Lines]",
          "356:                         ->log($data_type->display_name_singular.' has been sorted');",
          "",
          "[Added Lines]",
          "356:                         ->log($data_type->display_name_singular . ' has been sorted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php": [
          "File: src/Controllers/BadasoCRUDController.php -> src/Controllers/BadasoCRUDController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:             $data_type = DataType::find($request->input('id'));",
          "187:             $data_type->name = $table_name;",
          "188:             $data_type->slug = $request->input('slug') ?? Str::slug($table_name);",
          "",
          "[Removed Lines]",
          "179:             activity('CRUD')",
          "180:                 ->causedBy(auth()->user() ?? null)",
          "181:                 ->withProperties([",
          "182:                     'old' => $data_type,",
          "183:                     'new' => $request->input(),",
          "184:                 ])",
          "185:                 ->log('CRUD table'.$data_type->slug.' has been edited');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "262:             $this->generateAPIDocs($table_name, $data_rows, $data_type);",
          "263:             DB::commit();",
          "265:             return ApiResponse::success($data_type);",
          "266:         } catch (Exception $e) {",
          "267:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:             activity('CRUD')",
          "260:                 ->causedBy(auth()->user() ?? null)",
          "261:                 ->withProperties([",
          "262:                     'old' => $data_type,",
          "263:                     'new' => $request->input(),",
          "264:                 ])",
          "265:                 ->performedOn($data_type)",
          "266:                 ->event('updated')",
          "267:                 ->log('CRUD table ' . $data_type->slug . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:             $this->generateAPIDocs($table_name, $data_rows, $new_data_type);",
          "392:             activity('CRUD')",
          "393:                 ->causedBy(auth()->user() ?? null)",
          "394:                 ->withProperties(['attributes' => $new_data_type])",
          "399:             return ApiResponse::success($new_data_type);",
          "400:         } catch (Exception $e) {",
          "401:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "395:                 ->log('CRUD table '.$new_data_type->slug.' has been created');",
          "397:             DB::commit();",
          "",
          "[Added Lines]",
          "396:             DB::commit();",
          "401:                 ->performedOn($new_data_type)",
          "402:                 ->event('created')",
          "403:                 ->log('CRUD table ' . $new_data_type->slug . ' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "426:             event(new CRUDDataDeleted($data_type));",
          "433:             DB::commit();",
          "435:             return ApiResponse::success();",
          "436:         } catch (Exception $e) {",
          "437:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "428:             activity('CRUD')",
          "429:                 ->causedBy(auth()->user() ?? null)",
          "430:                 ->withProperties($data_type)",
          "431:                 ->log('CRUD table '.$data_type->slug.' has been deleted');",
          "",
          "[Added Lines]",
          "435:             activity('CRUD')",
          "436:             ->causedBy(auth()->user() ?? null)",
          "437:             ->withProperties(['attributes' => $data_type])",
          "438:             ->performedOn($data_type)",
          "439:             ->event('deleted')",
          "440:             ->log('CRUD table ' . $data_type->slug . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php": [
          "File: src/Controllers/BadasoConfigurationsController.php -> src/Controllers/BadasoConfigurationsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:             ]);",
          "130:             $configuration = Configuration::find($request->id);",
          "133:                 $configuration->key = $request->key;",
          "134:                 $configuration->display_name = $request->display_name;",
          "135:                 $configuration->value = $request->value;",
          "",
          "[Removed Lines]",
          "132:             if (! is_null($configuration)) {",
          "",
          "[Added Lines]",
          "132:             if (!is_null($configuration)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:                     'id' => ['required'],",
          "166:                 ])->validate();",
          "167:                 $updated_configuration = Configuration::find($configuration['id']);",
          "169:                     $updated_configuration->key = $configuration['key'];",
          "170:                     $updated_configuration->display_name = $configuration['display_name'];",
          "171:                     $updated_configuration->value = $configuration['value'];",
          "",
          "[Removed Lines]",
          "168:                 if (! is_null($configuration)) {",
          "",
          "[Added Lines]",
          "168:                 if (!is_null($configuration)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:             ConfigurationRedis::save();",
          "191:             DB::commit();",
          "193:             return ApiResponse::success();",
          "194:         } catch (Exception $e) {",
          "195:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "183:             activity('Configurations')",
          "184:                 ->causedBy(auth()->user() ?? null)",
          "185:                 ->withProperties([",
          "186:                     'old' => $request->configurations,",
          "187:                     'new' => $updated_configuration",
          "188:                 ])",
          "189:                 ->log('Configurations has been edited');",
          "",
          "[Added Lines]",
          "185:             activity('Configurations')",
          "186:                 ->causedBy(auth()->user() ?? null)",
          "187:                 ->withProperties(['attributes' => $request->configurations])",
          "188:                 ->performedOn($updated_configuration)",
          "189:                 ->event('updated')",
          "190:                 ->log('Configuration has been updated');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "213:                         if (in_array($request->type, ['checkbox', 'radio', 'select', 'select_multiple'])) {",
          "214:                             json_decode($value);",
          "215:                             $is_json = (json_last_error() == JSON_ERROR_NONE);",
          "217:                                 $fail('The details must be a valid JSON string.');",
          "218:                             }",
          "219:                         }",
          "220:                     },",
          "221:                     function ($attribute, $value, $fail) use ($request) {",
          "222:                         if (in_array($request->type, ['checkbox', 'radio', 'select', 'select_multiple'])) {",
          "224:                                 $fail('Options is required for  Checkbox, Radio, Select, Select-multiple');",
          "225:                             }",
          "226:                         }",
          "",
          "[Removed Lines]",
          "216:                             if (! $is_json) {",
          "223:                             if (! isset($value) || is_null($value)) {",
          "",
          "[Added Lines]",
          "214:                             if (!$is_json) {",
          "221:                             if (!isset($value) || is_null($value)) {",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:                     activity('Database')",
          "76:                         ->causedBy(auth()->user() ?? null)",
          "77:                         ->withProperties(['attributes' => $request->all()])",
          "78:                         ->log('Add table ' . $request->table . ' has been created');",
          "80:                     return ApiResponse::success($msg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:                         ->event('created')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:                         'old' => [$table['current_name'], $fields['current_fields'], $relations['current_relations']],",
          "177:                         'new' => [$table['modified_name'], $fields['modified_fields'], $relations['modified_relations']],",
          "178:                     ])",
          "180:                     return ApiResponse::success(__('badaso::validation.database.alter_migration_created', ['table' => $table['modified_name']]));",
          "181:                     break;",
          "",
          "[Removed Lines]",
          "179:                     ->log('Edit table ' . $table['current_name'] . ' has been edited');",
          "",
          "[Added Lines]",
          "179:                     ->event('updated')",
          "180:                     ->log('Edit table ' . $table['current_name'] . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "241:                 case 0:",
          "242:                     activity('Database')",
          "243:                     ->causedBy(auth()->user() ?? null)",
          "245:                     ->log('Delete table ' . $request->table. ' has been deleted');",
          "246:                     return ApiResponse::success(__('badaso::validation.database.migration_dropped', ['table' => $request->table]));",
          "247:                     break;",
          "248:                 default:",
          "",
          "[Removed Lines]",
          "244:                     ->withProperties($rows)",
          "",
          "[Added Lines]",
          "245:                     ->event('deleted')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "280:             switch ($exitCode) {",
          "281:                 case 0:",
          "282:                     return ApiResponse::success(__('badaso::validation.database.rollback_success'));",
          "283:                     break;",
          "284:                 default:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:                     activity('Database')",
          "285:                         ->causedBy(auth()->user() ?? null)",
          "286:                         ->event('rollback')",
          "287:                         ->log('Rollback table has been success');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "361:                 }",
          "362:             }",
          "364:             return ApiResponse::success(__('badaso::validation.database.migration_deleted'));",
          "365:         } catch (Exception $e) {",
          "366:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "370:             $file_name = join(\", \", $request->file_name);",
          "371:             activity('Database')",
          "372:                 ->causedBy(auth()->user() ?? null)",
          "373:                 ->event('deleted')",
          "374:                 ->log('Migration ' . $file_name . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php": [
          "File: src/Controllers/BadasoMenuController.php -> src/Controllers/BadasoMenuController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:             $new_menu->save();",
          "294:             DB::commit();",
          "296:             return ApiResponse::success($new_menu);",
          "297:         } catch (Exception $e) {",
          "298:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:             activity('Menu')",
          "296:                 ->causedBy(auth()->user() ?? null)",
          "297:                 ->withProperties(['attributes' => $new_menu])",
          "298:                 ->performedOn($new_menu)",
          "299:                 ->event('created')",
          "300:                 ->log('Menu ' . $new_menu->display_name . ' has been created');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "332:             DB::commit();",
          "334:             return ApiResponse::success($new_menu_item);",
          "335:         } catch (Exception $e) {",
          "336:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339:             activity('Menu')",
          "340:                 ->causedBy(auth()->user() ?? null)",
          "341:                 ->withProperties(['attributes' => $new_menu_item])",
          "342:                 ->performedOn($new_menu_item)",
          "343:                 ->event('created')",
          "344:                 ->log('Menu ' . $new_menu_item->title . ' has been created');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "351:             ]);",
          "353:             $menu = Menu::find($request->menu_id);",
          "354:             $menu->key = $request->get('key');",
          "355:             $menu->display_name = $request->get('display_name');",
          "356:             $menu->icon = $request->get('icon');",
          "357:             $menu->save();",
          "359:             DB::commit();",
          "361:             return ApiResponse::success($menu);",
          "362:         } catch (Exception $e) {",
          "363:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366:             $old_menu = $menu;",
          "373:             activity('Menu')",
          "374:                 ->causedBy(auth()->user() ?? null)",
          "375:                 ->withProperties(['attributes' => [",
          "376:                         'old' => $old_menu,",
          "377:                         'new' => $menu",
          "378:                         ]",
          "379:                 ])",
          "380:                 ->performedOn($menu)",
          "381:                 ->event('updated')",
          "382:                 ->log('Menu ' . $menu->display_name . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "385:             }",
          "387:             $menu_item = MenuItem::find($request->menu_item_id);",
          "388:             $menu_item->menu_id = $request->get('menu_id');",
          "389:             $menu_item->title = $request->get('title');",
          "390:             $menu_item->url = $url;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410:             $old_menu_item = $menu_item->toArray();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "396:             DB::commit();",
          "398:             return ApiResponse::success($menu_item);",
          "399:         } catch (Exception $e) {",
          "400:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421:             activity('Menu')",
          "422:                 ->causedBy(auth()->user() ?? null)",
          "423:                 ->withProperties([",
          "424:                     'attributes' => [",
          "425:                         'old' => $old_menu_item,",
          "426:                         'new' => $menu_item",
          "427:                     ]",
          "428:                 ])",
          "429:                 ->performedOn($menu_item)",
          "430:                 ->event('updated')",
          "431:                 ->log('Menu item ' . $menu_item->title . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "448:             $menu_item->save();",
          "450:             DB::commit();",
          "452:             return ApiResponse::success();",
          "453:         } catch (Exception $e) {",
          "454:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "486:             activity('Menu')",
          "487:                 ->causedBy(auth()->user() ?? null)",
          "488:                 ->withProperties([",
          "489:                     'attributes' => [",
          "490:                         'old' => $old_order,",
          "491:                         'new' => $new_order",
          "492:                     ]",
          "493:                 ])",
          "494:                 ->performedOn($menu_items)",
          "495:                 ->event('updated')",
          "496:                 ->log('Menu item order ' . $menu_item->title . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "501:                 'menu_id' => ['required', 'exists:Uasoft\\Badaso\\Models\\Menu,id'],",
          "502:             ]);",
          "506:             DB::commit();",
          "508:             return ApiResponse::success();",
          "509:         } catch (Exception $e) {",
          "510:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "504:             Menu::find($request->menu_id)->delete();",
          "",
          "[Added Lines]",
          "549:             $menus = Menu::find($request->menu_id);",
          "550:             $menus->delete();",
          "554:             activity('Menu')",
          "555:                 ->causedBy(auth()->user() ?? null)",
          "556:                 ->withProperties(['attributes' => $request->all()])",
          "557:                 ->performedOn($menus)",
          "558:                 ->event('deleted')",
          "559:                 ->log('Menu ' . $menus->display_name . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "523:                 'menu_item_id' => ['required', 'exists:Uasoft\\Badaso\\Models\\MenuItem,id'],",
          "524:             ]);",
          "528:             DB::commit();",
          "530:             return ApiResponse::success();",
          "531:         } catch (Exception $e) {",
          "532:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "526:             MenuItem::find($request->menu_item_id)->delete();",
          "",
          "[Added Lines]",
          "579:             $menu_items = MenuItem::find($request->menu_item_id);",
          "580:             $menu_items->delete();",
          "583:             activity('Menu')",
          "584:                 ->causedBy(auth()->user() ?? null)",
          "585:                 ->withProperties(['attributes' => $request->all()])",
          "586:                 ->performedOn($menu_items)",
          "587:                 ->event('deleted')",
          "588:                 ->log('Menu item' . $menu_items->title . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php": [
          "File: src/Controllers/BadasoPermissionController.php -> src/Controllers/BadasoPermissionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: class BadasoPermissionController extends Controller",
          "12: {",
          "13:     public function browse(Request $request)",
          "15:         try {",
          "16:             $permissions = Permission::all();",
          "",
          "[Removed Lines]",
          "14:     {",
          "",
          "[Added Lines]",
          "14:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:             ]);",
          "60:             $permission = Permission::find($request->id);",
          "61:             $permission->key = $request->key;",
          "62:             $permission->description = $request->description;",
          "63:             $permission->always_allow = $request->always_allow;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:             $permission_old = $permission->toArray();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:             DB::commit();",
          "69:             return ApiResponse::success($permission);",
          "70:         } catch (Exception $e) {",
          "71:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:             activity('Permissions')",
          "72:                 ->causedBy(auth()->user() ?? null)",
          "73:                 ->withProperties(['attributes' => [",
          "74:                     'old' => $permission_old,",
          "75:                     'new' => $permission,",
          "76:                 ]])",
          "77:                 ->performedOn($permission)",
          "78:                 ->event('edited')",
          "79:                 ->log('Permission ' . $permission->key . ' has been edited');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96:             DB::commit();",
          "98:             return ApiResponse::success($permission);",
          "99:         } catch (Exception $e) {",
          "100:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:             activity('Permissions')",
          "110:                 ->causedBy(auth()->user() ?? null)",
          "111:                 ->withProperties(['attributes' => $permission])",
          "112:                 ->performedOn($permission)",
          "113:                 ->event('created')",
          "114:                 ->log('Permission ' . $permission->key . ' has been created');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "115:                 ],",
          "116:             ]);",
          "120:             DB::commit();",
          "122:             return ApiResponse::success();",
          "123:         } catch (Exception $e) {",
          "124:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "118:             Permission::find($request->id)->delete();",
          "",
          "[Added Lines]",
          "136:             $permission = Permission::find($request->id);",
          "137:             $permission->delete();",
          "140:             activity('Permissions')",
          "141:                 ->causedBy(auth()->user() ?? null)",
          "142:                 ->withProperties(['attributes' => $request->all()])",
          "143:                 ->performedOn($permission)",
          "144:                 ->event('deleted')",
          "145:                 ->log('Permission ' . $permission->key . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "141:             $id_list = explode(',', $request->ids);",
          "143:             foreach ($id_list as $key => $id) {",
          "145:             }",
          "147:             DB::commit();",
          "149:             return ApiResponse::success();",
          "150:         } catch (Exception $e) {",
          "151:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "144:                 Permission::find($id)->delete();",
          "",
          "[Added Lines]",
          "167:             $permission_keys = [];",
          "169:                 $permission = Permission::find($id);",
          "170:                 $permission_keys[] = $permission->key;",
          "171:                 $permission->delete();",
          "173:            $permission_keys = join(\",\", $permission_keys);",
          "175:             activity('Permissions')",
          "176:                 ->causedBy(auth()->user() ?? null)",
          "177:                 ->withProperties(['attributes' => $request->all()])",
          "178:                 ->performedOn($permission)",
          "179:                 ->event('deleted')",
          "180:                 ->log('Permission ' . $permission_keys . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoRoleController.php||src/Controllers/BadasoRoleController.php": [
          "File: src/Controllers/BadasoRoleController.php -> src/Controllers/BadasoRoleController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:             ]);",
          "58:             $role = Role::find($request->id);",
          "59:             $role->name = $request->name;",
          "60:             $role->display_name = $request->display_name;",
          "61:             $role->description = $request->description;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:             $old_role = $role;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             DB::commit();",
          "66:             return ApiResponse::success($role);",
          "67:         } catch (Exception $e) {",
          "68:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:             activity('Role Controllers')",
          "69:                 ->causedBy(auth()->user() ?? null)",
          "70:                 ->withProperties(['attributes' => [",
          "71:                     'old' => $old_role,",
          "72:                     'new' => $role",
          "73:                 ]])",
          "74:                 ->performedOn($role)",
          "75:                 ->event('updated')",
          "76:                 ->log('Role ' . $role->name . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:             $role->save();",
          "91:             DB::commit();",
          "93:             return ApiResponse::success($role);",
          "94:         } catch (Exception $e) {",
          "95:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:             activity('Role Controllers')",
          "105:                 ->causedBy(auth()->user() ?? null)",
          "106:                 ->withProperties(['attributes' => $role])",
          "107:                 ->performedOn($role)",
          "108:                 ->event('created')",
          "109:                 ->log('Role ' . $role->name . ' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "110:                 ],",
          "111:             ]);",
          "115:             DB::commit();",
          "117:             return ApiResponse::success();",
          "118:         } catch (Exception $e) {",
          "119:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "113:             Role::find($request->id)->delete();",
          "",
          "[Added Lines]",
          "130:             $role = Role::find($request->id);",
          "131:             $role->delete();",
          "135:             activity('Role Controllers')",
          "136:                 ->causedBy(auth()->user() ?? null)",
          "137:                 ->withProperties(['attributes' => $request->all()])",
          "138:                 ->performedOn($role)",
          "139:                 ->event('deleted')",
          "140:                 ->log('Role ' . $role->name . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "136:             $id_list = explode(',', $request->ids);",
          "138:             foreach ($id_list as $key => $id) {",
          "140:             }",
          "142:             DB::commit();",
          "144:             return ApiResponse::success();",
          "145:         } catch (Exception $e) {",
          "146:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "139:                 Role::find($id)->delete();",
          "",
          "[Added Lines]",
          "162:             $role_name = [];",
          "164:                 $role = Role::find($id);",
          "165:                 $role_name[] = $role->name;",
          "166:                 $role->delete();",
          "168:             $role_name = join(\",\" , $role_name);",
          "171:             activity('Role Controllers')",
          "172:                 ->causedBy(auth()->user() ?? null)",
          "173:                 ->withProperties(['attributes' => $request->all()])",
          "174:                 ->performedOn($role)",
          "175:                 ->event('deleted')",
          "176:                 ->log('Role ' . $role->name . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoRolePermissionController.php||src/Controllers/BadasoRolePermissionController.php": [
          "File: src/Controllers/BadasoRolePermissionController.php -> src/Controllers/BadasoRolePermissionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:                         WHEN B.role_id is not null then 1",
          "62:                         else 0",
          "63:                     END as selected",
          "66:             ';",
          "67:             $role_permissions = DB::select($query, [",
          "68:                 'role_id' => $request->role_id,",
          "",
          "[Removed Lines]",
          "64:                 FROM '.$prefix.'permissions A",
          "65:                 LEFT JOIN '.$prefix.'role_permissions B ON A.id = B.permission_id AND B.role_id = :role_id",
          "",
          "[Added Lines]",
          "64:                 FROM ' . $prefix . 'permissions A",
          "65:                 LEFT JOIN ' . $prefix . 'role_permissions B ON A.id = B.permission_id AND B.role_id = :role_id",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:             $permissions = $request->permissions;",
          "88:             $role = Role::find($request->role_id);",
          "90:                 $stored_permissions = [];",
          "91:                 foreach ($permissions as $key => $value) {",
          "92:                     $permission = Permission::find($value);",
          "94:                         $role_permission = [",
          "95:                             'role_id'       => $role->id,",
          "96:                             'permission_id' => $permission->id,",
          "",
          "[Removed Lines]",
          "89:             if (! is_null($role)) {",
          "93:                     if (! is_null($permission)) {",
          "",
          "[Added Lines]",
          "89:             if (!is_null($role)) {",
          "93:                     if (!is_null($permission)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:             }",
          "111:             $data = [];",
          "113:             return ApiResponse::success($data);",
          "114:         } catch (Exception $e) {",
          "115:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:             activity('Role Permissions')",
          "113:                 ->causedBy(auth()->user() ?? null)",
          "114:                 ->withProperties(['attributes' => $request->all()])",
          "115:                 ->event('created or updated')",
          "116:                 ->log('Role ' . $role->name . ' has been created or updated');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoTableController.php||src/Controllers/BadasoTableController.php": [
          "File: src/Controllers/BadasoTableController.php -> src/Controllers/BadasoTableController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:             }",
          "109:             DB::commit();",
          "111:             return ApiResponse::success();",
          "112:         } catch (Exception $e) {",
          "113:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:             activity('Generate Table')",
          "111:                 ->causedBy(auth()->user() ?? null)",
          "112:                 ->withProperties(['attributes' => [",
          "113:                         'data_type' => $new_data_type,",
          "114:                         'data_rows' => $new_data_row",
          "115:                 ]])",
          "116:                 ->event('created')",
          "117:                 ->log('Table ' . $new_data_type->display_name_singular . ' has been created');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:                 'table' => [",
          "124:                     'required',",
          "125:                     function ($attribute, $value, $fail) {",
          "127:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "128:                         }",
          "129:                     },",
          "",
          "[Removed Lines]",
          "126:                         if (! Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "133:                         if (!Schema::hasTable($value)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:                         $destination_table_column,",
          "179:                         $destination_table_display_column,",
          "180:                     ])",
          "182:                     $result = collect($relation_data);",
          "184:                     $data[$destination_table] = $result->map(function ($res) use ($destination_table_column, $destination_table_display_column) {",
          "",
          "[Removed Lines]",
          "181:                     ->get();",
          "",
          "[Added Lines]",
          "188:                         ->get();",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php": [
          "File: src/Controllers/BadasoUserController.php -> src/Controllers/BadasoUserController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:             $user = User::find($request->id);",
          "41:             $data['user'] = $user;",
          "",
          "[Removed Lines]",
          "39:             $user->email_verified = ! is_null($user->email_verified_at);",
          "",
          "[Added Lines]",
          "39:             $user->email_verified = !is_null($user->email_verified_at);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             ]);",
          "62:             $user = User::find($request->id);",
          "63:             $user->name = $request->name;",
          "64:             $user->email = $request->email;",
          "65:             $user->avatar = $request->avatar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:             $old_user = $user->toArray();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:             $user->save();",
          "76:             DB::commit();",
          "78:             return ApiResponse::success($user);",
          "79:         } catch (Exception $e) {",
          "80:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:             activity('User')",
          "80:                 ->causedBy(auth()->user() ?? null)",
          "81:                 ->withProperties(['attributes' => [",
          "82:                     'old' => $old_user,",
          "83:                     'new' => $user",
          "84:                 ]])",
          "85:                 ->performedOn($user)",
          "86:                 ->event('updated')",
          "87:                 ->log('User ' . $user->name . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:             $user->save();",
          "110:             DB::commit();",
          "112:             return ApiResponse::success($user);",
          "113:         } catch (Exception $e) {",
          "114:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:             activity('User')",
          "122:                 ->causedBy(auth()->user() ?? null)",
          "123:                 ->withProperties(['attributes' => $user])",
          "124:                 ->performedOn($user)",
          "125:                 ->event('created')",
          "126:                 ->log('User ' . $user->name . ' has been created');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "134:             $user->delete();",
          "136:             DB::commit();",
          "138:             return ApiResponse::success();",
          "139:         } catch (Exception $e) {",
          "140:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:             activity('User')",
          "153:                 ->causedBy(auth()->user() ?? null)",
          "154:                 ->performedOn($user)",
          "155:                 ->event('deleted')",
          "156:                 ->log('User ' . $user->name . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "157:             $id_list = explode(',', $request->ids);",
          "159:             foreach ($id_list as $key => $id) {",
          "160:                 $user = User::find($id);",
          "161:                 $this->handleDeleteFile($user->avatar);",
          "162:                 $user->delete();",
          "163:             }",
          "165:             DB::commit();",
          "167:             return ApiResponse::success();",
          "168:         } catch (Exception $e) {",
          "169:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:             $user_name = [];",
          "182:                 $user_name[] = $user->name;",
          "185:             $user_name = join(\",\",$user_name);",
          "187:             activity('User')",
          "188:                 ->causedBy(auth()->user() ?? null)",
          "189:                 ->performedOn($user)",
          "190:                 ->event('deleted')",
          "191:                 ->log('User ' . $user_name . ' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoUserRoleController.php||src/Controllers/BadasoUserRoleController.php": [
          "File: src/Controllers/BadasoUserRoleController.php -> src/Controllers/BadasoUserRoleController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:                         WHEN B.user_id is not null then 1",
          "64:                         else 0",
          "65:                     END as selected",
          "68:             ';",
          "69:             $user_roles = DB::select($query, [",
          "70:                 'user_id' => $request->user_id,",
          "",
          "[Removed Lines]",
          "66:                 FROM '.$prefix.'roles A",
          "67:                 LEFT JOIN '.$prefix.'user_roles B ON A.id = B.role_id AND B.user_id = :user_id",
          "",
          "[Added Lines]",
          "66:                 FROM ' . $prefix . 'roles A",
          "67:                 LEFT JOIN ' . $prefix . 'user_roles B ON A.id = B.role_id AND B.user_id = :user_id",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:             $roles = $request->get('roles', []);",
          "89:             $user = User::find($request->user_id);",
          "91:                 $stored_roles = [];",
          "92:                 foreach ($roles as $key => $value) {",
          "93:                     $role = Role::find($value);",
          "95:                         $user_role = [",
          "96:                             'user_id' => $user->id,",
          "97:                             'role_id' => $role->id,",
          "",
          "[Removed Lines]",
          "90:             if (! is_null($user)) {",
          "94:                     if (! is_null($role)) {",
          "",
          "[Added Lines]",
          "90:             if (!is_null($user)) {",
          "94:                     if (!is_null($role)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:             }",
          "111:             $data = [];",
          "113:             return ApiResponse::success($data);",
          "114:         } catch (Exception $e) {",
          "115:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:             activity('User')",
          "113:                 ->causedBy(auth()->user() ?? null)",
          "114:                 ->performedOn($user)",
          "115:                 ->event('created or updated')",
          "116:                 ->log('User ' . $user->name . ' has been created or updated');",
          "",
          "---------------"
        ],
        "src/Models/DataRow.php||src/Models/DataRow.php": [
          "File: src/Models/DataRow.php -> src/Models/DataRow.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "52:     }",
          "53: }",
          "",
          "[Removed Lines]",
          "51:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "51:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/DataType.php||src/Models/DataType.php": [
          "File: src/Models/DataType.php -> src/Models/DataType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     public function getActivitylogOptions(): LogOptions",
          "49:     {",
          "51:     }",
          "52: }",
          "",
          "[Removed Lines]",
          "50:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "50:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/EmailReset.php||src/Models/EmailReset.php": [
          "File: src/Models/EmailReset.php -> src/Models/EmailReset.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public function getActivitylogOptions(): LogOptions",
          "43:     {",
          "45:     }",
          "46: }",
          "",
          "[Removed Lines]",
          "44:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "44:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/FirebaseCloudMessages.php||src/Models/FirebaseCloudMessages.php": [
          "File: src/Models/FirebaseCloudMessages.php -> src/Models/FirebaseCloudMessages.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "52:     }",
          "53: }",
          "",
          "[Removed Lines]",
          "51:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "51:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/Menu.php||src/Models/Menu.php": [
          "File: src/Models/Menu.php -> src/Models/Menu.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     public function getActivitylogOptions(): LogOptions",
          "39:     {",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "40:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "40:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/MenuItem.php||src/Models/MenuItem.php": [
          "File: src/Models/MenuItem.php -> src/Models/MenuItem.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     public function getActivitylogOptions(): LogOptions",
          "77:     {",
          "79:     }",
          "80: }",
          "",
          "[Removed Lines]",
          "78:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "78:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/Permission.php||src/Models/Permission.php": [
          "File: src/Models/Permission.php -> src/Models/Permission.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     public function getActivitylogOptions(): LogOptions",
          "95:     {",
          "97:     }",
          "98: }",
          "",
          "[Removed Lines]",
          "96:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "96:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/Role.php||src/Models/Role.php": [
          "File: src/Models/Role.php -> src/Models/Role.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     public function getActivitylogOptions(): LogOptions",
          "56:     {",
          "58:     }",
          "59: }",
          "",
          "[Removed Lines]",
          "57:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "57:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/RolePermission.php||src/Models/RolePermission.php": [
          "File: src/Models/RolePermission.php -> src/Models/RolePermission.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     public function getActivitylogOptions(): LogOptions",
          "51:     {",
          "53:     }",
          "54: }",
          "",
          "[Removed Lines]",
          "52:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "52:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/User.php||src/Models/User.php": [
          "File: src/Models/User.php -> src/Models/User.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     public function getActivitylogOptions(): LogOptions",
          "90:     {",
          "92:     }",
          "",
          "[Removed Lines]",
          "91:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "91:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/UserRole.php||src/Models/UserRole.php": [
          "File: src/Models/UserRole.php -> src/Models/UserRole.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "52:     }",
          "53: }",
          "",
          "[Removed Lines]",
          "51:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "51:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/Models/UserVerification.php||src/Models/UserVerification.php": [
          "File: src/Models/UserVerification.php -> src/Models/UserVerification.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function getActivitylogOptions(): LogOptions",
          "47:     {",
          "49:     }",
          "50: }",
          "",
          "[Removed Lines]",
          "48:         return LogOptions::defaults();",
          "",
          "[Added Lines]",
          "48:         return LogOptions::defaults()->dontSubmitEmptyLogs();",
          "",
          "---------------"
        ],
        "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue": [
          "File: src/resources/js/pages/activity-log/browse.vue -> src/resources/js/pages/activity-log/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:                   <vs-td :data=\"record.logName\">",
          "61:                     {{ record.logName ? record.logName : \"-\" }}",
          "62:                   </vs-td>",
          "65:                   </vs-td>",
          "66:                   <vs-td :data=\"record.description\">",
          "67:                     {{ record.description }}",
          "",
          "[Removed Lines]",
          "63:                   <vs-td :data=\"record.causerId\">",
          "64:                     {{ record.causerId ? record.causerId : \"-\" }}",
          "",
          "[Added Lines]",
          "63:                   <vs-td :data=\"record.causerName\">",
          "64:                     {{ record.causerName ? record.causerName : \"-\" }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:           this.selected = [];",
          "173:           this.data = response.data;",
          "174:           this.activitylogs = response.data.activitylog;",
          "175:           this.totalItem =",
          "176:             response.data.total > 0",
          "177:               ? Math.ceil(response.data.total / this.limit)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:           console.log(this.activitylogs);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "714151e04a390d0e6096d367bb8e67b3360ecdb3",
      "candidate_info": {
        "commit_hash": "714151e04a390d0e6096d367bb8e67b3360ecdb3",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/714151e04a390d0e6096d367bb8e67b3360ecdb3",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:         $table_names = [];",
          "409:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "410:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "412:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "413:                     $table->id();",
          "",
          "[Removed Lines]",
          "411:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "411:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:         $table_names = [];",
          "440:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "441:             $table_name = \"{$this->TABLE_TEST_EMPTY_VALUE_PREFIX}{$index}\";",
          "443:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "444:                     $table->id();",
          "",
          "[Removed Lines]",
          "442:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "442:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "639:                 }",
          "640:                 PHP;",
          "641:                 $model_path = app_path(\"Models/$model_file_name\");",
          "643:                     file_put_contents($model_path, $model_body);",
          "644:                 }",
          "",
          "[Removed Lines]",
          "642:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "642:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "660:             $controller_data = [];",
          "661:             if (rand(0, 1)) {",
          "664:                 $controller_file_name = \"{$controller_name}.php\";",
          "665:                 $controller_body = <<<PHP",
          "666:                 <?php",
          "",
          "[Removed Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "669:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "670:                 PHP;",
          "671:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "673:                     file_put_contents($controller_path, $controller_body);",
          "674:                 }",
          "",
          "[Removed Lines]",
          "672:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "672:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1112:             if ($table['table'] == 'table_relation') {",
          "1113:                 for ($i = 0; $i < 2; $i++) {",
          "1114:                     $field[$i] = [",
          "1117:                         'fieldType' => 'bigint',",
          "1118:                         'fieldLength' => null,",
          "1119:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1115:                         'id' => $name_table[$i] . '_id',",
          "1116:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "[Added Lines]",
          "1115:                         'id' => $name_table[$i].'_id',",
          "1116:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1126:                     array_push($table['rows'], $field[$i]);",
          "1127:                 }",
          "1128:                 $table['relations'] = [",
          "1131:                         'target_table' => $name_table[1],",
          "1132:                         'target_field' => 'id',",
          "1133:                         'on_delete' => 'cascade',",
          "1134:                         'on_update' => 'restrict',",
          "1135:                     ],",
          "1138:                         'target_table' => $name_table[0],",
          "1139:                         'target_field' => 'id',",
          "1140:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1129:                     $name_table[1] . '_id' => [",
          "1130:                         'source_field' => $name_table[1] . '_id',",
          "1136:                     $name_table[0] . '_id' => [",
          "1137:                         'source_field' => $name_table[0] . '_id',",
          "",
          "[Added Lines]",
          "1129:                     $name_table[1].'_id' => [",
          "1130:                         'source_field' => $name_table[1].'_id',",
          "1136:                     $name_table[0].'_id' => [",
          "1137:                         'source_field' => $name_table[0].'_id',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1148:         foreach ($name_table as $key => $crud_table) {",
          "1149:             $crud_table = [",
          "1150:                 'name' => $crud_table,",
          "1152:                 'displayNameSingular' => $crud_table,",
          "1153:                 'displayNamePlural' => $crud_table,",
          "1154:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1151:                 'slug' => 'table-' . $key + 1,",
          "",
          "[Added Lines]",
          "1151:                 'slug' => 'table-'.$key + 1,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1275:         foreach ($name_table as $key => $table) {",
          "1276:             if ($table == 'table-2') {",
          "1277:                 for ($i = 1; $i < 4; $i++) {",
          "1279:                         'data' => [",
          "1281:                         ],",
          "1282:                     ]);",
          "1283:                 }",
          "1284:             } else {",
          "1286:                 $response->assertSuccessful();",
          "1287:             }",
          "1288:         }",
          "1292:         $response->assertSuccessful();",
          "1293:         $data_browse = $response['data']['data'][0];",
          "1297:             'data' => [",
          "1298:                 'id' => $data_browse['id'],",
          "1299:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1280:                             'name' => 'option ' . $i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "[Added Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1280:                             'name' => 'option '.$i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1303:         $response->assertSuccessful();",
          "1307:             'slug' => $table,",
          "1308:             'data' => [",
          "1309:                 [",
          "",
          "[Removed Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "[Added Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1653:                 }",
          "1654:                 PHP;",
          "1655:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1657:                     file_put_contents($model_path, $model_body);",
          "1658:                 }",
          "",
          "[Removed Lines]",
          "1656:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1656:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1674:             $controller_data = [];",
          "1675:             if (rand(0, 1)) {",
          "1678:                 $controller_file_name = \"{$controller_name}.php\";",
          "1679:                 $controller_body = <<<PHP",
          "1680:                 <?php",
          "",
          "[Removed Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1683:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1684:                 PHP;",
          "1685:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1687:                     file_put_contents($controller_path, $controller_body);",
          "1688:                 }",
          "",
          "[Removed Lines]",
          "1686:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1686:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1966:                 }",
          "1967:                 PHP;",
          "1968:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1970:                     file_put_contents($model_path, $model_body);",
          "1971:                 }",
          "",
          "[Removed Lines]",
          "1969:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1969:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1987:             $controller_data = [];",
          "1988:             if (rand(0, 1)) {",
          "1991:                 $controller_file_name = \"{$controller_name}.php\";",
          "1992:                 $controller_body = <<<PHP",
          "1993:                 <?php",
          "",
          "[Removed Lines]",
          "1990:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1990:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1996:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1997:                 PHP;",
          "1998:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "2000:                     file_put_contents($controller_path, $controller_body);",
          "2001:                 }",
          "",
          "[Removed Lines]",
          "1999:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1999:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2016:             $request_body = [",
          "2017:                 'name' =>  $table_name,",
          "2018:                 'slug' =>  $table_name,",
          "2021:                 'icon' =>  'add',",
          "2022:                 'modelName' =>  $model,",
          "2023:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "2019:                 'displayNameSingular' =>  $table_label . '(update)',",
          "2020:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "[Added Lines]",
          "2019:                 'displayNameSingular' =>  $table_label.'(update)',",
          "2020:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2105:                 $controller_name = \"{$name}Controller.php\";",
          "2107:                 if (file_exists($controller_path)) {",
          "2108:                     unlink($controller_path);",
          "2109:                 }",
          "2112:                 $model_name = \"{$name}.php\";",
          "2114:                 if (file_exists($model_path)) {",
          "2115:                     unlink($model_path);",
          "2116:                 }",
          "",
          "[Removed Lines]",
          "2106:                 $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "2113:                 $model_path = app_path('Models/' . $model_name);",
          "",
          "[Added Lines]",
          "2106:                 $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "2113:                 $model_path = app_path('Models/'.$model_name);",
          "",
          "---------------"
        ]
      }
    }
  ]
}