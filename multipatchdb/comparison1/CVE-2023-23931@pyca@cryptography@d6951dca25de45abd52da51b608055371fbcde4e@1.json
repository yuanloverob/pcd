{
  "cve_id": "CVE-2023-23931",
  "cve_desc": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. In affected versions `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This now correctly raises an exception. This issue has been present since `update_into` was originally introduced in cryptography 1.8.",
  "repo": "pyca/cryptography",
  "patch_hash": "d6951dca25de45abd52da51b608055371fbcde4e",
  "patch_info": {
    "commit_hash": "d6951dca25de45abd52da51b608055371fbcde4e",
    "repo": "pyca/cryptography",
    "commit_url": "https://github.com/pyca/cryptography/commit/d6951dca25de45abd52da51b608055371fbcde4e",
    "files": [
      "CHANGELOG.rst",
      "src/cryptography/__about__.py",
      "src/cryptography/hazmat/backends/openssl/ciphers.py",
      "tests/hazmat/primitives/test_ciphers.py",
      "vectors/cryptography_vectors/__about__.py"
    ],
    "message": "changelog + security fix backport (#8231)\n\n* Don't allow update_into to mutate immutable objects (#8230)\n\n* add changelog for 39.0.1\n\n* oops\n\n* bump versions\n\n* remove circle\n\n---------\n\nCo-authored-by: Alex Gaynor <alex.gaynor@gmail.com>",
    "before_after_code_files": [
      "src/cryptography/__about__.py||src/cryptography/__about__.py",
      "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py",
      "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py",
      "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py"
    ]
  },
  "patch_diff": {
    "src/cryptography/__about__.py||src/cryptography/__about__.py": [
      "File: src/cryptography/__about__.py -> src/cryptography/__about__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "9:     \"__copyright__\",",
      "10: ]",
      "14: __author__ = \"The Python Cryptographic Authority and individual contributors\"",
      "15: __copyright__ = \"Copyright 2013-2022 {}\".format(__author__)",
      "",
      "[Removed Lines]",
      "12: __version__ = \"39.0.0\"",
      "",
      "[Added Lines]",
      "12: __version__ = \"39.0.1\"",
      "",
      "---------------"
    ],
    "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py": [
      "File: src/cryptography/hazmat/backends/openssl/ciphers.py -> src/cryptography/hazmat/backends/openssl/ciphers.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "156:         data_processed = 0",
      "157:         total_out = 0",
      "158:         outlen = self._backend._ffi.new(\"int *\")",
      "160:         baseinbuf = self._backend._ffi.from_buffer(data)",
      "162:         while data_processed != total_data_len:",
      "",
      "[Removed Lines]",
      "159:         baseoutbuf = self._backend._ffi.from_buffer(buf)",
      "",
      "[Added Lines]",
      "159:         baseoutbuf = self._backend._ffi.from_buffer(buf, require_writable=True)",
      "",
      "---------------"
    ],
    "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py": [
      "File: tests/hazmat/primitives/test_ciphers.py -> tests/hazmat/primitives/test_ciphers.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "318:         with pytest.raises(ValueError):",
      "319:             encryptor.update_into(b\"testing\", buf)",
      "321:     @pytest.mark.supported(",
      "322:         only_if=lambda backend: backend.cipher_supported(",
      "323:             AES(b\"\\x00\" * 16), modes.GCM(b\"\\x00\" * 12)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "321:     def test_update_into_immutable(self, backend):",
      "322:         key = b\"\\x00\" * 16",
      "323:         c = ciphers.Cipher(AES(key), modes.ECB(), backend)",
      "324:         encryptor = c.encryptor()",
      "325:         buf = b\"\\x00\" * 32",
      "326:         with pytest.raises((TypeError, BufferError)):",
      "327:             encryptor.update_into(b\"testing\", buf)",
      "",
      "---------------"
    ],
    "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py": [
      "File: vectors/cryptography_vectors/__about__.py -> vectors/cryptography_vectors/__about__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "6:     \"__version__\",",
      "7: ]",
      "",
      "[Removed Lines]",
      "9: __version__ = \"39.0.0\"",
      "",
      "[Added Lines]",
      "9: __version__ = \"39.0.1\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "125b149dc0bd9db33b08455b66c0f1586b8ce257",
      "candidate_info": {
        "commit_hash": "125b149dc0bd9db33b08455b66c0f1586b8ce257",
        "repo": "pyca/cryptography",
        "commit_url": "https://github.com/pyca/cryptography/commit/125b149dc0bd9db33b08455b66c0f1586b8ce257",
        "files": [
          "src/cryptography/__about__.py",
          "vectors/cryptography_vectors/__about__.py"
        ],
        "message": "Bump version numbers for 39.0.2 release (#8419)",
        "before_after_code_files": [
          "src/cryptography/__about__.py||src/cryptography/__about__.py",
          "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/cryptography/__about__.py||src/cryptography/__about__.py",
            "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py"
          ],
          "candidate": [
            "src/cryptography/__about__.py||src/cryptography/__about__.py",
            "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py"
          ]
        }
      },
      "candidate_diff": {
        "src/cryptography/__about__.py||src/cryptography/__about__.py": [
          "File: src/cryptography/__about__.py -> src/cryptography/__about__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     \"__copyright__\",",
          "10: ]",
          "14: __author__ = \"The Python Cryptographic Authority and individual contributors\"",
          "",
          "[Removed Lines]",
          "12: __version__ = \"39.0.1\"",
          "15: __copyright__ = \"Copyright 2013-2022 {}\".format(__author__)",
          "",
          "[Added Lines]",
          "12: __version__ = \"39.0.2\"",
          "15: __copyright__ = \"Copyright 2013-2023 {}\".format(__author__)",
          "",
          "---------------"
        ],
        "vectors/cryptography_vectors/__about__.py||vectors/cryptography_vectors/__about__.py": [
          "File: vectors/cryptography_vectors/__about__.py -> vectors/cryptography_vectors/__about__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:     \"__version__\",",
          "7: ]",
          "",
          "[Removed Lines]",
          "9: __version__ = \"39.0.1\"",
          "",
          "[Added Lines]",
          "9: __version__ = \"39.0.2\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fbf84efc861668755ab645530ec7be9cf3c6696",
      "candidate_info": {
        "commit_hash": "9fbf84efc861668755ab645530ec7be9cf3c6696",
        "repo": "pyca/cryptography",
        "commit_url": "https://github.com/pyca/cryptography/commit/9fbf84efc861668755ab645530ec7be9cf3c6696",
        "files": [
          "src/cryptography/hazmat/backends/openssl/ciphers.py",
          "tests/hazmat/primitives/test_ciphers.py"
        ],
        "message": "Don't allow update_into to mutate immutable objects (#8230)",
        "before_after_code_files": [
          "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py",
          "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py",
            "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py"
          ],
          "candidate": [
            "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py",
            "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py"
          ]
        }
      },
      "candidate_diff": {
        "src/cryptography/hazmat/backends/openssl/ciphers.py||src/cryptography/hazmat/backends/openssl/ciphers.py": [
          "File: src/cryptography/hazmat/backends/openssl/ciphers.py -> src/cryptography/hazmat/backends/openssl/ciphers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         data_processed = 0",
          "157:         total_out = 0",
          "158:         outlen = self._backend._ffi.new(\"int *\")",
          "160:         baseinbuf = self._backend._ffi.from_buffer(data)",
          "162:         while data_processed != total_data_len:",
          "",
          "[Removed Lines]",
          "159:         baseoutbuf = self._backend._ffi.from_buffer(buf)",
          "",
          "[Added Lines]",
          "159:         baseoutbuf = self._backend._ffi.from_buffer(buf, require_writable=True)",
          "",
          "---------------"
        ],
        "tests/hazmat/primitives/test_ciphers.py||tests/hazmat/primitives/test_ciphers.py": [
          "File: tests/hazmat/primitives/test_ciphers.py -> tests/hazmat/primitives/test_ciphers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "318:         with pytest.raises(ValueError):",
          "319:             encryptor.update_into(b\"testing\", buf)",
          "321:     @pytest.mark.supported(",
          "322:         only_if=lambda backend: backend.cipher_supported(",
          "323:             AES(b\"\\x00\" * 16), modes.GCM(b\"\\x00\" * 12)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:     def test_update_into_immutable(self, backend):",
          "322:         key = b\"\\x00\" * 16",
          "323:         c = ciphers.Cipher(AES(key), modes.ECB(), backend)",
          "324:         encryptor = c.encryptor()",
          "325:         buf = b\"\\x00\" * 32",
          "326:         with pytest.raises((TypeError, BufferError)):",
          "327:             encryptor.update_into(b\"testing\", buf)",
          "",
          "---------------"
        ]
      }
    }
  ]
}