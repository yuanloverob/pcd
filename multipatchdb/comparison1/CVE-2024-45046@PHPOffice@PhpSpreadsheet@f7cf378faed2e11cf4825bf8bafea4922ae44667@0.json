{
  "cve_id": "CVE-2024-45046",
  "cve_desc": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. In affected versions `\\PhpOffice\\PhpSpreadsheet\\Writer\\Html` doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page. As a result an attacker may used a crafted spreadsheet to fully takeover a session of a user viewing spreadsheet files as HTML. This issue has been addressed in release version 2.1.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "PHPOffice/PhpSpreadsheet",
  "patch_hash": "f7cf378faed2e11cf4825bf8bafea4922ae44667",
  "patch_info": {
    "commit_hash": "f7cf378faed2e11cf4825bf8bafea4922ae44667",
    "repo": "PHPOffice/PhpSpreadsheet",
    "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667",
    "files": [
      "CHANGELOG.md",
      "composer.json",
      "composer.lock",
      "src/PhpSpreadsheet/Writer/Html.php",
      "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
    ],
    "message": "Merge pull request #3957 from oleibman/htmlcomments\n\nHtml Writer Comments - Breaking Change",
    "before_after_code_files": [
      "composer.lock||composer.lock",
      "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
      "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
    ]
  },
  "patch_diff": {
    "composer.lock||composer.lock": [
      "File: composer.lock -> composer.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "4:         \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",",
      "5:         \"This file is @generated automatically\"",
      "6:     ],",
      "8:     \"packages\": [",
      "9:         {",
      "10:             \"name\": \"maennchen/zipstream-php\",",
      "",
      "[Removed Lines]",
      "7:     \"content-hash\": \"84f741787fe1d67df41a23c583e92220\",",
      "",
      "[Added Lines]",
      "7:     \"content-hash\": \"c7a7ba2e1cc9ac479e06ab28916c6b80\",",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "464:                 \"source\": \"https://github.com/php-fig/simple-cache/tree/3.0.0\"",
      "465:             },",
      "466:             \"time\": \"2021-10-29T13:26:27+00:00\"",
      "1125:         }",
      "1126:     ],",
      "1127:     \"packages-dev\": [",
      "",
      "[Removed Lines]",
      "467:         },",
      "468:         {",
      "469:             \"name\": \"symfony/polyfill-iconv\",",
      "470:             \"version\": \"v1.28.0\",",
      "471:             \"source\": {",
      "472:                 \"type\": \"git\",",
      "473:                 \"url\": \"https://github.com/symfony/polyfill-iconv.git\",",
      "474:                 \"reference\": \"6de50471469b8c9afc38164452ab2b6170ee71c1\"",
      "475:             },",
      "476:             \"dist\": {",
      "477:                 \"type\": \"zip\",",
      "478:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-iconv/zipball/6de50471469b8c9afc38164452ab2b6170ee71c1\",",
      "479:                 \"reference\": \"6de50471469b8c9afc38164452ab2b6170ee71c1\",",
      "480:                 \"shasum\": \"\"",
      "481:             },",
      "482:             \"require\": {",
      "483:                 \"php\": \">=7.1\"",
      "484:             },",
      "485:             \"provide\": {",
      "486:                 \"ext-iconv\": \"*\"",
      "487:             },",
      "488:             \"suggest\": {",
      "489:                 \"ext-iconv\": \"For best performance\"",
      "490:             },",
      "491:             \"type\": \"library\",",
      "492:             \"extra\": {",
      "493:                 \"branch-alias\": {",
      "494:                     \"dev-main\": \"1.28-dev\"",
      "495:                 },",
      "496:                 \"thanks\": {",
      "497:                     \"name\": \"symfony/polyfill\",",
      "498:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "499:                 }",
      "500:             },",
      "501:             \"autoload\": {",
      "502:                 \"files\": [",
      "503:                     \"bootstrap.php\"",
      "504:                 ],",
      "505:                 \"psr-4\": {",
      "506:                     \"Symfony\\\\Polyfill\\\\Iconv\\\\\": \"\"",
      "507:                 }",
      "508:             },",
      "509:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "510:             \"license\": [",
      "511:                 \"MIT\"",
      "512:             ],",
      "513:             \"authors\": [",
      "514:                 {",
      "515:                     \"name\": \"Nicolas Grekas\",",
      "516:                     \"email\": \"p@tchwork.com\"",
      "517:                 },",
      "518:                 {",
      "519:                     \"name\": \"Symfony Community\",",
      "520:                     \"homepage\": \"https://symfony.com/contributors\"",
      "521:                 }",
      "522:             ],",
      "523:             \"description\": \"Symfony polyfill for the Iconv extension\",",
      "524:             \"homepage\": \"https://symfony.com\",",
      "525:             \"keywords\": [",
      "526:                 \"compatibility\",",
      "527:                 \"iconv\",",
      "528:                 \"polyfill\",",
      "529:                 \"portable\",",
      "530:                 \"shim\"",
      "531:             ],",
      "532:             \"support\": {",
      "533:                 \"source\": \"https://github.com/symfony/polyfill-iconv/tree/v1.28.0\"",
      "534:             },",
      "535:             \"funding\": [",
      "536:                 {",
      "537:                     \"url\": \"https://symfony.com/sponsor\",",
      "538:                     \"type\": \"custom\"",
      "539:                 },",
      "540:                 {",
      "541:                     \"url\": \"https://github.com/fabpot\",",
      "542:                     \"type\": \"github\"",
      "543:                 },",
      "544:                 {",
      "545:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "546:                     \"type\": \"tidelift\"",
      "547:                 }",
      "548:             ],",
      "549:             \"time\": \"2023-01-26T09:26:14+00:00\"",
      "550:         },",
      "551:         {",
      "552:             \"name\": \"symfony/polyfill-intl-grapheme\",",
      "553:             \"version\": \"v1.29.0\",",
      "554:             \"source\": {",
      "555:                 \"type\": \"git\",",
      "556:                 \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",",
      "557:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\"",
      "558:             },",
      "559:             \"dist\": {",
      "560:                 \"type\": \"zip\",",
      "561:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
      "562:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
      "563:                 \"shasum\": \"\"",
      "564:             },",
      "565:             \"require\": {",
      "566:                 \"php\": \">=7.1\"",
      "567:             },",
      "568:             \"suggest\": {",
      "569:                 \"ext-intl\": \"For best performance\"",
      "570:             },",
      "571:             \"type\": \"library\",",
      "572:             \"extra\": {",
      "573:                 \"thanks\": {",
      "574:                     \"name\": \"symfony/polyfill\",",
      "575:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "576:                 }",
      "577:             },",
      "578:             \"autoload\": {",
      "579:                 \"files\": [",
      "580:                     \"bootstrap.php\"",
      "581:                 ],",
      "582:                 \"psr-4\": {",
      "583:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"",
      "584:                 }",
      "585:             },",
      "586:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "587:             \"license\": [",
      "588:                 \"MIT\"",
      "589:             ],",
      "590:             \"authors\": [",
      "591:                 {",
      "592:                     \"name\": \"Nicolas Grekas\",",
      "593:                     \"email\": \"p@tchwork.com\"",
      "594:                 },",
      "595:                 {",
      "596:                     \"name\": \"Symfony Community\",",
      "597:                     \"homepage\": \"https://symfony.com/contributors\"",
      "598:                 }",
      "599:             ],",
      "600:             \"description\": \"Symfony polyfill for intl's grapheme_* functions\",",
      "601:             \"homepage\": \"https://symfony.com\",",
      "602:             \"keywords\": [",
      "603:                 \"compatibility\",",
      "604:                 \"grapheme\",",
      "605:                 \"intl\",",
      "606:                 \"polyfill\",",
      "607:                 \"portable\",",
      "608:                 \"shim\"",
      "609:             ],",
      "610:             \"support\": {",
      "611:                 \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.29.0\"",
      "612:             },",
      "613:             \"funding\": [",
      "614:                 {",
      "615:                     \"url\": \"https://symfony.com/sponsor\",",
      "616:                     \"type\": \"custom\"",
      "617:                 },",
      "618:                 {",
      "619:                     \"url\": \"https://github.com/fabpot\",",
      "620:                     \"type\": \"github\"",
      "621:                 },",
      "622:                 {",
      "623:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "624:                     \"type\": \"tidelift\"",
      "625:                 }",
      "626:             ],",
      "627:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "628:         },",
      "629:         {",
      "630:             \"name\": \"symfony/polyfill-intl-normalizer\",",
      "631:             \"version\": \"v1.29.0\",",
      "632:             \"source\": {",
      "633:                 \"type\": \"git\",",
      "634:                 \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",",
      "635:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\"",
      "636:             },",
      "637:             \"dist\": {",
      "638:                 \"type\": \"zip\",",
      "639:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/bc45c394692b948b4d383a08d7753968bed9a83d\",",
      "640:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\",",
      "641:                 \"shasum\": \"\"",
      "642:             },",
      "643:             \"require\": {",
      "644:                 \"php\": \">=7.1\"",
      "645:             },",
      "646:             \"suggest\": {",
      "647:                 \"ext-intl\": \"For best performance\"",
      "648:             },",
      "649:             \"type\": \"library\",",
      "650:             \"extra\": {",
      "651:                 \"thanks\": {",
      "652:                     \"name\": \"symfony/polyfill\",",
      "653:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "654:                 }",
      "655:             },",
      "656:             \"autoload\": {",
      "657:                 \"files\": [",
      "658:                     \"bootstrap.php\"",
      "659:                 ],",
      "660:                 \"psr-4\": {",
      "661:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"",
      "662:                 },",
      "663:                 \"classmap\": [",
      "664:                     \"Resources/stubs\"",
      "665:                 ]",
      "666:             },",
      "667:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "668:             \"license\": [",
      "669:                 \"MIT\"",
      "670:             ],",
      "671:             \"authors\": [",
      "672:                 {",
      "673:                     \"name\": \"Nicolas Grekas\",",
      "674:                     \"email\": \"p@tchwork.com\"",
      "675:                 },",
      "676:                 {",
      "677:                     \"name\": \"Symfony Community\",",
      "678:                     \"homepage\": \"https://symfony.com/contributors\"",
      "679:                 }",
      "680:             ],",
      "681:             \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",",
      "682:             \"homepage\": \"https://symfony.com\",",
      "683:             \"keywords\": [",
      "684:                 \"compatibility\",",
      "685:                 \"intl\",",
      "686:                 \"normalizer\",",
      "687:                 \"polyfill\",",
      "688:                 \"portable\",",
      "689:                 \"shim\"",
      "690:             ],",
      "691:             \"support\": {",
      "692:                 \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.29.0\"",
      "693:             },",
      "694:             \"funding\": [",
      "695:                 {",
      "696:                     \"url\": \"https://symfony.com/sponsor\",",
      "697:                     \"type\": \"custom\"",
      "698:                 },",
      "699:                 {",
      "700:                     \"url\": \"https://github.com/fabpot\",",
      "701:                     \"type\": \"github\"",
      "702:                 },",
      "703:                 {",
      "704:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "705:                     \"type\": \"tidelift\"",
      "706:                 }",
      "707:             ],",
      "708:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "709:         },",
      "710:         {",
      "711:             \"name\": \"symfony/polyfill-mbstring\",",
      "712:             \"version\": \"v1.29.0\",",
      "713:             \"source\": {",
      "714:                 \"type\": \"git\",",
      "715:                 \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",",
      "716:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\"",
      "717:             },",
      "718:             \"dist\": {",
      "719:                 \"type\": \"zip\",",
      "720:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
      "721:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
      "722:                 \"shasum\": \"\"",
      "723:             },",
      "724:             \"require\": {",
      "725:                 \"php\": \">=7.1\"",
      "726:             },",
      "727:             \"provide\": {",
      "728:                 \"ext-mbstring\": \"*\"",
      "729:             },",
      "730:             \"suggest\": {",
      "731:                 \"ext-mbstring\": \"For best performance\"",
      "732:             },",
      "733:             \"type\": \"library\",",
      "734:             \"extra\": {",
      "735:                 \"thanks\": {",
      "736:                     \"name\": \"symfony/polyfill\",",
      "737:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "738:                 }",
      "739:             },",
      "740:             \"autoload\": {",
      "741:                 \"files\": [",
      "742:                     \"bootstrap.php\"",
      "743:                 ],",
      "744:                 \"psr-4\": {",
      "745:                     \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"",
      "746:                 }",
      "747:             },",
      "748:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "749:             \"license\": [",
      "750:                 \"MIT\"",
      "751:             ],",
      "752:             \"authors\": [",
      "753:                 {",
      "754:                     \"name\": \"Nicolas Grekas\",",
      "755:                     \"email\": \"p@tchwork.com\"",
      "756:                 },",
      "757:                 {",
      "758:                     \"name\": \"Symfony Community\",",
      "759:                     \"homepage\": \"https://symfony.com/contributors\"",
      "760:                 }",
      "761:             ],",
      "762:             \"description\": \"Symfony polyfill for the Mbstring extension\",",
      "763:             \"homepage\": \"https://symfony.com\",",
      "764:             \"keywords\": [",
      "765:                 \"compatibility\",",
      "766:                 \"mbstring\",",
      "767:                 \"polyfill\",",
      "768:                 \"portable\",",
      "769:                 \"shim\"",
      "770:             ],",
      "771:             \"support\": {",
      "772:                 \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.29.0\"",
      "773:             },",
      "774:             \"funding\": [",
      "775:                 {",
      "776:                     \"url\": \"https://symfony.com/sponsor\",",
      "777:                     \"type\": \"custom\"",
      "778:                 },",
      "779:                 {",
      "780:                     \"url\": \"https://github.com/fabpot\",",
      "781:                     \"type\": \"github\"",
      "782:                 },",
      "783:                 {",
      "784:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "785:                     \"type\": \"tidelift\"",
      "786:                 }",
      "787:             ],",
      "788:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "789:         },",
      "790:         {",
      "791:             \"name\": \"symfony/polyfill-php72\",",
      "792:             \"version\": \"v1.28.0\",",
      "793:             \"source\": {",
      "794:                 \"type\": \"git\",",
      "795:                 \"url\": \"https://github.com/symfony/polyfill-php72.git\",",
      "796:                 \"reference\": \"70f4aebd92afca2f865444d30a4d2151c13c3179\"",
      "797:             },",
      "798:             \"dist\": {",
      "799:                 \"type\": \"zip\",",
      "800:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-php72/zipball/70f4aebd92afca2f865444d30a4d2151c13c3179\",",
      "801:                 \"reference\": \"70f4aebd92afca2f865444d30a4d2151c13c3179\",",
      "802:                 \"shasum\": \"\"",
      "803:             },",
      "804:             \"require\": {",
      "805:                 \"php\": \">=7.1\"",
      "806:             },",
      "807:             \"type\": \"library\",",
      "808:             \"extra\": {",
      "809:                 \"branch-alias\": {",
      "810:                     \"dev-main\": \"1.28-dev\"",
      "811:                 },",
      "812:                 \"thanks\": {",
      "813:                     \"name\": \"symfony/polyfill\",",
      "814:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "815:                 }",
      "816:             },",
      "817:             \"autoload\": {",
      "818:                 \"files\": [",
      "819:                     \"bootstrap.php\"",
      "820:                 ],",
      "821:                 \"psr-4\": {",
      "822:                     \"Symfony\\\\Polyfill\\\\Php72\\\\\": \"\"",
      "823:                 }",
      "824:             },",
      "825:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "826:             \"license\": [",
      "827:                 \"MIT\"",
      "828:             ],",
      "829:             \"authors\": [",
      "830:                 {",
      "831:                     \"name\": \"Nicolas Grekas\",",
      "832:                     \"email\": \"p@tchwork.com\"",
      "833:                 },",
      "834:                 {",
      "835:                     \"name\": \"Symfony Community\",",
      "836:                     \"homepage\": \"https://symfony.com/contributors\"",
      "837:                 }",
      "838:             ],",
      "839:             \"description\": \"Symfony polyfill backporting some PHP 7.2+ features to lower PHP versions\",",
      "840:             \"homepage\": \"https://symfony.com\",",
      "841:             \"keywords\": [",
      "842:                 \"compatibility\",",
      "843:                 \"polyfill\",",
      "844:                 \"portable\",",
      "845:                 \"shim\"",
      "846:             ],",
      "847:             \"support\": {",
      "848:                 \"source\": \"https://github.com/symfony/polyfill-php72/tree/v1.28.0\"",
      "849:             },",
      "850:             \"funding\": [",
      "851:                 {",
      "852:                     \"url\": \"https://symfony.com/sponsor\",",
      "853:                     \"type\": \"custom\"",
      "854:                 },",
      "855:                 {",
      "856:                     \"url\": \"https://github.com/fabpot\",",
      "857:                     \"type\": \"github\"",
      "858:                 },",
      "859:                 {",
      "860:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "861:                     \"type\": \"tidelift\"",
      "862:                 }",
      "863:             ],",
      "864:             \"time\": \"2023-01-26T09:26:14+00:00\"",
      "865:         },",
      "866:         {",
      "867:             \"name\": \"voku/anti-xss\",",
      "868:             \"version\": \"4.1.42\",",
      "869:             \"source\": {",
      "870:                 \"type\": \"git\",",
      "871:                 \"url\": \"https://github.com/voku/anti-xss.git\",",
      "872:                 \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\"",
      "873:             },",
      "874:             \"dist\": {",
      "875:                 \"type\": \"zip\",",
      "876:                 \"url\": \"https://api.github.com/repos/voku/anti-xss/zipball/bca1f8607e55a3c5077483615cd93bd8f11bd675\",",
      "877:                 \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\",",
      "878:                 \"shasum\": \"\"",
      "879:             },",
      "880:             \"require\": {",
      "881:                 \"php\": \">=7.0.0\",",
      "882:                 \"voku/portable-utf8\": \"~6.0.2\"",
      "883:             },",
      "884:             \"require-dev\": {",
      "885:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"",
      "886:             },",
      "887:             \"type\": \"library\",",
      "888:             \"extra\": {",
      "889:                 \"branch-alias\": {",
      "890:                     \"dev-master\": \"4.1.x-dev\"",
      "891:                 }",
      "892:             },",
      "893:             \"autoload\": {",
      "894:                 \"psr-4\": {",
      "895:                     \"voku\\\\helper\\\\\": \"src/voku/helper/\"",
      "896:                 }",
      "897:             },",
      "898:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "899:             \"license\": [",
      "900:                 \"MIT\"",
      "901:             ],",
      "902:             \"authors\": [",
      "903:                 {",
      "904:                     \"name\": \"EllisLab Dev Team\",",
      "905:                     \"homepage\": \"http://ellislab.com/\"",
      "906:                 },",
      "907:                 {",
      "908:                     \"name\": \"Lars Moelleken\",",
      "909:                     \"email\": \"lars@moelleken.org\",",
      "910:                     \"homepage\": \"https://www.moelleken.org/\"",
      "911:                 }",
      "912:             ],",
      "913:             \"description\": \"anti xss-library\",",
      "914:             \"homepage\": \"https://github.com/voku/anti-xss\",",
      "915:             \"keywords\": [",
      "916:                 \"anti-xss\",",
      "917:                 \"clean\",",
      "918:                 \"security\",",
      "919:                 \"xss\"",
      "920:             ],",
      "921:             \"support\": {",
      "922:                 \"issues\": \"https://github.com/voku/anti-xss/issues\",",
      "923:                 \"source\": \"https://github.com/voku/anti-xss/tree/4.1.42\"",
      "924:             },",
      "925:             \"funding\": [",
      "926:                 {",
      "927:                     \"url\": \"https://www.paypal.me/moelleken\",",
      "928:                     \"type\": \"custom\"",
      "929:                 },",
      "930:                 {",
      "931:                     \"url\": \"https://github.com/voku\",",
      "932:                     \"type\": \"github\"",
      "933:                 },",
      "934:                 {",
      "935:                     \"url\": \"https://opencollective.com/anti-xss\",",
      "936:                     \"type\": \"open_collective\"",
      "937:                 },",
      "938:                 {",
      "939:                     \"url\": \"https://www.patreon.com/voku\",",
      "940:                     \"type\": \"patreon\"",
      "941:                 },",
      "942:                 {",
      "943:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/anti-xss\",",
      "944:                     \"type\": \"tidelift\"",
      "945:                 }",
      "946:             ],",
      "947:             \"time\": \"2023-07-03T14:40:46+00:00\"",
      "948:         },",
      "949:         {",
      "950:             \"name\": \"voku/portable-ascii\",",
      "951:             \"version\": \"2.0.1\",",
      "952:             \"source\": {",
      "953:                 \"type\": \"git\",",
      "954:                 \"url\": \"https://github.com/voku/portable-ascii.git\",",
      "955:                 \"reference\": \"b56450eed252f6801410d810c8e1727224ae0743\"",
      "956:             },",
      "957:             \"dist\": {",
      "958:                 \"type\": \"zip\",",
      "959:                 \"url\": \"https://api.github.com/repos/voku/portable-ascii/zipball/b56450eed252f6801410d810c8e1727224ae0743\",",
      "960:                 \"reference\": \"b56450eed252f6801410d810c8e1727224ae0743\",",
      "961:                 \"shasum\": \"\"",
      "962:             },",
      "963:             \"require\": {",
      "964:                 \"php\": \">=7.0.0\"",
      "965:             },",
      "966:             \"require-dev\": {",
      "967:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"",
      "968:             },",
      "969:             \"suggest\": {",
      "970:                 \"ext-intl\": \"Use Intl for transliterator_transliterate() support\"",
      "971:             },",
      "972:             \"type\": \"library\",",
      "973:             \"autoload\": {",
      "974:                 \"psr-4\": {",
      "975:                     \"voku\\\\\": \"src/voku/\"",
      "976:                 }",
      "977:             },",
      "978:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "979:             \"license\": [",
      "980:                 \"MIT\"",
      "981:             ],",
      "982:             \"authors\": [",
      "983:                 {",
      "984:                     \"name\": \"Lars Moelleken\",",
      "985:                     \"homepage\": \"http://www.moelleken.org/\"",
      "986:                 }",
      "987:             ],",
      "988:             \"description\": \"Portable ASCII library - performance optimized (ascii) string functions for php.\",",
      "989:             \"homepage\": \"https://github.com/voku/portable-ascii\",",
      "990:             \"keywords\": [",
      "991:                 \"ascii\",",
      "992:                 \"clean\",",
      "993:                 \"php\"",
      "994:             ],",
      "995:             \"support\": {",
      "996:                 \"issues\": \"https://github.com/voku/portable-ascii/issues\",",
      "997:                 \"source\": \"https://github.com/voku/portable-ascii/tree/2.0.1\"",
      "998:             },",
      "999:             \"funding\": [",
      "1000:                 {",
      "1001:                     \"url\": \"https://www.paypal.me/moelleken\",",
      "1002:                     \"type\": \"custom\"",
      "1003:                 },",
      "1004:                 {",
      "1005:                     \"url\": \"https://github.com/voku\",",
      "1006:                     \"type\": \"github\"",
      "1007:                 },",
      "1008:                 {",
      "1009:                     \"url\": \"https://opencollective.com/portable-ascii\",",
      "1010:                     \"type\": \"open_collective\"",
      "1011:                 },",
      "1012:                 {",
      "1013:                     \"url\": \"https://www.patreon.com/voku\",",
      "1014:                     \"type\": \"patreon\"",
      "1015:                 },",
      "1016:                 {",
      "1017:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-ascii\",",
      "1018:                     \"type\": \"tidelift\"",
      "1019:                 }",
      "1020:             ],",
      "1021:             \"time\": \"2022-03-08T17:03:00+00:00\"",
      "1022:         },",
      "1023:         {",
      "1024:             \"name\": \"voku/portable-utf8\",",
      "1025:             \"version\": \"6.0.13\",",
      "1026:             \"source\": {",
      "1027:                 \"type\": \"git\",",
      "1028:                 \"url\": \"https://github.com/voku/portable-utf8.git\",",
      "1029:                 \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\"",
      "1030:             },",
      "1031:             \"dist\": {",
      "1032:                 \"type\": \"zip\",",
      "1033:                 \"url\": \"https://api.github.com/repos/voku/portable-utf8/zipball/b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",",
      "1034:                 \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",",
      "1035:                 \"shasum\": \"\"",
      "1036:             },",
      "1037:             \"require\": {",
      "1038:                 \"php\": \">=7.0.0\",",
      "1039:                 \"symfony/polyfill-iconv\": \"~1.0\",",
      "1040:                 \"symfony/polyfill-intl-grapheme\": \"~1.0\",",
      "1041:                 \"symfony/polyfill-intl-normalizer\": \"~1.0\",",
      "1042:                 \"symfony/polyfill-mbstring\": \"~1.0\",",
      "1043:                 \"symfony/polyfill-php72\": \"~1.0\",",
      "1044:                 \"voku/portable-ascii\": \"~2.0.0\"",
      "1045:             },",
      "1046:             \"require-dev\": {",
      "1047:                 \"phpstan/phpstan\": \"1.9.*@dev\",",
      "1048:                 \"phpstan/phpstan-strict-rules\": \"1.4.*@dev\",",
      "1049:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\",",
      "1050:                 \"thecodingmachine/phpstan-strict-rules\": \"1.0.*@dev\",",
      "1051:                 \"voku/phpstan-rules\": \"3.1.*@dev\"",
      "1052:             },",
      "1053:             \"suggest\": {",
      "1054:                 \"ext-ctype\": \"Use Ctype for e.g. hexadecimal digit detection\",",
      "1055:                 \"ext-fileinfo\": \"Use Fileinfo for better binary file detection\",",
      "1056:                 \"ext-iconv\": \"Use iconv for best performance\",",
      "1057:                 \"ext-intl\": \"Use Intl for best performance\",",
      "1058:                 \"ext-json\": \"Use JSON for string detection\",",
      "1059:                 \"ext-mbstring\": \"Use Mbstring for best performance\"",
      "1060:             },",
      "1061:             \"type\": \"library\",",
      "1062:             \"autoload\": {",
      "1063:                 \"files\": [",
      "1064:                     \"bootstrap.php\"",
      "1065:                 ],",
      "1066:                 \"psr-4\": {",
      "1067:                     \"voku\\\\\": \"src/voku/\"",
      "1068:                 }",
      "1069:             },",
      "1070:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "1071:             \"license\": [",
      "1072:                 \"(Apache-2.0 or GPL-2.0)\"",
      "1073:             ],",
      "1074:             \"authors\": [",
      "1075:                 {",
      "1076:                     \"name\": \"Nicolas Grekas\",",
      "1077:                     \"email\": \"p@tchwork.com\"",
      "1078:                 },",
      "1079:                 {",
      "1080:                     \"name\": \"Hamid Sarfraz\",",
      "1081:                     \"homepage\": \"http://pageconfig.com/\"",
      "1082:                 },",
      "1083:                 {",
      "1084:                     \"name\": \"Lars Moelleken\",",
      "1085:                     \"homepage\": \"http://www.moelleken.org/\"",
      "1086:                 }",
      "1087:             ],",
      "1088:             \"description\": \"Portable UTF-8 library - performance optimized (unicode) string functions for php.\",",
      "1089:             \"homepage\": \"https://github.com/voku/portable-utf8\",",
      "1090:             \"keywords\": [",
      "1091:                 \"UTF\",",
      "1092:                 \"clean\",",
      "1093:                 \"php\",",
      "1094:                 \"unicode\",",
      "1095:                 \"utf-8\",",
      "1096:                 \"utf8\"",
      "1097:             ],",
      "1098:             \"support\": {",
      "1099:                 \"issues\": \"https://github.com/voku/portable-utf8/issues\",",
      "1100:                 \"source\": \"https://github.com/voku/portable-utf8/tree/6.0.13\"",
      "1101:             },",
      "1102:             \"funding\": [",
      "1103:                 {",
      "1104:                     \"url\": \"https://www.paypal.me/moelleken\",",
      "1105:                     \"type\": \"custom\"",
      "1106:                 },",
      "1107:                 {",
      "1108:                     \"url\": \"https://github.com/voku\",",
      "1109:                     \"type\": \"github\"",
      "1110:                 },",
      "1111:                 {",
      "1112:                     \"url\": \"https://opencollective.com/portable-utf8\",",
      "1113:                     \"type\": \"open_collective\"",
      "1114:                 },",
      "1115:                 {",
      "1116:                     \"url\": \"https://www.patreon.com/voku\",",
      "1117:                     \"type\": \"patreon\"",
      "1118:                 },",
      "1119:                 {",
      "1120:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-utf8\",",
      "1121:                     \"type\": \"tidelift\"",
      "1122:                 }",
      "1123:             ],",
      "1124:             \"time\": \"2023-03-08T08:35:38+00:00\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4826:             ],",
      "4827:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "4828:         },",
      "4829:         {",
      "4830:             \"name\": \"symfony/polyfill-php80\",",
      "4831:             \"version\": \"v1.29.0\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4171:         {",
      "4172:             \"name\": \"symfony/polyfill-intl-grapheme\",",
      "4173:             \"version\": \"v1.29.0\",",
      "4174:             \"source\": {",
      "4175:                 \"type\": \"git\",",
      "4176:                 \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",",
      "4177:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\"",
      "4178:             },",
      "4179:             \"dist\": {",
      "4180:                 \"type\": \"zip\",",
      "4181:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
      "4182:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
      "4183:                 \"shasum\": \"\"",
      "4184:             },",
      "4185:             \"require\": {",
      "4186:                 \"php\": \">=7.1\"",
      "4187:             },",
      "4188:             \"suggest\": {",
      "4189:                 \"ext-intl\": \"For best performance\"",
      "4190:             },",
      "4191:             \"type\": \"library\",",
      "4192:             \"extra\": {",
      "4193:                 \"thanks\": {",
      "4194:                     \"name\": \"symfony/polyfill\",",
      "4195:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "4196:                 }",
      "4197:             },",
      "4198:             \"autoload\": {",
      "4199:                 \"files\": [",
      "4200:                     \"bootstrap.php\"",
      "4201:                 ],",
      "4202:                 \"psr-4\": {",
      "4203:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"",
      "4204:                 }",
      "4205:             },",
      "4206:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "4207:             \"license\": [",
      "4208:                 \"MIT\"",
      "4209:             ],",
      "4210:             \"authors\": [",
      "4211:                 {",
      "4212:                     \"name\": \"Nicolas Grekas\",",
      "4213:                     \"email\": \"p@tchwork.com\"",
      "4214:                 },",
      "4215:                 {",
      "4216:                     \"name\": \"Symfony Community\",",
      "4217:                     \"homepage\": \"https://symfony.com/contributors\"",
      "4218:                 }",
      "4219:             ],",
      "4220:             \"description\": \"Symfony polyfill for intl's grapheme_* functions\",",
      "4221:             \"homepage\": \"https://symfony.com\",",
      "4222:             \"keywords\": [",
      "4223:                 \"compatibility\",",
      "4224:                 \"grapheme\",",
      "4225:                 \"intl\",",
      "4226:                 \"polyfill\",",
      "4227:                 \"portable\",",
      "4228:                 \"shim\"",
      "4229:             ],",
      "4230:             \"support\": {",
      "4231:                 \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.29.0\"",
      "4232:             },",
      "4233:             \"funding\": [",
      "4234:                 {",
      "4235:                     \"url\": \"https://symfony.com/sponsor\",",
      "4236:                     \"type\": \"custom\"",
      "4237:                 },",
      "4238:                 {",
      "4239:                     \"url\": \"https://github.com/fabpot\",",
      "4240:                     \"type\": \"github\"",
      "4241:                 },",
      "4242:                 {",
      "4243:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "4244:                     \"type\": \"tidelift\"",
      "4245:                 }",
      "4246:             ],",
      "4247:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "4248:         },",
      "4249:         {",
      "4250:             \"name\": \"symfony/polyfill-intl-normalizer\",",
      "4251:             \"version\": \"v1.29.0\",",
      "4252:             \"source\": {",
      "4253:                 \"type\": \"git\",",
      "4254:                 \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",",
      "4255:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\"",
      "4256:             },",
      "4257:             \"dist\": {",
      "4258:                 \"type\": \"zip\",",
      "4259:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/bc45c394692b948b4d383a08d7753968bed9a83d\",",
      "4260:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\",",
      "4261:                 \"shasum\": \"\"",
      "4262:             },",
      "4263:             \"require\": {",
      "4264:                 \"php\": \">=7.1\"",
      "4265:             },",
      "4266:             \"suggest\": {",
      "4267:                 \"ext-intl\": \"For best performance\"",
      "4268:             },",
      "4269:             \"type\": \"library\",",
      "4270:             \"extra\": {",
      "4271:                 \"thanks\": {",
      "4272:                     \"name\": \"symfony/polyfill\",",
      "4273:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "4274:                 }",
      "4275:             },",
      "4276:             \"autoload\": {",
      "4277:                 \"files\": [",
      "4278:                     \"bootstrap.php\"",
      "4279:                 ],",
      "4280:                 \"psr-4\": {",
      "4281:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"",
      "4282:                 },",
      "4283:                 \"classmap\": [",
      "4284:                     \"Resources/stubs\"",
      "4285:                 ]",
      "4286:             },",
      "4287:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "4288:             \"license\": [",
      "4289:                 \"MIT\"",
      "4290:             ],",
      "4291:             \"authors\": [",
      "4292:                 {",
      "4293:                     \"name\": \"Nicolas Grekas\",",
      "4294:                     \"email\": \"p@tchwork.com\"",
      "4295:                 },",
      "4296:                 {",
      "4297:                     \"name\": \"Symfony Community\",",
      "4298:                     \"homepage\": \"https://symfony.com/contributors\"",
      "4299:                 }",
      "4300:             ],",
      "4301:             \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",",
      "4302:             \"homepage\": \"https://symfony.com\",",
      "4303:             \"keywords\": [",
      "4304:                 \"compatibility\",",
      "4305:                 \"intl\",",
      "4306:                 \"normalizer\",",
      "4307:                 \"polyfill\",",
      "4308:                 \"portable\",",
      "4309:                 \"shim\"",
      "4310:             ],",
      "4311:             \"support\": {",
      "4312:                 \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.29.0\"",
      "4313:             },",
      "4314:             \"funding\": [",
      "4315:                 {",
      "4316:                     \"url\": \"https://symfony.com/sponsor\",",
      "4317:                     \"type\": \"custom\"",
      "4318:                 },",
      "4319:                 {",
      "4320:                     \"url\": \"https://github.com/fabpot\",",
      "4321:                     \"type\": \"github\"",
      "4322:                 },",
      "4323:                 {",
      "4324:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "4325:                     \"type\": \"tidelift\"",
      "4326:                 }",
      "4327:             ],",
      "4328:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "4329:         },",
      "4330:         {",
      "4331:             \"name\": \"symfony/polyfill-mbstring\",",
      "4332:             \"version\": \"v1.29.0\",",
      "4333:             \"source\": {",
      "4334:                 \"type\": \"git\",",
      "4335:                 \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",",
      "4336:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\"",
      "4337:             },",
      "4338:             \"dist\": {",
      "4339:                 \"type\": \"zip\",",
      "4340:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
      "4341:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
      "4342:                 \"shasum\": \"\"",
      "4343:             },",
      "4344:             \"require\": {",
      "4345:                 \"php\": \">=7.1\"",
      "4346:             },",
      "4347:             \"provide\": {",
      "4348:                 \"ext-mbstring\": \"*\"",
      "4349:             },",
      "4350:             \"suggest\": {",
      "4351:                 \"ext-mbstring\": \"For best performance\"",
      "4352:             },",
      "4353:             \"type\": \"library\",",
      "4354:             \"extra\": {",
      "4355:                 \"thanks\": {",
      "4356:                     \"name\": \"symfony/polyfill\",",
      "4357:                     \"url\": \"https://github.com/symfony/polyfill\"",
      "4358:                 }",
      "4359:             },",
      "4360:             \"autoload\": {",
      "4361:                 \"files\": [",
      "4362:                     \"bootstrap.php\"",
      "4363:                 ],",
      "4364:                 \"psr-4\": {",
      "4365:                     \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"",
      "4366:                 }",
      "4367:             },",
      "4368:             \"notification-url\": \"https://packagist.org/downloads/\",",
      "4369:             \"license\": [",
      "4370:                 \"MIT\"",
      "4371:             ],",
      "4372:             \"authors\": [",
      "4373:                 {",
      "4374:                     \"name\": \"Nicolas Grekas\",",
      "4375:                     \"email\": \"p@tchwork.com\"",
      "4376:                 },",
      "4377:                 {",
      "4378:                     \"name\": \"Symfony Community\",",
      "4379:                     \"homepage\": \"https://symfony.com/contributors\"",
      "4380:                 }",
      "4381:             ],",
      "4382:             \"description\": \"Symfony polyfill for the Mbstring extension\",",
      "4383:             \"homepage\": \"https://symfony.com\",",
      "4384:             \"keywords\": [",
      "4385:                 \"compatibility\",",
      "4386:                 \"mbstring\",",
      "4387:                 \"polyfill\",",
      "4388:                 \"portable\",",
      "4389:                 \"shim\"",
      "4390:             ],",
      "4391:             \"support\": {",
      "4392:                 \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.29.0\"",
      "4393:             },",
      "4394:             \"funding\": [",
      "4395:                 {",
      "4396:                     \"url\": \"https://symfony.com/sponsor\",",
      "4397:                     \"type\": \"custom\"",
      "4398:                 },",
      "4399:                 {",
      "4400:                     \"url\": \"https://github.com/fabpot\",",
      "4401:                     \"type\": \"github\"",
      "4402:                 },",
      "4403:                 {",
      "4404:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
      "4405:                     \"type\": \"tidelift\"",
      "4406:                 }",
      "4407:             ],",
      "4408:             \"time\": \"2024-01-29T20:11:03+00:00\"",
      "4409:         },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "5422:     \"platform-overrides\": {",
      "5423:         \"php\": \"8.0.99\"",
      "5424:     },",
      "5426: }",
      "",
      "[Removed Lines]",
      "5425:     \"plugin-api-version\": \"2.6.0\"",
      "",
      "[Added Lines]",
      "5006:     \"plugin-api-version\": \"2.3.0\"",
      "",
      "---------------"
    ],
    "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
      "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use PhpOffice\\PhpSpreadsheet\\Worksheet\\MemoryDrawing;",
      "29: use PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup;",
      "30: use PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet;",
      "33: class Html extends BaseWriter",
      "34: {",
      "",
      "[Removed Lines]",
      "31: use voku\\helper\\AntiXSS;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37:     private const DEFAULT_CELL_WIDTH_PIXELS = 56;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51:     public const COMMENT_HTML_TAGS_PLAINTEXT = true;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1038:         }",
      "1040:         $css['color'] = '#' . $font->getColor()->getRGB();",
      "1042:         $css['font-size'] = $font->getSize() . 'pt';",
      "1044:         return $css;",
      "",
      "[Removed Lines]",
      "1041:         $css['font-family'] = '\\'' . $font->getName() . '\\'';",
      "",
      "[Added Lines]",
      "1055:         $css['font-family'] = '\\'' . htmlspecialchars((string) $font->getName(), ENT_QUOTES) . '\\'';",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1250:         return [$cell, $cssClass, $coordinate];",
      "1251:     }",
      "1254:     {",
      "1257:         foreach ($elements as $element) {",
      "1259:             if ($element instanceof Run) {",
      "",
      "[Removed Lines]",
      "1253:     private function generateRowCellDataValueRich(Cell $cell, string &$cellData): void",
      "1256:         $elements = $cell->getValue()->getRichTextElements();",
      "",
      "[Added Lines]",
      "1267:     private function generateRowCellDataValueRich(RichText $richText): string",
      "1269:         $cellData = '';",
      "1271:         $elements = $richText->getRichTextElements();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1268:                         $cellData .= '<sub>';",
      "1269:                         $cellEnd = '</sub>';",
      "1270:                     }",
      "1271:                 }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1286:                 } else {",
      "1287:                     $cellData .= '<span>';",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1283:                 $cellData .= htmlspecialchars($cellText, Settings::htmlEntityFlags());",
      "1284:             }",
      "1285:         }",
      "1286:     }",
      "1288:     private function generateRowCellDataValue(Worksheet $worksheet, Cell $cell, string &$cellData): void",
      "1289:     {",
      "1290:         if ($cell->getValue() instanceof RichText) {",
      "1292:         } else {",
      "1293:             $origData = $this->preCalculateFormulas ? $cell->getCalculatedValue() : $cell->getValue();",
      "1294:             $formatCode = $worksheet->getParentOrThrow()->getCellXfByIndex($cell->getXfIndex())->getNumberFormat()->getFormatCode();",
      "",
      "[Removed Lines]",
      "1291:             $this->generateRowCellDataValueRich($cell, $cellData);",
      "",
      "[Added Lines]",
      "1304:         return nl2br($cellData);",
      "1310:             $cellData .= $this->generateRowCellDataValueRich($cell->getValue());",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1716:     {",
      "1717:         $result = '';",
      "1718:         if (!$this->isPdf && isset($worksheet->getComments()[$coordinate])) {",
      "1721:             if ($sanitizedString !== '') {",
      "1722:                 $result .= '<a class=\"comment-indicator\"></a>';",
      "1724:                 $result .= PHP_EOL;",
      "1725:             }",
      "1726:         }",
      "",
      "[Removed Lines]",
      "1719:             $sanitizer = new AntiXSS();",
      "1720:             $sanitizedString = $sanitizer->xss_clean($worksheet->getComment($coordinate)->getText()->getPlainText());",
      "1723:                 $result .= '<div class=\"comment\">' . nl2br($sanitizedString) . '</div>';",
      "",
      "[Added Lines]",
      "1738:             $sanitizedString = $this->generateRowCellDataValueRich($worksheet->getComment($coordinate)->getText());",
      "1741:                 $result .= '<div class=\"comment\">' . $sanitizedString . '</div>';",
      "",
      "---------------"
    ],
    "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php": [
      "File: tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php -> tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: use PhpOffice\\PhpSpreadsheet\\RichText\\RichText;",
      "8: use PhpOffice\\PhpSpreadsheet\\Spreadsheet;",
      "9: use PhpOffice\\PhpSpreadsheetTests\\Functional;",
      "11: class HtmlCommentsTest extends Functional\\AbstractFunctional",
      "12: {",
      "15:     public static function providerCommentRichText(): array",
      "16:     {",
      "17:         $valueSingle = 'I am comment.';",
      "",
      "[Removed Lines]",
      "13:     private Spreadsheet $spreadsheet;",
      "",
      "[Added Lines]",
      "9: use PhpOffice\\PhpSpreadsheet\\Writer\\Html;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40:         $font->setBold(true);",
      "41:         $richMultiMixed->createText(PHP_EOL . 'comment!');",
      "43:         return [",
      "49:         ];",
      "50:     }",
      "56:     {",
      "62:             ->getComment('A1')",
      "63:             ->setText($richText);",
      "67:         $actual = $reloadedSpreadsheet->getActiveSheet()->getComment('A1')->getText()->getPlainText();",
      "68:         self::assertSame($richText->getPlainText(), $actual);",
      "69:     }",
      "70: }",
      "",
      "[Removed Lines]",
      "44:             'single line plain text' => [$plainSingle],",
      "45:             'multi-line plain text' => [$plainMulti],",
      "46:             'single line simple rich text' => [$richSingle],",
      "47:             'multi-line simple rich text' => [$richMultiSimple],",
      "48:             'multi-line mixed rich text' => [$richMultiMixed],",
      "55:     public function testComments(RichText $richText): void",
      "57:         $this->spreadsheet = new Spreadsheet();",
      "59:         $this->spreadsheet->getActiveSheet()->getCell('A1')->setValue('Comment');",
      "61:         $this->spreadsheet->getActiveSheet()",
      "65:         $reloadedSpreadsheet = $this->writeAndReload($this->spreadsheet, 'Html');",
      "",
      "[Added Lines]",
      "42:         $richMultiMixed = new RichText();",
      "43:         $richMultiMixed->createText('I am' . PHP_EOL);",
      "44:         $font = $richMultiMixed->createTextRun('multi-line')->getFont();",
      "45:         self::assertNotNull($font);",
      "46:         $font->setBold(true);",
      "47:         $richMultiMixed->createText(PHP_EOL . 'comment!');",
      "49:         $scriptTextSingle = 'I am <script>alert(\"Hello\")</script>';",
      "50:         $scriptSingle = new RichText();",
      "51:         $scriptSingle->createText($scriptTextSingle);",
      "54:             'single line plain text' => [$plainSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
      "55:                 . 'I am comment.</div>' . PHP_EOL",
      "56:                 . 'Comment</td>'],",
      "57:             'multi-line plain text' => [$plainMulti, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
      "58:                 . 'I am <br />' . PHP_EOL",
      "59:                 . 'multi-line<br />' . PHP_EOL",
      "60:                 . 'comment.</div>' . PHP_EOL",
      "61:                 . 'Comment</td>'],",
      "62:             'single line simple rich text' => [$richSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
      "63:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">I am comment.</span></div>\" . PHP_EOL",
      "64:                 . 'Comment</td>'],",
      "65:             'multi-line simple rich text' => [$richMultiSimple, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
      "66:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">I am <br />\" . PHP_EOL",
      "67:                 . 'multi-line<br />' . PHP_EOL",
      "68:                 . 'comment.</span></div>' . PHP_EOL",
      "69:                 . 'Comment</td>'],",
      "70:             'multi-line mixed rich text' => [$richMultiMixed, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">I am<br />' . PHP_EOL",
      "71:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">multi-line</span><br />\" . PHP_EOL",
      "72:                 . 'comment!</div>' . PHP_EOL",
      "73:                 . 'Comment</td>'],",
      "74:             'script single' => [$scriptSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
      "75:                 . 'I am &lt;script&gt;alert(&quot;Hello&quot;)&lt;/script&gt;</div>' . PHP_EOL",
      "76:                 . 'Comment</td>'],",
      "83:     public function testComments(RichText $richText, string $expected): void",
      "85:         $spreadsheet = new Spreadsheet();",
      "87:         $spreadsheet->getActiveSheet()->getCell('A1')->setValue('Comment');",
      "89:         $spreadsheet->getActiveSheet()",
      "92:         $writer = new Html($spreadsheet);",
      "93:         $output = $writer->generateHtmlAll();",
      "94:         self::assertStringContainsString($expected, $output);",
      "96:         $reloadedSpreadsheet = $this->writeAndReload($spreadsheet, 'Html');",
      "97:         $spreadsheet->disconnectWorksheets();",
      "101:         $reloadedSpreadsheet->disconnectWorksheets();",
      "",
      "---------------"
    ],
    "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php": [
      "File: tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php -> tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:     {",
      "16:         return [",
      "17:             'basic text no problem' => ['Hello, I am safely viewing your site', 'Hello, I am safely viewing your site'],",
      "27:         ];",
      "28:     }",
      "",
      "[Removed Lines]",
      "18:             'link no problem' => [\"<a href='Visit Google'>Google is here</a>\", \"<a href='Visit Google'>Google is here</a>\"],",
      "19:             'script tag' => [\"Hello, I am trying to <script>alert('Hack');</script> your site\", 'Hello, I am trying to  your site'],",
      "20:             'javascript tag no hex' => [\"<a href='javascript:alert(1)'>CLICK</a>\", \"<a href='(1)'>CLICK</a>\"],",
      "21:             'javascript tag' => [\"<a href='&#x2000;javascript:alert(1)'>CLICK</a>\", \"<a href=' (1)'>CLICK</a>\"],",
      "22:             'with unicode' => ['<a href=\"\\\\u0001java\\\\u0003script:alert(1)\">CLICK<a>', '<a href=\"(1)\">CLICK<a>'],",
      "23:             'inline css' => ['<li style=\"list-style-image: url(javascript:alert(0))\">', '<li >'],",
      "24:             'char value chevron' => [\"\\x3cscript src=http://www.example.com/malicious-code.js\\x3e\\x3c/script\\x3e\"],",
      "25:             'hexadecimal html' => ['<IMG SRC=&#106&#x61&#x76&#x61&#x73&#109&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>', '<IMG >'],",
      "26:             'iframe' => ['<iframe width=\"560\" onclick=\"alert(\\'xss\\')\" height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>', '&lt;iframe width=\"560\"  height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;'],",
      "",
      "[Added Lines]",
      "18:             'link eliminated' => [\"<a href='Visit Google'>Google is here</a>\", \"&lt;a href='Visit Google'&gt;Google is here&lt;/a&gt;\"],",
      "19:             'script tag' => [\"Hello, I am trying to <script>alert('Hack');</script> your site\", \"Hello, I am trying to &lt;script&gt;alert('Hack');&lt;/script&gt; your site\"],",
      "20:             'script tag with quotes' => ['Hello, I am trying to <script>alert(\"Hack\");</script> your site', 'Hello, I am trying to &lt;script&gt;alert(&quot;Hack&quot;);&lt;/script&gt; your site'],",
      "21:             'javascript tag no hex' => [\"<a href='javascript:alert(1)'>CLICK</a>\", \"&lt;a href='javascript:alert(1)'&gt;CLICK&lt;/a&gt;\"],",
      "22:             'javascript tag' => [\"<a href='&#x2000;javascript:alert(1)'>CLICK</a>\", \"&lt;a href='&amp;#x2000;javascript:alert(1)'&gt;CLICK&lt;/a&gt;\"],",
      "23:             'with unicode' => ['<a href=\"\\\\u0001java\\\\u0003script:alert(1)\">CLICK</a>', '&lt;a href=&quot;\\\\u0001java\\\\u0003script:alert(1)&quot;&gt;CLICK&lt;/a&gt;'],",
      "24:             'inline css' => ['<li style=\"list-style-image: url(javascript:alert(0))\">', '&lt;li style=&quot;list-style-image: url(javascript:alert(0))&quot;&gt;'],",
      "25:             'char value chevron' => [\"\\x3cscript src=http://www.example.com/malicious-code.js\\x3e\\x3c/script\\x3e\", '&lt;script src=http://www.example.com/malicious-code.js&gt;&lt;/script&gt;'],",
      "26:             'hexadecimal html' => ['<IMG SRC=&#106&#x61&#x76&#x61&#x73&#109&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>', '&lt;IMG SRC=&amp;#106&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#109&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;'],",
      "27:             'iframe' => ['<iframe width=\"560\" onclick=\"alert(\\'xss\\')\" height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>', '&lt;iframe width=&quot;560&quot; onclick=&quot;alert(\\'xss\\')&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/whatever?rel=0&amp;controls=0&amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;'],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "58:         self::assertStringContainsString($expected, $verify);",
      "59:         $spreadsheet->disconnectWorksheets();",
      "60:     }",
      "61: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63:     public function testXssInFontName(): void",
      "64:     {",
      "65:         $spreadsheet = new Spreadsheet();",
      "66:         $sheet = $spreadsheet->getActiveSheet();",
      "67:         $sheet->getCell('A1')->setValue('here');",
      "68:         $used = 'Calibri</style><script type=\"text/javascript\">alert(\"hello\");</script><style type=\"text/css\">';",
      "69:         $expected = \"font-family:'Calibri&lt;/style&gt;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;hello&quot;);&lt;/script&gt;&lt;style type=&quot;text/css&quot;&gt;'\";",
      "70:         $sheet->getStyle('A1')->getFont()->setName($used);",
      "72:         $writer = new Html($spreadsheet);",
      "73:         $verify = $writer->generateHtmlAll();",
      "75:         self::assertStringNotContainsString($used, $verify);",
      "76:         self::assertStringContainsString($expected, $verify);",
      "77:         $spreadsheet->disconnectWorksheets();",
      "78:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c695d5ca8b118943bd018d18444eae8cdeff281e",
      "candidate_info": {
        "commit_hash": "c695d5ca8b118943bd018d18444eae8cdeff281e",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/c695d5ca8b118943bd018d18444eae8cdeff281e",
        "files": [
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ],
        "message": "Minor Correction\n\nSanitize font name.",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PHPOffice/PhpSpreadsheet/pull/3957"
        ],
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1039:         }",
          "1041:         $css['color'] = '#' . $font->getColor()->getRGB();",
          "1043:         $css['font-size'] = $font->getSize() . 'pt';",
          "1045:         return $css;",
          "",
          "[Removed Lines]",
          "1042:         $css['font-family'] = '\\'' . $font->getName() . '\\'';",
          "",
          "[Added Lines]",
          "1042:         $css['font-family'] = '\\'' . htmlspecialchars((string) $font->getName(), ENT_QUOTES) . '\\'';",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php -> tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:         self::assertStringContainsString($expected, $verify);",
          "60:         $spreadsheet->disconnectWorksheets();",
          "61:     }",
          "62: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     public function testXssInFontName(): void",
          "64:     {",
          "65:         $spreadsheet = new Spreadsheet();",
          "66:         $sheet = $spreadsheet->getActiveSheet();",
          "67:         $sheet->getCell('A1')->setValue('here');",
          "68:         $used = 'Calibri</style><script type=\"text/javascript\">alert(\"hello\");</script><style type=\"text/css\">';",
          "69:         $expected = \"font-family:'Calibri&lt;/style&gt;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;hello&quot;);&lt;/script&gt;&lt;style type=&quot;text/css&quot;&gt;'\";",
          "70:         $sheet->getStyle('A1')->getFont()->setName($used);",
          "72:         $writer = new Html($spreadsheet);",
          "73:         $verify = $writer->generateHtmlAll();",
          "75:         self::assertStringNotContainsString($expected, $used);",
          "76:         self::assertStringContainsString($expected, $verify);",
          "77:         $spreadsheet->disconnectWorksheets();",
          "78:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "989a4cec547fe6eab25d3e0816d47ba9ceff2f17",
      "candidate_info": {
        "commit_hash": "989a4cec547fe6eab25d3e0816d47ba9ceff2f17",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/989a4cec547fe6eab25d3e0816d47ba9ceff2f17",
        "files": [
          "CHANGELOG.md",
          "composer.json",
          "composer.lock",
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ],
        "message": "Html Writer Comments - Breaking Change\n\nFix #3954. In response to a Security Incident, a package was added to the project to sanitize the Html for comments attached to a cell. We have tried at least 2 different packages for this purpose, and users have raised legitimate concerns about both.\n\nI believe that adding a sanitizer package, although it addresses the problem, was overkill. Cell comments are a RichText object, and Html Writer already handled RichText cell *values*. Values did not figure in the Incident, and they surely would have done so if they were a problem because it is a lot easier to set up test cases for values than for comments. RichText values were not a problem because they were sanitized with `htmlspecialchars`; if comments were to use the same code that RichText was already using, it would likewise be safely sanitized. As an added bonus, the existing code for comments only uses the plaintext value, but the values code would allow the comments to be styled, just as they are for Xlsx.\n\nThis is a breaking change - I don't think it will affect a lot of users, but there may be some. It is worth noting that the comment block before function `writeComment` has a link explaining what is being done. That link mentions only styling elements, not other possibilities like hyperlinks. At any rate, if people are putting styling tags (e.g. `<b>`) in their comments for this purpose, those will no longer work; the styling needs to be applied to the RichText elements. That will keep the user code the same regardless of the format of the intended output, which is certainly a good thing, but it is a break. If people are trying to insert non-styling tage (e.g. `<a>`), those will no longer work, just as there is no way to do it for Xlsx (although Excel itself may convert the raw text to a hyperlink, but that's out of scope, at least for now). I also note that, even with the current code, I haven't yet found a way to keep the Html comment in place long enough to actually click on any hyperlinks.\n\nThe main package being dropped brings several other packages along with it, so the project as a whole will have a slightly lighter footprint than before.\n\nThe existing `XssVulnerability` test cases are all preserved. Although the final result of the sanitizing changes, it can easily be seen that the results are all harmless.",
        "before_after_code_files": [
          "composer.lock||composer.lock",
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PHPOffice/PhpSpreadsheet/pull/3957"
        ],
        "olp_code_files": {
          "patch": [
            "composer.lock||composer.lock",
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ],
          "candidate": [
            "composer.lock||composer.lock",
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ]
        }
      },
      "candidate_diff": {
        "composer.lock||composer.lock": [
          "File: composer.lock -> composer.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:         \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",",
          "5:         \"This file is @generated automatically\"",
          "6:     ],",
          "8:     \"packages\": [",
          "9:         {",
          "10:             \"name\": \"maennchen/zipstream-php\",",
          "",
          "[Removed Lines]",
          "7:     \"content-hash\": \"84f741787fe1d67df41a23c583e92220\",",
          "",
          "[Added Lines]",
          "7:     \"content-hash\": \"c7a7ba2e1cc9ac479e06ab28916c6b80\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:                 \"source\": \"https://github.com/php-fig/simple-cache/tree/3.0.0\"",
          "465:             },",
          "466:             \"time\": \"2021-10-29T13:26:27+00:00\"",
          "1125:         }",
          "1126:     ],",
          "1127:     \"packages-dev\": [",
          "",
          "[Removed Lines]",
          "467:         },",
          "468:         {",
          "469:             \"name\": \"symfony/polyfill-iconv\",",
          "470:             \"version\": \"v1.28.0\",",
          "471:             \"source\": {",
          "472:                 \"type\": \"git\",",
          "473:                 \"url\": \"https://github.com/symfony/polyfill-iconv.git\",",
          "474:                 \"reference\": \"6de50471469b8c9afc38164452ab2b6170ee71c1\"",
          "475:             },",
          "476:             \"dist\": {",
          "477:                 \"type\": \"zip\",",
          "478:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-iconv/zipball/6de50471469b8c9afc38164452ab2b6170ee71c1\",",
          "479:                 \"reference\": \"6de50471469b8c9afc38164452ab2b6170ee71c1\",",
          "480:                 \"shasum\": \"\"",
          "481:             },",
          "482:             \"require\": {",
          "483:                 \"php\": \">=7.1\"",
          "484:             },",
          "485:             \"provide\": {",
          "486:                 \"ext-iconv\": \"*\"",
          "487:             },",
          "488:             \"suggest\": {",
          "489:                 \"ext-iconv\": \"For best performance\"",
          "490:             },",
          "491:             \"type\": \"library\",",
          "492:             \"extra\": {",
          "493:                 \"branch-alias\": {",
          "494:                     \"dev-main\": \"1.28-dev\"",
          "495:                 },",
          "496:                 \"thanks\": {",
          "497:                     \"name\": \"symfony/polyfill\",",
          "498:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "499:                 }",
          "500:             },",
          "501:             \"autoload\": {",
          "502:                 \"files\": [",
          "503:                     \"bootstrap.php\"",
          "504:                 ],",
          "505:                 \"psr-4\": {",
          "506:                     \"Symfony\\\\Polyfill\\\\Iconv\\\\\": \"\"",
          "507:                 }",
          "508:             },",
          "509:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "510:             \"license\": [",
          "511:                 \"MIT\"",
          "512:             ],",
          "513:             \"authors\": [",
          "514:                 {",
          "515:                     \"name\": \"Nicolas Grekas\",",
          "516:                     \"email\": \"p@tchwork.com\"",
          "517:                 },",
          "518:                 {",
          "519:                     \"name\": \"Symfony Community\",",
          "520:                     \"homepage\": \"https://symfony.com/contributors\"",
          "521:                 }",
          "522:             ],",
          "523:             \"description\": \"Symfony polyfill for the Iconv extension\",",
          "524:             \"homepage\": \"https://symfony.com\",",
          "525:             \"keywords\": [",
          "526:                 \"compatibility\",",
          "527:                 \"iconv\",",
          "528:                 \"polyfill\",",
          "529:                 \"portable\",",
          "530:                 \"shim\"",
          "531:             ],",
          "532:             \"support\": {",
          "533:                 \"source\": \"https://github.com/symfony/polyfill-iconv/tree/v1.28.0\"",
          "534:             },",
          "535:             \"funding\": [",
          "536:                 {",
          "537:                     \"url\": \"https://symfony.com/sponsor\",",
          "538:                     \"type\": \"custom\"",
          "539:                 },",
          "540:                 {",
          "541:                     \"url\": \"https://github.com/fabpot\",",
          "542:                     \"type\": \"github\"",
          "543:                 },",
          "544:                 {",
          "545:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "546:                     \"type\": \"tidelift\"",
          "547:                 }",
          "548:             ],",
          "549:             \"time\": \"2023-01-26T09:26:14+00:00\"",
          "550:         },",
          "551:         {",
          "552:             \"name\": \"symfony/polyfill-intl-grapheme\",",
          "553:             \"version\": \"v1.29.0\",",
          "554:             \"source\": {",
          "555:                 \"type\": \"git\",",
          "556:                 \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",",
          "557:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\"",
          "558:             },",
          "559:             \"dist\": {",
          "560:                 \"type\": \"zip\",",
          "561:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
          "562:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
          "563:                 \"shasum\": \"\"",
          "564:             },",
          "565:             \"require\": {",
          "566:                 \"php\": \">=7.1\"",
          "567:             },",
          "568:             \"suggest\": {",
          "569:                 \"ext-intl\": \"For best performance\"",
          "570:             },",
          "571:             \"type\": \"library\",",
          "572:             \"extra\": {",
          "573:                 \"thanks\": {",
          "574:                     \"name\": \"symfony/polyfill\",",
          "575:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "576:                 }",
          "577:             },",
          "578:             \"autoload\": {",
          "579:                 \"files\": [",
          "580:                     \"bootstrap.php\"",
          "581:                 ],",
          "582:                 \"psr-4\": {",
          "583:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"",
          "584:                 }",
          "585:             },",
          "586:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "587:             \"license\": [",
          "588:                 \"MIT\"",
          "589:             ],",
          "590:             \"authors\": [",
          "591:                 {",
          "592:                     \"name\": \"Nicolas Grekas\",",
          "593:                     \"email\": \"p@tchwork.com\"",
          "594:                 },",
          "595:                 {",
          "596:                     \"name\": \"Symfony Community\",",
          "597:                     \"homepage\": \"https://symfony.com/contributors\"",
          "598:                 }",
          "599:             ],",
          "600:             \"description\": \"Symfony polyfill for intl's grapheme_* functions\",",
          "601:             \"homepage\": \"https://symfony.com\",",
          "602:             \"keywords\": [",
          "603:                 \"compatibility\",",
          "604:                 \"grapheme\",",
          "605:                 \"intl\",",
          "606:                 \"polyfill\",",
          "607:                 \"portable\",",
          "608:                 \"shim\"",
          "609:             ],",
          "610:             \"support\": {",
          "611:                 \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.29.0\"",
          "612:             },",
          "613:             \"funding\": [",
          "614:                 {",
          "615:                     \"url\": \"https://symfony.com/sponsor\",",
          "616:                     \"type\": \"custom\"",
          "617:                 },",
          "618:                 {",
          "619:                     \"url\": \"https://github.com/fabpot\",",
          "620:                     \"type\": \"github\"",
          "621:                 },",
          "622:                 {",
          "623:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "624:                     \"type\": \"tidelift\"",
          "625:                 }",
          "626:             ],",
          "627:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "628:         },",
          "629:         {",
          "630:             \"name\": \"symfony/polyfill-intl-normalizer\",",
          "631:             \"version\": \"v1.29.0\",",
          "632:             \"source\": {",
          "633:                 \"type\": \"git\",",
          "634:                 \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",",
          "635:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\"",
          "636:             },",
          "637:             \"dist\": {",
          "638:                 \"type\": \"zip\",",
          "639:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/bc45c394692b948b4d383a08d7753968bed9a83d\",",
          "640:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\",",
          "641:                 \"shasum\": \"\"",
          "642:             },",
          "643:             \"require\": {",
          "644:                 \"php\": \">=7.1\"",
          "645:             },",
          "646:             \"suggest\": {",
          "647:                 \"ext-intl\": \"For best performance\"",
          "648:             },",
          "649:             \"type\": \"library\",",
          "650:             \"extra\": {",
          "651:                 \"thanks\": {",
          "652:                     \"name\": \"symfony/polyfill\",",
          "653:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "654:                 }",
          "655:             },",
          "656:             \"autoload\": {",
          "657:                 \"files\": [",
          "658:                     \"bootstrap.php\"",
          "659:                 ],",
          "660:                 \"psr-4\": {",
          "661:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"",
          "662:                 },",
          "663:                 \"classmap\": [",
          "664:                     \"Resources/stubs\"",
          "665:                 ]",
          "666:             },",
          "667:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "668:             \"license\": [",
          "669:                 \"MIT\"",
          "670:             ],",
          "671:             \"authors\": [",
          "672:                 {",
          "673:                     \"name\": \"Nicolas Grekas\",",
          "674:                     \"email\": \"p@tchwork.com\"",
          "675:                 },",
          "676:                 {",
          "677:                     \"name\": \"Symfony Community\",",
          "678:                     \"homepage\": \"https://symfony.com/contributors\"",
          "679:                 }",
          "680:             ],",
          "681:             \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",",
          "682:             \"homepage\": \"https://symfony.com\",",
          "683:             \"keywords\": [",
          "684:                 \"compatibility\",",
          "685:                 \"intl\",",
          "686:                 \"normalizer\",",
          "687:                 \"polyfill\",",
          "688:                 \"portable\",",
          "689:                 \"shim\"",
          "690:             ],",
          "691:             \"support\": {",
          "692:                 \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.29.0\"",
          "693:             },",
          "694:             \"funding\": [",
          "695:                 {",
          "696:                     \"url\": \"https://symfony.com/sponsor\",",
          "697:                     \"type\": \"custom\"",
          "698:                 },",
          "699:                 {",
          "700:                     \"url\": \"https://github.com/fabpot\",",
          "701:                     \"type\": \"github\"",
          "702:                 },",
          "703:                 {",
          "704:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "705:                     \"type\": \"tidelift\"",
          "706:                 }",
          "707:             ],",
          "708:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "709:         },",
          "710:         {",
          "711:             \"name\": \"symfony/polyfill-mbstring\",",
          "712:             \"version\": \"v1.29.0\",",
          "713:             \"source\": {",
          "714:                 \"type\": \"git\",",
          "715:                 \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",",
          "716:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\"",
          "717:             },",
          "718:             \"dist\": {",
          "719:                 \"type\": \"zip\",",
          "720:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
          "721:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
          "722:                 \"shasum\": \"\"",
          "723:             },",
          "724:             \"require\": {",
          "725:                 \"php\": \">=7.1\"",
          "726:             },",
          "727:             \"provide\": {",
          "728:                 \"ext-mbstring\": \"*\"",
          "729:             },",
          "730:             \"suggest\": {",
          "731:                 \"ext-mbstring\": \"For best performance\"",
          "732:             },",
          "733:             \"type\": \"library\",",
          "734:             \"extra\": {",
          "735:                 \"thanks\": {",
          "736:                     \"name\": \"symfony/polyfill\",",
          "737:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "738:                 }",
          "739:             },",
          "740:             \"autoload\": {",
          "741:                 \"files\": [",
          "742:                     \"bootstrap.php\"",
          "743:                 ],",
          "744:                 \"psr-4\": {",
          "745:                     \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"",
          "746:                 }",
          "747:             },",
          "748:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "749:             \"license\": [",
          "750:                 \"MIT\"",
          "751:             ],",
          "752:             \"authors\": [",
          "753:                 {",
          "754:                     \"name\": \"Nicolas Grekas\",",
          "755:                     \"email\": \"p@tchwork.com\"",
          "756:                 },",
          "757:                 {",
          "758:                     \"name\": \"Symfony Community\",",
          "759:                     \"homepage\": \"https://symfony.com/contributors\"",
          "760:                 }",
          "761:             ],",
          "762:             \"description\": \"Symfony polyfill for the Mbstring extension\",",
          "763:             \"homepage\": \"https://symfony.com\",",
          "764:             \"keywords\": [",
          "765:                 \"compatibility\",",
          "766:                 \"mbstring\",",
          "767:                 \"polyfill\",",
          "768:                 \"portable\",",
          "769:                 \"shim\"",
          "770:             ],",
          "771:             \"support\": {",
          "772:                 \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.29.0\"",
          "773:             },",
          "774:             \"funding\": [",
          "775:                 {",
          "776:                     \"url\": \"https://symfony.com/sponsor\",",
          "777:                     \"type\": \"custom\"",
          "778:                 },",
          "779:                 {",
          "780:                     \"url\": \"https://github.com/fabpot\",",
          "781:                     \"type\": \"github\"",
          "782:                 },",
          "783:                 {",
          "784:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "785:                     \"type\": \"tidelift\"",
          "786:                 }",
          "787:             ],",
          "788:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "789:         },",
          "790:         {",
          "791:             \"name\": \"symfony/polyfill-php72\",",
          "792:             \"version\": \"v1.28.0\",",
          "793:             \"source\": {",
          "794:                 \"type\": \"git\",",
          "795:                 \"url\": \"https://github.com/symfony/polyfill-php72.git\",",
          "796:                 \"reference\": \"70f4aebd92afca2f865444d30a4d2151c13c3179\"",
          "797:             },",
          "798:             \"dist\": {",
          "799:                 \"type\": \"zip\",",
          "800:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-php72/zipball/70f4aebd92afca2f865444d30a4d2151c13c3179\",",
          "801:                 \"reference\": \"70f4aebd92afca2f865444d30a4d2151c13c3179\",",
          "802:                 \"shasum\": \"\"",
          "803:             },",
          "804:             \"require\": {",
          "805:                 \"php\": \">=7.1\"",
          "806:             },",
          "807:             \"type\": \"library\",",
          "808:             \"extra\": {",
          "809:                 \"branch-alias\": {",
          "810:                     \"dev-main\": \"1.28-dev\"",
          "811:                 },",
          "812:                 \"thanks\": {",
          "813:                     \"name\": \"symfony/polyfill\",",
          "814:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "815:                 }",
          "816:             },",
          "817:             \"autoload\": {",
          "818:                 \"files\": [",
          "819:                     \"bootstrap.php\"",
          "820:                 ],",
          "821:                 \"psr-4\": {",
          "822:                     \"Symfony\\\\Polyfill\\\\Php72\\\\\": \"\"",
          "823:                 }",
          "824:             },",
          "825:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "826:             \"license\": [",
          "827:                 \"MIT\"",
          "828:             ],",
          "829:             \"authors\": [",
          "830:                 {",
          "831:                     \"name\": \"Nicolas Grekas\",",
          "832:                     \"email\": \"p@tchwork.com\"",
          "833:                 },",
          "834:                 {",
          "835:                     \"name\": \"Symfony Community\",",
          "836:                     \"homepage\": \"https://symfony.com/contributors\"",
          "837:                 }",
          "838:             ],",
          "839:             \"description\": \"Symfony polyfill backporting some PHP 7.2+ features to lower PHP versions\",",
          "840:             \"homepage\": \"https://symfony.com\",",
          "841:             \"keywords\": [",
          "842:                 \"compatibility\",",
          "843:                 \"polyfill\",",
          "844:                 \"portable\",",
          "845:                 \"shim\"",
          "846:             ],",
          "847:             \"support\": {",
          "848:                 \"source\": \"https://github.com/symfony/polyfill-php72/tree/v1.28.0\"",
          "849:             },",
          "850:             \"funding\": [",
          "851:                 {",
          "852:                     \"url\": \"https://symfony.com/sponsor\",",
          "853:                     \"type\": \"custom\"",
          "854:                 },",
          "855:                 {",
          "856:                     \"url\": \"https://github.com/fabpot\",",
          "857:                     \"type\": \"github\"",
          "858:                 },",
          "859:                 {",
          "860:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "861:                     \"type\": \"tidelift\"",
          "862:                 }",
          "863:             ],",
          "864:             \"time\": \"2023-01-26T09:26:14+00:00\"",
          "865:         },",
          "866:         {",
          "867:             \"name\": \"voku/anti-xss\",",
          "868:             \"version\": \"4.1.42\",",
          "869:             \"source\": {",
          "870:                 \"type\": \"git\",",
          "871:                 \"url\": \"https://github.com/voku/anti-xss.git\",",
          "872:                 \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\"",
          "873:             },",
          "874:             \"dist\": {",
          "875:                 \"type\": \"zip\",",
          "876:                 \"url\": \"https://api.github.com/repos/voku/anti-xss/zipball/bca1f8607e55a3c5077483615cd93bd8f11bd675\",",
          "877:                 \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\",",
          "878:                 \"shasum\": \"\"",
          "879:             },",
          "880:             \"require\": {",
          "881:                 \"php\": \">=7.0.0\",",
          "882:                 \"voku/portable-utf8\": \"~6.0.2\"",
          "883:             },",
          "884:             \"require-dev\": {",
          "885:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"",
          "886:             },",
          "887:             \"type\": \"library\",",
          "888:             \"extra\": {",
          "889:                 \"branch-alias\": {",
          "890:                     \"dev-master\": \"4.1.x-dev\"",
          "891:                 }",
          "892:             },",
          "893:             \"autoload\": {",
          "894:                 \"psr-4\": {",
          "895:                     \"voku\\\\helper\\\\\": \"src/voku/helper/\"",
          "896:                 }",
          "897:             },",
          "898:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "899:             \"license\": [",
          "900:                 \"MIT\"",
          "901:             ],",
          "902:             \"authors\": [",
          "903:                 {",
          "904:                     \"name\": \"EllisLab Dev Team\",",
          "905:                     \"homepage\": \"http://ellislab.com/\"",
          "906:                 },",
          "907:                 {",
          "908:                     \"name\": \"Lars Moelleken\",",
          "909:                     \"email\": \"lars@moelleken.org\",",
          "910:                     \"homepage\": \"https://www.moelleken.org/\"",
          "911:                 }",
          "912:             ],",
          "913:             \"description\": \"anti xss-library\",",
          "914:             \"homepage\": \"https://github.com/voku/anti-xss\",",
          "915:             \"keywords\": [",
          "916:                 \"anti-xss\",",
          "917:                 \"clean\",",
          "918:                 \"security\",",
          "919:                 \"xss\"",
          "920:             ],",
          "921:             \"support\": {",
          "922:                 \"issues\": \"https://github.com/voku/anti-xss/issues\",",
          "923:                 \"source\": \"https://github.com/voku/anti-xss/tree/4.1.42\"",
          "924:             },",
          "925:             \"funding\": [",
          "926:                 {",
          "927:                     \"url\": \"https://www.paypal.me/moelleken\",",
          "928:                     \"type\": \"custom\"",
          "929:                 },",
          "930:                 {",
          "931:                     \"url\": \"https://github.com/voku\",",
          "932:                     \"type\": \"github\"",
          "933:                 },",
          "934:                 {",
          "935:                     \"url\": \"https://opencollective.com/anti-xss\",",
          "936:                     \"type\": \"open_collective\"",
          "937:                 },",
          "938:                 {",
          "939:                     \"url\": \"https://www.patreon.com/voku\",",
          "940:                     \"type\": \"patreon\"",
          "941:                 },",
          "942:                 {",
          "943:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/anti-xss\",",
          "944:                     \"type\": \"tidelift\"",
          "945:                 }",
          "946:             ],",
          "947:             \"time\": \"2023-07-03T14:40:46+00:00\"",
          "948:         },",
          "949:         {",
          "950:             \"name\": \"voku/portable-ascii\",",
          "951:             \"version\": \"2.0.1\",",
          "952:             \"source\": {",
          "953:                 \"type\": \"git\",",
          "954:                 \"url\": \"https://github.com/voku/portable-ascii.git\",",
          "955:                 \"reference\": \"b56450eed252f6801410d810c8e1727224ae0743\"",
          "956:             },",
          "957:             \"dist\": {",
          "958:                 \"type\": \"zip\",",
          "959:                 \"url\": \"https://api.github.com/repos/voku/portable-ascii/zipball/b56450eed252f6801410d810c8e1727224ae0743\",",
          "960:                 \"reference\": \"b56450eed252f6801410d810c8e1727224ae0743\",",
          "961:                 \"shasum\": \"\"",
          "962:             },",
          "963:             \"require\": {",
          "964:                 \"php\": \">=7.0.0\"",
          "965:             },",
          "966:             \"require-dev\": {",
          "967:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"",
          "968:             },",
          "969:             \"suggest\": {",
          "970:                 \"ext-intl\": \"Use Intl for transliterator_transliterate() support\"",
          "971:             },",
          "972:             \"type\": \"library\",",
          "973:             \"autoload\": {",
          "974:                 \"psr-4\": {",
          "975:                     \"voku\\\\\": \"src/voku/\"",
          "976:                 }",
          "977:             },",
          "978:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "979:             \"license\": [",
          "980:                 \"MIT\"",
          "981:             ],",
          "982:             \"authors\": [",
          "983:                 {",
          "984:                     \"name\": \"Lars Moelleken\",",
          "985:                     \"homepage\": \"http://www.moelleken.org/\"",
          "986:                 }",
          "987:             ],",
          "988:             \"description\": \"Portable ASCII library - performance optimized (ascii) string functions for php.\",",
          "989:             \"homepage\": \"https://github.com/voku/portable-ascii\",",
          "990:             \"keywords\": [",
          "991:                 \"ascii\",",
          "992:                 \"clean\",",
          "993:                 \"php\"",
          "994:             ],",
          "995:             \"support\": {",
          "996:                 \"issues\": \"https://github.com/voku/portable-ascii/issues\",",
          "997:                 \"source\": \"https://github.com/voku/portable-ascii/tree/2.0.1\"",
          "998:             },",
          "999:             \"funding\": [",
          "1000:                 {",
          "1001:                     \"url\": \"https://www.paypal.me/moelleken\",",
          "1002:                     \"type\": \"custom\"",
          "1003:                 },",
          "1004:                 {",
          "1005:                     \"url\": \"https://github.com/voku\",",
          "1006:                     \"type\": \"github\"",
          "1007:                 },",
          "1008:                 {",
          "1009:                     \"url\": \"https://opencollective.com/portable-ascii\",",
          "1010:                     \"type\": \"open_collective\"",
          "1011:                 },",
          "1012:                 {",
          "1013:                     \"url\": \"https://www.patreon.com/voku\",",
          "1014:                     \"type\": \"patreon\"",
          "1015:                 },",
          "1016:                 {",
          "1017:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-ascii\",",
          "1018:                     \"type\": \"tidelift\"",
          "1019:                 }",
          "1020:             ],",
          "1021:             \"time\": \"2022-03-08T17:03:00+00:00\"",
          "1022:         },",
          "1023:         {",
          "1024:             \"name\": \"voku/portable-utf8\",",
          "1025:             \"version\": \"6.0.13\",",
          "1026:             \"source\": {",
          "1027:                 \"type\": \"git\",",
          "1028:                 \"url\": \"https://github.com/voku/portable-utf8.git\",",
          "1029:                 \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\"",
          "1030:             },",
          "1031:             \"dist\": {",
          "1032:                 \"type\": \"zip\",",
          "1033:                 \"url\": \"https://api.github.com/repos/voku/portable-utf8/zipball/b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",",
          "1034:                 \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",",
          "1035:                 \"shasum\": \"\"",
          "1036:             },",
          "1037:             \"require\": {",
          "1038:                 \"php\": \">=7.0.0\",",
          "1039:                 \"symfony/polyfill-iconv\": \"~1.0\",",
          "1040:                 \"symfony/polyfill-intl-grapheme\": \"~1.0\",",
          "1041:                 \"symfony/polyfill-intl-normalizer\": \"~1.0\",",
          "1042:                 \"symfony/polyfill-mbstring\": \"~1.0\",",
          "1043:                 \"symfony/polyfill-php72\": \"~1.0\",",
          "1044:                 \"voku/portable-ascii\": \"~2.0.0\"",
          "1045:             },",
          "1046:             \"require-dev\": {",
          "1047:                 \"phpstan/phpstan\": \"1.9.*@dev\",",
          "1048:                 \"phpstan/phpstan-strict-rules\": \"1.4.*@dev\",",
          "1049:                 \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\",",
          "1050:                 \"thecodingmachine/phpstan-strict-rules\": \"1.0.*@dev\",",
          "1051:                 \"voku/phpstan-rules\": \"3.1.*@dev\"",
          "1052:             },",
          "1053:             \"suggest\": {",
          "1054:                 \"ext-ctype\": \"Use Ctype for e.g. hexadecimal digit detection\",",
          "1055:                 \"ext-fileinfo\": \"Use Fileinfo for better binary file detection\",",
          "1056:                 \"ext-iconv\": \"Use iconv for best performance\",",
          "1057:                 \"ext-intl\": \"Use Intl for best performance\",",
          "1058:                 \"ext-json\": \"Use JSON for string detection\",",
          "1059:                 \"ext-mbstring\": \"Use Mbstring for best performance\"",
          "1060:             },",
          "1061:             \"type\": \"library\",",
          "1062:             \"autoload\": {",
          "1063:                 \"files\": [",
          "1064:                     \"bootstrap.php\"",
          "1065:                 ],",
          "1066:                 \"psr-4\": {",
          "1067:                     \"voku\\\\\": \"src/voku/\"",
          "1068:                 }",
          "1069:             },",
          "1070:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "1071:             \"license\": [",
          "1072:                 \"(Apache-2.0 or GPL-2.0)\"",
          "1073:             ],",
          "1074:             \"authors\": [",
          "1075:                 {",
          "1076:                     \"name\": \"Nicolas Grekas\",",
          "1077:                     \"email\": \"p@tchwork.com\"",
          "1078:                 },",
          "1079:                 {",
          "1080:                     \"name\": \"Hamid Sarfraz\",",
          "1081:                     \"homepage\": \"http://pageconfig.com/\"",
          "1082:                 },",
          "1083:                 {",
          "1084:                     \"name\": \"Lars Moelleken\",",
          "1085:                     \"homepage\": \"http://www.moelleken.org/\"",
          "1086:                 }",
          "1087:             ],",
          "1088:             \"description\": \"Portable UTF-8 library - performance optimized (unicode) string functions for php.\",",
          "1089:             \"homepage\": \"https://github.com/voku/portable-utf8\",",
          "1090:             \"keywords\": [",
          "1091:                 \"UTF\",",
          "1092:                 \"clean\",",
          "1093:                 \"php\",",
          "1094:                 \"unicode\",",
          "1095:                 \"utf-8\",",
          "1096:                 \"utf8\"",
          "1097:             ],",
          "1098:             \"support\": {",
          "1099:                 \"issues\": \"https://github.com/voku/portable-utf8/issues\",",
          "1100:                 \"source\": \"https://github.com/voku/portable-utf8/tree/6.0.13\"",
          "1101:             },",
          "1102:             \"funding\": [",
          "1103:                 {",
          "1104:                     \"url\": \"https://www.paypal.me/moelleken\",",
          "1105:                     \"type\": \"custom\"",
          "1106:                 },",
          "1107:                 {",
          "1108:                     \"url\": \"https://github.com/voku\",",
          "1109:                     \"type\": \"github\"",
          "1110:                 },",
          "1111:                 {",
          "1112:                     \"url\": \"https://opencollective.com/portable-utf8\",",
          "1113:                     \"type\": \"open_collective\"",
          "1114:                 },",
          "1115:                 {",
          "1116:                     \"url\": \"https://www.patreon.com/voku\",",
          "1117:                     \"type\": \"patreon\"",
          "1118:                 },",
          "1119:                 {",
          "1120:                     \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-utf8\",",
          "1121:                     \"type\": \"tidelift\"",
          "1122:                 }",
          "1123:             ],",
          "1124:             \"time\": \"2023-03-08T08:35:38+00:00\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4826:             ],",
          "4827:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "4828:         },",
          "4829:         {",
          "4830:             \"name\": \"symfony/polyfill-php80\",",
          "4831:             \"version\": \"v1.29.0\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4171:         {",
          "4172:             \"name\": \"symfony/polyfill-intl-grapheme\",",
          "4173:             \"version\": \"v1.29.0\",",
          "4174:             \"source\": {",
          "4175:                 \"type\": \"git\",",
          "4176:                 \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",",
          "4177:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\"",
          "4178:             },",
          "4179:             \"dist\": {",
          "4180:                 \"type\": \"zip\",",
          "4181:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
          "4182:                 \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\",",
          "4183:                 \"shasum\": \"\"",
          "4184:             },",
          "4185:             \"require\": {",
          "4186:                 \"php\": \">=7.1\"",
          "4187:             },",
          "4188:             \"suggest\": {",
          "4189:                 \"ext-intl\": \"For best performance\"",
          "4190:             },",
          "4191:             \"type\": \"library\",",
          "4192:             \"extra\": {",
          "4193:                 \"thanks\": {",
          "4194:                     \"name\": \"symfony/polyfill\",",
          "4195:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "4196:                 }",
          "4197:             },",
          "4198:             \"autoload\": {",
          "4199:                 \"files\": [",
          "4200:                     \"bootstrap.php\"",
          "4201:                 ],",
          "4202:                 \"psr-4\": {",
          "4203:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"",
          "4204:                 }",
          "4205:             },",
          "4206:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "4207:             \"license\": [",
          "4208:                 \"MIT\"",
          "4209:             ],",
          "4210:             \"authors\": [",
          "4211:                 {",
          "4212:                     \"name\": \"Nicolas Grekas\",",
          "4213:                     \"email\": \"p@tchwork.com\"",
          "4214:                 },",
          "4215:                 {",
          "4216:                     \"name\": \"Symfony Community\",",
          "4217:                     \"homepage\": \"https://symfony.com/contributors\"",
          "4218:                 }",
          "4219:             ],",
          "4220:             \"description\": \"Symfony polyfill for intl's grapheme_* functions\",",
          "4221:             \"homepage\": \"https://symfony.com\",",
          "4222:             \"keywords\": [",
          "4223:                 \"compatibility\",",
          "4224:                 \"grapheme\",",
          "4225:                 \"intl\",",
          "4226:                 \"polyfill\",",
          "4227:                 \"portable\",",
          "4228:                 \"shim\"",
          "4229:             ],",
          "4230:             \"support\": {",
          "4231:                 \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.29.0\"",
          "4232:             },",
          "4233:             \"funding\": [",
          "4234:                 {",
          "4235:                     \"url\": \"https://symfony.com/sponsor\",",
          "4236:                     \"type\": \"custom\"",
          "4237:                 },",
          "4238:                 {",
          "4239:                     \"url\": \"https://github.com/fabpot\",",
          "4240:                     \"type\": \"github\"",
          "4241:                 },",
          "4242:                 {",
          "4243:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "4244:                     \"type\": \"tidelift\"",
          "4245:                 }",
          "4246:             ],",
          "4247:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "4248:         },",
          "4249:         {",
          "4250:             \"name\": \"symfony/polyfill-intl-normalizer\",",
          "4251:             \"version\": \"v1.29.0\",",
          "4252:             \"source\": {",
          "4253:                 \"type\": \"git\",",
          "4254:                 \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",",
          "4255:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\"",
          "4256:             },",
          "4257:             \"dist\": {",
          "4258:                 \"type\": \"zip\",",
          "4259:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/bc45c394692b948b4d383a08d7753968bed9a83d\",",
          "4260:                 \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\",",
          "4261:                 \"shasum\": \"\"",
          "4262:             },",
          "4263:             \"require\": {",
          "4264:                 \"php\": \">=7.1\"",
          "4265:             },",
          "4266:             \"suggest\": {",
          "4267:                 \"ext-intl\": \"For best performance\"",
          "4268:             },",
          "4269:             \"type\": \"library\",",
          "4270:             \"extra\": {",
          "4271:                 \"thanks\": {",
          "4272:                     \"name\": \"symfony/polyfill\",",
          "4273:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "4274:                 }",
          "4275:             },",
          "4276:             \"autoload\": {",
          "4277:                 \"files\": [",
          "4278:                     \"bootstrap.php\"",
          "4279:                 ],",
          "4280:                 \"psr-4\": {",
          "4281:                     \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"",
          "4282:                 },",
          "4283:                 \"classmap\": [",
          "4284:                     \"Resources/stubs\"",
          "4285:                 ]",
          "4286:             },",
          "4287:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "4288:             \"license\": [",
          "4289:                 \"MIT\"",
          "4290:             ],",
          "4291:             \"authors\": [",
          "4292:                 {",
          "4293:                     \"name\": \"Nicolas Grekas\",",
          "4294:                     \"email\": \"p@tchwork.com\"",
          "4295:                 },",
          "4296:                 {",
          "4297:                     \"name\": \"Symfony Community\",",
          "4298:                     \"homepage\": \"https://symfony.com/contributors\"",
          "4299:                 }",
          "4300:             ],",
          "4301:             \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",",
          "4302:             \"homepage\": \"https://symfony.com\",",
          "4303:             \"keywords\": [",
          "4304:                 \"compatibility\",",
          "4305:                 \"intl\",",
          "4306:                 \"normalizer\",",
          "4307:                 \"polyfill\",",
          "4308:                 \"portable\",",
          "4309:                 \"shim\"",
          "4310:             ],",
          "4311:             \"support\": {",
          "4312:                 \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.29.0\"",
          "4313:             },",
          "4314:             \"funding\": [",
          "4315:                 {",
          "4316:                     \"url\": \"https://symfony.com/sponsor\",",
          "4317:                     \"type\": \"custom\"",
          "4318:                 },",
          "4319:                 {",
          "4320:                     \"url\": \"https://github.com/fabpot\",",
          "4321:                     \"type\": \"github\"",
          "4322:                 },",
          "4323:                 {",
          "4324:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "4325:                     \"type\": \"tidelift\"",
          "4326:                 }",
          "4327:             ],",
          "4328:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "4329:         },",
          "4330:         {",
          "4331:             \"name\": \"symfony/polyfill-mbstring\",",
          "4332:             \"version\": \"v1.29.0\",",
          "4333:             \"source\": {",
          "4334:                 \"type\": \"git\",",
          "4335:                 \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",",
          "4336:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\"",
          "4337:             },",
          "4338:             \"dist\": {",
          "4339:                 \"type\": \"zip\",",
          "4340:                 \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
          "4341:                 \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",",
          "4342:                 \"shasum\": \"\"",
          "4343:             },",
          "4344:             \"require\": {",
          "4345:                 \"php\": \">=7.1\"",
          "4346:             },",
          "4347:             \"provide\": {",
          "4348:                 \"ext-mbstring\": \"*\"",
          "4349:             },",
          "4350:             \"suggest\": {",
          "4351:                 \"ext-mbstring\": \"For best performance\"",
          "4352:             },",
          "4353:             \"type\": \"library\",",
          "4354:             \"extra\": {",
          "4355:                 \"thanks\": {",
          "4356:                     \"name\": \"symfony/polyfill\",",
          "4357:                     \"url\": \"https://github.com/symfony/polyfill\"",
          "4358:                 }",
          "4359:             },",
          "4360:             \"autoload\": {",
          "4361:                 \"files\": [",
          "4362:                     \"bootstrap.php\"",
          "4363:                 ],",
          "4364:                 \"psr-4\": {",
          "4365:                     \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"",
          "4366:                 }",
          "4367:             },",
          "4368:             \"notification-url\": \"https://packagist.org/downloads/\",",
          "4369:             \"license\": [",
          "4370:                 \"MIT\"",
          "4371:             ],",
          "4372:             \"authors\": [",
          "4373:                 {",
          "4374:                     \"name\": \"Nicolas Grekas\",",
          "4375:                     \"email\": \"p@tchwork.com\"",
          "4376:                 },",
          "4377:                 {",
          "4378:                     \"name\": \"Symfony Community\",",
          "4379:                     \"homepage\": \"https://symfony.com/contributors\"",
          "4380:                 }",
          "4381:             ],",
          "4382:             \"description\": \"Symfony polyfill for the Mbstring extension\",",
          "4383:             \"homepage\": \"https://symfony.com\",",
          "4384:             \"keywords\": [",
          "4385:                 \"compatibility\",",
          "4386:                 \"mbstring\",",
          "4387:                 \"polyfill\",",
          "4388:                 \"portable\",",
          "4389:                 \"shim\"",
          "4390:             ],",
          "4391:             \"support\": {",
          "4392:                 \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.29.0\"",
          "4393:             },",
          "4394:             \"funding\": [",
          "4395:                 {",
          "4396:                     \"url\": \"https://symfony.com/sponsor\",",
          "4397:                     \"type\": \"custom\"",
          "4398:                 },",
          "4399:                 {",
          "4400:                     \"url\": \"https://github.com/fabpot\",",
          "4401:                     \"type\": \"github\"",
          "4402:                 },",
          "4403:                 {",
          "4404:                     \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",",
          "4405:                     \"type\": \"tidelift\"",
          "4406:                 }",
          "4407:             ],",
          "4408:             \"time\": \"2024-01-29T20:11:03+00:00\"",
          "4409:         },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5422:     \"platform-overrides\": {",
          "5423:         \"php\": \"8.0.99\"",
          "5424:     },",
          "5426: }",
          "",
          "[Removed Lines]",
          "5425:     \"plugin-api-version\": \"2.6.0\"",
          "",
          "[Added Lines]",
          "5006:     \"plugin-api-version\": \"2.3.0\"",
          "",
          "---------------"
        ],
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: use PhpOffice\\PhpSpreadsheet\\Worksheet\\MemoryDrawing;",
          "29: use PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup;",
          "30: use PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet;",
          "33: class Html extends BaseWriter",
          "34: {",
          "",
          "[Removed Lines]",
          "31: use voku\\helper\\AntiXSS;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1237:         return [$cell, $cssClass, $coordinate];",
          "1238:     }",
          "1241:     {",
          "1244:         foreach ($elements as $element) {",
          "1246:             if ($element instanceof Run) {",
          "",
          "[Removed Lines]",
          "1240:     private function generateRowCellDataValueRich(Cell $cell, string &$cellData): void",
          "1243:         $elements = $cell->getValue()->getRichTextElements();",
          "",
          "[Added Lines]",
          "1239:     private function generateRowCellDataValueRich(RichText $richText): string",
          "1241:         $cellData = '';",
          "1243:         $elements = $richText->getRichTextElements();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1255:                         $cellData .= '<sub>';",
          "1256:                         $cellEnd = '</sub>';",
          "1257:                     }",
          "1258:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1258:                 } else {",
          "1259:                     $cellData .= '<span>';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1270:                 $cellData .= htmlspecialchars($cellText, Settings::htmlEntityFlags());",
          "1271:             }",
          "1272:         }",
          "1273:     }",
          "1275:     private function generateRowCellDataValue(Worksheet $worksheet, Cell $cell, string &$cellData): void",
          "1276:     {",
          "1277:         if ($cell->getValue() instanceof RichText) {",
          "1279:         } else {",
          "1280:             $origData = $this->preCalculateFormulas ? $cell->getCalculatedValue() : $cell->getValue();",
          "1281:             $formatCode = $worksheet->getParentOrThrow()->getCellXfByIndex($cell->getXfIndex())->getNumberFormat()->getFormatCode();",
          "",
          "[Removed Lines]",
          "1278:             $this->generateRowCellDataValueRich($cell, $cellData);",
          "",
          "[Added Lines]",
          "1276:         return nl2br($cellData);",
          "1282:             $cellData .= $this->generateRowCellDataValueRich($cell->getValue());",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1703:     {",
          "1704:         $result = '';",
          "1705:         if (!$this->isPdf && isset($worksheet->getComments()[$coordinate])) {",
          "1708:             if ($sanitizedString !== '') {",
          "1709:                 $result .= '<a class=\"comment-indicator\"></a>';",
          "1711:                 $result .= PHP_EOL;",
          "1712:             }",
          "1713:         }",
          "",
          "[Removed Lines]",
          "1706:             $sanitizer = new AntiXSS();",
          "1707:             $sanitizedString = $sanitizer->xss_clean($worksheet->getComment($coordinate)->getText()->getPlainText());",
          "1710:                 $result .= '<div class=\"comment\">' . nl2br($sanitizedString) . '</div>';",
          "",
          "[Added Lines]",
          "1710:             $sanitizedString = $this->generateRowCellDataValueRich($worksheet->getComment($coordinate)->getText());",
          "1713:                 $result .= '<div class=\"comment\">' . $sanitizedString . '</div>';",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php||tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php -> tests/PhpSpreadsheetTests/Writer/Html/HtmlCommentsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: use PhpOffice\\PhpSpreadsheet\\RichText\\RichText;",
          "8: use PhpOffice\\PhpSpreadsheet\\Spreadsheet;",
          "9: use PhpOffice\\PhpSpreadsheetTests\\Functional;",
          "11: class HtmlCommentsTest extends Functional\\AbstractFunctional",
          "12: {",
          "15:     public static function providerCommentRichText(): array",
          "16:     {",
          "17:         $valueSingle = 'I am comment.';",
          "",
          "[Removed Lines]",
          "13:     private Spreadsheet $spreadsheet;",
          "",
          "[Added Lines]",
          "9: use PhpOffice\\PhpSpreadsheet\\Writer\\Html;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         $font->setBold(true);",
          "41:         $richMultiMixed->createText(PHP_EOL . 'comment!');",
          "43:         return [",
          "49:         ];",
          "50:     }",
          "56:     {",
          "62:             ->getComment('A1')",
          "63:             ->setText($richText);",
          "67:         $actual = $reloadedSpreadsheet->getActiveSheet()->getComment('A1')->getText()->getPlainText();",
          "68:         self::assertSame($richText->getPlainText(), $actual);",
          "69:     }",
          "70: }",
          "",
          "[Removed Lines]",
          "44:             'single line plain text' => [$plainSingle],",
          "45:             'multi-line plain text' => [$plainMulti],",
          "46:             'single line simple rich text' => [$richSingle],",
          "47:             'multi-line simple rich text' => [$richMultiSimple],",
          "48:             'multi-line mixed rich text' => [$richMultiMixed],",
          "55:     public function testComments(RichText $richText): void",
          "57:         $this->spreadsheet = new Spreadsheet();",
          "59:         $this->spreadsheet->getActiveSheet()->getCell('A1')->setValue('Comment');",
          "61:         $this->spreadsheet->getActiveSheet()",
          "65:         $reloadedSpreadsheet = $this->writeAndReload($this->spreadsheet, 'Html');",
          "",
          "[Added Lines]",
          "42:         $richMultiMixed = new RichText();",
          "43:         $richMultiMixed->createText('I am' . PHP_EOL);",
          "44:         $font = $richMultiMixed->createTextRun('multi-line')->getFont();",
          "45:         self::assertNotNull($font);",
          "46:         $font->setBold(true);",
          "47:         $richMultiMixed->createText(PHP_EOL . 'comment!');",
          "49:         $scriptTextSingle = 'I am <script>alert(\"Hello\")</script>';",
          "50:         $scriptSingle = new RichText();",
          "51:         $scriptSingle->createText($scriptTextSingle);",
          "54:             'single line plain text' => [$plainSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
          "55:                 . 'I am comment.</div>' . PHP_EOL",
          "56:                 . 'Comment</td>'],",
          "57:             'multi-line plain text' => [$plainMulti, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
          "58:                 . 'I am <br />' . PHP_EOL",
          "59:                 . 'multi-line<br />' . PHP_EOL",
          "60:                 . 'comment.</div>' . PHP_EOL",
          "61:                 . 'Comment</td>'],",
          "62:             'single line simple rich text' => [$richSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
          "63:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">I am comment.</span></div>\" . PHP_EOL",
          "64:                 . 'Comment</td>'],",
          "65:             'multi-line simple rich text' => [$richMultiSimple, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
          "66:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">I am <br />\" . PHP_EOL",
          "67:                 . 'multi-line<br />' . PHP_EOL",
          "68:                 . 'comment.</span></div>' . PHP_EOL",
          "69:                 . 'Comment</td>'],",
          "70:             'multi-line mixed rich text' => [$richMultiMixed, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">I am<br />' . PHP_EOL",
          "71:                 . \"<span style=\\\"font-weight:bold; color:#000000; font-family:'Calibri'; font-size:11pt\\\">multi-line</span><br />\" . PHP_EOL",
          "72:                 . 'comment!</div>' . PHP_EOL",
          "73:                 . 'Comment</td>'],",
          "74:             'script single' => [$scriptSingle, '<td class=\"column0 style0 s\"><a class=\"comment-indicator\"></a><div class=\"comment\">'",
          "75:                 . 'I am &lt;script&gt;alert(&quot;Hello&quot;)&lt;/script&gt;</div>' . PHP_EOL",
          "76:                 . 'Comment</td>'],",
          "83:     public function testComments(RichText $richText, string $expected): void",
          "85:         $spreadsheet = new Spreadsheet();",
          "87:         $spreadsheet->getActiveSheet()->getCell('A1')->setValue('Comment');",
          "89:         $spreadsheet->getActiveSheet()",
          "92:         $writer = new Html($spreadsheet);",
          "93:         $output = $writer->generateHtmlAll();",
          "94:         self::assertStringContainsString($expected, $output);",
          "96:         $reloadedSpreadsheet = $this->writeAndReload($spreadsheet, 'Html');",
          "97:         $spreadsheet->disconnectWorksheets();",
          "101:         $reloadedSpreadsheet->disconnectWorksheets();",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php -> tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     {",
          "16:         return [",
          "17:             'basic text no problem' => ['Hello, I am safely viewing your site', 'Hello, I am safely viewing your site'],",
          "27:         ];",
          "28:     }",
          "",
          "[Removed Lines]",
          "18:             'link no problem' => [\"<a href='Visit Google'>Google is here</a>\", \"<a href='Visit Google'>Google is here</a>\"],",
          "19:             'script tag' => [\"Hello, I am trying to <script>alert('Hack');</script> your site\", 'Hello, I am trying to  your site'],",
          "20:             'javascript tag no hex' => [\"<a href='javascript:alert(1)'>CLICK</a>\", \"<a href='(1)'>CLICK</a>\"],",
          "21:             'javascript tag' => [\"<a href='&#x2000;javascript:alert(1)'>CLICK</a>\", \"<a href=' (1)'>CLICK</a>\"],",
          "22:             'with unicode' => ['<a href=\"\\\\u0001java\\\\u0003script:alert(1)\">CLICK<a>', '<a href=\"(1)\">CLICK<a>'],",
          "23:             'inline css' => ['<li style=\"list-style-image: url(javascript:alert(0))\">', '<li >'],",
          "24:             'char value chevron' => [\"\\x3cscript src=http://www.example.com/malicious-code.js\\x3e\\x3c/script\\x3e\"],",
          "25:             'hexadecimal html' => ['<IMG SRC=&#106&#x61&#x76&#x61&#x73&#109&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>', '<IMG >'],",
          "26:             'iframe' => ['<iframe width=\"560\" onclick=\"alert(\\'xss\\')\" height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>', '&lt;iframe width=\"560\"  height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;'],",
          "",
          "[Added Lines]",
          "18:             'link eliminated' => [\"<a href='Visit Google'>Google is here</a>\", \"&lt;a href='Visit Google'&gt;Google is here&lt;/a&gt;\"],",
          "19:             'script tag' => [\"Hello, I am trying to <script>alert('Hack');</script> your site\", \"Hello, I am trying to &lt;script&gt;alert('Hack');&lt;/script&gt; your site\"],",
          "20:             'script tag with quotes' => ['Hello, I am trying to <script>alert(\"Hack\");</script> your site', 'Hello, I am trying to &lt;script&gt;alert(&quot;Hack&quot;);&lt;/script&gt; your site'],",
          "21:             'javascript tag no hex' => [\"<a href='javascript:alert(1)'>CLICK</a>\", \"&lt;a href='javascript:alert(1)'&gt;CLICK&lt;/a&gt;\"],",
          "22:             'javascript tag' => [\"<a href='&#x2000;javascript:alert(1)'>CLICK</a>\", \"&lt;a href='&amp;#x2000;javascript:alert(1)'&gt;CLICK&lt;/a&gt;\"],",
          "23:             'with unicode' => ['<a href=\"\\\\u0001java\\\\u0003script:alert(1)\">CLICK</a>', '&lt;a href=&quot;\\\\u0001java\\\\u0003script:alert(1)&quot;&gt;CLICK&lt;/a&gt;'],",
          "24:             'inline css' => ['<li style=\"list-style-image: url(javascript:alert(0))\">', '&lt;li style=&quot;list-style-image: url(javascript:alert(0))&quot;&gt;'],",
          "25:             'char value chevron' => [\"\\x3cscript src=http://www.example.com/malicious-code.js\\x3e\\x3c/script\\x3e\", '&lt;script src=http://www.example.com/malicious-code.js&gt;&lt;/script&gt;'],",
          "26:             'hexadecimal html' => ['<IMG SRC=&#106&#x61&#x76&#x61&#x73&#109&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>', '&lt;IMG SRC=&amp;#106&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#109&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;'],",
          "27:             'iframe' => ['<iframe width=\"560\" onclick=\"alert(\\'xss\\')\" height=\"315\" src=\"https://www.youtube.com/embed/whatever?rel=0&controls=0&showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>', '&lt;iframe width=&quot;560&quot; onclick=&quot;alert(\\'xss\\')&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/whatever?rel=0&amp;controls=0&amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;'],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9ac138300ae75e1bba1eaa981e5666d73b26835",
      "candidate_info": {
        "commit_hash": "a9ac138300ae75e1bba1eaa981e5666d73b26835",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/a9ac138300ae75e1bba1eaa981e5666d73b26835",
        "files": [
          "src/PhpSpreadsheet/Writer/Html.php"
        ],
        "message": "Migration Aid\n\nProvide a means for potentially affected users to test if new logic is in effect so that they can update code beforehand.",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PHPOffice/PhpSpreadsheet/pull/3957"
        ],
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     private const DEFAULT_CELL_WIDTH_PIXELS = 56;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     public const COMMENT_HTML_TAGS_PLAINTEXT = true;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f20688c179b6f79ebba4ef3665f1d78b81d960e5",
      "candidate_info": {
        "commit_hash": "f20688c179b6f79ebba4ef3665f1d78b81d960e5",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/f20688c179b6f79ebba4ef3665f1d78b81d960e5",
        "files": [
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ],
        "message": "Typo In Previous PR",
        "before_after_code_files": [
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PHPOffice/PhpSpreadsheet/pull/3957"
        ],
        "olp_code_files": {
          "patch": [
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ],
          "candidate": [
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php -> tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:         $writer = new Html($spreadsheet);",
          "73:         $verify = $writer->generateHtmlAll();",
          "76:         self::assertStringContainsString($expected, $verify);",
          "77:         $spreadsheet->disconnectWorksheets();",
          "78:     }",
          "",
          "[Removed Lines]",
          "75:         self::assertStringNotContainsString($expected, $used);",
          "",
          "[Added Lines]",
          "75:         self::assertStringNotContainsString($used, $verify);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331",
      "candidate_info": {
        "commit_hash": "7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331",
        "files": [
          "CHANGELOG.md",
          "src/PhpSpreadsheet/Reader/Security/XmlScanner.php",
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php",
          "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php",
          "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
          "tests/data/Reader/Xml/XEETestInvalidUTF-7-single-quote.xml",
          "tests/data/Reader/Xml/XEETestValidUTF-8-single-quote.xml"
        ],
        "message": "Backport Security Patches\n\n2 security patches already applied in Release 2 need to be backported for Release 1.",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Reader/Security/XmlScanner.php||src/PhpSpreadsheet/Reader/Security/XmlScanner.php",
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php||tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php",
          "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php||tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php",
          "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php||tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Reader/Security/XmlScanner.php||src/PhpSpreadsheet/Reader/Security/XmlScanner.php": [
          "File: src/PhpSpreadsheet/Reader/Security/XmlScanner.php -> src/PhpSpreadsheet/Reader/Security/XmlScanner.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     private function toUtf8($xml)",
          "115:     {",
          "120:         if ($charset !== 'UTF-8') {",
          "121:             $xml = self::forceString(mb_convert_encoding($xml, 'UTF-8', $charset));",
          "125:             if ($charset !== 'UTF-8') {",
          "126:                 throw new Reader\\Exception('Suspicious Double-encoded XML, spreadsheet file load() aborted to prevent XXE/XEE attacks');",
          "127:             }",
          "",
          "[Removed Lines]",
          "116:         $pattern = '/encoding=\"(.*?)\"/';",
          "117:         $result = preg_match($pattern, $xml, $matches);",
          "118:         $charset = strtoupper($result ? $matches[1] : 'UTF-8');",
          "123:             $result = preg_match($pattern, $xml, $matches);",
          "124:             $charset = strtoupper($result ? $matches[1] : 'UTF-8');",
          "",
          "[Added Lines]",
          "116:         $charset = $this->findCharSet($xml);",
          "120:             $charset = $this->findCharSet($xml);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:         return $xml;",
          "131:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     private function findCharSet(string $xml): string",
          "130:     {",
          "131:         $patterns = [",
          "132:             '/encoding\\\\s*=\\\\s*\"([^\"]*]?)\"/',",
          "133:             \"/encoding\\\\s*=\\\\s*'([^']*?)'/\",",
          "134:         ];",
          "136:         foreach ($patterns as $pattern) {",
          "137:             if (preg_match($pattern, $xml, $matches)) {",
          "138:                 return strtoupper($matches[1]);",
          "139:             }",
          "140:         }",
          "142:         return 'UTF-8';",
          "143:     }",
          "",
          "---------------"
        ],
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1069:         }",
          "1071:         $css['color'] = '#' . $font->getColor()->getRGB();",
          "1073:         $css['font-size'] = $font->getSize() . 'pt';",
          "1075:         return $css;",
          "",
          "[Removed Lines]",
          "1072:         $css['font-family'] = '\\'' . $font->getName() . '\\'';",
          "",
          "[Added Lines]",
          "1072:         $css['font-family'] = '\\'' . htmlspecialchars((string) $font->getName(), ENT_QUOTES) . '\\'';",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php||tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php": [
          "File: tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php -> tests/PhpSpreadsheetTests/Calculation/Functions/LookupRef/RowOnSpreadsheetTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         }",
          "35:         $result = $sheet->getCell('B3')->getCalculatedValue();",
          "37:     }",
          "39:     public static function providerROWOnSpreadsheet(): array",
          "",
          "[Removed Lines]",
          "36:         self::assertSame($expectedResult, $result);",
          "",
          "[Added Lines]",
          "36:         self::assertEquals($expectedResult, $result);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:         $sheet1->getCell('B3')->setValue('=ROW(newnr)');",
          "53:         $result = $sheet1->getCell('B3')->getCalculatedValue();",
          "56:         $sheet->getCell('B3')->setValue('=ROW(newnr)');",
          "57:         $result = $sheet->getCell('B3')->getCalculatedValue();",
          "",
          "[Removed Lines]",
          "54:         self::assertSame(5, $result);",
          "",
          "[Added Lines]",
          "54:         self::assertEquals(5, $result);",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php||tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php": [
          "File: tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php -> tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/AccountingTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:             ['[$$-en-CA]#,##0.00;([$$-en-CA]#,##0.00)', '$', 'en-ca'],",
          "67:             [\"#,##0.00\\u{a0}[\\$\\$-fr-CA];(#,##0.00\\u{a0}[\\$\\$-fr-CA])\", '$', 'fr-ca'],",
          "68:             ['[$\u00a5-ja-JP]#,##0;([$\u00a5-ja-JP]#,##0)', '\u00a5', 'ja-JP'], // No decimals",
          "70:         ];",
          "71:     }",
          "",
          "[Removed Lines]",
          "69:             [\"#,##0.000\\u{a0}[\\$\u062f.\u0628\u200e-ar-BH]\", '\u062f.\u0628\u200e', 'ar-BH'],  // 3 decimals",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:             ['[$$-en-CA]#,##0;([$$-en-CA]#,##0)', '$', 'en-ca'],",
          "99:             [\"#,##0\\u{a0}[\\$\\$-fr-CA];(#,##0\\u{a0}[\\$\\$-fr-CA])\", '$', 'fr-ca'],",
          "100:             ['[$\u00a5-ja-JP]#,##0;([$\u00a5-ja-JP]#,##0)', '\u00a5', 'ja-JP'], // No decimals to truncate",
          "102:         ];",
          "103:     }",
          "",
          "[Removed Lines]",
          "101:             [\"#,##0\\u{a0}[\\$\u062f.\u0628\u200e-ar-BH]\", '\u062f.\u0628\u200e', 'ar-BH'],  // 3 decimals truncated to none",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php||tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php": [
          "File: tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php -> tests/PhpSpreadsheetTests/Style/NumberFormat/Wizard/CurrencyTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:             ['[$$-en-CA]#,##0.00', '$', 'en-ca'],",
          "66:             [\"#,##0.00\\u{a0}[\\$\\$-fr-CA]\", '$', 'fr-ca'],   // Trailing currency code",
          "67:             ['[$\u00a5-ja-JP]#,##0', '\u00a5', 'ja-JP'], // No decimals",
          "69:         ];",
          "70:     }",
          "",
          "[Removed Lines]",
          "68:             [\"#,##0.000\\u{a0}[\\$\u062f.\u0628\u200e-ar-BH]\", '\u062f.\u0628\u200e', 'ar-BH'],  // 3 decimals",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:             ['[$$-en-CA]#,##0', '$', 'en-ca'],",
          "98:             [\"#,##0\\u{a0}[\\$\\$-fr-CA]\", '$', 'fr-ca'],   // Trailing currency code",
          "99:             ['[$\u00a5-ja-JP]#,##0', '\u00a5', 'ja-JP'], // No decimals to truncate",
          "101:         ];",
          "102:     }",
          "",
          "[Removed Lines]",
          "100:             [\"#,##0\\u{a0}[\\$\u062f.\u0628\u200e-ar-BH]\", '\u062f.\u0628\u200e', 'ar-BH'],  // 3 decimals truncated to none",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php||tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php -> tests/PhpSpreadsheetTests/Writer/Html/XssVulnerabilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: use PhpOffice\\PhpSpreadsheet\\RichText\\RichText;",
          "7: use PhpOffice\\PhpSpreadsheet\\Shared\\File;",
          "8: use PhpOffice\\PhpSpreadsheet\\Spreadsheet;",
          "9: use PhpOffice\\PhpSpreadsheetTests\\Functional;",
          "11: class XssVulnerabilityTest extends Functional\\AbstractFunctional",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: use PhpOffice\\PhpSpreadsheet\\Writer\\Html;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:         self::assertStringNotContainsString($xssTextString, $verify);",
          "89:     }",
          "90: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     public function testXssInFontName(): void",
          "93:     {",
          "94:         $spreadsheet = new Spreadsheet();",
          "95:         $sheet = $spreadsheet->getActiveSheet();",
          "96:         $sheet->getCell('A1')->setValue('here');",
          "97:         $used = 'Calibri</style><script type=\"text/javascript\">alert(\"hello\");</script><style type=\"text/css\">';",
          "98:         $expected = \"font-family:'Calibri&lt;/style&gt;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;hello&quot;);&lt;/script&gt;&lt;style type=&quot;text/css&quot;&gt;'\";",
          "99:         $sheet->getStyle('A1')->getFont()->setName($used);",
          "101:         $writer = new Html($spreadsheet);",
          "102:         $verify = $writer->generateHtmlAll();",
          "104:         self::assertStringNotContainsString($used, $verify);",
          "105:         self::assertStringContainsString($expected, $verify);",
          "106:         $spreadsheet->disconnectWorksheets();",
          "107:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}