{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "35e1487e57cc43bba5e592dfcb4c41a2fb1e8a8b",
      "candidate_info": {
        "commit_hash": "35e1487e57cc43bba5e592dfcb4c41a2fb1e8a8b",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/35e1487e57cc43bba5e592dfcb4c41a2fb1e8a8b",
        "files": [
          "kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ],
        "message": "KYLIN-5285 the number of filePartitions of FileScanRDD when used shardby\n\nKYLIN-5285 the number of filePartitions of FileScanRDD when used shardby",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala||kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala||kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala": [
          "File: kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala -> kylin-spark-project/kylin-spark-common/src/main/spark31/org/apache/spark/sql/execution/KylinFileSourceScanExec.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:         f => FilePruner.getPartitionId(new Path(f.filePath))",
          "163:       }",
          "169:     if (SoftAffinityManager.usingSoftAffinity) {",
          "170:       val start = System.currentTimeMillis()",
          "",
          "[Removed Lines]",
          "165:     val filePartitions = Seq.tabulate(shardSpec.numShards) { shardId =>",
          "166:       FilePartition(shardId, filesToPartitionId.getOrElse(shardId, Nil).toArray)",
          "167:     }",
          "",
          "[Added Lines]",
          "165:     var shardId = 0",
          "166:     val filePartitions = new ArrayBuffer[FilePartition]()",
          "167:     filesToPartitionId.foreach(t => {",
          "168:       filePartitions += FilePartition(shardId, t._2.toArray)",
          "169:       shardId += 1",
          "170:     })",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:       val worker = new JobWorker(application, appArgs, eventLoop)",
          "36:       val monitor = new JobMonitor(eventLoop)",
          "37:       val workspace = new JobWorkSpace(eventLoop, monitor, worker)",
          "47:     } catch {",
          "48:       case throwable: Throwable =>",
          "49:         logError(\"Error occurred when init job workspace.\", throwable)",
          "",
          "[Removed Lines]",
          "39:       if (System.getProperty(\"spark.master\").equals(\"yarn\") && System.getProperty(\"spark.submit.deployMode\").equals(\"cluster\")) {",
          "40:         val res = workspace.run()",
          "41:         if (res != 0) {",
          "42:           System.exit(res)",
          "43:         }",
          "44:       } else {",
          "45:         System.exit(workspace.run())",
          "46:       }",
          "",
          "[Added Lines]",
          "38:       workspace.run()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d1796ea4b5f9b41db90bacf8b9fb5e51ee824cf",
      "candidate_info": {
        "commit_hash": "2d1796ea4b5f9b41db90bacf8b9fb5e51ee824cf",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/2d1796ea4b5f9b41db90bacf8b9fb5e51ee824cf",
        "files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ],
        "message": "KYLIN-5008: Status code is not handled correctly by the Kylin job.",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:       val monitor = new JobMonitor(eventLoop)",
          "37:       val workspace = new JobWorkSpace(eventLoop, monitor, worker)",
          "38:       if (System.getProperty(\"spark.master\").equals(\"yarn\") && System.getProperty(\"spark.submit.deployMode\").equals(\"cluster\")) {",
          "40:       } else {",
          "41:         System.exit(workspace.run())",
          "42:       }",
          "",
          "[Removed Lines]",
          "39:         workspace.run()",
          "",
          "[Added Lines]",
          "39:         val res = workspace.run()",
          "40:         if (res != 0) {",
          "41:           System.exit(res)",
          "42:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e0c717310279ede338e5bc41ec4cc43eaad3461",
      "candidate_info": {
        "commit_hash": "8e0c717310279ede338e5bc41ec4cc43eaad3461",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/8e0c717310279ede338e5bc41ec4cc43eaad3461",
        "files": [
          "core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java"
        ],
        "message": "[tyro] fix typo in CuboidCLI",
        "before_after_code_files": [
          "core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java||core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java||core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java": [
          "File: core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java -> core-cube/src/main/java/org/apache/kylin/cube/cuboid/CuboidCLI.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         cuboidQueue.push(baseCuboid);",
          "53:         while (!cuboidQueue.isEmpty()) {",
          "54:             long cuboid = cuboidQueue.pop();",
          "57:                 boolean notfound = cuboidSet.add(sc);",
          "58:                 if (!notfound) {",
          "59:                     throw new IllegalStateException(\"Find duplicate spanning cuboid \" + sc + \" from cuboid \" + cuboid);",
          "",
          "[Removed Lines]",
          "55:             Collection<Long> spnanningCuboids = scheduler.getSpanningCuboid(cuboid);",
          "56:             for (Long sc : spnanningCuboids) {",
          "",
          "[Added Lines]",
          "55:             Collection<Long> spanningCuboids = scheduler.getSpanningCuboid(cuboid);",
          "56:             for (Long sc : spanningCuboids) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:             allLevelCounts[i] = currentQueue.size();",
          "147:             while (!currentQueue.isEmpty()) {",
          "148:                 long cuboid = currentQueue.pop();",
          "152:             }",
          "153:             currentQueue = nextQueue;",
          "154:             nextQueue = new LinkedList<Long>();",
          "",
          "[Removed Lines]",
          "149:                 Collection<Long> spnanningCuboids = scheduler.getSpanningCuboid(cuboid);",
          "151:                 nextQueue.addAll(spnanningCuboids);",
          "",
          "[Added Lines]",
          "149:                 Collection<Long> spanningCuboids = scheduler.getSpanningCuboid(cuboid);",
          "151:                 nextQueue.addAll(spanningCuboids);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45341307d573c181fa343a34e95fc76b89a5e0ba",
      "candidate_info": {
        "commit_hash": "45341307d573c181fa343a34e95fc76b89a5e0ba",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/45341307d573c181fa343a34e95fc76b89a5e0ba",
        "files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java",
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java",
          "core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java",
          "core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java",
          "core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java",
          "core-metadata/src/test/java/org/apache/kylin/source/H2Database.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java",
          "kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java",
          "query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java",
          "tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java",
          "tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java"
        ],
        "message": "vuln-fix: Temporary File Information Disclosure\n\nThis fixes temporary file information disclosure vulnerability due to the use\nof the vulnerable `File.createTempFile()` method. The vulnerability is fixed by\nusing the `Files.createTempFile()` method which sets the correct posix permissions.\n\nWeakness: CWE-377: Insecure Temporary File\nSeverity: Medium\nCVSSS: 5.5\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.SecureTempFileCreation)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/18\n\n\nCo-authored-by: Moderne <team@moderne.io>",
        "before_after_code_files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java",
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java||core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java||core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java",
          "core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java||core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java",
          "core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java||core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java",
          "core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java||core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java",
          "core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java||core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java",
          "core-metadata/src/test/java/org/apache/kylin/source/H2Database.java||core-metadata/src/test/java/org/apache/kylin/source/H2Database.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java",
          "kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java||kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java",
          "query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java||query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java",
          "tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java||tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java",
          "tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java||tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java": [
          "File: build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java -> build-engine/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import java.io.File;",
          "30: import java.io.IOException;",
          "31: import java.io.InputStream;",
          "32: import java.util.HashMap;",
          "33: import java.util.LinkedHashSet;",
          "34: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "596:     protected void dumpKylinPropsAndMetadata(String prj, Set<String> dumpList, KylinConfig kylinConfig,",
          "597:             Configuration conf) throws IOException {",
          "599:         FileUtils.forceDelete(tmp); // we need a directory, so delete the file first",
          "601:         File metaDir = new File(tmp, \"meta\");",
          "",
          "[Removed Lines]",
          "598:         File tmp = File.createTempFile(\"kylin_job_meta\", \"\");",
          "",
          "[Added Lines]",
          "599:         File tmp = Files.createTempFile(\"kylin_job_meta\", \"\").toFile();",
          "",
          "---------------"
        ],
        "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java": [
          "File: build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java -> build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.io.OutputStreamWriter;",
          "27: import java.io.PrintWriter;",
          "28: import java.nio.charset.StandardCharsets;",
          "29: import java.text.DecimalFormat;",
          "30: import java.text.DecimalFormatSymbols;",
          "31: import java.util.ArrayList;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:     }",
          "158:     private File writeTmpSeqFile(InputStream inputStream) throws IOException {",
          "160:         FileOutputStream out = null;",
          "161:         try {",
          "162:             out = new FileOutputStream(tempFile);",
          "",
          "[Removed Lines]",
          "159:         File tempFile = File.createTempFile(\"kylin_stats_tmp\", \".seq\");",
          "",
          "[Added Lines]",
          "160:         File tempFile = Files.createTempFile(\"kylin_stats_tmp\", \".seq\").toFile();",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java||core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java -> core-common/src/main/java/org/apache/kylin/common/persistence/AutoDeleteDirectory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.Closeable;",
          "22: import java.io.File;",
          "23: import java.io.IOException;",
          "25: public class AutoDeleteDirectory implements Closeable {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     }",
          "32:     public AutoDeleteDirectory(String prefix, String suffix) {",
          "33:         try {",
          "35:             org.apache.commons.io.FileUtils.forceDelete(tempFile); // we need a directory, so delete the file first",
          "36:             tempFile.mkdirs();",
          "37:         } catch (IOException e) {",
          "",
          "[Removed Lines]",
          "34:             tempFile = File.createTempFile(prefix, suffix);",
          "",
          "[Added Lines]",
          "35:             tempFile = Files.createTempFile(prefix, suffix).toFile();",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java||core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java -> core-common/src/main/java/org/apache/kylin/common/persistence/FileResourceStore.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import java.io.FileNotFoundException;",
          "25: import java.io.FileOutputStream;",
          "26: import java.io.IOException;",
          "27: import java.util.Collection;",
          "29: import org.apache.commons.io.FileUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:         if (--failPutResourceCountDown == 0)",
          "131:             throw new IOException(\"for test\");",
          "134:         try {",
          "136:             try (FileOutputStream out = new FileOutputStream(tmp); DataOutputStream dout = new DataOutputStream(out)) {",
          "",
          "[Removed Lines]",
          "133:         File tmp = File.createTempFile(\"kylin-fileresource-\", \".tmp\");",
          "",
          "[Added Lines]",
          "134:         File tmp = Files.createTempFile(\"kylin-fileresource-\", \".tmp\").toFile();",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java||core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java -> core-common/src/main/java/org/apache/kylin/common/persistence/ResourceStore.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import java.io.File;",
          "25: import java.io.IOException;",
          "26: import java.io.InputStream;",
          "27: import java.util.ArrayList;",
          "28: import java.util.Collection;",
          "29: import java.util.LinkedHashMap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "787:             boolean loadContent, Visitor visitor) throws IOException;",
          "789:     public static String dumpResources(KylinConfig kylinConfig, Collection<String> dumpList) throws IOException {",
          "791:         FileUtils.forceDelete(tmp); // we need a directory, so delete the file first",
          "793:         File metaDir = new File(tmp, \"meta\");",
          "",
          "[Removed Lines]",
          "790:         File tmp = File.createTempFile(\"kylin_job_meta\", \"\");",
          "",
          "[Added Lines]",
          "791:         File tmp = Files.createTempFile(\"kylin_job_meta\", \"\").toFile();",
          "",
          "---------------"
        ],
        "core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java||core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java": [
          "File: core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java -> core-common/src/test/java/org/apache/kylin/common/util/SSHClientTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.io.File;",
          "24: import java.io.IOException;",
          "25: import java.nio.charset.Charset;",
          "27: import org.apache.commons.io.FileUtils;",
          "28: import org.apache.kylin.common.KylinConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:             return;",
          "83:         SSHClient ssh = new SSHClient(this.hostname, this.port, this.username, this.password);",
          "85:         tmpFile.deleteOnExit();",
          "86:         FileUtils.write(tmpFile, \"test_scp\", Charset.defaultCharset());",
          "87:         ssh.scpFileToRemote(tmpFile.getAbsolutePath(), \"/tmp\");",
          "",
          "[Removed Lines]",
          "84:         File tmpFile = File.createTempFile(\"test_scp\", \"\", new File(\"/tmp\"));",
          "",
          "[Added Lines]",
          "85:         File tmpFile = Files.createTempFile(new File(\"/tmp\").toPath(), \"test_scp\", \"\").toFile();",
          "",
          "---------------"
        ],
        "core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java||core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java": [
          "File: core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java -> core-cube/src/main/java/org/apache/kylin/gridtable/GTAggregateScanner.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: import java.io.InputStream;",
          "31: import java.io.OutputStream;",
          "32: import java.nio.ByteBuffer;",
          "33: import java.util.Arrays;",
          "34: import java.util.Comparator;",
          "35: import java.util.Iterator;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "666:             DataInputStream dis;",
          "668:             public Dump(SortedMap<byte[], MeasureAggregator[]> buffMap, long estMemSize) throws IOException {",
          "670:                 this.buffMap = buffMap;",
          "671:                 this.estMemSize = estMemSize;",
          "672:             }",
          "",
          "[Removed Lines]",
          "669:                 this.dumpedFile = File.createTempFile(\"KYLIN_SPILL_\", \".tmp\");",
          "",
          "[Added Lines]",
          "670:                 this.dumpedFile = Files.createTempFile(\"KYLIN_SPILL_\", \".tmp\").toFile();",
          "",
          "---------------"
        ],
        "core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java||core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java": [
          "File: core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java -> core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import java.io.OutputStreamWriter;",
          "28: import java.io.Writer;",
          "29: import java.nio.charset.StandardCharsets;",
          "30: import java.util.Collections;",
          "31: import java.util.Comparator;",
          "32: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:         ZipfDistribution zipf = new ZipfDistribution(KEY_SPACE, 0.5);",
          "77:         int keyIndex;",
          "81:         if (tempFile.exists())",
          "82:             FileUtils.forceDelete(tempFile);",
          "",
          "[Removed Lines]",
          "79:         File tempFile = File.createTempFile(\"ZipfDistribution\", \".txt\");",
          "",
          "[Added Lines]",
          "80:         File tempFile = Files.createTempFile(\"ZipfDistribution\", \".txt\").toFile();",
          "",
          "---------------"
        ],
        "core-metadata/src/test/java/org/apache/kylin/source/H2Database.java||core-metadata/src/test/java/org/apache/kylin/source/H2Database.java": [
          "File: core-metadata/src/test/java/org/apache/kylin/source/H2Database.java -> core-metadata/src/test/java/org/apache/kylin/source/H2Database.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import java.io.FileOutputStream;",
          "30: import java.io.IOException;",
          "31: import java.io.InputStream;",
          "32: import java.sql.Connection;",
          "33: import java.sql.SQLException;",
          "34: import java.sql.Statement;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:         File tempFile = null;",
          "95:         try {",
          "97:             FileOutputStream tempFileStream = new FileOutputStream(tempFile);",
          "98:             String path = path(tableDesc);",
          "99:             InputStream csvStream = metaMgr.getStore().getResource(path).content();",
          "",
          "[Removed Lines]",
          "96:             tempFile = File.createTempFile(\"tmp_h2\", \".csv\");",
          "",
          "[Added Lines]",
          "97:             tempFile = Files.createTempFile(\"tmp_h2\", \".csv\").toFile();",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergeStatisticsStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: import java.io.FileOutputStream;",
          "53: import java.io.IOException;",
          "54: import java.io.InputStream;",
          "55: import java.util.List;",
          "56: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:                 File tempFile = null;",
          "95:                 FileOutputStream tempFileStream = null;",
          "96:                 try {",
          "98:                     tempFileStream = new FileOutputStream(tempFile);",
          "99:                     org.apache.commons.io.IOUtils.copy(is, tempFileStream);",
          "100:                 } finally {",
          "",
          "[Removed Lines]",
          "97:                     tempFile = File.createTempFile(segmentId, \".seq\");",
          "",
          "[Added Lines]",
          "98:                     tempFile = Files.createTempFile(segmentId, \".seq\").toFile();",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java||kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java -> kylin-spark-project/kylin-spark-engine/src/test/java/org/apache/kylin/engine/spark/NSparkBasicTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import java.io.File;",
          "32: import java.io.IOException;",
          "33: import java.nio.charset.Charset;",
          "34: import java.util.List;",
          "36: @Ignore(\"convenient trial tool for dev\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     @Test",
          "40:     public void testToRdd() throws IOException {",
          "41:         final String dataJson = \"0,1,2,1000\\n0,1,2,1\\n3,4,5,2\";",
          "43:         dataFile.deleteOnExit();",
          "44:         FileUtils.writeStringToFile(dataFile, dataJson, Charset.defaultCharset());",
          "",
          "[Removed Lines]",
          "42:         File dataFile = File.createTempFile(\"tmp\", \".csv\");",
          "",
          "[Added Lines]",
          "43:         File dataFile = Files.createTempFile(\"tmp\", \".csv\").toFile();",
          "",
          "---------------"
        ],
        "query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java||query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java": [
          "File: query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java -> query/src/main/java/org/apache/kylin/query/schema/OLAPSchemaFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.File;",
          "22: import java.io.IOException;",
          "23: import java.util.Collection;",
          "24: import java.util.HashMap;",
          "25: import java.util.Locale;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:             String jsonContent = out.toString();",
          "120:             File file = cachedJsons.get(jsonContent);",
          "121:             if (file == null) {",
          "123:                 file.deleteOnExit();",
          "124:                 FileUtils.writeStringToFile(file, jsonContent);",
          "",
          "[Removed Lines]",
          "122:                 file = File.createTempFile(\"olap_model_\", \".json\");",
          "",
          "[Added Lines]",
          "123:                 file = Files.createTempFile(\"olap_model_\", \".json\").toFile();",
          "",
          "---------------"
        ],
        "tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java||tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java": [
          "File: tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java -> tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.File;",
          "23: import java.io.IOException;",
          "24: import java.nio.charset.Charset;",
          "25: import java.text.SimpleDateFormat;",
          "26: import java.util.Date;",
          "27: import java.util.Locale;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:         if (shouldCompress) {",
          "126:             File tempZipDir = new File(exportDest + packageName + \"/\");",
          "127:             FileUtils.forceMkdir(tempZipDir);",
          "128:             for (File file : exportDir.listFiles()) {",
          "",
          "[Removed Lines]",
          "125:             File tempZipFile = File.createTempFile(packageType + \"_\", \".zip\");",
          "",
          "[Added Lines]",
          "126:             File tempZipFile = Files.createTempFile(packageType + \"_\", \".zip\").toFile();",
          "",
          "---------------"
        ],
        "tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java||tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java": [
          "File: tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java -> tool/src/test/java/org/apache/kylin/tool/KylinConfigCLITest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import java.io.IOException;",
          "26: import java.io.PrintStream;",
          "27: import java.nio.charset.Charset;",
          "29: import org.apache.commons.io.FileUtils;",
          "30: import org.apache.kylin.common.util.LocalFileMetadataTestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import java.nio.file.Files;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     @Test",
          "37:     public void testGetProperty() throws IOException {",
          "38:         PrintStream o = System.out;",
          "40:         PrintStream tmpOut = new PrintStream(new FileOutputStream(f), false, \"UTF-8\");",
          "41:         System.setOut(tmpOut);",
          "42:         KylinConfigCLI.main(new String[] { \"kylin.storage.url\" });",
          "",
          "[Removed Lines]",
          "39:         File f = File.createTempFile(\"cfg\", \".tmp\");",
          "",
          "[Added Lines]",
          "40:         File f = Files.createTempFile(\"cfg\", \".tmp\").toFile();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:     @Test",
          "52:     public void testGetPrefix() throws IOException {",
          "53:         PrintStream o = System.out;",
          "55:         PrintStream tmpOut = new PrintStream(new FileOutputStream(f), false, \"UTF-8\");",
          "56:         System.setOut(tmpOut);",
          "57:         KylinConfigCLI.main(new String[] { \"kylin.cube.engine.\" });",
          "",
          "[Removed Lines]",
          "54:         File f = File.createTempFile(\"cfg\", \".tmp\");",
          "",
          "[Added Lines]",
          "55:         File f = Files.createTempFile(\"cfg\", \".tmp\").toFile();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdd45a616de42bd50c8b5c4d71a29a660d310167",
      "candidate_info": {
        "commit_hash": "fdd45a616de42bd50c8b5c4d71a29a660d310167",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/fdd45a616de42bd50c8b5c4d71a29a660d310167",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
        ],
        "message": "KYLIN-4478 fix unit test\n\n(cherry picked from commit 0884c2759dbcf88f11fe089fbe9a8b57d9c9b5df)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.common.util;",
          "21: import java.nio.charset.StandardCharsets;",
          "22: import org.apache.commons.codec.binary.Base64;",
          "24: import javax.crypto.Cipher;",
          "25: import javax.crypto.spec.SecretKeySpec;",
          "27: public class EncryptUtil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.io.UnsupportedEncodingException;",
          "23: import java.security.InvalidAlgorithmParameterException;",
          "24: import java.security.InvalidKeyException;",
          "25: import java.security.NoSuchAlgorithmException;",
          "30: import javax.crypto.NoSuchPaddingException;",
          "31: import javax.crypto.spec.IvParameterSpec;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     private static byte[] key = { 0x74, 0x68, 0x69, 0x73, 0x49, 0x73, 0x41, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,",
          "32:             0x65, 0x79 };",
          "34:     public static String encrypt(String strToEncrypt) {",
          "35:         if (strToEncrypt == null) {",
          "36:             return null;",
          "37:         }",
          "38:         try {",
          "42:             final String encryptedString = Base64.encodeBase64String(cipher.doFinal(strToEncrypt.getBytes(",
          "43:                 StandardCharsets.UTF_8)));",
          "44:             return encryptedString;",
          "",
          "[Removed Lines]",
          "39:             Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
          "40:             final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
          "41:             cipher.init(Cipher.ENCRYPT_MODE, secretKey);",
          "",
          "[Added Lines]",
          "41:     private static final Cipher getCipher(int cipherMode) throws InvalidAlgorithmParameterException,",
          "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
          "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
          "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
          "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
          "46:         cipher.init(cipherMode, secretKey, ivSpec);",
          "47:         return cipher;",
          "48:     }",
          "55:             Cipher cipher = getCipher(Cipher.ENCRYPT_MODE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:             return null;",
          "53:         }",
          "54:         try {",
          "58:             final String decryptedString = new String(cipher.doFinal(Base64.decodeBase64(strToDecrypt)), StandardCharsets.UTF_8);",
          "59:             return decryptedString;",
          "60:         } catch (Exception e) {",
          "",
          "[Removed Lines]",
          "55:             Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
          "56:             final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
          "57:             cipher.init(Cipher.DECRYPT_MODE, secretKey);",
          "",
          "[Added Lines]",
          "69:             Cipher cipher = getCipher(Cipher.DECRYPT_MODE);",
          "",
          "---------------"
        ],
        "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
          "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     @Test",
          "27:     public void testAESEncrypt(){",
          "28:         String input = \"hello world\";",
          "31:     }",
          "33:     @Test",
          "",
          "[Removed Lines]",
          "29:         String result = EncryptUtil.encrypt(input);",
          "30:         Assert.assertEquals(\"4stv/RRleOtvie/8SLHmXA==\", result);",
          "",
          "[Added Lines]",
          "29:         String result1 = EncryptUtil.encrypt(input);",
          "30:         String decrypt1 = EncryptUtil.decrypt(result1);",
          "31:         Assert.assertEquals(input, decrypt1);",
          "32:         String result2 = EncryptUtil.encrypt(input);",
          "33:         Assert.assertEquals(result2, result1);",
          "35:         input = \"this is a long string #&$\";",
          "36:         result1 = EncryptUtil.encrypt(input);",
          "37:         decrypt1 = EncryptUtil.decrypt(result1);",
          "38:         Assert.assertEquals(input, decrypt1);",
          "39:         result2 = EncryptUtil.encrypt(input);",
          "40:         Assert.assertEquals(result2, result1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}