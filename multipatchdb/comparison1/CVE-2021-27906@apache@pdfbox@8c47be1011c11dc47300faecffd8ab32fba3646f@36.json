{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2bc8c3896630418c1d21b1a3bbf3e6c1e3bc62d9",
      "candidate_info": {
        "commit_hash": "2bc8c3896630418c1d21b1a3bbf3e6c1e3bc62d9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2bc8c3896630418c1d21b1a3bbf3e6c1e3bc62d9",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java"
        ],
        "message": "PDFBOX-4892: add description\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889031 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/EmbeddedFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:             fs.setEmbeddedFile( ef );",
          "98:             fs.setEmbeddedFileUnicode(ef);",
          "101:             PDEmbeddedFilesNameTreeNode treeNode = new PDEmbeddedFilesNameTreeNode();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:             fs.setFileDescription(\"Very interesting file\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8fa7c70056b5d0b6f3d5517f1aefe0e00239b654",
      "candidate_info": {
        "commit_hash": "8fa7c70056b5d0b6f3d5517f1aefe0e00239b654",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8fa7c70056b5d0b6f3d5517f1aefe0e00239b654",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java"
        ],
        "message": "PDFBOX-5080: throw IOException only, as suggested by Hao Zhong\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885546 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java||fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java||fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java -> fontbox/src/main/java/org/apache/fontbox/type1/Type1Parser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     {",
          "74:         if (bytes.length == 0)",
          "75:         {",
          "77:         }",
          "81:         if (bytes.length < 2 || (bytes[0] != '%' && bytes[1] != '!'))",
          "82:         {",
          "84:         }",
          "86:         lexer = new Type1Lexer(bytes);",
          "",
          "[Removed Lines]",
          "76:             throw new IllegalArgumentException(\"byte[] is empty\");",
          "83:             throw new IOException(\"Invalid start of ASCII segment\");",
          "",
          "[Added Lines]",
          "76:             throw new IOException(\"ASCII segment of type 1 font is empty\");",
          "83:             throw new IOException(\"Invalid start of ASCII segment of type 1 font\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a834e5b52e4e4e79c4542e2d7fbad4d4a2b6675",
      "candidate_info": {
        "commit_hash": "5a834e5b52e4e4e79c4542e2d7fbad4d4a2b6675",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5a834e5b52e4e4e79c4542e2d7fbad4d4a2b6675",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890917 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "633:             {",
          "635:                 PDOutlineItem destLastOutlineItem = destOutline.getFirstChild();",
          "637:                 {",
          "639:                 }",
          "640:                 for (PDOutlineItem item : srcOutline.children())",
          "641:                 {",
          "",
          "[Removed Lines]",
          "636:                 while (destLastOutlineItem.getNextSibling() != null)",
          "638:                     destLastOutlineItem = destLastOutlineItem.getNextSibling();",
          "",
          "[Added Lines]",
          "636:                 while (true)",
          "638:                     PDOutlineItem outlineItem = destLastOutlineItem.getNextSibling();",
          "639:                     if (outlineItem == null)",
          "640:                     {",
          "641:                         break;",
          "642:                     }",
          "643:                     destLastOutlineItem = outlineItem;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af83bc97e8c0421b4f818a63d3f8ea5ce91af521",
      "candidate_info": {
        "commit_hash": "af83bc97e8c0421b4f818a63d3f8ea5ce91af521",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/af83bc97e8c0421b4f818a63d3f8ea5ce91af521",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java"
        ],
        "message": "PDFBOX-4892: use shorthand\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884771 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java||pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java||pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java -> pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:                             if (((sub + left) & 1) == 0)",
          "113:                             {",
          "116:                             }",
          "117:                             else",
          "118:                             {",
          "121:                             }",
          "122:                         }",
          "123:                     }",
          "",
          "[Removed Lines]",
          "115:                                 actline[p] = (byte) (actline[p] & ~(1 << bit));",
          "120:                                 actline[p] = (byte) (actline[p] | (1 << bit));",
          "",
          "[Added Lines]",
          "115:                                 actline[p] &= ~(1 << bit);",
          "120:                                 actline[p] |= 1 << bit;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d6114c96ff460158497c623e109d4f2ec9b9326",
      "candidate_info": {
        "commit_hash": "9d6114c96ff460158497c623e109d4f2ec9b9326",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9d6114c96ff460158497c623e109d4f2ec9b9326",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ],
        "message": "PDFBOX-4892: performance improvement, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888367 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:             source.rewind(ENDOBJ.length);",
          "1172:         }",
          "1174:         {",
          "1175:             LOG.warn(\"stream ends with '\" + endStream + \"' instead of 'endstream' at offset \"",
          "1176:                     + source.getPosition());",
          "",
          "[Removed Lines]",
          "1173:         else if (endStream.length() > 9 && isLenient && endStream.substring(0,9).equals(ENDSTREAM_STRING))",
          "",
          "[Added Lines]",
          "1173:         else if (endStream.length() > 9 && isLenient && endStream.startsWith(ENDSTREAM_STRING))",
          "",
          "---------------"
        ]
      }
    }
  ]
}