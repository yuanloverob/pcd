{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f1acbdc0ccdaebfb3be1145b5643fcd53efde508",
      "candidate_info": {
        "commit_hash": "f1acbdc0ccdaebfb3be1145b5643fcd53efde508",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f1acbdc0ccdaebfb3be1145b5643fcd53efde508",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887595 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:             }",
          "184:             else",
          "185:             {",
          "187:                 filters.add(COSName.FLATE_DECODE);",
          "188:                 setFilters(filters);",
          "189:             }",
          "",
          "[Removed Lines]",
          "186:                 filters = new ArrayList<COSName>();",
          "",
          "[Added Lines]",
          "186:                 filters = new ArrayList<COSName>(1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362:         else if (dp instanceof COSArray)",
          "363:         {",
          "364:             COSArray array = (COSArray) dp;",
          "366:             for (int i = 0; i < array.size(); i++)",
          "367:             {",
          "368:                 actuals.add(COSDictionaryMap",
          "",
          "[Removed Lines]",
          "365:             List<Object> actuals = new ArrayList<Object>();",
          "",
          "[Added Lines]",
          "365:             List<Object> actuals = new ArrayList<Object>(array.size());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "466:         else if (dp instanceof COSArray)",
          "467:         {",
          "468:             COSArray array = (COSArray) dp;",
          "470:             for (int i = 0; i < array.size(); i++)",
          "471:             {",
          "472:                 actuals.add(COSDictionaryMap",
          "",
          "[Removed Lines]",
          "469:             List<Object> actuals = new ArrayList<Object>();",
          "",
          "[Added Lines]",
          "469:             List<Object> actuals = new ArrayList<Object>(array.size());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f54e62add4ca75a3a0c72e7279b1544c26b0642b",
      "candidate_info": {
        "commit_hash": "f54e62add4ca75a3a0c72e7279b1544c26b0642b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f54e62add4ca75a3a0c72e7279b1544c26b0642b",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java"
        ],
        "message": "PDFBOX-5228: check length\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891063 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:             this.ulCodePageRange1 = ulCodePageRange1;",
          "89:             this.ulCodePageRange2 = ulCodePageRange2;",
          "90:             this.macStyle = macStyle;",
          "92:             this.parent = parent;",
          "93:         }",
          "",
          "[Removed Lines]",
          "91:             this.panose = panose != null ? new PDPanoseClassification(panose) : null;",
          "",
          "[Added Lines]",
          "91:             this.panose = panose != null && panose.length >= PDPanose.LENGTH ?",
          "92:                     new PDPanoseClassification(panose) : null;",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "854:         {",
          "855:             COSString panose = (COSString)style.getDictionaryObject(COSName.PANOSE);",
          "856:             byte[] bytes = panose.getBytes();",
          "858:         }",
          "859:         return null;",
          "860:     }",
          "",
          "[Removed Lines]",
          "857:             return new PDPanose(bytes);",
          "",
          "[Added Lines]",
          "857:             if (bytes.length >= PDPanose.LENGTH)",
          "858:             {",
          "859:                 return new PDPanose(bytes);",
          "860:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4199e9ace7cd7cfe00a97cf3f31db314edc6bdb",
      "candidate_info": {
        "commit_hash": "d4199e9ace7cd7cfe00a97cf3f31db314edc6bdb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d4199e9ace7cd7cfe00a97cf3f31db314edc6bdb",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java"
        ],
        "message": "PDFBOX-4892: fix typo, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891931 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java -> preflight/src/main/java/org/apache/pdfbox/preflight/annotation/RubberStampAnnotationValidator.java"
        ]
      }
    },
    {
      "candidate_hash": "3a4f692f248872557c374c194d06f06c3dfc7e4b",
      "candidate_info": {
        "commit_hash": "3a4f692f248872557c374c194d06f06c3dfc7e4b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3a4f692f248872557c374c194d06f06c3dfc7e4b",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890722 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "433:         SignerInformation signerInformation = signers.iterator().next();",
          "434:         @SuppressWarnings(\"unchecked\")",
          "435:         Collection<X509CertificateHolder> matches =",
          "437:         if (matches.isEmpty())",
          "438:         {",
          "439:             throw new IOException(\"Signer '\" + signerInformation.getSID().getIssuer() +",
          "",
          "[Removed Lines]",
          "436:                 certificatesStore.getMatches((Selector<X509CertificateHolder>) signerInformation.getSID());",
          "",
          "[Added Lines]",
          "436:                 certificatesStore.getMatches(signerInformation.getSID());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "456:             SigUtils.validateTimestampToken(timeStampToken);",
          "457:             @SuppressWarnings(\"unchecked\") // TimeStampToken.getSID() is untyped",
          "458:             Collection<X509CertificateHolder> tstMatches =",
          "460:             X509CertificateHolder tstCertHolder = tstMatches.iterator().next();",
          "461:             X509Certificate certFromTimeStamp = new JcaX509CertificateConverter().getCertificate(tstCertHolder);",
          "",
          "[Removed Lines]",
          "459:                 timeStampToken.getCertificates().getMatches((Selector<X509CertificateHolder>) timeStampToken.getSID());",
          "",
          "[Added Lines]",
          "459:                 timeStampToken.getCertificates().getMatches(timeStampToken.getSID());",
          "",
          "---------------"
        ],
        "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:         @SuppressWarnings(\"unchecked\") // TimeStampToken.getSID() is untyped",
          "306:         Collection<X509CertificateHolder> tstMatches =",
          "308:         X509CertificateHolder certificateHolder = tstMatches.iterator().next();",
          "309:         SignerInformationVerifier siv =",
          "310:                 new JcaSimpleSignerInfoVerifierBuilder().setProvider(SecurityProvider.getProvider()).build(certificateHolder);",
          "",
          "[Removed Lines]",
          "307:                 timeStampToken.getCertificates().getMatches((Selector<X509CertificateHolder>) timeStampToken.getSID());",
          "",
          "[Added Lines]",
          "307:                 timeStampToken.getCertificates().getMatches(timeStampToken.getSID());",
          "",
          "---------------"
        ],
        "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:         Collection<SignerInformation> signers = signedData.getSignerInfos().getSigners();",
          "185:         SignerInformation signerInformation = signers.iterator().next();",
          "188:         Store<X509CertificateHolder> certificatesStore = signedData.getCertificates();",
          "189:         @SuppressWarnings(\"unchecked\")",
          "193:         X509Certificate certificate = getCertFromHolder(matches.iterator().next());",
          "194:         certificateSet.add(certificate);",
          "",
          "[Removed Lines]",
          "187:         @SuppressWarnings(\"unchecked\")",
          "190:         Collection<X509CertificateHolder> matches = certificatesStore",
          "191:                 .getMatches((Selector<X509CertificateHolder>) signerInformation.getSID());",
          "",
          "[Added Lines]",
          "189:         Collection<X509CertificateHolder> matches =",
          "190:                 certificatesStore.getMatches(signerInformation.getSID());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f2e08d99ed343d35e884d844e5e5f2b6de8aff0",
      "candidate_info": {
        "commit_hash": "5f2e08d99ed343d35e884d844e5e5f2b6de8aff0",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5f2e08d99ed343d35e884d844e5e5f2b6de8aff0",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ],
        "message": "PDFBOX-4892: refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881650 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "764:     private boolean resolveNeedsTranslation(PDAppearanceStream appearanceStream)",
          "765:     {",
          "768:         PDResources resources = appearanceStream.getResources();",
          "769:         if (resources != null && resources.getXObjectNames().iterator().hasNext())",
          "770:         {",
          "",
          "[Removed Lines]",
          "766:         boolean needsTranslation = true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "784:                         float llY = bbox.getLowerLeftY();",
          "785:                         if (Float.compare(llX, 0) != 0 && Float.compare(llY, 0) != 0)",
          "786:                         {",
          "788:                         }",
          "789:                     }",
          "790:                 }",
          "",
          "[Removed Lines]",
          "787:                             needsTranslation = false;",
          "",
          "[Added Lines]",
          "785:                             return false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "795:                 }",
          "796:             }",
          "798:         }",
          "800:         return true;",
          "801:     }",
          "",
          "[Removed Lines]",
          "797:             return needsTranslation;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}