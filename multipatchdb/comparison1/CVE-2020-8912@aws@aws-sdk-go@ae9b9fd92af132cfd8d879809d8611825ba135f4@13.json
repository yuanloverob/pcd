{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
      "candidate_info": {
        "commit_hash": "f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/doc.go",
          "service/elasticache/api.go"
        ],
        "message": "Release v1.33.1 (2020-07-02) ===\n\n### Service Client Updates\n* `service/connect`: Updates service documentation\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/doc.go||service/connect/doc.go",
          "service/elasticache/api.go||service/elasticache/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:     \"ap-south-1\":     endpoint{},",
          "685:     \"ap-southeast-1\": endpoint{},",
          "686:     \"ap-southeast-2\": endpoint{},",
          "687:     \"eu-central-1\":   endpoint{},",
          "688:     \"eu-west-1\":      endpoint{},",
          "689:     \"eu-west-2\":      endpoint{},",
          "690:     \"us-east-1\":      endpoint{},",
          "691:     \"us-east-2\":      endpoint{},",
          "692:     \"us-west-2\":      endpoint{},",
          "693:    },",
          "694:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:     \"ca-central-1\":   endpoint{},",
          "689:     \"eu-north-1\":     endpoint{},",
          "692:     \"eu-west-3\":      endpoint{},",
          "693:     \"sa-east-1\":      endpoint{},",
          "696:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4280:   \"ram\": service{",
          "4282:    Endpoints: endpoints{",
          "4283:     \"ap-east-1\":      endpoint{},",
          "4284:     \"ap-northeast-1\": endpoint{},",
          "4285:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4288:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4289:     \"ca-central-1\":   endpoint{},",
          "4290:     \"eu-central-1\":   endpoint{},",
          "4291:     \"eu-north-1\":     endpoint{},",
          "4292:     \"eu-west-1\":      endpoint{},",
          "4293:     \"eu-west-2\":      endpoint{},",
          "4294:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4298:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.0\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.1\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go"
        ],
        "service/connect/doc.go||service/connect/doc.go": [
          "File: service/connect/doc.go -> service/connect/doc.go"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ]
      }
    },
    {
      "candidate_hash": "0c13f73afde25ee10206dbb4d928a30665e50f3b",
      "candidate_info": {
        "commit_hash": "0c13f73afde25ee10206dbb4d928a30665e50f3b",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/0c13f73afde25ee10206dbb4d928a30665e50f3b",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/codeguru-reviewer/2019-09-19/api-2.json",
          "models/apis/codeguru-reviewer/2019-09-19/docs-2.json",
          "models/apis/codeguru-reviewer/2019-09-19/paginators-1.json",
          "models/apis/es/2015-01-01/api-2.json",
          "models/apis/es/2015-01-01/docs-2.json",
          "models/apis/fms/2018-01-01/api-2.json",
          "models/apis/fms/2018-01-01/docs-2.json",
          "models/apis/redshift/2012-12-01/api-2.json",
          "models/apis/redshift/2012-12-01/docs-2.json",
          "models/apis/redshift/2012-12-01/paginators-1.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/codegurureviewer/api.go",
          "service/codegurureviewer/codegururevieweriface/interface.go",
          "service/codegurureviewer/errors.go",
          "service/elasticsearchservice/api.go",
          "service/fms/api.go",
          "service/redshift/api.go",
          "service/redshift/errors.go",
          "service/redshift/redshiftiface/interface.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/errors.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.30.12 (2020-04-22) ===\n\n### Service Client Updates\n* `service/codeguru-reviewer`: Updates service API, documentation, and paginators\n* `service/es`: Updates service API and documentation\n  * This change adds a new field 'OptionalDeployment' to ServiceSoftwareOptions to indicate whether a service software update is optional or mandatory. If True, it indicates that the update is optional, and the service software is not automatically updated. If False, the service software is automatically updated after AutomatedUpdateDate.\n* `service/fms`: Updates service API and documentation\n* `service/redshift`: Updates service API, documentation, and paginators\n  * Amazon Redshift support for usage limits\n* `service/transcribe-streaming`: Updates service API and documentation\n\n### SDK Enhancements\n* `aws/credentials/stscreds`: Add support for custom web identity TokenFetcher ([#3256](https://github.com/aws/aws-sdk-go/pull/3256))\n  * Adds new constructor, `NewWebIdentityRoleProviderWithToken` for `WebIdentityRoleProvider` which takes a `TokenFetcher`. Implement `TokenFetcher` to provide custom sources for web identity tokens. The `TokenFetcher` must be concurrency safe. `TokenFetcher` may return unique value each time it is called.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/codegurureviewer/api.go||service/codegurureviewer/api.go",
          "service/codegurureviewer/codegururevieweriface/interface.go||service/codegurureviewer/codegururevieweriface/interface.go",
          "service/codegurureviewer/errors.go||service/codegurureviewer/errors.go",
          "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go",
          "service/fms/api.go||service/fms/api.go",
          "service/redshift/api.go||service/redshift/api.go",
          "service/redshift/errors.go||service/redshift/errors.go",
          "service/redshift/redshiftiface/interface.go||service/redshift/redshiftiface/interface.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/errors.go||service/transcribestreamingservice/errors.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: const (",
          "20:  ApEast1RegionID      = \"ap-east-1\"      // Asia Pacific (Hong Kong).",
          "21:  ApNortheast1RegionID = \"ap-northeast-1\" // Asia Pacific (Tokyo).",
          "22:  ApNortheast2RegionID = \"ap-northeast-2\" // Asia Pacific (Seoul).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:  AfSouth1RegionID     = \"af-south-1\"     // Africa (Cape Town).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:  DNSSuffix: \"amazonaws.com\",",
          "98:  RegionRegex: regionRegex{",
          "99:   Regexp: func() *regexp.Regexp {",
          "101:    return reg",
          "102:   }(),",
          "103:  },",
          "",
          "[Removed Lines]",
          "100:    reg, _ := regexp.Compile(\"^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$\")",
          "",
          "[Added Lines]",
          "101:    reg, _ := regexp.Compile(\"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:   SignatureVersions: []string{\"v4\"},",
          "108:  },",
          "109:  Regions: regions{",
          "110:   \"ap-east-1\": region{",
          "111:    Description: \"Asia Pacific (Hong Kong)\",",
          "112:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:   \"af-south-1\": region{",
          "112:    Description: \"Africa (Cape Town)\",",
          "113:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "172:   \"access-analyzer\": service{",
          "174:    Endpoints: endpoints{",
          "175:     \"ap-east-1\":      endpoint{},",
          "176:     \"ap-northeast-1\": endpoint{},",
          "177:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:   \"acm\": service{",
          "197:    Endpoints: endpoints{",
          "198:     \"ap-east-1\":      endpoint{},",
          "199:     \"ap-northeast-1\": endpoint{},",
          "200:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "303:   \"api.ecr\": service{",
          "305:    Endpoints: endpoints{",
          "306:     \"ap-east-1\": endpoint{",
          "307:      Hostname: \"api.ecr.ap-east-1.amazonaws.com\",",
          "308:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:     \"af-south-1\": endpoint{",
          "313:      Hostname: \"api.ecr.af-south-1.amazonaws.com\",",
          "314:      CredentialScope: credentialScope{",
          "315:       Region: \"af-south-1\",",
          "316:      },",
          "317:     },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "510:   \"apigateway\": service{",
          "512:    Endpoints: endpoints{",
          "513:     \"ap-east-1\":      endpoint{},",
          "514:     \"ap-northeast-1\": endpoint{},",
          "515:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "525:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "535:     Protocols: []string{\"http\", \"https\"},",
          "536:    },",
          "537:    Endpoints: endpoints{",
          "538:     \"ap-east-1\":      endpoint{},",
          "539:     \"ap-northeast-1\": endpoint{},",
          "540:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "551:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "646:     Protocols: []string{\"http\", \"https\"},",
          "647:    },",
          "648:    Endpoints: endpoints{",
          "649:     \"ap-east-1\":      endpoint{},",
          "650:     \"ap-northeast-1\": endpoint{},",
          "651:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "834:   \"cloudformation\": service{",
          "836:    Endpoints: endpoints{",
          "837:     \"ap-east-1\":      endpoint{},",
          "838:     \"ap-northeast-1\": endpoint{},",
          "839:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "952:   \"cloudtrail\": service{",
          "954:    Endpoints: endpoints{",
          "955:     \"ap-east-1\":      endpoint{},",
          "956:     \"ap-northeast-1\": endpoint{},",
          "957:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1075:   \"codedeploy\": service{",
          "1077:    Endpoints: endpoints{",
          "1078:     \"ap-east-1\":      endpoint{},",
          "1079:     \"ap-northeast-1\": endpoint{},",
          "1080:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1095:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1505:   \"directconnect\": service{",
          "1507:    Endpoints: endpoints{",
          "1508:     \"ap-east-1\":      endpoint{},",
          "1509:     \"ap-northeast-1\": endpoint{},",
          "1510:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1526:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1560:   \"dms\": service{",
          "1562:    Endpoints: endpoints{",
          "1563:     \"ap-east-1\":      endpoint{},",
          "1564:     \"ap-northeast-1\": endpoint{},",
          "1565:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1582:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1727:     Protocols: []string{\"http\", \"https\"},",
          "1728:    },",
          "1729:    Endpoints: endpoints{",
          "1730:     \"ap-east-1\":      endpoint{},",
          "1731:     \"ap-northeast-1\": endpoint{},",
          "1732:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1750:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1789:     Protocols: []string{\"http\", \"https\"},",
          "1790:    },",
          "1791:    Endpoints: endpoints{",
          "1792:     \"ap-east-1\":      endpoint{},",
          "1793:     \"ap-northeast-1\": endpoint{},",
          "1794:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1813:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1853:   \"ecs\": service{",
          "1855:    Endpoints: endpoints{",
          "1856:     \"ap-east-1\":      endpoint{},",
          "1857:     \"ap-northeast-1\": endpoint{},",
          "1858:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1878:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1923:   \"elasticache\": service{",
          "1925:    Endpoints: endpoints{",
          "1926:     \"ap-east-1\":      endpoint{},",
          "1927:     \"ap-northeast-1\": endpoint{},",
          "1928:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1949:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1952:   \"elasticbeanstalk\": service{",
          "1954:    Endpoints: endpoints{",
          "1955:     \"ap-east-1\":      endpoint{},",
          "1956:     \"ap-northeast-1\": endpoint{},",
          "1957:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1979:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2132:     Protocols: []string{\"https\"},",
          "2133:    },",
          "2134:    Endpoints: endpoints{",
          "2135:     \"ap-east-1\":      endpoint{},",
          "2136:     \"ap-northeast-1\": endpoint{},",
          "2137:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2160:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2182:     Protocols:     []string{\"https\"},",
          "2183:    },",
          "2184:    Endpoints: endpoints{",
          "2185:     \"ap-east-1\":      endpoint{},",
          "2186:     \"ap-northeast-1\": endpoint{},",
          "2187:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2211:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2273:   \"es\": service{",
          "2275:    Endpoints: endpoints{",
          "2276:     \"ap-east-1\":      endpoint{},",
          "2277:     \"ap-northeast-1\": endpoint{},",
          "2278:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2303:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2302:   \"events\": service{",
          "2304:    Endpoints: endpoints{",
          "2305:     \"ap-east-1\":      endpoint{},",
          "2306:     \"ap-northeast-1\": endpoint{},",
          "2307:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2333:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2541:    Endpoints: endpoints{",
          "2542:     \"ap-east-1\":      endpoint{},",
          "2543:     \"ap-northeast-1\": endpoint{},",
          "2544:     \"ap-southeast-1\": endpoint{},",
          "2545:     \"ap-southeast-2\": endpoint{},",
          "2546:     \"eu-central-1\":   endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2573:     \"ap-northeast-2\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2577:     Protocols: []string{\"http\", \"https\"},",
          "2578:    },",
          "2579:    Endpoints: endpoints{",
          "2580:     \"ap-east-1\":      endpoint{},",
          "2581:     \"ap-northeast-1\": endpoint{},",
          "2582:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2610:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3016:   \"kinesis\": service{",
          "3018:    Endpoints: endpoints{",
          "3019:     \"ap-east-1\":      endpoint{},",
          "3020:     \"ap-northeast-1\": endpoint{},",
          "3021:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3050:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3105:   \"kms\": service{",
          "3107:    Endpoints: endpoints{",
          "3108:     \"ap-east-1\":      endpoint{},",
          "3109:     \"ap-northeast-1\": endpoint{},",
          "3110:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3140:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3146:   \"lambda\": service{",
          "3148:    Endpoints: endpoints{",
          "3149:     \"ap-east-1\":      endpoint{},",
          "3150:     \"ap-northeast-1\": endpoint{},",
          "3151:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3258:   \"logs\": service{",
          "3260:    Endpoints: endpoints{",
          "3261:     \"ap-east-1\":      endpoint{},",
          "3262:     \"ap-northeast-1\": endpoint{},",
          "3263:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3295:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "3401:     },",
          "3402:    },",
          "3403:    Endpoints: endpoints{",
          "3404:     \"ap-east-1\":      endpoint{},",
          "3405:     \"ap-northeast-1\": endpoint{},",
          "3406:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3439:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "3442:     },",
          "3443:    },",
          "3444:    Endpoints: endpoints{",
          "3445:     \"ap-southeast-2\": endpoint{},",
          "3446:     \"eu-west-1\":      endpoint{},",
          "3447:     \"us-east-1\":      endpoint{},",
          "3448:     \"us-west-2\":      endpoint{},",
          "3449:    },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3481:     \"ap-southeast-1\": endpoint{},",
          "3483:     \"eu-central-1\":   endpoint{},",
          "3485:     \"eu-west-2\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "3453:     Protocols: []string{\"http\", \"https\"},",
          "3454:    },",
          "3455:    Endpoints: endpoints{",
          "3456:     \"ap-east-1\":      endpoint{},",
          "3457:     \"ap-northeast-1\": endpoint{},",
          "3458:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3495:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3977:   \"rds\": service{",
          "3979:    Endpoints: endpoints{",
          "3980:     \"ap-east-1\":      endpoint{},",
          "3981:     \"ap-northeast-1\": endpoint{},",
          "3982:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4020:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4002:   \"redshift\": service{",
          "4004:    Endpoints: endpoints{",
          "4005:     \"ap-east-1\":      endpoint{},",
          "4006:     \"ap-northeast-1\": endpoint{},",
          "4007:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4046:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4072:   \"resource-groups\": service{",
          "4074:    Endpoints: endpoints{",
          "4075:     \"ap-east-1\":      endpoint{},",
          "4076:     \"ap-northeast-1\": endpoint{},",
          "4077:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4117:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4179:     },",
          "4180:    },",
          "4181:    Endpoints: endpoints{",
          "4182:     \"ap-southeast-2\": endpoint{},",
          "4183:     \"eu-west-1\":      endpoint{},",
          "4184:     \"us-east-1\":      endpoint{},",
          "4185:     \"us-west-2\":      endpoint{},",
          "4186:    },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4225:     \"ap-southeast-1\": endpoint{},",
          "4227:     \"eu-central-1\":   endpoint{},",
          "4229:     \"eu-west-2\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4243:     DualStackHostname: \"{service}.dualstack.{region}.{dnsSuffix}\",",
          "4244:    },",
          "4245:    Endpoints: endpoints{",
          "4247:     \"ap-northeast-1\": endpoint{",
          "4248:      Hostname:          \"s3.ap-northeast-1.amazonaws.com\",",
          "4249:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "4246:     \"ap-east-1\": endpoint{},",
          "",
          "[Added Lines]",
          "4292:     \"af-south-1\": endpoint{},",
          "4293:     \"ap-east-1\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4732:   \"sms\": service{",
          "4734:    Endpoints: endpoints{",
          "4735:     \"ap-east-1\":      endpoint{},",
          "4736:     \"ap-northeast-1\": endpoint{},",
          "4737:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4782:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4891:     Protocols: []string{\"http\", \"https\"},",
          "4892:    },",
          "4893:    Endpoints: endpoints{",
          "4894:     \"ap-east-1\":      endpoint{},",
          "4895:     \"ap-northeast-1\": endpoint{},",
          "4896:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4942:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "4941:     Protocols:     []string{\"http\", \"https\"},",
          "4942:    },",
          "4943:    Endpoints: endpoints{",
          "4944:     \"ap-east-1\":      endpoint{},",
          "4945:     \"ap-northeast-1\": endpoint{},",
          "4946:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4993:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "4990:   \"ssm\": service{",
          "4992:    Endpoints: endpoints{",
          "4993:     \"ap-east-1\":      endpoint{},",
          "4994:     \"ap-northeast-1\": endpoint{},",
          "4995:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5043:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5061:   \"states\": service{",
          "5063:    Endpoints: endpoints{",
          "5064:     \"ap-east-1\":      endpoint{},",
          "5065:     \"ap-northeast-1\": endpoint{},",
          "5066:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5115:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "5196:    PartitionEndpoint: \"aws-global\",",
          "5198:    Endpoints: endpoints{",
          "5199:     \"ap-east-1\":      endpoint{},",
          "5200:     \"ap-northeast-1\": endpoint{},",
          "5201:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5251:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "5261:   \"swf\": service{",
          "5263:    Endpoints: endpoints{",
          "5264:     \"ap-east-1\":      endpoint{},",
          "5265:     \"ap-northeast-1\": endpoint{},",
          "5266:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5317:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "5308:   \"tagging\": service{",
          "5310:    Endpoints: endpoints{",
          "5311:     \"ap-east-1\":      endpoint{},",
          "5312:     \"ap-northeast-1\": endpoint{},",
          "5313:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5365:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "5741:   \"xray\": service{",
          "5743:    Endpoints: endpoints{",
          "5744:     \"ap-east-1\":      endpoint{},",
          "5745:     \"ap-northeast-1\": endpoint{},",
          "5746:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5799:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "7390:     },",
          "7391:    },",
          "7392:   },",
          "7393:   \"serverlessrepo\": service{",
          "7394:    Defaults: endpoint{",
          "7395:     Protocols: []string{\"https\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7449:   \"securityhub\": service{",
          "7451:    Endpoints: endpoints{",
          "7452:     \"us-gov-east-1\": endpoint{},",
          "7453:     \"us-gov-west-1\": endpoint{},",
          "7454:    },",
          "7455:   },",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "7729:     \"us-iso-east-1\": endpoint{},",
          "7730:    },",
          "7731:   },",
          "7732:   \"config\": service{",
          "7734:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7795:   \"comprehend\": service{",
          "7796:    Defaults: endpoint{",
          "7797:     Protocols: []string{\"https\"},",
          "7798:    },",
          "7799:    Endpoints: endpoints{",
          "7800:     \"us-iso-east-1\": endpoint{},",
          "7801:    },",
          "7802:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.11\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.12\"",
          "",
          "---------------"
        ],
        "service/codegurureviewer/api.go||service/codegurureviewer/api.go": [
          "File: service/codegurureviewer/api.go -> service/codegurureviewer/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13: )",
          "15: const opAssociateRepository = \"AssociateRepository\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:  return out, req.Send()",
          "112: }",
          "114: const opDescribeRepositoryAssociation = \"DescribeRepositoryAssociation\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116: const opDescribeCodeReview = \"DescribeCodeReview\"",
          "142: func (c *CodeGuruReviewer) DescribeCodeReviewRequest(input *DescribeCodeReviewInput) (req *request.Request, output *DescribeCodeReviewOutput) {",
          "143:  op := &request.Operation{",
          "144:   Name:       opDescribeCodeReview,",
          "145:   HTTPMethod: \"GET\",",
          "146:   HTTPPath:   \"/codereviews/{CodeReviewArn}\",",
          "147:  }",
          "149:  if input == nil {",
          "150:   input = &DescribeCodeReviewInput{}",
          "151:  }",
          "153:  output = &DescribeCodeReviewOutput{}",
          "154:  req = c.newRequest(op, input, output)",
          "155:  return",
          "156: }",
          "186: func (c *CodeGuruReviewer) DescribeCodeReview(input *DescribeCodeReviewInput) (*DescribeCodeReviewOutput, error) {",
          "187:  req, out := c.DescribeCodeReviewRequest(input)",
          "188:  return out, req.Send()",
          "189: }",
          "200: func (c *CodeGuruReviewer) DescribeCodeReviewWithContext(ctx aws.Context, input *DescribeCodeReviewInput, opts ...request.Option) (*DescribeCodeReviewOutput, error) {",
          "201:  req, out := c.DescribeCodeReviewRequest(input)",
          "202:  req.SetContext(ctx)",
          "203:  req.ApplyOptions(opts...)",
          "204:  return out, req.Send()",
          "205: }",
          "207: const opDescribeRecommendationFeedback = \"DescribeRecommendationFeedback\"",
          "233: func (c *CodeGuruReviewer) DescribeRecommendationFeedbackRequest(input *DescribeRecommendationFeedbackInput) (req *request.Request, output *DescribeRecommendationFeedbackOutput) {",
          "234:  op := &request.Operation{",
          "235:   Name:       opDescribeRecommendationFeedback,",
          "236:   HTTPMethod: \"GET\",",
          "237:   HTTPPath:   \"/feedback/{CodeReviewArn}\",",
          "238:  }",
          "240:  if input == nil {",
          "241:   input = &DescribeRecommendationFeedbackInput{}",
          "242:  }",
          "244:  output = &DescribeRecommendationFeedbackOutput{}",
          "245:  req = c.newRequest(op, input, output)",
          "246:  return",
          "247: }",
          "277: func (c *CodeGuruReviewer) DescribeRecommendationFeedback(input *DescribeRecommendationFeedbackInput) (*DescribeRecommendationFeedbackOutput, error) {",
          "278:  req, out := c.DescribeRecommendationFeedbackRequest(input)",
          "279:  return out, req.Send()",
          "280: }",
          "291: func (c *CodeGuruReviewer) DescribeRecommendationFeedbackWithContext(ctx aws.Context, input *DescribeRecommendationFeedbackInput, opts ...request.Option) (*DescribeRecommendationFeedbackOutput, error) {",
          "292:  req, out := c.DescribeRecommendationFeedbackRequest(input)",
          "293:  req.SetContext(ctx)",
          "294:  req.ApplyOptions(opts...)",
          "295:  return out, req.Send()",
          "296: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:  return out, req.Send()",
          "299: }",
          "328:  op := &request.Operation{",
          "330:   HTTPMethod: \"GET\",",
          "332:   Paginator: &request.Paginator{",
          "333:    InputTokens:     []string{\"NextToken\"},",
          "334:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "301: const opListRepositoryAssociations = \"ListRepositoryAssociations\"",
          "327: func (c *CodeGuruReviewer) ListRepositoryAssociationsRequest(input *ListRepositoryAssociationsInput) (req *request.Request, output *ListRepositoryAssociationsOutput) {",
          "329:   Name:       opListRepositoryAssociations,",
          "331:   HTTPPath:   \"/associations\",",
          "",
          "[Added Lines]",
          "485: const opListCodeReviews = \"ListCodeReviews\"",
          "511: func (c *CodeGuruReviewer) ListCodeReviewsRequest(input *ListCodeReviewsInput) (req *request.Request, output *ListCodeReviewsOutput) {",
          "513:   Name:       opListCodeReviews,",
          "515:   HTTPPath:   \"/codereviews\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "338:  }",
          "340:  if input == nil {",
          "342:  }",
          "345:  req = c.newRequest(op, input, output)",
          "346:  return",
          "347: }",
          "",
          "[Removed Lines]",
          "341:   input = &ListRepositoryAssociationsInput{}",
          "344:  output = &ListRepositoryAssociationsOutput{}",
          "",
          "[Added Lines]",
          "525:   input = &ListCodeReviewsInput{}",
          "528:  output = &ListCodeReviewsOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "375:  return out, req.Send()",
          "376: }",
          "389:  req.SetContext(ctx)",
          "390:  req.ApplyOptions(opts...)",
          "391:  return out, req.Send()",
          "392: }",
          "413: }",
          "423:  p := request.Pagination{",
          "424:   NewRequest: func() (*request.Request, error) {",
          "426:    if input != nil {",
          "427:     tmp := *input",
          "428:     inCpy = &tmp",
          "429:    }",
          "431:    req.SetContext(ctx)",
          "432:    req.ApplyOptions(opts...)",
          "433:    return req, nil",
          "",
          "[Removed Lines]",
          "373: func (c *CodeGuruReviewer) ListRepositoryAssociations(input *ListRepositoryAssociationsInput) (*ListRepositoryAssociationsOutput, error) {",
          "374:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "387: func (c *CodeGuruReviewer) ListRepositoryAssociationsWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, opts ...request.Option) (*ListRepositoryAssociationsOutput, error) {",
          "388:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "411: func (c *CodeGuruReviewer) ListRepositoryAssociationsPages(input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool) error {",
          "412:  return c.ListRepositoryAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "422: func (c *CodeGuruReviewer) ListRepositoryAssociationsPagesWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "425:    var inCpy *ListRepositoryAssociationsInput",
          "430:    req, _ := c.ListRepositoryAssociationsRequest(inCpy)",
          "",
          "[Added Lines]",
          "558: func (c *CodeGuruReviewer) ListCodeReviews(input *ListCodeReviewsInput) (*ListCodeReviewsOutput, error) {",
          "559:  req, out := c.ListCodeReviewsRequest(input)",
          "572: func (c *CodeGuruReviewer) ListCodeReviewsWithContext(ctx aws.Context, input *ListCodeReviewsInput, opts ...request.Option) (*ListCodeReviewsOutput, error) {",
          "573:  req, out := c.ListCodeReviewsRequest(input)",
          "596: func (c *CodeGuruReviewer) ListCodeReviewsPages(input *ListCodeReviewsInput, fn func(*ListCodeReviewsOutput, bool) bool) error {",
          "597:  return c.ListCodeReviewsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "607: func (c *CodeGuruReviewer) ListCodeReviewsPagesWithContext(ctx aws.Context, input *ListCodeReviewsInput, fn func(*ListCodeReviewsOutput, bool) bool, opts ...request.Option) error {",
          "610:    var inCpy *ListCodeReviewsInput",
          "615:    req, _ := c.ListCodeReviewsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "435:  }",
          "437:  for p.Next() {",
          "439:    break",
          "440:   }",
          "441:  }",
          "",
          "[Removed Lines]",
          "438:   if !fn(p.Page().(*ListRepositoryAssociationsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "623:   if !fn(p.Page().(*ListCodeReviewsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "443:  return p.Err()",
          "444: }",
          "467:  }",
          "479:  }",
          "500: }",
          "526:  ClientRequestToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "532: }",
          "537: }",
          "542: }",
          "563: }",
          "568:  return s",
          "569: }",
          "574:  return s",
          "575: }",
          "578:  _ struct{} `type:\"structure\"`",
          "582: }",
          "586:  return awsutil.Prettify(s)",
          "587: }",
          "591:  return s.String()",
          "592: }",
          "597:  return s",
          "598: }",
          "602:  _ struct{} `type:\"structure\"`",
          "608: }",
          "612:  return awsutil.Prettify(s)",
          "613: }",
          "617:  return s.String()",
          "618: }",
          "634: }",
          "639:  return s",
          "640: }",
          "",
          "[Removed Lines]",
          "447: type AccessDeniedException struct {",
          "448:  _            struct{}                  `type:\"structure\"`",
          "449:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "451:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "452: }",
          "455: func (s AccessDeniedException) String() string {",
          "456:  return awsutil.Prettify(s)",
          "457: }",
          "460: func (s AccessDeniedException) GoString() string {",
          "461:  return s.String()",
          "462: }",
          "464: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "465:  return &AccessDeniedException{",
          "466:   RespMetadata: v,",
          "468: }",
          "471: func (s *AccessDeniedException) Code() string {",
          "472:  return \"AccessDeniedException\"",
          "473: }",
          "476: func (s *AccessDeniedException) Message() string {",
          "477:  if s.Message_ != nil {",
          "478:   return *s.Message_",
          "480:  return \"\"",
          "481: }",
          "484: func (s *AccessDeniedException) OrigErr() error {",
          "485:  return nil",
          "486: }",
          "488: func (s *AccessDeniedException) Error() string {",
          "489:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "490: }",
          "493: func (s *AccessDeniedException) StatusCode() int {",
          "494:  return s.RespMetadata.StatusCode",
          "495: }",
          "498: func (s *AccessDeniedException) RequestID() string {",
          "499:  return s.RespMetadata.RequestID",
          "502: type AssociateRepositoryInput struct {",
          "503:  _ struct{} `type:\"structure\"`",
          "531:  Repository *Repository `type:\"structure\" required:\"true\"`",
          "535: func (s AssociateRepositoryInput) String() string {",
          "536:  return awsutil.Prettify(s)",
          "540: func (s AssociateRepositoryInput) GoString() string {",
          "541:  return s.String()",
          "545: func (s *AssociateRepositoryInput) Validate() error {",
          "546:  invalidParams := request.ErrInvalidParams{Context: \"AssociateRepositoryInput\"}",
          "547:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "548:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "549:  }",
          "550:  if s.Repository == nil {",
          "551:   invalidParams.Add(request.NewErrParamRequired(\"Repository\"))",
          "552:  }",
          "553:  if s.Repository != nil {",
          "554:   if err := s.Repository.Validate(); err != nil {",
          "555:    invalidParams.AddNested(\"Repository\", err.(request.ErrInvalidParams))",
          "556:   }",
          "557:  }",
          "559:  if invalidParams.Len() > 0 {",
          "560:   return invalidParams",
          "561:  }",
          "562:  return nil",
          "566: func (s *AssociateRepositoryInput) SetClientRequestToken(v string) *AssociateRepositoryInput {",
          "567:  s.ClientRequestToken = &v",
          "572: func (s *AssociateRepositoryInput) SetRepository(v *Repository) *AssociateRepositoryInput {",
          "573:  s.Repository = v",
          "577: type AssociateRepositoryOutput struct {",
          "581:  RepositoryAssociation *RepositoryAssociation `type:\"structure\"`",
          "585: func (s AssociateRepositoryOutput) String() string {",
          "590: func (s AssociateRepositoryOutput) GoString() string {",
          "595: func (s *AssociateRepositoryOutput) SetRepositoryAssociation(v *RepositoryAssociation) *AssociateRepositoryOutput {",
          "596:  s.RepositoryAssociation = v",
          "601: type CodeCommitRepository struct {",
          "607:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "611: func (s CodeCommitRepository) String() string {",
          "616: func (s CodeCommitRepository) GoString() string {",
          "621: func (s *CodeCommitRepository) Validate() error {",
          "622:  invalidParams := request.ErrInvalidParams{Context: \"CodeCommitRepository\"}",
          "623:  if s.Name == nil {",
          "624:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "625:  }",
          "626:  if s.Name != nil && len(*s.Name) < 1 {",
          "627:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "628:  }",
          "630:  if invalidParams.Len() > 0 {",
          "631:   return invalidParams",
          "632:  }",
          "633:  return nil",
          "637: func (s *CodeCommitRepository) SetName(v string) *CodeCommitRepository {",
          "638:  s.Name = &v",
          "",
          "[Added Lines]",
          "631: const opListRecommendationFeedback = \"ListRecommendationFeedback\"",
          "657: func (c *CodeGuruReviewer) ListRecommendationFeedbackRequest(input *ListRecommendationFeedbackInput) (req *request.Request, output *ListRecommendationFeedbackOutput) {",
          "658:  op := &request.Operation{",
          "659:   Name:       opListRecommendationFeedback,",
          "660:   HTTPMethod: \"GET\",",
          "661:   HTTPPath:   \"/feedback/{CodeReviewArn}/RecommendationFeedback\",",
          "662:   Paginator: &request.Paginator{",
          "663:    InputTokens:     []string{\"NextToken\"},",
          "664:    OutputTokens:    []string{\"NextToken\"},",
          "665:    LimitToken:      \"MaxResults\",",
          "666:    TruncationToken: \"\",",
          "667:   },",
          "670:  if input == nil {",
          "671:   input = &ListRecommendationFeedbackInput{}",
          "674:  output = &ListRecommendationFeedbackOutput{}",
          "675:  req = c.newRequest(op, input, output)",
          "676:  return",
          "709: func (c *CodeGuruReviewer) ListRecommendationFeedback(input *ListRecommendationFeedbackInput) (*ListRecommendationFeedbackOutput, error) {",
          "710:  req, out := c.ListRecommendationFeedbackRequest(input)",
          "711:  return out, req.Send()",
          "712: }",
          "723: func (c *CodeGuruReviewer) ListRecommendationFeedbackWithContext(ctx aws.Context, input *ListRecommendationFeedbackInput, opts ...request.Option) (*ListRecommendationFeedbackOutput, error) {",
          "724:  req, out := c.ListRecommendationFeedbackRequest(input)",
          "725:  req.SetContext(ctx)",
          "726:  req.ApplyOptions(opts...)",
          "727:  return out, req.Send()",
          "728: }",
          "747: func (c *CodeGuruReviewer) ListRecommendationFeedbackPages(input *ListRecommendationFeedbackInput, fn func(*ListRecommendationFeedbackOutput, bool) bool) error {",
          "748:  return c.ListRecommendationFeedbackPagesWithContext(aws.BackgroundContext(), input, fn)",
          "749: }",
          "758: func (c *CodeGuruReviewer) ListRecommendationFeedbackPagesWithContext(ctx aws.Context, input *ListRecommendationFeedbackInput, fn func(*ListRecommendationFeedbackOutput, bool) bool, opts ...request.Option) error {",
          "759:  p := request.Pagination{",
          "760:   NewRequest: func() (*request.Request, error) {",
          "761:    var inCpy *ListRecommendationFeedbackInput",
          "762:    if input != nil {",
          "763:     tmp := *input",
          "764:     inCpy = &tmp",
          "765:    }",
          "766:    req, _ := c.ListRecommendationFeedbackRequest(inCpy)",
          "767:    req.SetContext(ctx)",
          "768:    req.ApplyOptions(opts...)",
          "769:    return req, nil",
          "770:   },",
          "771:  }",
          "773:  for p.Next() {",
          "774:   if !fn(p.Page().(*ListRecommendationFeedbackOutput), !p.HasNextPage()) {",
          "775:    break",
          "776:   }",
          "777:  }",
          "779:  return p.Err()",
          "780: }",
          "782: const opListRecommendations = \"ListRecommendations\"",
          "808: func (c *CodeGuruReviewer) ListRecommendationsRequest(input *ListRecommendationsInput) (req *request.Request, output *ListRecommendationsOutput) {",
          "809:  op := &request.Operation{",
          "810:   Name:       opListRecommendations,",
          "811:   HTTPMethod: \"GET\",",
          "812:   HTTPPath:   \"/codereviews/{CodeReviewArn}/Recommendations\",",
          "813:   Paginator: &request.Paginator{",
          "814:    InputTokens:     []string{\"NextToken\"},",
          "815:    OutputTokens:    []string{\"NextToken\"},",
          "816:    LimitToken:      \"MaxResults\",",
          "817:    TruncationToken: \"\",",
          "818:   },",
          "819:  }",
          "821:  if input == nil {",
          "822:   input = &ListRecommendationsInput{}",
          "823:  }",
          "825:  output = &ListRecommendationsOutput{}",
          "826:  req = c.newRequest(op, input, output)",
          "827:  return",
          "828: }",
          "858: func (c *CodeGuruReviewer) ListRecommendations(input *ListRecommendationsInput) (*ListRecommendationsOutput, error) {",
          "859:  req, out := c.ListRecommendationsRequest(input)",
          "860:  return out, req.Send()",
          "861: }",
          "872: func (c *CodeGuruReviewer) ListRecommendationsWithContext(ctx aws.Context, input *ListRecommendationsInput, opts ...request.Option) (*ListRecommendationsOutput, error) {",
          "873:  req, out := c.ListRecommendationsRequest(input)",
          "874:  req.SetContext(ctx)",
          "875:  req.ApplyOptions(opts...)",
          "876:  return out, req.Send()",
          "877: }",
          "896: func (c *CodeGuruReviewer) ListRecommendationsPages(input *ListRecommendationsInput, fn func(*ListRecommendationsOutput, bool) bool) error {",
          "897:  return c.ListRecommendationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "898: }",
          "907: func (c *CodeGuruReviewer) ListRecommendationsPagesWithContext(ctx aws.Context, input *ListRecommendationsInput, fn func(*ListRecommendationsOutput, bool) bool, opts ...request.Option) error {",
          "908:  p := request.Pagination{",
          "909:   NewRequest: func() (*request.Request, error) {",
          "910:    var inCpy *ListRecommendationsInput",
          "911:    if input != nil {",
          "912:     tmp := *input",
          "913:     inCpy = &tmp",
          "914:    }",
          "915:    req, _ := c.ListRecommendationsRequest(inCpy)",
          "916:    req.SetContext(ctx)",
          "917:    req.ApplyOptions(opts...)",
          "918:    return req, nil",
          "919:   },",
          "920:  }",
          "922:  for p.Next() {",
          "923:   if !fn(p.Page().(*ListRecommendationsOutput), !p.HasNextPage()) {",
          "924:    break",
          "925:   }",
          "926:  }",
          "928:  return p.Err()",
          "929: }",
          "931: const opListRepositoryAssociations = \"ListRepositoryAssociations\"",
          "957: func (c *CodeGuruReviewer) ListRepositoryAssociationsRequest(input *ListRepositoryAssociationsInput) (req *request.Request, output *ListRepositoryAssociationsOutput) {",
          "958:  op := &request.Operation{",
          "959:   Name:       opListRepositoryAssociations,",
          "960:   HTTPMethod: \"GET\",",
          "961:   HTTPPath:   \"/associations\",",
          "962:   Paginator: &request.Paginator{",
          "963:    InputTokens:     []string{\"NextToken\"},",
          "964:    OutputTokens:    []string{\"NextToken\"},",
          "965:    LimitToken:      \"MaxResults\",",
          "966:    TruncationToken: \"\",",
          "967:   },",
          "968:  }",
          "970:  if input == nil {",
          "971:   input = &ListRepositoryAssociationsInput{}",
          "972:  }",
          "974:  output = &ListRepositoryAssociationsOutput{}",
          "975:  req = c.newRequest(op, input, output)",
          "976:  return",
          "977: }",
          "1003: func (c *CodeGuruReviewer) ListRepositoryAssociations(input *ListRepositoryAssociationsInput) (*ListRepositoryAssociationsOutput, error) {",
          "1004:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "1005:  return out, req.Send()",
          "1006: }",
          "1017: func (c *CodeGuruReviewer) ListRepositoryAssociationsWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, opts ...request.Option) (*ListRepositoryAssociationsOutput, error) {",
          "1018:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "1019:  req.SetContext(ctx)",
          "1020:  req.ApplyOptions(opts...)",
          "1021:  return out, req.Send()",
          "1022: }",
          "1041: func (c *CodeGuruReviewer) ListRepositoryAssociationsPages(input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool) error {",
          "1042:  return c.ListRepositoryAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1043: }",
          "1052: func (c *CodeGuruReviewer) ListRepositoryAssociationsPagesWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "1053:  p := request.Pagination{",
          "1054:   NewRequest: func() (*request.Request, error) {",
          "1055:    var inCpy *ListRepositoryAssociationsInput",
          "1056:    if input != nil {",
          "1057:     tmp := *input",
          "1058:     inCpy = &tmp",
          "1059:    }",
          "1060:    req, _ := c.ListRepositoryAssociationsRequest(inCpy)",
          "1061:    req.SetContext(ctx)",
          "1062:    req.ApplyOptions(opts...)",
          "1063:    return req, nil",
          "1064:   },",
          "1065:  }",
          "1067:  for p.Next() {",
          "1068:   if !fn(p.Page().(*ListRepositoryAssociationsOutput), !p.HasNextPage()) {",
          "1069:    break",
          "1070:   }",
          "1071:  }",
          "1073:  return p.Err()",
          "1074: }",
          "1076: const opPutRecommendationFeedback = \"PutRecommendationFeedback\"",
          "1102: func (c *CodeGuruReviewer) PutRecommendationFeedbackRequest(input *PutRecommendationFeedbackInput) (req *request.Request, output *PutRecommendationFeedbackOutput) {",
          "1103:  op := &request.Operation{",
          "1104:   Name:       opPutRecommendationFeedback,",
          "1105:   HTTPMethod: \"PUT\",",
          "1106:   HTTPPath:   \"/feedback\",",
          "1107:  }",
          "1109:  if input == nil {",
          "1110:   input = &PutRecommendationFeedbackInput{}",
          "1111:  }",
          "1113:  output = &PutRecommendationFeedbackOutput{}",
          "1114:  req = c.newRequest(op, input, output)",
          "1115:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1116:  return",
          "1117: }",
          "1148: func (c *CodeGuruReviewer) PutRecommendationFeedback(input *PutRecommendationFeedbackInput) (*PutRecommendationFeedbackOutput, error) {",
          "1149:  req, out := c.PutRecommendationFeedbackRequest(input)",
          "1150:  return out, req.Send()",
          "1151: }",
          "1162: func (c *CodeGuruReviewer) PutRecommendationFeedbackWithContext(ctx aws.Context, input *PutRecommendationFeedbackInput, opts ...request.Option) (*PutRecommendationFeedbackOutput, error) {",
          "1163:  req, out := c.PutRecommendationFeedbackRequest(input)",
          "1164:  req.SetContext(ctx)",
          "1165:  req.ApplyOptions(opts...)",
          "1166:  return out, req.Send()",
          "1167: }",
          "1170: type AccessDeniedException struct {",
          "1171:  _            struct{}                  `type:\"structure\"`",
          "1172:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "1174:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "1175: }",
          "1178: func (s AccessDeniedException) String() string {",
          "1179:  return awsutil.Prettify(s)",
          "1180: }",
          "1183: func (s AccessDeniedException) GoString() string {",
          "1184:  return s.String()",
          "1185: }",
          "1187: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "1188:  return &AccessDeniedException{",
          "1189:   RespMetadata: v,",
          "1190:  }",
          "1191: }",
          "1194: func (s *AccessDeniedException) Code() string {",
          "1195:  return \"AccessDeniedException\"",
          "1196: }",
          "1199: func (s *AccessDeniedException) Message() string {",
          "1200:  if s.Message_ != nil {",
          "1201:   return *s.Message_",
          "1202:  }",
          "1203:  return \"\"",
          "1204: }",
          "1207: func (s *AccessDeniedException) OrigErr() error {",
          "1208:  return nil",
          "1209: }",
          "1211: func (s *AccessDeniedException) Error() string {",
          "1212:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1213: }",
          "1216: func (s *AccessDeniedException) StatusCode() int {",
          "1217:  return s.RespMetadata.StatusCode",
          "1218: }",
          "1221: func (s *AccessDeniedException) RequestID() string {",
          "1222:  return s.RespMetadata.RequestID",
          "1223: }",
          "1225: type AssociateRepositoryInput struct {",
          "1226:  _ struct{} `type:\"structure\"`",
          "1253:  Repository *Repository `type:\"structure\" required:\"true\"`",
          "1254: }",
          "1257: func (s AssociateRepositoryInput) String() string {",
          "1258:  return awsutil.Prettify(s)",
          "1259: }",
          "1262: func (s AssociateRepositoryInput) GoString() string {",
          "1263:  return s.String()",
          "1264: }",
          "1267: func (s *AssociateRepositoryInput) Validate() error {",
          "1268:  invalidParams := request.ErrInvalidParams{Context: \"AssociateRepositoryInput\"}",
          "1269:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "1270:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "1271:  }",
          "1272:  if s.Repository == nil {",
          "1273:   invalidParams.Add(request.NewErrParamRequired(\"Repository\"))",
          "1274:  }",
          "1275:  if s.Repository != nil {",
          "1276:   if err := s.Repository.Validate(); err != nil {",
          "1277:    invalidParams.AddNested(\"Repository\", err.(request.ErrInvalidParams))",
          "1278:   }",
          "1279:  }",
          "1281:  if invalidParams.Len() > 0 {",
          "1282:   return invalidParams",
          "1283:  }",
          "1284:  return nil",
          "1285: }",
          "1288: func (s *AssociateRepositoryInput) SetClientRequestToken(v string) *AssociateRepositoryInput {",
          "1289:  s.ClientRequestToken = &v",
          "1290:  return s",
          "1291: }",
          "1294: func (s *AssociateRepositoryInput) SetRepository(v *Repository) *AssociateRepositoryInput {",
          "1295:  s.Repository = v",
          "1296:  return s",
          "1297: }",
          "1299: type AssociateRepositoryOutput struct {",
          "1300:  _ struct{} `type:\"structure\"`",
          "1303:  RepositoryAssociation *RepositoryAssociation `type:\"structure\"`",
          "1304: }",
          "1307: func (s AssociateRepositoryOutput) String() string {",
          "1308:  return awsutil.Prettify(s)",
          "1309: }",
          "1312: func (s AssociateRepositoryOutput) GoString() string {",
          "1313:  return s.String()",
          "1314: }",
          "1317: func (s *AssociateRepositoryOutput) SetRepositoryAssociation(v *RepositoryAssociation) *AssociateRepositoryOutput {",
          "1318:  s.RepositoryAssociation = v",
          "1319:  return s",
          "1320: }",
          "1323: type CodeCommitRepository struct {",
          "1324:  _ struct{} `type:\"structure\"`",
          "1329:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "1330: }",
          "1333: func (s CodeCommitRepository) String() string {",
          "1334:  return awsutil.Prettify(s)",
          "1335: }",
          "1338: func (s CodeCommitRepository) GoString() string {",
          "1339:  return s.String()",
          "1340: }",
          "1343: func (s *CodeCommitRepository) Validate() error {",
          "1344:  invalidParams := request.ErrInvalidParams{Context: \"CodeCommitRepository\"}",
          "1345:  if s.Name == nil {",
          "1346:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "1347:  }",
          "1348:  if s.Name != nil && len(*s.Name) < 1 {",
          "1349:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "1350:  }",
          "1352:  if invalidParams.Len() > 0 {",
          "1353:   return invalidParams",
          "1354:  }",
          "1355:  return nil",
          "1356: }",
          "1359: func (s *CodeCommitRepository) SetName(v string) *CodeCommitRepository {",
          "1360:  s.Name = &v",
          "1361:  return s",
          "1362: }",
          "1365: type CodeReview struct {",
          "1366:  _ struct{} `type:\"structure\"`",
          "1369:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "1372:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1376:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1379:  Metrics *Metrics `type:\"structure\"`",
          "1382:  Name *string `min:\"1\" type:\"string\"`",
          "1385:  Owner *string `min:\"1\" type:\"string\"`",
          "1388:  ProviderType *string `type:\"string\" enum:\"ProviderType\"`",
          "1391:  PullRequestId *string `min:\"1\" type:\"string\"`",
          "1394:  RepositoryName *string `min:\"1\" type:\"string\"`",
          "1397:  SourceCodeType *SourceCodeType `type:\"structure\"`",
          "1400:  State *string `type:\"string\" enum:\"JobState\"`",
          "1403:  StateReason *string `type:\"string\"`",
          "1406:  Type *string `type:\"string\" enum:\"Type\"`",
          "1407: }",
          "1410: func (s CodeReview) String() string {",
          "1411:  return awsutil.Prettify(s)",
          "1412: }",
          "1415: func (s CodeReview) GoString() string {",
          "1416:  return s.String()",
          "1417: }",
          "1420: func (s *CodeReview) SetCodeReviewArn(v string) *CodeReview {",
          "1421:  s.CodeReviewArn = &v",
          "1422:  return s",
          "1423: }",
          "1426: func (s *CodeReview) SetCreatedTimeStamp(v time.Time) *CodeReview {",
          "1427:  s.CreatedTimeStamp = &v",
          "1428:  return s",
          "1429: }",
          "1432: func (s *CodeReview) SetLastUpdatedTimeStamp(v time.Time) *CodeReview {",
          "1433:  s.LastUpdatedTimeStamp = &v",
          "1434:  return s",
          "1438: func (s *CodeReview) SetMetrics(v *Metrics) *CodeReview {",
          "1439:  s.Metrics = v",
          "1440:  return s",
          "1444: func (s *CodeReview) SetName(v string) *CodeReview {",
          "1445:  s.Name = &v",
          "1446:  return s",
          "1450: func (s *CodeReview) SetOwner(v string) *CodeReview {",
          "1451:  s.Owner = &v",
          "1452:  return s",
          "1453: }",
          "1456: func (s *CodeReview) SetProviderType(v string) *CodeReview {",
          "1457:  s.ProviderType = &v",
          "1458:  return s",
          "1462: func (s *CodeReview) SetPullRequestId(v string) *CodeReview {",
          "1463:  s.PullRequestId = &v",
          "1468: func (s *CodeReview) SetRepositoryName(v string) *CodeReview {",
          "1469:  s.RepositoryName = &v",
          "1474: func (s *CodeReview) SetSourceCodeType(v *SourceCodeType) *CodeReview {",
          "1475:  s.SourceCodeType = v",
          "1476:  return s",
          "1477: }",
          "1480: func (s *CodeReview) SetState(v string) *CodeReview {",
          "1481:  s.State = &v",
          "1482:  return s",
          "1483: }",
          "1486: func (s *CodeReview) SetStateReason(v string) *CodeReview {",
          "1487:  s.StateReason = &v",
          "1488:  return s",
          "1489: }",
          "1492: func (s *CodeReview) SetType(v string) *CodeReview {",
          "1493:  s.Type = &v",
          "1494:  return s",
          "1495: }",
          "1498: type CodeReviewSummary struct {",
          "1502:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "1505:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1509:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1512:  MetricsSummary *MetricsSummary `type:\"structure\"`",
          "1515:  Name *string `min:\"1\" type:\"string\"`",
          "1518:  Owner *string `min:\"1\" type:\"string\"`",
          "1521:  ProviderType *string `type:\"string\" enum:\"ProviderType\"`",
          "1524:  PullRequestId *string `min:\"1\" type:\"string\"`",
          "1527:  RepositoryName *string `min:\"1\" type:\"string\"`",
          "1530:  State *string `type:\"string\" enum:\"JobState\"`",
          "1533:  Type *string `type:\"string\" enum:\"Type\"`",
          "1537: func (s CodeReviewSummary) String() string {",
          "1542: func (s CodeReviewSummary) GoString() string {",
          "1547: func (s *CodeReviewSummary) SetCodeReviewArn(v string) *CodeReviewSummary {",
          "1548:  s.CodeReviewArn = &v",
          "1553: func (s *CodeReviewSummary) SetCreatedTimeStamp(v time.Time) *CodeReviewSummary {",
          "1554:  s.CreatedTimeStamp = &v",
          "1555:  return s",
          "1556: }",
          "1559: func (s *CodeReviewSummary) SetLastUpdatedTimeStamp(v time.Time) *CodeReviewSummary {",
          "1560:  s.LastUpdatedTimeStamp = &v",
          "1561:  return s",
          "1562: }",
          "1565: func (s *CodeReviewSummary) SetMetricsSummary(v *MetricsSummary) *CodeReviewSummary {",
          "1566:  s.MetricsSummary = v",
          "1567:  return s",
          "1568: }",
          "1571: func (s *CodeReviewSummary) SetName(v string) *CodeReviewSummary {",
          "1572:  s.Name = &v",
          "1573:  return s",
          "1574: }",
          "1577: func (s *CodeReviewSummary) SetOwner(v string) *CodeReviewSummary {",
          "1578:  s.Owner = &v",
          "1579:  return s",
          "1580: }",
          "1583: func (s *CodeReviewSummary) SetProviderType(v string) *CodeReviewSummary {",
          "1584:  s.ProviderType = &v",
          "1585:  return s",
          "1586: }",
          "1589: func (s *CodeReviewSummary) SetPullRequestId(v string) *CodeReviewSummary {",
          "1590:  s.PullRequestId = &v",
          "1591:  return s",
          "1592: }",
          "1595: func (s *CodeReviewSummary) SetRepositoryName(v string) *CodeReviewSummary {",
          "1596:  s.RepositoryName = &v",
          "1597:  return s",
          "1598: }",
          "1601: func (s *CodeReviewSummary) SetState(v string) *CodeReviewSummary {",
          "1602:  s.State = &v",
          "1603:  return s",
          "1604: }",
          "1607: func (s *CodeReviewSummary) SetType(v string) *CodeReviewSummary {",
          "1608:  s.Type = &v",
          "1609:  return s",
          "1610: }",
          "1613: type CommitDiffSourceCodeType struct {",
          "1617:  DestinationCommit *string `min:\"6\" type:\"string\"`",
          "1620:  SourceCommit *string `min:\"6\" type:\"string\"`",
          "1624: func (s CommitDiffSourceCodeType) String() string {",
          "1629: func (s CommitDiffSourceCodeType) GoString() string {",
          "1634: func (s *CommitDiffSourceCodeType) SetDestinationCommit(v string) *CommitDiffSourceCodeType {",
          "1635:  s.DestinationCommit = &v",
          "1636:  return s",
          "1640: func (s *CommitDiffSourceCodeType) SetSourceCommit(v string) *CommitDiffSourceCodeType {",
          "1641:  s.SourceCommit = &v",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "678:  return \"\"",
          "679: }",
          "684: }",
          "688: }",
          "693: }",
          "698: }",
          "700: type DescribeRepositoryAssociationInput struct {",
          "701:  _ struct{} `type:\"structure\"`",
          "706:  AssociationArn *string `location:\"uri\" locationName:\"AssociationArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "682: func (s *ConflictException) OrigErr() error {",
          "683:  return nil",
          "686: func (s *ConflictException) Error() string {",
          "687:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "691: func (s *ConflictException) StatusCode() int {",
          "692:  return s.RespMetadata.StatusCode",
          "696: func (s *ConflictException) RequestID() string {",
          "697:  return s.RespMetadata.RequestID",
          "",
          "[Added Lines]",
          "1685: func (s *ConflictException) OrigErr() error {",
          "1686:  return nil",
          "1687: }",
          "1689: func (s *ConflictException) Error() string {",
          "1690:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1691: }",
          "1694: func (s *ConflictException) StatusCode() int {",
          "1695:  return s.RespMetadata.StatusCode",
          "1696: }",
          "1699: func (s *ConflictException) RequestID() string {",
          "1700:  return s.RespMetadata.RequestID",
          "1701: }",
          "1703: type DescribeCodeReviewInput struct {",
          "1704:  _ struct{} `type:\"structure\"`",
          "1709:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "1710: }",
          "1713: func (s DescribeCodeReviewInput) String() string {",
          "1714:  return awsutil.Prettify(s)",
          "1715: }",
          "1718: func (s DescribeCodeReviewInput) GoString() string {",
          "1719:  return s.String()",
          "1720: }",
          "1723: func (s *DescribeCodeReviewInput) Validate() error {",
          "1724:  invalidParams := request.ErrInvalidParams{Context: \"DescribeCodeReviewInput\"}",
          "1725:  if s.CodeReviewArn == nil {",
          "1726:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "1727:  }",
          "1728:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "1729:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "1730:  }",
          "1732:  if invalidParams.Len() > 0 {",
          "1733:   return invalidParams",
          "1734:  }",
          "1735:  return nil",
          "1736: }",
          "1739: func (s *DescribeCodeReviewInput) SetCodeReviewArn(v string) *DescribeCodeReviewInput {",
          "1740:  s.CodeReviewArn = &v",
          "1741:  return s",
          "1742: }",
          "1744: type DescribeCodeReviewOutput struct {",
          "1745:  _ struct{} `type:\"structure\"`",
          "1748:  CodeReview *CodeReview `type:\"structure\"`",
          "1749: }",
          "1752: func (s DescribeCodeReviewOutput) String() string {",
          "1753:  return awsutil.Prettify(s)",
          "1754: }",
          "1757: func (s DescribeCodeReviewOutput) GoString() string {",
          "1758:  return s.String()",
          "1759: }",
          "1762: func (s *DescribeCodeReviewOutput) SetCodeReview(v *CodeReview) *DescribeCodeReviewOutput {",
          "1763:  s.CodeReview = v",
          "1764:  return s",
          "1765: }",
          "1767: type DescribeRecommendationFeedbackInput struct {",
          "1768:  _ struct{} `type:\"structure\"`",
          "1773:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "1779:  RecommendationId *string `location:\"querystring\" locationName:\"RecommendationId\" min:\"1\" type:\"string\" required:\"true\"`",
          "1783:  UserId *string `location:\"querystring\" locationName:\"UserId\" min:\"1\" type:\"string\"`",
          "1784: }",
          "1787: func (s DescribeRecommendationFeedbackInput) String() string {",
          "1788:  return awsutil.Prettify(s)",
          "1789: }",
          "1792: func (s DescribeRecommendationFeedbackInput) GoString() string {",
          "1793:  return s.String()",
          "1794: }",
          "1797: func (s *DescribeRecommendationFeedbackInput) Validate() error {",
          "1798:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRecommendationFeedbackInput\"}",
          "1799:  if s.CodeReviewArn == nil {",
          "1800:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "1801:  }",
          "1802:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "1803:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "1804:  }",
          "1805:  if s.RecommendationId == nil {",
          "1806:   invalidParams.Add(request.NewErrParamRequired(\"RecommendationId\"))",
          "1807:  }",
          "1808:  if s.RecommendationId != nil && len(*s.RecommendationId) < 1 {",
          "1809:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationId\", 1))",
          "1810:  }",
          "1811:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "1812:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "1813:  }",
          "1815:  if invalidParams.Len() > 0 {",
          "1816:   return invalidParams",
          "1817:  }",
          "1818:  return nil",
          "1819: }",
          "1822: func (s *DescribeRecommendationFeedbackInput) SetCodeReviewArn(v string) *DescribeRecommendationFeedbackInput {",
          "1823:  s.CodeReviewArn = &v",
          "1824:  return s",
          "1825: }",
          "1828: func (s *DescribeRecommendationFeedbackInput) SetRecommendationId(v string) *DescribeRecommendationFeedbackInput {",
          "1829:  s.RecommendationId = &v",
          "1830:  return s",
          "1831: }",
          "1834: func (s *DescribeRecommendationFeedbackInput) SetUserId(v string) *DescribeRecommendationFeedbackInput {",
          "1835:  s.UserId = &v",
          "1836:  return s",
          "1837: }",
          "1839: type DescribeRecommendationFeedbackOutput struct {",
          "1840:  _ struct{} `type:\"structure\"`",
          "1843:  RecommendationFeedback *RecommendationFeedback `type:\"structure\"`",
          "1847: func (s DescribeRecommendationFeedbackOutput) String() string {",
          "1848:  return awsutil.Prettify(s)",
          "1852: func (s DescribeRecommendationFeedbackOutput) GoString() string {",
          "1853:  return s.String()",
          "1857: func (s *DescribeRecommendationFeedbackOutput) SetRecommendationFeedback(v *RecommendationFeedback) *DescribeRecommendationFeedbackOutput {",
          "1858:  s.RecommendationFeedback = v",
          "1859:  return s",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "881:  return s.RespMetadata.RequestID",
          "882: }",
          "884: type ListRepositoryAssociationsInput struct {",
          "885:  _ struct{} `type:\"structure\"`",
          "895:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "898:  Names []*string `location:\"querystring\" locationName:\"Name\" min:\"1\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2047: type ListCodeReviewsInput struct {",
          "2048:  _ struct{} `type:\"structure\"`",
          "2052:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2058:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2063:  ProviderTypes []*string `location:\"querystring\" locationName:\"ProviderTypes\" min:\"1\" type:\"list\"`",
          "2067:  RepositoryNames []*string `location:\"querystring\" locationName:\"RepositoryNames\" min:\"1\" type:\"list\"`",
          "2072:  States []*string `location:\"querystring\" locationName:\"States\" min:\"1\" type:\"list\"`",
          "2077:  Type *string `location:\"querystring\" locationName:\"Type\" type:\"string\" required:\"true\" enum:\"Type\"`",
          "2078: }",
          "2081: func (s ListCodeReviewsInput) String() string {",
          "2082:  return awsutil.Prettify(s)",
          "2083: }",
          "2086: func (s ListCodeReviewsInput) GoString() string {",
          "2087:  return s.String()",
          "2088: }",
          "2091: func (s *ListCodeReviewsInput) Validate() error {",
          "2092:  invalidParams := request.ErrInvalidParams{Context: \"ListCodeReviewsInput\"}",
          "2093:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2094:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2095:  }",
          "2096:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2097:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2098:  }",
          "2099:  if s.ProviderTypes != nil && len(s.ProviderTypes) < 1 {",
          "2100:   invalidParams.Add(request.NewErrParamMinLen(\"ProviderTypes\", 1))",
          "2101:  }",
          "2102:  if s.RepositoryNames != nil && len(s.RepositoryNames) < 1 {",
          "2103:   invalidParams.Add(request.NewErrParamMinLen(\"RepositoryNames\", 1))",
          "2104:  }",
          "2105:  if s.States != nil && len(s.States) < 1 {",
          "2106:   invalidParams.Add(request.NewErrParamMinLen(\"States\", 1))",
          "2107:  }",
          "2108:  if s.Type == nil {",
          "2109:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "2110:  }",
          "2112:  if invalidParams.Len() > 0 {",
          "2113:   return invalidParams",
          "2114:  }",
          "2115:  return nil",
          "2116: }",
          "2119: func (s *ListCodeReviewsInput) SetMaxResults(v int64) *ListCodeReviewsInput {",
          "2120:  s.MaxResults = &v",
          "2121:  return s",
          "2122: }",
          "2125: func (s *ListCodeReviewsInput) SetNextToken(v string) *ListCodeReviewsInput {",
          "2126:  s.NextToken = &v",
          "2127:  return s",
          "2128: }",
          "2131: func (s *ListCodeReviewsInput) SetProviderTypes(v []*string) *ListCodeReviewsInput {",
          "2132:  s.ProviderTypes = v",
          "2133:  return s",
          "2134: }",
          "2137: func (s *ListCodeReviewsInput) SetRepositoryNames(v []*string) *ListCodeReviewsInput {",
          "2138:  s.RepositoryNames = v",
          "2139:  return s",
          "2140: }",
          "2143: func (s *ListCodeReviewsInput) SetStates(v []*string) *ListCodeReviewsInput {",
          "2144:  s.States = v",
          "2145:  return s",
          "2146: }",
          "2149: func (s *ListCodeReviewsInput) SetType(v string) *ListCodeReviewsInput {",
          "2150:  s.Type = &v",
          "2151:  return s",
          "2152: }",
          "2154: type ListCodeReviewsOutput struct {",
          "2155:  _ struct{} `type:\"structure\"`",
          "2158:  CodeReviewSummaries []*CodeReviewSummary `type:\"list\"`",
          "2161:  NextToken *string `min:\"1\" type:\"string\"`",
          "2162: }",
          "2165: func (s ListCodeReviewsOutput) String() string {",
          "2166:  return awsutil.Prettify(s)",
          "2167: }",
          "2170: func (s ListCodeReviewsOutput) GoString() string {",
          "2171:  return s.String()",
          "2172: }",
          "2175: func (s *ListCodeReviewsOutput) SetCodeReviewSummaries(v []*CodeReviewSummary) *ListCodeReviewsOutput {",
          "2176:  s.CodeReviewSummaries = v",
          "2177:  return s",
          "2178: }",
          "2181: func (s *ListCodeReviewsOutput) SetNextToken(v string) *ListCodeReviewsOutput {",
          "2182:  s.NextToken = &v",
          "2183:  return s",
          "2184: }",
          "2186: type ListRecommendationFeedbackInput struct {",
          "2187:  _ struct{} `type:\"structure\"`",
          "2192:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2196:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2202:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2207:  RecommendationIds []*string `location:\"querystring\" locationName:\"RecommendationIds\" min:\"1\" type:\"list\"`",
          "2212:  UserIds []*string `location:\"querystring\" locationName:\"UserIds\" min:\"1\" type:\"list\"`",
          "2213: }",
          "2216: func (s ListRecommendationFeedbackInput) String() string {",
          "2217:  return awsutil.Prettify(s)",
          "2218: }",
          "2221: func (s ListRecommendationFeedbackInput) GoString() string {",
          "2222:  return s.String()",
          "2223: }",
          "2226: func (s *ListRecommendationFeedbackInput) Validate() error {",
          "2227:  invalidParams := request.ErrInvalidParams{Context: \"ListRecommendationFeedbackInput\"}",
          "2228:  if s.CodeReviewArn == nil {",
          "2229:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2230:  }",
          "2231:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2232:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2233:  }",
          "2234:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2235:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2236:  }",
          "2237:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2238:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2239:  }",
          "2240:  if s.RecommendationIds != nil && len(s.RecommendationIds) < 1 {",
          "2241:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationIds\", 1))",
          "2242:  }",
          "2243:  if s.UserIds != nil && len(s.UserIds) < 1 {",
          "2244:   invalidParams.Add(request.NewErrParamMinLen(\"UserIds\", 1))",
          "2245:  }",
          "2247:  if invalidParams.Len() > 0 {",
          "2248:   return invalidParams",
          "2249:  }",
          "2250:  return nil",
          "2251: }",
          "2254: func (s *ListRecommendationFeedbackInput) SetCodeReviewArn(v string) *ListRecommendationFeedbackInput {",
          "2255:  s.CodeReviewArn = &v",
          "2256:  return s",
          "2257: }",
          "2260: func (s *ListRecommendationFeedbackInput) SetMaxResults(v int64) *ListRecommendationFeedbackInput {",
          "2261:  s.MaxResults = &v",
          "2262:  return s",
          "2263: }",
          "2266: func (s *ListRecommendationFeedbackInput) SetNextToken(v string) *ListRecommendationFeedbackInput {",
          "2267:  s.NextToken = &v",
          "2268:  return s",
          "2269: }",
          "2272: func (s *ListRecommendationFeedbackInput) SetRecommendationIds(v []*string) *ListRecommendationFeedbackInput {",
          "2273:  s.RecommendationIds = v",
          "2274:  return s",
          "2275: }",
          "2278: func (s *ListRecommendationFeedbackInput) SetUserIds(v []*string) *ListRecommendationFeedbackInput {",
          "2279:  s.UserIds = v",
          "2280:  return s",
          "2281: }",
          "2283: type ListRecommendationFeedbackOutput struct {",
          "2284:  _ struct{} `type:\"structure\"`",
          "2290:  NextToken *string `min:\"1\" type:\"string\"`",
          "2293:  RecommendationFeedbackSummaries []*RecommendationFeedbackSummary `type:\"list\"`",
          "2294: }",
          "2297: func (s ListRecommendationFeedbackOutput) String() string {",
          "2298:  return awsutil.Prettify(s)",
          "2299: }",
          "2302: func (s ListRecommendationFeedbackOutput) GoString() string {",
          "2303:  return s.String()",
          "2304: }",
          "2307: func (s *ListRecommendationFeedbackOutput) SetNextToken(v string) *ListRecommendationFeedbackOutput {",
          "2308:  s.NextToken = &v",
          "2309:  return s",
          "2310: }",
          "2313: func (s *ListRecommendationFeedbackOutput) SetRecommendationFeedbackSummaries(v []*RecommendationFeedbackSummary) *ListRecommendationFeedbackOutput {",
          "2314:  s.RecommendationFeedbackSummaries = v",
          "2315:  return s",
          "2316: }",
          "2318: type ListRecommendationsInput struct {",
          "2319:  _ struct{} `type:\"structure\"`",
          "2324:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2328:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2331:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2332: }",
          "2335: func (s ListRecommendationsInput) String() string {",
          "2336:  return awsutil.Prettify(s)",
          "2337: }",
          "2340: func (s ListRecommendationsInput) GoString() string {",
          "2341:  return s.String()",
          "2342: }",
          "2345: func (s *ListRecommendationsInput) Validate() error {",
          "2346:  invalidParams := request.ErrInvalidParams{Context: \"ListRecommendationsInput\"}",
          "2347:  if s.CodeReviewArn == nil {",
          "2348:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2349:  }",
          "2350:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2351:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2352:  }",
          "2353:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2354:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2355:  }",
          "2356:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2357:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2358:  }",
          "2360:  if invalidParams.Len() > 0 {",
          "2361:   return invalidParams",
          "2362:  }",
          "2363:  return nil",
          "2364: }",
          "2367: func (s *ListRecommendationsInput) SetCodeReviewArn(v string) *ListRecommendationsInput {",
          "2368:  s.CodeReviewArn = &v",
          "2369:  return s",
          "2370: }",
          "2373: func (s *ListRecommendationsInput) SetMaxResults(v int64) *ListRecommendationsInput {",
          "2374:  s.MaxResults = &v",
          "2375:  return s",
          "2376: }",
          "2379: func (s *ListRecommendationsInput) SetNextToken(v string) *ListRecommendationsInput {",
          "2380:  s.NextToken = &v",
          "2381:  return s",
          "2382: }",
          "2384: type ListRecommendationsOutput struct {",
          "2385:  _ struct{} `type:\"structure\"`",
          "2388:  NextToken *string `min:\"1\" type:\"string\"`",
          "2391:  RecommendationSummaries []*RecommendationSummary `type:\"list\"`",
          "2392: }",
          "2395: func (s ListRecommendationsOutput) String() string {",
          "2396:  return awsutil.Prettify(s)",
          "2397: }",
          "2400: func (s ListRecommendationsOutput) GoString() string {",
          "2401:  return s.String()",
          "2402: }",
          "2405: func (s *ListRecommendationsOutput) SetNextToken(v string) *ListRecommendationsOutput {",
          "2406:  s.NextToken = &v",
          "2407:  return s",
          "2408: }",
          "2411: func (s *ListRecommendationsOutput) SetRecommendationSummaries(v []*RecommendationSummary) *ListRecommendationsOutput {",
          "2412:  s.RecommendationSummaries = v",
          "2413:  return s",
          "2414: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1026:  return s",
          "1027: }",
          "1030: type NotFoundException struct {",
          "1031:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2562: type Metrics struct {",
          "2563:  _ struct{} `type:\"structure\"`",
          "2566:  FindingsCount *int64 `type:\"long\"`",
          "2569:  MeteredLinesOfCodeCount *int64 `type:\"long\"`",
          "2570: }",
          "2573: func (s Metrics) String() string {",
          "2574:  return awsutil.Prettify(s)",
          "2575: }",
          "2578: func (s Metrics) GoString() string {",
          "2579:  return s.String()",
          "2580: }",
          "2583: func (s *Metrics) SetFindingsCount(v int64) *Metrics {",
          "2584:  s.FindingsCount = &v",
          "2585:  return s",
          "2586: }",
          "2589: func (s *Metrics) SetMeteredLinesOfCodeCount(v int64) *Metrics {",
          "2590:  s.MeteredLinesOfCodeCount = &v",
          "2591:  return s",
          "2592: }",
          "2595: type MetricsSummary struct {",
          "2596:  _ struct{} `type:\"structure\"`",
          "2599:  FindingsCount *int64 `type:\"long\"`",
          "2602:  MeteredLinesOfCodeCount *int64 `type:\"long\"`",
          "2603: }",
          "2606: func (s MetricsSummary) String() string {",
          "2607:  return awsutil.Prettify(s)",
          "2608: }",
          "2611: func (s MetricsSummary) GoString() string {",
          "2612:  return s.String()",
          "2613: }",
          "2616: func (s *MetricsSummary) SetFindingsCount(v int64) *MetricsSummary {",
          "2617:  s.FindingsCount = &v",
          "2618:  return s",
          "2619: }",
          "2622: func (s *MetricsSummary) SetMeteredLinesOfCodeCount(v int64) *MetricsSummary {",
          "2623:  s.MeteredLinesOfCodeCount = &v",
          "2624:  return s",
          "2625: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1082:  return s.RespMetadata.RequestID",
          "1083: }",
          "1086: type Repository struct {",
          "1087:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2683: type PutRecommendationFeedbackInput struct {",
          "2684:  _ struct{} `type:\"structure\"`",
          "2689:  CodeReviewArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2695:  Reactions []*string `type:\"list\" required:\"true\"`",
          "2701:  RecommendationId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2702: }",
          "2705: func (s PutRecommendationFeedbackInput) String() string {",
          "2706:  return awsutil.Prettify(s)",
          "2707: }",
          "2710: func (s PutRecommendationFeedbackInput) GoString() string {",
          "2711:  return s.String()",
          "2712: }",
          "2715: func (s *PutRecommendationFeedbackInput) Validate() error {",
          "2716:  invalidParams := request.ErrInvalidParams{Context: \"PutRecommendationFeedbackInput\"}",
          "2717:  if s.CodeReviewArn == nil {",
          "2718:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2719:  }",
          "2720:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2721:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2722:  }",
          "2723:  if s.Reactions == nil {",
          "2724:   invalidParams.Add(request.NewErrParamRequired(\"Reactions\"))",
          "2725:  }",
          "2726:  if s.RecommendationId == nil {",
          "2727:   invalidParams.Add(request.NewErrParamRequired(\"RecommendationId\"))",
          "2728:  }",
          "2729:  if s.RecommendationId != nil && len(*s.RecommendationId) < 1 {",
          "2730:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationId\", 1))",
          "2731:  }",
          "2733:  if invalidParams.Len() > 0 {",
          "2734:   return invalidParams",
          "2735:  }",
          "2736:  return nil",
          "2737: }",
          "2740: func (s *PutRecommendationFeedbackInput) SetCodeReviewArn(v string) *PutRecommendationFeedbackInput {",
          "2741:  s.CodeReviewArn = &v",
          "2742:  return s",
          "2743: }",
          "2746: func (s *PutRecommendationFeedbackInput) SetReactions(v []*string) *PutRecommendationFeedbackInput {",
          "2747:  s.Reactions = v",
          "2748:  return s",
          "2749: }",
          "2752: func (s *PutRecommendationFeedbackInput) SetRecommendationId(v string) *PutRecommendationFeedbackInput {",
          "2753:  s.RecommendationId = &v",
          "2754:  return s",
          "2755: }",
          "2757: type PutRecommendationFeedbackOutput struct {",
          "2758:  _ struct{} `type:\"structure\"`",
          "2759: }",
          "2762: func (s PutRecommendationFeedbackOutput) String() string {",
          "2763:  return awsutil.Prettify(s)",
          "2764: }",
          "2767: func (s PutRecommendationFeedbackOutput) GoString() string {",
          "2768:  return s.String()",
          "2769: }",
          "2772: type RecommendationFeedback struct {",
          "2773:  _ struct{} `type:\"structure\"`",
          "2776:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "2779:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "2782:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "2786:  Reactions []*string `type:\"list\"`",
          "2790:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2793:  UserId *string `min:\"1\" type:\"string\"`",
          "2794: }",
          "2797: func (s RecommendationFeedback) String() string {",
          "2798:  return awsutil.Prettify(s)",
          "2799: }",
          "2802: func (s RecommendationFeedback) GoString() string {",
          "2803:  return s.String()",
          "2804: }",
          "2807: func (s *RecommendationFeedback) SetCodeReviewArn(v string) *RecommendationFeedback {",
          "2808:  s.CodeReviewArn = &v",
          "2809:  return s",
          "2810: }",
          "2813: func (s *RecommendationFeedback) SetCreatedTimeStamp(v time.Time) *RecommendationFeedback {",
          "2814:  s.CreatedTimeStamp = &v",
          "2815:  return s",
          "2816: }",
          "2819: func (s *RecommendationFeedback) SetLastUpdatedTimeStamp(v time.Time) *RecommendationFeedback {",
          "2820:  s.LastUpdatedTimeStamp = &v",
          "2821:  return s",
          "2822: }",
          "2825: func (s *RecommendationFeedback) SetReactions(v []*string) *RecommendationFeedback {",
          "2826:  s.Reactions = v",
          "2827:  return s",
          "2828: }",
          "2831: func (s *RecommendationFeedback) SetRecommendationId(v string) *RecommendationFeedback {",
          "2832:  s.RecommendationId = &v",
          "2833:  return s",
          "2834: }",
          "2837: func (s *RecommendationFeedback) SetUserId(v string) *RecommendationFeedback {",
          "2838:  s.UserId = &v",
          "2839:  return s",
          "2840: }",
          "2843: type RecommendationFeedbackSummary struct {",
          "2844:  _ struct{} `type:\"structure\"`",
          "2847:  Reactions []*string `type:\"list\"`",
          "2851:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2854:  UserId *string `min:\"1\" type:\"string\"`",
          "2855: }",
          "2858: func (s RecommendationFeedbackSummary) String() string {",
          "2859:  return awsutil.Prettify(s)",
          "2860: }",
          "2863: func (s RecommendationFeedbackSummary) GoString() string {",
          "2864:  return s.String()",
          "2865: }",
          "2868: func (s *RecommendationFeedbackSummary) SetReactions(v []*string) *RecommendationFeedbackSummary {",
          "2869:  s.Reactions = v",
          "2870:  return s",
          "2871: }",
          "2874: func (s *RecommendationFeedbackSummary) SetRecommendationId(v string) *RecommendationFeedbackSummary {",
          "2875:  s.RecommendationId = &v",
          "2876:  return s",
          "2877: }",
          "2880: func (s *RecommendationFeedbackSummary) SetUserId(v string) *RecommendationFeedbackSummary {",
          "2881:  s.UserId = &v",
          "2882:  return s",
          "2883: }",
          "2886: type RecommendationSummary struct {",
          "2887:  _ struct{} `type:\"structure\"`",
          "2891:  Description *string `min:\"1\" type:\"string\"`",
          "2896:  EndLine *int64 `type:\"integer\"`",
          "2899:  FilePath *string `min:\"1\" type:\"string\"`",
          "2903:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2907:  StartLine *int64 `type:\"integer\"`",
          "2908: }",
          "2911: func (s RecommendationSummary) String() string {",
          "2912:  return awsutil.Prettify(s)",
          "2913: }",
          "2916: func (s RecommendationSummary) GoString() string {",
          "2917:  return s.String()",
          "2918: }",
          "2921: func (s *RecommendationSummary) SetDescription(v string) *RecommendationSummary {",
          "2922:  s.Description = &v",
          "2923:  return s",
          "2924: }",
          "2927: func (s *RecommendationSummary) SetEndLine(v int64) *RecommendationSummary {",
          "2928:  s.EndLine = &v",
          "2929:  return s",
          "2930: }",
          "2933: func (s *RecommendationSummary) SetFilePath(v string) *RecommendationSummary {",
          "2934:  s.FilePath = &v",
          "2935:  return s",
          "2936: }",
          "2939: func (s *RecommendationSummary) SetRecommendationId(v string) *RecommendationSummary {",
          "2940:  s.RecommendationId = &v",
          "2941:  return s",
          "2942: }",
          "2945: func (s *RecommendationSummary) SetStartLine(v int64) *RecommendationSummary {",
          "2946:  s.StartLine = &v",
          "2947:  return s",
          "2948: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1315:  return s",
          "1316: }",
          "1319: type ThrottlingException struct {",
          "1320:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3183: type ResourceNotFoundException struct {",
          "3184:  _            struct{}                  `type:\"structure\"`",
          "3185:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3187:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3188: }",
          "3191: func (s ResourceNotFoundException) String() string {",
          "3192:  return awsutil.Prettify(s)",
          "3193: }",
          "3196: func (s ResourceNotFoundException) GoString() string {",
          "3197:  return s.String()",
          "3198: }",
          "3200: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "3201:  return &ResourceNotFoundException{",
          "3202:   RespMetadata: v,",
          "3203:  }",
          "3204: }",
          "3207: func (s *ResourceNotFoundException) Code() string {",
          "3208:  return \"ResourceNotFoundException\"",
          "3209: }",
          "3212: func (s *ResourceNotFoundException) Message() string {",
          "3213:  if s.Message_ != nil {",
          "3214:   return *s.Message_",
          "3215:  }",
          "3216:  return \"\"",
          "3217: }",
          "3220: func (s *ResourceNotFoundException) OrigErr() error {",
          "3221:  return nil",
          "3222: }",
          "3224: func (s *ResourceNotFoundException) Error() string {",
          "3225:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3226: }",
          "3229: func (s *ResourceNotFoundException) StatusCode() int {",
          "3230:  return s.RespMetadata.StatusCode",
          "3231: }",
          "3234: func (s *ResourceNotFoundException) RequestID() string {",
          "3235:  return s.RespMetadata.RequestID",
          "3236: }",
          "3239: type SourceCodeType struct {",
          "3240:  _ struct{} `type:\"structure\"`",
          "3243:  CommitDiff *CommitDiffSourceCodeType `type:\"structure\"`",
          "3244: }",
          "3247: func (s SourceCodeType) String() string {",
          "3248:  return awsutil.Prettify(s)",
          "3249: }",
          "3252: func (s SourceCodeType) GoString() string {",
          "3253:  return s.String()",
          "3254: }",
          "3257: func (s *SourceCodeType) SetCommitDiff(v *CommitDiffSourceCodeType) *SourceCodeType {",
          "3258:  s.CommitDiff = v",
          "3259:  return s",
          "3260: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1427:  return s.RespMetadata.RequestID",
          "1428: }",
          "1430: const (",
          "1432:  ProviderTypeCodeCommit = \"CodeCommit\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3374: const (",
          "3376:  JobStateCompleted = \"Completed\"",
          "3379:  JobStatePending = \"Pending\"",
          "3382:  JobStateFailed = \"Failed\"",
          "3385:  JobStateDeleting = \"Deleting\"",
          "3386: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1435:  ProviderTypeGitHub = \"GitHub\"",
          "1436: )",
          "1438: const (",
          "1440:  RepositoryAssociationStateAssociated = \"Associated\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3396: const (",
          "3398:  ReactionThumbsUp = \"ThumbsUp\"",
          "3401:  ReactionThumbsDown = \"ThumbsDown\"",
          "3402: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1449:  RepositoryAssociationStateDisassociating = \"Disassociating\"",
          "1450: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3418: const (",
          "3420:  TypePullRequest = \"PullRequest\"",
          "3421: )",
          "",
          "---------------"
        ],
        "service/codegurureviewer/codegururevieweriface/interface.go||service/codegurureviewer/codegururevieweriface/interface.go": [
          "File: service/codegurureviewer/codegururevieweriface/interface.go -> service/codegurureviewer/codegururevieweriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  AssociateRepositoryWithContext(aws.Context, *codegurureviewer.AssociateRepositoryInput, ...request.Option) (*codegurureviewer.AssociateRepositoryOutput, error)",
          "65:  AssociateRepositoryRequest(*codegurureviewer.AssociateRepositoryInput) (*request.Request, *codegurureviewer.AssociateRepositoryOutput)",
          "67:  DescribeRepositoryAssociation(*codegurureviewer.DescribeRepositoryAssociationInput) (*codegurureviewer.DescribeRepositoryAssociationOutput, error)",
          "68:  DescribeRepositoryAssociationWithContext(aws.Context, *codegurureviewer.DescribeRepositoryAssociationInput, ...request.Option) (*codegurureviewer.DescribeRepositoryAssociationOutput, error)",
          "69:  DescribeRepositoryAssociationRequest(*codegurureviewer.DescribeRepositoryAssociationInput) (*request.Request, *codegurureviewer.DescribeRepositoryAssociationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  DescribeCodeReview(*codegurureviewer.DescribeCodeReviewInput) (*codegurureviewer.DescribeCodeReviewOutput, error)",
          "68:  DescribeCodeReviewWithContext(aws.Context, *codegurureviewer.DescribeCodeReviewInput, ...request.Option) (*codegurureviewer.DescribeCodeReviewOutput, error)",
          "69:  DescribeCodeReviewRequest(*codegurureviewer.DescribeCodeReviewInput) (*request.Request, *codegurureviewer.DescribeCodeReviewOutput)",
          "71:  DescribeRecommendationFeedback(*codegurureviewer.DescribeRecommendationFeedbackInput) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error)",
          "72:  DescribeRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.DescribeRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error)",
          "73:  DescribeRecommendationFeedbackRequest(*codegurureviewer.DescribeRecommendationFeedbackInput) (*request.Request, *codegurureviewer.DescribeRecommendationFeedbackOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  DisassociateRepositoryWithContext(aws.Context, *codegurureviewer.DisassociateRepositoryInput, ...request.Option) (*codegurureviewer.DisassociateRepositoryOutput, error)",
          "73:  DisassociateRepositoryRequest(*codegurureviewer.DisassociateRepositoryInput) (*request.Request, *codegurureviewer.DisassociateRepositoryOutput)",
          "75:  ListRepositoryAssociations(*codegurureviewer.ListRepositoryAssociationsInput) (*codegurureviewer.ListRepositoryAssociationsOutput, error)",
          "76:  ListRepositoryAssociationsWithContext(aws.Context, *codegurureviewer.ListRepositoryAssociationsInput, ...request.Option) (*codegurureviewer.ListRepositoryAssociationsOutput, error)",
          "77:  ListRepositoryAssociationsRequest(*codegurureviewer.ListRepositoryAssociationsInput) (*request.Request, *codegurureviewer.ListRepositoryAssociationsOutput)",
          "79:  ListRepositoryAssociationsPages(*codegurureviewer.ListRepositoryAssociationsInput, func(*codegurureviewer.ListRepositoryAssociationsOutput, bool) bool) error",
          "80:  ListRepositoryAssociationsPagesWithContext(aws.Context, *codegurureviewer.ListRepositoryAssociationsInput, func(*codegurureviewer.ListRepositoryAssociationsOutput, bool) bool, ...request.Option) error",
          "81: }",
          "83: var _ CodeGuruReviewerAPI = (*codegurureviewer.CodeGuruReviewer)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  ListCodeReviews(*codegurureviewer.ListCodeReviewsInput) (*codegurureviewer.ListCodeReviewsOutput, error)",
          "84:  ListCodeReviewsWithContext(aws.Context, *codegurureviewer.ListCodeReviewsInput, ...request.Option) (*codegurureviewer.ListCodeReviewsOutput, error)",
          "85:  ListCodeReviewsRequest(*codegurureviewer.ListCodeReviewsInput) (*request.Request, *codegurureviewer.ListCodeReviewsOutput)",
          "87:  ListCodeReviewsPages(*codegurureviewer.ListCodeReviewsInput, func(*codegurureviewer.ListCodeReviewsOutput, bool) bool) error",
          "88:  ListCodeReviewsPagesWithContext(aws.Context, *codegurureviewer.ListCodeReviewsInput, func(*codegurureviewer.ListCodeReviewsOutput, bool) bool, ...request.Option) error",
          "90:  ListRecommendationFeedback(*codegurureviewer.ListRecommendationFeedbackInput) (*codegurureviewer.ListRecommendationFeedbackOutput, error)",
          "91:  ListRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.ListRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.ListRecommendationFeedbackOutput, error)",
          "92:  ListRecommendationFeedbackRequest(*codegurureviewer.ListRecommendationFeedbackInput) (*request.Request, *codegurureviewer.ListRecommendationFeedbackOutput)",
          "94:  ListRecommendationFeedbackPages(*codegurureviewer.ListRecommendationFeedbackInput, func(*codegurureviewer.ListRecommendationFeedbackOutput, bool) bool) error",
          "95:  ListRecommendationFeedbackPagesWithContext(aws.Context, *codegurureviewer.ListRecommendationFeedbackInput, func(*codegurureviewer.ListRecommendationFeedbackOutput, bool) bool, ...request.Option) error",
          "97:  ListRecommendations(*codegurureviewer.ListRecommendationsInput) (*codegurureviewer.ListRecommendationsOutput, error)",
          "98:  ListRecommendationsWithContext(aws.Context, *codegurureviewer.ListRecommendationsInput, ...request.Option) (*codegurureviewer.ListRecommendationsOutput, error)",
          "99:  ListRecommendationsRequest(*codegurureviewer.ListRecommendationsInput) (*request.Request, *codegurureviewer.ListRecommendationsOutput)",
          "101:  ListRecommendationsPages(*codegurureviewer.ListRecommendationsInput, func(*codegurureviewer.ListRecommendationsOutput, bool) bool) error",
          "102:  ListRecommendationsPagesWithContext(aws.Context, *codegurureviewer.ListRecommendationsInput, func(*codegurureviewer.ListRecommendationsOutput, bool) bool, ...request.Option) error",
          "111:  PutRecommendationFeedback(*codegurureviewer.PutRecommendationFeedbackInput) (*codegurureviewer.PutRecommendationFeedbackOutput, error)",
          "112:  PutRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.PutRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.PutRecommendationFeedbackOutput, error)",
          "113:  PutRecommendationFeedbackRequest(*codegurureviewer.PutRecommendationFeedbackInput) (*request.Request, *codegurureviewer.PutRecommendationFeedbackOutput)",
          "",
          "---------------"
        ],
        "service/codegurureviewer/errors.go||service/codegurureviewer/errors.go": [
          "File: service/codegurureviewer/errors.go -> service/codegurureviewer/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  ErrCodeNotFoundException = \"NotFoundException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: )",
          "50: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "57: }",
          "",
          "[Removed Lines]",
          "51:  \"AccessDeniedException\":   newErrorAccessDeniedException,",
          "52:  \"ConflictException\":       newErrorConflictException,",
          "53:  \"InternalServerException\": newErrorInternalServerException,",
          "54:  \"NotFoundException\":       newErrorNotFoundException,",
          "55:  \"ThrottlingException\":     newErrorThrottlingException,",
          "56:  \"ValidationException\":     newErrorValidationException,",
          "",
          "[Added Lines]",
          "57:  \"AccessDeniedException\":     newErrorAccessDeniedException,",
          "58:  \"ConflictException\":         newErrorConflictException,",
          "59:  \"InternalServerException\":   newErrorInternalServerException,",
          "60:  \"NotFoundException\":         newErrorNotFoundException,",
          "61:  \"ResourceNotFoundException\": newErrorResourceNotFoundException,",
          "62:  \"ThrottlingException\":       newErrorThrottlingException,",
          "63:  \"ValidationException\":       newErrorValidationException,",
          "",
          "---------------"
        ],
        "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go": [
          "File: service/elasticsearchservice/api.go -> service/elasticsearchservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8222:  NewVersion *string `type:\"string\"`",
          "8226:  UpdateAvailable *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8226:  OptionalDeployment *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8270:  return s",
          "8271: }",
          "8274: func (s *ServiceSoftwareOptions) SetUpdateAvailable(v bool) *ServiceSoftwareOptions {",
          "8275:  s.UpdateAvailable = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8278: func (s *ServiceSoftwareOptions) SetOptionalDeployment(v bool) *ServiceSoftwareOptions {",
          "8279:  s.OptionalDeployment = &v",
          "8280:  return s",
          "8281: }",
          "",
          "---------------"
        ],
        "service/fms/api.go||service/fms/api.go": [
          "File: service/fms/api.go -> service/fms/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4180: const (",
          "4182:  CustomerPolicyScopeIdTypeAccount = \"ACCOUNT\"",
          "4183: )",
          "4185: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4209:  CustomerPolicyScopeIdTypeOrgUnit = \"ORG_UNIT\"",
          "",
          "---------------"
        ],
        "service/redshift/api.go||service/redshift/api.go": [
          "File: service/redshift/api.go -> service/redshift/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1983:  return out, req.Send()",
          "1984: }",
          "1986: const opDeleteCluster = \"DeleteCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1986: const opCreateUsageLimit = \"CreateUsageLimit\"",
          "2012: func (c *Redshift) CreateUsageLimitRequest(input *CreateUsageLimitInput) (req *request.Request, output *CreateUsageLimitOutput) {",
          "2013:  op := &request.Operation{",
          "2014:   Name:       opCreateUsageLimit,",
          "2015:   HTTPMethod: \"POST\",",
          "2016:   HTTPPath:   \"/\",",
          "2017:  }",
          "2019:  if input == nil {",
          "2020:   input = &CreateUsageLimitInput{}",
          "2021:  }",
          "2023:  output = &CreateUsageLimitOutput{}",
          "2024:  req = c.newRequest(op, input, output)",
          "2025:  return",
          "2026: }",
          "2063: func (c *Redshift) CreateUsageLimit(input *CreateUsageLimitInput) (*CreateUsageLimitOutput, error) {",
          "2064:  req, out := c.CreateUsageLimitRequest(input)",
          "2065:  return out, req.Send()",
          "2066: }",
          "2077: func (c *Redshift) CreateUsageLimitWithContext(ctx aws.Context, input *CreateUsageLimitInput, opts ...request.Option) (*CreateUsageLimitOutput, error) {",
          "2078:  req, out := c.CreateUsageLimitRequest(input)",
          "2079:  req.SetContext(ctx)",
          "2080:  req.ApplyOptions(opts...)",
          "2081:  return out, req.Send()",
          "2082: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3038:  return out, req.Send()",
          "3039: }",
          "3041: const opDescribeAccountAttributes = \"DescribeAccountAttributes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3139: const opDeleteUsageLimit = \"DeleteUsageLimit\"",
          "3165: func (c *Redshift) DeleteUsageLimitRequest(input *DeleteUsageLimitInput) (req *request.Request, output *DeleteUsageLimitOutput) {",
          "3166:  op := &request.Operation{",
          "3167:   Name:       opDeleteUsageLimit,",
          "3168:   HTTPMethod: \"POST\",",
          "3169:   HTTPPath:   \"/\",",
          "3170:  }",
          "3172:  if input == nil {",
          "3173:   input = &DeleteUsageLimitInput{}",
          "3174:  }",
          "3176:  output = &DeleteUsageLimitOutput{}",
          "3177:  req = c.newRequest(op, input, output)",
          "3178:  req.Handlers.Unmarshal.Swap(query.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3179:  return",
          "3180: }",
          "3201: func (c *Redshift) DeleteUsageLimit(input *DeleteUsageLimitInput) (*DeleteUsageLimitOutput, error) {",
          "3202:  req, out := c.DeleteUsageLimitRequest(input)",
          "3203:  return out, req.Send()",
          "3204: }",
          "3215: func (c *Redshift) DeleteUsageLimitWithContext(ctx aws.Context, input *DeleteUsageLimitInput, opts ...request.Option) (*DeleteUsageLimitOutput, error) {",
          "3216:  req, out := c.DeleteUsageLimitRequest(input)",
          "3217:  req.SetContext(ctx)",
          "3218:  req.ApplyOptions(opts...)",
          "3219:  return out, req.Send()",
          "3220: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6459:  return out, req.Send()",
          "6460: }",
          "6462: const opDisableLogging = \"DisableLogging\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6643: const opDescribeUsageLimits = \"DescribeUsageLimits\"",
          "6669: func (c *Redshift) DescribeUsageLimitsRequest(input *DescribeUsageLimitsInput) (req *request.Request, output *DescribeUsageLimitsOutput) {",
          "6670:  op := &request.Operation{",
          "6671:   Name:       opDescribeUsageLimits,",
          "6672:   HTTPMethod: \"POST\",",
          "6673:   HTTPPath:   \"/\",",
          "6674:   Paginator: &request.Paginator{",
          "6675:    InputTokens:     []string{\"Marker\"},",
          "6676:    OutputTokens:    []string{\"Marker\"},",
          "6677:    LimitToken:      \"MaxRecords\",",
          "6678:    TruncationToken: \"\",",
          "6679:   },",
          "6680:  }",
          "6682:  if input == nil {",
          "6683:   input = &DescribeUsageLimitsInput{}",
          "6684:  }",
          "6686:  output = &DescribeUsageLimitsOutput{}",
          "6687:  req = c.newRequest(op, input, output)",
          "6688:  return",
          "6689: }",
          "6724: func (c *Redshift) DescribeUsageLimits(input *DescribeUsageLimitsInput) (*DescribeUsageLimitsOutput, error) {",
          "6725:  req, out := c.DescribeUsageLimitsRequest(input)",
          "6726:  return out, req.Send()",
          "6727: }",
          "6738: func (c *Redshift) DescribeUsageLimitsWithContext(ctx aws.Context, input *DescribeUsageLimitsInput, opts ...request.Option) (*DescribeUsageLimitsOutput, error) {",
          "6739:  req, out := c.DescribeUsageLimitsRequest(input)",
          "6740:  req.SetContext(ctx)",
          "6741:  req.ApplyOptions(opts...)",
          "6742:  return out, req.Send()",
          "6743: }",
          "6762: func (c *Redshift) DescribeUsageLimitsPages(input *DescribeUsageLimitsInput, fn func(*DescribeUsageLimitsOutput, bool) bool) error {",
          "6763:  return c.DescribeUsageLimitsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "6764: }",
          "6773: func (c *Redshift) DescribeUsageLimitsPagesWithContext(ctx aws.Context, input *DescribeUsageLimitsInput, fn func(*DescribeUsageLimitsOutput, bool) bool, opts ...request.Option) error {",
          "6774:  p := request.Pagination{",
          "6775:   NewRequest: func() (*request.Request, error) {",
          "6776:    var inCpy *DescribeUsageLimitsInput",
          "6777:    if input != nil {",
          "6778:     tmp := *input",
          "6779:     inCpy = &tmp",
          "6780:    }",
          "6781:    req, _ := c.DescribeUsageLimitsRequest(inCpy)",
          "6782:    req.SetContext(ctx)",
          "6783:    req.ApplyOptions(opts...)",
          "6784:    return req, nil",
          "6785:   },",
          "6786:  }",
          "6788:  for p.Next() {",
          "6789:   if !fn(p.Page().(*DescribeUsageLimitsOutput), !p.HasNextPage()) {",
          "6790:    break",
          "6791:   }",
          "6792:  }",
          "6794:  return p.Err()",
          "6795: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8205:  return out, req.Send()",
          "8206: }",
          "8235:  op := &request.Operation{",
          "8237:   HTTPMethod: \"POST\",",
          "8238:   HTTPPath:   \"/\",",
          "8239:  }",
          "8241:  if input == nil {",
          "8243:  }",
          "8246:  req = c.newRequest(op, input, output)",
          "8247:  return",
          "8248: }",
          "",
          "[Removed Lines]",
          "8208: const opPauseCluster = \"PauseCluster\"",
          "8234: func (c *Redshift) PauseClusterRequest(input *PauseClusterInput) (req *request.Request, output *PauseClusterOutput) {",
          "8236:   Name:       opPauseCluster,",
          "8242:   input = &PauseClusterInput{}",
          "8245:  output = &PauseClusterOutput{}",
          "",
          "[Added Lines]",
          "8543: const opModifyUsageLimit = \"ModifyUsageLimit\"",
          "8569: func (c *Redshift) ModifyUsageLimitRequest(input *ModifyUsageLimitInput) (req *request.Request, output *ModifyUsageLimitOutput) {",
          "8571:   Name:       opModifyUsageLimit,",
          "8577:   input = &ModifyUsageLimitInput{}",
          "8580:  output = &ModifyUsageLimitOutput{}",
          "8608: func (c *Redshift) ModifyUsageLimit(input *ModifyUsageLimitInput) (*ModifyUsageLimitOutput, error) {",
          "8609:  req, out := c.ModifyUsageLimitRequest(input)",
          "8610:  return out, req.Send()",
          "8611: }",
          "8622: func (c *Redshift) ModifyUsageLimitWithContext(ctx aws.Context, input *ModifyUsageLimitInput, opts ...request.Option) (*ModifyUsageLimitOutput, error) {",
          "8623:  req, out := c.ModifyUsageLimitRequest(input)",
          "8624:  req.SetContext(ctx)",
          "8625:  req.ApplyOptions(opts...)",
          "8626:  return out, req.Send()",
          "8627: }",
          "8629: const opPauseCluster = \"PauseCluster\"",
          "8655: func (c *Redshift) PauseClusterRequest(input *PauseClusterInput) (req *request.Request, output *PauseClusterOutput) {",
          "8656:  op := &request.Operation{",
          "8657:   Name:       opPauseCluster,",
          "8658:   HTTPMethod: \"POST\",",
          "8659:   HTTPPath:   \"/\",",
          "8660:  }",
          "8662:  if input == nil {",
          "8663:   input = &PauseClusterInput{}",
          "8664:  }",
          "8666:  output = &PauseClusterOutput{}",
          "8667:  req = c.newRequest(op, input, output)",
          "8668:  return",
          "8669: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "13285:  return s.String()",
          "13286: }",
          "13290: type DataTransferProgress struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13709: type CreateUsageLimitInput struct {",
          "13710:  _ struct{} `type:\"structure\"`",
          "13716:  Amount *int64 `type:\"long\" required:\"true\"`",
          "13720:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "13725:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "13730:  FeatureType *string `type:\"string\" required:\"true\" enum:\"UsageLimitFeatureType\"`",
          "13738:  LimitType *string `type:\"string\" required:\"true\" enum:\"UsageLimitLimitType\"`",
          "13742:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "13745:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "13746: }",
          "13749: func (s CreateUsageLimitInput) String() string {",
          "13750:  return awsutil.Prettify(s)",
          "13751: }",
          "13754: func (s CreateUsageLimitInput) GoString() string {",
          "13755:  return s.String()",
          "13756: }",
          "13759: func (s *CreateUsageLimitInput) Validate() error {",
          "13760:  invalidParams := request.ErrInvalidParams{Context: \"CreateUsageLimitInput\"}",
          "13761:  if s.Amount == nil {",
          "13762:   invalidParams.Add(request.NewErrParamRequired(\"Amount\"))",
          "13763:  }",
          "13764:  if s.ClusterIdentifier == nil {",
          "13765:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "13766:  }",
          "13767:  if s.FeatureType == nil {",
          "13768:   invalidParams.Add(request.NewErrParamRequired(\"FeatureType\"))",
          "13769:  }",
          "13770:  if s.LimitType == nil {",
          "13771:   invalidParams.Add(request.NewErrParamRequired(\"LimitType\"))",
          "13772:  }",
          "13774:  if invalidParams.Len() > 0 {",
          "13775:   return invalidParams",
          "13776:  }",
          "13777:  return nil",
          "13778: }",
          "13781: func (s *CreateUsageLimitInput) SetAmount(v int64) *CreateUsageLimitInput {",
          "13782:  s.Amount = &v",
          "13783:  return s",
          "13784: }",
          "13787: func (s *CreateUsageLimitInput) SetBreachAction(v string) *CreateUsageLimitInput {",
          "13788:  s.BreachAction = &v",
          "13789:  return s",
          "13790: }",
          "13793: func (s *CreateUsageLimitInput) SetClusterIdentifier(v string) *CreateUsageLimitInput {",
          "13794:  s.ClusterIdentifier = &v",
          "13795:  return s",
          "13796: }",
          "13799: func (s *CreateUsageLimitInput) SetFeatureType(v string) *CreateUsageLimitInput {",
          "13800:  s.FeatureType = &v",
          "13801:  return s",
          "13802: }",
          "13805: func (s *CreateUsageLimitInput) SetLimitType(v string) *CreateUsageLimitInput {",
          "13806:  s.LimitType = &v",
          "13807:  return s",
          "13808: }",
          "13811: func (s *CreateUsageLimitInput) SetPeriod(v string) *CreateUsageLimitInput {",
          "13812:  s.Period = &v",
          "13813:  return s",
          "13814: }",
          "13817: func (s *CreateUsageLimitInput) SetTags(v []*Tag) *CreateUsageLimitInput {",
          "13818:  s.Tags = v",
          "13819:  return s",
          "13820: }",
          "13823: type CreateUsageLimitOutput struct {",
          "13824:  _ struct{} `type:\"structure\"`",
          "13828:  Amount *int64 `type:\"long\"`",
          "13838:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "13841:  ClusterIdentifier *string `type:\"string\"`",
          "13844:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "13848:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "13852:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "13855:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "13858:  UsageLimitId *string `type:\"string\"`",
          "13859: }",
          "13862: func (s CreateUsageLimitOutput) String() string {",
          "13863:  return awsutil.Prettify(s)",
          "13864: }",
          "13867: func (s CreateUsageLimitOutput) GoString() string {",
          "13868:  return s.String()",
          "13869: }",
          "13872: func (s *CreateUsageLimitOutput) SetAmount(v int64) *CreateUsageLimitOutput {",
          "13873:  s.Amount = &v",
          "13874:  return s",
          "13875: }",
          "13878: func (s *CreateUsageLimitOutput) SetBreachAction(v string) *CreateUsageLimitOutput {",
          "13879:  s.BreachAction = &v",
          "13880:  return s",
          "13881: }",
          "13884: func (s *CreateUsageLimitOutput) SetClusterIdentifier(v string) *CreateUsageLimitOutput {",
          "13885:  s.ClusterIdentifier = &v",
          "13886:  return s",
          "13887: }",
          "13890: func (s *CreateUsageLimitOutput) SetFeatureType(v string) *CreateUsageLimitOutput {",
          "13891:  s.FeatureType = &v",
          "13892:  return s",
          "13893: }",
          "13896: func (s *CreateUsageLimitOutput) SetLimitType(v string) *CreateUsageLimitOutput {",
          "13897:  s.LimitType = &v",
          "13898:  return s",
          "13899: }",
          "13902: func (s *CreateUsageLimitOutput) SetPeriod(v string) *CreateUsageLimitOutput {",
          "13903:  s.Period = &v",
          "13904:  return s",
          "13905: }",
          "13908: func (s *CreateUsageLimitOutput) SetTags(v []*Tag) *CreateUsageLimitOutput {",
          "13909:  s.Tags = v",
          "13910:  return s",
          "13911: }",
          "13914: func (s *CreateUsageLimitOutput) SetUsageLimitId(v string) *CreateUsageLimitOutput {",
          "13915:  s.UsageLimitId = &v",
          "13916:  return s",
          "13917: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "14239:  return s.String()",
          "14240: }",
          "14242: type DescribeAccountAttributesInput struct {",
          "14243:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14873: type DeleteUsageLimitInput struct {",
          "14874:  _ struct{} `type:\"structure\"`",
          "14879:  UsageLimitId *string `type:\"string\" required:\"true\"`",
          "14880: }",
          "14883: func (s DeleteUsageLimitInput) String() string {",
          "14884:  return awsutil.Prettify(s)",
          "14885: }",
          "14888: func (s DeleteUsageLimitInput) GoString() string {",
          "14889:  return s.String()",
          "14890: }",
          "14893: func (s *DeleteUsageLimitInput) Validate() error {",
          "14894:  invalidParams := request.ErrInvalidParams{Context: \"DeleteUsageLimitInput\"}",
          "14895:  if s.UsageLimitId == nil {",
          "14896:   invalidParams.Add(request.NewErrParamRequired(\"UsageLimitId\"))",
          "14897:  }",
          "14899:  if invalidParams.Len() > 0 {",
          "14900:   return invalidParams",
          "14901:  }",
          "14902:  return nil",
          "14903: }",
          "14906: func (s *DeleteUsageLimitInput) SetUsageLimitId(v string) *DeleteUsageLimitInput {",
          "14907:  s.UsageLimitId = &v",
          "14908:  return s",
          "14909: }",
          "14911: type DeleteUsageLimitOutput struct {",
          "14912:  _ struct{} `type:\"structure\"`",
          "14913: }",
          "14916: func (s DeleteUsageLimitOutput) String() string {",
          "14917:  return awsutil.Prettify(s)",
          "14918: }",
          "14921: func (s DeleteUsageLimitOutput) GoString() string {",
          "14922:  return s.String()",
          "14923: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "17302:  Marker *string `type:\"string\"`",
          "17349:  TagKeys []*string `locationNameList:\"TagKey\" type:\"list\"`",
          "17357:  TagValues []*string `locationNameList:\"TagValue\" type:\"list\"`",
          "17358: }",
          "17362:  return awsutil.Prettify(s)",
          "17363: }",
          "17367:  return s.String()",
          "17368: }",
          "17373:  return s",
          "17374: }",
          "17379:  return s",
          "17380: }",
          "17385:  return s",
          "17386: }",
          "17391:  return s",
          "17392: }",
          "17396:  s.TagKeys = v",
          "17397:  return s",
          "17398: }",
          "17402:  s.TagValues = v",
          "17403:  return s",
          "17404: }",
          "17407:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "17308:  MaxRecords *int64 `type:\"integer\"`",
          "17312:  ResourceName *string `type:\"string\"`",
          "17341:  ResourceType *string `type:\"string\"`",
          "17361: func (s DescribeTagsInput) String() string {",
          "17366: func (s DescribeTagsInput) GoString() string {",
          "17371: func (s *DescribeTagsInput) SetMarker(v string) *DescribeTagsInput {",
          "17372:  s.Marker = &v",
          "17377: func (s *DescribeTagsInput) SetMaxRecords(v int64) *DescribeTagsInput {",
          "17378:  s.MaxRecords = &v",
          "17383: func (s *DescribeTagsInput) SetResourceName(v string) *DescribeTagsInput {",
          "17384:  s.ResourceName = &v",
          "17389: func (s *DescribeTagsInput) SetResourceType(v string) *DescribeTagsInput {",
          "17390:  s.ResourceType = &v",
          "17395: func (s *DescribeTagsInput) SetTagKeys(v []*string) *DescribeTagsInput {",
          "17401: func (s *DescribeTagsInput) SetTagValues(v []*string) *DescribeTagsInput {",
          "17406: type DescribeTagsOutput struct {",
          "",
          "[Added Lines]",
          "17991:  MaxRecords *int64 `type:\"integer\"`",
          "17995:  ResourceName *string `type:\"string\"`",
          "18024:  ResourceType *string `type:\"string\"`",
          "18032:  TagKeys []*string `locationNameList:\"TagKey\" type:\"list\"`",
          "18040:  TagValues []*string `locationNameList:\"TagValue\" type:\"list\"`",
          "18041: }",
          "18044: func (s DescribeTagsInput) String() string {",
          "18045:  return awsutil.Prettify(s)",
          "18046: }",
          "18049: func (s DescribeTagsInput) GoString() string {",
          "18050:  return s.String()",
          "18051: }",
          "18054: func (s *DescribeTagsInput) SetMarker(v string) *DescribeTagsInput {",
          "18055:  s.Marker = &v",
          "18056:  return s",
          "18057: }",
          "18060: func (s *DescribeTagsInput) SetMaxRecords(v int64) *DescribeTagsInput {",
          "18061:  s.MaxRecords = &v",
          "18062:  return s",
          "18063: }",
          "18066: func (s *DescribeTagsInput) SetResourceName(v string) *DescribeTagsInput {",
          "18067:  s.ResourceName = &v",
          "18068:  return s",
          "18069: }",
          "18072: func (s *DescribeTagsInput) SetResourceType(v string) *DescribeTagsInput {",
          "18073:  s.ResourceType = &v",
          "18074:  return s",
          "18075: }",
          "18078: func (s *DescribeTagsInput) SetTagKeys(v []*string) *DescribeTagsInput {",
          "18079:  s.TagKeys = v",
          "18080:  return s",
          "18081: }",
          "18084: func (s *DescribeTagsInput) SetTagValues(v []*string) *DescribeTagsInput {",
          "18085:  s.TagValues = v",
          "18086:  return s",
          "18087: }",
          "18089: type DescribeTagsOutput struct {",
          "18090:  _ struct{} `type:\"structure\"`",
          "18097:  Marker *string `type:\"string\"`",
          "18100:  TaggedResources []*TaggedResource `locationNameList:\"TaggedResource\" type:\"list\"`",
          "18101: }",
          "18104: func (s DescribeTagsOutput) String() string {",
          "18105:  return awsutil.Prettify(s)",
          "18106: }",
          "18109: func (s DescribeTagsOutput) GoString() string {",
          "18110:  return s.String()",
          "18111: }",
          "18114: func (s *DescribeTagsOutput) SetMarker(v string) *DescribeTagsOutput {",
          "18115:  s.Marker = &v",
          "18116:  return s",
          "18117: }",
          "18120: func (s *DescribeTagsOutput) SetTaggedResources(v []*TaggedResource) *DescribeTagsOutput {",
          "18121:  s.TaggedResources = v",
          "18122:  return s",
          "18123: }",
          "18125: type DescribeUsageLimitsInput struct {",
          "18126:  _ struct{} `type:\"structure\"`",
          "18129:  ClusterIdentifier *string `type:\"string\"`",
          "18132:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "18139:  Marker *string `type:\"string\"`",
          "18149:  MaxRecords *int64 `type:\"integer\"`",
          "18168:  UsageLimitId *string `type:\"string\"`",
          "18172: func (s DescribeUsageLimitsInput) String() string {",
          "18177: func (s DescribeUsageLimitsInput) GoString() string {",
          "18182: func (s *DescribeUsageLimitsInput) SetClusterIdentifier(v string) *DescribeUsageLimitsInput {",
          "18183:  s.ClusterIdentifier = &v",
          "18188: func (s *DescribeUsageLimitsInput) SetFeatureType(v string) *DescribeUsageLimitsInput {",
          "18189:  s.FeatureType = &v",
          "18194: func (s *DescribeUsageLimitsInput) SetMarker(v string) *DescribeUsageLimitsInput {",
          "18195:  s.Marker = &v",
          "18200: func (s *DescribeUsageLimitsInput) SetMaxRecords(v int64) *DescribeUsageLimitsInput {",
          "18201:  s.MaxRecords = &v",
          "18206: func (s *DescribeUsageLimitsInput) SetTagKeys(v []*string) *DescribeUsageLimitsInput {",
          "18212: func (s *DescribeUsageLimitsInput) SetTagValues(v []*string) *DescribeUsageLimitsInput {",
          "18218: func (s *DescribeUsageLimitsInput) SetUsageLimitId(v string) *DescribeUsageLimitsInput {",
          "18219:  s.UsageLimitId = &v",
          "18220:  return s",
          "18221: }",
          "18223: type DescribeUsageLimitsOutput struct {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17414:  Marker *string `type:\"string\"`",
          "17418: }",
          "17422:  return awsutil.Prettify(s)",
          "17423: }",
          "17427:  return s.String()",
          "17428: }",
          "17432:  s.Marker = &v",
          "17433:  return s",
          "17434: }",
          "17439:  return s",
          "17440: }",
          "",
          "[Removed Lines]",
          "17417:  TaggedResources []*TaggedResource `locationNameList:\"TaggedResource\" type:\"list\"`",
          "17421: func (s DescribeTagsOutput) String() string {",
          "17426: func (s DescribeTagsOutput) GoString() string {",
          "17431: func (s *DescribeTagsOutput) SetMarker(v string) *DescribeTagsOutput {",
          "17437: func (s *DescribeTagsOutput) SetTaggedResources(v []*TaggedResource) *DescribeTagsOutput {",
          "17438:  s.TaggedResources = v",
          "",
          "[Added Lines]",
          "18234:  UsageLimits []*UsageLimit `type:\"list\"`",
          "18238: func (s DescribeUsageLimitsOutput) String() string {",
          "18243: func (s DescribeUsageLimitsOutput) GoString() string {",
          "18248: func (s *DescribeUsageLimitsOutput) SetMarker(v string) *DescribeUsageLimitsOutput {",
          "18254: func (s *DescribeUsageLimitsOutput) SetUsageLimits(v []*UsageLimit) *DescribeUsageLimitsOutput {",
          "18255:  s.UsageLimits = v",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "20349:  return s",
          "20350: }",
          "20353: type NodeConfigurationOption struct {",
          "20354:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21169: type ModifyUsageLimitInput struct {",
          "21170:  _ struct{} `type:\"structure\"`",
          "21173:  Amount *int64 `type:\"long\"`",
          "21177:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "21182:  UsageLimitId *string `type:\"string\" required:\"true\"`",
          "21183: }",
          "21186: func (s ModifyUsageLimitInput) String() string {",
          "21187:  return awsutil.Prettify(s)",
          "21188: }",
          "21191: func (s ModifyUsageLimitInput) GoString() string {",
          "21192:  return s.String()",
          "21193: }",
          "21196: func (s *ModifyUsageLimitInput) Validate() error {",
          "21197:  invalidParams := request.ErrInvalidParams{Context: \"ModifyUsageLimitInput\"}",
          "21198:  if s.UsageLimitId == nil {",
          "21199:   invalidParams.Add(request.NewErrParamRequired(\"UsageLimitId\"))",
          "21200:  }",
          "21202:  if invalidParams.Len() > 0 {",
          "21203:   return invalidParams",
          "21204:  }",
          "21205:  return nil",
          "21206: }",
          "21209: func (s *ModifyUsageLimitInput) SetAmount(v int64) *ModifyUsageLimitInput {",
          "21210:  s.Amount = &v",
          "21211:  return s",
          "21212: }",
          "21215: func (s *ModifyUsageLimitInput) SetBreachAction(v string) *ModifyUsageLimitInput {",
          "21216:  s.BreachAction = &v",
          "21217:  return s",
          "21218: }",
          "21221: func (s *ModifyUsageLimitInput) SetUsageLimitId(v string) *ModifyUsageLimitInput {",
          "21222:  s.UsageLimitId = &v",
          "21223:  return s",
          "21224: }",
          "21227: type ModifyUsageLimitOutput struct {",
          "21228:  _ struct{} `type:\"structure\"`",
          "21232:  Amount *int64 `type:\"long\"`",
          "21242:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "21245:  ClusterIdentifier *string `type:\"string\"`",
          "21248:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "21252:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "21256:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "21259:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "21262:  UsageLimitId *string `type:\"string\"`",
          "21263: }",
          "21266: func (s ModifyUsageLimitOutput) String() string {",
          "21267:  return awsutil.Prettify(s)",
          "21268: }",
          "21271: func (s ModifyUsageLimitOutput) GoString() string {",
          "21272:  return s.String()",
          "21273: }",
          "21276: func (s *ModifyUsageLimitOutput) SetAmount(v int64) *ModifyUsageLimitOutput {",
          "21277:  s.Amount = &v",
          "21278:  return s",
          "21279: }",
          "21282: func (s *ModifyUsageLimitOutput) SetBreachAction(v string) *ModifyUsageLimitOutput {",
          "21283:  s.BreachAction = &v",
          "21284:  return s",
          "21285: }",
          "21288: func (s *ModifyUsageLimitOutput) SetClusterIdentifier(v string) *ModifyUsageLimitOutput {",
          "21289:  s.ClusterIdentifier = &v",
          "21290:  return s",
          "21291: }",
          "21294: func (s *ModifyUsageLimitOutput) SetFeatureType(v string) *ModifyUsageLimitOutput {",
          "21295:  s.FeatureType = &v",
          "21296:  return s",
          "21297: }",
          "21300: func (s *ModifyUsageLimitOutput) SetLimitType(v string) *ModifyUsageLimitOutput {",
          "21301:  s.LimitType = &v",
          "21302:  return s",
          "21303: }",
          "21306: func (s *ModifyUsageLimitOutput) SetPeriod(v string) *ModifyUsageLimitOutput {",
          "21307:  s.Period = &v",
          "21308:  return s",
          "21309: }",
          "21312: func (s *ModifyUsageLimitOutput) SetTags(v []*Tag) *ModifyUsageLimitOutput {",
          "21313:  s.Tags = v",
          "21314:  return s",
          "21315: }",
          "21318: func (s *ModifyUsageLimitOutput) SetUsageLimitId(v string) *ModifyUsageLimitOutput {",
          "21319:  s.UsageLimitId = &v",
          "21320:  return s",
          "21321: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "23718:  return s",
          "23719: }",
          "23722: type VpcSecurityGroupMembership struct {",
          "23723:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24693: type UsageLimit struct {",
          "24694:  _ struct{} `type:\"structure\"`",
          "24698:  Amount *int64 `type:\"long\"`",
          "24708:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "24711:  ClusterIdentifier *string `type:\"string\"`",
          "24714:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "24718:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "24722:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "24725:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "24728:  UsageLimitId *string `type:\"string\"`",
          "24729: }",
          "24732: func (s UsageLimit) String() string {",
          "24733:  return awsutil.Prettify(s)",
          "24734: }",
          "24737: func (s UsageLimit) GoString() string {",
          "24738:  return s.String()",
          "24739: }",
          "24742: func (s *UsageLimit) SetAmount(v int64) *UsageLimit {",
          "24743:  s.Amount = &v",
          "24744:  return s",
          "24745: }",
          "24748: func (s *UsageLimit) SetBreachAction(v string) *UsageLimit {",
          "24749:  s.BreachAction = &v",
          "24750:  return s",
          "24751: }",
          "24754: func (s *UsageLimit) SetClusterIdentifier(v string) *UsageLimit {",
          "24755:  s.ClusterIdentifier = &v",
          "24756:  return s",
          "24757: }",
          "24760: func (s *UsageLimit) SetFeatureType(v string) *UsageLimit {",
          "24761:  s.FeatureType = &v",
          "24762:  return s",
          "24763: }",
          "24766: func (s *UsageLimit) SetLimitType(v string) *UsageLimit {",
          "24767:  s.LimitType = &v",
          "24768:  return s",
          "24769: }",
          "24772: func (s *UsageLimit) SetPeriod(v string) *UsageLimit {",
          "24773:  s.Period = &v",
          "24774:  return s",
          "24775: }",
          "24778: func (s *UsageLimit) SetTags(v []*Tag) *UsageLimit {",
          "24779:  s.Tags = v",
          "24780:  return s",
          "24781: }",
          "24784: func (s *UsageLimit) SetUsageLimitId(v string) *UsageLimit {",
          "24785:  s.UsageLimitId = &v",
          "24786:  return s",
          "24787: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "23914:  TableRestoreStatusTypeCanceled = \"CANCELED\"",
          "23915: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24985: const (",
          "24987:  UsageLimitBreachActionLog = \"log\"",
          "24990:  UsageLimitBreachActionEmitMetric = \"emit-metric\"",
          "24993:  UsageLimitBreachActionDisable = \"disable\"",
          "24994: )",
          "24996: const (",
          "24998:  UsageLimitFeatureTypeSpectrum = \"spectrum\"",
          "25001:  UsageLimitFeatureTypeConcurrencyScaling = \"concurrency-scaling\"",
          "25002: )",
          "25004: const (",
          "25006:  UsageLimitLimitTypeTime = \"time\"",
          "25009:  UsageLimitLimitTypeDataScanned = \"data-scanned\"",
          "25010: )",
          "25012: const (",
          "25014:  UsageLimitPeriodDaily = \"daily\"",
          "25017:  UsageLimitPeriodWeekly = \"weekly\"",
          "25020:  UsageLimitPeriodMonthly = \"monthly\"",
          "25021: )",
          "",
          "---------------"
        ],
        "service/redshift/errors.go||service/redshift/errors.go": [
          "File: service/redshift/errors.go -> service/redshift/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "422:  ErrCodeInvalidTagFault = \"InvalidTagFault\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:  ErrCodeInvalidUsageLimitFault = \"InvalidUsageLimit\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "697:  ErrCodeUnsupportedOptionFault = \"UnsupportedOptionFault\"",
          "698: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "709:  ErrCodeUsageLimitAlreadyExistsFault = \"UsageLimitAlreadyExists\"",
          "715:  ErrCodeUsageLimitNotFoundFault = \"UsageLimitNotFound\"",
          "",
          "---------------"
        ],
        "service/redshift/redshiftiface/interface.go||service/redshift/redshiftiface/interface.go": [
          "File: service/redshift/redshiftiface/interface.go -> service/redshift/redshiftiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  CreateTagsWithContext(aws.Context, *redshift.CreateTagsInput, ...request.Option) (*redshift.CreateTagsOutput, error)",
          "137:  CreateTagsRequest(*redshift.CreateTagsInput) (*request.Request, *redshift.CreateTagsOutput)",
          "139:  DeleteCluster(*redshift.DeleteClusterInput) (*redshift.DeleteClusterOutput, error)",
          "140:  DeleteClusterWithContext(aws.Context, *redshift.DeleteClusterInput, ...request.Option) (*redshift.DeleteClusterOutput, error)",
          "141:  DeleteClusterRequest(*redshift.DeleteClusterInput) (*request.Request, *redshift.DeleteClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:  CreateUsageLimit(*redshift.CreateUsageLimitInput) (*redshift.CreateUsageLimitOutput, error)",
          "140:  CreateUsageLimitWithContext(aws.Context, *redshift.CreateUsageLimitInput, ...request.Option) (*redshift.CreateUsageLimitOutput, error)",
          "141:  CreateUsageLimitRequest(*redshift.CreateUsageLimitInput) (*request.Request, *redshift.CreateUsageLimitOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:  DeleteTagsWithContext(aws.Context, *redshift.DeleteTagsInput, ...request.Option) (*redshift.DeleteTagsOutput, error)",
          "185:  DeleteTagsRequest(*redshift.DeleteTagsInput) (*request.Request, *redshift.DeleteTagsOutput)",
          "187:  DescribeAccountAttributes(*redshift.DescribeAccountAttributesInput) (*redshift.DescribeAccountAttributesOutput, error)",
          "188:  DescribeAccountAttributesWithContext(aws.Context, *redshift.DescribeAccountAttributesInput, ...request.Option) (*redshift.DescribeAccountAttributesOutput, error)",
          "189:  DescribeAccountAttributesRequest(*redshift.DescribeAccountAttributesInput) (*request.Request, *redshift.DescribeAccountAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:  DeleteUsageLimit(*redshift.DeleteUsageLimitInput) (*redshift.DeleteUsageLimitOutput, error)",
          "192:  DeleteUsageLimitWithContext(aws.Context, *redshift.DeleteUsageLimitInput, ...request.Option) (*redshift.DeleteUsageLimitOutput, error)",
          "193:  DeleteUsageLimitRequest(*redshift.DeleteUsageLimitInput) (*request.Request, *redshift.DeleteUsageLimitOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "347:  DescribeTagsWithContext(aws.Context, *redshift.DescribeTagsInput, ...request.Option) (*redshift.DescribeTagsOutput, error)",
          "348:  DescribeTagsRequest(*redshift.DescribeTagsInput) (*request.Request, *redshift.DescribeTagsOutput)",
          "350:  DisableLogging(*redshift.DisableLoggingInput) (*redshift.LoggingStatus, error)",
          "351:  DisableLoggingWithContext(aws.Context, *redshift.DisableLoggingInput, ...request.Option) (*redshift.LoggingStatus, error)",
          "352:  DisableLoggingRequest(*redshift.DisableLoggingInput) (*request.Request, *redshift.LoggingStatus)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:  DescribeUsageLimits(*redshift.DescribeUsageLimitsInput) (*redshift.DescribeUsageLimitsOutput, error)",
          "359:  DescribeUsageLimitsWithContext(aws.Context, *redshift.DescribeUsageLimitsInput, ...request.Option) (*redshift.DescribeUsageLimitsOutput, error)",
          "360:  DescribeUsageLimitsRequest(*redshift.DescribeUsageLimitsInput) (*request.Request, *redshift.DescribeUsageLimitsOutput)",
          "362:  DescribeUsageLimitsPages(*redshift.DescribeUsageLimitsInput, func(*redshift.DescribeUsageLimitsOutput, bool) bool) error",
          "363:  DescribeUsageLimitsPagesWithContext(aws.Context, *redshift.DescribeUsageLimitsInput, func(*redshift.DescribeUsageLimitsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "419:  ModifySnapshotScheduleWithContext(aws.Context, *redshift.ModifySnapshotScheduleInput, ...request.Option) (*redshift.ModifySnapshotScheduleOutput, error)",
          "420:  ModifySnapshotScheduleRequest(*redshift.ModifySnapshotScheduleInput) (*request.Request, *redshift.ModifySnapshotScheduleOutput)",
          "422:  PauseCluster(*redshift.PauseClusterInput) (*redshift.PauseClusterOutput, error)",
          "423:  PauseClusterWithContext(aws.Context, *redshift.PauseClusterInput, ...request.Option) (*redshift.PauseClusterOutput, error)",
          "424:  PauseClusterRequest(*redshift.PauseClusterInput) (*request.Request, *redshift.PauseClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:  ModifyUsageLimit(*redshift.ModifyUsageLimitInput) (*redshift.ModifyUsageLimitOutput, error)",
          "438:  ModifyUsageLimitWithContext(aws.Context, *redshift.ModifyUsageLimitInput, ...request.Option) (*redshift.ModifyUsageLimitOutput, error)",
          "439:  ModifyUsageLimitRequest(*redshift.ModifyUsageLimitInput) (*request.Request, *redshift.ModifyUsageLimitOutput)",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:  return s",
          "961: }",
          "963: type StartStreamTranscriptionInput struct {",
          "964:  _ struct{} `type:\"structure\" payload:\"AudioStream\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "967: type ServiceUnavailableException struct {",
          "968:  _            struct{}                  `type:\"structure\"`",
          "969:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "971:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "972: }",
          "975: func (s ServiceUnavailableException) String() string {",
          "976:  return awsutil.Prettify(s)",
          "977: }",
          "980: func (s ServiceUnavailableException) GoString() string {",
          "981:  return s.String()",
          "982: }",
          "985: func (s *ServiceUnavailableException) eventTranscriptResultStream() {}",
          "989: func (s *ServiceUnavailableException) UnmarshalEvent(",
          "990:  payloadUnmarshaler protocol.PayloadUnmarshaler,",
          "991:  msg eventstream.Message,",
          "992: ) error {",
          "993:  if err := payloadUnmarshaler.UnmarshalPayload(",
          "994:   bytes.NewReader(msg.Payload), s,",
          "995:  ); err != nil {",
          "996:   return err",
          "997:  }",
          "998:  return nil",
          "999: }",
          "1001: func (s *ServiceUnavailableException) MarshalEvent(pm protocol.PayloadMarshaler) (msg eventstream.Message, err error) {",
          "1002:  msg.Headers.Set(eventstreamapi.MessageTypeHeader, eventstream.StringValue(eventstreamapi.ExceptionMessageType))",
          "1003:  var buf bytes.Buffer",
          "1004:  if err = pm.MarshalPayload(&buf, s); err != nil {",
          "1005:   return eventstream.Message{}, err",
          "1006:  }",
          "1007:  msg.Payload = buf.Bytes()",
          "1008:  return msg, err",
          "1009: }",
          "1011: func newErrorServiceUnavailableException(v protocol.ResponseMetadata) error {",
          "1012:  return &ServiceUnavailableException{",
          "1013:   RespMetadata: v,",
          "1014:  }",
          "1015: }",
          "1018: func (s *ServiceUnavailableException) Code() string {",
          "1019:  return \"ServiceUnavailableException\"",
          "1020: }",
          "1023: func (s *ServiceUnavailableException) Message() string {",
          "1024:  if s.Message_ != nil {",
          "1025:   return *s.Message_",
          "1026:  }",
          "1027:  return \"\"",
          "1028: }",
          "1031: func (s *ServiceUnavailableException) OrigErr() error {",
          "1032:  return nil",
          "1033: }",
          "1035: func (s *ServiceUnavailableException) Error() string {",
          "1036:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1037: }",
          "1040: func (s *ServiceUnavailableException) StatusCode() int {",
          "1041:  return s.RespMetadata.StatusCode",
          "1042: }",
          "1045: func (s *ServiceUnavailableException) RequestID() string {",
          "1046:  return s.RespMetadata.RequestID",
          "1047: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1329:   return newErrorInternalFailureException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "1330:  case \"LimitExceededException\":",
          "1331:   return newErrorLimitExceededException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "1332:  default:",
          "1333:   return nil, awserr.New(",
          "1334:    request.ErrCodeSerialization,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1418:  case \"ServiceUnavailableException\":",
          "1419:   return newErrorServiceUnavailableException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/errors.go||service/transcribestreamingservice/errors.go": [
          "File: service/transcribestreamingservice/errors.go -> service/transcribestreamingservice/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "41: )",
          "43: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "48: }",
          "",
          "[Removed Lines]",
          "44:  \"BadRequestException\":      newErrorBadRequestException,",
          "45:  \"ConflictException\":        newErrorConflictException,",
          "46:  \"InternalFailureException\": newErrorInternalFailureException,",
          "47:  \"LimitExceededException\":   newErrorLimitExceededException,",
          "",
          "[Added Lines]",
          "46:  ErrCodeServiceUnavailableException = \"ServiceUnavailableException\"",
          "50:  \"BadRequestException\":         newErrorBadRequestException,",
          "51:  \"ConflictException\":           newErrorConflictException,",
          "52:  \"InternalFailureException\":    newErrorInternalFailureException,",
          "53:  \"LimitExceededException\":      newErrorLimitExceededException,",
          "54:  \"ServiceUnavailableException\": newErrorServiceUnavailableException,",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "503: var _ awserr.Error = (*ConflictException)(nil)",
          "504: var _ awserr.Error = (*InternalFailureException)(nil)",
          "505: var _ awserr.Error = (*LimitExceededException)(nil)",
          "507: type loopReader struct {",
          "508:  source *bytes.Reader",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506: var _ awserr.Error = (*ServiceUnavailableException)(nil)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de949e28b1f3657f825f7365f03e564e8d6d24ff",
      "candidate_info": {
        "commit_hash": "de949e28b1f3657f825f7365f03e564e8d6d24ff",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/de949e28b1f3657f825f7365f03e564e8d6d24ff",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/kafka/2018-11-14/api-2.json",
          "models/apis/kafka/2018-11-14/docs-2.json",
          "models/apis/servicediscovery/2017-03-14/api-2.json",
          "models/apis/servicediscovery/2017-03-14/docs-2.json",
          "models/apis/snowball/2016-06-30/api-2.json",
          "models/apis/snowball/2016-06-30/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/kafka/api.go",
          "service/servicediscovery/api.go",
          "service/servicediscovery/doc.go",
          "service/servicediscovery/errors.go",
          "service/snowball/api.go",
          "service/snowball/snowballiface/interface.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.38.35 (2021-05-06) (#3899)\n\nRelease v1.38.35 (2021-05-06)\n===\n\n### Service Client Updates\n* `service/kafka`: Updates service API and documentation\n* `service/servicediscovery`: Updates service API and documentation\n* `service/snowball`: Updates service API and documentation\n  * AWS Snow Family adds APIs for ordering and managing Snow jobs with long term pricing\n* `service/ssm`: Updates service API and documentation\n  * SSM feature release - ChangeCalendar integration with StateManager.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/kafka/api.go||service/kafka/api.go",
          "service/servicediscovery/api.go||service/servicediscovery/api.go",
          "service/servicediscovery/doc.go||service/servicediscovery/doc.go",
          "service/servicediscovery/errors.go||service/servicediscovery/errors.go",
          "service/snowball/api.go||service/snowball/api.go",
          "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2940:     \"us-west-2\":  endpoint{},",
          "2941:    },",
          "2942:   },",
          "2943:   \"firehose\": service{",
          "2945:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2943:   \"finspace\": service{",
          "2945:    Endpoints: endpoints{",
          "2946:     \"ca-central-1\": endpoint{},",
          "2947:     \"eu-west-1\":    endpoint{},",
          "2948:     \"us-east-1\":    endpoint{},",
          "2949:     \"us-east-2\":    endpoint{},",
          "2950:     \"us-west-2\":    endpoint{},",
          "2951:    },",
          "2952:   },",
          "2953:   \"finspace-api\": service{",
          "2955:    Endpoints: endpoints{",
          "2956:     \"ca-central-1\": endpoint{},",
          "2957:     \"eu-west-1\":    endpoint{},",
          "2958:     \"us-east-1\":    endpoint{},",
          "2959:     \"us-east-2\":    endpoint{},",
          "2960:     \"us-west-2\":    endpoint{},",
          "2961:    },",
          "2962:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3892:   \"lakeformation\": service{",
          "3894:    Endpoints: endpoints{",
          "3895:     \"ap-east-1\":      endpoint{},",
          "3896:     \"ap-northeast-1\": endpoint{},",
          "3897:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3915:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6864:     \"ca-central-1\":   endpoint{},",
          "6865:     \"eu-central-1\":   endpoint{},",
          "6866:     \"eu-north-1\":     endpoint{},",
          "6867:     \"eu-west-1\":      endpoint{},",
          "6868:     \"eu-west-2\":      endpoint{},",
          "6869:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6888:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.38.34\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.38.35\"",
          "",
          "---------------"
        ],
        "service/kafka/api.go||service/kafka/api.go": [
          "File: service/kafka/api.go -> service/kafka/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5698:  BootstrapBrokerString *string `locationName:\"bootstrapBrokerString\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5703:  BootstrapBrokerStringSaslIam *string `locationName:\"bootstrapBrokerStringSaslIam\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5724:  return s",
          "5725: }",
          "5728: func (s *GetBootstrapBrokersOutput) SetBootstrapBrokerStringSaslScram(v string) *GetBootstrapBrokersOutput {",
          "5729:  s.BootstrapBrokerStringSaslScram = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5733: func (s *GetBootstrapBrokersOutput) SetBootstrapBrokerStringSaslIam(v string) *GetBootstrapBrokersOutput {",
          "5734:  s.BootstrapBrokerStringSaslIam = &v",
          "5735:  return s",
          "5736: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5782:  return s",
          "5783: }",
          "5786: type InternalServerErrorException struct {",
          "5787:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5796: type Iam struct {",
          "5797:  _ struct{} `type:\"structure\"`",
          "5799:  Enabled *bool `locationName:\"enabled\" type:\"boolean\"`",
          "5800: }",
          "5803: func (s Iam) String() string {",
          "5804:  return awsutil.Prettify(s)",
          "5805: }",
          "5808: func (s Iam) GoString() string {",
          "5809:  return s.String()",
          "5810: }",
          "5813: func (s *Iam) SetEnabled(v bool) *Iam {",
          "5814:  s.Enabled = &v",
          "5815:  return s",
          "5816: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7242: type Sasl struct {",
          "7243:  _ struct{} `type:\"structure\"`",
          "7245:  Scram *Scram `locationName:\"scram\" type:\"structure\"`",
          "7246: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7278:  Iam *Iam `locationName:\"iam\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7255:  return s.String()",
          "7256: }",
          "7259: func (s *Sasl) SetScram(v *Scram) *Sasl {",
          "7260:  s.Scram = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7294: func (s *Sasl) SetIam(v *Iam) *Sasl {",
          "7295:  s.Iam = v",
          "7296:  return s",
          "7297: }",
          "",
          "---------------"
        ],
        "service/servicediscovery/api.go||service/servicediscovery/api.go": [
          "File: service/servicediscovery/api.go -> service/servicediscovery/api.go"
        ],
        "service/servicediscovery/doc.go||service/servicediscovery/doc.go": [
          "File: service/servicediscovery/doc.go -> service/servicediscovery/doc.go"
        ],
        "service/servicediscovery/errors.go||service/servicediscovery/errors.go": [
          "File: service/servicediscovery/errors.go -> service/servicediscovery/errors.go"
        ],
        "service/snowball/api.go||service/snowball/api.go": [
          "File: service/snowball/api.go -> service/snowball/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:  return out, req.Send()",
          "482: }",
          "484: const opCreateReturnShippingLabel = \"CreateReturnShippingLabel\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518: const opCreateLongTermPricing = \"CreateLongTermPricing\"",
          "544: func (c *Snowball) CreateLongTermPricingRequest(input *CreateLongTermPricingInput) (req *request.Request, output *CreateLongTermPricingOutput) {",
          "545:  op := &request.Operation{",
          "546:   Name:       opCreateLongTermPricing,",
          "547:   HTTPMethod: \"POST\",",
          "548:   HTTPPath:   \"/\",",
          "549:  }",
          "551:  if input == nil {",
          "552:   input = &CreateLongTermPricingInput{}",
          "553:  }",
          "555:  output = &CreateLongTermPricingOutput{}",
          "556:  req = c.newRequest(op, input, output)",
          "557:  return",
          "558: }",
          "580: func (c *Snowball) CreateLongTermPricing(input *CreateLongTermPricingInput) (*CreateLongTermPricingOutput, error) {",
          "581:  req, out := c.CreateLongTermPricingRequest(input)",
          "582:  return out, req.Send()",
          "583: }",
          "594: func (c *Snowball) CreateLongTermPricingWithContext(ctx aws.Context, input *CreateLongTermPricingInput, opts ...request.Option) (*CreateLongTermPricingOutput, error) {",
          "595:  req, out := c.CreateLongTermPricingRequest(input)",
          "596:  req.SetContext(ctx)",
          "597:  req.ApplyOptions(opts...)",
          "598:  return out, req.Send()",
          "599: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1814:  return p.Err()",
          "1815: }",
          "1817: const opUpdateCluster = \"UpdateCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1934: const opListLongTermPricing = \"ListLongTermPricing\"",
          "1960: func (c *Snowball) ListLongTermPricingRequest(input *ListLongTermPricingInput) (req *request.Request, output *ListLongTermPricingOutput) {",
          "1961:  op := &request.Operation{",
          "1962:   Name:       opListLongTermPricing,",
          "1963:   HTTPMethod: \"POST\",",
          "1964:   HTTPPath:   \"/\",",
          "1965:  }",
          "1967:  if input == nil {",
          "1968:   input = &ListLongTermPricingInput{}",
          "1969:  }",
          "1971:  output = &ListLongTermPricingOutput{}",
          "1972:  req = c.newRequest(op, input, output)",
          "1973:  return",
          "1974: }",
          "1997: func (c *Snowball) ListLongTermPricing(input *ListLongTermPricingInput) (*ListLongTermPricingOutput, error) {",
          "1998:  req, out := c.ListLongTermPricingRequest(input)",
          "1999:  return out, req.Send()",
          "2000: }",
          "2011: func (c *Snowball) ListLongTermPricingWithContext(ctx aws.Context, input *ListLongTermPricingInput, opts ...request.Option) (*ListLongTermPricingOutput, error) {",
          "2012:  req, out := c.ListLongTermPricingRequest(input)",
          "2013:  req.SetContext(ctx)",
          "2014:  req.ApplyOptions(opts...)",
          "2015:  return out, req.Send()",
          "2016: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2106:  return out, req.Send()",
          "2107: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2310: const opUpdateLongTermPricing = \"UpdateLongTermPricing\"",
          "2336: func (c *Snowball) UpdateLongTermPricingRequest(input *UpdateLongTermPricingInput) (req *request.Request, output *UpdateLongTermPricingOutput) {",
          "2337:  op := &request.Operation{",
          "2338:   Name:       opUpdateLongTermPricing,",
          "2339:   HTTPMethod: \"POST\",",
          "2340:   HTTPPath:   \"/\",",
          "2341:  }",
          "2343:  if input == nil {",
          "2344:   input = &UpdateLongTermPricingInput{}",
          "2345:  }",
          "2347:  output = &UpdateLongTermPricingOutput{}",
          "2348:  req = c.newRequest(op, input, output)",
          "2349:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2350:  return",
          "2351: }",
          "2370: func (c *Snowball) UpdateLongTermPricing(input *UpdateLongTermPricingInput) (*UpdateLongTermPricingOutput, error) {",
          "2371:  req, out := c.UpdateLongTermPricingRequest(input)",
          "2372:  return out, req.Send()",
          "2373: }",
          "2384: func (c *Snowball) UpdateLongTermPricingWithContext(ctx aws.Context, input *UpdateLongTermPricingInput, opts ...request.Option) (*UpdateLongTermPricingOutput, error) {",
          "2385:  req, out := c.UpdateLongTermPricingRequest(input)",
          "2386:  req.SetContext(ctx)",
          "2387:  req.ApplyOptions(opts...)",
          "2388:  return out, req.Send()",
          "2389: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2947:  TaxDocuments *TaxDocuments `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "2944:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "",
          "[Added Lines]",
          "3236:  SnowballType *string `type:\"string\" required:\"true\" enum:\"Type\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2984:  if s.ShippingOption == nil {",
          "2985:   invalidParams.Add(request.NewErrParamRequired(\"ShippingOption\"))",
          "2986:  }",
          "2987:  if s.Resources != nil {",
          "2988:   if err := s.Resources.Validate(); err != nil {",
          "2989:    invalidParams.AddNested(\"Resources\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3279:  if s.SnowballType == nil {",
          "3280:   invalidParams.Add(request.NewErrParamRequired(\"SnowballType\"))",
          "3281:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3116:  KmsKeyARN *string `type:\"string\"`",
          "3120:  Notification *Notification `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3418:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3199:  if s.ForwardingAddressId != nil && len(*s.ForwardingAddressId) < 40 {",
          "3200:   invalidParams.Add(request.NewErrParamMinLen(\"ForwardingAddressId\", 40))",
          "3201:  }",
          "3202:  if s.Resources != nil {",
          "3203:   if err := s.Resources.Validate(); err != nil {",
          "3204:    invalidParams.AddNested(\"Resources\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3512:  if s.LongTermPricingId != nil && len(*s.LongTermPricingId) < 41 {",
          "3513:   invalidParams.Add(request.NewErrParamMinLen(\"LongTermPricingId\", 41))",
          "3514:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3253:  return s",
          "3254: }",
          "3257: func (s *CreateJobInput) SetNotification(v *Notification) *CreateJobInput {",
          "3258:  s.Notification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3570: func (s *CreateJobInput) SetLongTermPricingId(v string) *CreateJobInput {",
          "3571:  s.LongTermPricingId = &v",
          "3572:  return s",
          "3573: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3318:  return s",
          "3319: }",
          "3321: type CreateReturnShippingLabelInput struct {",
          "3322:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3640: type CreateLongTermPricingInput struct {",
          "3641:  _ struct{} `type:\"structure\"`",
          "3645:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "3651:  LongTermPricingType *string `type:\"string\" required:\"true\" enum:\"LongTermPricingType\"`",
          "3654:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "3655: }",
          "3658: func (s CreateLongTermPricingInput) String() string {",
          "3659:  return awsutil.Prettify(s)",
          "3660: }",
          "3663: func (s CreateLongTermPricingInput) GoString() string {",
          "3664:  return s.String()",
          "3665: }",
          "3668: func (s *CreateLongTermPricingInput) Validate() error {",
          "3669:  invalidParams := request.ErrInvalidParams{Context: \"CreateLongTermPricingInput\"}",
          "3670:  if s.LongTermPricingType == nil {",
          "3671:   invalidParams.Add(request.NewErrParamRequired(\"LongTermPricingType\"))",
          "3672:  }",
          "3674:  if invalidParams.Len() > 0 {",
          "3675:   return invalidParams",
          "3676:  }",
          "3677:  return nil",
          "3678: }",
          "3681: func (s *CreateLongTermPricingInput) SetIsLongTermPricingAutoRenew(v bool) *CreateLongTermPricingInput {",
          "3682:  s.IsLongTermPricingAutoRenew = &v",
          "3683:  return s",
          "3684: }",
          "3687: func (s *CreateLongTermPricingInput) SetLongTermPricingType(v string) *CreateLongTermPricingInput {",
          "3688:  s.LongTermPricingType = &v",
          "3689:  return s",
          "3690: }",
          "3693: func (s *CreateLongTermPricingInput) SetSnowballType(v string) *CreateLongTermPricingInput {",
          "3694:  s.SnowballType = &v",
          "3695:  return s",
          "3696: }",
          "3698: type CreateLongTermPricingOutput struct {",
          "3699:  _ struct{} `type:\"structure\"`",
          "3702:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "3703: }",
          "3706: func (s CreateLongTermPricingOutput) String() string {",
          "3707:  return awsutil.Prettify(s)",
          "3708: }",
          "3711: func (s CreateLongTermPricingOutput) GoString() string {",
          "3712:  return s.String()",
          "3713: }",
          "3716: func (s *CreateLongTermPricingOutput) SetLongTermPricingId(v string) *CreateLongTermPricingOutput {",
          "3717:  s.LongTermPricingId = &v",
          "3718:  return s",
          "3719: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3742:  _ struct{} `type:\"structure\"`",
          "3746: }",
          "",
          "[Removed Lines]",
          "3745:  JobId *string `min:\"39\" type:\"string\"`",
          "",
          "[Added Lines]",
          "4147:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3759: func (s *DescribeReturnShippingLabelInput) Validate() error {",
          "3760:  invalidParams := request.ErrInvalidParams{Context: \"DescribeReturnShippingLabelInput\"}",
          "3761:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3762:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3763:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4163:  if s.JobId == nil {",
          "4164:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "4165:  }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4727:  KmsKeyARN *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5135:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4839:  return s",
          "4840: }",
          "4843: func (s *JobMetadata) SetNotification(v *Notification) *JobMetadata {",
          "4844:  s.Notification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5255: func (s *JobMetadata) SetLongTermPricingId(v string) *JobMetadata {",
          "5256:  s.LongTermPricingId = &v",
          "5257:  return s",
          "5258: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5446:  return s",
          "5447: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5867: type ListLongTermPricingInput struct {",
          "5868:  _ struct{} `type:\"structure\"`",
          "5871:  MaxResults *int64 `type:\"integer\"`",
          "5875:  NextToken *string `min:\"1\" type:\"string\"`",
          "5876: }",
          "5879: func (s ListLongTermPricingInput) String() string {",
          "5880:  return awsutil.Prettify(s)",
          "5881: }",
          "5884: func (s ListLongTermPricingInput) GoString() string {",
          "5885:  return s.String()",
          "5886: }",
          "5889: func (s *ListLongTermPricingInput) Validate() error {",
          "5890:  invalidParams := request.ErrInvalidParams{Context: \"ListLongTermPricingInput\"}",
          "5891:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "5892:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "5893:  }",
          "5895:  if invalidParams.Len() > 0 {",
          "5896:   return invalidParams",
          "5897:  }",
          "5898:  return nil",
          "5899: }",
          "5902: func (s *ListLongTermPricingInput) SetMaxResults(v int64) *ListLongTermPricingInput {",
          "5903:  s.MaxResults = &v",
          "5904:  return s",
          "5905: }",
          "5908: func (s *ListLongTermPricingInput) SetNextToken(v string) *ListLongTermPricingInput {",
          "5909:  s.NextToken = &v",
          "5910:  return s",
          "5911: }",
          "5913: type ListLongTermPricingOutput struct {",
          "5914:  _ struct{} `type:\"structure\"`",
          "5918:  LongTermPricingEntries []*LongTermPricingListEntry `type:\"list\"`",
          "5922:  NextToken *string `min:\"1\" type:\"string\"`",
          "5923: }",
          "5926: func (s ListLongTermPricingOutput) String() string {",
          "5927:  return awsutil.Prettify(s)",
          "5928: }",
          "5931: func (s ListLongTermPricingOutput) GoString() string {",
          "5932:  return s.String()",
          "5933: }",
          "5936: func (s *ListLongTermPricingOutput) SetLongTermPricingEntries(v []*LongTermPricingListEntry) *ListLongTermPricingOutput {",
          "5937:  s.LongTermPricingEntries = v",
          "5938:  return s",
          "5939: }",
          "5942: func (s *ListLongTermPricingOutput) SetNextToken(v string) *ListLongTermPricingOutput {",
          "5943:  s.NextToken = &v",
          "5944:  return s",
          "5945: }",
          "5949: type LongTermPricingListEntry struct {",
          "5950:  _ struct{} `type:\"structure\"`",
          "5953:  CurrentActiveJob *string `min:\"39\" type:\"string\"`",
          "5958:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "5961:  JobIds []*string `type:\"list\"`",
          "5964:  LongTermPricingEndDate *time.Time `type:\"timestamp\"`",
          "5967:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "5970:  LongTermPricingStartDate *time.Time `type:\"timestamp\"`",
          "5973:  LongTermPricingStatus *string `min:\"1\" type:\"string\"`",
          "5976:  LongTermPricingType *string `type:\"string\" enum:\"LongTermPricingType\"`",
          "5979:  ReplacementJob *string `min:\"39\" type:\"string\"`",
          "5983:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "5984: }",
          "5987: func (s LongTermPricingListEntry) String() string {",
          "5988:  return awsutil.Prettify(s)",
          "5989: }",
          "5992: func (s LongTermPricingListEntry) GoString() string {",
          "5993:  return s.String()",
          "5994: }",
          "5997: func (s *LongTermPricingListEntry) SetCurrentActiveJob(v string) *LongTermPricingListEntry {",
          "5998:  s.CurrentActiveJob = &v",
          "5999:  return s",
          "6000: }",
          "6003: func (s *LongTermPricingListEntry) SetIsLongTermPricingAutoRenew(v bool) *LongTermPricingListEntry {",
          "6004:  s.IsLongTermPricingAutoRenew = &v",
          "6005:  return s",
          "6006: }",
          "6009: func (s *LongTermPricingListEntry) SetJobIds(v []*string) *LongTermPricingListEntry {",
          "6010:  s.JobIds = v",
          "6011:  return s",
          "6012: }",
          "6015: func (s *LongTermPricingListEntry) SetLongTermPricingEndDate(v time.Time) *LongTermPricingListEntry {",
          "6016:  s.LongTermPricingEndDate = &v",
          "6017:  return s",
          "6018: }",
          "6021: func (s *LongTermPricingListEntry) SetLongTermPricingId(v string) *LongTermPricingListEntry {",
          "6022:  s.LongTermPricingId = &v",
          "6023:  return s",
          "6024: }",
          "6027: func (s *LongTermPricingListEntry) SetLongTermPricingStartDate(v time.Time) *LongTermPricingListEntry {",
          "6028:  s.LongTermPricingStartDate = &v",
          "6029:  return s",
          "6030: }",
          "6033: func (s *LongTermPricingListEntry) SetLongTermPricingStatus(v string) *LongTermPricingListEntry {",
          "6034:  s.LongTermPricingStatus = &v",
          "6035:  return s",
          "6036: }",
          "6039: func (s *LongTermPricingListEntry) SetLongTermPricingType(v string) *LongTermPricingListEntry {",
          "6040:  s.LongTermPricingType = &v",
          "6041:  return s",
          "6042: }",
          "6045: func (s *LongTermPricingListEntry) SetReplacementJob(v string) *LongTermPricingListEntry {",
          "6046:  s.ReplacementJob = &v",
          "6047:  return s",
          "6048: }",
          "6051: func (s *LongTermPricingListEntry) SetSnowballType(v string) *LongTermPricingListEntry {",
          "6052:  s.SnowballType = &v",
          "6053:  return s",
          "6054: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6175:  return s.String()",
          "6176: }",
          "6179: type WirelessConnection struct {",
          "6180:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6789: type UpdateLongTermPricingInput struct {",
          "6790:  _ struct{} `type:\"structure\"`",
          "6795:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "6800:  LongTermPricingId *string `min:\"41\" type:\"string\" required:\"true\"`",
          "6804:  ReplacementJob *string `min:\"39\" type:\"string\"`",
          "6805: }",
          "6808: func (s UpdateLongTermPricingInput) String() string {",
          "6809:  return awsutil.Prettify(s)",
          "6810: }",
          "6813: func (s UpdateLongTermPricingInput) GoString() string {",
          "6814:  return s.String()",
          "6815: }",
          "6818: func (s *UpdateLongTermPricingInput) Validate() error {",
          "6819:  invalidParams := request.ErrInvalidParams{Context: \"UpdateLongTermPricingInput\"}",
          "6820:  if s.LongTermPricingId == nil {",
          "6821:   invalidParams.Add(request.NewErrParamRequired(\"LongTermPricingId\"))",
          "6822:  }",
          "6823:  if s.LongTermPricingId != nil && len(*s.LongTermPricingId) < 41 {",
          "6824:   invalidParams.Add(request.NewErrParamMinLen(\"LongTermPricingId\", 41))",
          "6825:  }",
          "6826:  if s.ReplacementJob != nil && len(*s.ReplacementJob) < 39 {",
          "6827:   invalidParams.Add(request.NewErrParamMinLen(\"ReplacementJob\", 39))",
          "6828:  }",
          "6830:  if invalidParams.Len() > 0 {",
          "6831:   return invalidParams",
          "6832:  }",
          "6833:  return nil",
          "6834: }",
          "6837: func (s *UpdateLongTermPricingInput) SetIsLongTermPricingAutoRenew(v bool) *UpdateLongTermPricingInput {",
          "6838:  s.IsLongTermPricingAutoRenew = &v",
          "6839:  return s",
          "6840: }",
          "6843: func (s *UpdateLongTermPricingInput) SetLongTermPricingId(v string) *UpdateLongTermPricingInput {",
          "6844:  s.LongTermPricingId = &v",
          "6845:  return s",
          "6846: }",
          "6849: func (s *UpdateLongTermPricingInput) SetReplacementJob(v string) *UpdateLongTermPricingInput {",
          "6850:  s.ReplacementJob = &v",
          "6851:  return s",
          "6852: }",
          "6854: type UpdateLongTermPricingOutput struct {",
          "6855:  _ struct{} `type:\"structure\"`",
          "6856: }",
          "6859: func (s UpdateLongTermPricingOutput) String() string {",
          "6860:  return awsutil.Prettify(s)",
          "6861: }",
          "6864: func (s UpdateLongTermPricingOutput) GoString() string {",
          "6865:  return s.String()",
          "6866: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6219:  CapacityT8 = \"T8\"",
          "6222:  CapacityNoPreference = \"NoPreference\"",
          "6223: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6912:  CapacityT14 = \"T14\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "6231:   CapacityT42,",
          "6232:   CapacityT98,",
          "6233:   CapacityT8,",
          "6234:   CapacityNoPreference,",
          "6235:  }",
          "6236: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6927:   CapacityT14,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "6343:  }",
          "6344: }",
          "6346: const (",
          "6348:  ShipmentStateReceived = \"RECEIVED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7040: const (",
          "7042:  LongTermPricingTypeOneYear = \"OneYear\"",
          "7045:  LongTermPricingTypeThreeYear = \"ThreeYear\"",
          "7046: )",
          "7049: func LongTermPricingType_Values() []string {",
          "7050:  return []string{",
          "7051:   LongTermPricingTypeOneYear,",
          "7052:   LongTermPricingTypeThreeYear,",
          "7053:  }",
          "7054: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "6427:  TypeSnc1Hdd = \"SNC1_HDD\"",
          "6428: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7140:  TypeSnc1Ssd = \"SNC1_SSD\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6436:   TypeEdgeCg,",
          "6437:   TypeEdgeS,",
          "6438:   TypeSnc1Hdd,",
          "6439:  }",
          "6440: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7152:   TypeSnc1Ssd,",
          "",
          "---------------"
        ],
        "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go": [
          "File: service/snowball/snowballiface/interface.go -> service/snowball/snowballiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  CreateJobWithContext(aws.Context, *snowball.CreateJobInput, ...request.Option) (*snowball.CreateJobOutput, error)",
          "81:  CreateJobRequest(*snowball.CreateJobInput) (*request.Request, *snowball.CreateJobOutput)",
          "83:  CreateReturnShippingLabel(*snowball.CreateReturnShippingLabelInput) (*snowball.CreateReturnShippingLabelOutput, error)",
          "84:  CreateReturnShippingLabelWithContext(aws.Context, *snowball.CreateReturnShippingLabelInput, ...request.Option) (*snowball.CreateReturnShippingLabelOutput, error)",
          "85:  CreateReturnShippingLabelRequest(*snowball.CreateReturnShippingLabelInput) (*request.Request, *snowball.CreateReturnShippingLabelOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  CreateLongTermPricing(*snowball.CreateLongTermPricingInput) (*snowball.CreateLongTermPricingOutput, error)",
          "84:  CreateLongTermPricingWithContext(aws.Context, *snowball.CreateLongTermPricingInput, ...request.Option) (*snowball.CreateLongTermPricingOutput, error)",
          "85:  CreateLongTermPricingRequest(*snowball.CreateLongTermPricingInput) (*request.Request, *snowball.CreateLongTermPricingOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  ListJobsPages(*snowball.ListJobsInput, func(*snowball.ListJobsOutput, bool) bool) error",
          "143:  ListJobsPagesWithContext(aws.Context, *snowball.ListJobsInput, func(*snowball.ListJobsOutput, bool) bool, ...request.Option) error",
          "145:  UpdateCluster(*snowball.UpdateClusterInput) (*snowball.UpdateClusterOutput, error)",
          "146:  UpdateClusterWithContext(aws.Context, *snowball.UpdateClusterInput, ...request.Option) (*snowball.UpdateClusterOutput, error)",
          "147:  UpdateClusterRequest(*snowball.UpdateClusterInput) (*request.Request, *snowball.UpdateClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:  ListLongTermPricing(*snowball.ListLongTermPricingInput) (*snowball.ListLongTermPricingOutput, error)",
          "150:  ListLongTermPricingWithContext(aws.Context, *snowball.ListLongTermPricingInput, ...request.Option) (*snowball.ListLongTermPricingOutput, error)",
          "151:  ListLongTermPricingRequest(*snowball.ListLongTermPricingInput) (*request.Request, *snowball.ListLongTermPricingOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "153:  UpdateJobShipmentState(*snowball.UpdateJobShipmentStateInput) (*snowball.UpdateJobShipmentStateOutput, error)",
          "154:  UpdateJobShipmentStateWithContext(aws.Context, *snowball.UpdateJobShipmentStateInput, ...request.Option) (*snowball.UpdateJobShipmentStateOutput, error)",
          "155:  UpdateJobShipmentStateRequest(*snowball.UpdateJobShipmentStateInput) (*request.Request, *snowball.UpdateJobShipmentStateOutput)",
          "156: }",
          "158: var _ SnowballAPI = (*snowball.Snowball)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:  UpdateLongTermPricing(*snowball.UpdateLongTermPricingInput) (*snowball.UpdateLongTermPricingOutput, error)",
          "166:  UpdateLongTermPricingWithContext(aws.Context, *snowball.UpdateLongTermPricingInput, ...request.Option) (*snowball.UpdateLongTermPricingOutput, error)",
          "167:  UpdateLongTermPricingRequest(*snowball.UpdateLongTermPricingInput) (*request.Request, *snowball.UpdateLongTermPricingOutput)",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15707:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "15710:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15713:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15833:  return s",
          "15834: }",
          "15837: func (s *AssociationDescription) SetComplianceSeverity(v string) *AssociationDescription {",
          "15838:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15843: func (s *AssociationDescription) SetCalendarNames(v []*string) *AssociationDescription {",
          "15844:  s.CalendarNames = v",
          "15845:  return s",
          "15846: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16621:  AssociationVersion *string `type:\"string\"`",
          "16624:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16639:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16727:  return s",
          "16728: }",
          "16731: func (s *AssociationVersionInfo) SetComplianceSeverity(v string) *AssociationVersionInfo {",
          "16732:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16749: func (s *AssociationVersionInfo) SetCalendarNames(v []*string) *AssociationVersionInfo {",
          "16750:  s.CalendarNames = v",
          "16751:  return s",
          "16752: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "19809:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "19812:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19839:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "19977:  return s",
          "19978: }",
          "19981: func (s *CreateAssociationBatchRequestEntry) SetComplianceSeverity(v string) *CreateAssociationBatchRequestEntry {",
          "19982:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20011: func (s *CreateAssociationBatchRequestEntry) SetCalendarNames(v []*string) *CreateAssociationBatchRequestEntry {",
          "20012:  s.CalendarNames = v",
          "20013:  return s",
          "20014: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "20066:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "20069:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20108:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "20247:  return s",
          "20248: }",
          "20251: func (s *CreateAssociationInput) SetComplianceSeverity(v string) *CreateAssociationInput {",
          "20252:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20293: func (s *CreateAssociationInput) SetCalendarNames(v []*string) *CreateAssociationInput {",
          "20294:  s.CalendarNames = v",
          "20295:  return s",
          "20296: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "49150:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "49153:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49204:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "49327:  return s",
          "49328: }",
          "49331: func (s *UpdateAssociationInput) SetComplianceSeverity(v string) *UpdateAssociationInput {",
          "49332:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49385: func (s *UpdateAssociationInput) SetCalendarNames(v []*string) *UpdateAssociationInput {",
          "49386:  s.CalendarNames = v",
          "49387:  return s",
          "49388: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56233f682e53c9c393a78103e5b3317e6bf0f666",
      "candidate_info": {
        "commit_hash": "56233f682e53c9c393a78103e5b3317e6bf0f666",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/56233f682e53c9c393a78103e5b3317e6bf0f666",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ce/2017-10-25/api-2.json",
          "models/apis/ce/2017-10-25/docs-2.json",
          "models/apis/connect/2017-08-08/api-2.json",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/connect/2017-08-08/paginators-1.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/iotwireless/2020-11-22/api-2.json",
          "models/apis/iotwireless/2020-11-22/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/connectiface/interface.go",
          "service/costexplorer/api.go",
          "service/elasticache/api.go",
          "service/glue/api.go",
          "service/iotwireless/api.go",
          "service/rds/api.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.36.14 (2020-12-22) (#3706)\n\nRelease v1.36.14 (2020-12-22)\n===\n\n### Service Client Updates\n* `service/ce`: Updates service API and documentation\n* `service/connect`: Updates service API, documentation, and paginators\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache\n* `service/glue`: Updates service API and documentation\n  * AWS Glue Find Matches machine learning transforms now support column importance scores.\n* `service/iotwireless`: Updates service API and documentation\n* `service/rds`: Updates service API and documentation\n  * Adds customer-owned IP address (CoIP) support to Amazon RDS on AWS Outposts.\n* `service/ssm`: Updates service API and documentation\n  * SSM Maintenance Window support for registering/updating maintenance window tasks without targets.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go",
          "service/costexplorer/api.go||service/costexplorer/api.go",
          "service/elasticache/api.go||service/elasticache/api.go",
          "service/glue/api.go||service/glue/api.go",
          "service/iotwireless/api.go||service/iotwireless/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1255:   \"codebuild\": service{",
          "1257:    Endpoints: endpoints{",
          "1258:     \"ap-east-1\":      endpoint{},",
          "1259:     \"ap-northeast-1\": endpoint{},",
          "1260:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1258:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1397:   \"codepipeline\": service{",
          "1399:    Endpoints: endpoints{",
          "1400:     \"ap-northeast-1\": endpoint{},",
          "1401:     \"ap-northeast-2\": endpoint{},",
          "1402:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1401:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3970:   \"macie2\": service{",
          "3972:    Endpoints: endpoints{",
          "3973:     \"ap-east-1\":      endpoint{},",
          "3974:     \"ap-northeast-1\": endpoint{},",
          "3975:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3975:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3979:     \"ca-central-1\":   endpoint{},",
          "3980:     \"eu-central-1\":   endpoint{},",
          "3981:     \"eu-north-1\":     endpoint{},",
          "3982:     \"eu-west-1\":      endpoint{},",
          "3983:     \"eu-west-2\":      endpoint{},",
          "3984:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3985:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4006:       Region: \"us-west-2\",",
          "4007:      },",
          "4008:     },",
          "4014:    },",
          "4015:   },",
          "4016:   \"managedblockchain\": service{",
          "",
          "[Removed Lines]",
          "4009:     \"sa-east-1\": endpoint{},",
          "4010:     \"us-east-1\": endpoint{},",
          "4011:     \"us-east-2\": endpoint{},",
          "4012:     \"us-west-1\": endpoint{},",
          "4013:     \"us-west-2\": endpoint{},",
          "",
          "[Added Lines]",
          "4013:     \"me-south-1\": endpoint{},",
          "4014:     \"sa-east-1\":  endpoint{},",
          "4015:     \"us-east-1\":  endpoint{},",
          "4016:     \"us-east-2\":  endpoint{},",
          "4017:     \"us-west-1\":  endpoint{},",
          "4018:     \"us-west-2\":  endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.36.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.36.14\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:  return out, req.Send()",
          "891: }",
          "893: const opCreateRoutingProfile = \"CreateRoutingProfile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "903: const opCreateQuickConnect = \"CreateQuickConnect\"",
          "929: func (c *Connect) CreateQuickConnectRequest(input *CreateQuickConnectInput) (req *request.Request, output *CreateQuickConnectOutput) {",
          "930:  op := &request.Operation{",
          "931:   Name:       opCreateQuickConnect,",
          "932:   HTTPMethod: \"PUT\",",
          "933:   HTTPPath:   \"/quick-connects/{InstanceId}\",",
          "934:  }",
          "936:  if input == nil {",
          "937:   input = &CreateQuickConnectInput{}",
          "938:  }",
          "940:  output = &CreateQuickConnectOutput{}",
          "941:  req = c.newRequest(op, input, output)",
          "942:  return",
          "943: }",
          "981: func (c *Connect) CreateQuickConnect(input *CreateQuickConnectInput) (*CreateQuickConnectOutput, error) {",
          "982:  req, out := c.CreateQuickConnectRequest(input)",
          "983:  return out, req.Send()",
          "984: }",
          "995: func (c *Connect) CreateQuickConnectWithContext(ctx aws.Context, input *CreateQuickConnectInput, opts ...request.Option) (*CreateQuickConnectOutput, error) {",
          "996:  req, out := c.CreateQuickConnectRequest(input)",
          "997:  req.SetContext(ctx)",
          "998:  req.ApplyOptions(opts...)",
          "999:  return out, req.Send()",
          "1000: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1458:  return out, req.Send()",
          "1459: }",
          "1461: const opDeleteUseCase = \"DeleteUseCase\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1570: const opDeleteQuickConnect = \"DeleteQuickConnect\"",
          "1596: func (c *Connect) DeleteQuickConnectRequest(input *DeleteQuickConnectInput) (req *request.Request, output *DeleteQuickConnectOutput) {",
          "1597:  op := &request.Operation{",
          "1598:   Name:       opDeleteQuickConnect,",
          "1599:   HTTPMethod: \"DELETE\",",
          "1600:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}\",",
          "1601:  }",
          "1603:  if input == nil {",
          "1604:   input = &DeleteQuickConnectInput{}",
          "1605:  }",
          "1607:  output = &DeleteQuickConnectOutput{}",
          "1608:  req = c.newRequest(op, input, output)",
          "1609:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1610:  return",
          "1611: }",
          "1643: func (c *Connect) DeleteQuickConnect(input *DeleteQuickConnectInput) (*DeleteQuickConnectOutput, error) {",
          "1644:  req, out := c.DeleteQuickConnectRequest(input)",
          "1645:  return out, req.Send()",
          "1646: }",
          "1657: func (c *Connect) DeleteQuickConnectWithContext(ctx aws.Context, input *DeleteQuickConnectInput, opts ...request.Option) (*DeleteQuickConnectOutput, error) {",
          "1658:  req, out := c.DeleteQuickConnectRequest(input)",
          "1659:  req.SetContext(ctx)",
          "1660:  req.ApplyOptions(opts...)",
          "1661:  return out, req.Send()",
          "1662: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2111:  return out, req.Send()",
          "2112: }",
          "2114: const opDescribeRoutingProfile = \"DescribeRoutingProfile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2323: const opDescribeQuickConnect = \"DescribeQuickConnect\"",
          "2349: func (c *Connect) DescribeQuickConnectRequest(input *DescribeQuickConnectInput) (req *request.Request, output *DescribeQuickConnectOutput) {",
          "2350:  op := &request.Operation{",
          "2351:   Name:       opDescribeQuickConnect,",
          "2352:   HTTPMethod: \"GET\",",
          "2353:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}\",",
          "2354:  }",
          "2356:  if input == nil {",
          "2357:   input = &DescribeQuickConnectInput{}",
          "2358:  }",
          "2360:  output = &DescribeQuickConnectOutput{}",
          "2361:  req = c.newRequest(op, input, output)",
          "2362:  return",
          "2363: }",
          "2395: func (c *Connect) DescribeQuickConnect(input *DescribeQuickConnectInput) (*DescribeQuickConnectOutput, error) {",
          "2396:  req, out := c.DescribeQuickConnectRequest(input)",
          "2397:  return out, req.Send()",
          "2398: }",
          "2409: func (c *Connect) DescribeQuickConnectWithContext(ctx aws.Context, input *DescribeQuickConnectInput, opts ...request.Option) (*DescribeQuickConnectOutput, error) {",
          "2410:  req, out := c.DescribeQuickConnectRequest(input)",
          "2411:  req.SetContext(ctx)",
          "2412:  req.ApplyOptions(opts...)",
          "2413:  return out, req.Send()",
          "2414: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5327:  return p.Err()",
          "5328: }",
          "",
          "[Removed Lines]",
          "5330: const opListRoutingProfileQueues = \"ListRoutingProfileQueues\"",
          "",
          "[Added Lines]",
          "5648: const opListQuickConnects = \"ListQuickConnects\"",
          "5674: func (c *Connect) ListQuickConnectsRequest(input *ListQuickConnectsInput) (req *request.Request, output *ListQuickConnectsOutput) {",
          "5675:  op := &request.Operation{",
          "5676:   Name:       opListQuickConnects,",
          "5677:   HTTPMethod: \"GET\",",
          "5678:   HTTPPath:   \"/quick-connects/{InstanceId}\",",
          "5679:   Paginator: &request.Paginator{",
          "5680:    InputTokens:     []string{\"NextToken\"},",
          "5681:    OutputTokens:    []string{\"NextToken\"},",
          "5682:    LimitToken:      \"MaxResults\",",
          "5683:    TruncationToken: \"\",",
          "5684:   },",
          "5685:  }",
          "5687:  if input == nil {",
          "5688:   input = &ListQuickConnectsInput{}",
          "5689:  }",
          "5691:  output = &ListQuickConnectsOutput{}",
          "5692:  req = c.newRequest(op, input, output)",
          "5693:  return",
          "5694: }",
          "5727: func (c *Connect) ListQuickConnects(input *ListQuickConnectsInput) (*ListQuickConnectsOutput, error) {",
          "5728:  req, out := c.ListQuickConnectsRequest(input)",
          "5729:  return out, req.Send()",
          "5730: }",
          "5741: func (c *Connect) ListQuickConnectsWithContext(ctx aws.Context, input *ListQuickConnectsInput, opts ...request.Option) (*ListQuickConnectsOutput, error) {",
          "5742:  req, out := c.ListQuickConnectsRequest(input)",
          "5743:  req.SetContext(ctx)",
          "5744:  req.ApplyOptions(opts...)",
          "5745:  return out, req.Send()",
          "5746: }",
          "5765: func (c *Connect) ListQuickConnectsPages(input *ListQuickConnectsInput, fn func(*ListQuickConnectsOutput, bool) bool) error {",
          "5766:  return c.ListQuickConnectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "5767: }",
          "5776: func (c *Connect) ListQuickConnectsPagesWithContext(ctx aws.Context, input *ListQuickConnectsInput, fn func(*ListQuickConnectsOutput, bool) bool, opts ...request.Option) error {",
          "5777:  p := request.Pagination{",
          "5778:   NewRequest: func() (*request.Request, error) {",
          "5779:    var inCpy *ListQuickConnectsInput",
          "5780:    if input != nil {",
          "5781:     tmp := *input",
          "5782:     inCpy = &tmp",
          "5783:    }",
          "5784:    req, _ := c.ListQuickConnectsRequest(inCpy)",
          "5785:    req.SetContext(ctx)",
          "5786:    req.ApplyOptions(opts...)",
          "5787:    return req, nil",
          "5788:   },",
          "5789:  }",
          "5791:  for p.Next() {",
          "5792:   if !fn(p.Page().(*ListQuickConnectsOutput), !p.HasNextPage()) {",
          "5793:    break",
          "5794:   }",
          "5795:  }",
          "5797:  return p.Err()",
          "5798: }",
          "5800: const opListRoutingProfileQueues = \"ListRoutingProfileQueues\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7945:  return out, req.Send()",
          "7946: }",
          "7975:  op := &request.Operation{",
          "7977:   HTTPMethod: \"POST\",",
          "7979:  }",
          "7981:  if input == nil {",
          "7983:  }",
          "7986:  req = c.newRequest(op, input, output)",
          "7987:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "7988:  return",
          "7989: }",
          "",
          "[Removed Lines]",
          "7948: const opUpdateRoutingProfileConcurrency = \"UpdateRoutingProfileConcurrency\"",
          "7974: func (c *Connect) UpdateRoutingProfileConcurrencyRequest(input *UpdateRoutingProfileConcurrencyInput) (req *request.Request, output *UpdateRoutingProfileConcurrencyOutput) {",
          "7976:   Name:       opUpdateRoutingProfileConcurrency,",
          "7978:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency\",",
          "7982:   input = &UpdateRoutingProfileConcurrencyInput{}",
          "7985:  output = &UpdateRoutingProfileConcurrencyOutput{}",
          "",
          "[Added Lines]",
          "8421: const opUpdateQuickConnectConfig = \"UpdateQuickConnectConfig\"",
          "8447: func (c *Connect) UpdateQuickConnectConfigRequest(input *UpdateQuickConnectConfigInput) (req *request.Request, output *UpdateQuickConnectConfigOutput) {",
          "8449:   Name:       opUpdateQuickConnectConfig,",
          "8451:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}/config\",",
          "8455:   input = &UpdateQuickConnectConfigInput{}",
          "8458:  output = &UpdateQuickConnectConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8022:  return out, req.Send()",
          "8023: }",
          "8036:  req.SetContext(ctx)",
          "8037:  req.ApplyOptions(opts...)",
          "8038:  return out, req.Send()",
          "8039: }",
          "8068:  op := &request.Operation{",
          "8070:   HTTPMethod: \"POST\",",
          "8072:  }",
          "8074:  if input == nil {",
          "8076:  }",
          "8079:  req = c.newRequest(op, input, output)",
          "8080:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8081:  return",
          "8082: }",
          "",
          "[Removed Lines]",
          "8020: func (c *Connect) UpdateRoutingProfileConcurrency(input *UpdateRoutingProfileConcurrencyInput) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8021:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8034: func (c *Connect) UpdateRoutingProfileConcurrencyWithContext(ctx aws.Context, input *UpdateRoutingProfileConcurrencyInput, opts ...request.Option) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8035:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8041: const opUpdateRoutingProfileDefaultOutboundQueue = \"UpdateRoutingProfileDefaultOutboundQueue\"",
          "8067: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueRequest(input *UpdateRoutingProfileDefaultOutboundQueueInput) (req *request.Request, output *UpdateRoutingProfileDefaultOutboundQueueOutput) {",
          "8069:   Name:       opUpdateRoutingProfileDefaultOutboundQueue,",
          "8071:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue\",",
          "8075:   input = &UpdateRoutingProfileDefaultOutboundQueueInput{}",
          "8078:  output = &UpdateRoutingProfileDefaultOutboundQueueOutput{}",
          "",
          "[Added Lines]",
          "8494: func (c *Connect) UpdateQuickConnectConfig(input *UpdateQuickConnectConfigInput) (*UpdateQuickConnectConfigOutput, error) {",
          "8495:  req, out := c.UpdateQuickConnectConfigRequest(input)",
          "8508: func (c *Connect) UpdateQuickConnectConfigWithContext(ctx aws.Context, input *UpdateQuickConnectConfigInput, opts ...request.Option) (*UpdateQuickConnectConfigOutput, error) {",
          "8509:  req, out := c.UpdateQuickConnectConfigRequest(input)",
          "8515: const opUpdateQuickConnectName = \"UpdateQuickConnectName\"",
          "8541: func (c *Connect) UpdateQuickConnectNameRequest(input *UpdateQuickConnectNameInput) (req *request.Request, output *UpdateQuickConnectNameOutput) {",
          "8543:   Name:       opUpdateQuickConnectName,",
          "8545:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}/name\",",
          "8549:   input = &UpdateQuickConnectNameInput{}",
          "8552:  output = &UpdateQuickConnectNameOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8114:  return out, req.Send()",
          "8115: }",
          "8128:  req.SetContext(ctx)",
          "8129:  req.ApplyOptions(opts...)",
          "8130:  return out, req.Send()",
          "8131: }",
          "8160:  op := &request.Operation{",
          "8162:   HTTPMethod: \"POST\",",
          "8164:  }",
          "8166:  if input == nil {",
          "8168:  }",
          "8171:  req = c.newRequest(op, input, output)",
          "8172:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8173:  return",
          "8174: }",
          "",
          "[Removed Lines]",
          "8112: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueue(input *UpdateRoutingProfileDefaultOutboundQueueInput) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8113:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8126: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueWithContext(ctx aws.Context, input *UpdateRoutingProfileDefaultOutboundQueueInput, opts ...request.Option) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8127:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8133: const opUpdateRoutingProfileName = \"UpdateRoutingProfileName\"",
          "8159: func (c *Connect) UpdateRoutingProfileNameRequest(input *UpdateRoutingProfileNameInput) (req *request.Request, output *UpdateRoutingProfileNameOutput) {",
          "8161:   Name:       opUpdateRoutingProfileName,",
          "8163:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/name\",",
          "8167:   input = &UpdateRoutingProfileNameInput{}",
          "8170:  output = &UpdateRoutingProfileNameOutput{}",
          "",
          "[Added Lines]",
          "8589: func (c *Connect) UpdateQuickConnectName(input *UpdateQuickConnectNameInput) (*UpdateQuickConnectNameOutput, error) {",
          "8590:  req, out := c.UpdateQuickConnectNameRequest(input)",
          "8603: func (c *Connect) UpdateQuickConnectNameWithContext(ctx aws.Context, input *UpdateQuickConnectNameInput, opts ...request.Option) (*UpdateQuickConnectNameOutput, error) {",
          "8604:  req, out := c.UpdateQuickConnectNameRequest(input)",
          "8610: const opUpdateRoutingProfileConcurrency = \"UpdateRoutingProfileConcurrency\"",
          "8636: func (c *Connect) UpdateRoutingProfileConcurrencyRequest(input *UpdateRoutingProfileConcurrencyInput) (req *request.Request, output *UpdateRoutingProfileConcurrencyOutput) {",
          "8638:   Name:       opUpdateRoutingProfileConcurrency,",
          "8640:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency\",",
          "8644:   input = &UpdateRoutingProfileConcurrencyInput{}",
          "8647:  output = &UpdateRoutingProfileConcurrencyOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8210:  return out, req.Send()",
          "8211: }",
          "8224:  req.SetContext(ctx)",
          "8225:  req.ApplyOptions(opts...)",
          "8226:  return out, req.Send()",
          "8227: }",
          "8256:  op := &request.Operation{",
          "8258:   HTTPMethod: \"POST\",",
          "8260:  }",
          "8262:  if input == nil {",
          "8264:  }",
          "8267:  req = c.newRequest(op, input, output)",
          "8268:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8269:  return",
          "8270: }",
          "",
          "[Removed Lines]",
          "8208: func (c *Connect) UpdateRoutingProfileName(input *UpdateRoutingProfileNameInput) (*UpdateRoutingProfileNameOutput, error) {",
          "8209:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8222: func (c *Connect) UpdateRoutingProfileNameWithContext(ctx aws.Context, input *UpdateRoutingProfileNameInput, opts ...request.Option) (*UpdateRoutingProfileNameOutput, error) {",
          "8223:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8229: const opUpdateRoutingProfileQueues = \"UpdateRoutingProfileQueues\"",
          "8255: func (c *Connect) UpdateRoutingProfileQueuesRequest(input *UpdateRoutingProfileQueuesInput) (req *request.Request, output *UpdateRoutingProfileQueuesOutput) {",
          "8257:   Name:       opUpdateRoutingProfileQueues,",
          "8259:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "8263:   input = &UpdateRoutingProfileQueuesInput{}",
          "8266:  output = &UpdateRoutingProfileQueuesOutput{}",
          "",
          "[Added Lines]",
          "8682: func (c *Connect) UpdateRoutingProfileConcurrency(input *UpdateRoutingProfileConcurrencyInput) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8683:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8696: func (c *Connect) UpdateRoutingProfileConcurrencyWithContext(ctx aws.Context, input *UpdateRoutingProfileConcurrencyInput, opts ...request.Option) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8697:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8703: const opUpdateRoutingProfileDefaultOutboundQueue = \"UpdateRoutingProfileDefaultOutboundQueue\"",
          "8729: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueRequest(input *UpdateRoutingProfileDefaultOutboundQueueInput) (req *request.Request, output *UpdateRoutingProfileDefaultOutboundQueueOutput) {",
          "8731:   Name:       opUpdateRoutingProfileDefaultOutboundQueue,",
          "8733:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue\",",
          "8737:   input = &UpdateRoutingProfileDefaultOutboundQueueInput{}",
          "8740:  output = &UpdateRoutingProfileDefaultOutboundQueueOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8302:  return out, req.Send()",
          "8303: }",
          "",
          "[Removed Lines]",
          "8300: func (c *Connect) UpdateRoutingProfileQueues(input *UpdateRoutingProfileQueuesInput) (*UpdateRoutingProfileQueuesOutput, error) {",
          "8301:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "",
          "[Added Lines]",
          "8774: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueue(input *UpdateRoutingProfileDefaultOutboundQueueInput) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8775:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8776:  return out, req.Send()",
          "8777: }",
          "8788: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueWithContext(ctx aws.Context, input *UpdateRoutingProfileDefaultOutboundQueueInput, opts ...request.Option) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8789:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8790:  req.SetContext(ctx)",
          "8791:  req.ApplyOptions(opts...)",
          "8792:  return out, req.Send()",
          "8793: }",
          "8795: const opUpdateRoutingProfileName = \"UpdateRoutingProfileName\"",
          "8821: func (c *Connect) UpdateRoutingProfileNameRequest(input *UpdateRoutingProfileNameInput) (req *request.Request, output *UpdateRoutingProfileNameOutput) {",
          "8822:  op := &request.Operation{",
          "8823:   Name:       opUpdateRoutingProfileName,",
          "8824:   HTTPMethod: \"POST\",",
          "8825:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/name\",",
          "8826:  }",
          "8828:  if input == nil {",
          "8829:   input = &UpdateRoutingProfileNameInput{}",
          "8830:  }",
          "8832:  output = &UpdateRoutingProfileNameOutput{}",
          "8833:  req = c.newRequest(op, input, output)",
          "8834:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8835:  return",
          "8836: }",
          "8870: func (c *Connect) UpdateRoutingProfileName(input *UpdateRoutingProfileNameInput) (*UpdateRoutingProfileNameOutput, error) {",
          "8871:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8872:  return out, req.Send()",
          "8873: }",
          "8884: func (c *Connect) UpdateRoutingProfileNameWithContext(ctx aws.Context, input *UpdateRoutingProfileNameInput, opts ...request.Option) (*UpdateRoutingProfileNameOutput, error) {",
          "8885:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8886:  req.SetContext(ctx)",
          "8887:  req.ApplyOptions(opts...)",
          "8888:  return out, req.Send()",
          "8889: }",
          "8891: const opUpdateRoutingProfileQueues = \"UpdateRoutingProfileQueues\"",
          "8917: func (c *Connect) UpdateRoutingProfileQueuesRequest(input *UpdateRoutingProfileQueuesInput) (req *request.Request, output *UpdateRoutingProfileQueuesOutput) {",
          "8918:  op := &request.Operation{",
          "8919:   Name:       opUpdateRoutingProfileQueues,",
          "8920:   HTTPMethod: \"POST\",",
          "8921:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "8922:  }",
          "8924:  if input == nil {",
          "8925:   input = &UpdateRoutingProfileQueuesInput{}",
          "8926:  }",
          "8928:  output = &UpdateRoutingProfileQueuesOutput{}",
          "8929:  req = c.newRequest(op, input, output)",
          "8930:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8931:  return",
          "8932: }",
          "8962: func (c *Connect) UpdateRoutingProfileQueues(input *UpdateRoutingProfileQueuesInput) (*UpdateRoutingProfileQueuesOutput, error) {",
          "8963:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10227:  return s",
          "10228: }",
          "10231:  _ struct{} `type:\"structure\"`",
          "10246:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "10257:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10264:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "10265: }",
          "10269:  return awsutil.Prettify(s)",
          "10270: }",
          "10274:  return s.String()",
          "10275: }",
          "10289:  if s.InstanceId == nil {",
          "10290:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "10291:  }",
          "10292:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "10293:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "10294:  }",
          "10298:  if s.Name == nil {",
          "10299:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "10300:  }",
          "10301:  if s.Name != nil && len(*s.Name) < 1 {",
          "10302:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "10303:  }",
          "10306:  }",
          "10307:  if s.Tags != nil && len(s.Tags) < 1 {",
          "10308:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "10309:  }",
          "10328:   }",
          "10329:  }",
          "",
          "[Removed Lines]",
          "10230: type CreateRoutingProfileInput struct {",
          "10236:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "10241:  Description *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10252:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "10261:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\"`",
          "10268: func (s CreateRoutingProfileInput) String() string {",
          "10273: func (s CreateRoutingProfileInput) GoString() string {",
          "10278: func (s *CreateRoutingProfileInput) Validate() error {",
          "10279:  invalidParams := request.ErrInvalidParams{Context: \"CreateRoutingProfileInput\"}",
          "10280:  if s.DefaultOutboundQueueId == nil {",
          "10281:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "10282:  }",
          "10283:  if s.Description == nil {",
          "10284:   invalidParams.Add(request.NewErrParamRequired(\"Description\"))",
          "10285:  }",
          "10286:  if s.Description != nil && len(*s.Description) < 1 {",
          "10287:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "10288:  }",
          "10295:  if s.MediaConcurrencies == nil {",
          "10296:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "10297:  }",
          "10304:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "10305:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "10310:  if s.MediaConcurrencies != nil {",
          "10311:   for i, v := range s.MediaConcurrencies {",
          "10312:    if v == nil {",
          "10313:     continue",
          "10314:    }",
          "10315:    if err := v.Validate(); err != nil {",
          "10316:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "10317:    }",
          "10318:   }",
          "10319:  }",
          "10320:  if s.QueueConfigs != nil {",
          "10321:   for i, v := range s.QueueConfigs {",
          "10322:    if v == nil {",
          "10323:     continue",
          "10324:    }",
          "10325:    if err := v.Validate(); err != nil {",
          "10326:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "10327:    }",
          "",
          "[Added Lines]",
          "10892: type CreateQuickConnectInput struct {",
          "10896:  Description *string `type:\"string\"`",
          "10911:  QuickConnectConfig *QuickConnectConfig `type:\"structure\" required:\"true\"`",
          "10918: func (s CreateQuickConnectInput) String() string {",
          "10923: func (s CreateQuickConnectInput) GoString() string {",
          "10928: func (s *CreateQuickConnectInput) Validate() error {",
          "10929:  invalidParams := request.ErrInvalidParams{Context: \"CreateQuickConnectInput\"}",
          "10942:  if s.QuickConnectConfig == nil {",
          "10943:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectConfig\"))",
          "10948:  if s.QuickConnectConfig != nil {",
          "10949:   if err := s.QuickConnectConfig.Validate(); err != nil {",
          "10950:    invalidParams.AddNested(\"QuickConnectConfig\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10334:  return nil",
          "10335: }",
          "10345:  s.Description = &v",
          "10346:  return s",
          "10347: }",
          "",
          "[Removed Lines]",
          "10338: func (s *CreateRoutingProfileInput) SetDefaultOutboundQueueId(v string) *CreateRoutingProfileInput {",
          "10339:  s.DefaultOutboundQueueId = &v",
          "10340:  return s",
          "10341: }",
          "10344: func (s *CreateRoutingProfileInput) SetDescription(v string) *CreateRoutingProfileInput {",
          "",
          "[Added Lines]",
          "10961: func (s *CreateQuickConnectInput) SetDescription(v string) *CreateQuickConnectInput {",
          "10962:  s.Description = &v",
          "10963:  return s",
          "10964: }",
          "10967: func (s *CreateQuickConnectInput) SetInstanceId(v string) *CreateQuickConnectInput {",
          "10968:  s.InstanceId = &v",
          "10969:  return s",
          "10970: }",
          "10973: func (s *CreateQuickConnectInput) SetName(v string) *CreateQuickConnectInput {",
          "10974:  s.Name = &v",
          "10975:  return s",
          "10976: }",
          "10979: func (s *CreateQuickConnectInput) SetQuickConnectConfig(v *QuickConnectConfig) *CreateQuickConnectInput {",
          "10980:  s.QuickConnectConfig = v",
          "10981:  return s",
          "10982: }",
          "10985: func (s *CreateQuickConnectInput) SetTags(v map[string]*string) *CreateQuickConnectInput {",
          "10986:  s.Tags = v",
          "10987:  return s",
          "10988: }",
          "10990: type CreateQuickConnectOutput struct {",
          "10991:  _ struct{} `type:\"structure\"`",
          "10994:  QuickConnectARN *string `type:\"string\"`",
          "10997:  QuickConnectId *string `type:\"string\"`",
          "10998: }",
          "11001: func (s CreateQuickConnectOutput) String() string {",
          "11002:  return awsutil.Prettify(s)",
          "11003: }",
          "11006: func (s CreateQuickConnectOutput) GoString() string {",
          "11007:  return s.String()",
          "11008: }",
          "11011: func (s *CreateQuickConnectOutput) SetQuickConnectARN(v string) *CreateQuickConnectOutput {",
          "11012:  s.QuickConnectARN = &v",
          "11013:  return s",
          "11014: }",
          "11017: func (s *CreateQuickConnectOutput) SetQuickConnectId(v string) *CreateQuickConnectOutput {",
          "11018:  s.QuickConnectId = &v",
          "11019:  return s",
          "11020: }",
          "11022: type CreateRoutingProfileInput struct {",
          "11023:  _ struct{} `type:\"structure\"`",
          "11028:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "11033:  Description *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11038:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11044:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "11049:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11053:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\"`",
          "11056:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "11057: }",
          "11060: func (s CreateRoutingProfileInput) String() string {",
          "11061:  return awsutil.Prettify(s)",
          "11062: }",
          "11065: func (s CreateRoutingProfileInput) GoString() string {",
          "11066:  return s.String()",
          "11067: }",
          "11070: func (s *CreateRoutingProfileInput) Validate() error {",
          "11071:  invalidParams := request.ErrInvalidParams{Context: \"CreateRoutingProfileInput\"}",
          "11072:  if s.DefaultOutboundQueueId == nil {",
          "11073:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "11074:  }",
          "11075:  if s.Description == nil {",
          "11076:   invalidParams.Add(request.NewErrParamRequired(\"Description\"))",
          "11077:  }",
          "11078:  if s.Description != nil && len(*s.Description) < 1 {",
          "11079:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "11080:  }",
          "11081:  if s.InstanceId == nil {",
          "11082:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11083:  }",
          "11084:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11085:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11086:  }",
          "11087:  if s.MediaConcurrencies == nil {",
          "11088:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "11089:  }",
          "11090:  if s.Name == nil {",
          "11091:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "11092:  }",
          "11093:  if s.Name != nil && len(*s.Name) < 1 {",
          "11094:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "11095:  }",
          "11096:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "11097:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "11098:  }",
          "11099:  if s.Tags != nil && len(s.Tags) < 1 {",
          "11100:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "11101:  }",
          "11102:  if s.MediaConcurrencies != nil {",
          "11103:   for i, v := range s.MediaConcurrencies {",
          "11104:    if v == nil {",
          "11105:     continue",
          "11106:    }",
          "11107:    if err := v.Validate(); err != nil {",
          "11108:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "11109:    }",
          "11110:   }",
          "11111:  }",
          "11112:  if s.QueueConfigs != nil {",
          "11113:   for i, v := range s.QueueConfigs {",
          "11114:    if v == nil {",
          "11115:     continue",
          "11116:    }",
          "11117:    if err := v.Validate(); err != nil {",
          "11118:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "11119:    }",
          "11120:   }",
          "11121:  }",
          "11123:  if invalidParams.Len() > 0 {",
          "11124:   return invalidParams",
          "11125:  }",
          "11126:  return nil",
          "11127: }",
          "11130: func (s *CreateRoutingProfileInput) SetDefaultOutboundQueueId(v string) *CreateRoutingProfileInput {",
          "11131:  s.DefaultOutboundQueueId = &v",
          "11132:  return s",
          "11133: }",
          "11136: func (s *CreateRoutingProfileInput) SetDescription(v string) *CreateRoutingProfileInput {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11097:  return s.String()",
          "11098: }",
          "11100: type DeleteUseCaseInput struct {",
          "11101:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11892: type DeleteQuickConnectInput struct {",
          "11893:  _ struct{} `type:\"structure\"`",
          "11898:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11903:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "11904: }",
          "11907: func (s DeleteQuickConnectInput) String() string {",
          "11908:  return awsutil.Prettify(s)",
          "11909: }",
          "11912: func (s DeleteQuickConnectInput) GoString() string {",
          "11913:  return s.String()",
          "11914: }",
          "11917: func (s *DeleteQuickConnectInput) Validate() error {",
          "11918:  invalidParams := request.ErrInvalidParams{Context: \"DeleteQuickConnectInput\"}",
          "11919:  if s.InstanceId == nil {",
          "11920:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11921:  }",
          "11922:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11923:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11924:  }",
          "11925:  if s.QuickConnectId == nil {",
          "11926:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "11927:  }",
          "11928:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "11929:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "11930:  }",
          "11932:  if invalidParams.Len() > 0 {",
          "11933:   return invalidParams",
          "11934:  }",
          "11935:  return nil",
          "11936: }",
          "11939: func (s *DeleteQuickConnectInput) SetInstanceId(v string) *DeleteQuickConnectInput {",
          "11940:  s.InstanceId = &v",
          "11941:  return s",
          "11942: }",
          "11945: func (s *DeleteQuickConnectInput) SetQuickConnectId(v string) *DeleteQuickConnectInput {",
          "11946:  s.QuickConnectId = &v",
          "11947:  return s",
          "11948: }",
          "11950: type DeleteQuickConnectOutput struct {",
          "11951:  _ struct{} `type:\"structure\"`",
          "11952: }",
          "11955: func (s DeleteQuickConnectOutput) String() string {",
          "11956:  return awsutil.Prettify(s)",
          "11957: }",
          "11960: func (s DeleteQuickConnectOutput) GoString() string {",
          "11961:  return s.String()",
          "11962: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11652:  return s",
          "11653: }",
          "11656:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "11655: type DescribeRoutingProfileInput struct {",
          "",
          "[Added Lines]",
          "12519: type DescribeQuickConnectInput struct {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11661:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11667: }",
          "11671:  return awsutil.Prettify(s)",
          "11672: }",
          "11676:  return s.String()",
          "11677: }",
          "11682:  if s.InstanceId == nil {",
          "11683:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11684:  }",
          "11685:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11686:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11687:  }",
          "11690:  }",
          "11693:  }",
          "11695:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "11666:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11670: func (s DescribeRoutingProfileInput) String() string {",
          "11675: func (s DescribeRoutingProfileInput) GoString() string {",
          "11680: func (s *DescribeRoutingProfileInput) Validate() error {",
          "11681:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRoutingProfileInput\"}",
          "11688:  if s.RoutingProfileId == nil {",
          "11689:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11691:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11692:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "",
          "[Added Lines]",
          "12530:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "12534: func (s DescribeQuickConnectInput) String() string {",
          "12539: func (s DescribeQuickConnectInput) GoString() string {",
          "12544: func (s *DescribeQuickConnectInput) Validate() error {",
          "12545:  invalidParams := request.ErrInvalidParams{Context: \"DescribeQuickConnectInput\"}",
          "12552:  if s.QuickConnectId == nil {",
          "12553:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "12555:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "12556:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "11699: }",
          "11703:  s.InstanceId = &v",
          "11704:  return s",
          "11705: }",
          "11710:  return s",
          "11711: }",
          "11714:  _ struct{} `type:\"structure\"`",
          "11718: }",
          "11722:  return awsutil.Prettify(s)",
          "11723: }",
          "11727:  return s.String()",
          "11728: }",
          "11733:  return s",
          "11734: }",
          "11737:  _ struct{} `type:\"structure\"`",
          "11747:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11748: }",
          "11752:  return awsutil.Prettify(s)",
          "11753: }",
          "11757:  return s.String()",
          "11758: }",
          "11768:  }",
          "11769:  if s.InstanceId == nil {",
          "11770:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "11702: func (s *DescribeRoutingProfileInput) SetInstanceId(v string) *DescribeRoutingProfileInput {",
          "11708: func (s *DescribeRoutingProfileInput) SetRoutingProfileId(v string) *DescribeRoutingProfileInput {",
          "11709:  s.RoutingProfileId = &v",
          "11713: type DescribeRoutingProfileOutput struct {",
          "11717:  RoutingProfile *RoutingProfile `type:\"structure\"`",
          "11721: func (s DescribeRoutingProfileOutput) String() string {",
          "11726: func (s DescribeRoutingProfileOutput) GoString() string {",
          "11731: func (s *DescribeRoutingProfileOutput) SetRoutingProfile(v *RoutingProfile) *DescribeRoutingProfileOutput {",
          "11732:  s.RoutingProfile = v",
          "11736: type DescribeUserHierarchyGroupInput struct {",
          "11742:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "11751: func (s DescribeUserHierarchyGroupInput) String() string {",
          "11756: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "11761: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "11762:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "11763:  if s.HierarchyGroupId == nil {",
          "11764:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "11765:  }",
          "11766:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "11767:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "",
          "[Added Lines]",
          "12566: func (s *DescribeQuickConnectInput) SetInstanceId(v string) *DescribeQuickConnectInput {",
          "12572: func (s *DescribeQuickConnectInput) SetQuickConnectId(v string) *DescribeQuickConnectInput {",
          "12573:  s.QuickConnectId = &v",
          "12577: type DescribeQuickConnectOutput struct {",
          "12581:  QuickConnect *QuickConnect `type:\"structure\"`",
          "12585: func (s DescribeQuickConnectOutput) String() string {",
          "12590: func (s DescribeQuickConnectOutput) GoString() string {",
          "12595: func (s *DescribeQuickConnectOutput) SetQuickConnect(v *QuickConnect) *DescribeQuickConnectOutput {",
          "12596:  s.QuickConnect = v",
          "12600: type DescribeRoutingProfileInput struct {",
          "12611:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "12615: func (s DescribeRoutingProfileInput) String() string {",
          "12620: func (s DescribeRoutingProfileInput) GoString() string {",
          "12625: func (s *DescribeRoutingProfileInput) Validate() error {",
          "12626:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRoutingProfileInput\"}",
          "12627:  if s.InstanceId == nil {",
          "12628:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "12629:  }",
          "12630:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "12631:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "12632:  }",
          "12633:  if s.RoutingProfileId == nil {",
          "12634:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "12635:  }",
          "12636:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "12637:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "12638:  }",
          "12640:  if invalidParams.Len() > 0 {",
          "12641:   return invalidParams",
          "12642:  }",
          "12643:  return nil",
          "12644: }",
          "12647: func (s *DescribeRoutingProfileInput) SetInstanceId(v string) *DescribeRoutingProfileInput {",
          "12648:  s.InstanceId = &v",
          "12649:  return s",
          "12650: }",
          "12653: func (s *DescribeRoutingProfileInput) SetRoutingProfileId(v string) *DescribeRoutingProfileInput {",
          "12654:  s.RoutingProfileId = &v",
          "12655:  return s",
          "12656: }",
          "12658: type DescribeRoutingProfileOutput struct {",
          "12659:  _ struct{} `type:\"structure\"`",
          "12662:  RoutingProfile *RoutingProfile `type:\"structure\"`",
          "12663: }",
          "12666: func (s DescribeRoutingProfileOutput) String() string {",
          "12667:  return awsutil.Prettify(s)",
          "12668: }",
          "12671: func (s DescribeRoutingProfileOutput) GoString() string {",
          "12672:  return s.String()",
          "12673: }",
          "12676: func (s *DescribeRoutingProfileOutput) SetRoutingProfile(v *RoutingProfile) *DescribeRoutingProfileOutput {",
          "12677:  s.RoutingProfile = v",
          "12678:  return s",
          "12679: }",
          "12681: type DescribeUserHierarchyGroupInput struct {",
          "12682:  _ struct{} `type:\"structure\"`",
          "12687:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "12692:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "12693: }",
          "12696: func (s DescribeUserHierarchyGroupInput) String() string {",
          "12697:  return awsutil.Prettify(s)",
          "12698: }",
          "12701: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "12702:  return s.String()",
          "12703: }",
          "12706: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "12707:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "12708:  if s.HierarchyGroupId == nil {",
          "12709:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "12710:  }",
          "12711:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "12712:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "16060:  return s",
          "16061: }",
          "16063: type ListRoutingProfileQueuesInput struct {",
          "16064:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17008: type ListQuickConnectsInput struct {",
          "17009:  _ struct{} `type:\"structure\"`",
          "17014:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "17017:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "17021:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "17026:  QuickConnectTypes []*string `location:\"querystring\" locationName:\"QuickConnectTypes\" type:\"list\"`",
          "17027: }",
          "17030: func (s ListQuickConnectsInput) String() string {",
          "17031:  return awsutil.Prettify(s)",
          "17032: }",
          "17035: func (s ListQuickConnectsInput) GoString() string {",
          "17036:  return s.String()",
          "17037: }",
          "17040: func (s *ListQuickConnectsInput) Validate() error {",
          "17041:  invalidParams := request.ErrInvalidParams{Context: \"ListQuickConnectsInput\"}",
          "17042:  if s.InstanceId == nil {",
          "17043:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "17044:  }",
          "17045:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "17046:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "17047:  }",
          "17048:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "17049:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "17050:  }",
          "17052:  if invalidParams.Len() > 0 {",
          "17053:   return invalidParams",
          "17054:  }",
          "17055:  return nil",
          "17056: }",
          "17059: func (s *ListQuickConnectsInput) SetInstanceId(v string) *ListQuickConnectsInput {",
          "17060:  s.InstanceId = &v",
          "17061:  return s",
          "17062: }",
          "17065: func (s *ListQuickConnectsInput) SetMaxResults(v int64) *ListQuickConnectsInput {",
          "17066:  s.MaxResults = &v",
          "17067:  return s",
          "17068: }",
          "17071: func (s *ListQuickConnectsInput) SetNextToken(v string) *ListQuickConnectsInput {",
          "17072:  s.NextToken = &v",
          "17073:  return s",
          "17074: }",
          "17077: func (s *ListQuickConnectsInput) SetQuickConnectTypes(v []*string) *ListQuickConnectsInput {",
          "17078:  s.QuickConnectTypes = v",
          "17079:  return s",
          "17080: }",
          "17082: type ListQuickConnectsOutput struct {",
          "17083:  _ struct{} `type:\"structure\"`",
          "17086:  NextToken *string `type:\"string\"`",
          "17089:  QuickConnectSummaryList []*QuickConnectSummary `type:\"list\"`",
          "17090: }",
          "17093: func (s ListQuickConnectsOutput) String() string {",
          "17094:  return awsutil.Prettify(s)",
          "17095: }",
          "17098: func (s ListQuickConnectsOutput) GoString() string {",
          "17099:  return s.String()",
          "17100: }",
          "17103: func (s *ListQuickConnectsOutput) SetNextToken(v string) *ListQuickConnectsOutput {",
          "17104:  s.NextToken = &v",
          "17105:  return s",
          "17106: }",
          "17109: func (s *ListQuickConnectsOutput) SetQuickConnectSummaryList(v []*QuickConnectSummary) *ListQuickConnectsOutput {",
          "17110:  s.QuickConnectSummaryList = v",
          "17111:  return s",
          "17112: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "16981:  return s",
          "16982: }",
          "16985: type PhoneNumberSummary struct {",
          "16986:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18036: type PhoneNumberQuickConnectConfig struct {",
          "18037:  _ struct{} `type:\"structure\"`",
          "18042:  PhoneNumber *string `type:\"string\" required:\"true\"`",
          "18043: }",
          "18046: func (s PhoneNumberQuickConnectConfig) String() string {",
          "18047:  return awsutil.Prettify(s)",
          "18048: }",
          "18051: func (s PhoneNumberQuickConnectConfig) GoString() string {",
          "18052:  return s.String()",
          "18053: }",
          "18056: func (s *PhoneNumberQuickConnectConfig) Validate() error {",
          "18057:  invalidParams := request.ErrInvalidParams{Context: \"PhoneNumberQuickConnectConfig\"}",
          "18058:  if s.PhoneNumber == nil {",
          "18059:   invalidParams.Add(request.NewErrParamRequired(\"PhoneNumber\"))",
          "18060:  }",
          "18062:  if invalidParams.Len() > 0 {",
          "18063:   return invalidParams",
          "18064:  }",
          "18065:  return nil",
          "18066: }",
          "18069: func (s *PhoneNumberQuickConnectConfig) SetPhoneNumber(v string) *PhoneNumberQuickConnectConfig {",
          "18070:  s.PhoneNumber = &v",
          "18071:  return s",
          "18072: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "17089:  return s.String()",
          "17090: }",
          "17095:  return s",
          "17096: }",
          "17101:  return s",
          "17102: }",
          "17107:  return s",
          "17108: }",
          "17112:  _ struct{} `type:\"structure\"`",
          "17119: }",
          "17123:  return awsutil.Prettify(s)",
          "17124: }",
          "17128:  return s.String()",
          "17129: }",
          "17134:  return s",
          "17135: }",
          "17140:  return s",
          "17141: }",
          "17145:  _ struct{} `type:\"structure\"`",
          "17148:  Arn *string `type:\"string\"`",
          "17151:  Id *string `type:\"string\"`",
          "17154:  Name *string `min:\"1\" type:\"string\"`",
          "17158: }",
          "17162:  return awsutil.Prettify(s)",
          "17163: }",
          "17167:  return s.String()",
          "17168: }",
          "17172:  s.Arn = &v",
          "17173:  return s",
          "17174: }",
          "17178:  s.Id = &v",
          "17179:  return s",
          "17180: }",
          "17184:  s.Name = &v",
          "17185:  return s",
          "17186: }",
          "17191:  return s",
          "17192: }",
          "",
          "[Removed Lines]",
          "17093: func (s *PromptSummary) SetArn(v string) *PromptSummary {",
          "17094:  s.Arn = &v",
          "17099: func (s *PromptSummary) SetId(v string) *PromptSummary {",
          "17100:  s.Id = &v",
          "17105: func (s *PromptSummary) SetName(v string) *PromptSummary {",
          "17106:  s.Name = &v",
          "17111: type QueueReference struct {",
          "17115:  Arn *string `type:\"string\"`",
          "17118:  Id *string `type:\"string\"`",
          "17122: func (s QueueReference) String() string {",
          "17127: func (s QueueReference) GoString() string {",
          "17132: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "17133:  s.Arn = &v",
          "17138: func (s *QueueReference) SetId(v string) *QueueReference {",
          "17139:  s.Id = &v",
          "17144: type QueueSummary struct {",
          "17157:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "17161: func (s QueueSummary) String() string {",
          "17166: func (s QueueSummary) GoString() string {",
          "17171: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "17177: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "17183: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "17189: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "17190:  s.QueueType = &v",
          "",
          "[Added Lines]",
          "18183: func (s *PromptSummary) SetArn(v string) *PromptSummary {",
          "18184:  s.Arn = &v",
          "18185:  return s",
          "18186: }",
          "18189: func (s *PromptSummary) SetId(v string) *PromptSummary {",
          "18190:  s.Id = &v",
          "18191:  return s",
          "18192: }",
          "18195: func (s *PromptSummary) SetName(v string) *PromptSummary {",
          "18196:  s.Name = &v",
          "18197:  return s",
          "18198: }",
          "18202: type QueueQuickConnectConfig struct {",
          "18203:  _ struct{} `type:\"structure\"`",
          "18208:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "18213:  QueueId *string `type:\"string\" required:\"true\"`",
          "18214: }",
          "18217: func (s QueueQuickConnectConfig) String() string {",
          "18218:  return awsutil.Prettify(s)",
          "18219: }",
          "18222: func (s QueueQuickConnectConfig) GoString() string {",
          "18223:  return s.String()",
          "18224: }",
          "18227: func (s *QueueQuickConnectConfig) Validate() error {",
          "18228:  invalidParams := request.ErrInvalidParams{Context: \"QueueQuickConnectConfig\"}",
          "18229:  if s.ContactFlowId == nil {",
          "18230:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "18231:  }",
          "18232:  if s.QueueId == nil {",
          "18233:   invalidParams.Add(request.NewErrParamRequired(\"QueueId\"))",
          "18234:  }",
          "18236:  if invalidParams.Len() > 0 {",
          "18237:   return invalidParams",
          "18238:  }",
          "18239:  return nil",
          "18240: }",
          "18243: func (s *QueueQuickConnectConfig) SetContactFlowId(v string) *QueueQuickConnectConfig {",
          "18244:  s.ContactFlowId = &v",
          "18245:  return s",
          "18246: }",
          "18249: func (s *QueueQuickConnectConfig) SetQueueId(v string) *QueueQuickConnectConfig {",
          "18250:  s.QueueId = &v",
          "18251:  return s",
          "18252: }",
          "18255: type QueueReference struct {",
          "18256:  _ struct{} `type:\"structure\"`",
          "18259:  Arn *string `type:\"string\"`",
          "18262:  Id *string `type:\"string\"`",
          "18263: }",
          "18266: func (s QueueReference) String() string {",
          "18267:  return awsutil.Prettify(s)",
          "18268: }",
          "18271: func (s QueueReference) GoString() string {",
          "18272:  return s.String()",
          "18273: }",
          "18276: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "18277:  s.Arn = &v",
          "18278:  return s",
          "18279: }",
          "18282: func (s *QueueReference) SetId(v string) *QueueReference {",
          "18283:  s.Id = &v",
          "18284:  return s",
          "18285: }",
          "18288: type QueueSummary struct {",
          "18289:  _ struct{} `type:\"structure\"`",
          "18292:  Arn *string `type:\"string\"`",
          "18295:  Id *string `type:\"string\"`",
          "18298:  Name *string `min:\"1\" type:\"string\"`",
          "18301:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "18302: }",
          "18305: func (s QueueSummary) String() string {",
          "18306:  return awsutil.Prettify(s)",
          "18307: }",
          "18310: func (s QueueSummary) GoString() string {",
          "18311:  return s.String()",
          "18312: }",
          "18315: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "18316:  s.Arn = &v",
          "18317:  return s",
          "18318: }",
          "18321: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "18322:  s.Id = &v",
          "18323:  return s",
          "18324: }",
          "18327: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "18328:  s.Name = &v",
          "18329:  return s",
          "18330: }",
          "18333: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "18334:  s.QueueType = &v",
          "18335:  return s",
          "18336: }",
          "18339: type QuickConnect struct {",
          "18340:  _ struct{} `type:\"structure\"`",
          "18343:  Description *string `type:\"string\"`",
          "18346:  Name *string `min:\"1\" type:\"string\"`",
          "18349:  QuickConnectARN *string `type:\"string\"`",
          "18352:  QuickConnectConfig *QuickConnectConfig `type:\"structure\"`",
          "18355:  QuickConnectId *string `type:\"string\"`",
          "18358:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "18359: }",
          "18362: func (s QuickConnect) String() string {",
          "18363:  return awsutil.Prettify(s)",
          "18364: }",
          "18367: func (s QuickConnect) GoString() string {",
          "18368:  return s.String()",
          "18369: }",
          "18372: func (s *QuickConnect) SetDescription(v string) *QuickConnect {",
          "18373:  s.Description = &v",
          "18374:  return s",
          "18375: }",
          "18378: func (s *QuickConnect) SetName(v string) *QuickConnect {",
          "18379:  s.Name = &v",
          "18380:  return s",
          "18381: }",
          "18384: func (s *QuickConnect) SetQuickConnectARN(v string) *QuickConnect {",
          "18385:  s.QuickConnectARN = &v",
          "18390: func (s *QuickConnect) SetQuickConnectConfig(v *QuickConnectConfig) *QuickConnect {",
          "18391:  s.QuickConnectConfig = v",
          "18396: func (s *QuickConnect) SetQuickConnectId(v string) *QuickConnect {",
          "18397:  s.QuickConnectId = &v",
          "18402: func (s *QuickConnect) SetTags(v map[string]*string) *QuickConnect {",
          "18403:  s.Tags = v",
          "18404:  return s",
          "18405: }",
          "18408: type QuickConnectConfig struct {",
          "18412:  PhoneConfig *PhoneNumberQuickConnectConfig `type:\"structure\"`",
          "18415:  QueueConfig *QueueQuickConnectConfig `type:\"structure\"`",
          "18422:  QuickConnectType *string `type:\"string\" required:\"true\" enum:\"QuickConnectType\"`",
          "18425:  UserConfig *UserQuickConnectConfig `type:\"structure\"`",
          "18429: func (s QuickConnectConfig) String() string {",
          "18434: func (s QuickConnectConfig) GoString() string {",
          "18439: func (s *QuickConnectConfig) Validate() error {",
          "18440:  invalidParams := request.ErrInvalidParams{Context: \"QuickConnectConfig\"}",
          "18441:  if s.QuickConnectType == nil {",
          "18442:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectType\"))",
          "18443:  }",
          "18444:  if s.PhoneConfig != nil {",
          "18445:   if err := s.PhoneConfig.Validate(); err != nil {",
          "18446:    invalidParams.AddNested(\"PhoneConfig\", err.(request.ErrInvalidParams))",
          "18447:   }",
          "18448:  }",
          "18449:  if s.QueueConfig != nil {",
          "18450:   if err := s.QueueConfig.Validate(); err != nil {",
          "18451:    invalidParams.AddNested(\"QueueConfig\", err.(request.ErrInvalidParams))",
          "18452:   }",
          "18453:  }",
          "18454:  if s.UserConfig != nil {",
          "18455:   if err := s.UserConfig.Validate(); err != nil {",
          "18456:    invalidParams.AddNested(\"UserConfig\", err.(request.ErrInvalidParams))",
          "18457:   }",
          "18458:  }",
          "18460:  if invalidParams.Len() > 0 {",
          "18461:   return invalidParams",
          "18462:  }",
          "18463:  return nil",
          "18464: }",
          "18467: func (s *QuickConnectConfig) SetPhoneConfig(v *PhoneNumberQuickConnectConfig) *QuickConnectConfig {",
          "18468:  s.PhoneConfig = v",
          "18473: func (s *QuickConnectConfig) SetQueueConfig(v *QueueQuickConnectConfig) *QuickConnectConfig {",
          "18474:  s.QueueConfig = v",
          "18479: func (s *QuickConnectConfig) SetQuickConnectType(v string) *QuickConnectConfig {",
          "18480:  s.QuickConnectType = &v",
          "18481:  return s",
          "18482: }",
          "18485: func (s *QuickConnectConfig) SetUserConfig(v *UserQuickConnectConfig) *QuickConnectConfig {",
          "18486:  s.UserConfig = v",
          "18487:  return s",
          "18488: }",
          "18491: type QuickConnectSummary struct {",
          "18506:  QuickConnectType *string `type:\"string\" enum:\"QuickConnectType\"`",
          "18510: func (s QuickConnectSummary) String() string {",
          "18515: func (s QuickConnectSummary) GoString() string {",
          "18520: func (s *QuickConnectSummary) SetArn(v string) *QuickConnectSummary {",
          "18526: func (s *QuickConnectSummary) SetId(v string) *QuickConnectSummary {",
          "18532: func (s *QuickConnectSummary) SetName(v string) *QuickConnectSummary {",
          "18538: func (s *QuickConnectSummary) SetQuickConnectType(v string) *QuickConnectSummary {",
          "18539:  s.QuickConnectType = &v",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "19603:  return s.String()",
          "19604: }",
          "19606: type UpdateRoutingProfileConcurrencyInput struct {",
          "19607:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20955: type UpdateQuickConnectConfigInput struct {",
          "20956:  _ struct{} `type:\"structure\"`",
          "20961:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "20966:  QuickConnectConfig *QuickConnectConfig `type:\"structure\" required:\"true\"`",
          "20971:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "20972: }",
          "20975: func (s UpdateQuickConnectConfigInput) String() string {",
          "20976:  return awsutil.Prettify(s)",
          "20977: }",
          "20980: func (s UpdateQuickConnectConfigInput) GoString() string {",
          "20981:  return s.String()",
          "20982: }",
          "20985: func (s *UpdateQuickConnectConfigInput) Validate() error {",
          "20986:  invalidParams := request.ErrInvalidParams{Context: \"UpdateQuickConnectConfigInput\"}",
          "20987:  if s.InstanceId == nil {",
          "20988:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "20989:  }",
          "20990:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "20991:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "20992:  }",
          "20993:  if s.QuickConnectConfig == nil {",
          "20994:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectConfig\"))",
          "20995:  }",
          "20996:  if s.QuickConnectId == nil {",
          "20997:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "20998:  }",
          "20999:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "21000:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "21001:  }",
          "21002:  if s.QuickConnectConfig != nil {",
          "21003:   if err := s.QuickConnectConfig.Validate(); err != nil {",
          "21004:    invalidParams.AddNested(\"QuickConnectConfig\", err.(request.ErrInvalidParams))",
          "21005:   }",
          "21006:  }",
          "21008:  if invalidParams.Len() > 0 {",
          "21009:   return invalidParams",
          "21010:  }",
          "21011:  return nil",
          "21012: }",
          "21015: func (s *UpdateQuickConnectConfigInput) SetInstanceId(v string) *UpdateQuickConnectConfigInput {",
          "21016:  s.InstanceId = &v",
          "21017:  return s",
          "21018: }",
          "21021: func (s *UpdateQuickConnectConfigInput) SetQuickConnectConfig(v *QuickConnectConfig) *UpdateQuickConnectConfigInput {",
          "21022:  s.QuickConnectConfig = v",
          "21023:  return s",
          "21024: }",
          "21027: func (s *UpdateQuickConnectConfigInput) SetQuickConnectId(v string) *UpdateQuickConnectConfigInput {",
          "21028:  s.QuickConnectId = &v",
          "21029:  return s",
          "21030: }",
          "21032: type UpdateQuickConnectConfigOutput struct {",
          "21033:  _ struct{} `type:\"structure\"`",
          "21034: }",
          "21037: func (s UpdateQuickConnectConfigOutput) String() string {",
          "21038:  return awsutil.Prettify(s)",
          "21039: }",
          "21042: func (s UpdateQuickConnectConfigOutput) GoString() string {",
          "21043:  return s.String()",
          "21044: }",
          "21046: type UpdateQuickConnectNameInput struct {",
          "21047:  _ struct{} `type:\"structure\"`",
          "21050:  Description *string `type:\"string\"`",
          "21055:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "21058:  Name *string `min:\"1\" type:\"string\"`",
          "21063:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "21064: }",
          "21067: func (s UpdateQuickConnectNameInput) String() string {",
          "21068:  return awsutil.Prettify(s)",
          "21069: }",
          "21072: func (s UpdateQuickConnectNameInput) GoString() string {",
          "21073:  return s.String()",
          "21074: }",
          "21077: func (s *UpdateQuickConnectNameInput) Validate() error {",
          "21078:  invalidParams := request.ErrInvalidParams{Context: \"UpdateQuickConnectNameInput\"}",
          "21079:  if s.InstanceId == nil {",
          "21080:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "21081:  }",
          "21082:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "21083:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "21084:  }",
          "21085:  if s.Name != nil && len(*s.Name) < 1 {",
          "21086:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "21087:  }",
          "21088:  if s.QuickConnectId == nil {",
          "21089:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "21090:  }",
          "21091:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "21092:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "21093:  }",
          "21095:  if invalidParams.Len() > 0 {",
          "21096:   return invalidParams",
          "21097:  }",
          "21098:  return nil",
          "21099: }",
          "21102: func (s *UpdateQuickConnectNameInput) SetDescription(v string) *UpdateQuickConnectNameInput {",
          "21103:  s.Description = &v",
          "21104:  return s",
          "21105: }",
          "21108: func (s *UpdateQuickConnectNameInput) SetInstanceId(v string) *UpdateQuickConnectNameInput {",
          "21109:  s.InstanceId = &v",
          "21110:  return s",
          "21111: }",
          "21114: func (s *UpdateQuickConnectNameInput) SetName(v string) *UpdateQuickConnectNameInput {",
          "21115:  s.Name = &v",
          "21116:  return s",
          "21117: }",
          "21120: func (s *UpdateQuickConnectNameInput) SetQuickConnectId(v string) *UpdateQuickConnectNameInput {",
          "21121:  s.QuickConnectId = &v",
          "21122:  return s",
          "21123: }",
          "21125: type UpdateQuickConnectNameOutput struct {",
          "21126:  _ struct{} `type:\"structure\"`",
          "21127: }",
          "21130: func (s UpdateQuickConnectNameOutput) String() string {",
          "21131:  return awsutil.Prettify(s)",
          "21132: }",
          "21135: func (s UpdateQuickConnectNameOutput) GoString() string {",
          "21136:  return s.String()",
          "21137: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "20910:  return s",
          "20911: }",
          "20914: type UserSummary struct {",
          "20915:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22448: type UserQuickConnectConfig struct {",
          "22449:  _ struct{} `type:\"structure\"`",
          "22454:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "22459:  UserId *string `type:\"string\" required:\"true\"`",
          "22460: }",
          "22463: func (s UserQuickConnectConfig) String() string {",
          "22464:  return awsutil.Prettify(s)",
          "22465: }",
          "22468: func (s UserQuickConnectConfig) GoString() string {",
          "22469:  return s.String()",
          "22470: }",
          "22473: func (s *UserQuickConnectConfig) Validate() error {",
          "22474:  invalidParams := request.ErrInvalidParams{Context: \"UserQuickConnectConfig\"}",
          "22475:  if s.ContactFlowId == nil {",
          "22476:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "22477:  }",
          "22478:  if s.UserId == nil {",
          "22479:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "22480:  }",
          "22482:  if invalidParams.Len() > 0 {",
          "22483:   return invalidParams",
          "22484:  }",
          "22485:  return nil",
          "22486: }",
          "22489: func (s *UserQuickConnectConfig) SetContactFlowId(v string) *UserQuickConnectConfig {",
          "22490:  s.ContactFlowId = &v",
          "22491:  return s",
          "22492: }",
          "22495: func (s *UserQuickConnectConfig) SetUserId(v string) *UserQuickConnectConfig {",
          "22496:  s.UserId = &v",
          "22497:  return s",
          "22498: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "22374:  }",
          "22375: }",
          "22377: const (",
          "22379:  ReferenceTypeUrl = \"URL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23964: const (",
          "23966:  QuickConnectTypeUser = \"USER\"",
          "23969:  QuickConnectTypeQueue = \"QUEUE\"",
          "23972:  QuickConnectTypePhoneNumber = \"PHONE_NUMBER\"",
          "23973: )",
          "23976: func QuickConnectType_Values() []string {",
          "23977:  return []string{",
          "23978:   QuickConnectTypeUser,",
          "23979:   QuickConnectTypeQueue,",
          "23980:   QuickConnectTypePhoneNumber,",
          "23981:  }",
          "23982: }",
          "",
          "---------------"
        ],
        "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go": [
          "File: service/connect/connectiface/interface.go -> service/connect/connectiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  CreateIntegrationAssociationWithContext(aws.Context, *connect.CreateIntegrationAssociationInput, ...request.Option) (*connect.CreateIntegrationAssociationOutput, error)",
          "97:  CreateIntegrationAssociationRequest(*connect.CreateIntegrationAssociationInput) (*request.Request, *connect.CreateIntegrationAssociationOutput)",
          "99:  CreateRoutingProfile(*connect.CreateRoutingProfileInput) (*connect.CreateRoutingProfileOutput, error)",
          "100:  CreateRoutingProfileWithContext(aws.Context, *connect.CreateRoutingProfileInput, ...request.Option) (*connect.CreateRoutingProfileOutput, error)",
          "101:  CreateRoutingProfileRequest(*connect.CreateRoutingProfileInput) (*request.Request, *connect.CreateRoutingProfileOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  CreateQuickConnect(*connect.CreateQuickConnectInput) (*connect.CreateQuickConnectOutput, error)",
          "100:  CreateQuickConnectWithContext(aws.Context, *connect.CreateQuickConnectInput, ...request.Option) (*connect.CreateQuickConnectOutput, error)",
          "101:  CreateQuickConnectRequest(*connect.CreateQuickConnectInput) (*request.Request, *connect.CreateQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  DeleteIntegrationAssociationWithContext(aws.Context, *connect.DeleteIntegrationAssociationInput, ...request.Option) (*connect.DeleteIntegrationAssociationOutput, error)",
          "121:  DeleteIntegrationAssociationRequest(*connect.DeleteIntegrationAssociationInput) (*request.Request, *connect.DeleteIntegrationAssociationOutput)",
          "123:  DeleteUseCase(*connect.DeleteUseCaseInput) (*connect.DeleteUseCaseOutput, error)",
          "124:  DeleteUseCaseWithContext(aws.Context, *connect.DeleteUseCaseInput, ...request.Option) (*connect.DeleteUseCaseOutput, error)",
          "125:  DeleteUseCaseRequest(*connect.DeleteUseCaseInput) (*request.Request, *connect.DeleteUseCaseOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:  DeleteQuickConnect(*connect.DeleteQuickConnectInput) (*connect.DeleteQuickConnectOutput, error)",
          "128:  DeleteQuickConnectWithContext(aws.Context, *connect.DeleteQuickConnectInput, ...request.Option) (*connect.DeleteQuickConnectOutput, error)",
          "129:  DeleteQuickConnectRequest(*connect.DeleteQuickConnectInput) (*request.Request, *connect.DeleteQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:  DescribeInstanceStorageConfigWithContext(aws.Context, *connect.DescribeInstanceStorageConfigInput, ...request.Option) (*connect.DescribeInstanceStorageConfigOutput, error)",
          "149:  DescribeInstanceStorageConfigRequest(*connect.DescribeInstanceStorageConfigInput) (*request.Request, *connect.DescribeInstanceStorageConfigOutput)",
          "151:  DescribeRoutingProfile(*connect.DescribeRoutingProfileInput) (*connect.DescribeRoutingProfileOutput, error)",
          "152:  DescribeRoutingProfileWithContext(aws.Context, *connect.DescribeRoutingProfileInput, ...request.Option) (*connect.DescribeRoutingProfileOutput, error)",
          "153:  DescribeRoutingProfileRequest(*connect.DescribeRoutingProfileInput) (*request.Request, *connect.DescribeRoutingProfileOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:  DescribeQuickConnect(*connect.DescribeQuickConnectInput) (*connect.DescribeQuickConnectOutput, error)",
          "160:  DescribeQuickConnectWithContext(aws.Context, *connect.DescribeQuickConnectInput, ...request.Option) (*connect.DescribeQuickConnectOutput, error)",
          "161:  DescribeQuickConnectRequest(*connect.DescribeQuickConnectInput) (*request.Request, *connect.DescribeQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:  ListQueuesPages(*connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool) error",
          "295:  ListQueuesPagesWithContext(aws.Context, *connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool, ...request.Option) error",
          "297:  ListRoutingProfileQueues(*connect.ListRoutingProfileQueuesInput) (*connect.ListRoutingProfileQueuesOutput, error)",
          "298:  ListRoutingProfileQueuesWithContext(aws.Context, *connect.ListRoutingProfileQueuesInput, ...request.Option) (*connect.ListRoutingProfileQueuesOutput, error)",
          "299:  ListRoutingProfileQueuesRequest(*connect.ListRoutingProfileQueuesInput) (*request.Request, *connect.ListRoutingProfileQueuesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:  ListQuickConnects(*connect.ListQuickConnectsInput) (*connect.ListQuickConnectsOutput, error)",
          "310:  ListQuickConnectsWithContext(aws.Context, *connect.ListQuickConnectsInput, ...request.Option) (*connect.ListQuickConnectsOutput, error)",
          "311:  ListQuickConnectsRequest(*connect.ListQuickConnectsInput) (*request.Request, *connect.ListQuickConnectsOutput)",
          "313:  ListQuickConnectsPages(*connect.ListQuickConnectsInput, func(*connect.ListQuickConnectsOutput, bool) bool) error",
          "314:  ListQuickConnectsPagesWithContext(aws.Context, *connect.ListQuickConnectsInput, func(*connect.ListQuickConnectsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "407:  UpdateInstanceStorageConfigWithContext(aws.Context, *connect.UpdateInstanceStorageConfigInput, ...request.Option) (*connect.UpdateInstanceStorageConfigOutput, error)",
          "408:  UpdateInstanceStorageConfigRequest(*connect.UpdateInstanceStorageConfigInput) (*request.Request, *connect.UpdateInstanceStorageConfigOutput)",
          "410:  UpdateRoutingProfileConcurrency(*connect.UpdateRoutingProfileConcurrencyInput) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "411:  UpdateRoutingProfileConcurrencyWithContext(aws.Context, *connect.UpdateRoutingProfileConcurrencyInput, ...request.Option) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "412:  UpdateRoutingProfileConcurrencyRequest(*connect.UpdateRoutingProfileConcurrencyInput) (*request.Request, *connect.UpdateRoutingProfileConcurrencyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:  UpdateQuickConnectConfig(*connect.UpdateQuickConnectConfigInput) (*connect.UpdateQuickConnectConfigOutput, error)",
          "430:  UpdateQuickConnectConfigWithContext(aws.Context, *connect.UpdateQuickConnectConfigInput, ...request.Option) (*connect.UpdateQuickConnectConfigOutput, error)",
          "431:  UpdateQuickConnectConfigRequest(*connect.UpdateQuickConnectConfigInput) (*request.Request, *connect.UpdateQuickConnectConfigOutput)",
          "433:  UpdateQuickConnectName(*connect.UpdateQuickConnectNameInput) (*connect.UpdateQuickConnectNameOutput, error)",
          "434:  UpdateQuickConnectNameWithContext(aws.Context, *connect.UpdateQuickConnectNameInput, ...request.Option) (*connect.UpdateQuickConnectNameOutput, error)",
          "435:  UpdateQuickConnectNameRequest(*connect.UpdateQuickConnectNameInput) (*request.Request, *connect.UpdateQuickConnectNameOutput)",
          "",
          "---------------"
        ],
        "service/costexplorer/api.go||service/costexplorer/api.go": [
          "File: service/costexplorer/api.go -> service/costexplorer/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9645: type RightsizingRecommendationMetadata struct {",
          "9646:  _ struct{} `type:\"structure\"`",
          "9649:  GenerationTimestamp *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9649:  AdditionalMetadata *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9665:  return s.String()",
          "9666: }",
          "9669: func (s *RightsizingRecommendationMetadata) SetGenerationTimestamp(v string) *RightsizingRecommendationMetadata {",
          "9670:  s.GenerationTimestamp = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9672: func (s *RightsizingRecommendationMetadata) SetAdditionalMetadata(v string) *RightsizingRecommendationMetadata {",
          "9673:  s.AdditionalMetadata = &v",
          "9674:  return s",
          "9675: }",
          "",
          "---------------"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18602:  return s",
          "18603: }",
          "18606: type ColumnStatistics struct {",
          "18607:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18610: type ColumnImportance struct {",
          "18611:  _ struct{} `type:\"structure\"`",
          "18614:  ColumnName *string `min:\"1\" type:\"string\"`",
          "18617:  Importance *float64 `type:\"double\"`",
          "18618: }",
          "18621: func (s ColumnImportance) String() string {",
          "18622:  return awsutil.Prettify(s)",
          "18623: }",
          "18626: func (s ColumnImportance) GoString() string {",
          "18627:  return s.String()",
          "18628: }",
          "18631: func (s *ColumnImportance) SetColumnName(v string) *ColumnImportance {",
          "18632:  s.ColumnName = &v",
          "18633:  return s",
          "18634: }",
          "18637: func (s *ColumnImportance) SetImportance(v float64) *ColumnImportance {",
          "18638:  s.Importance = &v",
          "18639:  return s",
          "18640: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26478:  AreaUnderPRCurve *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26519:  ColumnImportances []*ColumnImportance `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "26524:  return s",
          "26525: }",
          "26528: func (s *FindMatchesMetrics) SetConfusionMatrix(v *ConfusionMatrix) *FindMatchesMetrics {",
          "26529:  s.ConfusionMatrix = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26569: func (s *FindMatchesMetrics) SetColumnImportances(v []*ColumnImportance) *FindMatchesMetrics {",
          "26570:  s.ColumnImportances = v",
          "26571:  return s",
          "26572: }",
          "",
          "---------------"
        ],
        "service/iotwireless/api.go||service/iotwireless/api.go": [
          "File: service/iotwireless/api.go -> service/iotwireless/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10181:  AmazonId *string `type:\"string\"`",
          "10185: }",
          "",
          "[Removed Lines]",
          "10184:  AppServerPrivateKey *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "",
          "[Added Lines]",
          "10183:  Fingerprint *string `min:\"64\" type:\"string\" sensitive:\"true\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10200:  return s",
          "10201: }",
          "10206:  return s",
          "10207: }",
          "",
          "[Removed Lines]",
          "10204: func (s *SidewalkAccountInfoWithFingerprint) SetAppServerPrivateKey(v string) *SidewalkAccountInfoWithFingerprint {",
          "10205:  s.AppServerPrivateKey = &v",
          "",
          "[Added Lines]",
          "10203: func (s *SidewalkAccountInfoWithFingerprint) SetFingerprint(v string) *SidewalkAccountInfoWithFingerprint {",
          "10204:  s.Fingerprint = &v",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18353:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18369:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18935:  return s",
          "18936: }",
          "18939: func (s *CreateDBInstanceInput) SetEnableIAMDatabaseAuthentication(v bool) *CreateDBInstanceInput {",
          "18940:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18955: func (s *CreateDBInstanceInput) SetEnableCustomerOwnedIp(v bool) *CreateDBInstanceInput {",
          "18956:  s.EnableCustomerOwnedIp = &v",
          "18957:  return s",
          "18958: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22294:  CopyTagsToSnapshot *bool `type:\"boolean\"`",
          "22298:  DBClusterIdentifier *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22332:  CustomerOwnedIpEnabled *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "22609:  return s",
          "22610: }",
          "22613: func (s *DBInstance) SetDBClusterIdentifier(v string) *DBInstance {",
          "22614:  s.DBClusterIdentifier = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22651: func (s *DBInstance) SetCustomerOwnedIpEnabled(v bool) *DBInstance {",
          "22652:  s.CustomerOwnedIpEnabled = &v",
          "22653:  return s",
          "22654: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "33655:  DomainIAMRoleName *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33716:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "34099:  return s",
          "34100: }",
          "34103: func (s *ModifyDBInstanceInput) SetEnableIAMDatabaseAuthentication(v bool) *ModifyDBInstanceInput {",
          "34104:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34164: func (s *ModifyDBInstanceInput) SetEnableCustomerOwnedIp(v bool) *ModifyDBInstanceInput {",
          "34165:  s.EnableCustomerOwnedIp = &v",
          "34166:  return s",
          "34167: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "39358:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39441:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "39592:  return s",
          "39593: }",
          "39596: func (s *RestoreDBInstanceFromDBSnapshotInput) SetEnableIAMDatabaseAuthentication(v bool) *RestoreDBInstanceFromDBSnapshotInput {",
          "39597:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39679: func (s *RestoreDBInstanceFromDBSnapshotInput) SetEnableCustomerOwnedIp(v bool) *RestoreDBInstanceFromDBSnapshotInput {",
          "39680:  s.EnableCustomerOwnedIp = &v",
          "39681:  return s",
          "39682: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "40448:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40553:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "40712:  return s",
          "40713: }",
          "40716: func (s *RestoreDBInstanceToPointInTimeInput) SetEnableIAMDatabaseAuthentication(v bool) *RestoreDBInstanceToPointInTimeInput {",
          "40717:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40821: func (s *RestoreDBInstanceToPointInTimeInput) SetEnableCustomerOwnedIp(v bool) *RestoreDBInstanceToPointInTimeInput {",
          "40822:  s.EnableCustomerOwnedIp = &v",
          "40823:  return s",
          "40824: }",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43634:  Name *string `min:\"3\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "43626:  MaxConcurrency *string `min:\"1\" type:\"string\" required:\"true\"`",
          "43631:  MaxErrors *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "43655:  MaxConcurrency *string `min:\"1\" type:\"string\"`",
          "43662:  MaxErrors *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "43666:  Targets []*Target `type:\"list\" required:\"true\"`",
          "",
          "[Added Lines]",
          "43702:  Targets []*Target `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43712:  if s.Description != nil && len(*s.Description) < 1 {",
          "43713:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "43714:  }",
          "43718:  if s.MaxConcurrency != nil && len(*s.MaxConcurrency) < 1 {",
          "43719:   invalidParams.Add(request.NewErrParamMinLen(\"MaxConcurrency\", 1))",
          "43720:  }",
          "43724:  if s.MaxErrors != nil && len(*s.MaxErrors) < 1 {",
          "43725:   invalidParams.Add(request.NewErrParamMinLen(\"MaxErrors\", 1))",
          "43726:  }",
          "43727:  if s.Name != nil && len(*s.Name) < 3 {",
          "43728:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "43729:  }",
          "43733:  if s.TaskArn == nil {",
          "43734:   invalidParams.Add(request.NewErrParamRequired(\"TaskArn\"))",
          "43735:  }",
          "",
          "[Removed Lines]",
          "43715:  if s.MaxConcurrency == nil {",
          "43716:   invalidParams.Add(request.NewErrParamRequired(\"MaxConcurrency\"))",
          "43717:  }",
          "43721:  if s.MaxErrors == nil {",
          "43722:   invalidParams.Add(request.NewErrParamRequired(\"MaxErrors\"))",
          "43723:  }",
          "43730:  if s.Targets == nil {",
          "43731:   invalidParams.Add(request.NewErrParamRequired(\"Targets\"))",
          "43732:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80760876d2f0fe900443900ba667b7a15ebfd055",
      "candidate_info": {
        "commit_hash": "80760876d2f0fe900443900ba667b7a15ebfd055",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/80760876d2f0fe900443900ba667b7a15ebfd055",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/guardduty/2017-11-28/docs-2.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/docs-2.json",
          "models/apis/sagemaker/2017-07-24/api-2.json",
          "models/apis/sagemaker/2017-07-24/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go"
        ],
        "message": "Release v1.30.24 (2020-05-08) ===\n\n### Service Client Updates\n* `service/guardduty`: Updates service documentation\n  * Documentation updates for GuardDuty\n* `service/resourcegroupstaggingapi`: Updates service documentation\n  * Documentation updates for resourcegroupstaggingapi\n* `service/sagemaker`: Updates service API and documentation\n  * This release adds a new parameter (EnableInterContainerTrafficEncryption) to CreateProcessingJob API to allow for enabling inter-container traffic encryption on processing jobs.\n\n### SDK Bugs\n* `service/dynamodb/dynamodbattribute`:  Simplified decode logic to decode AttributeValue as it is defined ([#3308](https://github.com/aws/aws-sdk-go/pull/3308))",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/guardduty/api.go||service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go||service/sagemaker/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "855:   \"cloud9\": service{",
          "857:    Endpoints: endpoints{",
          "858:     \"ap-northeast-1\": endpoint{},",
          "859:     \"ap-northeast-2\": endpoint{},",
          "860:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "858:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865:     \"eu-north-1\":     endpoint{},",
          "866:     \"eu-west-1\":      endpoint{},",
          "867:     \"eu-west-2\":      endpoint{},",
          "868:     \"us-east-1\":      endpoint{},",
          "869:     \"us-east-2\":      endpoint{},",
          "870:     \"us-west-2\":      endpoint{},",
          "871:    },",
          "872:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "869:     \"eu-west-3\":      endpoint{},",
          "870:     \"me-south-1\":     endpoint{},",
          "871:     \"sa-east-1\":      endpoint{},",
          "874:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5289:   \"storagegateway\": service{",
          "5291:    Endpoints: endpoints{",
          "5292:     \"ap-east-1\":      endpoint{},",
          "5293:     \"ap-northeast-1\": endpoint{},",
          "5294:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5297:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5298:     \"ca-central-1\":   endpoint{},",
          "5299:     \"eu-central-1\":   endpoint{},",
          "5300:     \"eu-north-1\":     endpoint{},",
          "5301:     \"eu-west-1\":      endpoint{},",
          "5302:     \"eu-west-2\":      endpoint{},",
          "5303:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5307:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.23\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.24\"",
          "",
          "---------------"
        ],
        "service/guardduty/api.go||service/guardduty/api.go": [
          "File: service/guardduty/api.go -> service/guardduty/api.go"
        ],
        "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go": [
          "File: service/resourcegroupstaggingapi/api.go -> service/resourcegroupstaggingapi/api.go"
        ],
        "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go": [
          "File: service/resourcegroupstaggingapi/doc.go -> service/resourcegroupstaggingapi/doc.go"
        ],
        "service/sagemaker/api.go||service/sagemaker/api.go": [
          "File: service/sagemaker/api.go -> service/sagemaker/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28817:    invalidParams.AddNested(\"AnnotationConsolidationConfig\", err.(request.ErrInvalidParams))",
          "28818:   }",
          "28819:  }",
          "28826:  if invalidParams.Len() > 0 {",
          "28827:   return invalidParams",
          "",
          "[Removed Lines]",
          "28820:  if s.UiConfig != nil {",
          "28821:   if err := s.UiConfig.Validate(); err != nil {",
          "28822:    invalidParams.AddNested(\"UiConfig\", err.(request.ErrInvalidParams))",
          "28823:   }",
          "28824:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37134: type NetworkConfig struct {",
          "37135:  _ struct{} `type:\"structure\"`",
          "37139:  EnableNetworkIsolation *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37141:  EnableInterContainerTrafficEncryption *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37171:  return nil",
          "37172: }",
          "37175: func (s *NetworkConfig) SetEnableNetworkIsolation(v bool) *NetworkConfig {",
          "37176:  s.EnableNetworkIsolation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37181: func (s *NetworkConfig) SetEnableInterContainerTrafficEncryption(v bool) *NetworkConfig {",
          "37182:  s.EnableInterContainerTrafficEncryption = &v",
          "37183:  return s",
          "37184: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "39216:  Task *RenderableTask `type:\"structure\" required:\"true\"`",
          "39222: }",
          "",
          "[Removed Lines]",
          "39221:  UiTemplate *UiTemplate `type:\"structure\" required:\"true\"`",
          "",
          "[Added Lines]",
          "39231:  UiTemplate *UiTemplate `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "39243:  if s.Task == nil {",
          "39244:   invalidParams.Add(request.NewErrParamRequired(\"Task\"))",
          "39245:  }",
          "39249:  if s.Task != nil {",
          "39250:   if err := s.Task.Validate(); err != nil {",
          "39251:    invalidParams.AddNested(\"Task\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "39246:  if s.UiTemplate == nil {",
          "39247:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplate\"))",
          "39248:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "44134: }",
          "",
          "[Removed Lines]",
          "44133:  UiTemplateS3Uri *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "44143:  UiTemplateS3Uri *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "44143:  return s.String()",
          "44144: }",
          "44160: func (s *UiConfig) SetUiTemplateS3Uri(v string) *UiConfig {",
          "44161:  s.UiTemplateS3Uri = &v",
          "",
          "[Removed Lines]",
          "44147: func (s *UiConfig) Validate() error {",
          "44148:  invalidParams := request.ErrInvalidParams{Context: \"UiConfig\"}",
          "44149:  if s.UiTemplateS3Uri == nil {",
          "44150:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplateS3Uri\"))",
          "44151:  }",
          "44153:  if invalidParams.Len() > 0 {",
          "44154:   return invalidParams",
          "44155:  }",
          "44156:  return nil",
          "44157: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}