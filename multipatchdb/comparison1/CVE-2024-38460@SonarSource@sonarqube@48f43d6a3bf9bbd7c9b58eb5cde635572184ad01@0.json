{
  "cve_id": "CVE-2024-38460",
  "cve_desc": "In SonarQube before 10.4 and 9.9.4 LTA, encrypted values generated using the Settings Encryption feature are potentially exposed in cleartext as part of the URL parameters in the logs (such as SonarQube Access Logs, Proxy Logs, etc).",
  "repo": "SonarSource/sonarqube",
  "patch_hash": "48f43d6a3bf9bbd7c9b58eb5cde635572184ad01",
  "patch_info": {
    "commit_hash": "48f43d6a3bf9bbd7c9b58eb5cde635572184ad01",
    "repo": "SonarSource/sonarqube",
    "commit_url": "https://github.com/SonarSource/sonarqube/commit/48f43d6a3bf9bbd7c9b58eb5cde635572184ad01",
    "files": [
      "server/sonar-web/src/main/js/api/settings.ts",
      "server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java",
      "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java"
    ],
    "message": "SONAR-21559 Fix SSF-553",
    "before_after_code_files": [
      "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts",
      "server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java||server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java",
      "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java"
    ]
  },
  "patch_diff": {
    "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts": [
      "File: server/sonar-web/src/main/js/api/settings.ts -> server/sonar-web/src/main/js/api/settings.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import { omitBy } from 'lodash';",
      "21: import { isCategoryDefinition } from '../apps/settings/utils';",
      "22: import { throwGlobalError } from '../helpers/error';",
      "24: import { BranchParameters } from '../types/branch-like';",
      "25: import {",
      "26:   ExtendedSettingDefinition,",
      "",
      "[Removed Lines]",
      "23: import { getJSON, post, RequestData } from '../helpers/request';",
      "",
      "[Added Lines]",
      "23: import { getJSON, post, postJSON, RequestData } from '../helpers/request';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "110: }",
      "112: export function encryptValue(value: string): Promise<{ encryptedValue: string }> {",
      "114: }",
      "116: export function getLoginMessage(): Promise<{ message: string }> {",
      "",
      "[Removed Lines]",
      "113:   return getJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);",
      "",
      "[Added Lines]",
      "113:   return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);",
      "",
      "---------------"
    ],
    "server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java||server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java": [
      "File: server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java -> server/sonar-webserver-webapi/src/it/java/org/sonar/server/setting/ws/EncryptActionIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:     WebService.Action definition = ws.getDef();",
      "78:     assertThat(definition.key()).isEqualTo(\"encrypt\");",
      "80:     assertThat(definition.isInternal()).isTrue();",
      "81:     assertThat(definition.responseExampleAsString()).isNotEmpty();",
      "82:     assertThat(definition.params()).hasSize(1);",
      "",
      "[Removed Lines]",
      "79:     assertThat(definition.isPost()).isFalse();",
      "",
      "[Added Lines]",
      "79:     assertThat(definition.isPost()).isTrue();",
      "",
      "---------------"
    ],
    "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java": [
      "File: server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java -> server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: import org.sonar.api.config.internal.Encryption;",
      "23: import org.sonar.api.config.internal.Settings;",
      "24: import org.sonar.api.server.ws.Request;",
      "25: import org.sonar.api.server.ws.Response;",
      "26: import org.sonar.api.server.ws.WebService;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: import org.sonar.api.server.ws.Change;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "46:       .setDescription(\"Encrypt a setting value.<br>\" +",
      "47:         \"Requires 'Administer System' permission.\")",
      "48:       .setSince(\"6.1\")",
      "49:       .setHandler(this)",
      "50:       .setInternal(true)",
      "53:     action.createParam(PARAM_VALUE)",
      "54:       .setRequired(true)",
      "",
      "[Removed Lines]",
      "51:       .setResponseExample(getClass().getResource(\"encrypt-example.json\"));",
      "",
      "[Added Lines]",
      "50:       .setPost(true)",
      "53:       .setResponseExample(getClass().getResource(\"encrypt-example.json\"))",
      "54:       .setChangelog(new Change(\"10.4\", \"Move from GET to POST.\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "95f9d0ec9698724e9785b871ac6dd5df0af1f800",
      "candidate_info": {
        "commit_hash": "95f9d0ec9698724e9785b871ac6dd5df0af1f800",
        "repo": "SonarSource/sonarqube",
        "commit_url": "https://github.com/SonarSource/sonarqube/commit/95f9d0ec9698724e9785b871ac6dd5df0af1f800",
        "files": [
          "server/sonar-web/src/main/js/api/settings.ts",
          "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java",
          "server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java",
          "sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java"
        ],
        "message": "SONAR-21559 Fix SSF-553",
        "before_after_code_files": [
          "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts",
          "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java",
          "server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java||server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java",
          "sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java||sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts",
            "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java"
          ],
          "candidate": [
            "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts",
            "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java"
          ]
        }
      },
      "candidate_diff": {
        "server/sonar-web/src/main/js/api/settings.ts||server/sonar-web/src/main/js/api/settings.ts": [
          "File: server/sonar-web/src/main/js/api/settings.ts -> server/sonar-web/src/main/js/api/settings.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import { omitBy } from 'lodash';",
          "21: import { isCategoryDefinition } from '../apps/settings/utils';",
          "22: import { throwGlobalError } from '../helpers/error';",
          "24: import { BranchParameters } from '../types/branch-like';",
          "25: import {",
          "26:   ExtendedSettingDefinition,",
          "",
          "[Removed Lines]",
          "23: import { getJSON, post, RequestData } from '../helpers/request';",
          "",
          "[Added Lines]",
          "23: import { getJSON, post, postJSON, RequestData } from '../helpers/request';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109: }",
          "111: export function encryptValue(value: string): Promise<{ encryptedValue: string }> {",
          "113: }",
          "115: export function getLoginMessage(): Promise<{ message: string }> {",
          "",
          "[Removed Lines]",
          "112:   return getJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);",
          "",
          "[Added Lines]",
          "112:   return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);",
          "",
          "---------------"
        ],
        "server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java||server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java": [
          "File: server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java -> server/sonar-webserver-webapi/src/main/java/org/sonar/server/setting/ws/EncryptAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import org.sonar.api.config.internal.Encryption;",
          "23: import org.sonar.api.config.internal.Settings;",
          "24: import org.sonar.api.server.ws.Request;",
          "25: import org.sonar.api.server.ws.Response;",
          "26: import org.sonar.api.server.ws.WebService;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import org.sonar.api.server.ws.Change;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:       .setDescription(\"Encrypt a setting value.<br>\" +",
          "47:         \"Requires 'Administer System' permission.\")",
          "48:       .setSince(\"6.1\")",
          "49:       .setHandler(this)",
          "50:       .setInternal(true)",
          "53:     action.createParam(PARAM_VALUE)",
          "54:       .setRequired(true)",
          "",
          "[Removed Lines]",
          "51:       .setResponseExample(getClass().getResource(\"encrypt-example.json\"));",
          "",
          "[Added Lines]",
          "50:       .setPost(true)",
          "53:       .setResponseExample(getClass().getResource(\"encrypt-example.json\"))",
          "54:       .setChangelog(new Change(\"9.9.4\", \"Move from GET to POST.\"));",
          "",
          "---------------"
        ],
        "server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java||server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java": [
          "File: server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java -> server/sonar-webserver-webapi/src/test/java/org/sonar/server/setting/ws/EncryptActionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     WebService.Action definition = ws.getDef();",
          "78:     assertThat(definition.key()).isEqualTo(\"encrypt\");",
          "80:     assertThat(definition.isInternal()).isTrue();",
          "81:     assertThat(definition.responseExampleAsString()).isNotEmpty();",
          "82:     assertThat(definition.params()).hasSize(1);",
          "",
          "[Removed Lines]",
          "79:     assertThat(definition.isPost()).isFalse();",
          "",
          "[Added Lines]",
          "79:     assertThat(definition.isPost()).isTrue();",
          "",
          "---------------"
        ],
        "sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java||sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java": [
          "File: sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java -> sonar-ws/src/main/java/org/sonarqube/ws/client/settings/SettingsService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   public EncryptWsResponse encrypt(EncryptRequest request) {",
          "66:     return call(",
          "68:         .setParam(\"value\", request.getValue()),",
          "69:       EncryptWsResponse.parser());",
          "70:   }",
          "",
          "[Removed Lines]",
          "67:       new GetRequest(path(\"encrypt\"))",
          "",
          "[Added Lines]",
          "67:       new PostRequest(path(\"encrypt\"))",
          "",
          "---------------"
        ]
      }
    }
  ]
}