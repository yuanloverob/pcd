{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "afe04e5797deb4552b8f503a6b01069eff274190",
      "candidate_info": {
        "commit_hash": "afe04e5797deb4552b8f503a6b01069eff274190",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/afe04e5797deb4552b8f503a6b01069eff274190",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java"
        ],
        "message": "PDFBOX-4892: remove unneeded code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890402 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:                 TrueTypeCollection ttc = new TrueTypeCollection(file);",
          "217:                 try",
          "218:                 {",
          "219:                     ttf = ttc.getFontByName(postScriptName);",
          "",
          "[Removed Lines]",
          "216:                 TrueTypeFont ttf = null;",
          "",
          "[Added Lines]",
          "216:                 TrueTypeFont ttf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:                     TrueTypeCollection ttc = new TrueTypeCollection(file);",
          "251:                     try",
          "252:                     {",
          "253:                         ttf = ttc.getFontByName(postScriptName);",
          "",
          "[Removed Lines]",
          "250:                     TrueTypeFont ttf = null;",
          "",
          "[Added Lines]",
          "250:                     TrueTypeFont ttf;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c541a20bd86446b07ee0f59b45fd9e10ada35121",
      "candidate_info": {
        "commit_hash": "c541a20bd86446b07ee0f59b45fd9e10ada35121",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c541a20bd86446b07ee0f59b45fd9e10ada35121",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889592 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:     private void legacyMergeDocuments(MemoryUsageSetting memUsageSetting) throws IOException",
          "426:     {",
          "427:         PDDocument destination = null;",
          "429:         {",
          "",
          "[Removed Lines]",
          "428:         if (sources != null && sources.size() > 0)",
          "",
          "[Added Lines]",
          "428:         if (sources.size() > 0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "927:     private void mergeLanguage(PDDocumentCatalog destCatalog, PDDocumentCatalog srcCatalog)",
          "928:     {",
          "930:         {",
          "932:         }",
          "933:     }",
          "",
          "[Removed Lines]",
          "929:         if (destCatalog.getLanguage() == null && srcCatalog.getLanguage() != null)",
          "931:             destCatalog.setLanguage(srcCatalog.getLanguage());",
          "",
          "[Added Lines]",
          "929:         if (destCatalog.getLanguage() == null)",
          "931:             String srcLanguage = srcCatalog.getLanguage();",
          "932:             if (srcLanguage != null)",
          "933:             {",
          "934:                 destCatalog.setLanguage(srcLanguage);",
          "935:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "996:             PDStructureTreeRoot destStructTree) throws IOException",
          "997:     {",
          "998:         PDNameTreeNode<PDStructureElement> srcIDTree = srcStructTree.getIDTree();",
          "1000:         if (srcIDTree == null)",
          "1001:         {",
          "1002:             return;",
          "1003:         }",
          "1004:         if (destIDTree == null)",
          "1005:         {",
          "1006:             destIDTree = new PDStructureElementNameTreeNode();",
          "",
          "[Removed Lines]",
          "999:         PDNameTreeNode<PDStructureElement> destIDTree = destStructTree.getIDTree();",
          "",
          "[Added Lines]",
          "1007:         PDNameTreeNode<PDStructureElement> destIDTree = destStructTree.getIDTree();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e521043578a7d2735c328473b7f2543bd786dff",
      "candidate_info": {
        "commit_hash": "4e521043578a7d2735c328473b7f2543bd786dff",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4e521043578a7d2735c328473b7f2543bd786dff",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ],
        "message": "PDFBOX-4892: avoid NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884391 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java -> fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "614:         int fontDictOffset = fdArrayEntry.getNumber(0).intValue();",
          "615:         input.setPosition(fontDictOffset);",
          "616:         byte[][] fdIndex = readIndexData(input);",
          "618:         List<Map<String, Object>> privateDictionaries = new LinkedList<Map<String, Object>>();",
          "619:         List<Map<String, Object>> fontDictionaries = new LinkedList<Map<String, Object>>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "617:         if (fdIndex == null)",
          "618:         {",
          "619:             throw new IOException(\"Font dict index is missing for a CIDKeyed Font\");",
          "620:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d8766704385d8a7412614d517cb227826b88ee8",
      "candidate_info": {
        "commit_hash": "4d8766704385d8a7412614d517cb227826b88ee8",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4d8766704385d8a7412614d517cb227826b88ee8",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890513 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.pdfbox.io.IOUtils;",
          "39: import org.apache.pdfbox.pdmodel.PDDocument;",
          "40: import org.apache.pdfbox.pdmodel.PDPage;",
          "41: import org.apache.pdfbox.pdmodel.PDResources;",
          "42: import org.apache.pdfbox.pdmodel.common.PDRectangle;",
          "43: import org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import org.apache.pdfbox.pdmodel.PDPageTree;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "366:     private void processPages(PDDocument document) throws IOException",
          "367:     {",
          "368:         int pageCounter = 0;",
          "370:         {",
          "371:             pageCounter++;",
          "373:             if (layoutPage == null)",
          "374:             {",
          "375:                 continue;",
          "",
          "[Removed Lines]",
          "369:         for (PDPage page : document.getPages())",
          "372:             LayoutPage layoutPage = getLayoutPage(pageCounter, document.getNumberOfPages());",
          "",
          "[Added Lines]",
          "370:         PDPageTree pageTree = document.getPages();",
          "371:         int numberOfPages = pageTree.getCount();",
          "372:         for (PDPage page : pageTree)",
          "375:             LayoutPage layoutPage = getLayoutPage(pageCounter, numberOfPages);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c697ed92ceaeb587854e14f5d9e00445dd80690",
      "candidate_info": {
        "commit_hash": "1c697ed92ceaeb587854e14f5d9e00445dd80690",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1c697ed92ceaeb587854e14f5d9e00445dd80690",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891084 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java -> fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:             {",
          "172:                 if ((flags[i] & X_SHORT_VECTOR) != 0)",
          "173:                 {",
          "175:                 }",
          "176:                 else",
          "177:                 {",
          "",
          "[Removed Lines]",
          "174:                     x += (short) -((short) bais.readUnsignedByte());",
          "",
          "[Added Lines]",
          "174:                     x += -(short) bais.readUnsignedByte();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:             {",
          "195:                 if ((flags[i] & Y_SHORT_VECTOR) != 0)",
          "196:                 {",
          "198:                 }",
          "199:                 else",
          "200:                 {",
          "",
          "[Removed Lines]",
          "197:                     y += (short) -((short) bais.readUnsignedByte());",
          "",
          "[Added Lines]",
          "197:                     y += -(short) bais.readUnsignedByte();",
          "",
          "---------------"
        ]
      }
    }
  ]
}