{
  "cve_id": "CVE-2024-43803",
  "cve_desc": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. The `BareMetalHost` (BMH) CRD allows the `userData`, `metaData`, and `networkData` for the provisioned host to be specified as links to Kubernetes Secrets. There are fields for both the `Name` and `Namespace` of the Secret, meaning that versions of the baremetal-operator prior to 0.8.0, 0.6.2, and 0.5.2 will read a `Secret` from any namespace. A user with access to create or edit a `BareMetalHost` can thus exfiltrate a `Secret` from another namespace by using it as e.g. the `userData` for provisioning some host (note that this need not be a real host, it could be a VM somewhere).\n\nBMO will only read a key with the name `value` (or `userData`, `metaData`, or `networkData`), so that limits the exposure somewhat. `value` is probably a pretty common key though. Secrets used by _other_ `BareMetalHost`s in different namespaces are always vulnerable. It is probably relatively unusual for anyone other than cluster administrators to have RBAC access to create/edit a `BareMetalHost`. This vulnerability is only meaningful, if the cluster has users other than administrators and users' privileges are limited to their respective namespaces.\n\nThe patch prevents BMO from accepting links to Secrets from other namespaces as BMH input. Any BMH configuration is only read from the same namespace only. The problem is patched in BMO releases v0.7.0, v0.6.2 and v0.5.2 and users should upgrade to those versions. Prior upgrading, duplicate the BMC Secrets to the namespace where the corresponding BMH is. After upgrade, remove the old Secrets. As a workaround, an operator can configure BMO RBAC to be namespace scoped for Secrets, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces.",
  "repo": "metal3-io/baremetal-operator",
  "patch_hash": "c2b5a557641bc273367635124047d6c958aa15f7",
  "patch_info": {
    "commit_hash": "c2b5a557641bc273367635124047d6c958aa15f7",
    "repo": "metal3-io/baremetal-operator",
    "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/c2b5a557641bc273367635124047d6c958aa15f7",
    "files": [
      "controllers/metal3.io/baremetalhost_controller_test.go",
      "controllers/metal3.io/host_config_data.go",
      "controllers/metal3.io/host_config_data_test.go"
    ],
    "message": "Merge pull request #1929 from Nordix/tuomo/ghsa-pqfh-xh7w-7h3p\n\n\ud83d\udc1b Disallow fetching secrets from namespaces different from the host's one",
    "before_after_code_files": [
      "controllers/metal3.io/baremetalhost_controller_test.go||controllers/metal3.io/baremetalhost_controller_test.go",
      "controllers/metal3.io/host_config_data.go||controllers/metal3.io/host_config_data.go",
      "controllers/metal3.io/host_config_data_test.go||controllers/metal3.io/host_config_data_test.go"
    ]
  },
  "patch_diff": {
    "controllers/metal3.io/baremetalhost_controller_test.go||controllers/metal3.io/baremetalhost_controller_test.go": [
      "File: controllers/metal3.io/baremetalhost_controller_test.go -> controllers/metal3.io/baremetalhost_controller_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: )",
      "39: func newSecret(name string, data map[string]string) *corev1.Secret {",
      "40:  secretData := make(map[string][]byte)",
      "41:  for k, v := range data {",
      "42:   secretData[k] = []byte(base64.StdEncoding.EncodeToString([]byte(v)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:  return newSecretInNamespace(name, namespace, data)",
      "41: }",
      "43: func newSecretInNamespace(name, namespace string, data map[string]string) *corev1.Secret {",
      "",
      "---------------"
    ],
    "controllers/metal3.io/host_config_data.go||controllers/metal3.io/host_config_data.go": [
      "File: controllers/metal3.io/host_config_data.go -> controllers/metal3.io/host_config_data.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "4:  \"github.com/go-logr/logr\"",
      "5:  metal3api \"github.com/metal3-io/baremetal-operator/apis/metal3.io/v1alpha1\"",
      "6:  \"github.com/metal3-io/baremetal-operator/pkg/secretutils\"",
      "7:  corev1 \"k8s.io/api/core/v1\"",
      "8:  \"k8s.io/apimachinery/pkg/types\"",
      "9: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7:  \"github.com/pkg/errors\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "22: func (hcd *hostConfigData) getSecretData(name, namespace, dataKey string) (string, error) {",
      "23:  key := types.NamespacedName{",
      "24:   Name:      name,",
      "25:   Namespace: namespace,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24:  if namespace != hcd.host.Namespace {",
      "25:   return \"\", errors.Errorf(\"%s secret must be in same namespace as host %s/%s\", dataKey, hcd.host.Namespace, hcd.host.Name)",
      "26:  }",
      "",
      "---------------"
    ],
    "controllers/metal3.io/host_config_data_test.go||controllers/metal3.io/host_config_data_test.go": [
      "File: controllers/metal3.io/host_config_data_test.go -> controllers/metal3.io/host_config_data_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "323:    ExpectedNetworkData: \"\",",
      "324:    ErrNetworkData:      true,",
      "325:   },",
      "326:  }",
      "328:  for _, tc := range testCases {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "326:   {",
      "327:    Scenario: \"user-data secret in different namespace\",",
      "328:    Host: newHost(\"host-user-data\",",
      "329:     &metal3api.BareMetalHostSpec{",
      "330:      BMC: metal3api.BMCDetails{",
      "331:       Address:         \"ipmi://192.168.122.1:6233\",",
      "332:       CredentialsName: defaultSecretName,",
      "333:      },",
      "334:      UserData: &corev1.SecretReference{",
      "335:       Name:      \"user-data\",",
      "336:       Namespace: \"other-namespace\",",
      "337:      },",
      "338:     }),",
      "339:    UserDataSecret: newSecretInNamespace(\"user-data\", \"other-namespace\", map[string]string{\"userData\": \"somedata\"}),",
      "340:    ErrUserData:    true,",
      "341:   },",
      "342:   {",
      "343:    Scenario: \"meta-data secret in different namespace\",",
      "344:    Host: newHost(\"host-user-data\",",
      "345:     &metal3api.BareMetalHostSpec{",
      "346:      BMC: metal3api.BMCDetails{",
      "347:       Address:         \"ipmi://192.168.122.1:6233\",",
      "348:       CredentialsName: defaultSecretName,",
      "349:      },",
      "350:      MetaData: &corev1.SecretReference{",
      "351:       Name:      \"meta-data\",",
      "352:       Namespace: \"other-namespace\",",
      "353:      },",
      "354:     }),",
      "355:    NetworkDataSecret: newSecretInNamespace(\"meta-data\", \"other-namespace\", map[string]string{\"metaData\": \"key: value\"}),",
      "356:    ErrMetaData:       true,",
      "357:   },",
      "358:   {",
      "359:    Scenario: \"network-data secret in different namespace\",",
      "360:    Host: newHost(\"host-user-data\",",
      "361:     &metal3api.BareMetalHostSpec{",
      "362:      BMC: metal3api.BMCDetails{",
      "363:       Address:         \"ipmi://192.168.122.1:6233\",",
      "364:       CredentialsName: defaultSecretName,",
      "365:      },",
      "366:      NetworkData: &corev1.SecretReference{",
      "367:       Name:      \"net-data\",",
      "368:       Namespace: \"other-namespace\",",
      "369:      },",
      "370:     }),",
      "371:    NetworkDataSecret: newSecretInNamespace(\"net-data\", \"other-namespace\", map[string]string{\"networkData\": \"key: value\"}),",
      "372:    ErrNetworkData:    true,",
      "373:   },",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "378:    }",
      "380:    if actualMetaData != tc.ExpectedMetaData {",
      "382:    }",
      "383:   })",
      "384:  }",
      "",
      "[Removed Lines]",
      "381:     t.Fatal(fmt.Errorf(\"Failed to assert MetaData. Expected '%s' got '%s'\", actualMetaData, tc.ExpectedMetaData))",
      "",
      "[Added Lines]",
      "429:     t.Fatal(fmt.Errorf(\"Failed to assert MetaData. Expected '%s' got '%s'\", tc.ExpectedMetaData, actualMetaData))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "095f0cfa243cc68c053a7fd503d373e724f56f7f",
      "candidate_info": {
        "commit_hash": "095f0cfa243cc68c053a7fd503d373e724f56f7f",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/095f0cfa243cc68c053a7fd503d373e724f56f7f",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": ":seedling: Bump github.com/prometheus/client_golang\n\nBumps [github.com/prometheus/client_golang](https://github.com/prometheus/client_golang) from 1.20.0 to 1.20.2.\n- [Release notes](https://github.com/prometheus/client_golang/releases)\n- [Changelog](https://github.com/prometheus/client_golang/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/prometheus/client_golang/compare/v1.20.0...v1.20.2)\n\n---\nupdated-dependencies:\n- dependency-name: github.com/prometheus/client_golang\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/metal3-io/baremetal-operator/pkg/hardwareutils v0.5.1",
          "11:  github.com/onsi/gomega v1.34.2",
          "12:  github.com/pkg/errors v0.9.1",
          "14:  github.com/stretchr/testify v1.9.0",
          "15:  go.etcd.io/etcd/client/pkg/v3 v3.5.15",
          "16:  go.uber.org/zap v1.27.0",
          "",
          "[Removed Lines]",
          "13:  github.com/prometheus/client_golang v1.20.0",
          "",
          "[Added Lines]",
          "13:  github.com/prometheus/client_golang v1.20.2",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "90: github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
          "91: github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "94: github.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=",
          "95: github.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=",
          "96: github.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=",
          "",
          "[Removed Lines]",
          "92: github.com/prometheus/client_golang v1.20.0 h1:jBzTZ7B099Rg24tny+qngoynol8LtVYlA2bqx3vEloI=",
          "93: github.com/prometheus/client_golang v1.20.0/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=",
          "",
          "[Added Lines]",
          "92: github.com/prometheus/client_golang v1.20.2 h1:5ctymQzZlyOON1666svgwn3s6IKWgfbjsejTMiXIyjg=",
          "93: github.com/prometheus/client_golang v1.20.2/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6e6f87b636c6ad964df8064004072abf62026d3",
      "candidate_info": {
        "commit_hash": "d6e6f87b636c6ad964df8064004072abf62026d3",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/d6e6f87b636c6ad964df8064004072abf62026d3",
        "files": [
          "test/go.mod"
        ],
        "message": "Update generated code",
        "before_after_code_files": [
          "test/go.mod||test/go.mod"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/go.mod||test/go.mod": [
          "File: test/go.mod -> test/go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module github.com/metal3-io/baremetal-operator/test",
          "4: toolchain go1.24.1",
          "6: require (",
          "",
          "[Removed Lines]",
          "3: go 1.23.0",
          "",
          "[Added Lines]",
          "3: go 1.23.8",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e1704d2bc51d987b92a7f751ace5efbd76cf11c8",
      "candidate_info": {
        "commit_hash": "e1704d2bc51d987b92a7f751ace5efbd76cf11c8",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/e1704d2bc51d987b92a7f751ace5efbd76cf11c8",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": ":seedling: Bump go.etcd.io/etcd/client/pkg/v3 from 3.5.18 to 3.5.19\n\nBumps [go.etcd.io/etcd/client/pkg/v3](https://github.com/etcd-io/etcd) from 3.5.18 to 3.5.19.\n- [Release notes](https://github.com/etcd-io/etcd/releases)\n- [Commits](https://github.com/etcd-io/etcd/compare/v3.5.18...v3.5.19)\n\n---\nupdated-dependencies:\n- dependency-name: go.etcd.io/etcd/client/pkg/v3\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module github.com/metal3-io/baremetal-operator",
          "3: go 1.22",
          "5: require (",
          "6:  github.com/go-logr/logr v1.4.2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: toolchain go1.23.7",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:  github.com/pkg/errors v0.9.1",
          "13:  github.com/prometheus/client_golang v1.20.5",
          "14:  github.com/stretchr/testify v1.9.0",
          "16:  go.uber.org/zap v1.27.0",
          "17:  k8s.io/api v0.29.14",
          "18:  k8s.io/apimachinery v0.29.14",
          "",
          "[Removed Lines]",
          "15:  go.etcd.io/etcd/client/pkg/v3 v3.5.18",
          "",
          "[Added Lines]",
          "16:  go.etcd.io/etcd/client/pkg/v3 v3.5.19",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  golang.org/x/net v0.34.0 // indirect",
          "81:  golang.org/x/oauth2 v0.21.0 // indirect",
          "82:  golang.org/x/sync v0.10.0 // indirect",
          "84:  golang.org/x/term v0.28.0 // indirect",
          "85:  golang.org/x/text v0.21.0 // indirect",
          "86:  golang.org/x/time v0.3.0 // indirect",
          "",
          "[Removed Lines]",
          "83:  golang.org/x/sys v0.29.0 // indirect",
          "",
          "[Added Lines]",
          "84:  golang.org/x/sys v0.30.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "135: github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=",
          "136: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "137: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "140: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.44.0 h1:KfYpVmrjI7JuToy5k8XV3nkapjWx48k4E4JOtVstzQI=",
          "141: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.44.0/go.mod h1:SeQhzAEccGVZVEy7aH87Nh0km+utSpo1pTv6eMMop48=",
          "142: go.opentelemetry.io/otel v1.19.0 h1:MuS/TNf4/j4IXsZuJegVzI1cwut7Qc00344rgH7p8bs=",
          "",
          "[Removed Lines]",
          "138: go.etcd.io/etcd/client/pkg/v3 v3.5.18 h1:mZPOYw4h8rTk7TeJ5+3udUkfVGBqc+GCjOJYd68QgNM=",
          "139: go.etcd.io/etcd/client/pkg/v3 v3.5.18/go.mod h1:BxVf2o5wXG9ZJV+/Cu7QNUiJYk4A29sAhoI5tIRsCu4=",
          "",
          "[Added Lines]",
          "138: go.etcd.io/etcd/client/pkg/v3 v3.5.19 h1:9VsyGhg0WQGjDWWlDI4VuaS9PZJGNbPkaHEIuLwtixk=",
          "139: go.etcd.io/etcd/client/pkg/v3 v3.5.19/go.mod h1:qaOi1k4ZA9lVLejXNvyPABrVEe7VymMF2433yyRQ7O0=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "183: golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "184: golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "187: golang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=",
          "188: golang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=",
          "189: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "",
          "[Removed Lines]",
          "185: golang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=",
          "186: golang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "",
          "[Added Lines]",
          "185: golang.org/x/sys v0.30.0 h1:QjkSwP/36a20jFYWkSue1YwXzLmsV5Gfq7Eiy72C1uc=",
          "186: golang.org/x/sys v0.30.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cb17c3e9186ffcd6d7eebfc19d83f52e91f8b82",
      "candidate_info": {
        "commit_hash": "7cb17c3e9186ffcd6d7eebfc19d83f52e91f8b82",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/7cb17c3e9186ffcd6d7eebfc19d83f52e91f8b82",
        "files": [
          ".golangci.yaml",
          "config/base/manager.yaml",
          "config/render/capm3.yaml",
          "main.go",
          "test/e2e/e2e_suite_test.go"
        ],
        "message": "Add e2e test for metrics service\n\nSigned-off-by: Kashif Khan <kashif.khan@est.tech>",
        "before_after_code_files": [
          "main.go||main.go",
          "test/e2e/e2e_suite_test.go||test/e2e/e2e_suite_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main.go||main.go": [
          "File: main.go -> main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:  flag.StringVar(&watchNamespace, \"namespace\", os.Getenv(\"WATCH_NAMESPACE\"),",
          "139:   \"Namespace that the controller watches to reconcile host resources.\")",
          "141:   \"The address the metric endpoint binds to.\")",
          "142:  flag.BoolVar(&enableLeaderElection, \"enable-leader-election\", false,",
          "143:   \"Enable leader election for controller manager. \"+",
          "",
          "[Removed Lines]",
          "140:  flag.StringVar(&metricsBindAddr, \"metrics-addr\", \"127.0.0.1:8085\",",
          "",
          "[Added Lines]",
          "140:  flag.StringVar(&metricsBindAddr, \"metrics-addr\", \":8443\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:   Scheme: scheme,",
          "218:   Metrics: metricsserver.Options{",
          "219:    BindAddress:    metricsBindAddr,",
          "220:    FilterProvider: filters.WithAuthenticationAndAuthorization,",
          "221:   },",
          "222:   WebhookServer: webhook.NewServer(webhook.Options{",
          "223:    Port:    webhookPort,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:    SecureServing:  true,",
          "222:    TLSOpts:        tlsOptionOverrides,",
          "",
          "---------------"
        ],
        "test/e2e/e2e_suite_test.go||test/e2e/e2e_suite_test.go": [
          "File: test/e2e/e2e_suite_test.go -> test/e2e/e2e_suite_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"flag\"",
          "6:  \"os\"",
          "7:  \"path/filepath\"",
          "8:  \"strings\"",
          "9:  \"testing\"",
          "11:  metal3api \"github.com/metal3-io/baremetal-operator/apis/metal3.io/v1alpha1\"",
          "12:  . \"github.com/onsi/ginkgo/v2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"encoding/json\"",
          "7:  \"fmt\"",
          "9:  \"os/exec\"",
          "13:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  RunSpecs(t, \"E2e Suite\")",
          "77: }",
          "79: var _ = SynchronizedBeforeSuite(func() []byte {",
          "80:  var kubeconfigPath string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: const namespace = \"baremetal-operator-system\"",
          "84: const serviceAccountName = \"baremetal-operator-controller-manager\"",
          "85: const metricsServiceName = \"baremetal-operator-controller-manager-metrics-service\"",
          "86: const metricsRoleBindingName = \"baremetal-operator-metrics-binding\"",
          "91: func serviceAccountToken() (string, error) {",
          "92:  const tokenRequestRawString = `{",
          "93:   \"apiVersion\": \"authentication.k8s.io/v1\",",
          "94:   \"kind\": \"TokenRequest\"",
          "95:  }`",
          "98:  secretName := fmt.Sprintf(\"%s-token-request\", serviceAccountName)",
          "99:  tokenRequestFile := filepath.Join(\"/tmp\", secretName) //nolint: gocritic",
          "100:  err := os.WriteFile(tokenRequestFile, []byte(tokenRequestRawString), os.FileMode(0o644))",
          "101:  if err != nil {",
          "102:   return \"\", err",
          "103:  }",
          "105:  var out string",
          "106:  verifyTokenCreation := func(g Gomega) {",
          "108:   cmd := exec.Command(\"kubectl\", \"create\", \"--raw\", fmt.Sprintf(",
          "109:    \"/api/v1/namespaces/%s/serviceaccounts/%s/token\",",
          "110:    namespace,",
          "111:    serviceAccountName,",
          "112:   ), \"-f\", tokenRequestFile)",
          "114:   output, err := cmd.CombinedOutput()",
          "115:   g.Expect(err).NotTo(HaveOccurred())",
          "118:   var token tokenRequest",
          "119:   err = json.Unmarshal(output, &token)",
          "120:   g.Expect(err).NotTo(HaveOccurred())",
          "122:   out = token.Status.Token",
          "123:  }",
          "124:  Eventually(verifyTokenCreation).Should(Succeed())",
          "126:  return out, err",
          "127: }",
          "131: type tokenRequest struct {",
          "132:  Status struct {",
          "133:   Token string `json:\"token\"`",
          "134:  } `json:\"status\"`",
          "135: }",
          "138: func getMetricsOutput() string {",
          "139:  By(\"getting the curl-metrics logs\")",
          "140:  cmd := exec.Command(\"kubectl\", \"logs\", \"curl-metrics\", \"-n\", namespace)",
          "141:  metricsOutput, err := cmd.CombinedOutput()",
          "142:  Expect(err).NotTo(HaveOccurred(), \"Failed to retrieve logs from curl pod\")",
          "143:  return string(metricsOutput)",
          "144: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "156:    })",
          "157:   })",
          "158:   Expect(err).NotTo(HaveOccurred())",
          "159:  }",
          "161:  return []byte(strings.Join([]string{clusterProxy.GetKubeconfigPath()}, \",\"))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:   By(\"creating a ClusterRoleBinding for the service account to allow access to metrics\")",
          "229:   cmd := exec.Command(\"kubectl\", \"create\", \"clusterrolebinding\", metricsRoleBindingName,",
          "230:    \"--clusterrole=baremetal-operator-metrics-reader\",",
          "231:    fmt.Sprintf(\"--serviceaccount=%s:%s\", namespace, serviceAccountName),",
          "232:   )",
          "233:   _, err = cmd.CombinedOutput()",
          "234:   Expect(err).NotTo(HaveOccurred(), \"Failed to create ClusterRoleBinding\")",
          "236:   By(\"validating that the metrics service is available\")",
          "237:   Eventually(func() error {",
          "238:    cmd := exec.Command(\"kubectl\", \"get\", \"service\", metricsServiceName, \"-n\", namespace)",
          "239:    output, err := cmd.CombinedOutput()",
          "240:    if err != nil {",
          "241:     fmt.Printf(\"Service check output: %s\\n\", string(output))",
          "242:     return err",
          "243:    }",
          "244:    return nil",
          "245:   }, \"30s\", \"5s\").Should(Succeed(), \"Metrics service is not available\")",
          "247:   By(\"getting the service account token\")",
          "248:   token, err := serviceAccountToken()",
          "249:   Expect(err).NotTo(HaveOccurred())",
          "250:   Expect(token).NotTo(BeEmpty())",
          "252:   By(\"waiting for the metrics endpoint to be ready\")",
          "253:   verifyMetricsEndpointReady := func(g Gomega) {",
          "254:    cmd := exec.Command(\"kubectl\", \"get\", \"endpoints\", metricsServiceName, \"-n\", namespace)",
          "255:    output, err := cmd.CombinedOutput()",
          "256:    g.Expect(err).NotTo(HaveOccurred())",
          "257:    g.Expect(output).To(ContainSubstring(\"8443\"), \"Metrics endpoint is not ready\")",
          "258:   }",
          "259:   Eventually(verifyMetricsEndpointReady).Should(Succeed())",
          "261:   By(\"creating the curl-metrics pod to access the metrics endpoint\")",
          "262:   cmd = exec.Command(\"kubectl\", \"run\", \"curl-metrics\", \"--restart=Never\",",
          "263:    \"--namespace\", namespace,",
          "264:    \"--image=curlimages/curl:7.87.0\",",
          "265:    \"--command\",",
          "266:    \"--\", \"curl\", \"-v\", \"--tlsv1.3\", \"-k\", \"-H\", fmt.Sprintf(\"Authorization:Bearer %s\", token),",
          "267:    fmt.Sprintf(\"https://%s.%s.svc.cluster.local:8443/metrics\", metricsServiceName, namespace))",
          "268:   _, err = cmd.CombinedOutput()",
          "269:   Expect(err).NotTo(HaveOccurred(), \"Failed to create curl-metrics pod\")",
          "271:   By(\"waiting for the curl-metrics pod to complete.\")",
          "272:   verifyCurlUp := func(g Gomega) {",
          "273:    cmd := exec.Command(\"kubectl\", \"get\", \"pods\", \"curl-metrics\",",
          "274:     \"-o\", \"jsonpath={.status.phase}\",",
          "275:     \"-n\", namespace)",
          "276:    output, err := cmd.CombinedOutput()",
          "277:    g.Expect(err).NotTo(HaveOccurred())",
          "278:    g.Expect(string(output)).To(Equal(\"Succeeded\"), \"curl pod in wrong status\")",
          "279:   }",
          "280:   Eventually(verifyCurlUp, 5*time.Minute).Should(Succeed())",
          "282:   By(\"getting the metrics by checking curl-metrics logs\")",
          "283:   metricsOutput := getMetricsOutput()",
          "284:   Expect(metricsOutput).To(ContainSubstring(",
          "285:    \"controller_runtime_reconcile_total\",",
          "286:   ))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d03cf5049971f0b46cd0c615d023b4ca8678e5f",
      "candidate_info": {
        "commit_hash": "2d03cf5049971f0b46cd0c615d023b4ca8678e5f",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/2d03cf5049971f0b46cd0c615d023b4ca8678e5f",
        "files": [
          "controllers/metal3.io/baremetalhost_controller.go",
          "controllers/metal3.io/bmceventsubscription_controller.go"
        ],
        "message": "Added Error message when reconciling loop is triggered more than once Signed-off-by: \u201cbabugeet <abhinandhbg@gmail.com>\u201d\n\nSigned-off-by: babugeet <97796199+babugeet@users.noreply.github.com>",
        "before_after_code_files": [
          "controllers/metal3.io/baremetalhost_controller.go||controllers/metal3.io/baremetalhost_controller.go",
          "controllers/metal3.io/bmceventsubscription_controller.go||controllers/metal3.io/bmceventsubscription_controller.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "controllers/metal3.io/baremetalhost_controller.go||controllers/metal3.io/baremetalhost_controller.go": [
          "File: controllers/metal3.io/baremetalhost_controller.go -> controllers/metal3.io/baremetalhost_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:  }",
          "214:  ready, err := prov.TryInit()",
          "219:   provisionerNotReady.Inc()",
          "221:   return ctrl.Result{Requeue: true, RequeueAfter: provisionerNotReadyRetryDelay}, nil",
          "222:  }",
          "",
          "[Removed Lines]",
          "215:  if err != nil {",
          "216:   return ctrl.Result{}, errors.Wrap(err, \"failed to check services availability\")",
          "217:  }",
          "218:  if !ready {",
          "220:   reqLogger.Info(\"provisioner is not ready\", \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "[Added Lines]",
          "215:  if err != nil || !ready {",
          "216:   var msg string",
          "217:   if err == nil {",
          "218:    msg = \"Not ready\"",
          "219:   } else {",
          "220:    msg = err.Error()",
          "221:   }",
          "223:   reqLogger.Info(\"provisioner is not ready\", \"Error\", msg, \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "---------------"
        ],
        "controllers/metal3.io/bmceventsubscription_controller.go||controllers/metal3.io/bmceventsubscription_controller.go": [
          "File: controllers/metal3.io/bmceventsubscription_controller.go -> controllers/metal3.io/bmceventsubscription_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:  prov, ready, err := r.getProvisioner(ctx, request, host)",
          "109:   return ctrl.Result{RequeueAfter: provisionerNotReadyRetryDelay}, nil",
          "110:  }",
          "",
          "[Removed Lines]",
          "103:  if err != nil {",
          "104:   return ctrl.Result{}, errors.Wrap(err, \"failed to create provisioner\")",
          "105:  }",
          "107:  if !ready {",
          "108:   reqLogger.Info(\"provisioner is not ready\", \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "[Added Lines]",
          "103:  if err != nil || !ready {",
          "104:   var msg string",
          "105:   if err == nil {",
          "106:    msg = \"Not ready\"",
          "107:   } else {",
          "108:    msg = err.Error()",
          "109:   }",
          "110:   reqLogger.Info(\"provisioner is not ready\", \"Error\", msg, \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:  }",
          "222:  ready, err = prov.TryInit()",
          "229:   return prov, ready, nil",
          "230:  }",
          "",
          "[Removed Lines]",
          "223:  if err != nil {",
          "224:   return prov, ready, errors.Wrap(err, \"failed to check services availability\")",
          "225:  }",
          "227:  if !ready {",
          "228:   reqLogger.Info(\"provisioner is not ready\", \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "[Added Lines]",
          "225:  if err != nil || !ready {",
          "226:   var msg string",
          "227:   if err == nil {",
          "228:    msg = \"Not ready\"",
          "229:   } else {",
          "230:    msg = err.Error()",
          "231:   }",
          "232:   reqLogger.Info(\"provisioner is not ready\", \"Error\", msg, \"RequeueAfter:\", provisionerNotReadyRetryDelay)",
          "",
          "---------------"
        ]
      }
    }
  ]
}