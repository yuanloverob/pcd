{
  "cve_id": "CVE-2019-1196",
  "cve_desc": "",
  "repo": "chakra-core/ChakraCore",
  "patch_hash": "dce7443ae45f82eceec3284974610e1a1bbe6792",
  "patch_info": {
    "commit_hash": "dce7443ae45f82eceec3284974610e1a1bbe6792",
    "repo": "chakra-core/ChakraCore",
    "commit_url": "https://github.com/chakra-core/ChakraCore/commit/dce7443ae45f82eceec3284974610e1a1bbe6792",
    "files": [
      "lib/Backend/BackwardPass.cpp",
      "lib/Backend/JnHelperMethodList.h",
      "lib/Backend/Lower.cpp",
      "lib/Backend/Lower.h",
      "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
      "lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
      "lib/Runtime/ByteCode/OpCodes.h",
      "lib/Runtime/Language/InterpreterHandler.inl",
      "lib/Runtime/Language/JavascriptConversion.cpp",
      "lib/Runtime/Language/JavascriptConversion.h",
      "lib/Runtime/Language/JavascriptOperators.cpp",
      "lib/Runtime/Language/JavascriptOperators.h",
      "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
    ],
    "message": "[CVE-2019-1196] Chakra Builtins Function Type Confusion",
    "before_after_code_files": [
      "lib/Backend/BackwardPass.cpp||lib/Backend/BackwardPass.cpp",
      "lib/Backend/JnHelperMethodList.h||lib/Backend/JnHelperMethodList.h",
      "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp",
      "lib/Backend/Lower.h||lib/Backend/Lower.h",
      "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
      "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
      "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h",
      "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl",
      "lib/Runtime/Language/JavascriptConversion.cpp||lib/Runtime/Language/JavascriptConversion.cpp",
      "lib/Runtime/Language/JavascriptConversion.h||lib/Runtime/Language/JavascriptConversion.h",
      "lib/Runtime/Language/JavascriptOperators.cpp||lib/Runtime/Language/JavascriptOperators.cpp",
      "lib/Runtime/Language/JavascriptOperators.h||lib/Runtime/Language/JavascriptOperators.h",
      "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
      "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
      "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
    ]
  },
  "patch_diff": {
    "lib/Backend/BackwardPass.cpp||lib/Backend/BackwardPass.cpp": [
      "File: lib/Backend/BackwardPass.cpp -> lib/Backend/BackwardPass.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "6555:             case Js::OpCode::Coerce_Regex:",
      "6556:             case Js::OpCode::Coerce_StrOrRegex:",
      "6557:             case Js::OpCode::Conv_PrimStr:",
      "6559:                 SetNegativeZeroDoesNotMatterIfLastUse(instr->GetSrc1());",
      "6560:                 SetNegativeZeroDoesNotMatterIfLastUse(instr->GetSrc2());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6558:             case Js::OpCode::Conv_Prop:",
      "",
      "---------------"
    ],
    "lib/Backend/JnHelperMethodList.h||lib/Backend/JnHelperMethodList.h": [
      "File: lib/Backend/JnHelperMethodList.h -> lib/Backend/JnHelperMethodList.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "134: HELPERCALL_MATH(Op_MinInAnArray, Js::JavascriptMath::MinInAnArray, AttrCanThrow)",
      "136: HELPERCALLCHK(Op_ConvString, Js::JavascriptConversion::ToString, AttrCanThrow)",
      "137: HELPERCALLCHK(Op_CoerseString, Js::JavascriptConversion::CoerseString, AttrCanThrow)",
      "138: HELPERCALLCHK(Op_CoerseRegex, (Js::JavascriptRegExp* (*) (Js::Var aValue, Js::Var options, Js::ScriptContext *scriptContext))Js::JavascriptRegExp::CreateRegEx, AttrCanThrow)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "137: HELPERCALLCHK(Op_ConvPropertyKey, Js::JavascriptOperators::OP_ToPropertyKey, AttrCanThrow)",
      "",
      "---------------"
    ],
    "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp": [
      "File: lib/Backend/Lower.cpp -> lib/Backend/Lower.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "2826:             this->LowerConvPrimStr(instr);",
      "2827:             break;",
      "2829:         case Js::OpCode::ClearAttributes:",
      "2830:             this->LowerBinaryHelper(instr, IR::HelperOP_ClearAttributes);",
      "2831:             break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2829:         case Js::OpCode::Conv_Prop:",
      "2830:             this->LowerConvPropertyKey(instr);",
      "2831:             break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "25474:     return dstOpnd;",
      "25475: }",
      "25477: void",
      "25478: Lowerer::LowerConvStrCommon(IR::JnHelperMethod helper,  IR::Instr * instr)",
      "25479: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25481: void",
      "25482: Lowerer::LowerConvPropertyKey(IR::Instr* instr)",
      "25483: {",
      "25484:     LowerConvStrCommon(IR::HelperOp_ConvPropertyKey, instr);",
      "25485: }",
      "",
      "---------------"
    ],
    "lib/Backend/Lower.h||lib/Backend/Lower.h": [
      "File: lib/Backend/Lower.h -> lib/Backend/Lower.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "670:     void            LowerConvPrimStr(IR::Instr * instr);",
      "671:     void            LowerConvStrCommon(IR::JnHelperMethod helper, IR::Instr * instr);",
      "673:     void            GenerateRecyclerAlloc(IR::JnHelperMethod allocHelper, size_t allocSize, IR::RegOpnd* newObjDst, IR::Instr* insertionPointInstr, bool inOpHelper = false);",
      "675:     template <typename ArrayType>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "673:     void            LowerConvPropertyKey(IR::Instr* instr);",
      "",
      "---------------"
    ],
    "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
      "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const GUID byteCodeCacheReleaseFileVersion =",
      "",
      "[Removed Lines]",
      "10: { 0x26894CEE, 0xB780, 0x4CD4, { 0xB7, 0x93, 0x7B, 0x09, 0x72, 0xAE, 0xED, 0xD9 } };",
      "",
      "[Added Lines]",
      "10: { 0x3096a219, 0x129d, 0x4a4a, { 0xa6, 0x1c, 0x18, 0x6d, 0x3, 0xbb, 0x25, 0xb7 } };",
      "",
      "---------------"
    ],
    "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp": [
      "File: lib/Runtime/ByteCode/ByteCodeEmitter.cpp -> lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "223: }",
      "225: bool ApplyEnclosesArgs(ParseNode* fncDecl, ByteCodeGenerator* byteCodeGenerator);",
      "228: bool IsExpressionStatement(ParseNode* stmt, const Js::ScriptContext *const scriptContext);",
      "229: void EmitInvoke(Js::RegSlot location, Js::RegSlot callObjLocation, Js::PropertyId propertyId, ByteCodeGenerator* byteCodeGenerator, FuncInfo* funcInfo);",
      "230: void EmitInvoke(Js::RegSlot location, Js::RegSlot callObjLocation, Js::PropertyId propertyId, ByteCodeGenerator* byteCodeGenerator, FuncInfo* funcInfo, Js::RegSlot arg1Location);",
      "",
      "[Removed Lines]",
      "226: void Emit(ParseNode *pnode, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, BOOL fReturnValue, bool isConstructorCall = false, ParseNode *bindPnode = nullptr, bool isTopLevel = false);",
      "227: void EmitBinaryOpnds(ParseNode *pnode1, ParseNode *pnode2, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo);",
      "",
      "[Added Lines]",
      "226: void Emit(ParseNode* pnode, ByteCodeGenerator* byteCodeGenerator, FuncInfo* funcInfo, BOOL fReturnValue, bool isConstructorCall = false, Js::RegSlot bindingNameLocation = Js::Constants::NoRegister, bool isTopLevel = false);",
      "227: void EmitBinaryOpnds(ParseNode* pnode1, ParseNode* pnode2, ByteCodeGenerator* byteCodeGenerator, FuncInfo* funcInfo, Js::RegSlot computedPropertyLocation = Js::Constants::NoRegister);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "953:         EndStatement(stmt);",
      "954:     }",
      "957:     if (funcInfo->IsTmpReg(stmt->location))",
      "958:     {",
      "959:         if (!stmt->isUsed && !fReturnValue)",
      "",
      "[Removed Lines]",
      "956:     Emit(stmt, this, funcInfo, fReturnValue, false/*isConstructorCall*/, nullptr/*bindPnode*/, true/*isTopLevel*/);",
      "",
      "[Added Lines]",
      "956:     Emit(stmt, this, funcInfo, fReturnValue, false/*isConstructorCall*/, Js::Constants::NoRegister/*computedPropertyLocation*/, true/*isTopLevel*/);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "8224:     byteCodeGenerator->Writer()->CallI(Js::OpCode::CallI, location, location, 2, callSiteId);",
      "8225: }",
      "8243: void EmitMemberNode(ParseNode *memberNode, Js::RegSlot objectLocation, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, ParseNode* parentNode, bool useStore, bool* isObjectEmpty = nullptr)",
      "8244: {",
      "8245:     ParseNode *nameNode = memberNode->AsParseNodeBin()->pnode1;",
      "",
      "[Removed Lines]",
      "8227: void EmitComputedFunctionNameVar(ParseNode *nameNode, ParseNodeFnc *exprNode, ByteCodeGenerator *byteCodeGenerator)",
      "8228: {",
      "8229:     AssertMsg(exprNode != nullptr, \"callers of this function should pass in a valid expression Node\");",
      "8230:     Assert(exprNode->HasComputedName());",
      "8232:     if (nameNode == nullptr)",
      "8233:     {",
      "8234:         return;",
      "8235:     }",
      "8237:     if (exprNode->pnodeName == nullptr)",
      "8238:     {",
      "8239:         byteCodeGenerator->Writer()->Reg2(Js::OpCode::SetComputedNameVar, exprNode->location, nameNode->location);",
      "8240:     }",
      "8241: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "8254:         exprNode->AsParseNodeFnc()->SetHomeObjLocation(objectLocation);",
      "8255:     }",
      "8259:     if (nameNode->nop == knopComputedName)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8241:     Js::RegSlot computedNamePropertyKey = Js::Constants::NoRegister;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "8264:         nameNode->location = nameNode->AsParseNodeUni()->pnode1->location;",
      "8267:         {",
      "8269:         }",
      "8270:     }",
      "",
      "[Removed Lines]",
      "8265:         EmitBinaryOpnds(nameNode, exprNode, byteCodeGenerator, funcInfo);",
      "8266:         if (isFncDecl && !exprNode->AsParseNodeFnc()->IsClassConstructor())",
      "8268:             EmitComputedFunctionNameVar(nameNode, exprNode->AsParseNodeFnc(), byteCodeGenerator);",
      "",
      "[Added Lines]",
      "8251:         computedNamePropertyKey = funcInfo->AcquireTmpRegister();",
      "8253:         EmitBinaryOpnds(nameNode, exprNode, byteCodeGenerator, funcInfo, computedNamePropertyKey);",
      "8255:         if (isFncDecl && !exprNode->AsParseNodeFnc()->IsClassConstructor() && exprNode->AsParseNodeFnc()->pnodeName == nullptr)",
      "8257:             byteCodeGenerator->Writer()->Reg2(Js::OpCode::SetComputedNameVar, exprNode->location, computedNamePropertyKey);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "8289:             (isClassMember ? Js::OpCode::InitClassMemberSetComputedName : Js::OpCode::InitSetElemI) :",
      "8290:             (isClassMember ? Js::OpCode::InitClassMemberComputedName : Js::OpCode::InitComputedProperty);",
      "8294:         funcInfo->ReleaseLoc(exprNode);",
      "8295:         funcInfo->ReleaseLoc(nameNode);",
      "8297:         return;",
      "8298:     }",
      "",
      "[Removed Lines]",
      "8292:         byteCodeGenerator->Writer()->Element(setOp, exprNode->location, objectLocation, nameNode->location, true);",
      "",
      "[Added Lines]",
      "8281:         byteCodeGenerator->Writer()->Element(setOp, exprNode->location, objectLocation, computedNamePropertyKey, true);",
      "8285:         funcInfo->ReleaseTmpRegister(computedNamePropertyKey);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "9578:     }",
      "9579: }",
      "9582: {",
      "9584:     if (MayHaveSideEffectOnNode(pnode1, pnode2))",
      "",
      "[Removed Lines]",
      "9581: void EmitBinaryOpnds(ParseNode *pnode1, ParseNode *pnode2, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo)",
      "",
      "[Added Lines]",
      "9571: void EmitBinaryOpnds(ParseNode *pnode1, ParseNode *pnode2, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, Js::RegSlot computedPropertyLocation)",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "9589:     Emit(pnode1, byteCodeGenerator, funcInfo, false);",
      "9597:     {",
      "9599:     }",
      "9600: }",
      "9602: void EmitBinaryReference(ParseNode *pnode1, ParseNode *pnode2, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, BOOL fLoadLhs)",
      "",
      "[Removed Lines]",
      "9591:     if (pnode1->nop == knopComputedName && pnode2->nop == knopClassDecl &&",
      "9592:         (pnode2->AsParseNodeClass()->pnodeConstructor == nullptr || pnode2->AsParseNodeClass()->pnodeConstructor->nop != knopVarDecl))",
      "9593:     {",
      "9594:         Emit(pnode2, byteCodeGenerator, funcInfo, false, false, pnode1);",
      "9595:     }",
      "9596:     else",
      "9598:         Emit(pnode2, byteCodeGenerator, funcInfo, false);",
      "",
      "[Added Lines]",
      "9581:     if (pnode1->nop == knopComputedName && computedPropertyLocation != Js::Constants::NoRegister)",
      "9583:         byteCodeGenerator->Writer()->Reg2(Js::OpCode::Conv_Prop, computedPropertyLocation, pnode1->location);",
      "9586:     Emit(pnode2, byteCodeGenerator, funcInfo, false, false, computedPropertyLocation);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "10142:     }",
      "10143: }",
      "10146: {",
      "10147:     if (pnode == nullptr)",
      "10148:     {",
      "",
      "[Removed Lines]",
      "10145: void Emit(ParseNode *pnode, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, BOOL fReturnValue, bool isConstructorCall, ParseNode * bindPnode, bool isTopLevel)",
      "",
      "[Added Lines]",
      "10132: void Emit(ParseNode *pnode, ByteCodeGenerator *byteCodeGenerator, FuncInfo *funcInfo, BOOL fReturnValue, bool isConstructorCall, Js::RegSlot bindingNameLocation, bool isTopLevel)",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "10968:         Emit(pnodeClass->pnodeConstructor, byteCodeGenerator, funcInfo, false);",
      "10970:         if (pnodeClass->pnodeExtends)",
      "10971:         {",
      "10972:             byteCodeGenerator->StartStatement(pnodeClass->pnodeExtends);",
      "",
      "[Removed Lines]",
      "10969:         EmitComputedFunctionNameVar(bindPnode, pnodeClass->pnodeConstructor, byteCodeGenerator);",
      "",
      "[Added Lines]",
      "10957:         if (bindingNameLocation != Js::Constants::NoRegister && !pnodeClass->pnodeConstructor->pnodeName)",
      "10958:         {",
      "10959:             Assert(pnodeClass->pnodeConstructor->HasComputedName());",
      "10960:             byteCodeGenerator->Writer()->Reg2(Js::OpCode::SetComputedNameVar, pnodeClass->pnodeConstructor->location, bindingNameLocation);",
      "10961:         }",
      "",
      "---------------"
    ],
    "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h": [
      "File: lib/Runtime/ByteCode/OpCodes.h -> lib/Runtime/ByteCode/OpCodes.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "320: MACRO_WMS(              Conv_Num,           Reg2,           OpSideEffect|OpTempNumberProducing|OpTempNumberTransfer|OpTempObjectSources|OpOpndHasImplicitCall|OpProducesNumber) // Convert to Number. [[ToNumber()]]",
      "322: MACRO_EXTEND_WMS(       Conv_Str,           Reg2,           OpOpndHasImplicitCall|OpTempNumberSources|OpTempObjectSources|OpCanCSE|OpPostOpDbgBailOut)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "324: MACRO_EXTEND_WMS(       Conv_Prop,          Reg2,           OpOpndHasImplicitCall|OpTempNumberSources|OpTempObjectSources|OpCanCSE|OpPostOpDbgBailOut)",
      "",
      "---------------"
    ],
    "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl": [
      "File: lib/Runtime/Language/InterpreterHandler.inl -> lib/Runtime/Language/InterpreterHandler.inl",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:   DEF3_WMS(CALL,                    ProfiledReturnTypeCallIExtendedFlags,    PROFILEDOP(OP_ProfiledReturnTypeCallIExtendedFlags, OP_CallIExtendedFlags), ProfiledCallIExtendedFlags)",
      "96: EXDEF2_WMS(A1toA1Mem,               Conv_Str,                   JavascriptConversion::ToString)",
      "97:   DEF2_WMS(A1toA1Mem,               Conv_Obj,                   JavascriptOperators::ToObject)",
      "98: EXDEF2_WMS(A1toA1Mem,               NewUnscopablesWrapperObject,JavascriptOperators::ToUnscopablesWrapperObject)",
      "99:   DEF2_WMS(A1toA1Mem,               Conv_Num,                   JavascriptOperators::ToNumber)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: EXDEF2_WMS(A1toA1Mem,               Conv_Prop,                  JavascriptOperators::OP_ToPropertyKey)",
      "",
      "---------------"
    ],
    "lib/Runtime/Language/JavascriptConversion.cpp||lib/Runtime/Language/JavascriptConversion.cpp": [
      "File: lib/Runtime/Language/JavascriptConversion.cpp -> lib/Runtime/Language/JavascriptConversion.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "271:         Var argument,",
      "272:         _In_ ScriptContext* scriptContext,",
      "273:         _Out_ const PropertyRecord** propertyRecord,",
      "",
      "[Removed Lines]",
      "270:     void JavascriptConversion::ToPropertyKey(",
      "",
      "[Added Lines]",
      "270:     Var JavascriptConversion::ToPropertyKey(",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "289:             {",
      "290:                 propertyString = PropertyString::UnsafeFromVar(propName);",
      "291:             }",
      "292:         }",
      "294:         if (propString)",
      "295:         {",
      "297:         }",
      "298:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "292:             key = propName;",
      "300:         return key;",
      "",
      "---------------"
    ],
    "lib/Runtime/Language/JavascriptConversion.h||lib/Runtime/Language/JavascriptConversion.h": [
      "File: lib/Runtime/Language/JavascriptConversion.h -> lib/Runtime/Language/JavascriptConversion.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "17:         static Var ToPrimitive(_In_ Var aValue, _In_ ScriptContext * scriptContext);",
      "18:         static BOOL CanonicalNumericIndexString(JavascriptString *aValue, double *indexValue, ScriptContext * scriptContext);",
      "21:             Var argument,",
      "22:             _In_ ScriptContext* scriptContext,",
      "23:             _Out_ const PropertyRecord** propertyRecord,",
      "",
      "[Removed Lines]",
      "20:         static void ToPropertyKey(",
      "",
      "[Added Lines]",
      "20:         static Var ToPropertyKey(",
      "",
      "---------------"
    ],
    "lib/Runtime/Language/JavascriptOperators.cpp||lib/Runtime/Language/JavascriptOperators.cpp": [
      "File: lib/Runtime/Language/JavascriptOperators.cpp -> lib/Runtime/Language/JavascriptOperators.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "5208:         JIT_HELPER_END(Op_DeleteElementI);",
      "5209:     }",
      "5211:     Var JavascriptOperators::OP_GetLength(Var instance, ScriptContext* scriptContext)",
      "5212:     {",
      "5213:         return JavascriptOperators::OP_GetProperty(instance, PropertyIds::length, scriptContext);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5211:     Var JavascriptOperators::OP_ToPropertyKey(Js::Var argument, ScriptContext* scriptContext)",
      "5212:     {",
      "5213:         JIT_HELPER_REENTRANT_HEADER(Op_ConvPropertyKey);",
      "5214:         PropertyRecord const* unused = nullptr;",
      "5215:         return JavascriptConversion::ToPropertyKey(argument, scriptContext, &unused, nullptr);",
      "5216:         JIT_HELPER_END(Op_ConvPropertyKey);",
      "5217:     }",
      "",
      "---------------"
    ],
    "lib/Runtime/Language/JavascriptOperators.h||lib/Runtime/Language/JavascriptOperators.h": [
      "File: lib/Runtime/Language/JavascriptOperators.h -> lib/Runtime/Language/JavascriptOperators.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "453:         static Var OP_CmGt_A(Js::Var a,Js::Var b,ScriptContext* scriptContext);",
      "454:         static Var OP_CmGe_A(Js::Var a,Js::Var b,ScriptContext* scriptContext);",
      "456:         static FunctionInfo * GetConstructorFunctionInfo(Var instance, ScriptContext * scriptContext);",
      "458:         static DetachedStateBase* DetachVarAndGetState(Var var, bool queueForDelayFree = true);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "456:         static Var OP_ToPropertyKey(Js::Var argument, ScriptContext* scriptContext);",
      "",
      "---------------"
    ],
    "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h": [
      "File: lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h"
    ],
    "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h": [
      "File: lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h"
    ],
    "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h": [
      "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h"
    ],
    "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h": [
      "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h"
    ],
    "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h": [
      "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h"
    ],
    "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h": [
      "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h"
    ],
    "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h": [
      "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h"
    ],
    "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h": [
      "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8a1584c918b757a1938a9f27b579e8aa77b6533c",
      "candidate_info": {
        "commit_hash": "8a1584c918b757a1938a9f27b579e8aa77b6533c",
        "repo": "chakra-core/ChakraCore",
        "commit_url": "https://github.com/chakra-core/ChakraCore/commit/8a1584c918b757a1938a9f27b579e8aa77b6533c",
        "files": [
          "lib/Backend/GlobOpt.cpp",
          "lib/Backend/IRBuilder.cpp",
          "lib/Backend/Lower.cpp",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "lib/Runtime/ByteCode/OpCodes.h",
          "lib/Runtime/Language/InterpreterHandler.inl",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h",
          "BUILD.gn",
          "Build/Chakra.Build.Clang.Default.props",
          "Build/Chakra.Build.Clang.props",
          "Build/Chakra.Build.Clang.targets",
          "Build/Chakra.Core.sln",
          "Build/NuGet/.pack-version",
          "Build/NuGet/Microsoft.ChakraCore.vc140.nuspec",
          "Build/NuGet/Microsoft.ChakraCore.vc140.targets",
          "Build/NuGet/package.ps1",
          "Build/scripts/add_msbuild_path.cmd",
          "CONTRIBUTING.md",
          "README.md",
          "RegenAllByteCodeNoBuild.cmd",
          "bin/ChakraCore/ChakraCore.def",
          "bin/ChakraCore/ChakraCore.vcxproj",
          "bin/ChakraCore/ChakraCoreDllFunc.cpp",
          "bin/ChakraCore/TestHooks.cpp",
          "bin/ChakraCore/TestHooks.h",
          "bin/GCStress/GCStress.vcxproj",
          "bin/NativeTests/BigUIntTest.cpp",
          "bin/NativeTests/BigUIntTest.h",
          "bin/NativeTests/ConfigFlagsList.h",
          "bin/NativeTests/FunctionExecutionTest.h",
          "bin/NativeTests/JavascriptBigIntTests.cpp",
          "bin/NativeTests/JsRTApiTest.cpp",
          "bin/NativeTests/NativeTests.vcxproj",
          "bin/NativeTests/stdafx.h",
          "bin/ch/262.js",
          "bin/ch/ChakraRtInterface.cpp",
          "bin/ch/ChakraRtInterface.h",
          "bin/ch/DbgController.js",
          "bin/ch/Debugger.cpp",
          "bin/ch/Helpers.cpp",
          "bin/ch/Helpers.h",
          "bin/ch/HostConfigFlagsList.h",
          "bin/ch/JITProcessManager.cpp",
          "bin/ch/WScriptJsrt.cpp",
          "bin/ch/WScriptJsrt.h",
          "bin/ch/ch.cpp",
          "bin/ch/stdafx.h",
          "bin/rl/rl.cpp",
          "build.sh",
          "deps/Chakra.ICU/Chakra.ICU.Build.props",
          "deps/Chakra.ICU/Chakra.ICU.i18n.vcxproj",
          "jenkins/check_ascii.sh",
          "jenkins/check_eol.sh",
          "jenkins/check_file_ascii.sh",
          "jenkins/check_file_eol.sh",
          "lib/Backend/AsmJsJITInfo.cpp",
          "lib/Backend/BackendApi.cpp",
          "lib/Backend/BackendOpCodeAttrAsmJs.cpp",
          "lib/Backend/BackendOpCodeAttrAsmJs.h",
          "lib/Backend/BackwardPass.cpp",
          "lib/Backend/BackwardPass.h",
          "lib/Backend/BailOut.cpp",
          "lib/Backend/BailOut.h",
          "lib/Backend/BailOutKind.h",
          "lib/Backend/CodeGenNumberAllocator.cpp",
          "lib/Backend/DbCheckPostLower.cpp",
          "lib/Backend/DbCheckPostLower.h",
          "lib/Backend/Encoder.cpp",
          "lib/Backend/Encoder.h",
          "lib/Backend/EquivalentTypeSet.cpp",
          "lib/Backend/FixedFieldInfo.cpp",
          "lib/Backend/FlowGraph.cpp",
          "lib/Backend/FlowGraph.h",
          "lib/Backend/Func.cpp",
          "lib/Backend/Func.h",
          "lib/Backend/FunctionCodeGenJitTimeData.cpp",
          "lib/Backend/FunctionCodeGenJitTimeData.h",
          "lib/Backend/FunctionJITTimeInfo.cpp",
          "lib/Backend/FunctionJITTimeInfo.h",
          "lib/Backend/GlobHashTable.h",
          "lib/Backend/GlobOpt.cpp",
          "lib/Backend/GlobOpt.h",
          "lib/Backend/GlobOptArrays.cpp",
          "lib/Backend/GlobOptArrays.h",
          "lib/Backend/GlobOptBailOut.cpp",
          "lib/Backend/GlobOptBlockData.cpp",
          "lib/Backend/GlobOptBlockData.h",
          "lib/Backend/GlobOptExpr.cpp",
          "lib/Backend/GlobOptFields.cpp",
          "lib/Backend/IR.cpp",
          "lib/Backend/IR.h",
          "lib/Backend/IR.inl",
          "lib/Backend/IRBuilder.cpp",
          "lib/Backend/IRBuilder.h",
          "lib/Backend/IRBuilderAsmJs.cpp",
          "lib/Backend/Inline.cpp",
          "lib/Backend/Inline.h",
          "lib/Backend/InlineeFrameInfo.cpp",
          "lib/Backend/InliningDecider.cpp",
          "lib/Backend/InliningDecider.h",
          "lib/Backend/JITTimeFunctionBody.cpp",
          "lib/Backend/JITTimeFunctionBody.h",
          "lib/Backend/JitTransferData.cpp",
          "lib/Backend/JitTransferData.h",
          "lib/Backend/JnHelperMethodList.h",
          "lib/Backend/LinearScan.cpp",
          "lib/Backend/LinearScan.h",
          "lib/Backend/Lower.cpp",
          "lib/Backend/Lower.h",
          "lib/Backend/LowerMDShared.cpp",
          "lib/Backend/LowerMDShared.h",
          "lib/Backend/LowerMDSharedSimd128.cpp",
          "lib/Backend/NativeCodeGenerator.cpp",
          "lib/Backend/NativeEntryPointData.cpp",
          "lib/Backend/NativeEntryPointData.h",
          "lib/Backend/ObjTypeSpecFldInfo.cpp",
          "lib/Backend/ObjTypeSpecFldInfo.h",
          "lib/Backend/Opnd.cpp",
          "lib/Backend/Opnd.h",
          "lib/Backend/Peeps.cpp",
          "lib/Backend/SccLiveness.cpp",
          "lib/Backend/ServerScriptContext.cpp",
          "lib/Backend/ServerScriptContext.h",
          "lib/Backend/SimpleJitProfilingHelpers.cpp",
          "lib/Backend/SimpleJitProfilingHelpers.h",
          "lib/Backend/Sym.cpp",
          "lib/Backend/Sym.h",
          "lib/Backend/TempTracker.cpp",
          "lib/Backend/TempTracker.h",
          "lib/Backend/amd64/EncoderMD.cpp",
          "lib/Backend/amd64/EncoderMD.h",
          "lib/Backend/amd64/LinearScanMD.cpp",
          "lib/Backend/amd64/LinearScanMD.h",
          "lib/Backend/amd64/LowererMDArch.cpp",
          "lib/Backend/amd64/machvalues.h",
          "lib/Backend/arm/EncoderMD.cpp",
          "lib/Backend/arm/EncoderMD.h",
          "lib/Backend/arm/LowerMD.cpp",
          "lib/Backend/arm/LowerMD.h",
          "lib/Backend/arm/machvalues.h",
          "lib/Backend/arm64/ARM64NeonEncoder.h",
          "lib/Backend/arm64/EncoderMD.cpp",
          "lib/Backend/arm64/EncoderMD.h",
          "lib/Backend/arm64/LowerMD.cpp",
          "lib/Backend/arm64/LowerMD.h",
          "lib/Backend/arm64/machvalues.h",
          "lib/Backend/i386/EncoderMD.cpp",
          "lib/Backend/i386/EncoderMD.h",
          "lib/Backend/i386/LowererMDArch.cpp",
          "lib/Backend/i386/machvalues.h",
          "lib/CMakeLists.txt",
          "lib/Common/BackendApi.h",
          "lib/Common/ChakraCoreVersion.h",
          "lib/Common/Codex/Utf8Codex.cpp",
          "lib/Common/Codex/Utf8Codex.h",
          "lib/Common/Common/Chakra.Common.Common.vcxproj",
          "lib/Common/Common/CompressionUtilities.cpp",
          "lib/Common/Common/CompressionUtilities.h",
          "lib/Common/Common/Jobs.cpp",
          "lib/Common/Common/Jobs.h",
          "lib/Common/Common/NumberUtilities.cpp",
          "lib/Common/Common/NumberUtilities.h",
          "lib/Common/Common/NumberUtilities.inl",
          "lib/Common/Common/NumberUtilitiesBase.h",
          "lib/Common/Common/NumberUtilities_strtod.cpp",
          "lib/Common/Common/RejitReasons.h",
          "lib/Common/CommonDefines.h",
          "lib/Common/CommonPal.h",
          "lib/Common/ConfigFlagsList.h",
          "lib/Common/Core/Assertions.h",
          "lib/Common/Core/CommonTypedefs.h",
          "lib/Common/Core/ConfigParser.cpp",
          "lib/Common/Core/ConfigParser.h",
          "lib/Common/Core/DelayLoadLibrary.cpp",
          "lib/Common/Core/DelayLoadLibrary.h",
          "lib/Common/Core/EtwTraceCore.h",
          "lib/Common/Core/FaultInjection.cpp",
          "lib/Common/Core/Output.cpp",
          "lib/Common/Core/Output.h",
          "lib/Common/Core/SysInfo.cpp",
          "lib/Common/Core/SysInfo.h",
          "lib/Common/DataStructures/BaseDictionary.h",
          "lib/Common/DataStructures/BigInt.cpp",
          "lib/Common/DataStructures/BigInt.h",
          "lib/Common/DataStructures/BigUInt.cpp",
          "lib/Common/DataStructures/BigUInt.h",
          "lib/Common/DataStructures/CMakeLists.txt",
          "lib/Common/DataStructures/Chakra.Common.DataStructures.vcxproj",
          "lib/Common/DataStructures/ClusterList.h",
          "lib/Common/DataStructures/DictionaryEntry.h",
          "lib/Common/DataStructures/KeyValuePair.h",
          "lib/Common/DataStructures/SparseBitVector.h",
          "lib/Common/DataStructures/WeakReferenceDictionary.h",
          "lib/Common/Exceptions/ReportError.cpp",
          "lib/Common/Exceptions/Throw.h",
          "lib/Common/Memory/AllocatorTelemetryStats.h",
          "lib/Common/Memory/BucketStatsReporter.h",
          "lib/Common/Memory/CollectionState.h",
          "lib/Common/Memory/CustomHeap.cpp",
          "lib/Common/Memory/HeapBlock.cpp",
          "lib/Common/Memory/HeapBlock.h",
          "lib/Common/Memory/HeapBucket.cpp",
          "lib/Common/Memory/HeapBucketStats.cpp",
          "lib/Common/Memory/HeapInfo.h",
          "lib/Common/Memory/HeapInfoManager.h",
          "lib/Common/Memory/LargeHeapBlock.cpp",
          "lib/Common/Memory/Recycler.cpp",
          "lib/Common/Memory/Recycler.h",
          "lib/Common/Memory/RecyclerSweepManager.cpp",
          "lib/Common/Memory/RecyclerSweepManager.h",
          "lib/Common/Memory/SmallFinalizableHeapBlock.cpp",
          "lib/Common/Memory/SmallFinalizableHeapBlock.h",
          "lib/Common/Memory/SmallNormalHeapBucket.cpp",
          "lib/JITClient/JITClientStub.c",
          "lib/JITClient/JITManager.cpp",
          "lib/JITIDL/Chakra.JITIDL.vcxproj",
          "lib/JITIDL/ChakraJIT.idl",
          "lib/JITIDL/JITTypes.h",
          "lib/JITServer/JITServer.cpp",
          "lib/JITServer/JITServerStub.c",
          "lib/Jsrt/CMakeLists.txt",
          "lib/Jsrt/Chakra.Jsrt.vcxproj",
          "lib/Jsrt/ChakraCommon.h",
          "lib/Jsrt/ChakraCore.h",
          "lib/Jsrt/ChakraCoreWindows.h",
          "lib/Jsrt/Core/CMakeLists.txt",
          "lib/Jsrt/Core/Chakra.Jsrt.Core.vcxproj",
          "lib/Jsrt/Core/JsrtContextCore.cpp",
          "lib/Jsrt/Core/JsrtContextCore.h",
          "lib/Jsrt/Core/JsrtCore.cpp",
          "lib/Jsrt/Jsrt.cpp",
          "lib/Jsrt/JsrtCommonExports.inc",
          "lib/Jsrt/JsrtContext.h",
          "lib/Jsrt/JsrtDebugEventObject.cpp",
          "lib/Jsrt/JsrtDebugManager.cpp",
          "lib/Jsrt/JsrtDebugUtils.cpp",
          "lib/Jsrt/JsrtDiag.cpp",
          "lib/Jsrt/JsrtExternalObject.cpp",
          "lib/Jsrt/JsrtExternalObject.h",
          "lib/Jsrt/JsrtInternal.h",
          "lib/Jsrt/JsrtRuntime.cpp",
          "lib/Jsrt/JsrtRuntime.h",
          "lib/Jsrt/JsrtSourceHolder.cpp",
          "lib/Parser/BGParseManager.cpp",
          "lib/Parser/BGParseManager.h",
          "lib/Parser/CharClassifier.h",
          "lib/Parser/FormalsUtil.h",
          "lib/Parser/Parse.cpp",
          "lib/Parser/Parse.h",
          "lib/Parser/ParseFlags.h",
          "lib/Parser/ParserCommon.h",
          "lib/Parser/RegexCompileTime.cpp",
          "lib/Parser/RegexFlags.h",
          "lib/Parser/RegexParser.cpp",
          "lib/Parser/RegexParser.h",
          "lib/Parser/RegexPattern.cpp",
          "lib/Parser/RegexPattern.h",
          "lib/Parser/RegexRuntime.cpp",
          "lib/Parser/Scan.cpp",
          "lib/Parser/Scan.h",
          "lib/Parser/StandardChars.cpp",
          "lib/Parser/StandardChars.h",
          "lib/Parser/cmperr.cpp",
          "lib/Parser/cmperr.h",
          "lib/Parser/perrors.h",
          "lib/Parser/pnodewalk.h",
          "lib/Parser/ptlist.h",
          "lib/Parser/ptree.cpp",
          "lib/Parser/ptree.h",
          "lib/Parser/rterrors.h",
          "lib/Parser/screrror.cpp",
          "lib/Parser/screrror.h",
          "lib/Parser/tokens.h",
          "lib/Runtime/Base/CharStringCache.cpp",
          "lib/Runtime/Base/Constants.cpp",
          "lib/Runtime/Base/Constants.h",
          "lib/Runtime/Base/CrossSite.cpp",
          "lib/Runtime/Base/DelayLoadLibrary.cpp",
          "lib/Runtime/Base/FunctionBody.cpp",
          "lib/Runtime/Base/FunctionBody.h",
          "lib/Runtime/Base/FunctionExecutionStateMachine.cpp",
          "lib/Runtime/Base/FunctionExecutionStateMachine.h",
          "lib/Runtime/Base/FunctionInfo.cpp",
          "lib/Runtime/Base/FunctionInfo.h",
          "lib/Runtime/Base/JnDirectFields.h",
          "lib/Runtime/Base/LineOffsetCache.cpp",
          "lib/Runtime/Base/PerfHintDescriptions.h",
          "lib/Runtime/Base/RegexPatternMruMap.h",
          "lib/Runtime/Base/ScriptContext.cpp",
          "lib/Runtime/Base/ScriptContext.h",
          "lib/Runtime/Base/ScriptContextInfo.h",
          "lib/Runtime/Base/ThreadBoundThreadContextManager.cpp",
          "lib/Runtime/Base/ThreadConfigFlagsList.h",
          "lib/Runtime/Base/ThreadContext.cpp",
          "lib/Runtime/Base/ThreadContext.h",
          "lib/Runtime/Base/ThreadContextInfo.cpp",
          "lib/Runtime/Base/ThreadContextInfo.h",
          "lib/Runtime/Base/ThreadContextTlsEntry.cpp",
          "lib/Runtime/Base/Utf8SourceInfo.h",
          "lib/Runtime/ByteCode/AsmJsByteCodeWriter.h",
          "lib/Runtime/ByteCode/ByteBlock.cpp",
          "lib/Runtime/ByteCode/ByteBlock.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "lib/Runtime/ByteCode/ByteCodeDumper.cpp",
          "lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "lib/Runtime/ByteCode/ByteCodeGenerator.cpp",
          "lib/Runtime/ByteCode/ByteCodeGenerator.h",
          "lib/Runtime/ByteCode/ByteCodeSerializeFlags.h",
          "lib/Runtime/ByteCode/ByteCodeSerializer.cpp",
          "lib/Runtime/ByteCode/ByteCodeWriter.cpp",
          "lib/Runtime/ByteCode/ByteCodeWriter.h",
          "lib/Runtime/ByteCode/FuncInfo.cpp",
          "lib/Runtime/ByteCode/FuncInfo.h",
          "lib/Runtime/ByteCode/LayoutTypes.h",
          "lib/Runtime/ByteCode/OpCodeUtil.h",
          "lib/Runtime/ByteCode/OpCodes.h",
          "lib/Runtime/ByteCode/OpLayouts.h",
          "lib/Runtime/ByteCode/ScopeInfo.cpp",
          "lib/Runtime/ByteCode/ScopeInfo.h",
          "lib/Runtime/ByteCode/Symbol.h",
          "lib/Runtime/Debug/BreakpointProbe.cpp",
          "lib/Runtime/Debug/DebugDocument.cpp",
          "lib/Runtime/Debug/DebugManager.cpp",
          "lib/Runtime/Debug/DebuggingFlags.cpp",
          "lib/Runtime/Debug/DiagHelperMethodWrapper.cpp",
          "lib/Runtime/Debug/DiagObjectModel.cpp",
          "lib/Runtime/Debug/DiagStackFrame.cpp",
          "lib/Runtime/Debug/MutationBreakpoint.cpp",
          "lib/Runtime/Debug/ProbeContainer.cpp",
          "lib/Runtime/Debug/TTActionEvents.cpp",
          "lib/Runtime/Debug/TTEventLog.cpp",
          "lib/Runtime/Debug/TTEvents.cpp",
          "lib/Runtime/Debug/TTEvents.h",
          "lib/Runtime/Debug/TTRuntimeInfoTracker.cpp",
          "lib/Runtime/Debug/TTSerialize.cpp",
          "lib/Runtime/Debug/TTSnapObjects.cpp",
          "lib/Runtime/Debug/TTSnapObjects.h",
          "lib/Runtime/Debug/TTSnapValues.cpp",
          "lib/Runtime/Debug/TTSnapshot.cpp",
          "lib/Runtime/Debug/TTSnapshotExtractor.cpp",
          "lib/Runtime/Debug/TTSupport.h",
          "lib/Runtime/InternalPropertyList.h",
          "lib/Runtime/Language/Arguments.h",
          "lib/Runtime/Language/AsmJs.cpp",
          "lib/Runtime/Language/AsmJs.h",
          "lib/Runtime/Language/AsmJsArrayBufferViews.h",
          "lib/Runtime/Language/AsmJsBuiltInNames.h",
          "lib/Runtime/Language/AsmJsLink.cpp",
          "lib/Runtime/Language/AsmJsModule.cpp",
          "lib/Runtime/Language/AsmJsModule.h",
          "lib/Runtime/Language/AsmJsTypes.h",
          "lib/Runtime/Language/AsmJsUtils.cpp",
          "lib/Runtime/Language/CacheOperators.cpp",
          "lib/Runtime/Language/CacheOperators.inl",
          "lib/Runtime/Language/ConstructorCache.cpp",
          "lib/Runtime/Language/ConstructorCache.h",
          "lib/Runtime/Language/DynamicProfileInfo.cpp",
          "lib/Runtime/Language/DynamicProfileInfo.h",
          "lib/Runtime/Language/FunctionCodeGenRuntimeData.cpp",
          "lib/Runtime/Language/FunctionCodeGenRuntimeData.h",
          "lib/Runtime/Language/InlineCache.cpp",
          "lib/Runtime/Language/InlineCache.h",
          "lib/Runtime/Language/InlineCache.inl",
          "lib/Runtime/Language/InterpreterHandler.inl",
          "lib/Runtime/Language/InterpreterHandlerAsmJs.inl",
          "lib/Runtime/Language/InterpreterLoop.inl",
          "lib/Runtime/Language/InterpreterProcessOpCodeAsmJs.h",
          "lib/Runtime/Language/InterpreterStackFrame.cpp",
          "lib/Runtime/Language/InterpreterStackFrame.h",
          "lib/Runtime/Language/JavascriptConversion.cpp",
          "lib/Runtime/Language/JavascriptConversion.h",
          "lib/Runtime/Language/JavascriptConversion.inl",
          "lib/Runtime/Language/JavascriptExceptionObject.cpp",
          "lib/Runtime/Language/JavascriptExceptionObject.h",
          "lib/Runtime/Language/JavascriptExceptionOperators.cpp",
          "lib/Runtime/Language/JavascriptOperators.cpp",
          "lib/Runtime/Language/JavascriptOperators.h",
          "lib/Runtime/Language/JavascriptOperators.inl",
          "lib/Runtime/Language/JavascriptStackWalker.cpp",
          "lib/Runtime/Language/JavascriptStackWalker.h",
          "lib/Runtime/Language/ModuleNamespace.cpp",
          "lib/Runtime/Language/ModuleNamespace.h",
          "lib/Runtime/Language/ModuleNamespaceEnumerator.cpp",
          "lib/Runtime/Language/ModuleRecordBase.h",
          "lib/Runtime/Language/ProfilingHelpers.cpp",
          "lib/Runtime/Language/ProfilingHelpers.h",
          "lib/Runtime/Language/PropertyGuard.h",
          "lib/Runtime/Language/RuntimeLanguagePch.h",
          "lib/Runtime/Language/SourceTextModuleRecord.cpp",
          "lib/Runtime/Language/SourceTextModuleRecord.h",
          "lib/Runtime/Language/TaggedInt.h",
          "lib/Runtime/Language/TaggedInt.inl",
          "lib/Runtime/Language/ValueType.cpp",
          "lib/Runtime/Language/ValueType.h",
          "lib/Runtime/Language/WebAssemblySource.cpp",
          "lib/Runtime/Language/WebAssemblySource.h",
          "lib/Runtime/Language/amd64/JavascriptConversionA.asm",
          "lib/Runtime/Language/amd64/StackFrame.cpp",
          "lib/Runtime/Language/amd64/amd64_Thunks.S",
          "lib/Runtime/Language/i386/AsmJsJitTemplate.cpp",
          "lib/Runtime/Library/ArgumentsObject.cpp",
          "lib/Runtime/Library/ArgumentsObject.h",
          "lib/Runtime/Library/ArgumentsObjectEnumerator.h",
          "lib/Runtime/Library/ArrayBuffer.cpp",
          "lib/Runtime/Library/ArrayBuffer.h",
          "lib/Runtime/Library/AtomicsObject.cpp",
          "lib/Runtime/Library/BoundFunction.cpp",
          "lib/Runtime/Library/BoundFunction.h",
          "lib/Runtime/Library/CMakeLists.txt",
          "lib/Runtime/Library/Chakra.Runtime.Library.vcxproj",
          "lib/Runtime/Library/Chakra.Runtime.Library.vcxproj.filters",
          "lib/Runtime/Library/CompoundString.cpp",
          "lib/Runtime/Library/CompoundString.h",
          "lib/Runtime/Library/ConcatString.cpp",
          "lib/Runtime/Library/ConcatString.h",
          "lib/Runtime/Library/CustomExternalIterator.cpp",
          "lib/Runtime/Library/CustomExternalIterator.h",
          "lib/Runtime/Library/CustomExternalWrapperObject.cpp",
          "lib/Runtime/Library/CustomExternalWrapperObject.h",
          "lib/Runtime/Library/DataView.cpp",
          "lib/Runtime/Library/DataView.h",
          "lib/Runtime/Library/DateImplementation.cpp",
          "lib/Runtime/Library/DelayFreeArrayBufferHelper.h",
          "lib/Runtime/Library/ES5Array.cpp",
          "lib/Runtime/Library/ES5Array.h",
          "lib/Runtime/Library/ES5ArrayIndexEnumerator.h",
          "lib/Runtime/Library/EngineInterfaceObject.cpp",
          "lib/Runtime/Library/EngineInterfaceObject.h",
          "lib/Runtime/Library/EngineInterfaceObjectBuiltIns.h",
          "lib/Runtime/Library/ForInObjectEnumerator.cpp",
          "lib/Runtime/Library/GlobalObject.cpp",
          "lib/Runtime/Library/GlobalObject.h",
          "lib/Runtime/Library/InJavascript/Intl.js",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
          "lib/Runtime/Library/IntlEngineInterfaceExtensionObject.cpp",
          "lib/Runtime/Library/JSON.cpp",
          "lib/Runtime/Library/JSONParser.cpp",
          "lib/Runtime/Library/JSONScanner.h",
          "lib/Runtime/Library/JSONString.cpp",
          "lib/Runtime/Library/JSONString.h",
          "lib/Runtime/Library/JSONStringBuilder.cpp",
          "lib/Runtime/Library/JSONStringBuilder.h",
          "lib/Runtime/Library/JSONStringifier.cpp",
          "lib/Runtime/Library/JavascriptArray.cpp",
          "lib/Runtime/Library/JavascriptArray.h",
          "lib/Runtime/Library/JavascriptArray.inl",
          "lib/Runtime/Library/JavascriptArrayIterator.cpp",
          "lib/Runtime/Library/JavascriptArrayIterator.h",
          "lib/Runtime/Library/JavascriptAsyncFromSyncIterator.cpp",
          "lib/Runtime/Library/JavascriptAsyncFromSyncIterator.h",
          "lib/Runtime/Library/JavascriptBigInt.cpp",
          "lib/Runtime/Library/JavascriptBigInt.h",
          "lib/Runtime/Library/JavascriptBigIntObject.cpp",
          "lib/Runtime/Library/JavascriptBigIntObject.h",
          "lib/Runtime/Library/JavascriptBoolean.cpp",
          "lib/Runtime/Library/JavascriptBoolean.h",
          "lib/Runtime/Library/JavascriptBoolean.inl",
          "lib/Runtime/Library/JavascriptBooleanObject.cpp",
          "lib/Runtime/Library/JavascriptBooleanObject.h",
          "lib/Runtime/Library/JavascriptBuiltInFunctionList.h",
          "lib/Runtime/Library/JavascriptBuiltInFunctions.cpp",
          "lib/Runtime/Library/JavascriptDate.cpp",
          "lib/Runtime/Library/JavascriptDate.h",
          "lib/Runtime/Library/JavascriptError.cpp",
          "lib/Runtime/Library/JavascriptError.h",
          "lib/Runtime/Library/JavascriptExceptionMetadata.cpp",
          "lib/Runtime/Library/JavascriptExceptionMetadata.h",
          "lib/Runtime/Library/JavascriptExternalFunction.cpp",
          "lib/Runtime/Library/JavascriptFunction.cpp",
          "lib/Runtime/Library/JavascriptFunction.h",
          "lib/Runtime/Library/JavascriptGenerator.cpp",
          "lib/Runtime/Library/JavascriptGenerator.h",
          "lib/Runtime/Library/JavascriptGeneratorFunction.cpp",
          "lib/Runtime/Library/JavascriptGeneratorFunction.h",
          "lib/Runtime/Library/JavascriptLibrary.cpp",
          "lib/Runtime/Library/JavascriptLibrary.h",
          "lib/Runtime/Library/JavascriptLibraryBase.h",
          "lib/Runtime/Library/JavascriptListIterator.cpp",
          "lib/Runtime/Library/JavascriptListIterator.h",
          "lib/Runtime/Library/JavascriptMap.cpp",
          "lib/Runtime/Library/JavascriptMap.h",
          "lib/Runtime/Library/JavascriptMapIterator.cpp",
          "lib/Runtime/Library/JavascriptMapIterator.h",
          "lib/Runtime/Library/JavascriptNumber.cpp",
          "lib/Runtime/Library/JavascriptNumber.h",
          "lib/Runtime/Library/JavascriptNumber.inl",
          "lib/Runtime/Library/JavascriptNumberObject.cpp",
          "lib/Runtime/Library/JavascriptNumberObject.h",
          "lib/Runtime/Library/JavascriptObject.cpp",
          "lib/Runtime/Library/JavascriptObject.h",
          "lib/Runtime/Library/JavascriptPromise.cpp",
          "lib/Runtime/Library/JavascriptPromise.h",
          "lib/Runtime/Library/JavascriptProxy.cpp",
          "lib/Runtime/Library/JavascriptProxy.h",
          "lib/Runtime/Library/JavascriptReflect.cpp",
          "lib/Runtime/Library/JavascriptRegExpConstructor.cpp",
          "lib/Runtime/Library/JavascriptRegExpConstructor.h",
          "lib/Runtime/Library/JavascriptRegularExpression.cpp",
          "lib/Runtime/Library/JavascriptRegularExpression.h",
          "lib/Runtime/Library/JavascriptSet.cpp",
          "lib/Runtime/Library/JavascriptSet.h",
          "lib/Runtime/Library/JavascriptSetIterator.cpp",
          "lib/Runtime/Library/JavascriptSetIterator.h",
          "lib/Runtime/Library/JavascriptString.cpp",
          "lib/Runtime/Library/JavascriptString.h",
          "lib/Runtime/Library/JavascriptStringIterator.cpp",
          "lib/Runtime/Library/JavascriptStringIterator.h",
          "lib/Runtime/Library/JavascriptStringObject.cpp",
          "lib/Runtime/Library/JavascriptStringObject.h",
          "lib/Runtime/Library/JavascriptSymbol.cpp",
          "lib/Runtime/Library/JavascriptSymbol.h",
          "lib/Runtime/Library/JavascriptSymbolObject.cpp",
          "lib/Runtime/Library/JavascriptSymbolObject.h",
          "lib/Runtime/Library/JavascriptTypedNumber.cpp",
          "lib/Runtime/Library/JavascriptTypedNumber.h",
          "lib/Runtime/Library/JavascriptTypedObjectSlotAccessorFunction.cpp",
          "lib/Runtime/Library/JavascriptVariantDate.cpp",
          "lib/Runtime/Library/JavascriptVariantDate.h",
          "lib/Runtime/Library/JavascriptWeakMap.cpp",
          "lib/Runtime/Library/JavascriptWeakMap.h",
          "lib/Runtime/Library/JavascriptWeakSet.cpp",
          "lib/Runtime/Library/JavascriptWeakSet.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h",
          "lib/Runtime/Library/JsBuiltInEngineInterfaceExtensionObject.cpp",
          "lib/Runtime/Library/JsBuiltInEngineInterfaceExtensionObject.h",
          "lib/Runtime/Library/LazyJSONString.cpp",
          "lib/Runtime/Library/LazyJSONString.h",
          "lib/Runtime/Library/MathLibrary.cpp",
          "lib/Runtime/Library/ModuleRoot.h",
          "lib/Runtime/Library/ObjectPrototypeObject.cpp",
          "lib/Runtime/Library/PropertyString.cpp",
          "lib/Runtime/Library/PropertyString.h",
          "lib/Runtime/Library/RegexHelper.cpp",
          "lib/Runtime/Library/RegexHelper.h",
          "lib/Runtime/Library/RootObjectBase.cpp",
          "lib/Runtime/Library/RootObjectBase.h",
          "lib/Runtime/Library/RuntimeFunction.cpp",
          "lib/Runtime/Library/RuntimeFunction.h",
          "lib/Runtime/Library/RuntimeLibraryPch.h",
          "lib/Runtime/Library/SameValueComparer.h",
          "lib/Runtime/Library/ScriptFunction.cpp",
          "lib/Runtime/Library/ScriptFunction.h",
          "lib/Runtime/Library/SharedArrayBuffer.cpp",
          "lib/Runtime/Library/SharedArrayBuffer.h",
          "lib/Runtime/Library/StackScriptFunction.cpp",
          "lib/Runtime/Library/StackScriptFunction.h",
          "lib/Runtime/Library/StringCacheList.h",
          "lib/Runtime/Library/ThrowErrorObject.cpp",
          "lib/Runtime/Library/ThrowErrorObject.h",
          "lib/Runtime/Library/TypedArray.cpp",
          "lib/Runtime/Library/TypedArray.h",
          "lib/Runtime/Library/UriHelper.cpp",
          "lib/Runtime/Library/WabtInterface.cpp",
          "lib/Runtime/Library/WasmLibrary.h",
          "lib/Runtime/Library/WebAssembly.cpp",
          "lib/Runtime/Library/WebAssemblyEnvironment.cpp",
          "lib/Runtime/Library/WebAssemblyInstance.cpp",
          "lib/Runtime/Library/WebAssemblyInstance.h",
          "lib/Runtime/Library/WebAssemblyMemory.cpp",
          "lib/Runtime/Library/WebAssemblyMemory.h",
          "lib/Runtime/Library/WebAssemblyModule.cpp",
          "lib/Runtime/Library/WebAssemblyModule.h",
          "lib/Runtime/Library/WebAssemblyTable.cpp",
          "lib/Runtime/Library/WebAssemblyTable.h",
          "lib/Runtime/LibraryFunction.h",
          "lib/Runtime/Math/JavascriptMath.cpp",
          "lib/Runtime/Math/JavascriptMath.h",
          "lib/Runtime/Math/JavascriptMath.inl",
          "lib/Runtime/Math/WasmMath.inl",
          "lib/Runtime/PlatformAgnostic/Platform/Linux/PerfTrace.cpp",
          "lib/Runtime/PlatformAgnostic/Platform/Windows/HiResTimer.cpp",
          "lib/Runtime/PlatformAgnostic/Platform/Windows/PerfTrace.cpp",
          "lib/Runtime/Runtime.h",
          "lib/Runtime/SerializableFunctionFields.h",
          "lib/Runtime/Types/ActivationObject.cpp",
          "lib/Runtime/Types/ActivationObject.h",
          "lib/Runtime/Types/DeferredTypeHandler.cpp",
          "lib/Runtime/Types/DictionaryPropertyDescriptor.h",
          "lib/Runtime/Types/DictionaryTypeHandler.cpp",
          "lib/Runtime/Types/DynamicObject.cpp",
          "lib/Runtime/Types/DynamicObject.h",
          "lib/Runtime/Types/DynamicObjectPropertyEnumerator.cpp",
          "lib/Runtime/Types/DynamicObjectPropertyEnumerator.h",
          "lib/Runtime/Types/DynamicType.cpp",
          "lib/Runtime/Types/ES5ArrayTypeHandler.cpp",
          "lib/Runtime/Types/EdgeJavascriptTypeId.h",
          "lib/Runtime/Types/JavascriptEnumerator.cpp",
          "lib/Runtime/Types/JavascriptEnumerator.h",
          "lib/Runtime/Types/NullTypeHandler.cpp",
          "lib/Runtime/Types/PathTypeHandler.cpp",
          "lib/Runtime/Types/PathTypeHandler.h",
          "lib/Runtime/Types/RecyclableObject.cpp",
          "lib/Runtime/Types/RecyclableObject.h",
          "lib/Runtime/Types/RecyclableObject.inl",
          "lib/Runtime/Types/ScriptFunctionType.cpp",
          "lib/Runtime/Types/ScriptFunctionType.h",
          "lib/Runtime/Types/SimpleDictionaryPropertyDescriptor.h",
          "lib/Runtime/Types/SimpleDictionaryTypeHandler.cpp",
          "lib/Runtime/Types/SimpleDictionaryTypeHandler.h",
          "lib/Runtime/Types/SimpleTypeHandler.cpp",
          "lib/Runtime/Types/SpreadArgument.cpp",
          "lib/Runtime/Types/SpreadArgument.h",
          "lib/Runtime/Types/StaticType.cpp",
          "lib/Runtime/Types/TypeHandler.cpp",
          "lib/Runtime/Types/TypeHandler.h",
          "lib/Runtime/Types/TypePath.h",
          "lib/Runtime/Types/TypePropertyCache.cpp",
          "lib/Runtime/Types/UnscopablesWrapperObject.cpp",
          "lib/Runtime/Types/UnscopablesWrapperObject.h",
          "lib/SCACore/CMakeLists.txt",
          "lib/SCACore/Chakra.SCACore.vcxproj",
          "lib/SCACore/SCACore.cpp",
          "lib/SCACore/SCACore.h",
          "lib/SCACore/SCACorePch.cpp",
          "lib/SCACore/SCACorePch.h",
          "lib/SCACore/SCADeserialization.cpp",
          "lib/SCACore/SCADeserialization.h",
          "lib/SCACore/SCAEngine.cpp",
          "lib/SCACore/SCAEngine.h",
          "lib/SCACore/SCAPropBag.cpp",
          "lib/SCACore/SCAPropBag.h",
          "lib/SCACore/SCASerialization.cpp",
          "lib/SCACore/SCASerialization.h",
          "lib/SCACore/SCATypes.h",
          "lib/SCACore/StreamHelper.cpp",
          "lib/SCACore/StreamHelper.h",
          "lib/SCACore/StreamReader.cpp",
          "lib/SCACore/StreamReader.h",
          "lib/SCACore/StreamWriter.cpp",
          "lib/SCACore/StreamWriter.h",
          "lib/WasmReader/EmptyWasmByteCodeWriter.h",
          "lib/WasmReader/WasmBinaryOpcodesSimd.h",
          "lib/WasmReader/WasmBinaryReader.cpp",
          "lib/WasmReader/WasmBinaryReader.h",
          "lib/WasmReader/WasmByteCodeGenerator.cpp",
          "lib/WasmReader/WasmByteCodeGenerator.h",
          "lib/WasmReader/WasmCustomReader.cpp",
          "lib/WasmReader/WasmCustomReader.h",
          "lib/WasmReader/WasmParseTree.cpp",
          "lib/WasmReader/WasmParseTree.h",
          "lib/WasmReader/WasmReaderBase.h",
          "lib/WasmReader/WasmSectionLimits.h",
          "lib/WasmReader/WasmSignature.cpp",
          "lib/wabt/.gitignore",
          "lib/wabt/CMakeLists.txt",
          "lib/wabt/README.md",
          "lib/wabt/chakra/wabtapi.cc",
          "lib/wabt/chakra/wabtapi.h",
          "lib/wabt/chakra/windows/config.h",
          "lib/wabt/src/apply-names.cc",
          "lib/wabt/src/binary-reader-interp.cc",
          "lib/wabt/src/binary-reader-interp.h",
          "lib/wabt/src/binary-reader-ir.cc",
          "lib/wabt/src/binary-reader-ir.h",
          "lib/wabt/src/binary-reader-logging.cc",
          "lib/wabt/src/binary-reader-logging.h",
          "lib/wabt/src/binary-reader-nop.h",
          "lib/wabt/src/binary-reader-objdump.cc",
          "lib/wabt/src/binary-reader-opcnt.cc",
          "lib/wabt/src/binary-reader-opcnt.h",
          "lib/wabt/src/binary-reader.cc",
          "lib/wabt/src/binary-reader.h",
          "lib/wabt/src/binary-writer-spec.cc",
          "lib/wabt/src/binary-writer-spec.h",
          "lib/wabt/src/binary-writer.cc",
          "lib/wabt/src/binary-writer.h",
          "lib/wabt/src/binary.h",
          "lib/wabt/src/c-writer.cc",
          "lib/wabt/src/c-writer.h",
          "lib/wabt/src/color.cc",
          "lib/wabt/src/color.h",
          "lib/wabt/src/common.h",
          "lib/wabt/src/config.h.in",
          "lib/wabt/src/emscripten-exported.json",
          "lib/wabt/src/emscripten-helpers.cc",
          "lib/wabt/src/error-formatter.cc",
          "lib/wabt/src/error-formatter.h",
          "lib/wabt/src/error-handler.cc",
          "lib/wabt/src/error-handler.h",
          "lib/wabt/src/error.h",
          "lib/wabt/src/expr-visitor.cc",
          "lib/wabt/src/expr-visitor.h",
          "lib/wabt/src/feature.cc",
          "lib/wabt/src/feature.def",
          "lib/wabt/src/feature.h",
          "lib/wabt/src/generate-names.cc",
          "lib/wabt/src/interp.cc",
          "lib/wabt/src/interp.h",
          "lib/wabt/src/interp/binary-reader-interp.cc",
          "lib/wabt/src/interp/binary-reader-interp.h",
          "lib/wabt/src/interp/interp-disassemble.cc",
          "lib/wabt/src/interp/interp-internal.h",
          "lib/wabt/src/interp/interp-trace.cc",
          "lib/wabt/src/interp/interp.cc",
          "lib/wabt/src/interp/interp.h",
          "lib/wabt/src/ir.cc",
          "lib/wabt/src/ir.h",
          "lib/wabt/src/leb128.cc",
          "lib/wabt/src/leb128.h",
          "lib/wabt/src/lexer-source-line-finder.cc",
          "lib/wabt/src/lexer-source-line-finder.h",
          "lib/wabt/src/lexer-source.cc",
          "lib/wabt/src/lexer-source.h",
          "lib/wabt/src/opcode-code-table.c",
          "lib/wabt/src/opcode-code-table.h",
          "lib/wabt/src/opcode.cc",
          "lib/wabt/src/opcode.def",
          "lib/wabt/src/opcode.h",
          "lib/wabt/src/option-parser.cc",
          "lib/wabt/src/prebuilt/wast-lexer-gen.cc",
          "lib/wabt/src/resolve-names.cc",
          "lib/wabt/src/resolve-names.h",
          "lib/wabt/src/test-binary-reader.cc",
          "lib/wabt/src/test-interp.cc",
          "lib/wabt/src/test-wast-parser.cc",
          "lib/wabt/src/token.def",
          "lib/wabt/src/tools/spectest-interp.cc",
          "lib/wabt/src/tools/wasm-interp.cc",
          "lib/wabt/src/tools/wasm-opcodecnt.cc",
          "lib/wabt/src/tools/wasm-strip.cc",
          "lib/wabt/src/tools/wasm-validate.cc",
          "lib/wabt/src/tools/wasm2c.cc",
          "lib/wabt/src/tools/wasm2wat.cc",
          "lib/wabt/src/tools/wast2json.cc",
          "lib/wabt/src/tools/wat-desugar.cc",
          "lib/wabt/src/tools/wat2wasm.cc",
          "lib/wabt/src/type-checker.cc",
          "lib/wabt/src/type-checker.h",
          "lib/wabt/src/validator.cc",
          "lib/wabt/src/validator.h",
          "lib/wabt/src/wabt.post.js",
          "lib/wabt/src/wast-lexer.cc",
          "lib/wabt/src/wast-lexer.h",
          "lib/wabt/src/wast-parser-lexer-shared.cc",
          "lib/wabt/src/wast-parser-lexer-shared.h",
          "lib/wabt/src/wast-parser.cc",
          "lib/wabt/src/wast-parser.h",
          "lib/wabt/src/wat-writer.cc",
          "lib/wabt/src/wat-writer.h",
          "lib/wabt/ubsan.blacklist",
          "lib/wabt/wabt.vcxproj",
          "manifests/Microsoft-Scripting-Chakra-Instrumentation.man",
          "netci.groovy",
          "pal/inc/rt/unknwn.h",
          "pal/pal.vcxproj",
          "pal/pal.vcxproj.filters",
          "pal/src/cruntime/filecrt.cpp",
          "pal/src/cruntime/misc.cpp",
          "pal/src/debug/debug.cpp",
          "pal/src/file/pal_file.cpp",
          "pal/src/include/pal/semaphore.hpp",
          "pal/src/map/map.cpp",
          "pal/src/misc/dbgmsg.cpp",
          "pal/src/objmgr/shmobject.cpp",
          "pal/src/objmgr/shmobjectmanager.cpp",
          "pal/src/sync/cs.cpp",
          "pal/src/synchmgr/synchmanager.cpp",
          "pal/src/synchobj/semaphore.cpp",
          "test/Array/CopyOnAccessArray_bugs.js",
          "test/Array/FilterWithTypedArray.js",
          "test/Array/array_flat.js",
          "test/Array/array_literal.baseline",
          "test/Array/array_qsortr_random.js",
          "test/Array/array_sort.baseline",
          "test/Array/array_sort.js",
          "test/Array/array_sort2.baseline",
          "test/Array/array_sort2.js",
          "test/Array/array_sort3.baseline",
          "test/Array/array_sort3.js",
          "test/Array/array_sort_random.js",
          "test/Array/bug_gh6320.js",
          "test/Array/rlexe.xml",
          "test/Array/toLocaleString.baseline",
          "test/Array/toLocaleString.js",
          "test/AsmJs/bug16252562.baseline",
          "test/AsmJs/bug16252562.js",
          "test/AsmJs/notBinaryPropertyDefinition.baseline",
          "test/AsmJs/notBinaryPropertyDefinition.js",
          "test/AsmJs/params.js",
          "test/AsmJs/relink.js",
          "test/AsmJs/rlexe.xml",
          "test/AsmJs/useasmbug.baseline",
          "test/AsmJs/useasmbug.js",
          "test/Basics/FloatComparison.js",
          "test/Basics/IdsWithEscapes.baseline",
          "test/Basics/Labels.js",
          "test/Basics/ScriptFunctionToStrings.js",
          "test/Basics/SpecialSymbolCapture.js",
          "test/Basics/TernaryOperator.js",
          "test/Basics/VerifySkipNestedDeferred.baseline",
          "test/Basics/rlexe.xml",
          "test/Basics/scopedaccessors.baseline",
          "test/BigInt/add.js",
          "test/BigInt/assign_by_value.js",
          "test/BigInt/bitwise_not.js",
          "test/BigInt/comparison.js",
          "test/BigInt/decrement.js",
          "test/BigInt/exception.js",
          "test/BigInt/global_object.js",
          "test/BigInt/increment.js",
          "test/BigInt/mixed.js",
          "test/BigInt/multiply.js",
          "test/BigInt/rlexe.xml",
          "test/BigInt/strictly_equal.js",
          "test/BigInt/subtract.js",
          "test/Bugs/Bug19767482.js",
          "test/Bugs/Bug19948792.js",
          "test/Bugs/bug_5572_wscript_loadscript_loadmodule.js",
          "test/Bugs/bug_5883.js",
          "test/Bugs/bug_6179.js",
          "test/Bugs/bug_6239.js",
          "test/Bugs/bug_6277.js",
          "test/Bugs/bug_OS18260560.js",
          "test/Bugs/bug_OS21193960.js",
          "test/Bugs/deferredStubBugs.js",
          "test/Bugs/function_id_destructured_reparse.js",
          "test/Bugs/loopcrash.js",
          "test/Bugs/misc_bugs.js",
          "test/Bugs/randombug.baseline",
          "test/Bugs/rlexe.xml",
          "test/Bugs/skipping_nested_deferred_incorrect_function_id.js",
          "test/ConfigParsing/interspersednewline.testconfig",
          "test/ConfigParsing/interspersednewline_leadingwhitespace.testconfig",
          "test/ConfigParsing/interspersednewline_whitespace.testconfig",
          "test/ConfigParsing/leadingwhitespace.testconfig",
          "test/ConfigParsing/standard.testconfig",
          "test/Date/DateGetSet.baseline",
          "test/Date/DateGetSet.js",
          "test/Date/DateParse3.js",
          "test/Date/parseInvalidISO.baseline",
          "test/Debugger/JsDebuggerAttachDetach.js",
          "test/Debugger/JsDebuggerAttachDetach.js.baseline",
          "test/Debugger/JsDebuggerAttachDetach.js.dbg.baseline",
          "test/Debugger/JsDiagGetStackProperties.js.dbg.baseline",
          "test/Debugger/JsrtDebugUtilsAddPropertyType.js.dbg.baseline",
          "test/Debugger/MultipleContextStack.js.dbg.baseline",
          "test/Debugger/dumpFunctionProperties.js.dbg.baseline",
          "test/Debugger/rlexe.xml",
          "test/DebuggerCommon/ES6_RegExp_specialproperties_all.js.dbg.baseline",
          "test/DebuggerCommon/ES6_RegExp_specialproperties_default.js.dbg.baseline",
          "test/DebuggerCommon/ES6_RegExp_specialproperties_with_sticky.js.dbg.baseline",
          "test/DebuggerCommon/ES6_RegExp_specialproperties_with_unicode.js.dbg.baseline",
          "test/DebuggerCommon/ES6_intl_simple_attach.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_const_reassignment_globalscope.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_eval_nonstrict.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_eval_strict_fn.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_for.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_forin.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_redcl.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_shadow_eval_with.js.dbg.baseline",
          "test/DebuggerCommon/ES6_letconst_trycatch_simple_fast.js.dbg.baseline",
          "test/DebuggerCommon/ES6_proto_invalidation.js.dbg.baseline",
          "test/DebuggerCommon/ES6_proto_simple.js.dbg.baseline",
          "test/DebuggerCommon/ES6_proto_userDefinedObject.js.dbg.baseline",
          "test/DebuggerCommon/ES6_spread.js.dbg.baseline",
          "test/DebuggerCommon/IntlInit.js.dbg.baseline",
          "test/DebuggerCommon/JIT_localsAtNativeFrame1.js.dbg.baseline",
          "test/DebuggerCommon/JIT_localsAtNativeFrame2.js.dbg.baseline",
          "test/DebuggerCommon/ObjLit_step_into_out.js.dbg.baseline",
          "test/DebuggerCommon/ObjLit_step_over.js.dbg.baseline",
          "test/DebuggerCommon/TempStrExpr.js.dbg.baseline",
          "test/DebuggerCommon/argument_disp.js.dbg.baseline",
          "test/DebuggerCommon/array_prototest.js.dbg.baseline",
          "test/DebuggerCommon/async.js.dbg.baseline",
          "test/DebuggerCommon/attachWithDeferParse.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeActivationObjectCapture.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeBasicLetConstTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeForTest.bug183991.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeFunctionDeclarationGlobalTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeGlobalBlockTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeGlobalDeadZoneTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeGlobalSlotArrayTest.bug222631.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeGlobalTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeNestedFunctionTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeSlotArrayCapture.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeSlotArrayCaptureAttach.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeSlotArrayTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeTryCatchTest.js.dbg.baseline",
          "test/DebuggerCommon/blockScopeWithTest.js.dbg.baseline",
          "test/DebuggerCommon/blockscope_func_declaration_ES6.js.dbg.baseline",
          "test/DebuggerCommon/blockscope_func_expression_ES6.js.dbg.baseline",
          "test/DebuggerCommon/blockscope_func_insidescopes.js.dbg.baseline",
          "test/DebuggerCommon/breakpoints.js.dbg.baseline",
          "test/DebuggerCommon/bug_177146.js.dbg.baseline",
          "test/DebuggerCommon/bug_291582.js.dbg.baseline",
          "test/DebuggerCommon/bug_543550.js.dbg.baseline",
          "test/DebuggerCommon/bug_592506.js.dbg.baseline",
          "test/DebuggerCommon/bug_622304.js.dbg.baseline",
          "test/DebuggerCommon/bug_os_2946365.js.dbg.baseline",
          "test/DebuggerCommon/catchInspection.js",
          "test/DebuggerCommon/catchInspection.js.dbg.baseline",
          "test/DebuggerCommon/default.js.dbg.baseline",
          "test/DebuggerCommon/detachBasicTest.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl-2.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl-3.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl-4.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl-5.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl-6.js.dbg.baseline",
          "test/DebuggerCommon/es6_forof_decl.js.dbg.baseline",
          "test/DebuggerCommon/evaluate.js.dbg.baseline",
          "test/DebuggerCommon/failedasm.js",
          "test/DebuggerCommon/funcExprCrash_150491.js.dbg.baseline",
          "test/DebuggerCommon/funcExprName.js.dbg.baseline",
          "test/DebuggerCommon/funcSource.js.dbg.baseline",
          "test/DebuggerCommon/getterInspection.js.dbg.baseline",
          "test/DebuggerCommon/globalFuncVars.js.dbg.baseline",
          "test/DebuggerCommon/indexprop.js.dbg.baseline",
          "test/DebuggerCommon/jit_exprEval1.js.dbg.baseline",
          "test/DebuggerCommon/multiple_argumentsdisp_safeguard.js.dbg.baseline",
          "test/DebuggerCommon/negzerotest.js.dbg.baseline",
          "test/DebuggerCommon/protoTest2.js.dbg.baseline",
          "test/DebuggerCommon/returnedvaluetests1.js",
          "test/DebuggerCommon/returnedvaluetests1.js.dbg.baseline",
          "test/DebuggerCommon/returnedvaluetests2.js.dbg.baseline",
          "test/DebuggerCommon/rlexe.xml",
          "test/DebuggerCommon/setframe.js.dbg.baseline",
          "test/DebuggerCommon/shadow_with.js.dbg.baseline",
          "test/DebuggerCommon/step_in_ES6_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_in_from_interpreted_function_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_out_ES6.js.dbg.baseline",
          "test/DebuggerCommon/step_out_direct_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_out_from_JITted_function_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_out_from_catch_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_out_from_interpreted_function_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_over_ES6_attach.js.dbg.baseline",
          "test/DebuggerCommon/step_over_JITd_fn_from_Intrprt_fn_attach.js.dbg.baseline",
          "test/DebuggerCommon/stringkeyedtypehandler.js.dbg.baseline",
          "test/DebuggerCommon/symbols.js.dbg.baseline",
          "test/DebuggerCommon/targeted.js.dbg.baseline",
          "test/DebuggerCommon/with_shadow.js.dbg.baseline",
          "test/EH/hasBailedOutBug3.js",
          "test/EH/hasBailedOutBug4.js",
          "test/EH/optional-catch-binding.js",
          "test/EH/regionBugSpecHoisting.js",
          "test/EH/rlexe.xml",
          "test/EH/try6.baseline",
          "test/Error/variousErrors3.baseline",
          "test/FixedFields/NonFixedFieldHoist.baseline",
          "test/FixedFields/NonFixedFieldHoist.js",
          "test/FixedFields/rlexe.xml",
          "test/FlowGraph/byteCodeUpwardExposedUsed.js",
          "test/FlowGraph/rlexe.xml",
          "test/Function/LabelFuncAsWithStmt.baseline",
          "test/Function/LabelFuncAsWithStmt.js",
          "test/Function/apply3.baseline",
          "test/Function/callsideeffects_3.baseline",
          "test/Function/deleteProperty.js",
          "test/Function/funcAndboundFuncLength.js",
          "test/Function/rlexe.xml",
          "test/Function/stackArgsLenConstOpt.baseline",
          "test/Function/stackArgsLenConstOpt.js",
          "test/Function/stackArgsWithInlineeBailOut.js",
          "test/Function/stackargs.baseline",
          "test/Function/toString.baseline",
          "test/Function/toStringAll.baseline",
          "test/Function/toStringAll.js",
          "test/GlobalFunctions/CanDeclareGlobalFunction.js",
          "test/GlobalFunctions/CanDeclareGlobalFunctionNonEval.baseline",
          "test/GlobalFunctions/CanDeclareGlobalFunctionNonEval.js",
          "test/GlobalFunctions/rlexe.xml",
          "test/InlineCaches/MissingProtoInval.js",
          "test/InlineCaches/rlexe.xml",
          "test/Intl/Collator.js",
          "test/Intl/GetCanonicalLocales.js",
          "test/Intl/IntlIdentities.js",
          "test/Intl/IntlReturnedValueTests.js.dbg.baseline",
          "test/Intl/NumberFormat.js",
          "test/Intl/SupportedLocalesOf.js",
          "test/Intl/common.js",
          "test/JSON/arguments.js",
          "test/JSON/cacheassert.js",
          "test/JSON/jsonerrorbuffer.js",
          "test/JSON/rlexe.xml",
          "test/JsBuiltIns/common-functionality.js",
          "test/JsBuiltIns/rlexe.xml",
          "test/LetConst/delete.js",
          "test/LetConst/seal.js",
          "test/LetConst/seal1.js",
          "test/LetConst/seal2.js",
          "test/Lib/error.baseline",
          "test/Lib/getclass1.baseline",
          "test/Lib/proxyenum.baseline",
          "test/Lib/proxyenum.js",
          "test/Lib/rlexe.xml",
          "test/Miscellaneous/KeepContextInSuper.js",
          "test/Miscellaneous/MayHaveSideEffectOnNodeSO.js",
          "test/Miscellaneous/rlexe.xml",
          "test/Number/NegativeNaN.baseline",
          "test/Number/NegativeNaN.js",
          "test/Number/NumericSeparator.js",
          "test/Number/rlexe.xml",
          "test/Object/ObjectRest_JIT.js",
          "test/Object/ObjectRest_Simple.js",
          "test/Object/ObjectSpread_JIT.js",
          "test/Object/ObjectSpread_Limits.js",
          "test/Object/ObjectSpread_Simple.js",
          "test/Object/assign.baseline",
          "test/Object/bigconstructorbug.js",
          "test/Object/fromEntries.js",
          "test/Object/propertyDescriptorNonObject.js",
          "test/Object/rlexe.xml",
          "test/Object/toStringWithGlobalObject.baseline",
          "test/Object/toStringWithGlobalObject.js",
          "test/Optimizer/PrePassEntanglement.js",
          "test/Optimizer/UnreachableCode.baseline",
          "test/Optimizer/argrestoreintry.js",
          "test/Optimizer/aux_slot_type_transition.js",
          "test/Optimizer/aux_slot_type_transition_2.js",
          "test/Optimizer/bugconstfoldobject.baseline",
          "test/Optimizer/bugconstfoldobject.js",
          "test/Optimizer/bugconstfoldundefined.baseline",
          "test/Optimizer/bugconstfoldundefined.js",
          "test/Optimizer/rlexe.xml",
          "test/Optimizer/test152.js",
          "test/Optimizer/testsimplepathbrfold.baseline",
          "test/PRE/pre1.baseline",
          "test/PRE/rlexe.xml",
          "test/Prototypes/NoPrototypeForMethod.js",
          "test/Prototypes/initProto.baseline",
          "test/Prototypes/initProto.js",
          "test/Prototypes/rlexe.xml",
          "test/RegAlloc/RegAllocBug_0.js",
          "test/RegAlloc/rlexe.xml",
          "test/Regex/BoiHardFail.baseline",
          "test/Regex/Bug1153694.baseline",
          "test/Regex/Bug1153694.js",
          "test/Regex/configurableTest.baseline",
          "test/Regex/configurableTest.js",
          "test/Regex/dotAll.js",
          "test/Regex/regex_replacefn.baseline",
          "test/Regex/regex_replacefn.js",
          "test/Regex/rlexe.xml",
          "test/Scanner/Hashbang.js",
          "test/Scanner/NumericLiteralSuffix.js",
          "test/Scanner/rlexe.xml",
          "test/StackTrace/ErrorPrototype.baseline",
          "test/Strings/constructorConcat.js",
          "test/Strings/fromCodePoint.js",
          "test/Strings/rlexe.xml",
          "test/Strings/trimStart_trimEnd.js",
          "test/TTBasic/evalRecord.baseline",
          "test/TTBasic/evalReplay.baseline",
          "test/TTBasic/scopedAccessorsRecord.baseline",
          "test/TTBasic/scopedAccessorsReplay.baseline",
          "test/WasmSpec.MultiValue/rlexe.xml",
          "test/WasmSpec/baselines/address.baseline",
          "test/WasmSpec/baselines/align.baseline",
          "test/WasmSpec/baselines/atomic_load.baseline",
          "test/WasmSpec/baselines/atomic_store.baseline",
          "test/WasmSpec/baselines/binary.baseline",
          "test/WasmSpec/baselines/block.baseline",
          "test/WasmSpec/baselines/br.baseline",
          "test/WasmSpec/baselines/br_if.baseline",
          "test/WasmSpec/baselines/br_table.baseline",
          "test/WasmSpec/baselines/break-drop.baseline",
          "test/WasmSpec/baselines/call.baseline",
          "test/WasmSpec/baselines/call_indirect.baseline",
          "test/WasmSpec/baselines/chakra/chakra_atomic_load.baseline",
          "test/WasmSpec/baselines/chakra/chakra_atomic_store.baseline",
          "test/WasmSpec/baselines/chakra_atomic_load.baseline",
          "test/WasmSpec/baselines/chakra_atomic_store.baseline",
          "test/WasmSpec/baselines/chakra_extends_i32.baseline",
          "test/WasmSpec/baselines/chakra_extends_i64.baseline",
          "test/WasmSpec/baselines/chakra_generated/chakra_extends_i32.baseline",
          "test/WasmSpec/baselines/chakra_generated/chakra_extends_i64.baseline",
          "test/WasmSpec/baselines/chakra_generated/chakra_i32.baseline",
          "test/WasmSpec/baselines/chakra_generated/chakra_i64.baseline",
          "test/WasmSpec/baselines/chakra_i32.baseline",
          "test/WasmSpec/baselines/chakra_i64.baseline",
          "test/WasmSpec/baselines/const.baseline",
          "test/WasmSpec/baselines/conversions.baseline",
          "test/WasmSpec/baselines/custom.baseline",
          "test/WasmSpec/baselines/data.baseline",
          "test/WasmSpec/baselines/elem.baseline",
          "test/WasmSpec/baselines/endianness.baseline",
          "test/WasmSpec/baselines/exports.baseline",
          "test/WasmSpec/baselines/extends_i32.baseline",
          "test/WasmSpec/baselines/extends_i64.baseline",
          "test/WasmSpec/baselines/f32.baseline",
          "test/WasmSpec/baselines/f32_bitwise.baseline",
          "test/WasmSpec/baselines/f32_cmp.baseline",
          "test/WasmSpec/baselines/f64.baseline",
          "test/WasmSpec/baselines/f64_bitwise.baseline",
          "test/WasmSpec/baselines/f64_cmp.baseline",
          "test/WasmSpec/baselines/fac.baseline",
          "test/WasmSpec/baselines/features/extends/extends_i32.baseline",
          "test/WasmSpec/baselines/features/extends/extends_i64.baseline",
          "test/WasmSpec/baselines/features/nontrapping/nontrapping_conversions.baseline",
          "test/WasmSpec/baselines/features/threads/atomic_load.baseline",
          "test/WasmSpec/baselines/features/threads/atomic_store.baseline",
          "test/WasmSpec/baselines/float_exprs.baseline",
          "test/WasmSpec/baselines/float_literals.baseline",
          "test/WasmSpec/baselines/float_memory.baseline",
          "test/WasmSpec/baselines/float_misc.baseline",
          "test/WasmSpec/baselines/forward.baseline",
          "test/WasmSpec/baselines/func.baseline",
          "test/WasmSpec/baselines/func_ptrs.baseline",
          "test/WasmSpec/baselines/get_local.baseline",
          "test/WasmSpec/baselines/globals.baseline",
          "test/WasmSpec/baselines/i32.baseline",
          "test/WasmSpec/baselines/i64.baseline",
          "test/WasmSpec/baselines/if.baseline",
          "test/WasmSpec/baselines/imports.baseline",
          "test/WasmSpec/baselines/inline-module.baseline",
          "test/WasmSpec/baselines/int_exprs.baseline",
          "test/WasmSpec/baselines/int_literals.baseline",
          "test/WasmSpec/baselines/jsapi.baseline",
          "test/WasmSpec/baselines/labels.baseline",
          "test/WasmSpec/baselines/left-to-right.baseline",
          "test/WasmSpec/baselines/linking.baseline",
          "test/WasmSpec/baselines/loop.baseline",
          "test/WasmSpec/baselines/memory.baseline",
          "test/WasmSpec/baselines/memory_redundancy.baseline",
          "test/WasmSpec/baselines/memory_trap.baseline",
          "test/WasmSpec/baselines/nontrapping_conversions.baseline",
          "test/WasmSpec/baselines/nop.baseline",
          "test/WasmSpec/baselines/resizing.baseline",
          "test/WasmSpec/baselines/return.baseline",
          "test/WasmSpec/baselines/select.baseline",
          "test/WasmSpec/baselines/set_local.baseline",
          "test/WasmSpec/baselines/skip-stack-guard-page.baseline",
          "test/WasmSpec/baselines/stack.baseline",
          "test/WasmSpec/baselines/start.baseline",
          "test/WasmSpec/baselines/store_retval.baseline",
          "test/WasmSpec/baselines/switch.baseline",
          "test/WasmSpec/baselines/tee_local.baseline",
          "test/WasmSpec/baselines/testsuite/core/address.baseline",
          "test/WasmSpec/baselines/testsuite/core/align.baseline",
          "test/WasmSpec/baselines/testsuite/core/binary.baseline",
          "test/WasmSpec/baselines/testsuite/core/block.baseline",
          "test/WasmSpec/baselines/testsuite/core/br.baseline",
          "test/WasmSpec/baselines/testsuite/core/br_if.baseline",
          "test/WasmSpec/baselines/testsuite/core/br_table.baseline",
          "test/WasmSpec/baselines/testsuite/core/break-drop.baseline",
          "test/WasmSpec/baselines/testsuite/core/call.baseline",
          "test/WasmSpec/baselines/testsuite/core/call_indirect.baseline",
          "test/WasmSpec/baselines/testsuite/core/const.baseline",
          "test/WasmSpec/baselines/testsuite/core/conversions.baseline",
          "test/WasmSpec/baselines/testsuite/core/custom.baseline",
          "test/WasmSpec/baselines/testsuite/core/data.baseline",
          "test/WasmSpec/baselines/testsuite/core/elem.baseline",
          "test/WasmSpec/baselines/testsuite/core/endianness.baseline",
          "test/WasmSpec/baselines/testsuite/core/exports.baseline",
          "test/WasmSpec/baselines/testsuite/core/f32.baseline",
          "test/WasmSpec/baselines/testsuite/core/f32_bitwise.baseline",
          "test/WasmSpec/baselines/testsuite/core/f32_cmp.baseline",
          "test/WasmSpec/baselines/testsuite/core/f64.baseline",
          "test/WasmSpec/baselines/testsuite/core/f64_bitwise.baseline",
          "test/WasmSpec/baselines/testsuite/core/f64_cmp.baseline",
          "test/WasmSpec/baselines/testsuite/core/fac.baseline",
          "test/WasmSpec/baselines/testsuite/core/float_exprs.baseline",
          "test/WasmSpec/baselines/testsuite/core/float_literals.baseline",
          "test/WasmSpec/baselines/testsuite/core/float_memory.baseline",
          "test/WasmSpec/baselines/testsuite/core/float_misc.baseline",
          "test/WasmSpec/baselines/testsuite/core/forward.baseline",
          "test/WasmSpec/baselines/testsuite/core/func.baseline",
          "test/WasmSpec/baselines/testsuite/core/func_ptrs.baseline",
          "test/WasmSpec/baselines/testsuite/core/get_local.baseline",
          "test/WasmSpec/baselines/testsuite/core/globals.baseline",
          "test/WasmSpec/baselines/testsuite/core/i32.baseline",
          "test/WasmSpec/baselines/testsuite/core/i64.baseline",
          "test/WasmSpec/baselines/testsuite/core/if.baseline",
          "test/WasmSpec/baselines/testsuite/core/imports.baseline",
          "test/WasmSpec/baselines/testsuite/core/inline-module.baseline",
          "test/WasmSpec/baselines/testsuite/core/int_exprs.baseline",
          "test/WasmSpec/baselines/testsuite/core/int_literals.baseline",
          "test/WasmSpec/baselines/testsuite/core/labels.baseline",
          "test/WasmSpec/baselines/testsuite/core/left-to-right.baseline",
          "test/WasmSpec/baselines/testsuite/core/linking.baseline",
          "test/WasmSpec/baselines/testsuite/core/load.baseline",
          "test/WasmSpec/baselines/testsuite/core/loop.baseline",
          "test/WasmSpec/baselines/testsuite/core/memory.baseline",
          "test/WasmSpec/baselines/testsuite/core/memory_grow.baseline",
          "test/WasmSpec/baselines/testsuite/core/memory_redundancy.baseline",
          "test/WasmSpec/baselines/testsuite/core/memory_trap.baseline",
          "test/WasmSpec/baselines/testsuite/core/nop.baseline",
          "test/WasmSpec/baselines/testsuite/core/return.baseline",
          "test/WasmSpec/baselines/testsuite/core/select.baseline",
          "test/WasmSpec/baselines/testsuite/core/set_local.baseline",
          "test/WasmSpec/baselines/testsuite/core/skip-stack-guard-page.baseline",
          "test/WasmSpec/baselines/testsuite/core/stack.baseline",
          "test/WasmSpec/baselines/testsuite/core/start.baseline",
          "test/WasmSpec/baselines/testsuite/core/store.baseline",
          "test/WasmSpec/baselines/testsuite/core/switch.baseline",
          "test/WasmSpec/baselines/testsuite/core/tee_local.baseline",
          "test/WasmSpec/baselines/testsuite/core/token.baseline",
          "test/WasmSpec/baselines/testsuite/core/traps.baseline",
          "test/WasmSpec/baselines/testsuite/core/type.baseline",
          "test/WasmSpec/baselines/testsuite/core/typecheck.baseline",
          "test/WasmSpec/baselines/testsuite/core/unreachable.baseline",
          "test/WasmSpec/baselines/testsuite/core/unreached-invalid.baseline",
          "test/WasmSpec/baselines/testsuite/core/unwind.baseline",
          "test/WasmSpec/baselines/testsuite/core/utf8-custom-section-id.baseline",
          "test/WasmSpec/baselines/testsuite/core/utf8-import-field.baseline",
          "test/WasmSpec/baselines/testsuite/core/utf8-import-module.baseline",
          "test/WasmSpec/baselines/testsuite/core/utf8-invalid-encoding.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/constructor/compile.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/constructor/instantiate-bad-imports.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/constructor/instantiate.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/constructor/validate.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/global/constructor.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/global/toString.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/global/value-get-set.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/global/valueOf.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/instance/constructor-bad-imports.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/instance/constructor.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/instance/exports.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/instance/toString.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/interface.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/memory/buffer.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/memory/constructor.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/memory/grow.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/memory/toString.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/module/constructor.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/module/customSections.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/module/exports.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/module/imports.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/module/toString.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/table/constructor.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/table/get-set.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/table/grow.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/table/length.any.baseline",
          "test/WasmSpec/baselines/testsuite/js-api/table/toString.any.baseline",
          "test/WasmSpec/baselines/token.baseline",
          "test/WasmSpec/baselines/traps.baseline",
          "test/WasmSpec/baselines/type.baseline",
          "test/WasmSpec/baselines/typecheck.baseline",
          "test/WasmSpec/baselines/unreachable.baseline",
          "test/WasmSpec/baselines/unreached-invalid.baseline",
          "test/WasmSpec/baselines/unwind.baseline",
          "test/WasmSpec/baselines/utf8-custom-section-id.baseline",
          "test/WasmSpec/baselines/utf8-import-field.baseline",
          "test/WasmSpec/baselines/utf8-import-module.baseline",
          "test/WasmSpec/baselines/utf8-invalid-encoding.baseline",
          "test/WasmSpec/convert-test-suite/config.json",
          "test/WasmSpec/convert-test-suite/config.json5",
          "test/WasmSpec/convert-test-suite/index.js",
          "test/WasmSpec/convert-test-suite/package-lock.json",
          "test/WasmSpec/convert-test-suite/package.json",
          "test/WasmSpec/jsapi.js",
          "test/WasmSpec/rlexe.xml",
          "test/WasmSpec/testsuite.rev",
          "test/WasmSpec/testsuite/README.md",
          "test/WasmSpec/testsuite/Todo.md",
          "test/WasmSpec/testsuite/build.py",
          "test/WasmSpec/testsuite/core/.gitignore",
          "test/WasmSpec/testsuite/core/address.wast",
          "test/WasmSpec/testsuite/core/align.wast",
          "test/WasmSpec/testsuite/core/binary.wast",
          "test/WasmSpec/testsuite/core/block.wast",
          "test/WasmSpec/testsuite/core/br.wast",
          "test/WasmSpec/testsuite/core/br_if.wast",
          "test/WasmSpec/testsuite/core/br_table.wast",
          "test/WasmSpec/testsuite/core/call.wast",
          "test/WasmSpec/testsuite/core/call_indirect.wast",
          "test/WasmSpec/testsuite/core/float_exprs.wast",
          "test/WasmSpec/testsuite/core/float_literals.wast",
          "test/WasmSpec/testsuite/core/float_misc.wast",
          "test/WasmSpec/testsuite/core/get_local.wast",
          "test/WasmSpec/testsuite/core/globals.wast",
          "test/WasmSpec/testsuite/core/if.wast",
          "test/WasmSpec/testsuite/core/labels.wast",
          "test/WasmSpec/testsuite/core/load.wast",
          "test/WasmSpec/testsuite/core/loop.wast",
          "test/WasmSpec/testsuite/core/memory.wast",
          "test/WasmSpec/testsuite/core/memory_grow.wast",
          "test/WasmSpec/testsuite/core/names.wast",
          "test/WasmSpec/testsuite/core/nop.wast",
          "test/WasmSpec/testsuite/core/resizing.wast",
          "test/WasmSpec/testsuite/core/return.wast",
          "test/WasmSpec/testsuite/core/select.wast",
          "test/WasmSpec/testsuite/core/set_local.wast",
          "test/WasmSpec/testsuite/core/store.wast",
          "test/WasmSpec/testsuite/core/store_retval.wast",
          "test/WasmSpec/testsuite/core/tee_local.wast",
          "test/WasmSpec/testsuite/core/unreachable.wast",
          "test/WasmSpec/testsuite/core/unwind.wast",
          "test/WasmSpec/testsuite/harness/async_index.js",
          "test/WasmSpec/testsuite/harness/sync_index.js",
          "test/WasmSpec/testsuite/harness/testharness.css",
          "test/WasmSpec/testsuite/harness/testharness.js",
          "test/WasmSpec/testsuite/harness/testharnessreport.js",
          "test/WasmSpec/testsuite/harness/wasm-constants.js",
          "test/WasmSpec/testsuite/harness/wasm-module-builder.js",
          "test/WasmSpec/testsuite/harness/wast.js",
          "test/WasmSpec/testsuite/html/indexeddb.js",
          "test/WasmSpec/testsuite/js-api/LICENSE.md",
          "test/WasmSpec/testsuite/js-api/README.md",
          "test/WasmSpec/testsuite/js-api/assertions.js",
          "test/WasmSpec/testsuite/js-api/bad-imports.js",
          "test/WasmSpec/testsuite/js-api/constructor/compile.any.js",
          "test/WasmSpec/testsuite/js-api/constructor/instantiate-bad-imports.any.js",
          "test/WasmSpec/testsuite/js-api/constructor/instantiate.any.js",
          "test/WasmSpec/testsuite/js-api/constructor/validate.any.js",
          "test/WasmSpec/testsuite/js-api/global/constructor.any.js",
          "test/WasmSpec/testsuite/js-api/global/toString.any.js",
          "test/WasmSpec/testsuite/js-api/global/value-get-set.any.js",
          "test/WasmSpec/testsuite/js-api/global/valueOf.any.js",
          "test/WasmSpec/testsuite/js-api/instance/constructor-bad-imports.any.js",
          "test/WasmSpec/testsuite/js-api/instance/constructor.any.js",
          "test/WasmSpec/testsuite/js-api/instance/exports.any.js",
          "test/WasmSpec/testsuite/js-api/instance/toString.any.js",
          "test/WasmSpec/testsuite/js-api/instanceTestFactory.js",
          "test/WasmSpec/testsuite/js-api/interface.any.js",
          "test/WasmSpec/testsuite/js-api/jsapi.js",
          "test/WasmSpec/testsuite/js-api/limits.js",
          "test/WasmSpec/testsuite/js-api/memory/buffer.any.js",
          "test/WasmSpec/testsuite/js-api/memory/constructor.any.js",
          "test/WasmSpec/testsuite/js-api/memory/grow.any.js",
          "test/WasmSpec/testsuite/js-api/memory/toString.any.js",
          "test/WasmSpec/testsuite/js-api/module/constructor.any.js",
          "test/WasmSpec/testsuite/js-api/module/customSections.any.js",
          "test/WasmSpec/testsuite/js-api/module/exports.any.js",
          "test/WasmSpec/testsuite/js-api/module/imports.any.js",
          "test/WasmSpec/testsuite/js-api/module/toString.any.js",
          "test/WasmSpec/testsuite/js-api/table/assertions.js",
          "test/WasmSpec/testsuite/js-api/table/constructor.any.js",
          "test/WasmSpec/testsuite/js-api/table/get-set.any.js",
          "test/WasmSpec/testsuite/js-api/table/grow.any.js",
          "test/WasmSpec/testsuite/js-api/table/length.any.js",
          "test/WasmSpec/testsuite/js-api/table/toString.any.js",
          "test/WasmSpec/testsuite/js-api/wasm-constants.js",
          "test/WasmSpec/testsuite/js-api/wasm-module-builder.js",
          "test/WasmSpec/updateTests.cmd",
          "test/es5/Lex_u3.baseline",
          "test/es5/Lex_u3.js",
          "test/es5/ObjLitGetSet.baseline",
          "test/es5/SemicolonAfterBlockEs5.baseline",
          "test/es5/defineIndexProperty.js",
          "test/es5/freeze.baseline",
          "test/es5/freeze.js",
          "test/es5/hasItem.jshost.baseline",
          "test/es5/objlitgetset3.js",
          "test/es5/rlexe.xml",
          "test/es5/seal.baseline",
          "test/es5/seal.js",
          "test/es5/setget.js",
          "test/es6/ES6ArrayAPI.js",
          "test/es6/ES6Function_bugs.js",
          "test/es6/ES6NewTarget.js",
          "test/es6/ES6Promise.js",
          "test/es6/ES6PromiseAsync.baseline",
          "test/es6/ES6PromiseAsync.js",
          "test/es6/ES6StringTemplate.js",
          "test/es6/ES6Super.js",
          "test/es6/ES6TypedArrayExtensions.js",
          "test/es6/HTMLComments.js",
          "test/es6/OS_917200.js",
          "test/es6/ProxyInProxy.baseline",
          "test/es6/ProxyInProxy.js",
          "test/es6/bug_19225364.baseline",
          "test/es6/bug_19225364.js",
          "test/es6/bug_issue_5994.baseline",
          "test/es6/bug_issue_5994.js",
          "test/es6/classes.js",
          "test/es6/classes_bugfixes.js",
          "test/es6/computedPropertyToString.js",
          "test/es6/default.js",
          "test/es6/destructuring_bugs.js",
          "test/es6/destructuring_obj.js",
          "test/es6/es6toLength.js",
          "test/es6/generator-jit-bugs.js",
          "test/es6/generators-syntax.js",
          "test/es6/lambda1.js",
          "test/es6/letconst_global.baseline",
          "test/es6/proxybugs.js",
          "test/es6/proxyconstruction.js",
          "test/es6/proxyenumremoval.js",
          "test/es6/regex-symbols.js",
          "test/es6/regexflags-disabled-features.js",
          "test/es6/regexflags.js",
          "test/es6/rest.js",
          "test/es6/rlexe.xml",
          "test/es6/set_functionality.js",
          "test/es6/super_bugs.js",
          "test/es6/toPrimitive.js",
          "test/es6/toStringTag.js",
          "test/es6/trailingcomma.js",
          "test/es6/weakmap_functionality.js",
          "test/es6module/ImportMeta.js",
          "test/es6module/bug_issue_3257.js",
          "test/es6module/bug_issue_3257/mod/mod0.js",
          "test/es6module/bug_issue_3257/mod1.js",
          "test/es6module/bug_issue_3257/mod2/mod2.js",
          "test/es6module/bug_issue_3257/script/script0.js",
          "test/es6module/bug_issue_5777.js",
          "test/es6module/dynamic-module-functionality.js",
          "test/es6module/dynamic_import_promises_5796.js",
          "test/es6module/export_namespace_as.js",
          "test/es6module/module-bugfixes.js",
          "test/es6module/module-namespace.js",
          "test/es6module/module-syntax.js",
          "test/es6module/multiple-roots-circular.js",
          "test/es6module/otherModule.js",
          "test/es6module/rlexe.xml",
          "test/es7/async-generator-apis.js",
          "test/es7/async-generator-functionality.js",
          "test/es7/asyncawait-functionality.baseline",
          "test/es7/asyncawait-functionality.js",
          "test/es7/asyncawait-syntax.js",
          "test/es7/deferparseclass.js",
          "test/es7/for-await-of.js",
          "test/es7/globalThis.js",
          "test/es7/json_superset.js",
          "test/es7/rlexe.xml",
          "test/es7/stringpad.js",
          "test/es7/symboldescription.js",
          "test/es7/wellformedJSON.js",
          "test/fieldopts/depolymorph01.js",
          "test/fieldopts/rlexe.xml",
          "test/inlining/InlineCallInstanceFunction.baseline",
          "test/inlining/InlineCallInstanceFunction.js",
          "test/inlining/InlineCallbackCallBailout.baseline",
          "test/inlining/InlineCallbackCallBailout.js",
          "test/inlining/InlineCallbacks.baseline",
          "test/inlining/InlineCallbacks.js",
          "test/inlining/applyBailoutArgs.js",
          "test/inlining/argoptbugs.js",
          "test/inlining/bug_gh6303.js",
          "test/inlining/callTarget.js",
          "test/inlining/profilingbug.js",
          "test/inlining/rlexe.xml",
          "test/loop/MemOp.baseline",
          "test/loop/MemOp.js",
          "test/loop/bailOutOfMemOp.baseline",
          "test/loop/bailOutOfMemOp.js",
          "test/loop/loopinversion.js",
          "test/loop/rlexe.xml",
          "test/native-tests/test_native.sh",
          "test/rlexedirs.xml",
          "test/runtests.py",
          "test/strict/11.this.baseline",
          "test/strict/11.this_sm.baseline",
          "test/strict/classComputedPropertyName.js",
          "test/strict/evalThis.baseline",
          "test/strict/evalThisNested.baseline",
          "test/strict/nonSimpleParameterList.baseline",
          "test/strict/rlexe.xml",
          "test/typedarray/definitetypedarray.js",
          "test/typedarray/nan.baseline",
          "test/typedarray/nan.x64.baseline",
          "test/typedarray/reflect_defineProperty.js",
          "test/typedarray/rlexe.xml",
          "test/typedarray/samethread.baseline",
          "test/utf8/rlexe.xml",
          "test/wasm.simd/b16x8.wasm",
          "test/wasm.simd/b16x8.wast",
          "test/wasm.simd/b32x4.wasm",
          "test/wasm.simd/b32x4.wast",
          "test/wasm.simd/b8x16.wasm",
          "test/wasm.simd/b8x16.wast",
          "test/wasm.simd/binaryArithmeticTests.wasm",
          "test/wasm.simd/binaryArithmeticTests.wast",
          "test/wasm.simd/buildExtractTests.js",
          "test/wasm.simd/comp.wasm",
          "test/wasm.simd/comp.wast",
          "test/wasm.simd/const.wasm",
          "test/wasm.simd/const.wast",
          "test/wasm.simd/f32x4.wasm",
          "test/wasm.simd/f32x4.wast",
          "test/wasm.simd/i16x8_s.wasm",
          "test/wasm.simd/i16x8_s.wast",
          "test/wasm.simd/i16x8_u.wasm",
          "test/wasm.simd/i16x8_u.wast",
          "test/wasm.simd/i32x4.wasm",
          "test/wasm.simd/i32x4.wast",
          "test/wasm.simd/i8x16_s.wasm",
          "test/wasm.simd/i8x16_s.wast",
          "test/wasm.simd/i8x16_u.wasm",
          "test/wasm.simd/i8x16_u.wast",
          "test/wasm.simd/int64x2.wasm",
          "test/wasm.simd/int64x2.wast",
          "test/wasm.simd/loadTests.js",
          "test/wasm.simd/loads.wasm",
          "test/wasm.simd/loads.wast",
          "test/wasm.simd/logical.wasm",
          "test/wasm.simd/logical.wast",
          "test/wasm.simd/math.wasm",
          "test/wasm.simd/math.wast",
          "test/wasm.simd/neg.wasm",
          "test/wasm.simd/neg.wast",
          "test/wasm.simd/replace.wasm",
          "test/wasm.simd/replace.wast",
          "test/wasm.simd/rlexe.xml",
          "test/wasm.simd/splat.wasm",
          "test/wasm.simd/splat.wast",
          "test/wasm.simd/storeTests.js",
          "test/wasm.simd/stores.wasm",
          "test/wasm.simd/stores.wast",
          "test/wasm.simd/truncconv.wasm",
          "test/wasm.simd/truncconv.wast",
          "test/wasm/api.js",
          "test/wasm/badfuncformat.js",
          "test/wasm/baselines/api.baseline",
          "test/wasm/limits.js",
          "test/wasm/params.js",
          "test/wasm/rlexe.xml",
          "tools/RecyclerChecker/.gitignore",
          "tools/RecyclerChecker/RecyclerChecker.cpp",
          "tools/compile_clang.sh",
          "tools/icu/configure.py",
          "tools/run_msbuild.py",
          "tools/update_bytecode_version.ps1"
        ],
        "message": "[1.11>master] [MERGE #6387 @pleath] Remove unneeded InitConst op from byte code\n\nMerge pull request #6387 from pleath:noinitconst",
        "before_after_code_files": [
          "lib/Backend/GlobOpt.cpp||lib/Backend/GlobOpt.cpp",
          "lib/Backend/IRBuilder.cpp||lib/Backend/IRBuilder.cpp",
          "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h",
          "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp",
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
            "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
            "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h",
            "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
          ],
          "candidate": [
            "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp",
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
            "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
            "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h",
            "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/Backend/GlobOpt.cpp||lib/Backend/GlobOpt.cpp": [
          "File: lib/Backend/GlobOpt.cpp -> lib/Backend/GlobOpt.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4785:     case Js::OpCode::BytecodeArgOutCapture:",
          "4787:     case Js::OpCode::LdAsmJsFunc:",
          "4788:     case Js::OpCode::Ld_A:",
          "4789:     case Js::OpCode::Ld_I4:",
          "",
          "[Removed Lines]",
          "4786:     case Js::OpCode::InitConst:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/Backend/IRBuilder.cpp||lib/Backend/IRBuilder.cpp": [
          "File: lib/Backend/IRBuilder.cpp -> lib/Backend/IRBuilder.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1818:         this->AddInstr(instr, offset);",
          "1819:         return;",
          "1820:     }",
          "1825:     }",
          "1827:     IR::RegOpnd *   dstOpnd = this->BuildDstOpnd(R0, TyVar, false, reuseLoc);",
          "",
          "[Removed Lines]",
          "1821:     case Js::OpCode::InitConst:",
          "1823:         newOpcode = Js::OpCode::Ld_A;",
          "1824:         break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/Backend/Lower.cpp||lib/Backend/Lower.cpp": [
          "File: lib/Backend/Lower.cpp -> lib/Backend/Lower.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1782:             }",
          "1784:         case Js::OpCode::Ld_A:",
          "1786:             if (instr->IsJitProfilingInstr() && instr->AsJitProfilingInstr()->isBeginSwitch) {",
          "1787:                 LowerProfiledBeginSwitch(instr->AsJitProfilingInstr());",
          "1788:                 break;",
          "",
          "[Removed Lines]",
          "1785:         case Js::OpCode::InitConst:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
          "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const GUID byteCodeCacheReleaseFileVersion =",
          "",
          "[Removed Lines]",
          "10: { 0x5C20FA9E, 0xA347, 0x4731, { 0xA0, 0xDE, 0x14, 0x8B, 0x4F, 0xA1, 0x2B, 0x04 } };",
          "",
          "[Added Lines]",
          "10: { 0x81AEEA4B, 0xAE4E, 0x40C0, { 0x84, 0x8F, 0x6D, 0xB7, 0xC5, 0xF4, 0x9F, 0x55 } };",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp": [
          "File: lib/Runtime/ByteCode/ByteCodeEmitter.cpp -> lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4889:             this->UpdateDebuggerPropertyInitializationOffset(location, sym->GetPosition(), false);",
          "4890:         }",
          "4891:     }",
          "4901:     else",
          "4902:     {",
          "4903:         if (!isConstDecl && sym->GetDecl() && sym->GetDecl()->nop == knopConstDecl)",
          "",
          "[Removed Lines]",
          "4892:     else if (isConstDecl)",
          "4893:     {",
          "4894:         this->m_writer.Reg2(Js::OpCode::InitConst, sym->GetLocation(), rhsLocation);",
          "4896:         if (this->ShouldTrackDebuggerMetadata())",
          "4897:         {",
          "4898:             this->UpdateDebuggerPropertyInitializationOffset(sym->GetLocation(), sym->GetPosition());",
          "4899:         }",
          "4900:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4910:         {",
          "4911:             this->m_writer.Reg2(Js::OpCode::Ld_A, sym->GetLocation(), rhsLocation);",
          "4914:             {",
          "4915:                 this->UpdateDebuggerPropertyInitializationOffset(sym->GetLocation(), sym->GetPosition());",
          "4916:             }",
          "",
          "[Removed Lines]",
          "4913:             if (this->ShouldTrackDebuggerMetadata() && isLetDecl)",
          "",
          "[Added Lines]",
          "4904:             if (this->ShouldTrackDebuggerMetadata() && (isLetDecl || isConstDecl))",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/OpCodes.h||lib/Runtime/ByteCode/OpCodes.h": [
          "File: lib/Runtime/ByteCode/OpCodes.h -> lib/Runtime/ByteCode/OpCodes.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "383: MACRO_WMS_ROOT(         InitUndeclRootConstFld,     ElementRootU,   OpSideEffect)",
          "384: MACRO_EXTEND_WMS(       InitUndeclConsoleLetFld,    ElementScopedU, OpSideEffect)",
          "385: MACRO_EXTEND_WMS(       InitUndeclConsoleConstFld,  ElementScopedU, OpSideEffect)",
          "387: MACRO_WMS(              InitConstSlot,              ElementSlot,    None)",
          "",
          "[Removed Lines]",
          "386: MACRO_WMS(              InitConst,                  Reg2,           OpTempNumberTransfer|OpTempObjectTransfer|OpNonIntTransfer|OpCanCSE)    // Create and initialize 'const' as property of global object",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "627: MACRO_EXTEND_WMS(       NewInnerScFunc,     ElementSlot,    OpSideEffect)   // Create new ScriptFunction instance",
          "628: MACRO_EXTEND_WMS(       NewInnerScGenFunc,  ElementSlot,    OpSideEffect)   // Create new JavascriptGeneratorFunction instance",
          "629: MACRO_EXTEND_WMS(       NewInnerStackScFunc,ElementSlot,    OpSideEffect|OpByteCodeOnly)  // Create new ScriptFunction instance",
          "631: MACRO_EXTEND_WMS(       NewScGenFuncHomeObj,       ElementSlot,      OpSideEffect)   // Create new JavascriptGeneratorFunction instance that has home object",
          "632: MACRO_EXTEND_WMS(       NewInnerScFuncHomeObj,     ElementSlotI3,    OpSideEffect)   // Create new ScriptFunction instance that has home object",
          "633: MACRO_EXTEND_WMS(       NewInnerScGenFuncHomeObj,  ElementSlotI3,    OpSideEffect)   // Create new JavascriptGeneratorFunction instance that has home object",
          "",
          "[Removed Lines]",
          "630: MACRO_EXTEND_WMS(       NewScFuncHomeObj,   ElementSlot,    OpSideEffect)   // Create new ScriptFunction instance that has home object",
          "",
          "[Added Lines]",
          "629: MACRO_WMS(              NewScFuncHomeObj,   ElementSlot,    OpSideEffect)   // Create new ScriptFunction instance that has home object",
          "",
          "---------------"
        ],
        "lib/Runtime/Language/InterpreterHandler.inl||lib/Runtime/Language/InterpreterHandler.inl": [
          "File: lib/Runtime/Language/InterpreterHandler.inl -> lib/Runtime/Language/InterpreterHandler.inl",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:   DEF2_WMS(CMMem,                   CmSrEq_A,                   JavascriptOperators::StrictEqual)",
          "136:   DEF2_WMS(CMMem,                   CmSrNeq_A,                  JavascriptOperators::NotStrictEqual)",
          "137:   DEF2_WMS(FALLTHROUGH,             BeginSwitch,                /* Common case with Ld_A */)",
          "139:   DEF2_WMS(FALLTHROUGH,             Ld_A_ReuseLoc,              /* Common case with Ld_A */)",
          "140:   DEF2_WMS(A1toA1_ALLOW_STACK,      Ld_A,                       OP_Ld_A)",
          "141:   DEF2_WMS(INNERtoA1,               LdInnerScope,               OP_Ld_A)",
          "",
          "[Removed Lines]",
          "138:   DEF2_WMS(FALLTHROUGH,             InitConst,                  /* Common case with Ld_A */)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345: EXDEF3_WMS(CUSTOM_L_Value,          NewInnerStackScFunc,        OP_NewInnerStackScFunc, ElementSlot)",
          "346: EXDEF2_WMS(GET_ELEM_SLOT_FB,        NewInnerScFunc,             ScriptFunction::OP_NewScFunc)",
          "347: EXDEF2_WMS(GET_ELEM_SLOT_FB,        NewInnerScGenFunc,          JavascriptGeneratorFunction::OP_NewScGenFunc)",
          "349: EXDEF2_WMS(GET_SLOT_FB_HMO,         NewScGenFuncHomeObj,        JavascriptGeneratorFunction::OP_NewScGenFuncHomeObj)",
          "350: EXDEF2_WMS(GET_ELEM_SLOT_FB_HMO,    NewInnerScFuncHomeObj,      ScriptFunction::OP_NewScFuncHomeObj)",
          "351: EXDEF2_WMS(GET_ELEM_SLOT_FB_HMO,    NewInnerScGenFuncHomeObj,   JavascriptGeneratorFunction::OP_NewScGenFuncHomeObj)",
          "",
          "[Removed Lines]",
          "348: EXDEF2_WMS(GET_SLOT_FB_HMO,         NewScFuncHomeObj,           ScriptFunction::OP_NewScFuncHomeObj)",
          "",
          "[Added Lines]",
          "347:   DEF2_WMS(GET_SLOT_FB_HMO,         NewScFuncHomeObj,           ScriptFunction::OP_NewScFuncHomeObj)",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
        ]
      }
    },
    {
      "candidate_hash": "528c4bc09422aa712c8969adc64db4ad5bb4dc1b",
      "candidate_info": {
        "commit_hash": "528c4bc09422aa712c8969adc64db4ad5bb4dc1b",
        "repo": "chakra-core/ChakraCore",
        "commit_url": "https://github.com/chakra-core/ChakraCore/commit/528c4bc09422aa712c8969adc64db4ad5bb4dc1b",
        "files": [
          "Build/NuGet/.pack-version",
          "lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
        ],
        "message": "Update release/1.11 to version 1.11.3",
        "before_after_code_files": [
          "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ],
          "candidate": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h": [
          "File: lib/Common/ChakraCoreVersion.h -> lib/Common/ChakraCoreVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #define CHAKRA_CORE_MAJOR_VERSION 1",
          "19: #define CHAKRA_CORE_MINOR_VERSION 11",
          "21: #define CHAKRA_CORE_VERSION_RELEASE_QFE 0 // Redundant with PATCH_VERSION. Keep this value set to 0.",
          "",
          "[Removed Lines]",
          "20: #define CHAKRA_CORE_PATCH_VERSION 2",
          "",
          "[Added Lines]",
          "20: #define CHAKRA_CORE_PATCH_VERSION 3",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
          "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const GUID byteCodeCacheReleaseFileVersion =",
          "",
          "[Removed Lines]",
          "10: { 0x67AFB5DE, 0x5B86, 0x43E8, { 0xB3, 0xB5, 0xCF, 0xD2, 0x5F, 0xEA, 0x8F, 0xC3 } };",
          "",
          "[Added Lines]",
          "10: { 0x26894CEE, 0xB780, 0x4CD4, { 0xB7, 0x93, 0x7B, 0x09, 0x72, 0xAE, 0xED, 0xD9 } };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf4e24df02b2140ce87b1a827e1cfefb08a7e5c7",
      "candidate_info": {
        "commit_hash": "bf4e24df02b2140ce87b1a827e1cfefb08a7e5c7",
        "repo": "chakra-core/ChakraCore",
        "commit_url": "https://github.com/chakra-core/ChakraCore/commit/bf4e24df02b2140ce87b1a827e1cfefb08a7e5c7",
        "files": [
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h",
          "test/Array/array_sort.js",
          "test/Array/array_sort_random.js",
          "tools/xplatRegenByteCode.py"
        ],
        "message": "ArraySort cleanup (#6429)\n\n1. No longer create a separate comparison array when using the defaultCompare on a non-string array, this copy is slow and could use a lot of memory.\n\n2. Edit ByteCodeEmitter so that template literals don't emit unnecessary empty string concatenations.\n\n3. Use a template literal for string coercion in the default sort compare - does toString() instead of the incorrect toString(toPrimitive()) that was done before AND due to the change in (2) above is significantly more efficient.\n\n4. Some drive by cleanup.",
        "before_after_code_files": [
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
          "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h",
          "test/Array/array_sort.js||test/Array/array_sort.js",
          "test/Array/array_sort_random.js||test/Array/array_sort_random.js",
          "tools/xplatRegenByteCode.py||tools/xplatRegenByteCode.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
            "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
          ],
          "candidate": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
            "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h",
            "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
            "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
          "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const GUID byteCodeCacheReleaseFileVersion =",
          "",
          "[Removed Lines]",
          "10: { 0x2C341884, 0x72E5, 0x4799, { 0x92, 0x3C, 0xDB, 0x8E, 0xDA, 0xFE, 0xEA, 0x89 } };",
          "",
          "[Added Lines]",
          "10: { 0x51f0edaa, 0x63a2, 0x4d76, {0xbc, 0xac, 0x16, 0x0b, 0x8d, 0xd6, 0xc2, 0xad } };",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeEmitter.cpp||lib/Runtime/ByteCode/ByteCodeEmitter.cpp": [
          "File: lib/Runtime/ByteCode/ByteCodeEmitter.cpp -> lib/Runtime/ByteCode/ByteCodeEmitter.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8931:             ParseNode* stringNodeList = pnodeStrTemplate->pnodeStringLiterals;",
          "8941:             ParseNode* expressionNodeList = pnodeStrTemplate->pnodeSubstitutionExpressions;",
          "8942:             ParseNode* stringNode;",
          "",
          "[Removed Lines]",
          "8934:             Emit(stringNodeList->AsParseNodeBin()->pnode1, byteCodeGenerator, funcInfo, false);",
          "8936:             Assert(pnodeStrTemplate->location != stringNodeList->AsParseNodeBin()->pnode1->location);",
          "8938:             byteCodeGenerator->Writer()->Reg2(Js::OpCode::Ld_A, pnodeStrTemplate->location, stringNodeList->AsParseNodeBin()->pnode1->location);",
          "8939:             funcInfo->ReleaseLoc(stringNodeList->AsParseNodeBin()->pnode1);",
          "",
          "[Added Lines]",
          "8935:             ParseNode* firstString = stringNodeList->AsParseNodeBin()->pnode1;",
          "8936:             bool skippedFirst = false;",
          "8937:             if (firstString->AsParseNodeStr()->pid->Cch() == 0)",
          "8938:             {",
          "8939:                 skippedFirst = true;",
          "8940:             }",
          "8941:             else",
          "8942:             {",
          "8943:                 Emit(stringNodeList->AsParseNodeBin()->pnode1, byteCodeGenerator, funcInfo, false);",
          "8945:                 Assert(pnodeStrTemplate->location != stringNodeList->AsParseNodeBin()->pnode1->location);",
          "8947:                 byteCodeGenerator->Writer()->Reg2(Js::OpCode::Ld_A, pnodeStrTemplate->location, stringNodeList->AsParseNodeBin()->pnode1->location);",
          "8948:                 funcInfo->ReleaseLoc(stringNodeList->AsParseNodeBin()->pnode1);",
          "8949:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8969:                 Emit(expressionNode, byteCodeGenerator, funcInfo, false);",
          "8975:                 funcInfo->ReleaseLoc(expressionNode);",
          "",
          "[Removed Lines]",
          "8971:                 Js::RegSlot toStringLocation = funcInfo->AcquireTmpRegister();",
          "8972:                 byteCodeGenerator->Writer()->Reg2(Js::OpCode::Conv_Str, toStringLocation, expressionNode->location);",
          "8973:                 byteCodeGenerator->Writer()->Reg3(Js::OpCode::Add_A, pnodeStrTemplate->location, pnodeStrTemplate->location, toStringLocation);",
          "8974:                 funcInfo->ReleaseTmpRegister(toStringLocation);",
          "",
          "[Added Lines]",
          "8983:                 if (skippedFirst == true)",
          "8984:                 {",
          "8985:                     byteCodeGenerator->Writer()->Reg2(Js::OpCode::Conv_Str, pnodeStrTemplate->location, expressionNode->location);",
          "8986:                     skippedFirst = false;",
          "8987:                 }",
          "8988:                 else",
          "8989:                 {",
          "8990:                     Js::RegSlot toStringLocation = funcInfo->AcquireTmpRegister();",
          "8991:                     byteCodeGenerator->Writer()->Reg2(Js::OpCode::Conv_Str, toStringLocation, expressionNode->location);",
          "8992:                     byteCodeGenerator->Writer()->Reg3(Js::OpCode::Add_A, pnodeStrTemplate->location, pnodeStrTemplate->location, toStringLocation);",
          "8993:                     funcInfo->ReleaseTmpRegister(toStringLocation);",
          "8994:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8996:             }",
          "8997:         }",
          "8998:     }",
          "",
          "[Removed Lines]",
          "8993:                 Emit(stringNode, byteCodeGenerator, funcInfo, false);",
          "8994:                 byteCodeGenerator->Writer()->Reg3(Js::OpCode::Add_A, pnodeStrTemplate->location, pnodeStrTemplate->location, stringNode->location);",
          "8995:                 funcInfo->ReleaseLoc(stringNode);",
          "",
          "[Added Lines]",
          "9014:                 if (stringNode->AsParseNodeStr()->pid->Cch() != 0)",
          "9015:                 {",
          "9016:                     Emit(stringNode, byteCodeGenerator, funcInfo, false);",
          "9017:                     byteCodeGenerator->Writer()->Reg3(Js::OpCode::Add_A, pnodeStrTemplate->location, pnodeStrTemplate->location, stringNode->location);",
          "9018:                     funcInfo->ReleaseLoc(stringNode);",
          "9019:                 }",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.32b.h"
        ],
        "lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h||lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h": [
          "File: lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h -> lib/Runtime/Library/InJavascript/Intl.js.nojit.bc.64b.h"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     var Symbol = platform.Symbol;",
          "14:     var CreateObject = platform.builtInJavascriptObjectEntryCreate;",
          "24:     platform.registerChakraLibraryFunction(\"ArrayIterator\", function (arrayObj, iterationKind) {",
          "25:         __chakraLibrary.InitInternalProperties(this, 4, \"__$arrayObj$__\", \"__$nextIndex$__\", \"__$kind$__\", \"__$internalDone$__\");",
          "26:         this.__$arrayObj$__ = arrayObj;",
          "",
          "[Removed Lines]",
          "16:     let FunctionsEnum = {",
          "17:         ArrayValues: setPrototype({ className: \"Array\", methodName: \"values\", argumentsCount: 0, forceInline: true /*optional*/, alias: \"Symbol.iterator\" }, null),",
          "18:         ArrayKeys: setPrototype({ className: \"Array\", methodName: \"keys\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "19:         ArrayEntries: setPrototype({ className: \"Array\", methodName: \"entries\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "20:         ArrayIndexOf: setPrototype({ className: \"Array\", methodName: \"indexOf\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "21:         ArrayFilter: setPrototype({ className: \"Array\", methodName: \"filter\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "22:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "238:         }",
          "239:     });",
          "251:     platform.registerChakraLibraryFunction(\"DefaultSortCompare\", function(left, right) {",
          "285:     });",
          "287:     platform.registerChakraLibraryFunction(\"FillArrayHoles\", function(array, length, offset) {",
          "",
          "[Removed Lines]",
          "241:     platform.registerChakraLibraryFunction(\"DefaultStringSortCompare\", function(left, right) {",
          "245:         if (left < right) {",
          "246:             return -1;",
          "247:         }",
          "248:         return 0;",
          "249:     });",
          "254:         if (left.string < right.string) {",
          "255:             return -1;",
          "256:         }",
          "257:         return 0;",
          "258:     });",
          "260:     platform.registerChakraLibraryFunction(\"CreateCompareArray\", function(array, length) {",
          "261:         let useCompareArray = false;",
          "262:         let i = 0;",
          "263:         while (i < length) {",
          "264:             if (typeof array[i++] !== \"string\") {",
          "265:                 useCompareArray = true;",
          "266:                 break;",
          "267:             }",
          "268:         }",
          "270:         if (useCompareArray === true) {",
          "271:             const compArray = [];",
          "272:             compArray.__proto__ = null;",
          "273:             i = 0;",
          "274:             let value;",
          "275:             while (i < length) {",
          "276:                 value = array[i];",
          "277:                 compArray[i++] = {",
          "278:                     value : value,",
          "279:                     string : \"\" + value",
          "280:                 };",
          "281:             }",
          "282:             return compArray;",
          "283:         }",
          "284:         return array;",
          "",
          "[Added Lines]",
          "235:         return `${left}` < `${right}` ? -1 : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "311:     platform.registerFunction(platform.FunctionKind.Array_sort, function (compareFn) {",
          "315:         }",
          "317:         const {o, len} = __chakraLibrary.CheckArrayAndGetLen(this, \"Array.prototype.sort\");",
          "",
          "[Removed Lines]",
          "313:         if (compareFn !== undefined && typeof compareFn !== \"function\") {",
          "314:             __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "",
          "[Added Lines]",
          "264:         if (compareFn !== undefined) {",
          "265:             if (typeof compareFn !== \"function\") {",
          "266:                 __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "267:             }",
          "268:         } else {",
          "269:             compareFn = __chakraLibrary.DefaultSortCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "331:             o[i] = o[i++];",
          "332:         }",
          "345:         if (length < 2048) {",
          "346:             let sortedCount = 1, lowerBound = 0, insertPoint = 0, upperBound = 0;",
          "347:             while (sortedCount < length) {",
          "349:                 upperBound = sortedCount;",
          "350:                 insertPoint = sortedCount - 1; // this lets us check for already ordered first",
          "351:                 lowerBound = 0;",
          "352:                 for (;;) {",
          "354:                         upperBound = insertPoint;",
          "355:                     } else {",
          "356:                         lowerBound = insertPoint + 1;",
          "",
          "[Removed Lines]",
          "334:         let compArray = o;",
          "335:         if (compareFn === undefined && length > 1) {",
          "336:             compArray = __chakraLibrary.CreateCompareArray(o, length);",
          "337:             if (compArray === o) {",
          "338:                 compareFn = __chakraLibrary.DefaultStringSortCompare;",
          "339:             } else {",
          "340:                 compareFn = __chakraLibrary.DefaultSortCompare;",
          "341:             }",
          "342:         }",
          "348:                 const item = compArray[sortedCount];",
          "353:                     if (compareFn (item, compArray[insertPoint]) < 0) {",
          "",
          "[Added Lines]",
          "293:                 const item = o[sortedCount];",
          "298:                     if (compareFn (item, o[insertPoint]) < 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "362:                 }",
          "363:                 insertPoint = sortedCount;",
          "364:                 while (insertPoint > lowerBound) {",
          "366:                 }",
          "368:                 ++sortedCount;",
          "369:             }",
          "370:         } else {",
          "379:         }",
          "381:         return o;",
          "",
          "[Removed Lines]",
          "365:                     compArray[insertPoint--] = compArray[insertPoint];",
          "367:                 compArray[lowerBound] = item;",
          "371:             __chakraLibrary.MergeSort(compArray, length, compareFn);",
          "372:         }",
          "374:         if (compArray !== o) {",
          "375:             i = 0;",
          "376:             while (i < length) {",
          "377:                 o[i] = compArray[i++].value;",
          "378:             }",
          "",
          "[Added Lines]",
          "310:                     o[insertPoint--] = o[insertPoint];",
          "312:                 o[lowerBound] = item;",
          "316:             __chakraLibrary.MergeSort(o, length, compareFn);",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.32b.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     var Symbol = platform.Symbol;",
          "19:     var CreateObject = platform.builtInJavascriptObjectEntryCreate;",
          "29:     platform.registerChakraLibraryFunction(\"ArrayIterator\", function (arrayObj, iterationKind) {",
          "30:         __chakraLibrary.InitInternalProperties(this, 4, \"__$arrayObj$__\", \"__$nextIndex$__\", \"__$kind$__\", \"__$internalDone$__\");",
          "31:         this.__$arrayObj$__ = arrayObj;",
          "",
          "[Removed Lines]",
          "21:     let FunctionsEnum = {",
          "22:         ArrayValues: setPrototype({ className: \"Array\", methodName: \"values\", argumentsCount: 0, forceInline: true /*optional*/, alias: \"Symbol.iterator\" }, null),",
          "23:         ArrayKeys: setPrototype({ className: \"Array\", methodName: \"keys\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "24:         ArrayEntries: setPrototype({ className: \"Array\", methodName: \"entries\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "25:         ArrayIndexOf: setPrototype({ className: \"Array\", methodName: \"indexOf\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "26:         ArrayFilter: setPrototype({ className: \"Array\", methodName: \"filter\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "27:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:         }",
          "244:     });",
          "256:     platform.registerChakraLibraryFunction(\"DefaultSortCompare\", function(left, right) {",
          "290:     });",
          "292:     platform.registerChakraLibraryFunction(\"FillArrayHoles\", function(array, length, offset) {",
          "",
          "[Removed Lines]",
          "246:     platform.registerChakraLibraryFunction(\"DefaultStringSortCompare\", function(left, right) {",
          "250:         if (left < right) {",
          "251:             return -1;",
          "252:         }",
          "253:         return 0;",
          "254:     });",
          "259:         if (left.string < right.string) {",
          "260:             return -1;",
          "261:         }",
          "262:         return 0;",
          "263:     });",
          "265:     platform.registerChakraLibraryFunction(\"CreateCompareArray\", function(array, length) {",
          "266:         let useCompareArray = false;",
          "267:         let i = 0;",
          "268:         while (i < length) {",
          "269:             if (typeof array[i++] !== \"string\") {",
          "270:                 useCompareArray = true;",
          "271:                 break;",
          "272:             }",
          "273:         }",
          "275:         if (useCompareArray === true) {",
          "276:             const compArray = [];",
          "277:             compArray.__proto__ = null;",
          "278:             i = 0;",
          "279:             let value;",
          "280:             while (i < length) {",
          "281:                 value = array[i];",
          "282:                 compArray[i++] = {",
          "283:                     value : value,",
          "284:                     string : \"\" + value",
          "285:                 };",
          "286:             }",
          "287:             return compArray;",
          "288:         }",
          "289:         return array;",
          "",
          "[Added Lines]",
          "240:         return `${left}` < `${right}` ? -1 : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "316:     platform.registerFunction(platform.FunctionKind.Array_sort, function (compareFn) {",
          "320:         }",
          "322:         const {o, len} = __chakraLibrary.CheckArrayAndGetLen(this, \"Array.prototype.sort\");",
          "",
          "[Removed Lines]",
          "318:         if (compareFn !== undefined && typeof compareFn !== \"function\") {",
          "319:             __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "",
          "[Added Lines]",
          "269:         if (compareFn !== undefined) {",
          "270:             if (typeof compareFn !== \"function\") {",
          "271:                 __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "272:             }",
          "273:         } else {",
          "274:             compareFn = __chakraLibrary.DefaultSortCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:             o[i] = o[i++];",
          "337:         }",
          "350:         if (length < 2048) {",
          "351:             let sortedCount = 1, lowerBound = 0, insertPoint = 0, upperBound = 0;",
          "352:             while (sortedCount < length) {",
          "354:                 upperBound = sortedCount;",
          "355:                 insertPoint = sortedCount - 1; // this lets us check for already ordered first",
          "356:                 lowerBound = 0;",
          "357:                 for (;;) {",
          "359:                         upperBound = insertPoint;",
          "360:                     } else {",
          "361:                         lowerBound = insertPoint + 1;",
          "",
          "[Removed Lines]",
          "339:         let compArray = o;",
          "340:         if (compareFn === undefined && length > 1) {",
          "341:             compArray = __chakraLibrary.CreateCompareArray(o, length);",
          "342:             if (compArray === o) {",
          "343:                 compareFn = __chakraLibrary.DefaultStringSortCompare;",
          "344:             } else {",
          "345:                 compareFn = __chakraLibrary.DefaultSortCompare;",
          "346:             }",
          "347:         }",
          "353:                 const item = compArray[sortedCount];",
          "358:                     if (compareFn (item, compArray[insertPoint]) < 0) {",
          "",
          "[Added Lines]",
          "298:                 const item = o[sortedCount];",
          "303:                     if (compareFn (item, o[insertPoint]) < 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:                 }",
          "368:                 insertPoint = sortedCount;",
          "369:                 while (insertPoint > lowerBound) {",
          "371:                 }",
          "373:                 ++sortedCount;",
          "374:             }",
          "375:         } else {",
          "384:         }",
          "386:         return o;",
          "",
          "[Removed Lines]",
          "370:                     compArray[insertPoint--] = compArray[insertPoint];",
          "372:                 compArray[lowerBound] = item;",
          "376:             __chakraLibrary.MergeSort(compArray, length, compareFn);",
          "377:         }",
          "379:         if (compArray !== o) {",
          "380:             i = 0;",
          "381:             while (i < length) {",
          "382:                 o[i] = compArray[i++].value;",
          "383:             }",
          "",
          "[Added Lines]",
          "315:                     o[insertPoint--] = o[insertPoint];",
          "317:                 o[lowerBound] = item;",
          "321:             __chakraLibrary.MergeSort(o, length, compareFn);",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.bc.64b.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     var Symbol = platform.Symbol;",
          "19:     var CreateObject = platform.builtInJavascriptObjectEntryCreate;",
          "29:     platform.registerChakraLibraryFunction(\"ArrayIterator\", function (arrayObj, iterationKind) {",
          "30:         __chakraLibrary.InitInternalProperties(this, 4, \"__$arrayObj$__\", \"__$nextIndex$__\", \"__$kind$__\", \"__$internalDone$__\");",
          "31:         this.__$arrayObj$__ = arrayObj;",
          "",
          "[Removed Lines]",
          "21:     let FunctionsEnum = {",
          "22:         ArrayValues: setPrototype({ className: \"Array\", methodName: \"values\", argumentsCount: 0, forceInline: true /*optional*/, alias: \"Symbol.iterator\" }, null),",
          "23:         ArrayKeys: setPrototype({ className: \"Array\", methodName: \"keys\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "24:         ArrayEntries: setPrototype({ className: \"Array\", methodName: \"entries\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "25:         ArrayIndexOf: setPrototype({ className: \"Array\", methodName: \"indexOf\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "26:         ArrayFilter: setPrototype({ className: \"Array\", methodName: \"filter\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "27:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:         }",
          "244:     });",
          "256:     platform.registerChakraLibraryFunction(\"DefaultSortCompare\", function(left, right) {",
          "290:     });",
          "292:     platform.registerChakraLibraryFunction(\"FillArrayHoles\", function(array, length, offset) {",
          "",
          "[Removed Lines]",
          "246:     platform.registerChakraLibraryFunction(\"DefaultStringSortCompare\", function(left, right) {",
          "250:         if (left < right) {",
          "251:             return -1;",
          "252:         }",
          "253:         return 0;",
          "254:     });",
          "259:         if (left.string < right.string) {",
          "260:             return -1;",
          "261:         }",
          "262:         return 0;",
          "263:     });",
          "265:     platform.registerChakraLibraryFunction(\"CreateCompareArray\", function(array, length) {",
          "266:         let useCompareArray = false;",
          "267:         let i = 0;",
          "268:         while (i < length) {",
          "269:             if (typeof array[i++] !== \"string\") {",
          "270:                 useCompareArray = true;",
          "271:                 break;",
          "272:             }",
          "273:         }",
          "275:         if (useCompareArray === true) {",
          "276:             const compArray = [];",
          "277:             compArray.__proto__ = null;",
          "278:             i = 0;",
          "279:             let value;",
          "280:             while (i < length) {",
          "281:                 value = array[i];",
          "282:                 compArray[i++] = {",
          "283:                     value : value,",
          "284:                     string : \"\" + value",
          "285:                 };",
          "286:             }",
          "287:             return compArray;",
          "288:         }",
          "289:         return array;",
          "",
          "[Added Lines]",
          "240:         return `${left}` < `${right}` ? -1 : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "316:     platform.registerFunction(platform.FunctionKind.Array_sort, function (compareFn) {",
          "320:         }",
          "322:         const {o, len} = __chakraLibrary.CheckArrayAndGetLen(this, \"Array.prototype.sort\");",
          "",
          "[Removed Lines]",
          "318:         if (compareFn !== undefined && typeof compareFn !== \"function\") {",
          "319:             __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "",
          "[Added Lines]",
          "269:         if (compareFn !== undefined) {",
          "270:             if (typeof compareFn !== \"function\") {",
          "271:                 __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "272:             }",
          "273:         } else {",
          "274:             compareFn = __chakraLibrary.DefaultSortCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:             o[i] = o[i++];",
          "337:         }",
          "350:         if (length < 2048) {",
          "351:             let sortedCount = 1, lowerBound = 0, insertPoint = 0, upperBound = 0;",
          "352:             while (sortedCount < length) {",
          "354:                 upperBound = sortedCount;",
          "355:                 insertPoint = sortedCount - 1; // this lets us check for already ordered first",
          "356:                 lowerBound = 0;",
          "357:                 for (;;) {",
          "359:                         upperBound = insertPoint;",
          "360:                     } else {",
          "361:                         lowerBound = insertPoint + 1;",
          "",
          "[Removed Lines]",
          "339:         let compArray = o;",
          "340:         if (compareFn === undefined && length > 1) {",
          "341:             compArray = __chakraLibrary.CreateCompareArray(o, length);",
          "342:             if (compArray === o) {",
          "343:                 compareFn = __chakraLibrary.DefaultStringSortCompare;",
          "344:             } else {",
          "345:                 compareFn = __chakraLibrary.DefaultSortCompare;",
          "346:             }",
          "347:         }",
          "353:                 const item = compArray[sortedCount];",
          "358:                     if (compareFn (item, compArray[insertPoint]) < 0) {",
          "",
          "[Added Lines]",
          "298:                 const item = o[sortedCount];",
          "303:                     if (compareFn (item, o[insertPoint]) < 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:                 }",
          "368:                 insertPoint = sortedCount;",
          "369:                 while (insertPoint > lowerBound) {",
          "371:                 }",
          "373:                 ++sortedCount;",
          "374:             }",
          "375:         } else {",
          "384:         }",
          "386:         return o;",
          "",
          "[Removed Lines]",
          "370:                     compArray[insertPoint--] = compArray[insertPoint];",
          "372:                 compArray[lowerBound] = item;",
          "376:             __chakraLibrary.MergeSort(compArray, length, compareFn);",
          "377:         }",
          "379:         if (compArray !== o) {",
          "380:             i = 0;",
          "381:             while (i < length) {",
          "382:                 o[i] = compArray[i++].value;",
          "383:             }",
          "",
          "[Added Lines]",
          "315:                     o[insertPoint--] = o[insertPoint];",
          "317:                 o[lowerBound] = item;",
          "321:             __chakraLibrary.MergeSort(o, length, compareFn);",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.32b.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     var Symbol = platform.Symbol;",
          "19:     var CreateObject = platform.builtInJavascriptObjectEntryCreate;",
          "29:     platform.registerChakraLibraryFunction(\"ArrayIterator\", function (arrayObj, iterationKind) {",
          "30:         __chakraLibrary.InitInternalProperties(this, 4, \"__$arrayObj$__\", \"__$nextIndex$__\", \"__$kind$__\", \"__$internalDone$__\");",
          "31:         this.__$arrayObj$__ = arrayObj;",
          "",
          "[Removed Lines]",
          "21:     let FunctionsEnum = {",
          "22:         ArrayValues: setPrototype({ className: \"Array\", methodName: \"values\", argumentsCount: 0, forceInline: true /*optional*/, alias: \"Symbol.iterator\" }, null),",
          "23:         ArrayKeys: setPrototype({ className: \"Array\", methodName: \"keys\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "24:         ArrayEntries: setPrototype({ className: \"Array\", methodName: \"entries\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "25:         ArrayIndexOf: setPrototype({ className: \"Array\", methodName: \"indexOf\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "26:         ArrayFilter: setPrototype({ className: \"Array\", methodName: \"filter\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "27:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:         }",
          "244:     });",
          "256:     platform.registerChakraLibraryFunction(\"DefaultSortCompare\", function(left, right) {",
          "290:     });",
          "292:     platform.registerChakraLibraryFunction(\"FillArrayHoles\", function(array, length, offset) {",
          "",
          "[Removed Lines]",
          "246:     platform.registerChakraLibraryFunction(\"DefaultStringSortCompare\", function(left, right) {",
          "250:         if (left < right) {",
          "251:             return -1;",
          "252:         }",
          "253:         return 0;",
          "254:     });",
          "259:         if (left.string < right.string) {",
          "260:             return -1;",
          "261:         }",
          "262:         return 0;",
          "263:     });",
          "265:     platform.registerChakraLibraryFunction(\"CreateCompareArray\", function(array, length) {",
          "266:         let useCompareArray = false;",
          "267:         let i = 0;",
          "268:         while (i < length) {",
          "269:             if (typeof array[i++] !== \"string\") {",
          "270:                 useCompareArray = true;",
          "271:                 break;",
          "272:             }",
          "273:         }",
          "275:         if (useCompareArray === true) {",
          "276:             const compArray = [];",
          "277:             compArray.__proto__ = null;",
          "278:             i = 0;",
          "279:             let value;",
          "280:             while (i < length) {",
          "281:                 value = array[i];",
          "282:                 compArray[i++] = {",
          "283:                     value : value,",
          "284:                     string : \"\" + value",
          "285:                 };",
          "286:             }",
          "287:             return compArray;",
          "288:         }",
          "289:         return array;",
          "",
          "[Added Lines]",
          "240:         return `${left}` < `${right}` ? -1 : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "316:     platform.registerFunction(platform.FunctionKind.Array_sort, function (compareFn) {",
          "320:         }",
          "322:         const {o, len} = __chakraLibrary.CheckArrayAndGetLen(this, \"Array.prototype.sort\");",
          "",
          "[Removed Lines]",
          "318:         if (compareFn !== undefined && typeof compareFn !== \"function\") {",
          "319:             __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "",
          "[Added Lines]",
          "269:         if (compareFn !== undefined) {",
          "270:             if (typeof compareFn !== \"function\") {",
          "271:                 __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "272:             }",
          "273:         } else {",
          "274:             compareFn = __chakraLibrary.DefaultSortCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:             o[i] = o[i++];",
          "337:         }",
          "350:         if (length < 2048) {",
          "351:             let sortedCount = 1, lowerBound = 0, insertPoint = 0, upperBound = 0;",
          "352:             while (sortedCount < length) {",
          "354:                 upperBound = sortedCount;",
          "355:                 insertPoint = sortedCount - 1; // this lets us check for already ordered first",
          "356:                 lowerBound = 0;",
          "357:                 for (;;) {",
          "359:                         upperBound = insertPoint;",
          "360:                     } else {",
          "361:                         lowerBound = insertPoint + 1;",
          "",
          "[Removed Lines]",
          "339:         let compArray = o;",
          "340:         if (compareFn === undefined && length > 1) {",
          "341:             compArray = __chakraLibrary.CreateCompareArray(o, length);",
          "342:             if (compArray === o) {",
          "343:                 compareFn = __chakraLibrary.DefaultStringSortCompare;",
          "344:             } else {",
          "345:                 compareFn = __chakraLibrary.DefaultSortCompare;",
          "346:             }",
          "347:         }",
          "353:                 const item = compArray[sortedCount];",
          "358:                     if (compareFn (item, compArray[insertPoint]) < 0) {",
          "",
          "[Added Lines]",
          "298:                 const item = o[sortedCount];",
          "303:                     if (compareFn (item, o[insertPoint]) < 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:                 }",
          "368:                 insertPoint = sortedCount;",
          "369:                 while (insertPoint > lowerBound) {",
          "371:                 }",
          "373:                 ++sortedCount;",
          "374:             }",
          "375:         } else {",
          "384:         }",
          "386:         return o;",
          "",
          "[Removed Lines]",
          "370:                     compArray[insertPoint--] = compArray[insertPoint];",
          "372:                 compArray[lowerBound] = item;",
          "376:             __chakraLibrary.MergeSort(compArray, length, compareFn);",
          "377:         }",
          "379:         if (compArray !== o) {",
          "380:             i = 0;",
          "381:             while (i < length) {",
          "382:                 o[i] = compArray[i++].value;",
          "383:             }",
          "",
          "[Added Lines]",
          "315:                     o[insertPoint--] = o[insertPoint];",
          "317:                 o[lowerBound] = item;",
          "321:             __chakraLibrary.MergeSort(o, length, compareFn);",
          "",
          "---------------"
        ],
        "lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h||lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h": [
          "File: lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h -> lib/Runtime/Library/JsBuiltIn/JsBuiltIn.js.nojit.bc.64b.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     var Symbol = platform.Symbol;",
          "19:     var CreateObject = platform.builtInJavascriptObjectEntryCreate;",
          "29:     platform.registerChakraLibraryFunction(\"ArrayIterator\", function (arrayObj, iterationKind) {",
          "30:         __chakraLibrary.InitInternalProperties(this, 4, \"__$arrayObj$__\", \"__$nextIndex$__\", \"__$kind$__\", \"__$internalDone$__\");",
          "31:         this.__$arrayObj$__ = arrayObj;",
          "",
          "[Removed Lines]",
          "21:     let FunctionsEnum = {",
          "22:         ArrayValues: setPrototype({ className: \"Array\", methodName: \"values\", argumentsCount: 0, forceInline: true /*optional*/, alias: \"Symbol.iterator\" }, null),",
          "23:         ArrayKeys: setPrototype({ className: \"Array\", methodName: \"keys\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "24:         ArrayEntries: setPrototype({ className: \"Array\", methodName: \"entries\", argumentsCount: 0, forceInline: true /*optional*/ }, null),",
          "25:         ArrayIndexOf: setPrototype({ className: \"Array\", methodName: \"indexOf\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "26:         ArrayFilter: setPrototype({ className: \"Array\", methodName: \"filter\", argumentsCount: 1, forceInline: true /*optional*/ }, null),",
          "27:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:         }",
          "244:     });",
          "256:     platform.registerChakraLibraryFunction(\"DefaultSortCompare\", function(left, right) {",
          "290:     });",
          "292:     platform.registerChakraLibraryFunction(\"FillArrayHoles\", function(array, length, offset) {",
          "",
          "[Removed Lines]",
          "246:     platform.registerChakraLibraryFunction(\"DefaultStringSortCompare\", function(left, right) {",
          "250:         if (left < right) {",
          "251:             return -1;",
          "252:         }",
          "253:         return 0;",
          "254:     });",
          "259:         if (left.string < right.string) {",
          "260:             return -1;",
          "261:         }",
          "262:         return 0;",
          "263:     });",
          "265:     platform.registerChakraLibraryFunction(\"CreateCompareArray\", function(array, length) {",
          "266:         let useCompareArray = false;",
          "267:         let i = 0;",
          "268:         while (i < length) {",
          "269:             if (typeof array[i++] !== \"string\") {",
          "270:                 useCompareArray = true;",
          "271:                 break;",
          "272:             }",
          "273:         }",
          "275:         if (useCompareArray === true) {",
          "276:             const compArray = [];",
          "277:             compArray.__proto__ = null;",
          "278:             i = 0;",
          "279:             let value;",
          "280:             while (i < length) {",
          "281:                 value = array[i];",
          "282:                 compArray[i++] = {",
          "283:                     value : value,",
          "284:                     string : \"\" + value",
          "285:                 };",
          "286:             }",
          "287:             return compArray;",
          "288:         }",
          "289:         return array;",
          "",
          "[Added Lines]",
          "240:         return `${left}` < `${right}` ? -1 : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "316:     platform.registerFunction(platform.FunctionKind.Array_sort, function (compareFn) {",
          "320:         }",
          "322:         const {o, len} = __chakraLibrary.CheckArrayAndGetLen(this, \"Array.prototype.sort\");",
          "",
          "[Removed Lines]",
          "318:         if (compareFn !== undefined && typeof compareFn !== \"function\") {",
          "319:             __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "",
          "[Added Lines]",
          "269:         if (compareFn !== undefined) {",
          "270:             if (typeof compareFn !== \"function\") {",
          "271:                 __chakraLibrary.raiseFunctionArgument_NeedFunction(\"Array.prototype.sort\");",
          "272:             }",
          "273:         } else {",
          "274:             compareFn = __chakraLibrary.DefaultSortCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:             o[i] = o[i++];",
          "337:         }",
          "350:         if (length < 2048) {",
          "351:             let sortedCount = 1, lowerBound = 0, insertPoint = 0, upperBound = 0;",
          "352:             while (sortedCount < length) {",
          "354:                 upperBound = sortedCount;",
          "355:                 insertPoint = sortedCount - 1; // this lets us check for already ordered first",
          "356:                 lowerBound = 0;",
          "357:                 for (;;) {",
          "359:                         upperBound = insertPoint;",
          "360:                     } else {",
          "361:                         lowerBound = insertPoint + 1;",
          "",
          "[Removed Lines]",
          "339:         let compArray = o;",
          "340:         if (compareFn === undefined && length > 1) {",
          "341:             compArray = __chakraLibrary.CreateCompareArray(o, length);",
          "342:             if (compArray === o) {",
          "343:                 compareFn = __chakraLibrary.DefaultStringSortCompare;",
          "344:             } else {",
          "345:                 compareFn = __chakraLibrary.DefaultSortCompare;",
          "346:             }",
          "347:         }",
          "353:                 const item = compArray[sortedCount];",
          "358:                     if (compareFn (item, compArray[insertPoint]) < 0) {",
          "",
          "[Added Lines]",
          "298:                 const item = o[sortedCount];",
          "303:                     if (compareFn (item, o[insertPoint]) < 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:                 }",
          "368:                 insertPoint = sortedCount;",
          "369:                 while (insertPoint > lowerBound) {",
          "371:                 }",
          "373:                 ++sortedCount;",
          "374:             }",
          "375:         } else {",
          "384:         }",
          "386:         return o;",
          "",
          "[Removed Lines]",
          "370:                     compArray[insertPoint--] = compArray[insertPoint];",
          "372:                 compArray[lowerBound] = item;",
          "376:             __chakraLibrary.MergeSort(compArray, length, compareFn);",
          "377:         }",
          "379:         if (compArray !== o) {",
          "380:             i = 0;",
          "381:             while (i < length) {",
          "382:                 o[i] = compArray[i++].value;",
          "383:             }",
          "",
          "[Added Lines]",
          "315:                     o[insertPoint--] = o[insertPoint];",
          "317:                 o[lowerBound] = item;",
          "321:             __chakraLibrary.MergeSort(o, length, compareFn);",
          "",
          "---------------"
        ],
        "test/Array/array_sort.js||test/Array/array_sort.js": [
          "File: test/Array/array_sort.js -> test/Array/array_sort.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:             compareSparseArrays(resultTwo, arrayTwo.sort((x, y) => { delete arrayTwo[0]; return x - y; }), \"Compare function delete element effects array\");",
          "224:             compareSparseArrays(resultTwo, arrayTwo, \"Compare function delete element effects array\");",
          "225:         }",
          "226:     }",
          "227: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:     },",
          "227:     {",
          "228:         name : \"Array.prototype.sort default comparison should not call valueOf\",",
          "229:         body () {",
          "230:             valueOf = false;",
          "231:             const arr = [{",
          "232:                 valueOf() { valueOf = true; return 0; }",
          "233:             }, 1, 1, 1,];",
          "234:             arr.sort();",
          "235:             assert.isFalse(valueOf);",
          "236:         }",
          "",
          "---------------"
        ],
        "test/Array/array_sort_random.js||test/Array/array_sort_random.js": [
          "File: test/Array/array_sort_random.js -> test/Array/array_sort_random.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     for (let i = 1; i < size; ++i)",
          "70:     {",
          "72:         {",
          "73:             print (`Unsorted: ${unsorted}`);",
          "74:             print (`Sorted: ${sorted}`);",
          "",
          "[Removed Lines]",
          "71:         if (\"\" + sorted[i-1] > \"\" + sorted[i])",
          "",
          "[Added Lines]",
          "71:         if (`${sorted[i-1]}` > `${sorted[i]}`)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169: stressTestSort(200, 2050);",
          "",
          "[Removed Lines]",
          "171: WScript.Echo(\"PASS\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/xplatRegenByteCode.py||tools/xplatRegenByteCode.py": [
          "File: tools/xplatRegenByteCode.py -> tools/xplatRegenByteCode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:         ['../build.sh', '--no-jit', '--test-build', '--target-path=../out/noJit', '-j=2'],",
          "35:         'No Jit build failed - aborting bytecode generation')",
          "36:     run_sub('Compiling ChakraCore with Jit',",
          "38:         'Jit build failed - aborting bytecode generation')",
          "40: # Regenerate the bytecode",
          "",
          "[Removed Lines]",
          "37:         ['../build.sh', '--test-build', '--target-path=../out', '-j=2'],",
          "",
          "[Added Lines]",
          "37:         ['../build.sh', '--test-build', '--target-path=../out/Jit', '-j=2'],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:     'Failed to generate INTL 32bit noJit bytecode')",
          "58: bytecode_job('../lib/Runtime/Library/InJavascript/Intl.js.bc.64b.h',",
          "60:     'Failed to generate INTL 64bit bytecode')",
          "62: bytecode_job('../lib/Runtime/Library/InJavascript/Intl.js.bc.32b.h',",
          "64:     'Failed to generate INTL 32bit bytecode')",
          "66: # JsBuiltin",
          "",
          "[Removed Lines]",
          "59:     ['../out/test/ch', '-GenerateLibraryByteCodeHeader', '-Intl', '../lib/Runtime/Library/InJavascript/Intl.js'],",
          "63:     ['../out/test/ch', '-GenerateLibraryByteCodeHeader', '-Intl', '-Force32BitByteCode','../lib/Runtime/Library/InJavascript/Intl.js'],",
          "",
          "[Added Lines]",
          "59:     ['../out/Jit/test/ch', '-GenerateLibraryByteCodeHeader', '-Intl', '../lib/Runtime/Library/InJavascript/Intl.js'],",
          "63:     ['../out/Jit/test/ch', '-GenerateLibraryByteCodeHeader', '-Intl', '-Force32BitByteCode','../lib/Runtime/Library/InJavascript/Intl.js'],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:     'Failed to generate noJit 32bit JsBuiltin Bytecode')",
          "76: bytecode_job('../lib/Runtime/Library/JsBuiltin/JsBuiltin.js.bc.64b.h',",
          "78:     'Failed to generate 64bit JsBuiltin Bytecode')",
          "80: bytecode_job('../lib/Runtime/Library/JsBuiltin/JsBuiltin.js.bc.32b.h',",
          "82:     'Failed to generate 32bit JsBuiltin Bytecode')",
          "84: # Bytecode regeneration complete - create a new GUID for it",
          "",
          "[Removed Lines]",
          "77:     ['../out/test/ch', '-GenerateLibraryByteCodeHeader', '-JsBuiltIn', '-LdChakraLib', '../lib/Runtime/Library/JsBuiltin/JsBuiltin.js'],",
          "81:     ['../out/test/ch', '-GenerateLibraryByteCodeHeader', '-JsBuiltIn', '-LdChakraLib', '-Force32BitByteCode', '../lib/Runtime/Library/JsBuiltin/JsBuiltin.js'],",
          "",
          "[Added Lines]",
          "77:     ['../out/Jit/test/ch', '-GenerateLibraryByteCodeHeader', '-JsBuiltIn', '-LdChakraLib', '../lib/Runtime/Library/JsBuiltin/JsBuiltin.js'],",
          "81:     ['../out/Jit/test/ch', '-GenerateLibraryByteCodeHeader', '-JsBuiltIn', '-LdChakraLib', '-Force32BitByteCode', '../lib/Runtime/Library/JsBuiltin/JsBuiltin.js'],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec7a0672e215719f9617e61fa29d03110ca87889",
      "candidate_info": {
        "commit_hash": "ec7a0672e215719f9617e61fa29d03110ca87889",
        "repo": "chakra-core/ChakraCore",
        "commit_url": "https://github.com/chakra-core/ChakraCore/commit/ec7a0672e215719f9617e61fa29d03110ca87889",
        "files": [
          "Build/NuGet/.pack-version",
          "lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "tools/update_bytecode_version.ps1"
        ],
        "message": "Update release/1.11 to version 1.11.0, update GUID, and set PRERELEASE",
        "before_after_code_files": [
          "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "tools/update_bytecode_version.ps1||tools/update_bytecode_version.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ],
          "candidate": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h": [
          "File: lib/Common/ChakraCoreVersion.h -> lib/Common/ChakraCoreVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #define CHAKRA_CORE_MAJOR_VERSION 1",
          "21: #define CHAKRA_CORE_VERSION_RELEASE_QFE 0 // Redundant with PATCH_VERSION. Keep this value set to 0.",
          "",
          "[Removed Lines]",
          "19: #define CHAKRA_CORE_MINOR_VERSION 10",
          "20: #define CHAKRA_CORE_PATCH_VERSION 2",
          "",
          "[Added Lines]",
          "19: #define CHAKRA_CORE_MINOR_VERSION 11",
          "20: #define CHAKRA_CORE_PATCH_VERSION 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: #define CHAKRA_CORE_VERSION_RELEASE 1",
          "",
          "[Removed Lines]",
          "58: #define CHAKRA_CORE_VERSION_PRERELEASE 0",
          "",
          "[Added Lines]",
          "58: #define CHAKRA_CORE_VERSION_PRERELEASE 1",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
          "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: const GUID byteCodeCacheReleaseFileVersion =",
          "",
          "[Removed Lines]",
          "9: { 0x18949169, 0x1B93, 0x4123, { 0xB3, 0x4A, 0xF4, 0x2F, 0x1C, 0x1E, 0xAF, 0x9A } };",
          "",
          "[Added Lines]",
          "10: { 0xBAE0C525, 0xF1E9, 0x4DCF, { 0xAF, 0x50, 0xC7, 0x0A, 0xCB, 0x3E, 0x4A, 0x7F } };",
          "",
          "---------------"
        ],
        "tools/update_bytecode_version.ps1||tools/update_bytecode_version.ps1": [
          "File: tools/update_bytecode_version.ps1 -> tools/update_bytecode_version.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: \"@",
          "29: Write-Header $copyright",
          "31: Write-Header \"const GUID byteCodeCacheReleaseFileVersion =\"",
          "33: $version -match \"^(\\w{8})-(\\w{4})-(\\w{4})-(\\w{4}-\\w{12})$\" | Out-Null",
          "",
          "[Removed Lines]",
          "27: $version=[Guid]::NewGuid().ToString()",
          "30: Write-Header \"// $version\"",
          "",
          "[Added Lines]",
          "27: $version=[Guid]::NewGuid().ToString().ToUpper()",
          "30: Write-Header \"// {$version}\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70413a245c814bdb415e6c0718e59abe551b7ff3",
      "candidate_info": {
        "commit_hash": "70413a245c814bdb415e6c0718e59abe551b7ff3",
        "repo": "chakra-core/ChakraCore",
        "commit_url": "https://github.com/chakra-core/ChakraCore/commit/70413a245c814bdb415e6c0718e59abe551b7ff3",
        "files": [
          "Build/NuGet/.pack-version",
          "lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
        ],
        "message": "Update release/1.11 to version 1.11.2",
        "before_after_code_files": [
          "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h",
          "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ],
          "candidate": [
            "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/Common/ChakraCoreVersion.h||lib/Common/ChakraCoreVersion.h": [
          "File: lib/Common/ChakraCoreVersion.h -> lib/Common/ChakraCoreVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #define CHAKRA_CORE_MAJOR_VERSION 1",
          "19: #define CHAKRA_CORE_MINOR_VERSION 11",
          "21: #define CHAKRA_CORE_VERSION_RELEASE_QFE 0 // Redundant with PATCH_VERSION. Keep this value set to 0.",
          "",
          "[Removed Lines]",
          "20: #define CHAKRA_CORE_PATCH_VERSION 1",
          "",
          "[Added Lines]",
          "20: #define CHAKRA_CORE_PATCH_VERSION 2",
          "",
          "---------------"
        ],
        "lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h||lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h": [
          "File: lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h -> lib/Runtime/ByteCode/ByteCodeCacheReleaseFileVersion.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const GUID byteCodeCacheReleaseFileVersion =",
          "",
          "[Removed Lines]",
          "10: { 0xBAE0C525, 0xF1E9, 0x4DCF, { 0xAF, 0x50, 0xC7, 0x0A, 0xCB, 0x3E, 0x4A, 0x7F } };",
          "",
          "[Added Lines]",
          "10: { 0x67AFB5DE, 0x5B86, 0x43E8, { 0xB3, 0xB5, 0xCF, 0xD2, 0x5F, 0xEA, 0x8F, 0xC3 } };",
          "",
          "---------------"
        ]
      }
    }
  ]
}