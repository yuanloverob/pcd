{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d90d1136f1b231e31d894fb089db56bf526838c",
      "candidate_info": {
        "commit_hash": "1d90d1136f1b231e31d894fb089db56bf526838c",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/1d90d1136f1b231e31d894fb089db56bf526838c",
        "files": [
          "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py"
        ],
        "message": "[AMBARI-25093] \"Spark2 Thrift Server alert does not work with HTTPS/SSL (apappu) (#2883)\n\n* [AMBARI-25093] Spark2 Thrift Server alert does not work with HTTPS (apappu)\n\n* [AMBARI-25093] Spark2 Thrift Server alert does not work with HTTPS/SSL (apappu)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py||ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py||ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py": [
          "File: ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py -> ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/scripts/alerts/alert_spark2_thrift_port.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: CRITICAL_MESSAGE = \"Connection failed on host {0}:{1} ({2})\"",
          "38: HIVE_SERVER_THRIFT_PORT_KEY = '{{spark2-hive-site-override/hive.server2.thrift.port}}'",
          "39: HIVE_SERVER_TRANSPORT_MODE_KEY = '{{spark2-hive-site-override/hive.server2.transport.mode}}'",
          "40: SECURITY_ENABLED_KEY = '{{cluster-env/security_enabled}}'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: HIVE_SERVER_THRIFT_HTTP_PORT_KEY = '{{spark2-hive-site-override/hive.server2.thrift.http.port}}'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: HIVE_SERVER2_KERBEROS_KEYTAB = '{{hive-site/hive.server2.authentication.kerberos.keytab}}'",
          "44: HIVE_SERVER2_PRINCIPAL_KEY = '{{hive-site/hive.server2.authentication.kerberos.principal}}'",
          "46: # The configured Kerberos executable search paths, if any",
          "47: KERBEROS_EXECUTABLE_SEARCH_PATHS_KEY = '{{kerberos-env/executable_search_paths}}'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: SPARK_SSL_ENABLED = '{{spark2-defaults/spark.ssl.enabled}}'",
          "49: SPARK_TRUST_STORE_PATH = '{{spark2-defaults/spark.ssl.trustStore}}'",
          "50: SPARK_TRUST_STORE_PASS = '{{spark2-defaults/spark.ssl.trustStorePassword}}'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:     to build the dictionary passed into execute",
          "64:     \"\"\"",
          "65:     return (HIVE_SERVER_THRIFT_PORT_KEY, HIVE_SERVER_TRANSPORT_MODE_KEY, SECURITY_ENABLED_KEY, KERBEROS_EXECUTABLE_SEARCH_PATHS_KEY,",
          "68: @OsFamilyFuncImpl(os_family=OsFamilyImpl.DEFAULT)",
          "69: def execute(configurations={}, parameters={}, host_name=None):",
          "",
          "[Removed Lines]",
          "66:             HIVEUSER_DEFAULT, HIVE_SERVER2_KERBEROS_KEYTAB, HIVE_SERVER2_PRINCIPAL_KEY)",
          "",
          "[Added Lines]",
          "72:             HIVEUSER_DEFAULT, HIVE_SERVER2_KERBEROS_KEYTAB, HIVE_SERVER2_PRINCIPAL_KEY, SPARK_SSL_ENABLED, SPARK_TRUST_STORE_PATH, SPARK_TRUST_STORE_PASS, HIVE_SERVER_THRIFT_HTTP_PORT_KEY)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:     port = THRIFT_PORT_DEFAULT",
          "89:     if transport_mode.lower() == 'binary' and HIVE_SERVER_THRIFT_PORT_KEY in configurations:",
          "90:         port = int(configurations[HIVE_SERVER_THRIFT_PORT_KEY])",
          "92:     security_enabled = False",
          "93:     if SECURITY_ENABLED_KEY in configurations:",
          "94:         security_enabled = str(configurations[SECURITY_ENABLED_KEY]).upper() == 'TRUE'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     elif transport_mode.lower() == 'http' and HIVE_SERVER_THRIFT_HTTP_PORT_KEY in configurations:",
          "98:      port = int(configurations[HIVE_SERVER_THRIFT_HTTP_PORT_KEY])",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "105:         hive_principal = configurations[HIVE_SERVER2_PRINCIPAL_KEY]",
          "106:         hive_principal = hive_principal.replace('_HOST',host_name.lower())",
          "108:     # Get the configured Kerberos executable search paths, if any",
          "109:     if KERBEROS_EXECUTABLE_SEARCH_PATHS_KEY in configurations:",
          "110:         kerberos_executable_search_paths = configurations[KERBEROS_EXECUTABLE_SEARCH_PATHS_KEY]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:     # Get the Trust store and pass",
          "117:     spark_truststore_path = None",
          "118:     spark_truststore_pass = None",
          "119:     spark_ssl_enabled = False",
          "120:     if SPARK_SSL_ENABLED in configurations:",
          "121:          spark_truststore_path = configurations[SPARK_TRUST_STORE_PATH]",
          "122:          spark_truststore_pass = configurations[SPARK_TRUST_STORE_PASS]",
          "123:          spark_ssl_enabled = str(configurations[SPARK_SSL_ENABLED]).upper() == 'TRUE'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131:             host_name = socket.getfqdn()",
          "133:         if security_enabled:",
          "135:         else:",
          "137:         # append url according to used transport",
          "139:         beeline_cmd = os.path.join(spark_home, \"bin\", \"beeline\")",
          "",
          "[Removed Lines]",
          "134:             beeline_url = [\"'jdbc:hive2://{host_name}:{port}/default;principal={hive_principal}'\",\"transportMode={transport_mode}\"]",
          "136:             beeline_url = [\"'jdbc:hive2://{host_name}:{port}/default'\",\"transportMode={transport_mode}\"]",
          "",
          "[Added Lines]",
          "151:             if spark_ssl_enabled:",
          "152:                 beeline_url = ['\"jdbc:hive2://{host_name}:{port}/default;principal={hive_principal};transportMode={transport_mode};ssl=true;sslTrustStore={spark_truststore_path};trustStorePassword={spark_truststore_pass!p};httpPath=cliservice\"']",
          "153:             else:",
          "154:                 beeline_url = [\"jdbc:hive2://{host_name}:{port}/default;principal={hive_principal}\",\"transportMode={transport_mode}\"]",
          "156:             if spark_ssl_enabled:",
          "157:                 beeline_url = ['\"jdbc:hive2://{host_name}:{port}/default;transportMode={transport_mode};ssl=true;sslTrustStore={spark_truststore_path};trustStorePassword={spark_truststore_pass!p};httpPath=cliservice\"']",
          "158:             else:",
          "159:                 beeline_url = [\"jdbc:hive2://{host_name}:{port}/default\",\"transportMode={transport_mode}\"]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc1d5ccac4677175b89dcdd4b7dd99d2a481e337",
      "candidate_info": {
        "commit_hash": "dc1d5ccac4677175b89dcdd4b7dd99d2a481e337",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/dc1d5ccac4677175b89dcdd4b7dd99d2a481e337",
        "files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ],
        "message": "AMBARI-24344: Upgrade Infra Solr client operation fails for Ubuntu while running migration script for solr upgrade (#1873)",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py": [
          "File: ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py -> ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: def replace_underscores(function_to_decorate):",
          "33:     self = args[0]",
          "34:     name = args[1].replace(\"_\", \"-\")",
          "36:   return wrapper",
          "",
          "[Removed Lines]",
          "32:   def wrapper(*args):",
          "35:     return function_to_decorate(self, name, *args[2:])",
          "",
          "[Added Lines]",
          "32:   def wrapper(*args, **kwargs):",
          "35:     return function_to_decorate(self, name, *args[2:], **kwargs)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c02075b3b18edfefa4f5a3d4ab1cd7f08edf766",
      "candidate_info": {
        "commit_hash": "7c02075b3b18edfefa4f5a3d4ab1cd7f08edf766",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7c02075b3b18edfefa4f5a3d4ab1cd7f08edf766",
        "files": [
          "ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java"
        ],
        "message": "AMBARI-24484. HDP-GPL repo's shouldn't be pushed to hosts when GPL license was not applied. (#2083)\n\n* AMBARI-24484. HDP-GPL repo's shouldn't be pushed to hosts when GPL license was not applied. (mpapirkovskyy)\n\n* AMBARI-24484. HDP-GPL repo's shouldn't be pushed to hosts when GPL license was not applied. (mpapirkovskyy)",
        "before_after_code_files": [
          "ambari-common/src/main/python/resource_management/libraries/script/script.py||ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java||ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/resource_management/libraries/script/script.py||ambari-common/src/main/python/resource_management/libraries/script/script.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/script/script.py -> ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "782:     service_name = config['serviceName'] if 'serviceName' in config else None",
          "783:     repos = CommandRepository(config['repositoryFile'])",
          "784:     repo_ids = [repo.repo_id for repo in repos.items]",
          "785:     Logger.info(\"Command repositories: {0}\".format(\", \".join(repo_ids)))",
          "786:     repos.items = [x for x in repos.items if (not x.applicable_services or service_name in x.applicable_services) ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785:     from resource_management.libraries.functions import lzo_utils",
          "787:     # remove repos with 'GPL' tag when GPL license is not approved",
          "788:     repo_tags_to_skip = set()",
          "789:     if not lzo_utils.is_gpl_license_accepted():",
          "790:       repo_tags_to_skip.add(\"GPL\")",
          "791:     repos.items = [r for r in repos.items if not (repo_tags_to_skip & r.tags)]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java||ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java -> ambari-server/src/main/java/org/apache/ambari/server/agent/CommandRepository.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:     private List<String> m_applicableServices;",
          "274:     @SerializedName(\"tags\")",
          "275:     private Set<RepoTag> m_tags;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "275:     @JsonProperty(\"tags\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "743cf1337548639c08d27844c45a05bba2be7f86",
      "candidate_info": {
        "commit_hash": "743cf1337548639c08d27844c45a05bba2be7f86",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/743cf1337548639c08d27844c45a05bba2be7f86",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts",
          "ambari-logsearch/ambari-logsearch-web/src/assets/i18n/en.json"
        ],
        "message": "[AMBARI-24248] [LogSearch UI] There is no user notification on Log Feeder configuration saving (#1779)\n\n* [AMBARI-24248] [LogSearch UI] There is no user notification on Log Feeder configuration saving",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts||ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts||ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts -> ambari-logsearch/ambari-logsearch-web/src/app/app-routing.module.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     component: LogsContainerComponent,",
          "38:     data: {",
          "39:       breadcrumbs: 'logs.title',",
          "41:     },",
          "42:     resolve: {",
          "43:       breadcrumbs: LogsBreadcrumbsResolverService",
          "",
          "[Removed Lines]",
          "40:       multiClusterFilter: true",
          "",
          "[Added Lines]",
          "40:       multiClusterFilter: true,",
          "41:       clusterParamKey: 'clusters'",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     .map((dataSetState: DataAvailability) => dataSetState === DataAvailabilityValues.AVAILABLE);",
          "37:   private notificationServiceOptions: Options = {",
          "39:     showProgressBar: true,",
          "40:     pauseOnHover: true,",
          "41:     preventLastDuplicates: 'visible',",
          "42:     theClass: 'app-notification',",
          "44:   };",
          "46:   constructor(",
          "",
          "[Removed Lines]",
          "38:     timeOut: 5000,",
          "43:     icons: notificationIcons",
          "",
          "[Added Lines]",
          "38:     timeOut: 2000,",
          "43:     icons: notificationIcons,",
          "44:     position: ['top', 'left']",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/components/cluster-filter/cluster-filter.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';",
          "18: import 'rxjs/add/operator/switchMap';",
          "19: import {Observable} from 'rxjs/Observable';",
          "21: import {Subscription} from 'rxjs/Subscription';",
          "23: import {ClustersService} from '@app/services/storage/clusters.service';",
          "",
          "[Removed Lines]",
          "20: import {ActivatedRouteSnapshot, Router, RoutesRecognized} from '@angular/router';",
          "",
          "[Added Lines]",
          "20: import {ActivatedRouteSnapshot, Router, NavigationEnd} from '@angular/router';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   })",
          "44:   filterDropdown: FilterDropdownComponent;",
          "48:   private clusterSelectionStoreKey: BehaviorSubject<string> = new BehaviorSubject('');",
          "49:   private readonly defaultUseMultiSelection = true;",
          "50:   private useMultiSelection: BehaviorSubject<boolean> = new BehaviorSubject(false);",
          "",
          "[Removed Lines]",
          "46:   private clustersAsListItems$: Observable<ListItem[]>;",
          "",
          "[Added Lines]",
          "48:   private clustersAsListItems$: Observable<ListItem[]> = this.clusterSelectionStoreKey.distinctUntilChanged()",
          "49:     .switchMap((selectionStoreKey: string) => Observable.combineLatest(",
          "50:         this.clusterSelectionStoreService.getParameter(selectionStoreKey),",
          "51:         this.clusterStoreService.getAll()",
          "52:       ).map(([selections, clusters]) => {",
          "53:         const selectedClusters = selections ? (Array.isArray(selections) ? selections : [selections]) : selections;",
          "54:         return clusters.map((cluster) => Object.assign(this.utilsService.getListItemFromString(cluster), {",
          "55:             isChecked: selectedClusters && selectedClusters.indexOf(cluster) > -1",
          "56:           })",
          "57:         );",
          "58:       })",
          "59:     ).startWith([]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:   ngOnInit() {",
          "64:     this.subscriptions.push(",
          "69:     );",
          "70:     this.actualizeDropdownSelectionByActivatedRouteSnapshot(this.router.routerState.root.snapshot);",
          "71:   }",
          "",
          "[Removed Lines]",
          "65:       this.router.events.filter(routes => routes instanceof RoutesRecognized).subscribe(this.onRecognizedActivatedRouteData)",
          "66:     );",
          "67:     this.subscriptions.push(",
          "68:       this.clusterSelectionStoreKey.subscribe(this.onClusterSelectionStoreKeyChange)",
          "",
          "[Added Lines]",
          "77:       this.router.events.filter(routes => routes instanceof NavigationEnd).subscribe(this.onNavigationEnd)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "100:   }",
          "102:   private setDropdownSelectionByActivatedRouteSnapshot(routeSnapshot: ActivatedRouteSnapshot): void {",
          "104:     if (clusterSelection) {",
          "105:       clusterSelection = this.useMultiSelection.getValue() ? clusterSelection.split(/[,;]/) : clusterSelection;",
          "106:       if (Array.isArray(clusterSelection)) {",
          "",
          "[Removed Lines]",
          "103:     let clusterSelection = this.routingUtilsService.getParamFromActivatedRouteSnapshot(routeSnapshot, 'cluster');",
          "",
          "[Added Lines]",
          "112:     const clusterParamKey: string = this.routingUtilsService.getDataFromActivatedRouteSnapshot(routeSnapshot, 'clusterParamKey');",
          "113:     let clusterSelection = this.routingUtilsService.getParamFromActivatedRouteSnapshot(routeSnapshot, clusterParamKey || 'cluster');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "121:           this.filterDropdown.updateSelection(clusterSelection);",
          "122:         });",
          "123:     } else {",
          "125:     }",
          "126:   }",
          "",
          "[Removed Lines]",
          "124:       this.filterDropdown.selection = [];",
          "",
          "[Added Lines]",
          "134:       this.filterDropdown.updateSelection(null);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131:     this.setDropdownSelectionByActivatedRouteSnapshot(routeSnapshot);",
          "132:   }",
          "136:   }",
          "138:   onDropDownSelectionChanged = (values): void => {",
          "",
          "[Removed Lines]",
          "134:   private onRecognizedActivatedRouteData = (routes: RoutesRecognized): void => {",
          "135:     this.actualizeDropdownSelectionByActivatedRouteSnapshot(routes.state.root);",
          "",
          "[Added Lines]",
          "144:   private onNavigationEnd = (): void => {",
          "145:     this.actualizeDropdownSelectionByActivatedRouteSnapshot(this.router.routerState.root.snapshot);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "148:       });",
          "149:   }",
          "170: }",
          "",
          "[Removed Lines]",
          "151:   private setListItems(selectionStoreKey: string): void {",
          "152:     this.clustersAsListItems$ = Observable.combineLatest(",
          "153:       this.clusterSelectionStoreService.getParameter(selectionStoreKey),",
          "154:       this.clusterStoreService.getAll()",
          "155:     ).map(([selections, clusters]) => {",
          "156:       const selectedClusters = selections ? (Array.isArray(selections) ? selections : [selections]) : selections;",
          "157:       return clusters.map((cluster) => Object.assign(this.utilsService.getListItemFromString(cluster), {",
          "158:           isChecked: selectedClusters && selectedClusters.indexOf(cluster) > -1",
          "159:         })",
          "160:       );",
          "161:     }).startWith([]);",
          "162:   }",
          "164:   private onClusterSelectionStoreKeyChange = (selectionStoreKey: string): void => {",
          "165:     if (selectionStoreKey) {",
          "166:       this.setListItems(selectionStoreKey);",
          "167:     }",
          "168:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/notifications.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   border-radius: 2px;",
          "24:   box-shadow: 0 5px 15px rgba(0,0,0,.5);",
          "25:   &.success {",
          "27:     .fa {",
          "28:       color: @form-success-color;",
          "29:     }",
          "30:   }",
          "31:   &.info {",
          "33:     .fa {",
          "34:       color: @form-info-color;",
          "35:     }",
          "36:   }",
          "37:   &.error {",
          "39:     .fa {",
          "40:       color: @form-error-color;",
          "41:     }",
          "",
          "[Removed Lines]",
          "26:     border-left: 3px solid @form-success-color;",
          "32:     border-left: 3px solid @form-info-color;",
          "38:     border-left: 3px solid @form-error-color;",
          "",
          "[Added Lines]",
          "26:     border: 1px solid @form-success-color;",
          "32:     border: 1px solid @form-info-color;",
          "38:     border: 1px solid @form-error-color;",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/variables.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: @notification-color: @base-font-color;",
          "92: @notification-content-font-size: 12px;",
          "93: @notification-background-color: #FFF;",
          "",
          "[Removed Lines]",
          "91: @notification-title-font-size: 16px;",
          "",
          "[Added Lines]",
          "91: @notification-title-font-size: 14px;",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:               [configuration]=\"configuration$ | async\"",
          "42:               [existingServiceNames]=\"serviceNamesList$\"",
          "43:               [validationResponse]=\"validationResponse\"",
          "44:               (configurationSubmit)=\"onConfigurationFormSubmit($event)\"",
          "45:               (validationSubmit)=\"onValidationFormSubmit($event)\"",
          "46:             ></shipper-configuration-form>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:               [disabled]=\"requestInProgress$ | async\"",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-configuration/shipper-configuration.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   ShipperServiceConfigurationFormComponent",
          "33: } from '@modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component';",
          "34: import {TranslateService} from '@ngx-translate/core';",
          "37: import {ClusterSelectionService} from '@app/services/storage/cluster-selection.service';",
          "38: import {Subscription} from 'rxjs/Subscription';",
          "40: @Component({",
          "41:   selector: 'shipper-configuration',",
          "",
          "[Removed Lines]",
          "35: import {ClustersService} from '@app/services/storage/clusters.service';",
          "36: import {ShipperClusterServiceValidationModel} from '@modules/shipper/models/shipper-cluster-service-validation.model';",
          "",
          "[Added Lines]",
          "37: import { BehaviorSubject } from 'rxjs/BehaviorSubject';",
          "38: import { FormGroup } from '@angular/forms';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   @ViewChild(ShipperServiceConfigurationFormComponent)",
          "53:   configurationFormRef: ShipperServiceConfigurationFormComponent;",
          "55:   private clusterName$: Observable<ShipperClusterService> = this.activatedRoute.params.map(params => params.cluster);",
          "56:   private serviceName$: Observable<ShipperClusterService> = this.activatedRoute.params.map(params => params.service);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   private requestInProgress$: BehaviorSubject<boolean> = new BehaviorSubject(false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:     return cluster ? this.shipperClusterServiceListService.getServicesForCluster(cluster) : Observable.of(undefined);",
          "60:   });",
          "64:       return clusterName && serviceName ?",
          "65:         this.shipperConfigurationService.loadConfiguration(clusterName, serviceName) : Observable.of(undefined);",
          "66:     });",
          "",
          "[Removed Lines]",
          "62:   private configuration$: Observable<{[key: string]: any}> = Observable.combineLatest(this.clusterName$, this.serviceName$)",
          "63:     .switchMap(([clusterName, serviceName]: [ShipperCluster, ShipperClusterService]) => {",
          "",
          "[Added Lines]",
          "64:   private configuration$: Observable<{[key: string]: any}> = Observable.combineLatest(",
          "65:       this.clusterName$,",
          "66:       this.serviceName$",
          "67:     ).switchMap(([clusterName, serviceName]: [ShipperCluster, ShipperClusterService]) => {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:     private shipperConfigurationService: ShipperConfigurationService,",
          "77:     private notificationService: NotificationService,",
          "78:     private translate: TranslateService,",
          "81:     private clusterSelectionStoreService: ClusterSelectionService",
          "82:   ) { }",
          "",
          "[Removed Lines]",
          "80:     private clustersStoreService: ClustersService,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:     }",
          "117:   }",
          "125:   private getRouterLink(path: string | string[]): string[] {",
          "126:     return [...this.routerPath, ...(Array.isArray(path) ? path : [path])];",
          "127:   }",
          "130:     return (response: Response) => {",
          "131:       const result = response.json();",
          "133:       const resultType = response ? (response.ok && !result.errorMessage ? NotificationType.SUCCESS : NotificationType.ERROR) : type;",
          "135:       const title = this.translate.instant(`shipperConfiguration.action.${cmd}.title`, translateParams);",
          "136:       const message = this.translate.instant(`shipperConfiguration.action.${cmd}.${resultType}.message`, translateParams);",
          "137:       this.notificationService.addNotification({type: resultType, title, message});",
          "138:     };",
          "139:   }",
          "142:     this.serviceNamesList$.first().subscribe((services: ShipperClusterService[]) => {",
          "144:       this.shipperConfigurationService[`${cmd}Configuration`]({",
          "148:       }).subscribe(",
          "151:       );",
          "152:     });",
          "153:   }",
          "",
          "[Removed Lines]",
          "119:   private onShipperClusterServiceSelected(serviceName: ShipperClusterService) {",
          "120:     this.clusterName$.first().subscribe((clusterName: ShipperCluster) => this.router.navigate(",
          "121:       [...this.routerPath, clusterName, serviceName]",
          "122:     ));",
          "123:   }",
          "129:   getResponseHandler(cmd: string, type: string, msgVariables?: {[key: string]: any}) {",
          "134:       const translateParams = {errorMessage: '', ...msgVariables, ...result};",
          "141:   onConfigurationFormSubmit(rawValue: any): void {",
          "143:       const cmd: string = services.indexOf(rawValue.service) > -1 ? 'update' : 'add';",
          "145:         cluster: rawValue.cluster,",
          "146:         service: rawValue.service,",
          "147:         configuration: rawValue.configuration",
          "149:         this.getResponseHandler(cmd, NotificationType.SUCCESS, rawValue),",
          "150:         this.getResponseHandler(cmd, NotificationType.ERROR, rawValue)",
          "",
          "[Added Lines]",
          "125:   getResponseHandler(cmd: string, type: string, form?: FormGroup) {",
          "126:     const msgVariables = form.getRawValue();",
          "131:       const translateParams = {errorMessage: (result && result.message) || '', ...msgVariables, ...result};",
          "135:       if (resultType !== NotificationType.ERROR) {",
          "136:         form.markAsPristine();",
          "137:       }",
          "138:       this.requestInProgress$.next(false);",
          "142:   onConfigurationFormSubmit(configurationForm: FormGroup): void {",
          "143:     const rawValue = configurationForm.getRawValue();",
          "145:       const cmd: string = services.indexOf(rawValue.serviceName) > -1 ? 'update' : 'add';",
          "146:       this.requestInProgress$.next(true);",
          "148:         cluster: rawValue.clusterName,",
          "149:         service: rawValue.serviceName,",
          "150:         configuration: JSON.parse(rawValue.configuration)",
          "152:         this.getResponseHandler(cmd, NotificationType.SUCCESS, configurationForm),",
          "153:         this.getResponseHandler(cmd, NotificationType.ERROR, configurationForm)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "156:     this.validationResponse = result;",
          "157:   }",
          "160:     this.validationResponse = null;",
          "161:     const request$: Observable<Response> = this.shipperConfigurationService.testConfiguration(rawValue);",
          "162:     request$.subscribe(",
          "165:     );",
          "166:     request$",
          "167:       .filter((response: Response): boolean => response.ok)",
          "",
          "[Removed Lines]",
          "159:   onValidationFormSubmit(rawValue: ShipperClusterServiceValidationModel): void {",
          "163:       this.getResponseHandler('validate', NotificationType.SUCCESS, rawValue),",
          "164:       this.getResponseHandler('validate', NotificationType.ERROR, rawValue)",
          "",
          "[Added Lines]",
          "162:   onValidationFormSubmit(validationForm: FormGroup): void {",
          "164:     const rawValue = validationForm.getRawValue();",
          "167:       this.getResponseHandler('validate', NotificationType.SUCCESS, validationForm),",
          "168:       this.getResponseHandler('validate', NotificationType.ERROR, validationForm)",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   <div class=\"row\">",
          "22:     <div class=\"shipper-form-configuration col-md-6\">",
          "23:       <form [formGroup]=\"configurationForm\" (ngSubmit)=\"onConfigurationSubmit($event)\">",
          "63:       </form>",
          "64:     </div>",
          "65:     <div class=\"shipper-form-validator col-md-6\">",
          "",
          "[Removed Lines]",
          "24:         <h2>{{(serviceName ? 'shipperConfiguration.form.titleEdit' : 'shipperConfiguration.form.titleAdd') | translate}}</h2>",
          "25:         <div [ngClass]=\"{'has-error': serviceNameField.invalid, 'form-group': true}\">",
          "26:           <label>",
          "27:             {{'shipperConfiguration.form.serviceLabel' | translate}}",
          "28:             <span *ngIf=\"serviceNameField.errors && serviceNameField.errors.serviceNameExists\"",
          "29:                   class=\"help-block validation-block pull-right\">",
          "30:               {{'shipperConfiguration.form.errors.serviceName.exists' | translate}}",
          "31:             </span>",
          "32:             <span *ngIf=\"serviceNameField.errors && serviceNameField.errors.required\"",
          "33:                   class=\"help-block validation-block pull-right\">",
          "34:               {{'common.form.errors.required' | translate}}",
          "35:             </span>",
          "36:           </label>",
          "37:           <input *ngIf=\"!serviceName\" formControlName=\"serviceName\" class=\"form-control\">",
          "38:           <ng-container *ngIf=\"serviceName\">",
          "39:             <div class=\"shipper-configuration-service-name\">{{serviceName}}</div>",
          "40:             <input type=\"hidden\" name=\"serviceName\" formControlName=\"serviceName\">",
          "41:           </ng-container>",
          "42:         </div>",
          "43:         <input type=\"hidden\" name=\"clusterName\" formControlName=\"clusterName\">",
          "44:         <div [ngClass]=\"{'has-error': configurationField.invalid, 'form-group': true}\">",
          "45:           <label>",
          "46:             {{'shipperConfiguration.form.configurationJSONLabel' | translate}}",
          "47:             <span *ngIf=\"configurationField.errors && configurationField.errors.invalidJSON\"",
          "48:                   class=\"help-block validation-block pull-right\">",
          "49:               {{'shipperConfiguration.form.errors.configuration.invalidJSON' | translate}}",
          "50:             </span>",
          "51:             <span *ngIf=\"configurationField.errors && configurationField.errors.required\"",
          "52:                   class=\"help-block validation-block pull-right\">",
          "53:               {{'common.form.errors.required' | translate}}",
          "54:             </span>",
          "55:           </label>",
          "56:           <textarea class=\"form-control configuration\" name=\"configuration\"",
          "57:             formControlName=\"configuration\"></textarea>",
          "58:         </div>",
          "59:         <button class=\"btn btn-primary pull-right\" type=\"submit\"",
          "60:                 [disabled]=\"(!configurationForm.valid || configurationForm.pristine)\">",
          "61:           {{'shipperConfiguration.form.saveBtn.label' | translate}}",
          "62:         </button>",
          "",
          "[Added Lines]",
          "24:         <fieldset [disabled]=\"disabled\">",
          "25:           <h2>{{(serviceName ? 'shipperConfiguration.form.titleEdit' : 'shipperConfiguration.form.titleAdd') | translate}}</h2>",
          "26:           <div [ngClass]=\"{'has-error': serviceNameField.invalid, 'form-group': true}\">",
          "27:             <label>",
          "28:               {{'shipperConfiguration.form.serviceLabel' | translate}}",
          "29:               <span *ngIf=\"serviceNameField.errors && serviceNameField.errors.serviceNameExists\"",
          "30:                     class=\"help-block validation-block pull-right\">",
          "31:                 {{'shipperConfiguration.form.errors.serviceName.exists' | translate}}",
          "32:               </span>",
          "33:               <span *ngIf=\"serviceNameField.errors && serviceNameField.errors.required\"",
          "34:                     class=\"help-block validation-block pull-right\">",
          "35:                 {{'common.form.errors.required' | translate}}",
          "36:               </span>",
          "37:             </label>",
          "38:             <input *ngIf=\"!serviceName\" formControlName=\"serviceName\" class=\"form-control\">",
          "39:             <ng-container *ngIf=\"serviceName\">",
          "40:               <div class=\"shipper-configuration-service-name\">{{serviceName}}</div>",
          "41:               <input type=\"hidden\" name=\"serviceName\" formControlName=\"serviceName\">",
          "42:             </ng-container>",
          "43:           </div>",
          "44:           <input type=\"hidden\" name=\"clusterName\" formControlName=\"clusterName\">",
          "45:           <div [ngClass]=\"{'has-error': configurationField.invalid, 'form-group': true}\">",
          "46:             <label>",
          "47:               {{'shipperConfiguration.form.configurationJSONLabel' | translate}}",
          "48:               <span *ngIf=\"configurationField.errors && configurationField.errors.invalidJSON\"",
          "49:                     class=\"help-block validation-block pull-right\">",
          "50:                 {{'shipperConfiguration.form.errors.configuration.invalidJSON' | translate}}",
          "51:               </span>",
          "52:               <span *ngIf=\"configurationField.errors && configurationField.errors.required\"",
          "53:                     class=\"help-block validation-block pull-right\">",
          "54:                 {{'common.form.errors.required' | translate}}",
          "55:               </span>",
          "56:             </label>",
          "57:             <textarea class=\"form-control configuration\" name=\"configuration\"",
          "58:               formControlName=\"configuration\"></textarea>",
          "59:           </div>",
          "60:           <button class=\"btn btn-primary pull-right\" type=\"submit\"",
          "61:                   [disabled]=\"(!configurationForm.valid || configurationForm.pristine)\">",
          "62:             {{'shipperConfiguration.form.saveBtn.label' | translate}}",
          "63:           </button>",
          "64:         </fieldset>",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/components/shipper-service-configuration-form/shipper-service-configuration-form.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import {CanComponentDeactivate} from '@modules/shared/services/can-deactivate-guard.service';",
          "30: import {ShipperCluster} from '../../models/shipper-cluster.type';",
          "31: import {ShipperClusterService} from '../../models/shipper-cluster-service.type';",
          "32: import {ShipperClusterServiceConfigurationInterface} from '../../models/shipper-cluster-service-configuration.interface';",
          "",
          "[Removed Lines]",
          "28: import {UtilsService} from '@app/services/utils.service';",
          "29: import {ShipperClusterServiceConfigurationModel} from '../../models/shipper-cluster-service-configuration.model';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: import * as formValidators from '../../directives/validator.directive';",
          "35: import {BehaviorSubject} from 'rxjs/BehaviorSubject';",
          "36: import {Subscription} from 'rxjs/Subscription';",
          "38: import {ActivatedRoute} from '@angular/router';",
          "40: @Component({",
          "",
          "[Removed Lines]",
          "37: import {ShipperClusterServiceValidationModel} from '@modules/shipper/models/shipper-cluster-service-validation.model';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   @Input()",
          "63:   validationResponse: {[key: string]: any};",
          "65:   @Output()",
          "68:   @Output()",
          "71:   private configurationComponents$: Observable<string[]>;",
          "",
          "[Removed Lines]",
          "66:   configurationSubmit: EventEmitter<ShipperClusterServiceConfigurationModel> = new EventEmitter<ShipperClusterServiceConfigurationModel>();",
          "69:   validationSubmit: EventEmitter<ShipperClusterServiceValidationModel> = new EventEmitter<ShipperClusterServiceValidationModel>();",
          "",
          "[Added Lines]",
          "62:   @Input()",
          "63:   disabled = false;",
          "66:   configurationSubmit: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();",
          "69:   validationSubmit: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:   private subscriptions: Subscription[] = [];",
          "109:   constructor(",
          "111:     private formBuilder: FormBuilder,",
          "112:     private activatedRoute: ActivatedRoute,",
          "113:     private changeDetectionRef: ChangeDetectorRef",
          "",
          "[Removed Lines]",
          "110:     private utilsService: UtilsService,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "181:     }",
          "182:   }",
          "188:   leaveDirtyFormConfirmed = () => {",
          "189:     this.canDeactivateModalResult.next(true);",
          "190:     this.isLeavingDirtyForm = false;",
          "",
          "[Removed Lines]",
          "184:   onServiceParamsChange = (service): void => {",
          "186:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "232:         Validators.required,",
          "233:         formValidators.getConfigurationServiceValidator(this.configurationForm.controls.configuration)",
          "234:       ]),",
          "236:     });",
          "237:     this.subscriptions.push(",
          "238:       this.configurationForm.valueChanges.subscribe(() => {",
          "239:         this.validatorForm.controls.componentName.updateValueAndValidity();",
          "240:       })",
          "241:     );",
          "242:   }",
          "245:     if (this.configurationForm.valid) {",
          "253:     }",
          "254:   }",
          "256:   onValidationSubmit(): void {",
          "262:     }",
          "263:   }",
          "",
          "[Removed Lines]",
          "235:       sampleData: this.formBuilder.control('', Validators.required)",
          "244:   onConfigurationSubmit(configurationForm: FormGroup): void {",
          "246:       const rawValue = this.configurationForm.getRawValue();",
          "247:       const serviceName: string = Array.isArray(rawValue.serviceName) ? rawValue.serviceName.shift().value : rawValue.serviceName;",
          "248:       this.configurationSubmit.emit({",
          "249:         cluster: rawValue.clusterName,",
          "250:         service: serviceName,",
          "251:         configuration: JSON.parse(rawValue.configuration)",
          "252:       });",
          "257:     if (this.validatorForm) {",
          "258:       this.validationSubmit.emit({",
          "259:         configuration: this.configurationForm.controls.configuration.value,",
          "260:         ...this.validatorForm.getRawValue()",
          "261:       });",
          "",
          "[Added Lines]",
          "230:       sampleData: this.formBuilder.control('', Validators.required),",
          "231:       configuration: this.formBuilder.control('', Validators.required)",
          "236:         this.validatorForm.controls.configuration.setValue(this.configurationForm.controls.configuration.value);",
          "241:   onConfigurationSubmit(): void {",
          "243:       this.configurationSubmit.emit(this.configurationForm);",
          "248:     if (this.validatorForm.valid) {",
          "249:       this.validationSubmit.emit(this.validatorForm);",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts||ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shipper/services/shipper-configuration.service.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import { Injectable } from '@angular/core';",
          "20: import {Observable} from 'rxjs/Observable';",
          "21: import 'rxjs/add/operator/catch';",
          "",
          "[Removed Lines]",
          "19: import {Response} from '@angular/http';",
          "",
          "[Added Lines]",
          "19: import {Response, ResponseOptions, ResponseType} from '@angular/http';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     private httpClientService: HttpClientService",
          "32:   ) { }",
          "35:     return this.httpClientService.post(",
          "36:       'shipperClusterServiceConfiguration',",
          "37:       configuration.configuration,",
          "",
          "[Removed Lines]",
          "34:   addConfiguration(configuration: ShipperClusterServiceConfigurationModel): Observable<ShipperClusterServiceConfigurationModel | Error> {",
          "",
          "[Added Lines]",
          "34:   createResponseWithConfigBody(configuration: ShipperClusterServiceConfigurationModel, originalResponse?: Response): Response {",
          "35:     return new Response(",
          "36:       new ResponseOptions({",
          "37:         body: configuration,",
          "38:         status: originalResponse ? originalResponse.status : null,",
          "39:         statusText: originalResponse ? originalResponse.statusText : null,",
          "40:         headers: originalResponse ? originalResponse.headers : null,",
          "41:         type: originalResponse ? originalResponse.type : ResponseType.Basic,",
          "42:         url: originalResponse ? originalResponse.url : ''",
          "43:       })",
          "44:     );",
          "45:   }",
          "47:   addConfiguration(configuration: ShipperClusterServiceConfigurationModel): Observable<Response | Error> {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "40:         cluster: configuration.cluster,",
          "41:         service: configuration.service",
          "42:       })",
          "48:       });",
          "49:   }",
          "52:     return this.httpClientService.put(",
          "53:       'shipperClusterServiceConfiguration',",
          "54:       configuration.configuration,",
          "",
          "[Removed Lines]",
          "43:       .map((response: Response): ShipperClusterServiceConfigurationModel => {",
          "44:         return configuration;",
          "45:       })",
          "46:       .catch((error: Response): Observable<Error> => {",
          "47:         return Observable.of(new Error(error.json().message || ''));",
          "51:   updateConfiguration(configuration: ShipperClusterServiceConfigurationModel): Observable<ShipperClusterServiceConfigurationModel | Error> {",
          "",
          "[Added Lines]",
          "56:       .map((response: Response): Response => this.createResponseWithConfigBody(configuration, response))",
          "57:       .catch((error: Response): Observable<Response> => {",
          "58:         return Observable.of(error);",
          "62:   updateConfiguration(configuration: ShipperClusterServiceConfigurationModel): Observable<Response> {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "57:         cluster: configuration.cluster,",
          "58:         service: configuration.service",
          "59:       })",
          "65:       });",
          "66:   }",
          "",
          "[Removed Lines]",
          "60:       .map((response: Response): ShipperClusterServiceConfigurationModel => {",
          "61:         return configuration;",
          "62:       })",
          "63:       .catch((error: Response): Observable<Error> => {",
          "64:         return Observable.of(new Error(error.json().message || ''));",
          "",
          "[Added Lines]",
          "71:       .map((response: Response): Response => this.createResponseWithConfigBody(configuration, response))",
          "72:       .catch((error: Response): Observable<Response> => {",
          "73:         return Observable.of(error);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "441d8f81cb4f89138aa2aedf993ad956527b0f13",
      "candidate_info": {
        "commit_hash": "441d8f81cb4f89138aa2aedf993ad956527b0f13",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/441d8f81cb4f89138aa2aedf993ad956527b0f13",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts"
        ],
        "message": "[AMBARI-24424] [Log Search UI] Align the time histogram chart axis (#2034)\n\n(cherry picked from commit 3d285e2b660cc664a28ed027695a77abc3dc2ebb)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:   }",
          "111:   protected setXScaleDomain(data: GraphScaleItem[]): void {",
          "113:   }",
          "",
          "[Removed Lines]",
          "112:     this.xScale.domain(d3.extent(data, item => item.tick)).nice();",
          "",
          "[Added Lines]",
          "112:     this.xScale.domain(d3.extent(data, item => item.tick)).nice().domain();",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/components/time-histogram/time-histogram.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     const columnWidth = this.columnWidth[this.chartTimeGap.unit] || this.columnWidth.base;",
          "77:     this.drawYAxis();",
          "",
          "[Removed Lines]",
          "76:     this.drawXAxis(null, (columnWidth / 2) + 2);",
          "",
          "[Added Lines]",
          "76:     this.drawXAxis();",
          "",
          "---------------"
        ]
      }
    }
  ]
}