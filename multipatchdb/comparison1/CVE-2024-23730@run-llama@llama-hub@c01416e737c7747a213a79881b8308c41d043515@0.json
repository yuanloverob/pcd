{
  "cve_id": "CVE-2024-23730",
  "cve_desc": "The OpenAPI and ChatGPT plugin loaders in LlamaHub (aka llama-hub) before 0.0.67 allow attackers to execute arbitrary code because safe_load is not used for YAML.",
  "repo": "run-llama/llama-hub",
  "patch_hash": "c01416e737c7747a213a79881b8308c41d043515",
  "patch_info": {
    "commit_hash": "c01416e737c7747a213a79881b8308c41d043515",
    "repo": "run-llama/llama-hub",
    "commit_url": "https://github.com/run-llama/llama-hub/commit/c01416e737c7747a213a79881b8308c41d043515",
    "files": [
      "llama_hub/tools/chatgpt_plugin/README.md",
      "llama_hub/tools/chatgpt_plugin/base.py",
      "llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
      "llama_hub/tools/notebooks/openapi_and_requests.ipynb",
      "llama_hub/tools/openapi/README.md",
      "llama_hub/tools/openapi/base.py"
    ],
    "message": "use safe_load for yaml (#841)",
    "before_after_code_files": [
      "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
      "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
      "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
      "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
    ]
  },
  "patch_diff": {
    "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py": [
      "File: llama_hub/tools/chatgpt_plugin/base.py -> llama_hub/tools/chatgpt_plugin/base.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "31:             pass",
      "32:         elif manifest_url:",
      "33:             response = requests.get(manifest_url).text",
      "35:         else:",
      "36:             raise ValueError(\"You must provide either a manifest or a manifest_url\")",
      "",
      "[Removed Lines]",
      "34:             manifest = yaml.load(response, Loader=yaml.Loader)",
      "",
      "[Added Lines]",
      "34:             manifest = yaml.safe_load(response)",
      "",
      "---------------"
    ],
    "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb": [
      "File: llama_hub/tools/notebooks/chatgpt_plugin.ipynb -> llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:     \"f = requests.get(\\n\",",
      "28:     \"    \\\"https://raw.githubusercontent.com/sisbell/chatgpt-plugin-store/main/manifests/today-currency-converter.oiconma.repl.co.json\\\"\\n\",",
      "29:     \").text\\n\",",
      "31:    ]",
      "32:   },",
      "33:   {",
      "",
      "[Removed Lines]",
      "30:     \"manifest = yaml.load(f, Loader=yaml.Loader)\"",
      "",
      "[Added Lines]",
      "30:     \"manifest = yaml.safe_load(f)\"",
      "",
      "---------------"
    ],
    "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb": [
      "File: llama_hub/tools/notebooks/openapi_and_requests.ipynb -> llama_hub/tools/notebooks/openapi_and_requests.ipynb",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:     \"f = requests.get(\\n\",",
      "29:     \"    \\\"https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/openai.com/1.2.0/openapi.yaml\\\"\\n\",",
      "30:     \").text\\n\",",
      "32:    ]",
      "33:   },",
      "34:   {",
      "",
      "[Removed Lines]",
      "31:     \"open_api_spec = yaml.load(f, Loader=yaml.Loader)\"",
      "",
      "[Added Lines]",
      "31:     \"open_api_spec = yaml.safe_load(f)\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "240:  },",
      "241:  \"nbformat\": 4,",
      "242:  \"nbformat_minor\": 5",
      "",
      "[Removed Lines]",
      "243: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py": [
      "File: llama_hub/tools/openapi/base.py -> llama_hub/tools/openapi/base.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "26:             pass",
      "27:         elif url:",
      "28:             response = requests.get(url).text",
      "30:         else:",
      "31:             raise ValueError(\"You must provide a url or OpenAPI spec as a dict\")",
      "",
      "[Removed Lines]",
      "29:             spec = yaml.load(response, Loader=yaml.Loader)",
      "",
      "[Added Lines]",
      "29:             spec = yaml.safe_load(response)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9dc9c21a5c6d0226d1d2101c3121d4f085743d52",
      "candidate_info": {
        "commit_hash": "9dc9c21a5c6d0226d1d2101c3121d4f085743d52",
        "repo": "run-llama/llama-hub",
        "commit_url": "https://github.com/run-llama/llama-hub/commit/9dc9c21a5c6d0226d1d2101c3121d4f085743d52",
        "files": [
          "llama_hub/tools/chatgpt_plugin/README.md",
          "llama_hub/tools/chatgpt_plugin/base.py",
          "llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "llama_hub/tools/openapi/README.md",
          "llama_hub/tools/openapi/base.py"
        ],
        "message": "use safe_load for yaml",
        "before_after_code_files": [
          "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
          "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/run-llama/llama-hub/pull/841"
        ],
        "olp_code_files": {
          "patch": [
            "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
            "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
            "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
            "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
          ],
          "candidate": [
            "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
            "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
            "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
            "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
          ]
        }
      },
      "candidate_diff": {
        "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py": [
          "File: llama_hub/tools/chatgpt_plugin/base.py -> llama_hub/tools/chatgpt_plugin/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:             pass",
          "32:         elif manifest_url:",
          "33:             response = requests.get(manifest_url).text",
          "35:         else:",
          "36:             raise ValueError(\"You must provide either a manifest or a manifest_url\")",
          "",
          "[Removed Lines]",
          "34:             manifest = yaml.load(response, Loader=yaml.Loader)",
          "",
          "[Added Lines]",
          "34:             manifest = yaml.safe_load(response)",
          "",
          "---------------"
        ],
        "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb": [
          "File: llama_hub/tools/notebooks/chatgpt_plugin.ipynb -> llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     \"f = requests.get(\\n\",",
          "28:     \"    \\\"https://raw.githubusercontent.com/sisbell/chatgpt-plugin-store/main/manifests/today-currency-converter.oiconma.repl.co.json\\\"\\n\",",
          "29:     \").text\\n\",",
          "31:    ]",
          "32:   },",
          "33:   {",
          "",
          "[Removed Lines]",
          "30:     \"manifest = yaml.load(f, Loader=yaml.Loader)\"",
          "",
          "[Added Lines]",
          "30:     \"manifest = yaml.safe_load(f)\"",
          "",
          "---------------"
        ],
        "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb": [
          "File: llama_hub/tools/notebooks/openapi_and_requests.ipynb -> llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     \"f = requests.get(\\n\",",
          "29:     \"    \\\"https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/openai.com/1.2.0/openapi.yaml\\\"\\n\",",
          "30:     \").text\\n\",",
          "32:    ]",
          "33:   },",
          "34:   {",
          "",
          "[Removed Lines]",
          "31:     \"open_api_spec = yaml.load(f, Loader=yaml.Loader)\"",
          "",
          "[Added Lines]",
          "31:     \"open_api_spec = yaml.safe_load(f)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240:  },",
          "241:  \"nbformat\": 4,",
          "242:  \"nbformat_minor\": 5",
          "",
          "[Removed Lines]",
          "243: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py": [
          "File: llama_hub/tools/openapi/base.py -> llama_hub/tools/openapi/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:             pass",
          "27:         elif url:",
          "28:             response = requests.get(url).text",
          "30:         else:",
          "31:             raise ValueError(\"You must provide a url or OpenAPI spec as a dict\")",
          "",
          "[Removed Lines]",
          "29:             spec = yaml.load(response, Loader=yaml.Loader)",
          "",
          "[Added Lines]",
          "29:             spec = yaml.safe_load(response)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4b4c568f89082a6b7fcf6797061a8c238db7327",
      "candidate_info": {
        "commit_hash": "c4b4c568f89082a6b7fcf6797061a8c238db7327",
        "repo": "run-llama/llama-hub",
        "commit_url": "https://github.com/run-llama/llama-hub/commit/c4b4c568f89082a6b7fcf6797061a8c238db7327",
        "files": [
          "llama_hub/tools/chatgpt_plugin/README.md",
          "llama_hub/tools/chatgpt_plugin/__init__.py",
          "llama_hub/tools/chatgpt_plugin/base.py",
          "llama_hub/tools/library.json",
          "llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "llama_hub/tools/openapi/README.md",
          "llama_hub/tools/openapi/base.py"
        ],
        "message": "Adding ChatGPT plugin tool (#405)",
        "before_after_code_files": [
          "llama_hub/tools/chatgpt_plugin/__init__.py||llama_hub/tools/chatgpt_plugin/__init__.py",
          "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
          "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
            "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
            "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
            "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
          ],
          "candidate": [
            "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py",
            "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
            "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb",
            "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py"
          ]
        }
      },
      "candidate_diff": {
        "llama_hub/tools/chatgpt_plugin/__init__.py||llama_hub/tools/chatgpt_plugin/__init__.py": [
          "File: llama_hub/tools/chatgpt_plugin/__init__.py -> llama_hub/tools/chatgpt_plugin/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"init.py\"\"\"",
          "",
          "---------------"
        ],
        "llama_hub/tools/chatgpt_plugin/base.py||llama_hub/tools/chatgpt_plugin/base.py": [
          "File: llama_hub/tools/chatgpt_plugin/base.py -> llama_hub/tools/chatgpt_plugin/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"ChatGPT Plugiun Tool.\"\"\"",
          "3: from typing import List, Optional",
          "5: from llama_index.readers.schema.base import Document",
          "6: from llama_index.tools.tool_spec.base import BaseToolSpec",
          "7: from llama_hub.tools.openapi.base import OpenAPIToolSpec",
          "8: import requests",
          "9: import yaml",
          "11: class ChatGPTPluginToolSpec(BaseToolSpec):",
          "12:     \"\"\"ChatGPT Plugin Tool",
          "14:     This tool leverages the OpenAPI tool spec to automatically load ChatGPT",
          "15:     plugins from a manifest file.",
          "16:     You should also provide the Requests tool spec to allow the Agent to make calls to the OpenAPI endpoints",
          "17:     To use endpoints with authorization, use the Requests tool spec with the authorization headers",
          "18:     \"\"\"",
          "20:     spec_functions = ['load_openapi_spec', 'describe_plugin']",
          "22:     def __init__(self, manifest: Optional[dict] = None, manifest_url: Optional[str] = None):",
          "23:         if manifest and manifest_url:",
          "24:             raise ValueError('You cannot provide both a manifest and a manifest_url')",
          "25:         elif manifest:",
          "26:             pass",
          "27:         elif manifest_url:",
          "28:             response = requests.get(manifest_url).text",
          "29:             manifest = yaml.load(response, Loader=yaml.Loader)",
          "30:         else:",
          "31:             raise ValueError('You must provide either a manifest or a manifest_url')",
          "33:         if manifest['api']['type'] != 'openapi':",
          "34:             raise ValueError(f'API type must be \"openapi\", not \"{manifest[\"api\"][\"type\"]}\"')",
          "36:         if manifest['auth']['type'] != 'none':",
          "37:             raise ValueError(f'Authentication cannot be supported for ChatGPT plugins')",
          "39:         self.openapi = OpenAPIToolSpec(url=manifest['api']['url'])",
          "41:         self.plugin_description = f\"\"\"",
          "42:             'human_description': {manifest['description_for_human']}",
          "43:             'model_description': {manifest['description_for_model']}",
          "44:         \"\"\"",
          "46:     def load_openapi_spec(self) -> List[Document]:",
          "47:         \"\"\"",
          "48:         You are an AI agent specifically designed to retrieve information by making web requests to an API based on an OpenAPI specification.",
          "50:         Here's a step-by-step guide to assist you in answering questions:",
          "52:         1. Determine the base URL required for making the request",
          "54:         2. Identify the relevant paths necessary to address the question",
          "56:         3. Find the required parameters for making the request",
          "58:         4. Perform the necessary requests to obtain the answer",
          "60:         Returns:",
          "61:             Document: A List of Document objects describing the OpenAPI spec",
          "62:         \"\"\"",
          "63:         return self.openapi.load_openapi_spec()",
          "65:     def describe_plugin(self) -> List[Document]:",
          "66:         return self.plugin_description",
          "",
          "---------------"
        ],
        "llama_hub/tools/notebooks/chatgpt_plugin.ipynb||llama_hub/tools/notebooks/chatgpt_plugin.ipynb": [
          "File: llama_hub/tools/notebooks/chatgpt_plugin.ipynb -> llama_hub/tools/notebooks/chatgpt_plugin.ipynb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {",
          "2:  \"cells\": [",
          "3:   {",
          "4:    \"cell_type\": \"code\",",
          "5:    \"execution_count\": 1,",
          "6:    \"id\": \"5f976f46-9d51-407e-8eeb-e46cfdd22ae1\",",
          "7:    \"metadata\": {},",
          "8:    \"outputs\": [],",
          "9:    \"source\": [",
          "10:     \"import openai\\n\",",
          "11:     \"openai.api_key = 'sk-your-key'\\n\",",
          "12:     \"from llama_index.agent import OpenAIAgent\"",
          "13:    ]",
          "14:   },",
          "15:   {",
          "16:    \"cell_type\": \"code\",",
          "17:    \"execution_count\": 2,",
          "18:    \"id\": \"538e1519-2cfe-40f4-a861-65139156d2fe\",",
          "19:    \"metadata\": {},",
          "20:    \"outputs\": [],",
          "21:    \"source\": [",
          "22:     \"# Load the Plugin\\n\",",
          "23:     \"import requests\\n\",",
          "24:     \"import yaml\\n\",",
          "25:     \"f = requests.get('https://raw.githubusercontent.com/sisbell/chatgpt-plugin-store/main/manifests/today-currency-converter.oiconma.repl.co.json').text\\n\",",
          "26:     \"manifest = yaml.load(f, Loader=yaml.Loader)\"",
          "27:    ]",
          "28:   },",
          "29:   {",
          "30:    \"cell_type\": \"code\",",
          "31:    \"execution_count\": 3,",
          "32:    \"id\": \"b988f94e-6559-4404-9ba8-b41d4e4da770\",",
          "33:    \"metadata\": {},",
          "34:    \"outputs\": [],",
          "35:    \"source\": [",
          "36:     \"from llama_hub.tools.chatgpt_plugin.base import ChatGPTPluginToolSpec\\n\",",
          "37:     \"from llama_hub.tools.requests.base import RequestsToolSpec\\n\",",
          "38:     \"\\n\",",
          "39:     \"requests_spec = RequestsToolSpec()\\n\",",
          "40:     \"plugin_spec = ChatGPTPluginToolSpec(manifest)\\n\",",
          "41:     \"# OR\\n\",",
          "42:     \"plugin_spec = ChatGPTPluginToolSpec(manifest_url='https://raw.githubusercontent.com/sisbell/chatgpt-plugin-store/main/manifests/today-currency-converter.oiconma.repl.co.json')\"",
          "43:    ]",
          "44:   },",
          "45:   {",
          "46:    \"cell_type\": \"code\",",
          "47:    \"execution_count\": 4,",
          "48:    \"id\": \"475cd741-e53e-4e9c-857b-6cb52641af0d\",",
          "49:    \"metadata\": {},",
          "50:    \"outputs\": [],",
          "51:    \"source\": [",
          "52:     \"agent = OpenAIAgent.from_tools([*plugin_spec.to_tool_list(), *requests_spec.to_tool_list()], verbose=True)\"",
          "53:    ]",
          "54:   },",
          "55:   {",
          "56:    \"cell_type\": \"code\",",
          "57:    \"execution_count\": 5,",
          "58:    \"id\": \"88175b8a-0345-44d2-8b78-983d7e7415bb\",",
          "59:    \"metadata\": {},",
          "60:    \"outputs\": [",
          "61:     {",
          "62:      \"name\": \"stdout\",",
          "63:      \"output_type\": \"stream\",",
          "64:      \"text\": [",
          "65:       \"=== Calling Function ===\\n\",",
          "66:       \"Calling function: describe_plugin with args: {}\\n\",",
          "67:       \"Got output: \\n\",",
          "68:       \"            'human_description': Converts currency values based on the latest exchange rates.\\n\",",
          "69:       \"            'model_description': Converts currency values based on the latest exchange rates.\\n\",",
          "70:       \"        \\n\",",
          "71:       \"========================\\n\",",
          "72:       \"The OpenAPI plugin that was loaded is a plugin that converts currency values based on the latest exchange rates. It provides functionality to retrieve exchange rates and perform currency conversions.\\n\"",
          "73:      ]",
          "74:     }",
          "75:    ],",
          "76:    \"source\": [",
          "77:     \"print(agent.chat(\\\"Can you give me info on the OpenAPI plugin that was loaded\\\"))\"",
          "78:    ]",
          "79:   },",
          "80:   {",
          "81:    \"cell_type\": \"code\",",
          "82:    \"execution_count\": 6,",
          "83:    \"id\": \"39e42a58-a6db-47f0-8bd7-a4c3728f0839\",",
          "84:    \"metadata\": {},",
          "85:    \"outputs\": [",
          "86:     {",
          "87:      \"name\": \"stdout\",",
          "88:      \"output_type\": \"stream\",",
          "89:      \"text\": [",
          "90:       \"=== Calling Function ===\\n\",",
          "91:       \"Calling function: load_openapi_spec with args: {}\\n\",",
          "92:       \"Got output: [Document(id_='bd92f5ee-3c31-4938-a75f-004d6e451181', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={}, hash='b43045dea83f8c9bbefe5516329054c5ec962524078a7c9f6055af71666dd4bb', text=\\\"{'servers': [{'url': 'https://today-currency-converter.oiconma.repl.co/'}], 'description': 'Allows users to convert currency values based on the latest exchange rates.', 'endpoints': [('GET /currency-converter', None, {'parameters': [{'name': 'from', 'in': 'query', 'description': 'The currency to convert from', 'required': True, 'schema': {'type': 'string'}}, {'name': 'to', 'in': 'query', 'description': 'The currency to convert to', 'required': True, 'schema': {'type': 'string'}}, {'name': 'amount', 'in': 'query', 'description': 'The amount to convert', 'required': True, 'schema': {'type': 'string'}}], 'responses': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'result': {'type': 'object', 'properties': {'info': {'type': 'object', 'properties': {'rate': {'type': 'number', 'format': 'float', 'description': 'The conversion rate between the two currencies'}}}, 'date': {'type': 'string', 'description': 'The date of the conversion'}, 'result': {'type': 'number', 'format': 'float', 'description': 'The converted amount'}}}}}}}}})]}\\\", start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\\\n\\\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\\\n')]\\n\",",
          "93:       \"========================\\n\",",
          "94:       \"=== Calling Function ===\\n\",",
          "95:       \"Calling function: get_request with args: {\\n\",",
          "96:       \"  \\\"url\\\": \\\"https://today-currency-converter.oiconma.repl.co/currency-converter?from=EUR&to=CAD&amount=100\\\"\\n\",",
          "97:       \"}\\n\",",
          "98:       \"Got output: {'date': '2023-07-24', 'historical': False, 'info': {'rate': 1.469716}, 'motd': {'msg': 'If you or your company use this project or like what we doing, please consider backing us so we can continue maintaining and evolving this project.', 'url': 'https://exchangerate.host/#/donate'}, 'query': {'amount': 100, 'from': 'EUR', 'to': 'CAD'}, 'result': 146.971621, 'success': True}\\n\",",
          "99:       \"========================\\n\",",
          "100:       \"The conversion of 100 euros to CAD is 146.971621 CAD.\\n\"",
          "101:      ]",
          "102:     }",
          "103:    ],",
          "104:    \"source\": [",
          "105:     \"print(agent.chat(\\\"Can you convert 100 euros to CAD\\\"))\"",
          "106:    ]",
          "107:   },",
          "108:   {",
          "109:    \"cell_type\": \"code\",",
          "110:    \"execution_count\": null,",
          "111:    \"id\": \"b11e0621-b486-4f03-8c91-b16029a928c3\",",
          "112:    \"metadata\": {},",
          "113:    \"outputs\": [],",
          "114:    \"source\": []",
          "115:   }",
          "116:  ],",
          "117:  \"metadata\": {",
          "118:   \"kernelspec\": {",
          "119:    \"display_name\": \"Python 3 (ipykernel)\",",
          "120:    \"language\": \"python\",",
          "121:    \"name\": \"python3\"",
          "122:   },",
          "123:   \"language_info\": {",
          "124:    \"codemirror_mode\": {",
          "125:     \"name\": \"ipython\",",
          "126:     \"version\": 3",
          "127:    },",
          "128:    \"file_extension\": \".py\",",
          "129:    \"mimetype\": \"text/x-python\",",
          "130:    \"name\": \"python\",",
          "131:    \"nbconvert_exporter\": \"python\",",
          "132:    \"pygments_lexer\": \"ipython3\",",
          "133:    \"version\": \"3.9.12\"",
          "134:   }",
          "135:  },",
          "136:  \"nbformat\": 4,",
          "137:  \"nbformat_minor\": 5",
          "138: }",
          "",
          "---------------"
        ],
        "llama_hub/tools/notebooks/openapi_and_requests.ipynb||llama_hub/tools/notebooks/openapi_and_requests.ipynb": [
          "File: llama_hub/tools/notebooks/openapi_and_requests.ipynb -> llama_hub/tools/notebooks/openapi_and_requests.ipynb",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     \"from llama_index.tools.tool_spec.load_and_search.base import LoadAndSearchToolSpec\\n\",",
          "40:     \"\\n\",",
          "41:     \"open_spec = OpenAPIToolSpec(open_api_spec)\\n\",",
          "42:     \"requests_spec = RequestsToolSpec({\\n\",",
          "43:     \"            \\\"Authorization\\\": \\\"Bearer sk-your-key\\\",\\n\",",
          "44:     \"            \\\"Content-Type\\\": \\\"application/json\\\",\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     \"# OR \\n\",",
          "43:     \"open_spec = OpenAPIToolSpec(url='https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/openai.com/1.2.0/openapi.yaml')\\n\",",
          "44:     \"\\n\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:    \"name\": \"python\",",
          "221:    \"nbconvert_exporter\": \"python\",",
          "222:    \"pygments_lexer\": \"ipython3\",",
          "224:   }",
          "225:  },",
          "226:  \"nbformat\": 4,",
          "",
          "[Removed Lines]",
          "223:    \"version\": \"3.10.10\"",
          "",
          "[Added Lines]",
          "226:    \"version\": \"3.9.12\"",
          "",
          "---------------"
        ],
        "llama_hub/tools/openapi/base.py||llama_hub/tools/openapi/base.py": [
          "File: llama_hub/tools/openapi/base.py -> llama_hub/tools/openapi/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: \"\"\"OpenAPI Tool.\"\"\"",
          "5: from llama_index.readers.schema.base import Document",
          "6: from llama_index.tools.tool_spec.base import BaseToolSpec",
          "9: class OpenAPIToolSpec(BaseToolSpec):",
          "10:     \"\"\"OpenAPI Tool",
          "",
          "[Removed Lines]",
          "3: from typing import List",
          "",
          "[Added Lines]",
          "3: from typing import List, Optional",
          "7: import requests",
          "8: import yaml",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     spec_functions = [\"load_openapi_spec\"]",
          "21:     def load_openapi_spec(self) -> List[Document]:",
          "22:         \"\"\"",
          "",
          "[Removed Lines]",
          "18:     def __init__(self, spec: dict):",
          "19:         self.spec = Document(text=str(self.process_api_spec(spec)))",
          "",
          "[Added Lines]",
          "19:     def __init__(self, spec: Optional[dict] = None, url: Optional[str] = None):",
          "20:         if spec and url:",
          "21:             raise ValueError(\"Only provide one of OpenAPI dict or url\")",
          "22:         elif spec:",
          "23:             pass",
          "24:         elif url:",
          "25:             response = requests.get(url).text",
          "26:             spec = yaml.load(response, Loader=yaml.Loader)",
          "27:         else:",
          "28:             raise ValueError(\"You must provide a url or OpenAPI spec as a dict\")",
          "30:         parsed_spec = self.process_api_spec(spec)",
          "31:         self.spec = Document(text=str(parsed_spec))",
          "",
          "---------------"
        ]
      }
    }
  ]
}