{
  "cve_id": "CVE-2014-0035",
  "cve_desc": "The SymmetricBinding in Apache CXF before 2.6.13 and 2.7.x before 2.7.10, when EncryptBeforeSigning is enabled and the UsernameToken policy is set to an EncryptedSupportingToken, transmits the UsernameToken in cleartext, which allows remote attackers to obtain sensitive information by sniffing the network.",
  "repo": "apache/cxf",
  "patch_hash": "2d2fd1bf67dc2247b6aca31b83a571d865fad1c9",
  "patch_info": {
    "commit_hash": "2d2fd1bf67dc2247b6aca31b83a571d865fad1c9",
    "repo": "apache/cxf",
    "commit_url": "https://github.com/apache/cxf/commit/2d2fd1bf67dc2247b6aca31b83a571d865fad1c9",
    "files": [
      "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client/client.xml",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/server.xml"
    ],
    "message": "Merged revisions 1564731 via  git cherry-pick from https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes\n\n........\n  r1564731 | coheigea | 2014-02-05 12:15:51 +0000 (Wed, 05 Feb 2014) | 9 lines\n\n  Another EncryptBeforeSigning fix\n\n  Conflicts:\n  \tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl\n  \tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client.xml\n  \tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server.xml\n  \tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/stax-server.xml\n\n........\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/branches/2.6.x-fixes@1564738 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
    ]
  },
  "patch_diff": {
    "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java": [
      "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "262:                         this.addDerivedKeyElement(secondRefList);",
      "263:                     } else if (!secondEncrParts.isEmpty()) {",
      "266:                         this.addDerivedKeyElement(secondRefList);",
      "267:                     }",
      "268:                 }",
      "",
      "[Removed Lines]",
      "265:                         secondRefList = ((WSSecEncrypt)encr).encryptForRef(null, encrParts);",
      "",
      "[Added Lines]",
      "265:                         secondRefList = ((WSSecEncrypt)encr).encryptForRef(null, secondEncrParts);",
      "",
      "---------------"
    ],
    "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
      "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "338:         bus.shutdown(true);",
      "339:     }",
      "341:     @org.junit.Test",
      "342:     public void testSymmetricProtectTokens() throws Exception {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "341:     @org.junit.Test",
      "342:     public void testSymmetricUsernameToken() throws Exception {",
      "344:         SpringBusFactory bf = new SpringBusFactory();",
      "345:         URL busFile = X509TokenTest.class.getResource(\"client/client.xml\");",
      "347:         Bus bus = bf.createBus(busFile.toString());",
      "348:         SpringBusFactory.setDefaultBus(bus);",
      "349:         SpringBusFactory.setThreadDefaultBus(bus);",
      "351:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
      "352:         Service service = Service.create(wsdl, SERVICE_QNAME);",
      "353:         QName portQName = new QName(NAMESPACE, \"DoubleItSymmetricUsernameTokenPort\");",
      "354:         DoubleItPortType x509Port =",
      "355:                 service.getPort(portQName, DoubleItPortType.class);",
      "356:         updateAddressPort(x509Port, PORT);",
      "358:         x509Port.doubleIt(25);",
      "360:         ((java.io.Closeable)x509Port).close();",
      "361:         bus.shutdown(true);",
      "362:     }",
      "",
      "---------------"
    ],
    "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
      "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
      "--- Hunk 1 ---",
      "[Context before]",
      "258:             </wsdl:fault>",
      "259:         </wsdl:operation>",
      "260:     </wsdl:binding>",
      "261:     <wsdl:binding name=\"DoubleItSymmetricProtectTokensBinding\" type=\"tns:DoubleItPortType\">",
      "262:         <wsp:PolicyReference URI=\"#DoubleItSymmetricProtectTokensPolicy\" />",
      "263:         <soap:binding style=\"document\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "261:     <wsdl:binding name=\"DoubleItSymmetricUsernameTokenBinding\" type=\"tns:DoubleItPortType\">",
      "262:         <wsp:PolicyReference URI=\"#DoubleItSymmetricUsernameTokenPolicy\"/>",
      "263:         <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>",
      "264:         <wsdl:operation name=\"DoubleIt\">",
      "265:             <soap:operation soapAction=\"\"/>",
      "266:             <wsdl:input>",
      "267:                 <soap:body use=\"literal\"/>",
      "268:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Input_Policy\"/>",
      "269:             </wsdl:input>",
      "270:             <wsdl:output>",
      "271:                 <soap:body use=\"literal\"/>",
      "272:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Output_Policy\"/>",
      "273:             </wsdl:output>",
      "274:             <wsdl:fault name=\"DoubleItFault\">",
      "275:                 <soap:body use=\"literal\" name=\"DoubleItFault\"/>",
      "276:             </wsdl:fault>",
      "277:         </wsdl:operation>",
      "278:     </wsdl:binding>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "469:                    binding=\"tns:DoubleItAsymmetricUsernameTokenBinding\">",
      "470:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricUsernameToken\" />",
      "471:         </wsdl:port>",
      "472:         <wsdl:port name=\"DoubleItSymmetricProtectTokensPort\"",
      "473:                    binding=\"tns:DoubleItSymmetricProtectTokensBinding\">",
      "474:             <soap:address location=\"http://localhost:9001/DoubleItX509SymmetricProtect\" />",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490:         <wsdl:port name=\"DoubleItSymmetricUsernameTokenPort\" binding=\"tns:DoubleItSymmetricUsernameTokenBinding\">",
      "491:             <soap:address location=\"http://localhost:9001/DoubleItX509SymmetricUsernameToken\"/>",
      "492:         </wsdl:port>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "953:       </wsp:ExactlyOne>",
      "954:     </wsp:Policy>",
      "956:     <wsp:Policy wsu:Id=\"DoubleItSymmetricProtectTokensPolicy\">",
      "957:         <wsp:ExactlyOne>",
      "958:             <wsp:All>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "975:     </wsp:Policy>",
      "977:     <wsp:Policy wsu:Id=\"DoubleItSymmetricUsernameTokenPolicy\">",
      "978:         <wsp:ExactlyOne>",
      "979:             <wsp:All>",
      "980:                 <sp:SymmetricBinding>",
      "981:                     <wsp:Policy>",
      "982:                         <sp:ProtectionToken>",
      "983:                             <wsp:Policy>",
      "984:                                 <sp:X509Token sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never\">",
      "985:                                     <wsp:Policy>",
      "986:                                         <sp:WssX509V3Token11/>",
      "987:                                         <sp:RequireThumbprintReference/>",
      "988:                                     </wsp:Policy>",
      "989:                                 </sp:X509Token>",
      "990:                             </wsp:Policy>",
      "991:                         </sp:ProtectionToken>",
      "992:                         <sp:Layout>",
      "993:                             <wsp:Policy>",
      "994:                                 <sp:Lax/>",
      "995:                             </wsp:Policy>",
      "996:                         </sp:Layout>",
      "997:                         <sp:IncludeTimestamp/>",
      "998:                         <sp:OnlySignEntireHeadersAndBody/>",
      "999:                         <sp:EncryptBeforeSigning/>",
      "1000:                         <sp:AlgorithmSuite>",
      "1001:                             <wsp:Policy>",
      "1002:                                 <sp:Basic128/>",
      "1003:                             </wsp:Policy>",
      "1004:                         </sp:AlgorithmSuite>",
      "1005:                     </wsp:Policy>",
      "1006:                 </sp:SymmetricBinding>",
      "1007:                 <sp:EncryptedSupportingTokens>",
      "1008:                     <wsp:Policy>",
      "1009:                         <sp:UsernameToken sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
      "1010:                             <wsp:Policy>",
      "1011:                                 <sp:WssUsernameToken11/>",
      "1012:                             </wsp:Policy>",
      "1013:                         </sp:UsernameToken>",
      "1014:                     </wsp:Policy>",
      "1015:                 </sp:EncryptedSupportingTokens>",
      "1016:             </wsp:All>",
      "1017:         </wsp:ExactlyOne>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "23584f6cfb8e6868e44b15130b8c9cc6eda76e58",
      "candidate_info": {
        "commit_hash": "23584f6cfb8e6868e44b15130b8c9cc6eda76e58",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/23584f6cfb8e6868e44b15130b8c9cc6eda76e58",
        "files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client/client.xml",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/server.xml"
        ],
        "message": "[CXF-5046] - EncryptedSupportingTokens used with EncryptBeforeSigning does not encrypt Username token\n\nConflicts:\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/StaxAsymmetricBindingHandler.java\n\tsystests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/StaxX509TokenTest.java\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/stax-server.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes@1487839 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ],
          "candidate": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ]
        }
      },
      "candidate_diff": {
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:     protected Element bottomUpElement;",
          "167:     protected Element topDownElement;",
          "168:     protected Element bstElement;",
          "170:     private Element lastSupportingTokenElement;",
          "172:     private Element lastDerivedKeyElement;",
          "174:     public AbstractBindingBuilder(",
          "",
          "[Removed Lines]",
          "171:     private Element lastEncryptedKeyElement;",
          "",
          "[Added Lines]",
          "169:     protected Element lastEncryptedKeyElement;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "187:         message.getExchange().put(WSHandlerConstants.SEND_SIGV, signatures);",
          "188:     }",
          "191:         if (sib.getNextSibling() == null) {",
          "192:             secHeader.getSecurityHeader().appendChild(child);",
          "193:         } else {",
          "",
          "[Removed Lines]",
          "190:     private void insertAfter(Element child, Element sib) {",
          "",
          "[Added Lines]",
          "190:     protected void insertAfter(Element child, Element sib) {",
          "",
          "---------------"
        ],
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:                 doEndorse();",
          "309:             }",
          "312:         }",
          "313:     }",
          "318:         if (abinding.isSignatureProtection()) {",
          "322:             if (mainSigId != null) {",
          "",
          "[Removed Lines]",
          "311:             checkForSignatureProtection(encryptionToken, encrBase);",
          "316:     private void checkForSignatureProtection(Token encryptionToken, WSSecBase encrBase) {",
          "319:             List<WSEncryptionPart> secondEncrParts = new ArrayList<WSEncryptionPart>();",
          "",
          "[Added Lines]",
          "311:             encryptTokensInSecurityHeader(encryptionToken, encrBase);",
          "316:     private void encryptTokensInSecurityHeader(Token encryptionToken, WSSecBase encrBase) {",
          "317:         List<WSEncryptionPart> secondEncrParts = new ArrayList<WSEncryptionPart>();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:             if (sigConfList != null && !sigConfList.isEmpty()) {",
          "329:                 secondEncrParts.addAll(sigConfList);",
          "330:             }",
          "352:                     this.insertBeforeBottomUp(secondRefList);",
          "357:                 }",
          "358:             }",
          "360:     }",
          "362:     private WSSecBase doEncryption(TokenWrapper recToken,",
          "",
          "[Removed Lines]",
          "332:             if (isRequestor()) {",
          "333:                 secondEncrParts.addAll(encryptedTokensList);",
          "334:             }",
          "336:             if (encryptionToken.isDerivedKeys() && !secondEncrParts.isEmpty()",
          "337:                 && encrBase instanceof WSSecDKEncrypt) {",
          "338:                 try {",
          "339:                     Element secondRefList",
          "340:                         = ((WSSecDKEncrypt)encrBase).encryptForExternalRef(null, secondEncrParts);",
          "341:                     ((WSSecDKEncrypt)encrBase).addExternalRefElement(secondRefList, secHeader);",
          "343:                 } catch (WSSecurityException ex) {",
          "344:                     throw new Fault(ex);",
          "345:                 }",
          "346:             } else if (!secondEncrParts.isEmpty() && encrBase instanceof WSSecEncrypt) {",
          "347:                 try {",
          "349:                     Element secondRefList = saaj.getSOAPPart()",
          "350:                         .createElementNS(WSConstants.ENC_NS,",
          "351:                                          WSConstants.ENC_PREFIX + \":ReferenceList\");",
          "353:                     ((WSSecEncrypt)encrBase).encryptForRef(secondRefList, secondEncrParts);",
          "355:                 } catch (WSSecurityException ex) {",
          "356:                     throw new Fault(ex);",
          "359:         }",
          "",
          "[Added Lines]",
          "332:         }",
          "335:         if (isRequestor()) {",
          "336:             secondEncrParts.addAll(encryptedTokensList);",
          "337:         }",
          "339:         if (secondEncrParts.isEmpty()) {",
          "340:             return;",
          "341:         }",
          "344:         if (encryptionToken.isDerivedKeys() && encrBase instanceof WSSecDKEncrypt) {",
          "345:             try {",
          "346:                 Element secondRefList =",
          "347:                     ((WSSecDKEncrypt)encrBase).encryptForExternalRef(null, secondEncrParts);",
          "348:                 ((WSSecDKEncrypt)encrBase).addExternalRefElement(secondRefList, secHeader);",
          "349:             } catch (WSSecurityException ex) {",
          "350:                 throw new Fault(ex);",
          "351:             }",
          "352:         } else if (encrBase instanceof WSSecEncrypt) {",
          "353:             try {",
          "355:                 Element secondRefList = saaj.getSOAPPart()",
          "356:                     .createElementNS(WSConstants.ENC_NS,",
          "357:                                      WSConstants.ENC_PREFIX + \":ReferenceList\");",
          "358:                 if (lastEncryptedKeyElement != null) {",
          "359:                     insertAfter(secondRefList, lastEncryptedKeyElement);",
          "360:                 } else {",
          "363:                 ((WSSecEncrypt)encrBase).encryptForRef(secondRefList, secondEncrParts);",
          "365:             } catch (WSSecurityException ex) {",
          "366:                 throw new Fault(ex);",
          "368:         }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
          "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:         bus.shutdown(true);",
          "281:     }",
          "283:     @org.junit.Test",
          "284:     public void testSymmetricProtectTokens() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:     @org.junit.Test",
          "284:     public void testAsymmetricUsernameToken() throws Exception {",
          "286:         SpringBusFactory bf = new SpringBusFactory();",
          "287:         URL busFile = X509TokenTest.class.getResource(\"client/client.xml\");",
          "289:         Bus bus = bf.createBus(busFile.toString());",
          "290:         SpringBusFactory.setDefaultBus(bus);",
          "291:         SpringBusFactory.setThreadDefaultBus(bus);",
          "293:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
          "294:         Service service = Service.create(wsdl, SERVICE_QNAME);",
          "295:         QName portQName = new QName(NAMESPACE, \"DoubleItAsymmetricUsernameTokenPort\");",
          "296:         DoubleItPortType x509Port =",
          "297:                 service.getPort(portQName, DoubleItPortType.class);",
          "298:         updateAddressPort(x509Port, PORT);",
          "300:         x509Port.doubleIt(25);",
          "302:         ((java.io.Closeable)x509Port).close();",
          "303:         bus.shutdown(true);",
          "304:     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
          "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:             </wsdl:fault>",
          "164:         </wsdl:operation>",
          "165:     </wsdl:binding>",
          "166:     <wsdl:binding name=\"DoubleItSymmetricProtectTokensBinding\" type=\"tns:DoubleItPortType\">",
          "167:         <wsp:PolicyReference URI=\"#DoubleItSymmetricProtectTokensPolicy\" />",
          "168:         <soap:binding style=\"document\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:     <wsdl:binding name=\"DoubleItAsymmetricUsernameTokenBinding\" type=\"tns:DoubleItPortType\">",
          "167:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricUsernameTokenPolicy\" />",
          "168:         <soap:binding style=\"document\"",
          "169:             transport=\"http://schemas.xmlsoap.org/soap/http\" />",
          "170:         <wsdl:operation name=\"DoubleIt\">",
          "171:             <soap:operation soapAction=\"\" />",
          "172:             <wsdl:input>",
          "173:                 <soap:body use=\"literal\" />",
          "174:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Input_Policy\"/>",
          "175:             </wsdl:input>",
          "176:             <wsdl:output>",
          "177:                 <soap:body use=\"literal\" />",
          "178:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Output_Policy\"/>",
          "179:             </wsdl:output>",
          "180:             <wsdl:fault name=\"DoubleItFault\">",
          "181:                 <soap:body use=\"literal\" name=\"DoubleItFault\" />",
          "182:             </wsdl:fault>",
          "183:         </wsdl:operation>",
          "184:     </wsdl:binding>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "354:                    binding=\"tns:DoubleItAsymmetricProtectTokensBinding\">",
          "355:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricProtect\" />",
          "356:         </wsdl:port>",
          "357:         <wsdl:port name=\"DoubleItSymmetricProtectTokensPort\"",
          "358:                    binding=\"tns:DoubleItSymmetricProtectTokensBinding\">",
          "359:             <soap:address location=\"http://localhost:9001/DoubleItX509SymmetricProtect\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "376:         <wsdl:port name=\"DoubleItAsymmetricUsernameTokenPort\"",
          "377:                    binding=\"tns:DoubleItAsymmetricUsernameTokenBinding\">",
          "378:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricUsernameToken\" />",
          "379:         </wsdl:port>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "651:       </wsp:ExactlyOne>",
          "652:     </wsp:Policy>",
          "654:     <wsp:Policy wsu:Id=\"DoubleItSymmetricProtectTokensPolicy\">",
          "655:         <wsp:ExactlyOne>",
          "656:             <wsp:All>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "677:     <wsp:Policy wsu:Id=\"DoubleItAsymmetricUsernameTokenPolicy\">",
          "678:       <wsp:ExactlyOne>",
          "679:          <wsp:All>",
          "680:             <sp:AsymmetricBinding>",
          "681:                <wsp:Policy>",
          "682:                   <sp:InitiatorToken>",
          "683:                      <wsp:Policy>",
          "684:                         <sp:X509Token",
          "685:                            sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
          "686:                            <wsp:Policy>",
          "687:                               <sp:WssX509V3Token10 />",
          "688:                            </wsp:Policy>",
          "689:                         </sp:X509Token>",
          "690:                      </wsp:Policy>",
          "691:                   </sp:InitiatorToken>",
          "692:                   <sp:RecipientToken>",
          "693:                      <wsp:Policy>",
          "694:                         <sp:X509Token",
          "695:                            sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToInitiator\">",
          "696:                            <wsp:Policy>",
          "697:                               <sp:WssX509V3Token10 />",
          "698:                            </wsp:Policy>",
          "699:                         </sp:X509Token>",
          "700:                      </wsp:Policy>",
          "701:                   </sp:RecipientToken>",
          "702:                   <sp:Layout>",
          "703:                      <wsp:Policy>",
          "704:                         <sp:Lax/>",
          "705:                      </wsp:Policy>",
          "706:                   </sp:Layout>",
          "707:                   <sp:IncludeTimestamp/>",
          "708:                   <sp:OnlySignEntireHeadersAndBody/>",
          "709:                   <sp:EncryptBeforeSigning/>",
          "710:                   <sp:AlgorithmSuite>",
          "711:                      <wsp:Policy>",
          "712:                         <sp:Basic128/>",
          "713:                      </wsp:Policy>",
          "714:                   </sp:AlgorithmSuite>",
          "715:                </wsp:Policy>",
          "716:             </sp:AsymmetricBinding>",
          "717:             <sp:EncryptedSupportingTokens>",
          "718:                <wsp:Policy>",
          "719:                     <sp:UsernameToken",
          "720:                        sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
          "721:                        <wsp:Policy>",
          "722:                           <sp:WssUsernameToken11/>",
          "723:                        </wsp:Policy>",
          "724:                     </sp:UsernameToken>",
          "725:                 </wsp:Policy>",
          "726:             </sp:EncryptedSupportingTokens>",
          "727:          </wsp:All>",
          "728:       </wsp:ExactlyOne>",
          "729:     </wsp:Policy>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c08d14a742d5c9705d662aa6692fe1c81b95cabe",
      "candidate_info": {
        "commit_hash": "c08d14a742d5c9705d662aa6692fe1c81b95cabe",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/c08d14a742d5c9705d662aa6692fe1c81b95cabe",
        "files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client.xml",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server.xml"
        ],
        "message": "[CXF-5199] - Using an EncryptBeforeSigning policy with no EncryptedParts/Elements results in no Signature in the request\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/trunk@1513496 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ],
          "candidate": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ]
        }
      },
      "candidate_diff": {
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:         if (encryptionToken != null && encrParts.size() > 0) {",
          "278:             handleEncryptedSignedHeaders(encrParts, sigParts);",
          "296:             try {",
          "298:                     doSignature(initiatorWrapper, sigParts, attached);",
          "299:                 } else if (!isRequestor()) {",
          "301:                     if (recipientSignatureToken == null) {",
          "302:                         recipientSignatureToken = abinding.getRecipientToken();",
          "303:                     }",
          "",
          "[Removed Lines]",
          "277:             WSSecBase encrBase = doEncryption(wrapper, encrParts, true);",
          "280:             if (timestampEl != null) {",
          "281:                 WSEncryptionPart timestampPart =",
          "282:                     convertToEncryptionPart(timestampEl.getElement());",
          "283:                 sigParts.add(timestampPart);",
          "284:             }",
          "286:             if (isRequestor()) {",
          "287:                 try {",
          "288:                     addSupportingTokens(sigParts);",
          "289:                 } catch (WSSecurityException ex) {",
          "290:                     policyNotAsserted(encryptionToken, ex);",
          "291:                 }",
          "292:             } else {",
          "293:                 addSignatureConfirmation(sigParts);",
          "294:             }",
          "297:                 if ((sigParts.size() > 0) && initiatorWrapper != null && isRequestor()) {",
          "300:                     AbstractTokenWrapper recipientSignatureToken = abinding.getRecipientSignatureToken();",
          "",
          "[Added Lines]",
          "276:         WSSecBase encrBase = null;",
          "278:             encrBase = doEncryption(wrapper, encrParts, true);",
          "280:         }",
          "282:         if (timestampEl != null) {",
          "283:             WSEncryptionPart timestampPart =",
          "284:                 convertToEncryptionPart(timestampEl.getElement());",
          "285:             sigParts.add(timestampPart);",
          "286:         }",
          "288:         if (isRequestor()) {",
          "290:                 addSupportingTokens(sigParts);",
          "291:             } catch (WSSecurityException ex) {",
          "292:                 policyNotAsserted(encryptionToken, ex);",
          "293:             }",
          "294:         } else {",
          "295:             addSignatureConfirmation(sigParts);",
          "296:         }",
          "298:         try {",
          "299:             if (sigParts.size() > 0) {",
          "300:                 if (initiatorWrapper != null && isRequestor()) {",
          "303:                     AbstractTokenWrapper recipientSignatureToken =",
          "304:                         abinding.getRecipientSignatureToken();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:                         doSignature(recipientSignatureToken, sigParts, attached);",
          "306:                     }",
          "307:                 }",
          "312:             }",
          "318:             encryptTokensInSecurityHeader(encryptionToken, encrBase);",
          "319:         }",
          "320:     }",
          "",
          "[Removed Lines]",
          "308:             } catch (WSSecurityException ex) {",
          "309:                 throw new Fault(ex);",
          "310:             } catch (SOAPException ex) {",
          "311:                 throw new Fault(ex);",
          "314:             if (isRequestor()) {",
          "315:                 doEndorse();",
          "316:             }",
          "",
          "[Added Lines]",
          "313:         } catch (WSSecurityException ex) {",
          "314:             throw new Fault(ex);",
          "315:         } catch (SOAPException ex) {",
          "316:             throw new Fault(ex);",
          "317:         }",
          "319:         if (isRequestor()) {",
          "320:             doEndorse();",
          "321:         }",
          "323:         if (encrBase != null) {",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
          "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "411:         bus.shutdown(true);",
          "412:     }",
          "414:     @org.junit.Test",
          "415:     public void testAsymmetricEncryptSignature() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:     @org.junit.Test",
          "415:     public void testAsymmetricEncryptBeforeSigningNoEnc() throws Exception {",
          "417:         SpringBusFactory bf = new SpringBusFactory();",
          "418:         URL busFile = X509TokenTest.class.getResource(\"client.xml\");",
          "420:         Bus bus = bf.createBus(busFile.toString());",
          "421:         SpringBusFactory.setDefaultBus(bus);",
          "422:         SpringBusFactory.setThreadDefaultBus(bus);",
          "424:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
          "425:         Service service = Service.create(wsdl, SERVICE_QNAME);",
          "426:         QName portQName = new QName(NAMESPACE, \"DoubleItAsymmetricEncryptBeforeSigningNoEncPort\");",
          "427:         DoubleItPortType x509Port =",
          "428:                 service.getPort(portQName, DoubleItPortType.class);",
          "429:         updateAddressPort(x509Port, PORT);",
          "432:         x509Port.doubleIt(25);",
          "438:         ((java.io.Closeable)x509Port).close();",
          "439:         bus.shutdown(true);",
          "440:     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
          "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:             </wsdl:fault>",
          "221:         </wsdl:operation>",
          "222:     </wsdl:binding>",
          "223:     <wsdl:binding name=\"DoubleItAsymmetricEncryptSignatureBinding\" type=\"tns:DoubleItPortType\">",
          "224:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricEncryptSignaturePolicy\" />",
          "225:         <soap:binding style=\"document\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:     <wsdl:binding name=\"DoubleItAsymmetricEncryptBeforeSigningNoEncBinding\" type=\"tns:DoubleItPortType\">",
          "224:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricEncryptBeforeSigningPolicy\" />",
          "225:         <soap:binding style=\"document\"",
          "226:             transport=\"http://schemas.xmlsoap.org/soap/http\" />",
          "227:         <wsdl:operation name=\"DoubleIt\">",
          "228:             <soap:operation soapAction=\"\" />",
          "229:             <wsdl:input>",
          "230:                 <soap:body use=\"literal\" />",
          "231:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_NoEnc_Policy\"/>",
          "232:             </wsdl:input>",
          "233:             <wsdl:output>",
          "234:                 <soap:body use=\"literal\" />",
          "235:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_NoEnc_Policy\"/>",
          "236:             </wsdl:output>",
          "237:             <wsdl:fault name=\"DoubleItFault\">",
          "238:                 <soap:body use=\"literal\" name=\"DoubleItFault\" />",
          "239:             </wsdl:fault>",
          "240:         </wsdl:operation>",
          "241:     </wsdl:binding>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:                    binding=\"tns:DoubleItAsymmetricEncryptBeforeSigningBinding\">",
          "481:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptBeforeSigning\" />",
          "482:         </wsdl:port>",
          "483:         <wsdl:port name=\"DoubleItAsymmetricEncryptSignaturePort\"",
          "484:                    binding=\"tns:DoubleItAsymmetricEncryptSignatureBinding\">",
          "485:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptSignature\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:         <wsdl:port name=\"DoubleItAsymmetricEncryptBeforeSigningNoEncPort\"",
          "503:                    binding=\"tns:DoubleItAsymmetricEncryptBeforeSigningNoEncBinding\">",
          "504:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptBeforeSigningNoEnc\" />",
          "505:         </wsdl:port>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1381:          </wsp:All>",
          "1382:       </wsp:ExactlyOne>",
          "1383:    </wsp:Policy>",
          "1384:    <wsp:Policy wsu:Id=\"DoubleItBinding_DoubleIt_Output_Policy\">",
          "1385:       <wsp:ExactlyOne>",
          "1386:          <wsp:All>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1407:    <wsp:Policy wsu:Id=\"DoubleItBinding_DoubleIt_NoEnc_Policy\">",
          "1408:       <wsp:ExactlyOne>",
          "1409:          <wsp:All>",
          "1410:             <sp:SignedParts>",
          "1411:                <sp:Body/>",
          "1412:             </sp:SignedParts>",
          "1413:          </wsp:All>",
          "1414:       </wsp:ExactlyOne>",
          "1415:    </wsp:Policy>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70174590b7e6d1bf9f10de82a34ca45a8bb10126",
      "candidate_info": {
        "commit_hash": "70174590b7e6d1bf9f10de82a34ca45a8bb10126",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/70174590b7e6d1bf9f10de82a34ca45a8bb10126",
        "files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client/client.xml",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/server.xml"
        ],
        "message": "[CXF-5200] - Support newer signature algorithms in WS-SecurityPolicy (such as RSA-SHA256)\n\nConflicts:\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JStaxInInterceptor.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/StaxAsymmetricBindingHandler.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/StaxSymmetricBindingHandler.java\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/StaxTransportBindingHandler.java\n\tsystests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/StaxX509TokenTest.java\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/stax-server.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes@1513893 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java",
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ],
          "candidate": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ]
        }
      },
      "candidate_diff": {
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/SecurityConstants.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:     public static final String SUBJECT_ROLE_CLASSIFIER_TYPE = \"ws-security.role.classifier.type\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306:     public static final String ASYMMETRIC_SIGNATURE_ALGORITHM =",
          "307:         \"ws-security.asymmetric.signature.algorithm\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:             STS_TOKEN_DO_CANCEL, CACHE_ISSUED_TOKEN_IN_ENDPOINT,",
          "481:             DISABLE_STS_CLIENT_WSMEX_CALL_USING_EPR_ADDRESS, STS_TOKEN_CRYPTO,",
          "482:             STS_TOKEN_PROPERTIES, STS_TOKEN_USERNAME, STS_TOKEN_ACT_AS, STS_TOKEN_ON_BEHALF_OF,",
          "484:         }));",
          "485:         ALL_PROPERTIES = Collections.unmodifiableSet(s);",
          "486:     }",
          "",
          "[Removed Lines]",
          "483:             TOKEN, TOKEN_ID, SUBJECT_ROLE_CLASSIFIER, SUBJECT_ROLE_CLASSIFIER_TYPE, MUST_UNDERSTAND",
          "",
          "[Added Lines]",
          "491:             TOKEN, TOKEN_ID, SUBJECT_ROLE_CLASSIFIER, SUBJECT_ROLE_CLASSIFIER_TYPE, MUST_UNDERSTAND,",
          "492:             ASYMMETRIC_SIGNATURE_ALGORITHM",
          "",
          "---------------"
        ],
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:         List<Binding> bindings = new ArrayList<Binding>();",
          "144:         if (aim != null) {",
          "145:             Collection<AssertionInfo> ais = aim.get(SP12Constants.TRANSPORT_BINDING);",
          "",
          "[Removed Lines]",
          "142:     private List<Binding> getBindings(AssertionInfoMap aim) {",
          "",
          "[Added Lines]",
          "142:     public static List<Binding> getBindings(AssertionInfoMap aim) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:         List<Binding> bindings",
          "172:     ) {",
          "173:         List<org.apache.cxf.ws.security.policy.model.AlgorithmSuite> algorithmSuites =",
          "",
          "[Removed Lines]",
          "170:     private List<org.apache.cxf.ws.security.policy.model.AlgorithmSuite> getAlgorithmSuites(",
          "",
          "[Added Lines]",
          "170:     public static List<org.apache.cxf.ws.security.policy.model.AlgorithmSuite> getAlgorithmSuites(",
          "",
          "---------------"
        ],
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: import org.apache.cxf.ws.security.SecurityConstants;",
          "60: import org.apache.cxf.ws.security.policy.SP11Constants;",
          "61: import org.apache.cxf.ws.security.policy.SP12Constants;",
          "62: import org.apache.cxf.ws.security.policy.model.ContentEncryptedElements;",
          "63: import org.apache.cxf.ws.security.policy.model.Header;",
          "64: import org.apache.cxf.ws.security.policy.model.RequiredElements;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: import org.apache.cxf.ws.security.policy.model.AlgorithmSuite;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "500:     protected void setAlgorithmSuites(SoapMessage message, RequestData data) throws WSSecurityException {",
          "501:         AlgorithmSuiteTranslater translater = new AlgorithmSuiteTranslater();",
          "502:         translater.translateAlgorithmSuites(message.get(AssertionInfoMap.class), data);",
          "503:     }",
          "505:     protected void computeAction(SoapMessage message, RequestData data) throws WSSecurityException {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505:         String asymSignatureAlgorithm =",
          "506:             (String)message.getContextualProperty(SecurityConstants.ASYMMETRIC_SIGNATURE_ALGORITHM);",
          "507:         if (asymSignatureAlgorithm != null && data.getAlgorithmSuite() != null) {",
          "508:             data.getAlgorithmSuite().getSignatureMethods().clear();",
          "509:             data.getAlgorithmSuite().getSignatureMethods().add(asymSignatureAlgorithm);",
          "510:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "517:             if (\"\".equals(action) || (ais != null && !ais.isEmpty())) {",
          "518:                 action = checkDefaultBinding(aim, action, message);",
          "519:             }",
          "520:             checkUsernameToken(aim, message);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "530:             String asymSignatureAlgorithm =",
          "531:                 (String)message.getContextualProperty(SecurityConstants.ASYMMETRIC_SIGNATURE_ALGORITHM);",
          "532:             if (asymSignatureAlgorithm != null) {",
          "533:                 List<AlgorithmSuite> algorithmSuites =",
          "534:                     AlgorithmSuiteTranslater.getAlgorithmSuites(",
          "535:                         AlgorithmSuiteTranslater.getBindings(aim)",
          "536:                     );",
          "537:                 if (algorithmSuites != null && !algorithmSuites.isEmpty()) {",
          "538:                     for (AlgorithmSuite algorithmSuite : algorithmSuites) {",
          "539:                         algorithmSuite.setAsymmetricSignature(asymSignatureAlgorithm);",
          "540:                     }",
          "541:                 }",
          "542:             }",
          "",
          "---------------"
        ],
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:                     if (config == null) {",
          "158:                         config = WSSConfig.getNewInstance();",
          "159:                     }",
          "160:                     translateProperties(message, config);",
          "162:                     if (transport instanceof TransportBinding) {",
          "163:                         new TransportBindingHandler(config, (TransportBinding)transport, saaj,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:                     String asymSignatureAlgorithm =",
          "164:                         (String)message.getContextualProperty(SecurityConstants.ASYMMETRIC_SIGNATURE_ALGORITHM);",
          "165:                     if (asymSignatureAlgorithm != null && transport.getAlgorithmSuite() != null) {",
          "166:                         transport.getAlgorithmSuite().setAsymmetricSignature(asymSignatureAlgorithm);",
          "167:                     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
          "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:         bus.shutdown(true);",
          "237:     }",
          "239:     @org.junit.Test",
          "240:     public void testAsymmetricThumbprint() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239:     @org.junit.Test",
          "240:     public void testAsymmetricSHA256() throws Exception {",
          "242:         SpringBusFactory bf = new SpringBusFactory();",
          "243:         URL busFile = X509TokenTest.class.getResource(\"client/client.xml\");",
          "245:         Bus bus = bf.createBus(busFile.toString());",
          "246:         SpringBusFactory.setDefaultBus(bus);",
          "247:         SpringBusFactory.setThreadDefaultBus(bus);",
          "249:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
          "250:         Service service = Service.create(wsdl, SERVICE_QNAME);",
          "251:         QName portQName = new QName(NAMESPACE, \"DoubleItAsymmetricSHA256Port\");",
          "252:         DoubleItPortType x509Port =",
          "253:                 service.getPort(portQName, DoubleItPortType.class);",
          "254:         updateAddressPort(x509Port, PORT);",
          "256:         x509Port.doubleIt(25);",
          "258:         ((java.io.Closeable)x509Port).close();",
          "259:         bus.shutdown(true);",
          "260:     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
          "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:             </wsdl:fault>",
          "126:         </wsdl:operation>",
          "127:     </wsdl:binding>",
          "128:     <wsdl:binding name=\"DoubleItAsymmetricThumbprintBinding\" type=\"tns:DoubleItPortType\">",
          "129:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricThumbprintPolicy\" />",
          "130:         <soap:binding style=\"document\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:     <wsdl:binding name=\"DoubleItAsymmetricSHA256Binding\" type=\"tns:DoubleItPortType\">",
          "129:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricSHA256Policy\" />",
          "130:         <soap:binding style=\"document\"",
          "131:             transport=\"http://schemas.xmlsoap.org/soap/http\" />",
          "132:         <wsdl:operation name=\"DoubleIt\">",
          "133:             <soap:operation soapAction=\"\" />",
          "134:             <wsdl:input>",
          "135:                 <soap:body use=\"literal\" />",
          "136:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Input_Policy\"/>",
          "137:             </wsdl:input>",
          "138:             <wsdl:output>",
          "139:                 <soap:body use=\"literal\" />",
          "140:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Output_Policy\"/>",
          "141:             </wsdl:output>",
          "142:             <wsdl:fault name=\"DoubleItFault\">",
          "143:                 <soap:body use=\"literal\" name=\"DoubleItFault\" />",
          "144:             </wsdl:fault>",
          "145:         </wsdl:operation>",
          "146:     </wsdl:binding>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "422:                    binding=\"tns:DoubleItAsymmetricIssuerSerialBinding\">",
          "423:             <soap:address location=\"http://localhost:9001/DoubleItX509Asymmetric\" />",
          "424:         </wsdl:port>",
          "425:         <wsdl:port name=\"DoubleItAsymmetricThumbprintPort\"",
          "426:                    binding=\"tns:DoubleItAsymmetricThumbprintBinding\">",
          "427:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricThumbprint\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:         <wsdl:port name=\"DoubleItAsymmetricSHA256Port\"",
          "445:                    binding=\"tns:DoubleItAsymmetricSHA256Binding\">",
          "446:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricSHA256\" />",
          "447:         </wsdl:port>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "653:       </wsp:ExactlyOne>",
          "654:     </wsp:Policy>",
          "656:     <wsp:Policy wsu:Id=\"DoubleItAsymmetricThumbprintPolicy\">",
          "657:       <wsp:ExactlyOne>",
          "658:          <wsp:All>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:     <wsp:Policy wsu:Id=\"DoubleItAsymmetricSHA256Policy\">",
          "680:       <wsp:ExactlyOne>",
          "681:          <wsp:All>",
          "682:             <sp:AsymmetricBinding>",
          "683:                <wsp:Policy>",
          "684:                   <sp:InitiatorToken>",
          "685:                      <wsp:Policy>",
          "686:                         <sp:X509Token",
          "687:                            sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
          "688:                            <wsp:Policy>",
          "689:                               <sp:WssX509V3Token10 />",
          "690:                            </wsp:Policy>",
          "691:                         </sp:X509Token>",
          "692:                      </wsp:Policy>",
          "693:                   </sp:InitiatorToken>",
          "694:                   <sp:RecipientToken>",
          "695:                      <wsp:Policy>",
          "696:                         <sp:X509Token",
          "697:                            sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never\">",
          "698:                            <wsp:Policy>",
          "699:                               <sp:WssX509V3Token10 />",
          "700:                            </wsp:Policy>",
          "701:                         </sp:X509Token>",
          "702:                      </wsp:Policy>",
          "703:                   </sp:RecipientToken>",
          "704:                   <sp:Layout>",
          "705:                      <wsp:Policy>",
          "706:                         <sp:Lax/>",
          "707:                      </wsp:Policy>",
          "708:                   </sp:Layout>",
          "709:                   <sp:IncludeTimestamp/>",
          "710:                   <sp:OnlySignEntireHeadersAndBody/>",
          "711:                   <sp:AlgorithmSuite>",
          "712:                      <wsp:Policy>",
          "713:                         <sp:Basic128Sha256 />",
          "714:                      </wsp:Policy>",
          "715:                   </sp:AlgorithmSuite>",
          "716:                </wsp:Policy>",
          "717:             </sp:AsymmetricBinding>",
          "718:          </wsp:All>",
          "719:       </wsp:ExactlyOne>",
          "720:     </wsp:Policy>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb9ea1e1c049299221f080184a346d0ae5f8aef7",
      "candidate_info": {
        "commit_hash": "eb9ea1e1c049299221f080184a346d0ae5f8aef7",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/eb9ea1e1c049299221f080184a346d0ae5f8aef7",
        "files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client/client.xml",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/server.xml"
        ],
        "message": "Fixing token referencing problem with the AsymmetricBinding\n\nConflicts:\n\trt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractStaxBindingHandler.java\n\tsystests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client.xml\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server.xml\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/stax-server.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes@1559988 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ],
          "candidate": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ]
        }
      },
      "candidate_diff": {
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AbstractBindingBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1591:                                 && ((Wss11) wss).isMustSupportRefThumbprint()) {",
          "1592:                     secBase.setKeyIdentifierType(WSConstants.THUMBPRINT_IDENTIFIER);",
          "1593:                 }",
          "1594:             } else {",
          "1595:                 secBase.setKeyIdentifierType(WSConstants.BST_DIRECT_REFERENCE);",
          "1596:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1594:             } else if (token.getInclusion() == SPConstants.IncludeTokenType.INCLUDE_TOKEN_ALWAYS_TO_RECIPIENT",
          "1595:                 && !isRequestor() && token instanceof X509Token) {",
          "1596:                 secBase.setKeyIdentifierType(WSConstants.ISSUER_SERIAL);",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
          "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:         bus.shutdown(true);",
          "238:     }",
          "240:     @org.junit.Test",
          "241:     public void testAsymmetricSP11() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:     @org.junit.Test",
          "241:     public void testAsymmetricNoInitiatorTokenReference() throws Exception {",
          "243:         SpringBusFactory bf = new SpringBusFactory();",
          "244:         URL busFile = X509TokenTest.class.getResource(\"client/client.xml\");",
          "246:         Bus bus = bf.createBus(busFile.toString());",
          "247:         SpringBusFactory.setDefaultBus(bus);",
          "248:         SpringBusFactory.setThreadDefaultBus(bus);",
          "250:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
          "251:         Service service = Service.create(wsdl, SERVICE_QNAME);",
          "252:         QName portQName = new QName(NAMESPACE, \"DoubleItAsymmetricNoInitiatorReferencePort\");",
          "253:         DoubleItPortType x509Port =",
          "254:                 service.getPort(portQName, DoubleItPortType.class);",
          "255:         updateAddressPort(x509Port, PORT);",
          "257:         x509Port.doubleIt(25);",
          "259:         ((java.io.Closeable)x509Port).close();",
          "260:         bus.shutdown(true);",
          "261:     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
          "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:             </wsdl:fault>",
          "126:         </wsdl:operation>",
          "127:     </wsdl:binding>",
          "128:     <wsdl:binding name=\"DoubleItAsymmetricSP11Binding\" type=\"tns:DoubleItPortType\">",
          "129:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricSP11Policy\" />",
          "130:         <soap:binding style=\"document\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:     <wsdl:binding name=\"DoubleItAsymmetricNoInitiatorReferenceBinding\" type=\"tns:DoubleItPortType\">",
          "129:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricNoInitiatorReferencePolicy\" />",
          "130:         <soap:binding style=\"document\"",
          "131:             transport=\"http://schemas.xmlsoap.org/soap/http\" />",
          "132:         <wsdl:operation name=\"DoubleIt\">",
          "133:             <soap:operation soapAction=\"\" />",
          "134:             <wsdl:input>",
          "135:                 <soap:body use=\"literal\" />",
          "136:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Input_Policy\"/>",
          "137:             </wsdl:input>",
          "138:             <wsdl:output>",
          "139:                 <soap:body use=\"literal\" />",
          "140:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Output_Policy\"/>",
          "141:             </wsdl:output>",
          "142:             <wsdl:fault name=\"DoubleItFault\">",
          "143:                 <soap:body use=\"literal\" name=\"DoubleItFault\" />",
          "144:             </wsdl:fault>",
          "145:         </wsdl:operation>",
          "146:     </wsdl:binding>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "460:                    binding=\"tns:DoubleItAsymmetricIssuerSerialBinding\">",
          "461:             <soap:address location=\"http://localhost:9001/DoubleItX509Asymmetric\" />",
          "462:         </wsdl:port>",
          "463:         <wsdl:port name=\"DoubleItAsymmetricSP11Port\"",
          "464:                    binding=\"tns:DoubleItAsymmetricSP11Binding\">",
          "465:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricSP11\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:         <wsdl:port name=\"DoubleItAsymmetricNoInitiatorReferencePort\" binding=\"tns:DoubleItAsymmetricNoInitiatorReferenceBinding\">",
          "483:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricNoInitiatorReference\"/>",
          "484:         </wsdl:port>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "699:       </wsp:ExactlyOne>",
          "700:     </wsp:Policy>",
          "702:     <wsp:Policy wsu:Id=\"DoubleItAsymmetricSP11Policy\">",
          "703:       <wsp:ExactlyOne>",
          "704:          <wsp:All>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "721:       </wsp:ExactlyOne>",
          "722:     </wsp:Policy>",
          "724:     <wsp:Policy wsu:Id=\"DoubleItAsymmetricNoInitiatorReferencePolicy\">",
          "725:       <wsp:ExactlyOne>",
          "726:          <wsp:All>",
          "727:             <sp:AsymmetricBinding>",
          "728:                <wsp:Policy>",
          "729:                   <sp:InitiatorToken>",
          "730:                      <wsp:Policy>",
          "731:                         <sp:X509Token",
          "732:                            sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
          "733:                            <wsp:Policy>",
          "734:                               <sp:WssX509V3Token10 />",
          "735:                            </wsp:Policy>",
          "",
          "---------------"
        ]
      }
    }
  ]
}