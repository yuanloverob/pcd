{
  "cve_id": "CVE-2022-23531",
  "cve_desc": "GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to 0.1.5 are vulnerable to Relative Path Traversal when scanning a specially-crafted local PyPI package. Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed due to a path traversal vulnerability when extracting the .tar.gz file of the package being scanned, which exists by design in the tarfile.TarFile.extractall function. This issue is patched in version 0.1.5.",
  "repo": "DataDog/guarddog",
  "patch_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
  "patch_info": {
    "commit_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
    "repo": "DataDog/guarddog",
    "commit_url": "https://github.com/DataDog/guarddog/commit/98af5c8c1e9c15fa888c900252e76116b0ec25d1",
    "files": [
      "guarddog/scanners/package_scanner.py",
      "poetry.lock",
      "pyproject.toml",
      "requirements.txt"
    ],
    "message": "Use tarsafe instead of built-in tarfile to extract archives (#89)\n\n* Use tarsafe instead of built-in tarfile to extract archives\n\n* Bump down Semgrep version to 0.112.1\n\nSee also https://github.com/returntocorp/semgrep/issues/6631",
    "before_after_code_files": [
      "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py",
      "poetry.lock||poetry.lock"
    ]
  },
  "patch_diff": {
    "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py": [
      "File: guarddog/scanners/package_scanner.py -> guarddog/scanners/package_scanner.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: import os",
      "3: import shutil",
      "4: import sys",
      "6: import tempfile",
      "7: import requests",
      "",
      "[Removed Lines]",
      "5: import tarfile",
      "",
      "[Added Lines]",
      "5: import tarsafe",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "44:         if os.path.exists(path):",
      "45:             if path.endswith('.tar.gz'):",
      "46:                 with tempfile.TemporaryDirectory() as tmpdirname:",
      "48:                     return self.analyzer.analyze_sourcecode(tmpdirname, rules=rules)",
      "49:             elif os.path.isdir(path):",
      "50:                 return self.analyzer.analyze_sourcecode(path, rules=rules)",
      "",
      "[Removed Lines]",
      "47:                     tarfile.open(path).extractall(tmpdirname)",
      "",
      "[Added Lines]",
      "47:                     tarsafe.open(path).extractall(tmpdirname)",
      "",
      "---------------"
    ],
    "poetry.lock||poetry.lock": [
      "File: poetry.lock -> poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "477: [[package]]",
      "478: name = \"semgrep\"",
      "480: description = \"Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.\"",
      "481: category = \"main\"",
      "482: optional = false",
      "",
      "[Removed Lines]",
      "479: version = \"0.122.0\"",
      "",
      "[Added Lines]",
      "479: version = \"0.112.1\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "496: python-lsp-jsonrpc = \">=1.0.0,<1.1.0\"",
      "497: requests = \">=2.22,<3.0\"",
      "498: \"ruamel.yaml\" = \">=0.16.0,<0.18\"",
      "500: tqdm = \">=4.46,<5.0\"",
      "501: typing-extensions = \">=4.2,<5.0\"",
      "502: urllib3 = \">=1.26,<2.0\"",
      "",
      "[Removed Lines]",
      "499: tomli = \">=2.0.1,<2.1.0\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "526: optional = false",
      "527: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"",
      "529: [[package]]",
      "530: name = \"termcolor\"",
      "531: version = \"2.1.1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "528: [[package]]",
      "529: name = \"tarsafe\"",
      "530: version = \"0.0.4\"",
      "531: description = \"A safe subclass of the TarFile class for interacting with tar files. Can be used as a direct drop-in replacement for safe usage of extractall()\"",
      "532: category = \"main\"",
      "533: optional = false",
      "534: python-versions = \">=3.6\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "618: [metadata]",
      "619: lock-version = \"1.1\"",
      "620: python-versions = \">=3.9, <4\"",
      "623: [metadata.files]",
      "624: attrs = [",
      "",
      "[Removed Lines]",
      "621: content-hash = \"a2ee2a3bf8cdebfd91939977044d2a626e5b54500965da9d66a70c3c9b71ca2c\"",
      "",
      "[Added Lines]",
      "628: content-hash = \"0faf892801caefce1e994f6fdee7254ac4e2e95ad947d7459b75113af80eed74\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "867:     {file = \"ruamel.yaml.clib-0.2.7.tar.gz\", hash = \"sha256:1f08fd5a2bea9c4180db71678e850b995d2a5f4537be0e94557668cf0f5f9497\"},",
      "868: ]",
      "869: semgrep = [",
      "874: ]",
      "875: setuptools = [",
      "876:     {file = \"setuptools-65.6.3-py3-none-any.whl\", hash = \"sha256:57f6f22bde4e042978bcd50176fdb381d7c21a9efa4041202288d3737a0c6a54\"},",
      "",
      "[Removed Lines]",
      "870:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:c7002b9aba97deb6677f4cabfa5dcc8faef2808ce6a6f28ecdd70cd8e90b01b5\"},",
      "871:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_10_14_x86_64.whl\", hash = \"sha256:e3fb9956e2bb926cfeff52deafe4cec24d5f1e91fe6d3fc4f81e86ec452b2ad5\"},",
      "872:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:6116391b0c8c87581d9d72113702b6f8c2938d799cdae7d71a845ec89249566c\"},",
      "873:     {file = \"semgrep-0.122.0.tar.gz\", hash = \"sha256:a4c7400eb8bec9fe8df25520d1ffcb5d78b87c73dc654f1c2aec1195789bc611\"},",
      "",
      "[Added Lines]",
      "877:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:2a62bc6321d371dadc41df2c68678e87df807ddfa3d1faafb40bd0998abfe503\"},",
      "878:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-macosx_10_14_x86_64.whl\", hash = \"sha256:b690a84cbaa6a4670ff6c11a674818b8ad99736e89520a3c47d1542cc45e6d05\"},",
      "879:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:bc2437f12e41ac5e28a303e463098565a3d948c7744f6745bdb0fea341ccdae1\"},",
      "880:     {file = \"semgrep-0.112.1.tar.gz\", hash = \"sha256:2140a0fd16f3ac0a0e330980613ba65fe58faea7808a965e219c4199bab96102\"},",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "880:     {file = \"six-1.16.0-py2.py3-none-any.whl\", hash = \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"},",
      "881:     {file = \"six-1.16.0.tar.gz\", hash = \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\"},",
      "882: ]",
      "883: termcolor = [",
      "884:     {file = \"termcolor-2.1.1-py3-none-any.whl\", hash = \"sha256:fa852e957f97252205e105dd55bbc23b419a70fec0085708fc0515e399f304fd\"},",
      "885:     {file = \"termcolor-2.1.1.tar.gz\", hash = \"sha256:67cee2009adc6449c650f6bcf3bdeed00c8ba53a8cda5362733c53e0a39fb70b\"},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "890: tarsafe = [",
      "891:     {file = \"tarsafe-0.0.4-py3-none-any.whl\", hash = \"sha256:12903a81f2612c09d22117115301ea510944af5caa1e358636e0fc1d0e6134df\"},",
      "892:     {file = \"tarsafe-0.0.4.tar.gz\", hash = \"sha256:a376f4138005298c11c30cb60a5081fa2c09f44384c966106fbaeee3059e9ec5\"},",
      "893: ]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f7d56cbdbd14e70ef54031487c821cc4338303e9",
      "candidate_info": {
        "commit_hash": "f7d56cbdbd14e70ef54031487c821cc4338303e9",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/f7d56cbdbd14e70ef54031487c821cc4338303e9",
        "files": [
          "poetry.lock",
          "pyproject.toml"
        ],
        "message": "Bump python-dotenv from 0.20.0 to 1.0.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.20.0 to 1.0.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.20.0...v1.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "739: [[package]]",
          "740: name = \"python-dotenv\"",
          "742: description = \"Read key-value pairs from a .env file and set them as environment variables\"",
          "743: category = \"main\"",
          "744: optional = false",
          "746: files = [",
          "749: ]",
          "751: [package.extras]",
          "",
          "[Removed Lines]",
          "741: version = \"0.20.0\"",
          "745: python-versions = \">=3.5\"",
          "747:     {file = \"python-dotenv-0.20.0.tar.gz\", hash = \"sha256:b7e3b04a59693c42c36f9ab1cc2acc46fa5df8c78e178fc33a8d4cd05c8d498f\"},",
          "748:     {file = \"python_dotenv-0.20.0-py3-none-any.whl\", hash = \"sha256:d92a187be61fe482e4fd675b6d52200e7be63a12b724abbf931a40ce4fa92938\"},",
          "",
          "[Added Lines]",
          "741: version = \"1.0.0\"",
          "745: python-versions = \">=3.8\"",
          "747:     {file = \"python-dotenv-1.0.0.tar.gz\", hash = \"sha256:a8df96034aae6d2d50a4ebe8216326c61c3eb64836776504fcca410e5937a3ba\"},",
          "748:     {file = \"python_dotenv-1.0.0-py3-none-any.whl\", hash = \"sha256:f5971a9226b701070a4bf2c38c89e5a3f0d64de8debda981d1db98583009122a\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1237: [metadata]",
          "1238: lock-version = \"2.0\"",
          "1239: python-versions = \">=3.10,<4\"",
          "",
          "[Removed Lines]",
          "1240: content-hash = \"fdd0b22a8faaf9491ef4a4564b0a924c009b3023503577f989d72d2262d92510\"",
          "",
          "[Added Lines]",
          "1240: content-hash = \"cf37510a524a51b2491d48242ceb47614d9dfa6ecff19e6cc3b3c531c6ed32bb\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0348d17bcb70fdcf4294767f5d0ae46282dc1995",
      "candidate_info": {
        "commit_hash": "0348d17bcb70fdcf4294767f5d0ae46282dc1995",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/0348d17bcb70fdcf4294767f5d0ae46282dc1995",
        "files": [
          ".github/workflows/test.yml",
          "poetry.lock",
          "pyproject.toml",
          "requirements-dev.txt",
          "requirements.txt"
        ],
        "message": "Removes extra deps",
        "before_after_code_files": [
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: [[package]]",
          "130: name = \"charset-normalizer\"",
          "132: description = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"",
          "133: optional = false",
          "138: ]",
          "143: [[package]]",
          "144: name = \"click\"",
          "145: version = \"8.1.3\"",
          "",
          "[Removed Lines]",
          "131: version = \"2.1.1\"",
          "134: python-versions = \">=3.6.0\"",
          "135: files = [",
          "136:     {file = \"charset-normalizer-2.1.1.tar.gz\", hash = \"sha256:5a3d016c7c547f69d6f81fb0db9449ce888b418b5b9952cc5e6e66843e9dd845\"},",
          "137:     {file = \"charset_normalizer-2.1.1-py3-none-any.whl\", hash = \"sha256:83e9a75d1911279afd89352c68b45348559d1fc0506b054b346651b5e7fee29f\"},",
          "140: [package.extras]",
          "141: unicode-backport = [\"unicodedata2\"]",
          "",
          "[Added Lines]",
          "131: version = \"3.1.0\"",
          "134: python-versions = \">=3.7.0\"",
          "135: files = [",
          "136:     {file = \"charset-normalizer-3.1.0.tar.gz\", hash = \"sha256:34e0a2f9c370eb95597aae63bf85eb5e96826d81e3dcf88b8886012906f509b5\"},",
          "137:     {file = \"charset_normalizer-3.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:e0ac8959c929593fee38da1c2b64ee9778733cdf03c482c9ff1d508b6b593b2b\"},",
          "138:     {file = \"charset_normalizer-3.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:d7fc3fca01da18fbabe4625d64bb612b533533ed10045a2ac3dd194bfa656b60\"},",
          "139:     {file = \"charset_normalizer-3.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:04eefcee095f58eaabe6dc3cc2262f3bcd776d2c67005880894f447b3f2cb9c1\"},",
          "140:     {file = \"charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:20064ead0717cf9a73a6d1e779b23d149b53daf971169289ed2ed43a71e8d3b0\"},",
          "141:     {file = \"charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1435ae15108b1cb6fffbcea2af3d468683b7afed0169ad718451f8db5d1aff6f\"},",
          "142:     {file = \"charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c84132a54c750fda57729d1e2599bb598f5fa0344085dbde5003ba429a4798c0\"},",
          "143:     {file = \"charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:75f2568b4189dda1c567339b48cba4ac7384accb9c2a7ed655cd86b04055c795\"},",
          "144:     {file = \"charset_normalizer-3.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:11d3bcb7be35e7b1bba2c23beedac81ee893ac9871d0ba79effc7fc01167db6c\"},",
          "145:     {file = \"charset_normalizer-3.1.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:891cf9b48776b5c61c700b55a598621fdb7b1e301a550365571e9624f270c203\"},",
          "146:     {file = \"charset_normalizer-3.1.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:5f008525e02908b20e04707a4f704cd286d94718f48bb33edddc7d7b584dddc1\"},",
          "147:     {file = \"charset_normalizer-3.1.0-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:b06f0d3bf045158d2fb8837c5785fe9ff9b8c93358be64461a1089f5da983137\"},",
          "148:     {file = \"charset_normalizer-3.1.0-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:49919f8400b5e49e961f320c735388ee686a62327e773fa5b3ce6721f7e785ce\"},",
          "149:     {file = \"charset_normalizer-3.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:22908891a380d50738e1f978667536f6c6b526a2064156203d418f4856d6e86a\"},",
          "150:     {file = \"charset_normalizer-3.1.0-cp310-cp310-win32.whl\", hash = \"sha256:12d1a39aa6b8c6f6248bb54550efcc1c38ce0d8096a146638fd4738e42284448\"},",
          "151:     {file = \"charset_normalizer-3.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:65ed923f84a6844de5fd29726b888e58c62820e0769b76565480e1fdc3d062f8\"},",
          "152:     {file = \"charset_normalizer-3.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9a3267620866c9d17b959a84dd0bd2d45719b817245e49371ead79ed4f710d19\"},",
          "153:     {file = \"charset_normalizer-3.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6734e606355834f13445b6adc38b53c0fd45f1a56a9ba06c2058f86893ae8017\"},",
          "154:     {file = \"charset_normalizer-3.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f8303414c7b03f794347ad062c0516cee0e15f7a612abd0ce1e25caf6ceb47df\"},",
          "155:     {file = \"charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aaf53a6cebad0eae578f062c7d462155eada9c172bd8c4d250b8c1d8eb7f916a\"},",
          "156:     {file = \"charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3dc5b6a8ecfdc5748a7e429782598e4f17ef378e3e272eeb1340ea57c9109f41\"},",
          "157:     {file = \"charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e1b25e3ad6c909f398df8921780d6a3d120d8c09466720226fc621605b6f92b1\"},",
          "158:     {file = \"charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0ca564606d2caafb0abe6d1b5311c2649e8071eb241b2d64e75a0d0065107e62\"},",
          "159:     {file = \"charset_normalizer-3.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b82fab78e0b1329e183a65260581de4375f619167478dddab510c6c6fb04d9b6\"},",
          "160:     {file = \"charset_normalizer-3.1.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:bd7163182133c0c7701b25e604cf1611c0d87712e56e88e7ee5d72deab3e76b5\"},",
          "161:     {file = \"charset_normalizer-3.1.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:11d117e6c63e8f495412d37e7dc2e2fff09c34b2d09dbe2bee3c6229577818be\"},",
          "162:     {file = \"charset_normalizer-3.1.0-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:cf6511efa4801b9b38dc5546d7547d5b5c6ef4b081c60b23e4d941d0eba9cbeb\"},",
          "163:     {file = \"charset_normalizer-3.1.0-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:abc1185d79f47c0a7aaf7e2412a0eb2c03b724581139193d2d82b3ad8cbb00ac\"},",
          "164:     {file = \"charset_normalizer-3.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:cb7b2ab0188829593b9de646545175547a70d9a6e2b63bf2cd87a0a391599324\"},",
          "165:     {file = \"charset_normalizer-3.1.0-cp311-cp311-win32.whl\", hash = \"sha256:c36bcbc0d5174a80d6cccf43a0ecaca44e81d25be4b7f90f0ed7bcfbb5a00909\"},",
          "166:     {file = \"charset_normalizer-3.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:cca4def576f47a09a943666b8f829606bcb17e2bc2d5911a46c8f8da45f56755\"},",
          "167:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:0c95f12b74681e9ae127728f7e5409cbbef9cd914d5896ef238cc779b8152373\"},",
          "168:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fca62a8301b605b954ad2e9c3666f9d97f63872aa4efcae5492baca2056b74ab\"},",
          "169:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ac0aa6cd53ab9a31d397f8303f92c42f534693528fafbdb997c82bae6e477ad9\"},",
          "170:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c3af8e0f07399d3176b179f2e2634c3ce9c1301379a6b8c9c9aeecd481da494f\"},",
          "171:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3a5fc78f9e3f501a1614a98f7c54d3969f3ad9bba8ba3d9b438c3bc5d047dd28\"},",
          "172:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:628c985afb2c7d27a4800bfb609e03985aaecb42f955049957814e0491d4006d\"},",
          "173:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:74db0052d985cf37fa111828d0dd230776ac99c740e1a758ad99094be4f1803d\"},",
          "174:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:1e8fcdd8f672a1c4fc8d0bd3a2b576b152d2a349782d1eb0f6b8e52e9954731d\"},",
          "175:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:04afa6387e2b282cf78ff3dbce20f0cc071c12dc8f685bd40960cc68644cfea6\"},",
          "176:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:dd5653e67b149503c68c4018bf07e42eeed6b4e956b24c00ccdf93ac79cdff84\"},",
          "177:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d2686f91611f9e17f4548dbf050e75b079bbc2a82be565832bc8ea9047b61c8c\"},",
          "178:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-win32.whl\", hash = \"sha256:4155b51ae05ed47199dc5b2a4e62abccb274cee6b01da5b895099b61b1982974\"},",
          "179:     {file = \"charset_normalizer-3.1.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:322102cdf1ab682ecc7d9b1c5eed4ec59657a65e1c146a0da342b78f4112db23\"},",
          "180:     {file = \"charset_normalizer-3.1.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:e633940f28c1e913615fd624fcdd72fdba807bf53ea6925d6a588e84e1151531\"},",
          "181:     {file = \"charset_normalizer-3.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:3a06f32c9634a8705f4ca9946d667609f52cf130d5548881401f1eb2c39b1e2c\"},",
          "182:     {file = \"charset_normalizer-3.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:7381c66e0561c5757ffe616af869b916c8b4e42b367ab29fedc98481d1e74e14\"},",
          "183:     {file = \"charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3573d376454d956553c356df45bb824262c397c6e26ce43e8203c4c540ee0acb\"},",
          "184:     {file = \"charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e89df2958e5159b811af9ff0f92614dabf4ff617c03a4c1c6ff53bf1c399e0e1\"},",
          "185:     {file = \"charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:78cacd03e79d009d95635e7d6ff12c21eb89b894c354bd2b2ed0b4763373693b\"},",
          "186:     {file = \"charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:de5695a6f1d8340b12a5d6d4484290ee74d61e467c39ff03b39e30df62cf83a0\"},",
          "187:     {file = \"charset_normalizer-3.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1c60b9c202d00052183c9be85e5eaf18a4ada0a47d188a83c8f5c5b23252f649\"},",
          "188:     {file = \"charset_normalizer-3.1.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:f645caaf0008bacf349875a974220f1f1da349c5dbe7c4ec93048cdc785a3326\"},",
          "189:     {file = \"charset_normalizer-3.1.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:ea9f9c6034ea2d93d9147818f17c2a0860d41b71c38b9ce4d55f21b6f9165a11\"},",
          "190:     {file = \"charset_normalizer-3.1.0-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:80d1543d58bd3d6c271b66abf454d437a438dff01c3e62fdbcd68f2a11310d4b\"},",
          "191:     {file = \"charset_normalizer-3.1.0-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:73dc03a6a7e30b7edc5b01b601e53e7fc924b04e1835e8e407c12c037e81adbd\"},",
          "192:     {file = \"charset_normalizer-3.1.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:6f5c2e7bc8a4bf7c426599765b1bd33217ec84023033672c1e9a8b35eaeaaaf8\"},",
          "193:     {file = \"charset_normalizer-3.1.0-cp38-cp38-win32.whl\", hash = \"sha256:12a2b561af122e3d94cdb97fe6fb2bb2b82cef0cdca131646fdb940a1eda04f0\"},",
          "194:     {file = \"charset_normalizer-3.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:3160a0fd9754aab7d47f95a6b63ab355388d890163eb03b2d2b87ab0a30cfa59\"},",
          "195:     {file = \"charset_normalizer-3.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:38e812a197bf8e71a59fe55b757a84c1f946d0ac114acafaafaf21667a7e169e\"},",
          "196:     {file = \"charset_normalizer-3.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:6baf0baf0d5d265fa7944feb9f7451cc316bfe30e8df1a61b1bb08577c554f31\"},",
          "197:     {file = \"charset_normalizer-3.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:8f25e17ab3039b05f762b0a55ae0b3632b2e073d9c8fc88e89aca31a6198e88f\"},",
          "198:     {file = \"charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3747443b6a904001473370d7810aa19c3a180ccd52a7157aacc264a5ac79265e\"},",
          "199:     {file = \"charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b116502087ce8a6b7a5f1814568ccbd0e9f6cfd99948aa59b0e241dc57cf739f\"},",
          "200:     {file = \"charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d16fd5252f883eb074ca55cb622bc0bee49b979ae4e8639fff6ca3ff44f9f854\"},",
          "201:     {file = \"charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:21fa558996782fc226b529fdd2ed7866c2c6ec91cee82735c98a197fae39f706\"},",
          "202:     {file = \"charset_normalizer-3.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6f6c7a8a57e9405cad7485f4c9d3172ae486cfef1344b5ddd8e5239582d7355e\"},",
          "203:     {file = \"charset_normalizer-3.1.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:ac3775e3311661d4adace3697a52ac0bab17edd166087d493b52d4f4f553f9f0\"},",
          "204:     {file = \"charset_normalizer-3.1.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:10c93628d7497c81686e8e5e557aafa78f230cd9e77dd0c40032ef90c18f2230\"},",
          "205:     {file = \"charset_normalizer-3.1.0-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:6f4f4668e1831850ebcc2fd0b1cd11721947b6dc7c00bf1c6bd3c929ae14f2c7\"},",
          "206:     {file = \"charset_normalizer-3.1.0-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:0be65ccf618c1e7ac9b849c315cc2e8a8751d9cfdaa43027d4f6624bd587ab7e\"},",
          "207:     {file = \"charset_normalizer-3.1.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:53d0a3fa5f8af98a1e261de6a3943ca631c526635eb5817a87a59d9a57ebf48f\"},",
          "208:     {file = \"charset_normalizer-3.1.0-cp39-cp39-win32.whl\", hash = \"sha256:a04f86f41a8916fe45ac5024ec477f41f886b3c435da2d4e3d2709b22ab02af1\"},",
          "209:     {file = \"charset_normalizer-3.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:830d2948a5ec37c386d3170c483063798d7879037492540f10a475e3fd6f244b\"},",
          "210:     {file = \"charset_normalizer-3.1.0-py3-none-any.whl\", hash = \"sha256:3d9098b479e78c85080c98e1e35ff40b4a31d8953102bb0fd7d1b6f8a2111a3d\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "282:     {file = \"defusedxml-0.7.1.tar.gz\", hash = \"sha256:1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69\"},",
          "283: ]",
          "320: [[package]]",
          "321: name = \"exceptiongroup\"",
          "322: version = \"1.1.1\"",
          "",
          "[Removed Lines]",
          "285: [[package]]",
          "286: name = \"dill\"",
          "287: version = \"0.3.6\"",
          "288: description = \"serialize all of python\"",
          "289: optional = false",
          "290: python-versions = \">=3.7\"",
          "291: files = [",
          "292:     {file = \"dill-0.3.6-py3-none-any.whl\", hash = \"sha256:a07ffd2351b8c678dfc4a856a3005f8067aea51d6ba6c700796a4d9e280f39f0\"},",
          "293:     {file = \"dill-0.3.6.tar.gz\", hash = \"sha256:e5db55f3687856d8fbdab002ed78544e1c4559a130302693d839dfe8f93f2373\"},",
          "294: ]",
          "296: [package.extras]",
          "297: graph = [\"objgraph (>=1.7.2)\"]",
          "299: [[package]]",
          "300: name = \"docker\"",
          "301: version = \"6.1.3\"",
          "302: description = \"A Python library for the Docker Engine API.\"",
          "303: optional = false",
          "304: python-versions = \">=3.7\"",
          "305: files = [",
          "306:     {file = \"docker-6.1.3-py3-none-any.whl\", hash = \"sha256:aecd2277b8bf8e506e484f6ab7aec39abe0038e29fa4a6d3ba86c3fe01844ed9\"},",
          "307:     {file = \"docker-6.1.3.tar.gz\", hash = \"sha256:aa6d17830045ba5ef0168d5eaa34d37beeb113948c413affe1d5991fc11f9a20\"},",
          "308: ]",
          "310: [package.dependencies]",
          "311: packaging = \">=14.0\"",
          "312: pywin32 = {version = \">=304\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "313: requests = \">=2.26.0\"",
          "314: urllib3 = \">=1.26.0\"",
          "315: websocket-client = \">=0.32.0\"",
          "317: [package.extras]",
          "318: ssh = [\"paramiko (>=2.4.3)\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "334: [[package]]",
          "335: name = \"face\"",
          "337: description = \"A command-line application framework (and CLI parser). Friendly for users, full-featured for developers.\"",
          "338: optional = false",
          "339: python-versions = \"*\"",
          "340: files = [",
          "344: ]",
          "346: [package.dependencies]",
          "",
          "[Removed Lines]",
          "336: version = \"20.1.1\"",
          "341:     {file = \"face-20.1.1-py2-none-any.whl\", hash = \"sha256:3790311a7329e4b0d90baee346eecad54b337629576edf3a246683a5f0d24446\"},",
          "342:     {file = \"face-20.1.1-py3-none-any.whl\", hash = \"sha256:ca3a1d8b8b6aa8e61d62a300e9ee24e09c062aceda549e9a640128e4fa0f4559\"},",
          "343:     {file = \"face-20.1.1.tar.gz\", hash = \"sha256:7d59ca5ba341316e58cf72c6aff85cca2541cf5056c4af45cb63af9a814bed3e\"},",
          "",
          "[Added Lines]",
          "371: version = \"22.0.0\"",
          "376:     {file = \"face-22.0.0-py3-none-any.whl\", hash = \"sha256:344fe31562d0f6f444a45982418f3793d4b14f9abb98ccca1509d22e0a3e7e35\"},",
          "377:     {file = \"face-22.0.0.tar.gz\", hash = \"sha256:d5d692f90bc8f5987b636e47e36384b9bbda499aaf0a77aa0b0bbe834c76923d\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "443:     {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},",
          "444: ]",
          "472: [[package]]",
          "473: name = \"mypy\"",
          "474: version = \"1.4.0\"",
          "",
          "[Removed Lines]",
          "446: [[package]]",
          "447: name = \"multiprocess\"",
          "448: version = \"0.70.14\"",
          "449: description = \"better multiprocessing and multithreading in python\"",
          "450: optional = false",
          "451: python-versions = \">=3.7\"",
          "452: files = [",
          "453:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:560a27540daef4ce8b24ed3cc2496a3c670df66c96d02461a4da67473685adf3\"},",
          "454:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:bfbbfa36f400b81d1978c940616bc77776424e5e34cb0c94974b178d727cfcd5\"},",
          "455:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:89fed99553a04ec4f9067031f83a886d7fdec5952005551a896a4b6a59575bb9\"},",
          "456:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:40a5e3685462079e5fdee7c6789e3ef270595e1755199f0d50685e72523e1d2a\"},",
          "457:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:44936b2978d3f2648727b3eaeab6d7fa0bedf072dc5207bf35a96d5ee7c004cf\"},",
          "458:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:e628503187b5d494bf29ffc52d3e1e57bb770ce7ce05d67c4bbdb3a0c7d3b05f\"},",
          "459:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:0d5da0fc84aacb0e4bd69c41b31edbf71b39fe2fb32a54eaedcaea241050855c\"},",
          "460:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:6a7b03a5b98e911a7785b9116805bd782815c5e2bd6c91c6a320f26fd3e7b7ad\"},",
          "461:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:cea5bdedd10aace3c660fedeac8b087136b4366d4ee49a30f1ebf7409bce00ae\"},",
          "462:     {file = \"multiprocess-0.70.14-py310-none-any.whl\", hash = \"sha256:7dc1f2f6a1d34894c8a9a013fbc807971e336e7cc3f3ff233e61b9dc679b3b5c\"},",
          "463:     {file = \"multiprocess-0.70.14-py37-none-any.whl\", hash = \"sha256:93a8208ca0926d05cdbb5b9250a604c401bed677579e96c14da3090beb798193\"},",
          "464:     {file = \"multiprocess-0.70.14-py38-none-any.whl\", hash = \"sha256:6725bc79666bbd29a73ca148a0fb5f4ea22eed4a8f22fce58296492a02d18a7b\"},",
          "465:     {file = \"multiprocess-0.70.14-py39-none-any.whl\", hash = \"sha256:63cee628b74a2c0631ef15da5534c8aedbc10c38910b9c8b18dcd327528d1ec7\"},",
          "466:     {file = \"multiprocess-0.70.14.tar.gz\", hash = \"sha256:3eddafc12f2260d27ae03fe6069b12570ab4764ab59a75e81624fac453fbf46a\"},",
          "467: ]",
          "469: [package.dependencies]",
          "470: dill = \">=0.3.6\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "540: [package.dependencies]",
          "541: pyparsing = \">=2.0.2,<3.0.5 || >3.0.5\"",
          "571: [[package]]",
          "572: name = \"peewee\"",
          "573: version = \"3.16.2\"",
          "",
          "[Removed Lines]",
          "543: [[package]]",
          "544: name = \"pathos\"",
          "545: version = \"0.3.0\"",
          "546: description = \"parallel graph management and execution in heterogeneous computing\"",
          "547: optional = false",
          "548: python-versions = \">=3.7\"",
          "549: files = [",
          "550:     {file = \"pathos-0.3.0-py3-none-any.whl\", hash = \"sha256:b1f5a79b1c79a594330d451832642ee5bb61dd77dc75ba9e5c72087c77e8994c\"},",
          "551:     {file = \"pathos-0.3.0.tar.gz\", hash = \"sha256:24fa8db51fbd9284da8e191794097c4bb2aa3fce411090e57af6385e61b97e09\"},",
          "552: ]",
          "554: [package.dependencies]",
          "555: dill = \">=0.3.6\"",
          "556: multiprocess = \">=0.70.14\"",
          "557: pox = \">=0.3.2\"",
          "558: ppft = \">=1.7.6.6\"",
          "560: [[package]]",
          "561: name = \"pathspec\"",
          "562: version = \"0.11.1\"",
          "563: description = \"Utility library for gitignore style pattern matching of file paths.\"",
          "564: optional = false",
          "565: python-versions = \">=3.7\"",
          "566: files = [",
          "567:     {file = \"pathspec-0.11.1-py3-none-any.whl\", hash = \"sha256:d8af70af76652554bd134c22b3e8a1cc46ed7d91edcdd721ef1a0c51a84a5293\"},",
          "568:     {file = \"pathspec-0.11.1.tar.gz\", hash = \"sha256:2798de800fa92780e33acca925945e9a19a133b715067cf165b8866c15a31687\"},",
          "569: ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "578:     {file = \"peewee-3.16.2.tar.gz\", hash = \"sha256:10769981198c7311f84a0ca8db892fa213303a8eb1305deb795a71e7bd606a91\"},",
          "579: ]",
          "596: [[package]]",
          "597: name = \"pluggy\"",
          "598: version = \"1.2.0\"",
          "",
          "[Removed Lines]",
          "581: [[package]]",
          "582: name = \"platformdirs\"",
          "583: version = \"3.7.0\"",
          "584: description = \"A small Python package for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"",
          "585: optional = false",
          "586: python-versions = \">=3.7\"",
          "587: files = [",
          "588:     {file = \"platformdirs-3.7.0-py3-none-any.whl\", hash = \"sha256:cfd065ba43133ff103ab3bd10aecb095c2a0035fcd1f07217c9376900d94ba07\"},",
          "589:     {file = \"platformdirs-3.7.0.tar.gz\", hash = \"sha256:87fbf6473e87c078d536980ba970a472422e94f17b752cfad17024c18876d481\"},",
          "590: ]",
          "592: [package.extras]",
          "593: docs = [\"furo (>=2023.5.20)\", \"proselint (>=0.13)\", \"sphinx (>=7.0.1)\", \"sphinx-autodoc-typehints (>=1.23,!=1.23.4)\"]",
          "594: test = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=7.3.1)\", \"pytest-cov (>=4.1)\", \"pytest-mock (>=3.10)\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "608: dev = [\"pre-commit\", \"tox\"]",
          "609: testing = [\"pytest\", \"pytest-benchmark\"]",
          "636: [[package]]",
          "637: name = \"prettytable\"",
          "638: version = \"3.8.0\"",
          "",
          "[Removed Lines]",
          "611: [[package]]",
          "612: name = \"pox\"",
          "613: version = \"0.3.2\"",
          "614: description = \"utilities for filesystem exploration and automated builds\"",
          "615: optional = false",
          "616: python-versions = \">=3.7\"",
          "617: files = [",
          "618:     {file = \"pox-0.3.2-py3-none-any.whl\", hash = \"sha256:56fe2f099ecd8a557b8948082504492de90e8598c34733c9b1fdeca8f7b6de61\"},",
          "619:     {file = \"pox-0.3.2.tar.gz\", hash = \"sha256:e825225297638d6e3d49415f8cfb65407a5d15e56f2fb7fe9d9b9e3050c65ee1\"},",
          "620: ]",
          "622: [[package]]",
          "623: name = \"ppft\"",
          "624: version = \"1.7.6.6\"",
          "625: description = \"distributed and parallel python\"",
          "626: optional = false",
          "627: python-versions = \">=3.7\"",
          "628: files = [",
          "629:     {file = \"ppft-1.7.6.6-py3-none-any.whl\", hash = \"sha256:f355d2caeed8bd7c9e4a860c471f31f7e66d1ada2791ab5458ea7dca15a51e41\"},",
          "630:     {file = \"ppft-1.7.6.6.tar.gz\", hash = \"sha256:f933f0404f3e808bc860745acb3b79cd4fe31ea19a20889a645f900415be60f1\"},",
          "631: ]",
          "633: [package.extras]",
          "634: dill = [\"dill (>=0.3.6)\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "812: [package.dependencies]",
          "813: six = \">=1.5\"",
          "829: [[package]]",
          "830: name = \"python-lsp-jsonrpc\"",
          "831: version = \"1.0.0\"",
          "",
          "[Removed Lines]",
          "815: [[package]]",
          "816: name = \"python-dotenv\"",
          "817: version = \"1.0.0\"",
          "818: description = \"Read key-value pairs from a .env file and set them as environment variables\"",
          "819: optional = false",
          "820: python-versions = \">=3.8\"",
          "821: files = [",
          "822:     {file = \"python-dotenv-1.0.0.tar.gz\", hash = \"sha256:a8df96034aae6d2d50a4ebe8216326c61c3eb64836776504fcca410e5937a3ba\"},",
          "823:     {file = \"python_dotenv-1.0.0-py3-none-any.whl\", hash = \"sha256:f5971a9226b701070a4bf2c38c89e5a3f0d64de8debda981d1db98583009122a\"},",
          "824: ]",
          "826: [package.extras]",
          "827: cli = [\"click (>=5.0)\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "859: [package.extras]",
          "860: \"better date conversion\" = [\"python-dateutil\"]",
          "885: [[package]]",
          "886: name = \"pyyaml\"",
          "887: version = \"6.0\"",
          "",
          "[Removed Lines]",
          "862: [[package]]",
          "863: name = \"pywin32\"",
          "864: version = \"306\"",
          "865: description = \"Python for Window Extensions\"",
          "866: optional = false",
          "867: python-versions = \"*\"",
          "868: files = [",
          "869:     {file = \"pywin32-306-cp310-cp310-win32.whl\", hash = \"sha256:06d3420a5155ba65f0b72f2699b5bacf3109f36acbe8923765c22938a69dfc8d\"},",
          "870:     {file = \"pywin32-306-cp310-cp310-win_amd64.whl\", hash = \"sha256:84f4471dbca1887ea3803d8848a1616429ac94a4a8d05f4bc9c5dcfd42ca99c8\"},",
          "871:     {file = \"pywin32-306-cp311-cp311-win32.whl\", hash = \"sha256:e65028133d15b64d2ed8f06dd9fbc268352478d4f9289e69c190ecd6818b6407\"},",
          "872:     {file = \"pywin32-306-cp311-cp311-win_amd64.whl\", hash = \"sha256:a7639f51c184c0272e93f244eb24dafca9b1855707d94c192d4a0b4c01e1100e\"},",
          "873:     {file = \"pywin32-306-cp311-cp311-win_arm64.whl\", hash = \"sha256:70dba0c913d19f942a2db25217d9a1b726c278f483a919f1abfed79c9cf64d3a\"},",
          "874:     {file = \"pywin32-306-cp312-cp312-win32.whl\", hash = \"sha256:383229d515657f4e3ed1343da8be101000562bf514591ff383ae940cad65458b\"},",
          "875:     {file = \"pywin32-306-cp312-cp312-win_amd64.whl\", hash = \"sha256:37257794c1ad39ee9be652da0462dc2e394c8159dfd913a8a4e8eb6fd346da0e\"},",
          "876:     {file = \"pywin32-306-cp312-cp312-win_arm64.whl\", hash = \"sha256:5821ec52f6d321aa59e2db7e0a35b997de60c201943557d108af9d4ae1ec7040\"},",
          "877:     {file = \"pywin32-306-cp37-cp37m-win32.whl\", hash = \"sha256:1c73ea9a0d2283d889001998059f5eaaba3b6238f767c9cf2833b13e6a685f65\"},",
          "878:     {file = \"pywin32-306-cp37-cp37m-win_amd64.whl\", hash = \"sha256:72c5f621542d7bdd4fdb716227be0dd3f8565c11b280be6315b06ace35487d36\"},",
          "879:     {file = \"pywin32-306-cp38-cp38-win32.whl\", hash = \"sha256:e4c092e2589b5cf0d365849e73e02c391c1349958c5ac3e9d5ccb9a28e017b3a\"},",
          "880:     {file = \"pywin32-306-cp38-cp38-win_amd64.whl\", hash = \"sha256:e8ac1ae3601bee6ca9f7cb4b5363bf1c0badb935ef243c4733ff9a393b1690c0\"},",
          "881:     {file = \"pywin32-306-cp39-cp39-win32.whl\", hash = \"sha256:e25fd5b485b55ac9c057f67d94bc203f3f6595078d1fb3b458c9c28b7153a802\"},",
          "882:     {file = \"pywin32-306-cp39-cp39-win_amd64.whl\", hash = \"sha256:39b61c15272833b5c329a2989999dcae836b1eed650252ab1b7bfbe1d59f30f4\"},",
          "883: ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1271:     {file = \"wcwidth-0.2.6.tar.gz\", hash = \"sha256:a5220780a404dbe3353789870978e472cfe477761f06ee55077256e509b156d0\"},",
          "1272: ]",
          "1290: [metadata]",
          "1291: lock-version = \"2.0\"",
          "1292: python-versions = \">=3.10,<4\"",
          "",
          "[Removed Lines]",
          "1274: [[package]]",
          "1275: name = \"websocket-client\"",
          "1276: version = \"1.6.0\"",
          "1277: description = \"WebSocket client for Python with low level API options\"",
          "1278: optional = false",
          "1279: python-versions = \">=3.7\"",
          "1280: files = [",
          "1281:     {file = \"websocket-client-1.6.0.tar.gz\", hash = \"sha256:e84c7eafc66aade6d1967a51dfd219aabdf81d15b9705196e11fd81f48666b78\"},",
          "1282:     {file = \"websocket_client-1.6.0-py3-none-any.whl\", hash = \"sha256:72d7802608745b0a212f79b478642473bd825777d8637b6c8c421bf167790d4f\"},",
          "1283: ]",
          "1285: [package.extras]",
          "1286: docs = [\"Sphinx (>=3.4)\", \"sphinx-rtd-theme (>=0.5)\"]",
          "1287: optional = [\"python-socks\", \"wsaccel\"]",
          "1288: test = [\"websockets\"]",
          "1293: content-hash = \"0d905bdf675155ab79440b6041abe2867a068eb7d0441c4e7d4727daf95b10b4\"",
          "",
          "[Added Lines]",
          "1180: content-hash = \"b177e15eabc9c618cb61d127b13e3699cda8c36e114df0bebd06cd1359a56b46\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6568f9d6ff6c3f80f9143812414fa00b89e8a7a3",
      "candidate_info": {
        "commit_hash": "6568f9d6ff6c3f80f9143812414fa00b89e8a7a3",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/6568f9d6ff6c3f80f9143812414fa00b89e8a7a3",
        "files": [
          "poetry.lock",
          "pyproject.toml"
        ],
        "message": "Bump platformdirs from 2.5.2 to 3.0.0\n\nBumps [platformdirs](https://github.com/platformdirs/platformdirs) from 2.5.2 to 3.0.0.\n- [Release notes](https://github.com/platformdirs/platformdirs/releases)\n- [Changelog](https://github.com/platformdirs/platformdirs/blob/main/CHANGES.rst)\n- [Commits](https://github.com/platformdirs/platformdirs/compare/2.5.2...3.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: platformdirs\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "491: [[package]]",
          "492: name = \"platformdirs\"",
          "495: category = \"main\"",
          "496: optional = false",
          "497: python-versions = \">=3.7\"",
          "498: files = [",
          "501: ]",
          "503: [package.extras]",
          "507: [[package]]",
          "508: name = \"pluggy\"",
          "",
          "[Removed Lines]",
          "493: version = \"2.5.2\"",
          "494: description = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"",
          "499:     {file = \"platformdirs-2.5.2-py3-none-any.whl\", hash = \"sha256:027d8e83a2d7de06bbac4e5ef7e023c02b863d7ea5d079477e722bb41ab25788\"},",
          "500:     {file = \"platformdirs-2.5.2.tar.gz\", hash = \"sha256:58c8abb07dcb441e6ee4b11d8df0ac856038f944ab98b7be6b27b2a3c7feef19\"},",
          "504: docs = [\"furo (>=2021.7.5b38)\", \"proselint (>=0.10.2)\", \"sphinx (>=4)\", \"sphinx-autodoc-typehints (>=1.12)\"]",
          "505: test = [\"appdirs (==1.4.4)\", \"pytest (>=6)\", \"pytest-cov (>=2.7)\", \"pytest-mock (>=3.6)\"]",
          "",
          "[Added Lines]",
          "493: version = \"3.0.0\"",
          "494: description = \"A small Python package for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"",
          "499:     {file = \"platformdirs-3.0.0-py3-none-any.whl\", hash = \"sha256:b1d5eb14f221506f50d6604a561f4c5786d9e80355219694a1b244bcd96f4567\"},",
          "500:     {file = \"platformdirs-3.0.0.tar.gz\", hash = \"sha256:8a1228abb1ef82d788f74139988b137e78692984ec7b08eaa6c65f1723af28f9\"},",
          "504: docs = [\"furo (>=2022.12.7)\", \"proselint (>=0.13)\", \"sphinx (>=6.1.3)\", \"sphinx-autodoc-typehints (>=1.22,!=1.23.4)\"]",
          "505: test = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.2.2)\", \"pytest (>=7.2.1)\", \"pytest-cov (>=4)\", \"pytest-mock (>=3.10)\"]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1237: [metadata]",
          "1238: lock-version = \"2.0\"",
          "1239: python-versions = \">=3.10,<4\"",
          "",
          "[Removed Lines]",
          "1240: content-hash = \"69111e08a1abad67e151e0afa3404ac1552b82927744113090bb17408ce7fca6\"",
          "",
          "[Added Lines]",
          "1240: content-hash = \"0007c07a405764a790566728a02b9d6d4510c4a103b41214a2ac769c661aa77a\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c517ffafcf8907b159146ae51d897cd3bcddbfe",
      "candidate_info": {
        "commit_hash": "1c517ffafcf8907b159146ae51d897cd3bcddbfe",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/1c517ffafcf8907b159146ae51d897cd3bcddbfe",
        "files": [
          ".github/workflows/test.yml",
          "poetry.lock"
        ],
        "message": "Add simple integration test (#85)",
        "before_after_code_files": [
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: [[package]]",
          "10: name = \"attrs\"",
          "11: version = \"21.4.0\"",
          "",
          "[Removed Lines]",
          "1: [[package]]",
          "2: name = \"atomicwrites\"",
          "3: version = \"1.4.1\"",
          "4: description = \"Atomic file writes.\"",
          "5: category = \"main\"",
          "6: optional = false",
          "7: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: [[package]]",
          "40: name = \"certifi\"",
          "42: description = \"Python package for providing Mozilla's CA Bundle.\"",
          "43: category = \"main\"",
          "44: optional = false",
          "",
          "[Removed Lines]",
          "41: version = \"2022.6.15\"",
          "",
          "[Added Lines]",
          "33: version = \"2022.9.24\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100: [[package]]",
          "101: name = \"dill\"",
          "103: description = \"serialize all of python\"",
          "104: category = \"main\"",
          "105: optional = false",
          "108: [package.extras]",
          "109: graph = [\"objgraph (>=1.7.2)\"]",
          "",
          "[Removed Lines]",
          "102: version = \"0.3.5.1\"",
          "106: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"",
          "",
          "[Added Lines]",
          "94: version = \"0.3.6\"",
          "98: python-versions = \">=3.7\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126: [package.extras]",
          "127: ssh = [\"paramiko (>=2.4.3)\"]",
          "129: [[package]]",
          "130: name = \"face\"",
          "131: version = \"20.1.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121: [[package]]",
          "122: name = \"exceptiongroup\"",
          "123: version = \"1.0.4\"",
          "124: description = \"Backport of PEP 654 (exception groups)\"",
          "125: category = \"main\"",
          "126: optional = false",
          "127: python-versions = \">=3.7\"",
          "129: [package.extras]",
          "130: test = [\"pytest (>=6)\"]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "217: [[package]]",
          "218: name = \"multiprocess\"",
          "220: description = \"better multiprocessing and multithreading in python\"",
          "221: category = \"main\"",
          "222: optional = false",
          "225: [package.dependencies]",
          "228: [[package]]",
          "229: name = \"mypy-extensions\"",
          "",
          "[Removed Lines]",
          "219: version = \"0.70.13\"",
          "223: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"",
          "226: dill = \">=0.3.5.1\"",
          "",
          "[Added Lines]",
          "222: version = \"0.70.14\"",
          "226: python-versions = \">=3.7\"",
          "229: dill = \">=0.3.6\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "269: [[package]]",
          "270: name = \"peewee\"",
          "272: description = \"a little orm\"",
          "273: category = \"main\"",
          "274: optional = false",
          "",
          "[Removed Lines]",
          "271: version = \"3.15.1\"",
          "",
          "[Added Lines]",
          "274: version = \"3.15.4\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "301: [[package]]",
          "302: name = \"pox\"",
          "304: description = \"utilities for filesystem exploration and automated builds\"",
          "305: category = \"main\"",
          "306: optional = false",
          "309: [[package]]",
          "310: name = \"ppft\"",
          "312: description = \"distributed and parallel python\"",
          "313: category = \"main\"",
          "314: optional = false",
          "320: [package.extras]",
          "331: [[package]]",
          "332: name = \"pycodestyle\"",
          "",
          "[Removed Lines]",
          "303: version = \"0.3.1\"",
          "307: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"",
          "311: version = \"1.7.6.5\"",
          "315: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"",
          "317: [package.dependencies]",
          "318: six = \">=1.7.3\"",
          "321: dill = [\"dill (>=0.3.5)\"]",
          "323: [[package]]",
          "324: name = \"py\"",
          "325: version = \"1.11.0\"",
          "326: description = \"library with cross-python path, ini-parsing, io, code, log facilities\"",
          "327: category = \"main\"",
          "328: optional = false",
          "329: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"",
          "",
          "[Added Lines]",
          "306: version = \"0.3.2\"",
          "310: python-versions = \">=3.7\"",
          "314: version = \"1.7.6.6\"",
          "318: python-versions = \">=3.7\"",
          "321: dill = [\"dill (>=0.3.6)\"]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "358: [[package]]",
          "359: name = \"pyrsistent\"",
          "361: description = \"Persistent/Functional/Immutable data structures\"",
          "362: category = \"main\"",
          "363: optional = false",
          "",
          "[Removed Lines]",
          "360: version = \"0.18.1\"",
          "",
          "[Added Lines]",
          "352: version = \"0.19.2\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "366: [[package]]",
          "367: name = \"pytest\"",
          "369: description = \"pytest: simple powerful testing with Python\"",
          "370: category = \"main\"",
          "371: optional = false",
          "372: python-versions = \">=3.7\"",
          "374: [package.dependencies]",
          "376: attrs = \">=19.2.0\"",
          "377: colorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "378: iniconfig = \"*\"",
          "379: packaging = \"*\"",
          "380: pluggy = \">=0.12,<2.0\"",
          "384: [package.extras]",
          "385: testing = [\"argcomplete\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"xmlschema\"]",
          "",
          "[Removed Lines]",
          "368: version = \"7.1.2\"",
          "375: atomicwrites = {version = \">=1.0\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "381: py = \">=1.8.2\"",
          "382: tomli = \">=1.0.0\"",
          "",
          "[Added Lines]",
          "360: version = \"7.2.0\"",
          "369: exceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}",
          "373: tomli = {version = \">=1.0.0\", markers = \"python_version < \\\"3.11\\\"\"}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "437: [[package]]",
          "438: name = \"pywin32\"",
          "440: description = \"Python for Window Extensions\"",
          "441: category = \"main\"",
          "442: optional = false",
          "",
          "[Removed Lines]",
          "439: version = \"304\"",
          "",
          "[Added Lines]",
          "430: version = \"305\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "461: use-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]",
          "463: [[package]]",
          "465: version = \"0.17.21\"",
          "466: description = \"ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order\"",
          "467: category = \"main\"",
          "",
          "[Removed Lines]",
          "464: name = \"ruamel.yaml\"",
          "",
          "[Added Lines]",
          "455: name = \"ruamel-yaml\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "476: jinja2 = [\"ruamel.yaml.jinja2 (>=0.2)\"]",
          "478: [[package]]",
          "481: description = \"C version of reader, parser and emitter for ruamel.yaml derived from libyaml\"",
          "482: category = \"main\"",
          "483: optional = false",
          "",
          "[Removed Lines]",
          "479: name = \"ruamel.yaml.clib\"",
          "480: version = \"0.2.6\"",
          "",
          "[Added Lines]",
          "470: name = \"ruamel-yaml-clib\"",
          "471: version = \"0.2.7\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "514: [package.extras]",
          "515: experiments = [\"jsonnet (>=0.18,<1.0)\"]",
          "517: [[package]]",
          "518: name = \"six\"",
          "519: version = \"1.16.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "508: [[package]]",
          "509: name = \"setuptools\"",
          "510: version = \"65.6.3\"",
          "511: description = \"Easily download, build, install, upgrade, and uninstall Python packages\"",
          "512: category = \"main\"",
          "513: optional = false",
          "514: python-versions = \">=3.7\"",
          "516: [package.extras]",
          "517: docs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-hoverxref (<2)\", \"sphinx-inline-tabs\", \"sphinx-notfound-page (==0.8.3)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\"]",
          "518: testing = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"flake8 (<5)\", \"flake8-2020\", \"ini2toml[lite] (>=0.9)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pip (>=19.1)\", \"pip-run (>=8.8)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-flake8\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf\", \"pytest-timeout\", \"pytest-xdist\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "519: testing-integration = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pytest\", \"pytest-enabler\", \"pytest-xdist\", \"tomli\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "525: [[package]]",
          "526: name = \"termcolor\"",
          "528: description = \"ANSI color formatting for output in terminal\"",
          "529: category = \"main\"",
          "530: optional = false",
          "",
          "[Removed Lines]",
          "527: version = \"2.1.0\"",
          "",
          "[Added Lines]",
          "531: version = \"2.1.1\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "614: [metadata]",
          "615: lock-version = \"1.1\"",
          "616: python-versions = \">=3.9, <4\"",
          "619: [metadata.files]",
          "623: attrs = [",
          "624:     {file = \"attrs-21.4.0-py2.py3-none-any.whl\", hash = \"sha256:2d27e3784d7a565d36ab851fe94887c5eccd6a463168875832a1be79c82828b4\"},",
          "625:     {file = \"attrs-21.4.0.tar.gz\", hash = \"sha256:626ba8234211db98e869df76230a137c4c40a12d72445c45d5f5b716f076e2fd\"},",
          "",
          "[Removed Lines]",
          "617: content-hash = \"22667f3d22e91d7ad659fea68e700b90fddc7595914971f3ab78a0c052746ec6\"",
          "620: atomicwrites = [",
          "621:     {file = \"atomicwrites-1.4.1.tar.gz\", hash = \"sha256:81b2c9071a49367a7f770170e5eec8cb66567cfbbc8c73d20ce5ca4a8d71cf11\"},",
          "622: ]",
          "",
          "[Added Lines]",
          "621: content-hash = \"a2ee2a3bf8cdebfd91939977044d2a626e5b54500965da9d66a70c3c9b71ca2c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "633:     {file = \"bracex-2.3.post1.tar.gz\", hash = \"sha256:e7b23fc8b2cd06d3dec0692baabecb249dda94e06a617901ff03a6c56fd71693\"},",
          "634: ]",
          "635: certifi = [",
          "638: ]",
          "639: charset-normalizer = [",
          "640:     {file = \"charset-normalizer-2.1.0.tar.gz\", hash = \"sha256:575e708016ff3a5e3681541cb9d79312c416835686d054a23accb873b254f413\"},",
          "",
          "[Removed Lines]",
          "636:     {file = \"certifi-2022.6.15-py3-none-any.whl\", hash = \"sha256:fe86415d55e84719d75f8b69414f6438ac3547d2078ab91b67e779ef69378412\"},",
          "637:     {file = \"certifi-2022.6.15.tar.gz\", hash = \"sha256:84c85a9078b11105f04f3036a9482ae10e4621616db313fe045dd24743a0820d\"},",
          "",
          "[Added Lines]",
          "637:     {file = \"certifi-2022.9.24-py3-none-any.whl\", hash = \"sha256:90c1a32f1d68f940488354e36370f6cca89f0f106db09518524c88d6ed83f382\"},",
          "638:     {file = \"certifi-2022.9.24.tar.gz\", hash = \"sha256:0d9c601124e5a6ba9712dbc60d9c53c21e34f5f641fe83002317394311bdce14\"},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "657:     {file = \"defusedxml-0.7.1.tar.gz\", hash = \"sha256:1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69\"},",
          "658: ]",
          "659: dill = [",
          "662: ]",
          "663: docker = [",
          "664:     {file = \"docker-6.0.0b1-py3-none-any.whl\", hash = \"sha256:61e4a5c726d76ee1e4632e9626b6e3b99dadff3ffd6b24b246b68c05d854bd11\"},",
          "665:     {file = \"docker-6.0.0b1.tar.gz\", hash = \"sha256:a38b57fd6ad112dade98b795dc94a790b347134b140a5d43d7634aa6ad928859\"},",
          "666: ]",
          "667: face = [",
          "668:     {file = \"face-20.1.1-py2-none-any.whl\", hash = \"sha256:3790311a7329e4b0d90baee346eecad54b337629576edf3a246683a5f0d24446\"},",
          "669:     {file = \"face-20.1.1.tar.gz\", hash = \"sha256:7d59ca5ba341316e58cf72c6aff85cca2541cf5056c4af45cb63af9a814bed3e\"},",
          "",
          "[Removed Lines]",
          "660:     {file = \"dill-0.3.5.1-py2.py3-none-any.whl\", hash = \"sha256:33501d03270bbe410c72639b350e941882a8b0fd55357580fbc873fba0c59302\"},",
          "661:     {file = \"dill-0.3.5.1.tar.gz\", hash = \"sha256:d75e41f3eff1eee599d738e76ba8f4ad98ea229db8b085318aa2b3333a208c86\"},",
          "",
          "[Added Lines]",
          "661:     {file = \"dill-0.3.6-py3-none-any.whl\", hash = \"sha256:a07ffd2351b8c678dfc4a856a3005f8067aea51d6ba6c700796a4d9e280f39f0\"},",
          "662:     {file = \"dill-0.3.6.tar.gz\", hash = \"sha256:e5db55f3687856d8fbdab002ed78544e1c4559a130302693d839dfe8f93f2373\"},",
          "668: exceptiongroup = [",
          "669:     {file = \"exceptiongroup-1.0.4-py3-none-any.whl\", hash = \"sha256:542adf9dea4055530d6e1279602fa5cb11dab2395fa650b8674eaec35fc4a828\"},",
          "670:     {file = \"exceptiongroup-1.0.4.tar.gz\", hash = \"sha256:bd14967b79cd9bdb54d97323216f8fdf533e278df937aa2a90089e7d6e06e5ec\"},",
          "671: ]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "696:     {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},",
          "697: ]",
          "698: multiprocess = [",
          "720: ]",
          "721: mypy-extensions = [",
          "722:     {file = \"mypy_extensions-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\"},",
          "",
          "[Removed Lines]",
          "699:     {file = \"multiprocess-0.70.13-cp27-cp27m-macosx_10_14_x86_64.whl\", hash = \"sha256:b9a3be43ecee6776a9e7223af96914a0164f306affcf4624b213885172236b77\"},",
          "700:     {file = \"multiprocess-0.70.13-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:7e6a689da3490412caa7b3e27c3385d8aaa49135f3a353ace94ca47e4c926d37\"},",
          "701:     {file = \"multiprocess-0.70.13-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:17cb4229aa43e6973679d67c66a454cbf8b6b0d038425cba3220ea5a06d61b58\"},",
          "702:     {file = \"multiprocess-0.70.13-cp27-cp27m-win32.whl\", hash = \"sha256:99bb68dd0d5b3d30fe104721bee26e4637667112d5951b51feb81479fd560876\"},",
          "703:     {file = \"multiprocess-0.70.13-cp27-cp27m-win_amd64.whl\", hash = \"sha256:6cdde49defcb933062df382ebc9b5299beebcd157a98b3a65291c1c94a2edc41\"},",
          "704:     {file = \"multiprocess-0.70.13-pp27-pypy_73-macosx_10_7_x86_64.whl\", hash = \"sha256:92003c247436f8699b7692e95346a238446710f078500eb364bc23bb0503dd4f\"},",
          "705:     {file = \"multiprocess-0.70.13-pp27-pypy_73-manylinux2010_x86_64.whl\", hash = \"sha256:3ec1c8015e19182bfa01b5887a9c25805c48df3c71863f48fe83803147cde5d6\"},",
          "706:     {file = \"multiprocess-0.70.13-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:b7415f61bddfffdade73396904551be8124a4a363322aa9c72d42e349c5fca39\"},",
          "707:     {file = \"multiprocess-0.70.13-pp37-pypy37_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:5436d1cd9f901f7ddc4f20b6fd0b462c87dcc00d941cc13eeb2401fc5bd00e42\"},",
          "708:     {file = \"multiprocess-0.70.13-pp37-pypy37_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:34e9703bd5b9fee5455c93a74e44dbabe55481c214d03be1e65f037be9d0c520\"},",
          "709:     {file = \"multiprocess-0.70.13-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:af0a48440aa8f793d8bb100f20102c12f192de5a608638819a998f2cc59e1fcd\"},",
          "710:     {file = \"multiprocess-0.70.13-pp38-pypy38_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:c4a97216e8319039c69a266252cc68a392b96f9e67e3ed02ad88be9e6f2d2969\"},",
          "711:     {file = \"multiprocess-0.70.13-pp38-pypy38_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:48315eefe02c35dd7560da3fa8af66d9f4a61b9dc8f7c40801c5f972ab4604b1\"},",
          "712:     {file = \"multiprocess-0.70.13-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:5a6dca5f29f0224c855d0d5cad963476175cfc8de112d3eebe85914cb735f130\"},",
          "713:     {file = \"multiprocess-0.70.13-pp39-pypy39_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:5974bdad390ba466cc130288d2ef1048fdafedd01cf4641fc024f6088af70bfe\"},",
          "714:     {file = \"multiprocess-0.70.13-pp39-pypy39_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:01c1137d2f18d0cd262d0fdb7294b1fe9fc3e8dc8b126e506085434ae8eb3677\"},",
          "715:     {file = \"multiprocess-0.70.13-py310-none-any.whl\", hash = \"sha256:0f4faf4811019efdb2f91db09240f893ee40cbfcb06978f3b8ed8c248e73babe\"},",
          "716:     {file = \"multiprocess-0.70.13-py37-none-any.whl\", hash = \"sha256:62e556a0c31ec7176e28aa331663ac26c276ee3536b5e9bb5e850681e7a00f11\"},",
          "717:     {file = \"multiprocess-0.70.13-py38-none-any.whl\", hash = \"sha256:7be9e320a41d2d0d0eddacfe693cfb07b4cb9c0d3d10007f4304255c15215778\"},",
          "718:     {file = \"multiprocess-0.70.13-py39-none-any.whl\", hash = \"sha256:00ef48461d43d1e30f8f4b2e1b287ecaaffec325a37053beb5503e0d69e5a3cd\"},",
          "719:     {file = \"multiprocess-0.70.13.tar.gz\", hash = \"sha256:2e096dd618a84d15aa369a9cf6695815e5539f853dc8fa4f4b9153b11b1d0b32\"},",
          "",
          "[Added Lines]",
          "704:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:560a27540daef4ce8b24ed3cc2496a3c670df66c96d02461a4da67473685adf3\"},",
          "705:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:bfbbfa36f400b81d1978c940616bc77776424e5e34cb0c94974b178d727cfcd5\"},",
          "706:     {file = \"multiprocess-0.70.14-pp37-pypy37_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:89fed99553a04ec4f9067031f83a886d7fdec5952005551a896a4b6a59575bb9\"},",
          "707:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:40a5e3685462079e5fdee7c6789e3ef270595e1755199f0d50685e72523e1d2a\"},",
          "708:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:44936b2978d3f2648727b3eaeab6d7fa0bedf072dc5207bf35a96d5ee7c004cf\"},",
          "709:     {file = \"multiprocess-0.70.14-pp38-pypy38_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:e628503187b5d494bf29ffc52d3e1e57bb770ce7ce05d67c4bbdb3a0c7d3b05f\"},",
          "710:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:0d5da0fc84aacb0e4bd69c41b31edbf71b39fe2fb32a54eaedcaea241050855c\"},",
          "711:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-manylinux_2_24_i686.whl\", hash = \"sha256:6a7b03a5b98e911a7785b9116805bd782815c5e2bd6c91c6a320f26fd3e7b7ad\"},",
          "712:     {file = \"multiprocess-0.70.14-pp39-pypy39_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:cea5bdedd10aace3c660fedeac8b087136b4366d4ee49a30f1ebf7409bce00ae\"},",
          "713:     {file = \"multiprocess-0.70.14-py310-none-any.whl\", hash = \"sha256:7dc1f2f6a1d34894c8a9a013fbc807971e336e7cc3f3ff233e61b9dc679b3b5c\"},",
          "714:     {file = \"multiprocess-0.70.14-py37-none-any.whl\", hash = \"sha256:93a8208ca0926d05cdbb5b9250a604c401bed677579e96c14da3090beb798193\"},",
          "715:     {file = \"multiprocess-0.70.14-py38-none-any.whl\", hash = \"sha256:6725bc79666bbd29a73ca148a0fb5f4ea22eed4a8f22fce58296492a02d18a7b\"},",
          "716:     {file = \"multiprocess-0.70.14-py39-none-any.whl\", hash = \"sha256:63cee628b74a2c0631ef15da5534c8aedbc10c38910b9c8b18dcd327528d1ec7\"},",
          "717:     {file = \"multiprocess-0.70.14.tar.gz\", hash = \"sha256:3eddafc12f2260d27ae03fe6069b12570ab4764ab59a75e81624fac453fbf46a\"},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "736:     {file = \"pathspec-0.9.0.tar.gz\", hash = \"sha256:e564499435a2673d586f6b2130bb5b95f04a3ba06f81b8f895b651a3c76aabb1\"},",
          "737: ]",
          "738: peewee = [",
          "740: ]",
          "741: platformdirs = [",
          "742:     {file = \"platformdirs-2.5.2-py3-none-any.whl\", hash = \"sha256:027d8e83a2d7de06bbac4e5ef7e023c02b863d7ea5d079477e722bb41ab25788\"},",
          "",
          "[Removed Lines]",
          "739:     {file = \"peewee-3.15.1.tar.gz\", hash = \"sha256:6d5db3babc33819ac326f1550e5a39677f4584094c567a7b88cc6bf7bcdcb687\"},",
          "",
          "[Added Lines]",
          "737:     {file = \"peewee-3.15.4.tar.gz\", hash = \"sha256:2581520c8dfbacd9d580c2719ae259f0637a9e46eda47dfc0ce01864c6366205\"},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "747:     {file = \"pluggy-1.0.0.tar.gz\", hash = \"sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159\"},",
          "748: ]",
          "749: pox = [",
          "752: ]",
          "753: ppft = [",
          "760: ]",
          "761: pycodestyle = [",
          "762:     {file = \"pycodestyle-2.9.1-py2.py3-none-any.whl\", hash = \"sha256:d1735fc58b418fd7c5f658d28d943854f8a849b01a5d0a1e6f3f3fdd0166804b\"},",
          "",
          "[Removed Lines]",
          "750:     {file = \"pox-0.3.1-py2.py3-none-any.whl\", hash = \"sha256:541b5c845aacb806c1364d4142003efb809d654c9ca8db82e650ee86c81e680b\"},",
          "751:     {file = \"pox-0.3.1.tar.gz\", hash = \"sha256:cbb0c0acd650c0ffb620999da611e93aae5105c46a084c4ceaf2f704ed708c1e\"},",
          "754:     {file = \"ppft-1.7.6.5-py2.py3-none-any.whl\", hash = \"sha256:07166097d7dd45af7b98859654390d579d11dadf20780f6baca4bded3f55a580\"},",
          "755:     {file = \"ppft-1.7.6.5.tar.gz\", hash = \"sha256:47e0dab87a516c0b9992cd5b0c908348e4c7d964304d106b227fad28ae03219e\"},",
          "756: ]",
          "757: py = [",
          "758:     {file = \"py-1.11.0-py2.py3-none-any.whl\", hash = \"sha256:607c53218732647dff4acdfcd50cb62615cedf612e72d1724fb1a0cc6405b378\"},",
          "759:     {file = \"py-1.11.0.tar.gz\", hash = \"sha256:51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719\"},",
          "",
          "[Added Lines]",
          "748:     {file = \"pox-0.3.2-py3-none-any.whl\", hash = \"sha256:56fe2f099ecd8a557b8948082504492de90e8598c34733c9b1fdeca8f7b6de61\"},",
          "749:     {file = \"pox-0.3.2.tar.gz\", hash = \"sha256:e825225297638d6e3d49415f8cfb65407a5d15e56f2fb7fe9d9b9e3050c65ee1\"},",
          "752:     {file = \"ppft-1.7.6.6-py3-none-any.whl\", hash = \"sha256:f355d2caeed8bd7c9e4a860c471f31f7e66d1ada2791ab5458ea7dca15a51e41\"},",
          "753:     {file = \"ppft-1.7.6.6.tar.gz\", hash = \"sha256:f933f0404f3e808bc860745acb3b79cd4fe31ea19a20889a645f900415be60f1\"},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "771:     {file = \"pyparsing-3.0.9.tar.gz\", hash = \"sha256:2b020ecf7d21b687f219b71ecad3631f644a47f01403fa1d1036b0c6416d70fb\"},",
          "772: ]",
          "773: pyrsistent = [",
          "795: ]",
          "796: pytest = [",
          "799: ]",
          "800: python-dateutil = [",
          "801:     {file = \"python-dateutil-2.8.2.tar.gz\", hash = \"sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86\"},",
          "",
          "[Removed Lines]",
          "774:     {file = \"pyrsistent-0.18.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:df46c854f490f81210870e509818b729db4488e1f30f2a1ce1698b2295a878d1\"},",
          "775:     {file = \"pyrsistent-0.18.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d45866ececf4a5fff8742c25722da6d4c9e180daa7b405dc0a2a2790d668c26\"},",
          "776:     {file = \"pyrsistent-0.18.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4ed6784ceac462a7d6fcb7e9b663e93b9a6fb373b7f43594f9ff68875788e01e\"},",
          "777:     {file = \"pyrsistent-0.18.1-cp310-cp310-win32.whl\", hash = \"sha256:e4f3149fd5eb9b285d6bfb54d2e5173f6a116fe19172686797c056672689daf6\"},",
          "778:     {file = \"pyrsistent-0.18.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:636ce2dc235046ccd3d8c56a7ad54e99d5c1cd0ef07d9ae847306c91d11b5fec\"},",
          "779:     {file = \"pyrsistent-0.18.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:e92a52c166426efbe0d1ec1332ee9119b6d32fc1f0bbfd55d5c1088070e7fc1b\"},",
          "780:     {file = \"pyrsistent-0.18.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d7a096646eab884bf8bed965bad63ea327e0d0c38989fc83c5ea7b8a87037bfc\"},",
          "781:     {file = \"pyrsistent-0.18.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cdfd2c361b8a8e5d9499b9082b501c452ade8bbf42aef97ea04854f4a3f43b22\"},",
          "782:     {file = \"pyrsistent-0.18.1-cp37-cp37m-win32.whl\", hash = \"sha256:7ec335fc998faa4febe75cc5268a9eac0478b3f681602c1f27befaf2a1abe1d8\"},",
          "783:     {file = \"pyrsistent-0.18.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:6455fc599df93d1f60e1c5c4fe471499f08d190d57eca040c0ea182301321286\"},",
          "784:     {file = \"pyrsistent-0.18.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:fd8da6d0124efa2f67d86fa70c851022f87c98e205f0594e1fae044e7119a5a6\"},",
          "785:     {file = \"pyrsistent-0.18.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7bfe2388663fd18bd8ce7db2c91c7400bf3e1a9e8bd7d63bf7e77d39051b85ec\"},",
          "786:     {file = \"pyrsistent-0.18.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0e3e1fcc45199df76053026a51cc59ab2ea3fc7c094c6627e93b7b44cdae2c8c\"},",
          "787:     {file = \"pyrsistent-0.18.1-cp38-cp38-win32.whl\", hash = \"sha256:b568f35ad53a7b07ed9b1b2bae09eb15cdd671a5ba5d2c66caee40dbf91c68ca\"},",
          "788:     {file = \"pyrsistent-0.18.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:d1b96547410f76078eaf66d282ddca2e4baae8964364abb4f4dcdde855cd123a\"},",
          "789:     {file = \"pyrsistent-0.18.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:f87cc2863ef33c709e237d4b5f4502a62a00fab450c9e020892e8e2ede5847f5\"},",
          "790:     {file = \"pyrsistent-0.18.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6bc66318fb7ee012071b2792024564973ecc80e9522842eb4e17743604b5e045\"},",
          "791:     {file = \"pyrsistent-0.18.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:914474c9f1d93080338ace89cb2acee74f4f666fb0424896fcfb8d86058bf17c\"},",
          "792:     {file = \"pyrsistent-0.18.1-cp39-cp39-win32.whl\", hash = \"sha256:1b34eedd6812bf4d33814fca1b66005805d3640ce53140ab8bbb1e2651b0d9bc\"},",
          "793:     {file = \"pyrsistent-0.18.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:e24a828f57e0c337c8d8bb9f6b12f09dfdf0273da25fda9e314f0b684b415a07\"},",
          "794:     {file = \"pyrsistent-0.18.1.tar.gz\", hash = \"sha256:d4d61f8b993a7255ba714df3aca52700f8125289f84f704cf80916517c46eb96\"},",
          "797:     {file = \"pytest-7.1.2-py3-none-any.whl\", hash = \"sha256:13d0e3ccfc2b6e26be000cb6568c832ba67ba32e719443bfe725814d3c42433c\"},",
          "798:     {file = \"pytest-7.1.2.tar.gz\", hash = \"sha256:a06a0425453864a270bc45e71f783330a7428defb4230fb5e6a731fde06ecd45\"},",
          "",
          "[Added Lines]",
          "768:     {file = \"pyrsistent-0.19.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d6982b5a0237e1b7d876b60265564648a69b14017f3b5f908c5be2de3f9abb7a\"},",
          "769:     {file = \"pyrsistent-0.19.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:187d5730b0507d9285a96fca9716310d572e5464cadd19f22b63a6976254d77a\"},",
          "770:     {file = \"pyrsistent-0.19.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:055ab45d5911d7cae397dc418808d8802fb95262751872c841c170b0dbf51eed\"},",
          "771:     {file = \"pyrsistent-0.19.2-cp310-cp310-win32.whl\", hash = \"sha256:456cb30ca8bff00596519f2c53e42c245c09e1a4543945703acd4312949bfd41\"},",
          "772:     {file = \"pyrsistent-0.19.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:b39725209e06759217d1ac5fcdb510e98670af9e37223985f330b611f62e7425\"},",
          "773:     {file = \"pyrsistent-0.19.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:2aede922a488861de0ad00c7630a6e2d57e8023e4be72d9d7147a9fcd2d30712\"},",
          "774:     {file = \"pyrsistent-0.19.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:879b4c2f4d41585c42df4d7654ddffff1239dc4065bc88b745f0341828b83e78\"},",
          "775:     {file = \"pyrsistent-0.19.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c43bec251bbd10e3cb58ced80609c5c1eb238da9ca78b964aea410fb820d00d6\"},",
          "776:     {file = \"pyrsistent-0.19.2-cp37-cp37m-win32.whl\", hash = \"sha256:d690b18ac4b3e3cab73b0b7aa7dbe65978a172ff94970ff98d82f2031f8971c2\"},",
          "777:     {file = \"pyrsistent-0.19.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:3ba4134a3ff0fc7ad225b6b457d1309f4698108fb6b35532d015dca8f5abed73\"},",
          "778:     {file = \"pyrsistent-0.19.2-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:a178209e2df710e3f142cbd05313ba0c5ebed0a55d78d9945ac7a4e09d923308\"},",
          "779:     {file = \"pyrsistent-0.19.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e371b844cec09d8dc424d940e54bba8f67a03ebea20ff7b7b0d56f526c71d584\"},",
          "780:     {file = \"pyrsistent-0.19.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:111156137b2e71f3a9936baf27cb322e8024dac3dc54ec7fb9f0bcf3249e68bb\"},",
          "781:     {file = \"pyrsistent-0.19.2-cp38-cp38-win32.whl\", hash = \"sha256:e5d8f84d81e3729c3b506657dddfe46e8ba9c330bf1858ee33108f8bb2adb38a\"},",
          "782:     {file = \"pyrsistent-0.19.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:9cd3e9978d12b5d99cbdc727a3022da0430ad007dacf33d0bf554b96427f33ab\"},",
          "783:     {file = \"pyrsistent-0.19.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:f1258f4e6c42ad0b20f9cfcc3ada5bd6b83374516cd01c0960e3cb75fdca6770\"},",
          "784:     {file = \"pyrsistent-0.19.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:21455e2b16000440e896ab99e8304617151981ed40c29e9507ef1c2e4314ee95\"},",
          "785:     {file = \"pyrsistent-0.19.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bfd880614c6237243ff53a0539f1cb26987a6dc8ac6e66e0c5a40617296a045e\"},",
          "786:     {file = \"pyrsistent-0.19.2-cp39-cp39-win32.whl\", hash = \"sha256:71d332b0320642b3261e9fee47ab9e65872c2bd90260e5d225dabeed93cbd42b\"},",
          "787:     {file = \"pyrsistent-0.19.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:dec3eac7549869365fe263831f576c8457f6c833937c68542d08fde73457d291\"},",
          "788:     {file = \"pyrsistent-0.19.2-py3-none-any.whl\", hash = \"sha256:ea6b79a02a28550c98b6ca9c35b9f492beaa54d7c5c9e9949555893c8a9234d0\"},",
          "789:     {file = \"pyrsistent-0.19.2.tar.gz\", hash = \"sha256:bfa0351be89c9fcbcb8c9879b826f4353be10f58f8a677efab0c017bf7137ec2\"},",
          "792:     {file = \"pytest-7.2.0-py3-none-any.whl\", hash = \"sha256:892f933d339f068883b6fd5a459f03d85bfcb355e4981e146d2c7616c21fef71\"},",
          "793:     {file = \"pytest-7.2.0.tar.gz\", hash = \"sha256:c4014eb40e10f11f355ad4e3c2fb2c6c6d1919c73f3b5a433de4708202cade59\"},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "813:     {file = \"python-whois-0.8.0.tar.gz\", hash = \"sha256:dd336d3517eace2a7689406db7bb96ada3c5e74327423151aeee3e64225f6220\"},",
          "814: ]",
          "815: pywin32 = [",
          "830: ]",
          "831: requests = [",
          "832:     {file = \"requests-2.28.1-py3-none-any.whl\", hash = \"sha256:8fefa2a1a1365bf5520aac41836fbee479da67864514bdb821f31ce07ce65349\"},",
          "833:     {file = \"requests-2.28.1.tar.gz\", hash = \"sha256:7c5599b102feddaa661c826c56ab4fee28bfd17f5abca1ebbe3e7f19d7c97983\"},",
          "834: ]",
          "836:     {file = \"ruamel.yaml-0.17.21-py3-none-any.whl\", hash = \"sha256:742b35d3d665023981bd6d16b3d24248ce5df75fdb4e2924e93a05c1f8b61ca7\"},",
          "837:     {file = \"ruamel.yaml-0.17.21.tar.gz\", hash = \"sha256:8b7ce697a2f212752a35c1ac414471dc16c424c9573be4926b56ff3f5d23b7af\"},",
          "838: ]",
          "870: ]",
          "871: semgrep = [",
          "872:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:c7002b9aba97deb6677f4cabfa5dcc8faef2808ce6a6f28ecdd70cd8e90b01b5\"},",
          "",
          "[Removed Lines]",
          "816:     {file = \"pywin32-304-cp310-cp310-win32.whl\", hash = \"sha256:3c7bacf5e24298c86314f03fa20e16558a4e4138fc34615d7de4070c23e65af3\"},",
          "817:     {file = \"pywin32-304-cp310-cp310-win_amd64.whl\", hash = \"sha256:4f32145913a2447736dad62495199a8e280a77a0ca662daa2332acf849f0be48\"},",
          "818:     {file = \"pywin32-304-cp310-cp310-win_arm64.whl\", hash = \"sha256:d3ee45adff48e0551d1aa60d2ec066fec006083b791f5c3527c40cd8aefac71f\"},",
          "819:     {file = \"pywin32-304-cp311-cp311-win32.whl\", hash = \"sha256:30c53d6ce44c12a316a06c153ea74152d3b1342610f1b99d40ba2795e5af0269\"},",
          "820:     {file = \"pywin32-304-cp311-cp311-win_amd64.whl\", hash = \"sha256:7ffa0c0fa4ae4077e8b8aa73800540ef8c24530057768c3ac57c609f99a14fd4\"},",
          "821:     {file = \"pywin32-304-cp311-cp311-win_arm64.whl\", hash = \"sha256:cbbe34dad39bdbaa2889a424d28752f1b4971939b14b1bb48cbf0182a3bcfc43\"},",
          "822:     {file = \"pywin32-304-cp36-cp36m-win32.whl\", hash = \"sha256:be253e7b14bc601718f014d2832e4c18a5b023cbe72db826da63df76b77507a1\"},",
          "823:     {file = \"pywin32-304-cp36-cp36m-win_amd64.whl\", hash = \"sha256:de9827c23321dcf43d2f288f09f3b6d772fee11e809015bdae9e69fe13213988\"},",
          "824:     {file = \"pywin32-304-cp37-cp37m-win32.whl\", hash = \"sha256:f64c0377cf01b61bd5e76c25e1480ca8ab3b73f0c4add50538d332afdf8f69c5\"},",
          "825:     {file = \"pywin32-304-cp37-cp37m-win_amd64.whl\", hash = \"sha256:bb2ea2aa81e96eee6a6b79d87e1d1648d3f8b87f9a64499e0b92b30d141e76df\"},",
          "826:     {file = \"pywin32-304-cp38-cp38-win32.whl\", hash = \"sha256:94037b5259701988954931333aafd39cf897e990852115656b014ce72e052e96\"},",
          "827:     {file = \"pywin32-304-cp38-cp38-win_amd64.whl\", hash = \"sha256:ead865a2e179b30fb717831f73cf4373401fc62fbc3455a0889a7ddac848f83e\"},",
          "828:     {file = \"pywin32-304-cp39-cp39-win32.whl\", hash = \"sha256:25746d841201fd9f96b648a248f731c1dec851c9a08b8e33da8b56148e4c65cc\"},",
          "829:     {file = \"pywin32-304-cp39-cp39-win_amd64.whl\", hash = \"sha256:d24a3382f013b21aa24a5cfbfad5a2cd9926610c0affde3e8ab5b3d7dbcf4ac9\"},",
          "835: \"ruamel.yaml\" = [",
          "839: \"ruamel.yaml.clib\" = [",
          "840:     {file = \"ruamel.yaml.clib-0.2.6-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:6e7be2c5bcb297f5b82fee9c665eb2eb7001d1050deaba8471842979293a80b0\"},",
          "841:     {file = \"ruamel.yaml.clib-0.2.6-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:066f886bc90cc2ce44df8b5f7acfc6a7e2b2e672713f027136464492b0c34d7c\"},",
          "842:     {file = \"ruamel.yaml.clib-0.2.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:221eca6f35076c6ae472a531afa1c223b9c29377e62936f61bc8e6e8bdc5f9e7\"},",
          "843:     {file = \"ruamel.yaml.clib-0.2.6-cp310-cp310-win32.whl\", hash = \"sha256:1070ba9dd7f9370d0513d649420c3b362ac2d687fe78c6e888f5b12bf8bc7bee\"},",
          "844:     {file = \"ruamel.yaml.clib-0.2.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:77df077d32921ad46f34816a9a16e6356d8100374579bc35e15bab5d4e9377de\"},",
          "845:     {file = \"ruamel.yaml.clib-0.2.6-cp35-cp35m-macosx_10_6_intel.whl\", hash = \"sha256:cfdb9389d888c5b74af297e51ce357b800dd844898af9d4a547ffc143fa56751\"},",
          "846:     {file = \"ruamel.yaml.clib-0.2.6-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:7b2927e92feb51d830f531de4ccb11b320255ee95e791022555971c466af4527\"},",
          "847:     {file = \"ruamel.yaml.clib-0.2.6-cp35-cp35m-win32.whl\", hash = \"sha256:ada3f400d9923a190ea8b59c8f60680c4ef8a4b0dfae134d2f2ff68429adfab5\"},",
          "848:     {file = \"ruamel.yaml.clib-0.2.6-cp35-cp35m-win_amd64.whl\", hash = \"sha256:de9c6b8a1ba52919ae919f3ae96abb72b994dd0350226e28f3686cb4f142165c\"},",
          "849:     {file = \"ruamel.yaml.clib-0.2.6-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:d67f273097c368265a7b81e152e07fb90ed395df6e552b9fa858c6d2c9f42502\"},",
          "850:     {file = \"ruamel.yaml.clib-0.2.6-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:72a2b8b2ff0a627496aad76f37a652bcef400fd861721744201ef1b45199ab78\"},",
          "851:     {file = \"ruamel.yaml.clib-0.2.6-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:d3c620a54748a3d4cf0bcfe623e388407c8e85a4b06b8188e126302bcab93ea8\"},",
          "852:     {file = \"ruamel.yaml.clib-0.2.6-cp36-cp36m-win32.whl\", hash = \"sha256:9efef4aab5353387b07f6b22ace0867032b900d8e91674b5d8ea9150db5cae94\"},",
          "853:     {file = \"ruamel.yaml.clib-0.2.6-cp36-cp36m-win_amd64.whl\", hash = \"sha256:846fc8336443106fe23f9b6d6b8c14a53d38cef9a375149d61f99d78782ea468\"},",
          "854:     {file = \"ruamel.yaml.clib-0.2.6-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:0847201b767447fc33b9c235780d3aa90357d20dd6108b92be544427bea197dd\"},",
          "855:     {file = \"ruamel.yaml.clib-0.2.6-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:78988ed190206672da0f5d50c61afef8f67daa718d614377dcd5e3ed85ab4a99\"},",
          "856:     {file = \"ruamel.yaml.clib-0.2.6-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:210c8fcfeff90514b7133010bf14e3bad652c8efde6b20e00c43854bf94fa5a6\"},",
          "857:     {file = \"ruamel.yaml.clib-0.2.6-cp37-cp37m-win32.whl\", hash = \"sha256:a49e0161897901d1ac9c4a79984b8410f450565bbad64dbfcbf76152743a0cdb\"},",
          "858:     {file = \"ruamel.yaml.clib-0.2.6-cp37-cp37m-win_amd64.whl\", hash = \"sha256:bf75d28fa071645c529b5474a550a44686821decebdd00e21127ef1fd566eabe\"},",
          "859:     {file = \"ruamel.yaml.clib-0.2.6-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:a32f8d81ea0c6173ab1b3da956869114cae53ba1e9f72374032e33ba3118c233\"},",
          "860:     {file = \"ruamel.yaml.clib-0.2.6-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:7f7ecb53ae6848f959db6ae93bdff1740e651809780822270eab111500842a84\"},",
          "861:     {file = \"ruamel.yaml.clib-0.2.6-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:61bc5e5ca632d95925907c569daa559ea194a4d16084ba86084be98ab1cec1c6\"},",
          "862:     {file = \"ruamel.yaml.clib-0.2.6-cp38-cp38-win32.whl\", hash = \"sha256:89221ec6d6026f8ae859c09b9718799fea22c0e8da8b766b0b2c9a9ba2db326b\"},",
          "863:     {file = \"ruamel.yaml.clib-0.2.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:31ea73e564a7b5fbbe8188ab8b334393e06d997914a4e184975348f204790277\"},",
          "864:     {file = \"ruamel.yaml.clib-0.2.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:dc6a613d6c74eef5a14a214d433d06291526145431c3b964f5e16529b1842bed\"},",
          "865:     {file = \"ruamel.yaml.clib-0.2.6-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:1866cf2c284a03b9524a5cc00daca56d80057c5ce3cdc86a52020f4c720856f0\"},",
          "866:     {file = \"ruamel.yaml.clib-0.2.6-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:1b4139a6ffbca8ef60fdaf9b33dec05143ba746a6f0ae0f9d11d38239211d335\"},",
          "867:     {file = \"ruamel.yaml.clib-0.2.6-cp39-cp39-win32.whl\", hash = \"sha256:3fb9575a5acd13031c57a62cc7823e5d2ff8bc3835ba4d94b921b4e6ee664104\"},",
          "868:     {file = \"ruamel.yaml.clib-0.2.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:825d5fccef6da42f3c8eccd4281af399f21c02b32d98e113dbc631ea6a6ecbc7\"},",
          "869:     {file = \"ruamel.yaml.clib-0.2.6.tar.gz\", hash = \"sha256:4ff604ce439abb20794f05613c374759ce10e3595d1867764dd1ae675b85acbd\"},",
          "",
          "[Added Lines]",
          "811:     {file = \"pywin32-305-cp310-cp310-win32.whl\", hash = \"sha256:421f6cd86e84bbb696d54563c48014b12a23ef95a14e0bdba526be756d89f116\"},",
          "812:     {file = \"pywin32-305-cp310-cp310-win_amd64.whl\", hash = \"sha256:73e819c6bed89f44ff1d690498c0a811948f73777e5f97c494c152b850fad478\"},",
          "813:     {file = \"pywin32-305-cp310-cp310-win_arm64.whl\", hash = \"sha256:742eb905ce2187133a29365b428e6c3b9001d79accdc30aa8969afba1d8470f4\"},",
          "814:     {file = \"pywin32-305-cp311-cp311-win32.whl\", hash = \"sha256:19ca459cd2e66c0e2cc9a09d589f71d827f26d47fe4a9d09175f6aa0256b51c2\"},",
          "815:     {file = \"pywin32-305-cp311-cp311-win_amd64.whl\", hash = \"sha256:326f42ab4cfff56e77e3e595aeaf6c216712bbdd91e464d167c6434b28d65990\"},",
          "816:     {file = \"pywin32-305-cp311-cp311-win_arm64.whl\", hash = \"sha256:4ecd404b2c6eceaca52f8b2e3e91b2187850a1ad3f8b746d0796a98b4cea04db\"},",
          "817:     {file = \"pywin32-305-cp36-cp36m-win32.whl\", hash = \"sha256:48d8b1659284f3c17b68587af047d110d8c44837736b8932c034091683e05863\"},",
          "818:     {file = \"pywin32-305-cp36-cp36m-win_amd64.whl\", hash = \"sha256:13362cc5aa93c2beaf489c9c9017c793722aeb56d3e5166dadd5ef82da021fe1\"},",
          "819:     {file = \"pywin32-305-cp37-cp37m-win32.whl\", hash = \"sha256:a55db448124d1c1484df22fa8bbcbc45c64da5e6eae74ab095b9ea62e6d00496\"},",
          "820:     {file = \"pywin32-305-cp37-cp37m-win_amd64.whl\", hash = \"sha256:109f98980bfb27e78f4df8a51a8198e10b0f347257d1e265bb1a32993d0c973d\"},",
          "821:     {file = \"pywin32-305-cp38-cp38-win32.whl\", hash = \"sha256:9dd98384da775afa009bc04863426cb30596fd78c6f8e4e2e5bbf4edf8029504\"},",
          "822:     {file = \"pywin32-305-cp38-cp38-win_amd64.whl\", hash = \"sha256:56d7a9c6e1a6835f521788f53b5af7912090674bb84ef5611663ee1595860fc7\"},",
          "823:     {file = \"pywin32-305-cp39-cp39-win32.whl\", hash = \"sha256:9d968c677ac4d5cbdaa62fd3014ab241718e619d8e36ef8e11fb930515a1e918\"},",
          "824:     {file = \"pywin32-305-cp39-cp39-win_amd64.whl\", hash = \"sha256:50768c6b7c3f0b38b7fb14dd4104da93ebced5f1a50dc0e834594bff6fbe1271\"},",
          "830: ruamel-yaml = [",
          "834: ruamel-yaml-clib = [",
          "835:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d5859983f26d8cd7bb5c287ef452e8aacc86501487634573d260968f753e1d71\"},",
          "836:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-macosx_12_0_arm64.whl\", hash = \"sha256:debc87a9516b237d0466a711b18b6ebeb17ba9f391eb7f91c649c5c4ec5006c7\"},",
          "837:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:df5828871e6648db72d1c19b4bd24819b80a755c4541d3409f0f7acd0f335c80\"},",
          "838:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:efa08d63ef03d079dcae1dfe334f6c8847ba8b645d08df286358b1f5293d24ab\"},",
          "839:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-win32.whl\", hash = \"sha256:763d65baa3b952479c4e972669f679fe490eee058d5aa85da483ebae2009d231\"},",
          "840:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:d000f258cf42fec2b1bbf2863c61d7b8918d31ffee905da62dede869254d3b8a\"},",
          "841:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:045e0626baf1c52e5527bd5db361bc83180faaba2ff586e763d3d5982a876a9e\"},",
          "842:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-macosx_12_6_arm64.whl\", hash = \"sha256:721bc4ba4525f53f6a611ec0967bdcee61b31df5a56801281027a3a6d1c2daf5\"},",
          "843:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:4b3a93bb9bc662fc1f99c5c3ea8e623d8b23ad22f861eb6fce9377ac07ad6072\"},",
          "844:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-macosx_12_0_arm64.whl\", hash = \"sha256:a234a20ae07e8469da311e182e70ef6b199d0fbeb6c6cc2901204dd87fb867e8\"},",
          "845:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:15910ef4f3e537eea7fe45f8a5d19997479940d9196f357152a09031c5be59f3\"},",
          "846:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:370445fd795706fd291ab00c9df38a0caed0f17a6fb46b0f607668ecb16ce763\"},",
          "847:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-win32.whl\", hash = \"sha256:ecdf1a604009bd35c674b9225a8fa609e0282d9b896c03dd441a91e5f53b534e\"},",
          "848:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-win_amd64.whl\", hash = \"sha256:f34019dced51047d6f70cb9383b2ae2853b7fc4dce65129a5acd49f4f9256646\"},",
          "849:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:2aa261c29a5545adfef9296b7e33941f46aa5bbd21164228e833412af4c9c75f\"},",
          "850:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-macosx_12_0_arm64.whl\", hash = \"sha256:f01da5790e95815eb5a8a138508c01c758e5f5bc0ce4286c4f7028b8dd7ac3d0\"},",
          "851:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:40d030e2329ce5286d6b231b8726959ebbe0404c92f0a578c0e2482182e38282\"},",
          "852:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:c3ca1fbba4ae962521e5eb66d72998b51f0f4d0f608d3c0347a48e1af262efa7\"},",
          "853:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-win32.whl\", hash = \"sha256:7bdb4c06b063f6fd55e472e201317a3bb6cdeeee5d5a38512ea5c01e1acbdd93\"},",
          "854:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-win_amd64.whl\", hash = \"sha256:be2a7ad8fd8f7442b24323d24ba0b56c51219513cfa45b9ada3b87b76c374d4b\"},",
          "855:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:91a789b4aa0097b78c93e3dc4b40040ba55bef518f84a40d4442f713b4094acb\"},",
          "856:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-macosx_12_0_arm64.whl\", hash = \"sha256:99e77daab5d13a48a4054803d052ff40780278240a902b880dd37a51ba01a307\"},",
          "857:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:3243f48ecd450eddadc2d11b5feb08aca941b5cd98c9b1db14b2fd128be8c697\"},",
          "858:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:8831a2cedcd0f0927f788c5bdf6567d9dc9cc235646a434986a852af1cb54b4b\"},",
          "859:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-win32.whl\", hash = \"sha256:3110a99e0f94a4a3470ff67fc20d3f96c25b13d24c6980ff841e82bafe827cac\"},",
          "860:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-win_amd64.whl\", hash = \"sha256:92460ce908546ab69770b2e576e4f99fbb4ce6ab4b245345a3869a0a0410488f\"},",
          "861:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:5bc0667c1eb8f83a3752b71b9c4ba55ef7c7058ae57022dd9b29065186a113d9\"},",
          "862:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-macosx_12_0_arm64.whl\", hash = \"sha256:4a4d8d417868d68b979076a9be6a38c676eca060785abaa6709c7b31593c35d1\"},",
          "863:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:bf9a6bc4a0221538b1a7de3ed7bca4c93c02346853f44e1cd764be0023cd3640\"},",
          "864:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:a7b301ff08055d73223058b5c46c55638917f04d21577c95e00e0c4d79201a6b\"},",
          "865:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-win32.whl\", hash = \"sha256:d5e51e2901ec2366b79f16c2299a03e74ba4531ddcfacc1416639c557aef0ad8\"},",
          "866:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:184faeaec61dbaa3cace407cffc5819f7b977e75360e8d5ca19461cd851a5fc5\"},",
          "867:     {file = \"ruamel.yaml.clib-0.2.7.tar.gz\", hash = \"sha256:1f08fd5a2bea9c4180db71678e850b995d2a5f4537be0e94557668cf0f5f9497\"},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "874:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:6116391b0c8c87581d9d72113702b6f8c2938d799cdae7d71a845ec89249566c\"},",
          "875:     {file = \"semgrep-0.122.0.tar.gz\", hash = \"sha256:a4c7400eb8bec9fe8df25520d1ffcb5d78b87c73dc654f1c2aec1195789bc611\"},",
          "876: ]",
          "877: six = [",
          "878:     {file = \"six-1.16.0-py2.py3-none-any.whl\", hash = \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"},",
          "879:     {file = \"six-1.16.0.tar.gz\", hash = \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\"},",
          "880: ]",
          "881: termcolor = [",
          "884: ]",
          "885: tomli = [",
          "886:     {file = \"tomli-2.0.1-py3-none-any.whl\", hash = \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\"},",
          "",
          "[Removed Lines]",
          "882:     {file = \"termcolor-2.1.0-py3-none-any.whl\", hash = \"sha256:91dd04fdf661b89d7169cefd35f609b19ca931eb033687eaa647cef1ff177c49\"},",
          "883:     {file = \"termcolor-2.1.0.tar.gz\", hash = \"sha256:b80df54667ce4f48c03fe35df194f052dc27a541ebbf2544e4d6b47b5d6949c4\"},",
          "",
          "[Added Lines]",
          "875: setuptools = [",
          "876:     {file = \"setuptools-65.6.3-py3-none-any.whl\", hash = \"sha256:57f6f22bde4e042978bcd50176fdb381d7c21a9efa4041202288d3737a0c6a54\"},",
          "877:     {file = \"setuptools-65.6.3.tar.gz\", hash = \"sha256:a7620757bf984b58deaf32fc8a4577a9bbc0850cf92c20e1ce41c38c19e5fb75\"},",
          "878: ]",
          "884:     {file = \"termcolor-2.1.1-py3-none-any.whl\", hash = \"sha256:fa852e957f97252205e105dd55bbc23b419a70fec0085708fc0515e399f304fd\"},",
          "885:     {file = \"termcolor-2.1.1.tar.gz\", hash = \"sha256:67cee2009adc6449c650f6bcf3bdeed00c8ba53a8cda5362733c53e0a39fb70b\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8b4d414cbe4a4c83446bef5e7d1d5dedaf69763",
      "candidate_info": {
        "commit_hash": "f8b4d414cbe4a4c83446bef5e7d1d5dedaf69763",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/f8b4d414cbe4a4c83446bef5e7d1d5dedaf69763",
        "files": [
          ".github/workflows/semgrep.yml",
          ".github/workflows/test.yml",
          "Dockerfile",
          "README.md",
          "guarddog/analyzer/metadata/empty_information.py",
          "guarddog/analyzer/metadata/potentially_compromised_email_domain.py",
          "guarddog/analyzer/metadata/pypi/typosquatting.py",
          "guarddog/analyzer/metadata/release_zero.py",
          "guarddog/analyzer/metadata/typosquatting.py",
          "guarddog/analyzer/sourcecode/eval-call.yml",
          "guarddog/analyzer/sourcecode/exec-base64.yml",
          "guarddog/cli.py",
          "guarddog/reporters/__init__.py",
          "guarddog/reporters/sarif.py",
          "poetry.lock",
          "pyproject.toml",
          "requirements-dev.txt",
          "requirements.txt",
          "tests/core/resources/package.json",
          "tests/core/resources/requirements.txt",
          "tests/reporters/test_sarif.py"
        ],
        "message": "Vdeturckheim/sarif output (#113)\n\n* rebase\n\n* save commit\n\n* Make GuardDog ignore lines in requirements that we can't parse and log a proper warning\n\n* apply review comments\n\n* apply review comments\n\n* Add python version pin for poetry and update README\n\n* Add missing project link to PyPI metadata (#97)\n\n* Add Type checking and enforce lint (#98)\n\n* start integrating type testing\n\n* start integrating type testing\n\n* type fixing\n\n* type fixing\n\n* revert previous change\n\n* revert previous change\n\n* revert previous change\n\n* revert previous change\n\n* revert previous change\n\n* type codebase\n\n* type codebase\n\n* type codebase\n\n* fight mypy\n\n* fix lint and enforce it in CI\n\n* CI concurency\n\n* add code quality instructions in README\n\n* use makefile\n\n* post rebase fixes\n\n* refactoring\n\n* support empty description for npm\n\n* handle domain part\n\n* lint fix\n\n* move release zero heuritics\n\n* typosquatting: I could not find an up to date list of most downloaded packages. We'll compute it from our mirror later\n\n* fix tests\n\n* add coverage in tests\n\n* add coverage in tests\n\n* resolve conflict\n\n* test stuff, not sure why coverage does not grow\n\n* fix coverage reporting\n\n* handle empty description\n\n* should be good?\n\n* start abstracting requirement scanner\n\n* add an integration test\n\n* fix scan local\n\n* handle conflict resolution\n\n* fix archive\n\n* handle local scan for npm\n\n* npm project scanner version 0 ok\n\n* add npm integration tests\n\n* add npm integration tests\n\n* add npm integration tests\n\n* add npm integration tests\n\n* add npm integration tests\n\n* add npm integration tests\n\n* add npm integration tests\n\n* save cli update\n\n* update cli\n\n* update cli\n\n* cli should be good - now need to think about the library usage\n\n* add tests\n\n* simplify cli\n\n* apply review comments\n\n* save before system update\n\n* add ignore path for git npm packages (for now)\n\n* update FIXMEs\n\n* fix lint\n\n* update README.md\n\n* update integration tests\n\n* refactor detectors\n\n* add PyYAML\n\n* Update guarddog/analyzer/analyzer.py\n\nCo-authored-by: Christophe Tafani-Dereeper <christophe.tafanidereeper@datadoghq.com>\n\n* Update guarddog/scanners/npm_project_scanner.py\n\nCo-authored-by: Christophe Tafani-Dereeper <christophe.tafanidereeper@datadoghq.com>\n\n* soft deprecation of old command\n\n* allow programmatic use of NPMPackageScanner\n\n* fix email heuristic\n\n* fix couple stuff\n\n* fix couple stuff\n\n* fix couple stuff\n\n* fix types\n\n* fix express case\n\n* fix eval rule\n\n* fix requirements\n\n* fix lint\n\n* replace json flag by reporter one\n\n* add extra case\n\n* reporter -> output-format\n\n* test sarif output\n\n* remove test sarif output\n\n* remove test sarif output\n\n* remove test\n\n* save\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test with a more proper sarif?\n\n* trigger ci\n\n* trigger ci\n\n* trigger ci\n\n* trigger ci\n\n* test more rules details\n\n* test more rules details\n\n* test with markdown output\n\n* test with markdown output\n\n* test with markdown output\n\n* test with markdown output\n\n* update doc\n\n* update doc\n\n* update findings documentation\n\n* add npm corner cases\n\n* Update README.md\n\n* Update README.md\n\n* add ultimate npm corner case\n\n* remove artifact\n\n* todo pypi version now\n\n* npm support for sarif output\n\n* also test sarif on pypi\n\n* enable tests\n\n* enable tests\n\n* enable tests\n\n* fix lint and types\n\n* remove duplicate code\n\n* update documentation\n\n* update documentation\n\n* add sarif output tests\n\n* remove ci test\n\n* remove test sarif output\n\n* remove test\n\n* save\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* test current sarif on github\n\n* trigger ci\n\n* trigger ci\n\n* trigger ci\n\n* remove artifact\n\n* also test sarif on pypi\n\n* update documentation\n\n* remove ci test\n\n* Docker: bump to alpine 1.17 and fix missing package\n\n* Update requirements.txt\n\n* Use a distroless image\n\n* CI: Install dev requirements\n\n* Update guarddog/reporters/sarif.py\n\nCo-authored-by: Christophe Tafani-Dereeper <christophe.tafanidereeper@datadoghq.com>\n\n* apply review comments\n\nCo-authored-by: Zachary Allen <zack.allen@datadoghq.com>\nCo-authored-by: MW <117664996+materro@users.noreply.github.com>\nCo-authored-by: Christophe Tafani-Dereeper <christophe.tafanidereeper@datadoghq.com>",
        "before_after_code_files": [
          "guarddog/analyzer/metadata/empty_information.py||guarddog/analyzer/metadata/empty_information.py",
          "guarddog/analyzer/metadata/potentially_compromised_email_domain.py||guarddog/analyzer/metadata/potentially_compromised_email_domain.py",
          "guarddog/analyzer/metadata/pypi/typosquatting.py||guarddog/analyzer/metadata/pypi/typosquatting.py",
          "guarddog/analyzer/metadata/release_zero.py||guarddog/analyzer/metadata/release_zero.py",
          "guarddog/analyzer/metadata/typosquatting.py||guarddog/analyzer/metadata/typosquatting.py",
          "guarddog/cli.py||guarddog/cli.py",
          "guarddog/reporters/sarif.py||guarddog/reporters/sarif.py",
          "poetry.lock||poetry.lock",
          "tests/reporters/test_sarif.py||tests/reporters/test_sarif.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "guarddog/analyzer/metadata/empty_information.py||guarddog/analyzer/metadata/empty_information.py": [
          "File: guarddog/analyzer/metadata/empty_information.py -> guarddog/analyzer/metadata/empty_information.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: class EmptyInfoDetector(Detector):",
          "17:     MESSAGE_TEMPLATE = \"This package has an empty description on %s\"",
          "18:     RULE_NAME = \"empty_information\"",
          "",
          "[Removed Lines]",
          "14:     \"\"\"",
          "15:     Detector for packages with empty information.",
          "16:     \"\"\"",
          "",
          "[Added Lines]",
          "14:     \"\"\"This heuristic detects packages with empty documentation on the package repository.",
          "15:     Such situation might be the marker of a low quality package.\"\"\"",
          "",
          "---------------"
        ],
        "guarddog/analyzer/metadata/potentially_compromised_email_domain.py||guarddog/analyzer/metadata/potentially_compromised_email_domain.py": [
          "File: guarddog/analyzer/metadata/potentially_compromised_email_domain.py -> guarddog/analyzer/metadata/potentially_compromised_email_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: class PotentiallyCompromisedEmailDomainDetector(Detector):",
          "15:     RULE_NAME = \"potentially_compromised_email_domain\"",
          "17:     def __init__(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:     \"\"\"This heuristic detects whether the maintainer email address has an outdated domain that anyone could acquire.",
          "16:     This could lead to the package being overtaken by malicious actors.\"\"\"",
          "",
          "---------------"
        ],
        "guarddog/analyzer/metadata/pypi/typosquatting.py||guarddog/analyzer/metadata/pypi/typosquatting.py": [
          "File: guarddog/analyzer/metadata/pypi/typosquatting.py -> guarddog/analyzer/metadata/pypi/typosquatting.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:             typosquatting from",
          "28:             @param **kwargs:",
          "29:         \"\"\"",
          "30:         similar_package_names = self.get_typosquatted_package(package_info[\"info\"][\"name\"])",
          "31:         if len(similar_package_names) > 0:",
          "35:         return False, None",
          "",
          "[Removed Lines]",
          "32:             return True, \"This package closely resembles the following package names, and might be a typosquatting \" \\",
          "33:                          \"attempt: \" + \", \".join(similar_package_names)",
          "",
          "[Added Lines]",
          "33:             return True, TyposquatDetector.MESSAGE_TEMPLATE % \", \".join(similar_package_names)",
          "",
          "---------------"
        ],
        "guarddog/analyzer/metadata/release_zero.py||guarddog/analyzer/metadata/release_zero.py": [
          "File: guarddog/analyzer/metadata/release_zero.py -> guarddog/analyzer/metadata/release_zero.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: class ReleaseZeroDetector(Detector):",
          "11:     MESSAGE_TEMPLATE = \"The package has its latest release version to %s\"",
          "12:     RULE_NAME = \"release_zero\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:     \"\"\"This heuristic detects if the latest release of this package is version 0.\"\"\"",
          "",
          "---------------"
        ],
        "guarddog/analyzer/metadata/typosquatting.py||guarddog/analyzer/metadata/typosquatting.py": [
          "File: guarddog/analyzer/metadata/typosquatting.py -> guarddog/analyzer/metadata/typosquatting.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: class TyposquatDetector(Detector):",
          "15:     Checks for distance one Levenshtein, one-off character swaps, permutations",
          "22:     RULE_NAME = \"typosquatting\"",
          "23:     MESSAGE_TEMPLATE = \"This package closely ressembles the following package names, and might be a typosquatting \" \\",
          "",
          "[Removed Lines]",
          "13:     \"\"\"",
          "14:     Detector for typosquatting attacks. Detects if a package name is a typosquat of one of the top 1000 packages.",
          "16:     around hyphens, and substrings.",
          "18:     Attributes:",
          "19:         popular_packages (list): list of top 5000 downloaded packages from PyPI",
          "20:     \"\"\"",
          "",
          "[Added Lines]",
          "13:     \"\"\"This heuristic looks for typosquatting attacks.",
          "14:     It detects if a package name is a typosquat of one of the top 1000 packages.",
          "16:     around hyphens, and substrings.\"\"\"",
          "",
          "---------------"
        ],
        "guarddog/cli.py||guarddog/cli.py": [
          "File: guarddog/cli.py -> guarddog/cli.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from guarddog.analyzer.metadata import get_metadata_detectors",
          "15: from guarddog.analyzer.sourcecode import SOURCECODE_RULES",
          "16: from guarddog.ecosystems import ECOSYSTEM",
          "17: from guarddog.scanners import get_scanner",
          "18: from guarddog.scanners.scanner import PackageScanner",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: from guarddog.reporters.sarif import report_verify_sarif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: def common_options(fn):",
          "28:     fn = click.option(\"--exit-non-zero-on-finding\", default=False, is_flag=True,",
          "29:                       help=\"Exit with a non-zero status code if at least one issue is identified\")(fn)",
          "30:     fn = click.option(\"-r\", \"--rules\", multiple=True, type=click.Choice(ALL_RULES, case_sensitive=False))(fn)",
          "",
          "[Removed Lines]",
          "27:     fn = click.option(\"--output-format\", default=None, type=click.Choice([\"json\"], case_sensitive=False))(fn)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "33:     return fn",
          "40: @click.group",
          "",
          "[Removed Lines]",
          "36: def version_option(fn):",
          "37:     return click.option(\"-v\", \"--version\", default=None, help=\"Specify a version to scan\")(fn)",
          "",
          "[Added Lines]",
          "36: def verify_options(fn):",
          "37:     fn = click.option(\"--output-format\", default=None, type=click.Choice([\"json\", \"sarif\"], case_sensitive=False))(fn)",
          "38:     return fn",
          "41: def scan_options(fn):",
          "42:     fn = click.option(\"--output-format\", default=None, type=click.Choice([\"json\"], case_sensitive=False))(fn)",
          "43:     fn = click.option(\"-v\", \"--version\", default=None, help=\"Specify a version to scan\")(fn)",
          "44:     return fn",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69:     Args:",
          "70:         path (str): path to requirements.txt file",
          "71:     \"\"\"",
          "72:     rule_param = _get_rule_pram(rules, exclude_rules)",
          "73:     scanner = get_scanner(ecosystem, True)",
          "74:     if scanner is None:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     return_value = None",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "84:     if output_format == \"json\":",
          "85:         import json as js",
          "88:     if exit_non_zero_on_finding:",
          "89:         exit_with_status_code(results)",
          "92: def _scan(identifier, version, rules, exclude_rules, output_format, exit_non_zero_on_finding, ecosystem: ECOSYSTEM):",
          "93:     \"\"\"Scan a package",
          "",
          "[Removed Lines]",
          "86:         print(js.dumps(results))",
          "",
          "[Added Lines]",
          "94:         return_value = js.dumps(results)",
          "96:     if output_format == \"sarif\":",
          "97:         return_value = report_verify_sarif(path, list(ALL_RULES), results, ecosystem)",
          "99:     print(return_value)",
          "103:     return return_value  # this is mostly for testing",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "153: @npm.command(\"scan\")",
          "154: @common_options",
          "156: def scan_npm(target, version, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "157:     \"\"\" Scan a given npm package",
          "158:     \"\"\"",
          "",
          "[Removed Lines]",
          "155: @version_option",
          "",
          "[Added Lines]",
          "169: @scan_options",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "162: @npm.command(\"verify\")",
          "163: @common_options",
          "164: def verify_npm(target, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "165:     \"\"\" Verify a given npm project",
          "166:     \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178: @verify_options",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "170: @pypi.command(\"scan\")",
          "171: @common_options",
          "173: def scan_pypi(target, version, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "174:     \"\"\" Scan a given PyPI package",
          "175:     \"\"\"",
          "",
          "[Removed Lines]",
          "172: @version_option",
          "",
          "[Added Lines]",
          "187: @scan_options",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "179: @pypi.command(\"verify\")",
          "180: @common_options",
          "181: def verify_pypi(target, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "182:     \"\"\" Verify a given Pypi project",
          "183:     \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "196: @verify_options",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "201: @cli.command(\"verify\", deprecated=True)",
          "202: @common_options",
          "203: def verify(target, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "204:     return _verify(target, rules, exclude_rules, output_format, exit_non_zero_on_finding, ECOSYSTEM.PYPI)",
          "207: @cli.command(\"scan\", deprecated=True)",
          "208: @common_options",
          "210: def scan(target, version, rules, exclude_rules, output_format, exit_non_zero_on_finding):",
          "211:     return _scan(target, version, rules, exclude_rules, output_format, exit_non_zero_on_finding, ECOSYSTEM.PYPI)",
          "",
          "[Removed Lines]",
          "209: @version_option",
          "",
          "[Added Lines]",
          "219: @verify_options",
          "226: @scan_options",
          "",
          "---------------"
        ],
        "guarddog/reporters/sarif.py||guarddog/reporters/sarif.py": [
          "File: guarddog/reporters/sarif.py -> guarddog/reporters/sarif.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import hashlib",
          "2: import json",
          "3: import yaml",
          "4: import os.path",
          "6: from guarddog.analyzer.metadata import get_metadata_detectors",
          "7: from guarddog.ecosystems import ECOSYSTEM",
          "10: def build_rules_help_list() -> dict:",
          "11:     \"\"\"",
          "12:     Builds a dict with the names of all available rules and their documentation",
          "13:     @return: dict[name_of_rule, rule_description]",
          "14:     \"\"\"",
          "15:     rules_documentation = {}",
          "16:     for ecosystem in ECOSYSTEM:",
          "17:         rules = get_metadata_detectors(ecosystem)",
          "18:         for name, instance in rules.items():",
          "19:             detector_class = instance.__class__.__base__",
          "20:             rules_documentation[name] = detector_class.__doc__",
          "21:     dir_path = os.path.dirname(os.path.realpath(__file__))",
          "22:     semgrep_rules_base_dir = os.path.join(dir_path, \"..\", \"analyzer\", \"sourcecode\")",
          "23:     for file in os.listdir(semgrep_rules_base_dir):",
          "24:         if not file.endswith('.yml') and not file.endswith('.yaml'):",
          "25:             continue",
          "26:         with open(os.path.join(semgrep_rules_base_dir, file), \"r\") as fd:",
          "27:             content = yaml.safe_load(fd)",
          "28:             for rule in content[\"rules\"]:",
          "29:                 text = rule[\"description\"] if \"description\" in rule else rule[\"message\"]",
          "30:                 rules_documentation[rule[\"id\"]] = text",
          "31:     return rules_documentation",
          "34: def get_sarif_log(runs):",
          "35:     \"\"\"",
          "36:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#sariflog-object",
          "37:     \"\"\"",
          "38:     return {",
          "39:         \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",",
          "40:         \"version\": \"2.1.0\",",
          "41:         \"runs\": runs",
          "42:     }",
          "45: def get_run(results, driver):",
          "46:     \"\"\"",
          "47:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#run-object",
          "48:     \"\"\"",
          "49:     return {",
          "50:         \"tool\": {",
          "51:             \"driver\": driver",
          "52:         },",
          "53:         \"results\": results",
          "54:     }",
          "57: def get_driver(rules, ecosystem: str):",
          "58:     \"\"\"",
          "59:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#toolcomponent-object",
          "60:     \"\"\"",
          "61:     return {",
          "62:         \"name\": f\"GuardDog-{ecosystem}\",",
          "63:         \"rules\": rules",
          "64:     }",
          "67: def get_rule(rule_name: str, rules_documentation) -> dict:",
          "68:     \"\"\"",
          "69:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#reportingdescriptor-object",
          "70:     \"\"\"",
          "71:     message = rules_documentation[rule_name] if rules_documentation[rule_name] is not None else \"\"",
          "72:     return {",
          "73:         \"id\": rule_name,",
          "74:         \"defaultConfiguration\": {",
          "75:             \"level\": \"warning\"",
          "76:         },",
          "77:         \"shortDescription\": {",
          "78:             \"text\": f\"GuardDog rule: {rule_name}\"",
          "79:         },",
          "80:         \"fullDescription\": {",
          "81:             \"text\": message",
          "82:         },",
          "83:         \"help\": {",
          "84:             \"text\": message,",
          "85:             \"markdown\": message",
          "86:         },",
          "87:         \"properties\": {",
          "88:             \"precision\": \"medium\"",
          "89:         }",
          "90:     }",
          "93: def get_result(rule_name, locations, text, partial_fingerprints):",
          "94:     \"\"\"",
          "95:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#result-object",
          "96:     \"\"\"",
          "97:     return {",
          "98:         \"ruleId\": rule_name,",
          "99:         \"message\": {",
          "100:             \"text\": text",
          "101:         },",
          "102:         \"locations\": locations,",
          "103:         \"partialFingerprints\": partial_fingerprints",
          "104:     }",
          "107: def get_location(physical_location):",
          "108:     \"\"\"",
          "109:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#location-object",
          "110:     \"\"\"",
          "111:     return {",
          "112:         \"physicalLocation\": physical_location",
          "113:     }",
          "116: def get_physical_location(uri, region):",
          "117:     \"\"\"",
          "118:     https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#physicallocation-object",
          "119:     \"\"\"",
          "120:     return {",
          "121:         \"artifactLocation\": {",
          "122:             \"uri\": uri",
          "123:         },",
          "124:         \"region\": region",
          "125:     }",
          "128: def get_region(package_raw: str, package: str) -> dict:",
          "129:     start_line = 0",
          "130:     start_column = 0",
          "131:     end_column = 0",
          "132:     for idx, val in enumerate(package_raw.split(\"\\n\")):",
          "133:         if package in val:",
          "134:             start_line = idx + 1",
          "135:             start_column = val.index(package) + 1",
          "136:             end_column = start_column + len(package)",
          "138:     return {",
          "139:         \"startLine\": start_line,",
          "140:         \"endLine\": start_line,",
          "141:         \"startColumn\": start_column,",
          "142:         \"endColumn\": end_column,",
          "143:     }",
          "146: def report_verify_sarif(package_path: str, rule_names: list[str], scan_results: list[dict],",
          "147:                         ecosystem: ECOSYSTEM) -> str:",
          "148:     rules_documentation = build_rules_help_list()",
          "149:     rules = list(map(",
          "150:         lambda s: get_rule(s, rules_documentation),",
          "151:         rule_names",
          "152:     ))",
          "153:     driver = get_driver(rules, ecosystem.value)",
          "154:     results = []",
          "156:     with open(package_path, \"r\") as file:",
          "157:         package_raw = file.read()",
          "159:     for entry in scan_results:",
          "160:         if entry[\"result\"][\"issues\"] == 0:",
          "161:             continue",
          "163:         region = get_region(package_raw, entry[\"dependency\"])",
          "164:         uri = package_path[2:] if package_path.startswith('./') else package_path",
          "165:         physical_location = get_physical_location(uri, region)",
          "166:         location = get_location(physical_location)",
          "167:         scan_result_details = entry[\"result\"][\"results\"]",
          "168:         package = entry[\"dependency\"]",
          "169:         version = entry[\"version\"]",
          "170:         for rule_name in scan_result_details.keys():",
          "171:             if len(scan_result_details[rule_name]) == 0:",
          "172:                 continue",
          "173:             text = f\"On package: {package} version: {version}\\n\" + \"\\n\".join(map(",
          "174:                 lambda x: x[\"message\"],",
          "175:                 scan_result_details[rule_name]",
          "176:             )) if type(scan_result_details[rule_name]) == list else scan_result_details[rule_name]",
          "177:             key = f\"{rule_name}-{text}\"",
          "178:             partial_fingerprints = {",
          "179:                 f\"guarddog/v1/{rule_name}\": hashlib.sha256(key.encode('utf-8')).hexdigest()",
          "180:             }",
          "181:             result = get_result(rule_name,",
          "182:                                 [location],",
          "183:                                 text,",
          "184:                                 partial_fingerprints)",
          "185:             results.append(result)",
          "187:     runs = get_run(results, driver)",
          "188:     log = get_sarif_log([runs])",
          "189:     return json.dumps(log, indent=2)",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "239: [[package]]",
          "240: name = \"packaging\"",
          "242: description = \"Core utilities for Python packages\"",
          "243: category = \"main\"",
          "244: optional = false",
          "245: python-versions = \">=3.6\"",
          "247: [package.dependencies]",
          "250: [[package]]",
          "251: name = \"pathos\"",
          "",
          "[Removed Lines]",
          "241: version = \"21.0\"",
          "248: pyparsing = \">=2.0.2\"",
          "",
          "[Added Lines]",
          "241: version = \"21.3\"",
          "248: pyparsing = \">=2.0.2,<3.0.5 || >3.0.5\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "645: [metadata]",
          "646: lock-version = \"1.1\"",
          "647: python-versions = \">=3.10,<4\"",
          "650: [metadata.files]",
          "651: attrs = [",
          "",
          "[Removed Lines]",
          "648: content-hash = \"7e23fb36201ace9a928b2a806a7eb48ec9c748ab4d53e5262a581d2506b78818\"",
          "",
          "[Added Lines]",
          "648: content-hash = \"47bd547f13e855be6e75848c35dd03ba16830662e50b30a8576fa60a508d5556\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "748:     {file = \"mypy_extensions-0.4.3.tar.gz\", hash = \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"},",
          "749: ]",
          "750: packaging = [",
          "753: ]",
          "754: pathos = [",
          "755:     {file = \"pathos-0.2.9-py2-none-any.whl\", hash = \"sha256:6a6ddb514ce2719f63fb88d5ec4f4490e436b636b54f1102d952c9f7c52f18e2\"},",
          "",
          "[Removed Lines]",
          "751:     {file = \"packaging-21.0-py3-none-any.whl\", hash = \"sha256:c86254f9220d55e31cc94d69bade760f0847da8000def4dfe1c6b872fd14ff14\"},",
          "752:     {file = \"packaging-21.0.tar.gz\", hash = \"sha256:7dc96269f53a4ccec5c0670940a4281106dd0bb343f47b7471f779df49c2fbe7\"},",
          "",
          "[Added Lines]",
          "751:     {file = \"packaging-21.3-py3-none-any.whl\", hash = \"sha256:ef103e05f519cdc783ae24ea4e2e0f508a9c99b2d4969652eed6a2e1ea5bd522\"},",
          "752:     {file = \"packaging-21.3.tar.gz\", hash = \"sha256:dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb\"},",
          "",
          "---------------"
        ],
        "tests/reporters/test_sarif.py||tests/reporters/test_sarif.py": [
          "File: tests/reporters/test_sarif.py -> tests/reporters/test_sarif.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os.path",
          "2: import tempfile",
          "4: import pytest",
          "5: from sarif.loader import load_sarif_file",
          "7: from guarddog.cli import _verify",
          "8: from guarddog.ecosystems import ECOSYSTEM",
          "10: dir_path = os.path.dirname(os.path.realpath(__file__))",
          "13: @pytest.mark.parametrize(\"manifest, ecosystem, warning_count\", [",
          "14:     (\"package.json\", ECOSYSTEM.NPM, 3), (\"requirements.txt\", ECOSYSTEM.PYPI, 2)",
          "15: ])",
          "16: def test_sarif_output(manifest, ecosystem, warning_count):",
          "17:     raw_output = _verify(",
          "18:         os.path.join(dir_path, \"..\", \"core\", \"resources\", manifest),",
          "19:         (),",
          "20:         (),",
          "21:         \"sarif\",",
          "22:         False,",
          "23:         ecosystem",
          "24:     )",
          "25:     with tempfile.TemporaryDirectory() as tmp_dirname:",
          "26:         with open(os.path.join(tmp_dirname, \"results.sarif\"), \"w\") as fd:",
          "27:             fd.write(raw_output)",
          "28:         sarif_data = load_sarif_file(os.path.join(tmp_dirname, \"results.sarif\"))",
          "29:         stats = sarif_data.get_result_count_by_severity()",
          "30:         assert stats[\"warning\"] == warning_count",
          "",
          "---------------"
        ]
      }
    }
  ]
}