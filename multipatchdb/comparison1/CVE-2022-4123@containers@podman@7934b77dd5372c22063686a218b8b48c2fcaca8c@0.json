{
  "cve_id": "CVE-2022-4123",
  "cve_desc": "A flaw was found in Buildah. The local path and the lowest subdirectory may be disclosed due to incorrect absolute path traversal, resulting in an impact to confidentiality.",
  "repo": "containers/podman",
  "patch_hash": "7934b77dd5372c22063686a218b8b48c2fcaca8c",
  "patch_info": {
    "commit_hash": "7934b77dd5372c22063686a218b8b48c2fcaca8c",
    "repo": "containers/podman",
    "commit_url": "https://github.com/containers/podman/commit/7934b77dd5372c22063686a218b8b48c2fcaca8c",
    "files": [
      "pkg/bindings/images/build.go",
      "test/e2e/build_test.go",
      ".cirrus.yml",
      ".golangci.yml",
      "Makefile",
      "cmd/podman/common/create.go",
      "cmd/podman/common/create_opts.go",
      "cmd/podman/containers/clone.go",
      "cmd/podman/containers/cp.go",
      "cmd/podman/containers/start.go",
      "cmd/podman/early_init_unsupported.go",
      "cmd/podman/images/build.go",
      "cmd/podman/images/import.go",
      "cmd/podman/images/rm.go",
      "cmd/podman/images/scp.go",
      "cmd/podman/images/search.go",
      "cmd/podman/images/utils_unsupported.go",
      "cmd/podman/machine/init.go",
      "cmd/podman/machine/machine.go",
      "cmd/podman/machine/machine_unsupported.go",
      "cmd/podman/machine/platform.go",
      "cmd/podman/machine/rm.go",
      "cmd/podman/machine/set.go",
      "cmd/podman/machine/ssh.go",
      "cmd/podman/machine/start.go",
      "cmd/podman/networks/create.go",
      "cmd/podman/parse/json.go",
      "cmd/podman/play/kube.go",
      "cmd/podman/registry/config_abi.go",
      "cmd/podman/registry/config_tunnel.go",
      "cmd/podman/root.go",
      "cmd/podman/syslog_unsupported.go",
      "cmd/podman/system/connection/add.go",
      "cmd/podman/system/connection/default.go",
      "cmd/podman/system/connection/remove.go",
      "cmd/podman/system/df.go",
      "cmd/podman/system/migrate.go",
      "cmd/podman/system/renumber.go",
      "cmd/podman/system/reset.go",
      "cmd/podman/system/service.go",
      "cmd/podman/system/service_abi.go",
      "cmd/podman/utils/signals_linux.go",
      "cmd/podman/utils/signals_windows.go",
      "cmd/podman/validate/args.go",
      "cmd/rootlessport/main.go",
      "contrib/cirrus/cirrus_yaml_test.py",
      "contrib/cirrus/logformatter",
      "contrib/cirrus/logformatter.t",
      "contrib/cirrus/runner.sh",
      "contrib/cirrus/setup_environment.sh",
      "contrib/msi/podman.wxs",
      "dependencies/dependencies.go",
      "docs/source/markdown/podman-build.1.md",
      "docs/source/markdown/podman-commit.1.md",
      "docs/source/markdown/podman-container-checkpoint.1.md",
      "docs/source/markdown/podman-container-clone.1.md",
      "docs/source/markdown/podman-container-restore.1.md",
      "docs/source/markdown/podman-container-runlabel.1.md",
      "docs/source/markdown/podman-create.1.md",
      "docs/source/markdown/podman-events.1.md",
      "docs/source/markdown/podman-export.1.md",
      "docs/source/markdown/podman-generate-systemd.1.md",
      "docs/source/markdown/podman-history.1.md",
      "docs/source/markdown/podman-image-scp.1.md",
      "docs/source/markdown/podman-image-sign.1.md",
      "docs/source/markdown/podman-images.1.md",
      "docs/source/markdown/podman-import.1.md",
      "docs/source/markdown/podman-inspect.1.md",
      "docs/source/markdown/podman-load.1.md",
      "docs/source/markdown/podman-logout.1.md",
      "docs/source/markdown/podman-logs.1.md",
      "docs/source/markdown/podman-machine-init.1.md",
      "docs/source/markdown/podman-machine-rm.1.md",
      "docs/source/markdown/podman-machine-set.1.md",
      "docs/source/markdown/podman-manifest-push.1.md",
      "docs/source/markdown/podman-network-create.1.md",
      "docs/source/markdown/podman-network-ls.1.md",
      "docs/source/markdown/podman-network-prune.1.md",
      "docs/source/markdown/podman-play-kube.1.md",
      "docs/source/markdown/podman-pod-create.1.md",
      "docs/source/markdown/podman-pod-inspect.1.md",
      "docs/source/markdown/podman-pod-logs.1.md",
      "docs/source/markdown/podman-pod-ps.1.md",
      "docs/source/markdown/podman-pod-rm.1.md",
      "docs/source/markdown/podman-pod-stats.1.md",
      "docs/source/markdown/podman-pod-stop.1.md",
      "docs/source/markdown/podman-ps.1.md",
      "docs/source/markdown/podman-push.1.md",
      "docs/source/markdown/podman-rm.1.md",
      "docs/source/markdown/podman-rmi.1.md",
      "docs/source/markdown/podman-run.1.md",
      "docs/source/markdown/podman-save.1.md",
      "docs/source/markdown/podman-search.1.md",
      "docs/source/markdown/podman-secret-create.1.md",
      "docs/source/markdown/podman-secret-ls.1.md",
      "docs/source/markdown/podman-start.1.md",
      "docs/source/markdown/podman-stats.1.md",
      "docs/source/markdown/podman-system-service.1.md",
      "docs/source/markdown/podman-unshare.1.md",
      "docs/source/markdown/podman-version.1.md",
      "docs/source/markdown/podman-volume-export.1.md",
      "docs/source/markdown/podman-volume-prune.1.md",
      "docs/source/markdown/podman.1.md",
      "go.mod",
      "go.sum",
      "hack/make-and-check-size",
      "hack/xref-helpmsgs-manpages",
      "libpod/boltdb_state.go",
      "libpod/boltdb_state_linux.go",
      "libpod/common/common.go",
      "libpod/container_api.go",
      "libpod/container_copy_linux.go",
      "libpod/container_exec.go",
      "libpod/container_internal.go",
      "libpod/container_internal_linux.go",
      "libpod/container_linux.go",
      "libpod/container_log_unsupported.go",
      "libpod/container_path_resolution.go",
      "libpod/container_stat_linux.go",
      "libpod/container_top_linux.go",
      "libpod/define/containerstate.go",
      "libpod/doc.go",
      "libpod/events/events_unsupported.go",
      "libpod/events/journal_linux.go",
      "libpod/events/journal_unsupported.go",
      "libpod/events/logfile.go",
      "libpod/linkmode/linkmode_dynamic.go",
      "libpod/linkmode/linkmode_static.go",
      "libpod/lock/shm/shm_lock.go",
      "libpod/lock/shm/shm_lock_nocgo.go",
      "libpod/lock/shm/shm_lock_test.go",
      "libpod/lock/shm_lock_manager_linux.go",
      "libpod/lock/shm_lock_manager_unsupported.go",
      "libpod/mounts_linux.go",
      "libpod/networking_linux.go",
      "libpod/networking_machine.go",
      "libpod/networking_slirp4netns.go",
      "libpod/oci_attach_linux.go",
      "libpod/oci_conmon_exec_linux.go",
      "libpod/oci_conmon_linux.go",
      "libpod/pod.go",
      "libpod/pod_top_linux.go",
      "libpod/runtime_migrate.go",
      "libpod/runtime_pod_linux.go",
      "libpod/runtime_volume_linux.go",
      "libpod/stats.go",
      "libpod/util_linux.go",
      "nix/default-arm64.nix",
      "nix/default.nix",
      "nix/nixpkgs.json",
      "nix/nixpkgs.nix",
      "pkg/annotations/annotations.go",
      "pkg/api/handlers/compat/containers_stats.go",
      "pkg/api/handlers/compat/images_prune.go",
      "pkg/api/handlers/compat/networks.go",
      "pkg/api/handlers/libpod/images.go",
      "pkg/api/handlers/libpod/manifests.go",
      "pkg/api/handlers/libpod/play.go",
      "pkg/api/handlers/utils/images.go",
      "pkg/api/server/register_exec.go",
      "pkg/api/server/register_images.go",
      "pkg/api/server/register_networks.go",
      "pkg/api/server/swagger.go",
      "pkg/bindings/containers/attach.go",
      "pkg/bindings/generator/generator.go",
      "pkg/bindings/images/build_unix.go",
      "pkg/bindings/images/types.go",
      "pkg/bindings/images/types_import_options.go",
      "pkg/bindings/images/types_remove_options.go",
      "pkg/bindings/manifests/manifests.go",
      "pkg/bindings/play/play.go",
      "pkg/bindings/test/attach_test.go",
      "pkg/bindings/test/auth_test.go",
      "pkg/bindings/test/common_test.go",
      "pkg/bindings/test/containers_test.go",
      "pkg/checkpoint/crutils/checkpoint_restore_utils.go",
      "pkg/criu/criu.go",
      "pkg/criu/criu_unsupported.go",
      "pkg/ctime/ctime_linux.go",
      "pkg/ctime/ctime_unsupported.go",
      "pkg/domain/entities/engine_container.go",
      "pkg/domain/entities/images.go",
      "pkg/domain/entities/types.go",
      "pkg/domain/filters/containers.go",
      "pkg/domain/filters/pods.go",
      "pkg/domain/infra/abi/containers.go",
      "pkg/domain/infra/abi/images.go",
      "pkg/domain/infra/abi/play.go",
      "pkg/domain/infra/abi/terminal/sigproxy_linux.go",
      "pkg/domain/infra/abi/terminal/terminal_linux.go",
      "pkg/domain/infra/abi/volumes.go",
      "pkg/domain/infra/runtime_abi.go",
      "pkg/domain/infra/runtime_abi_unsupported.go",
      "pkg/domain/infra/runtime_libpod.go",
      "pkg/domain/infra/runtime_proxy.go",
      "pkg/domain/infra/runtime_tunnel.go",
      "pkg/domain/infra/tunnel/containers.go",
      "pkg/domain/infra/tunnel/events.go",
      "pkg/domain/infra/tunnel/images.go",
      "pkg/domain/infra/tunnel/play.go",
      "pkg/env/env.go",
      "pkg/env/env_unix.go",
      "pkg/errorhandling/errorhandling.go",
      "pkg/inspect/inspect.go",
      "pkg/k8s.io/apimachinery/pkg/api/resource/quantity.go",
      "pkg/k8s.io/apimachinery/pkg/util/intstr/instr_fuzz.go",
      "pkg/lookup/lookup.go",
      "pkg/machine/config.go",
      "pkg/machine/fcos.go",
      "pkg/machine/fedora.go",
      "pkg/machine/ignition_darwin.go",
      "pkg/machine/ignition_schema.go",
      "pkg/machine/ignition_windows.go",
      "pkg/machine/keys.go",
      "pkg/machine/machine_unsupported.go",
      "pkg/machine/pull.go",
      "pkg/machine/qemu/config.go",
      "pkg/machine/qemu/machine.go",
      "pkg/machine/qemu/machine_unsupported.go",
      "pkg/machine/wsl/machine_unsupported.go",
      "pkg/rootless/rootless.go",
      "pkg/rootless/rootless_linux.go",
      "pkg/rootless/rootless_unsupported.go",
      "pkg/rootlessport/rootlessport_linux.go",
      "pkg/servicereaper/service.go",
      "pkg/signal/signal_common.go",
      "pkg/signal/signal_linux.go",
      "pkg/signal/signal_linux_mipsx.go",
      "pkg/signal/signal_unix.go",
      "pkg/signal/signal_unsupported.go",
      "pkg/specgen/config_unsupported.go",
      "pkg/specgen/generate/config_linux.go",
      "pkg/specgen/generate/config_linux_cgo.go",
      "pkg/specgen/generate/config_linux_nocgo.go",
      "pkg/specgen/generate/container.go",
      "pkg/specgen/generate/ports_bench_test.go",
      "pkg/specgen/generate/security.go",
      "pkg/specgenutil/specgen.go",
      "pkg/systemd/dbus.go",
      "pkg/systemd/generate/containers.go",
      "pkg/systemd/generate/pods.go",
      "pkg/terminal/console_unix.go",
      "pkg/terminal/console_windows.go",
      "pkg/util/camelcase/camelcase.go",
      "pkg/util/mountOpts_other.go",
      "pkg/util/utils.go",
      "pkg/util/utils_darwin.go",
      "pkg/util/utils_supported.go",
      "pkg/util/utils_unsupported.go",
      "pkg/util/utils_windows.go",
      "podman.spec.rpkg",
      "test/checkseccomp/checkseccomp.go",
      "test/compose/ipam_set_ip/tests.sh",
      "test/compose/slirp4netns_opts/tests.sh",
      "test/compose/two_networks/tests.sh",
      "test/e2e/attach_test.go",
      "test/e2e/checkpoint_test.go",
      "test/e2e/commit_test.go",
      "test/e2e/common_test.go",
      "test/e2e/container_clone_test.go",
      "test/e2e/create_test.go",
      "test/e2e/healthcheck_run_test.go",
      "test/e2e/import_test.go",
      "test/e2e/inspect_test.go",
      "test/e2e/libpod_suite_test.go",
      "test/e2e/login_logout_test.go",
      "test/e2e/network_create_test.go",
      "test/e2e/play_build_test.go",
      "test/e2e/run_apparmor_test.go",
      "test/e2e/run_test.go",
      "test/e2e/system_df_test.go",
      "test/system/010-images.bats",
      "test/system/200-pod.bats",
      "test/system/250-systemd.bats",
      "test/utils/common_function_test.go",
      "test/utils/matchers.go",
      "test/utils/utils.go",
      "troubleshooting.md",
      "utils/ports.go",
      "utils/utils.go",
      "utils/utils_supported.go",
      "utils/utils_windows.go",
      "vendor/github.com/containerd/stargz-snapshotter/estargz/go.mod",
      "vendor/github.com/containerd/stargz-snapshotter/estargz/go.sum",
      "vendor/github.com/containers/common/libimage/runtime.go",
      "vendor/github.com/containers/common/libnetwork/cni/cni_conversion.go",
      "vendor/github.com/containers/common/libnetwork/cni/cni_exec.go",
      "vendor/github.com/containers/common/libnetwork/cni/cni_types.go",
      "vendor/github.com/containers/common/libnetwork/cni/config.go",
      "vendor/github.com/containers/common/libnetwork/cni/network.go",
      "vendor/github.com/containers/common/libnetwork/cni/run.go",
      "vendor/github.com/containers/common/libnetwork/internal/util/bridge.go",
      "vendor/github.com/containers/common/libnetwork/internal/util/validate.go",
      "vendor/github.com/containers/common/libnetwork/netavark/config.go",
      "vendor/github.com/containers/common/libnetwork/netavark/const.go",
      "vendor/github.com/containers/common/libnetwork/netavark/exec.go",
      "vendor/github.com/containers/common/libnetwork/netavark/ipam.go",
      "vendor/github.com/containers/common/libnetwork/netavark/network.go",
      "vendor/github.com/containers/common/libnetwork/netavark/run.go",
      "vendor/github.com/containers/common/libnetwork/network/interface.go",
      "vendor/github.com/containers/common/libnetwork/types/const.go",
      "vendor/github.com/containers/common/libnetwork/util/filters.go",
      "vendor/github.com/containers/common/pkg/apparmor/apparmor_linux.go",
      "vendor/github.com/containers/common/pkg/apparmor/apparmor_linux_template.go",
      "vendor/github.com/containers/common/pkg/apparmor/apparmor_unsupported.go",
      "vendor/github.com/containers/common/pkg/auth/auth.go",
      "vendor/github.com/containers/common/pkg/cgroups/cgroups_supported.go",
      "vendor/github.com/containers/common/pkg/cgroups/cgroups_unsupported.go",
      "vendor/github.com/containers/common/pkg/cgroupv2/cgroups_unsupported.go",
      "vendor/github.com/containers/common/pkg/chown/chown_unix.go",
      "vendor/github.com/containers/common/pkg/config/config.go",
      "vendor/github.com/containers/common/pkg/config/config_local.go",
      "vendor/github.com/containers/common/pkg/config/config_remote.go",
      "vendor/github.com/containers/common/pkg/config/config_unsupported.go",
      "vendor/github.com/containers/common/pkg/config/containers.conf",
      "vendor/github.com/containers/common/pkg/config/default.go",
      "vendor/github.com/containers/common/pkg/config/default_linux.go",
      "vendor/github.com/containers/common/pkg/config/default_unsupported.go",
      "vendor/github.com/containers/common/pkg/config/default_windows.go",
      "vendor/github.com/containers/common/pkg/config/nosystemd.go",
      "vendor/github.com/containers/common/pkg/config/systemd.go",
      "vendor/github.com/containers/common/pkg/parse/parse_unix.go",
      "vendor/github.com/containers/common/pkg/retry/retry_unsupported.go",
      "vendor/github.com/containers/common/pkg/seccomp/default_linux.go",
      "vendor/github.com/containers/common/pkg/seccomp/errno_list.go",
      "vendor/github.com/containers/common/pkg/seccomp/filter.go",
      "vendor/github.com/containers/common/pkg/seccomp/seccomp.json",
      "vendor/github.com/containers/common/pkg/seccomp/seccomp_unsupported.go",
      "vendor/github.com/containers/common/pkg/seccomp/supported.go",
      "vendor/github.com/containers/common/pkg/seccomp/validate.go",
      "vendor/github.com/containers/common/pkg/signal/signal_linux.go",
      "vendor/github.com/containers/common/pkg/signal/signal_linux_mipsx.go",
      "vendor/github.com/containers/common/pkg/signal/signal_unsupported.go",
      "vendor/github.com/containers/common/pkg/sysinfo/numcpu.go",
      "vendor/github.com/containers/common/pkg/sysinfo/numcpu_linux.go",
      "vendor/github.com/containers/common/pkg/sysinfo/numcpu_windows.go",
      "vendor/github.com/containers/common/pkg/sysinfo/nummem_linux.go",
      "vendor/github.com/containers/common/pkg/sysinfo/nummem_unsupported.go",
      "vendor/github.com/containers/common/pkg/sysinfo/sysinfo_solaris.go",
      "vendor/github.com/containers/common/pkg/sysinfo/sysinfo_unix.go",
      "vendor/github.com/containers/common/pkg/sysinfo/sysinfo_windows.go",
      "vendor/github.com/containers/common/pkg/umask/umask_unix.go",
      "vendor/github.com/containers/common/pkg/umask/umask_unsupported.go",
      "vendor/github.com/containers/common/pkg/util/util_supported.go",
      "vendor/github.com/containers/common/pkg/util/util_windows.go",
      "vendor/github.com/containers/ocicrypt/go.mod",
      "vendor/github.com/containers/ocicrypt/go.sum",
      "vendor/github.com/containers/storage/drivers/overlay/overlay.go",
      "vendor/github.com/containers/storage/go.mod",
      "vendor/github.com/containers/storage/go.sum",
      "vendor/github.com/containers/storage/types/options.go",
      "vendor/github.com/klauspost/compress/README.md",
      "vendor/github.com/klauspost/compress/huff0/autogen.go",
      "vendor/github.com/klauspost/compress/huff0/bitreader.go",
      "vendor/github.com/klauspost/compress/huff0/decompress.go",
      "vendor/github.com/klauspost/compress/huff0/decompress_8b_amd64.s",
      "vendor/github.com/klauspost/compress/huff0/decompress_8b_amd64.s.in",
      "vendor/github.com/klauspost/compress/huff0/decompress_amd64.go",
      "vendor/github.com/klauspost/compress/huff0/decompress_amd64.s",
      "vendor/github.com/klauspost/compress/huff0/decompress_amd64.s.in",
      "vendor/github.com/klauspost/compress/huff0/decompress_generic.go",
      "vendor/github.com/klauspost/compress/zstd/README.md",
      "vendor/github.com/klauspost/compress/zstd/blockdec.go",
      "vendor/github.com/klauspost/compress/zstd/decoder.go",
      "vendor/github.com/klauspost/compress/zstd/framedec.go",
      "vendor/github.com/klauspost/compress/zstd/fuzz.go",
      "vendor/github.com/klauspost/compress/zstd/fuzz_none.go",
      "vendor/github.com/klauspost/compress/zstd/seqdec.go",
      "vendor/github.com/klauspost/compress/zstd/zip.go",
      "vendor/github.com/klauspost/compress/zstd/zstd.go",
      "vendor/github.com/miekg/pkcs11/.travis.yml",
      "vendor/github.com/miekg/pkcs11/README.md",
      "vendor/github.com/miekg/pkcs11/const.go",
      "vendor/github.com/miekg/pkcs11/pkcs11.go",
      "vendor/github.com/miekg/pkcs11/release.go",
      "vendor/github.com/miekg/pkcs11/types.go",
      "vendor/github.com/miekg/pkcs11/zconst.go",
      "vendor/github.com/prometheus/client_golang/prometheus/promhttp/instrument_client.go",
      "vendor/github.com/prometheus/client_golang/prometheus/promhttp/instrument_server.go",
      "vendor/github.com/prometheus/client_golang/prometheus/promhttp/option.go",
      "vendor/github.com/stretchr/testify/assert/assertion_compare.go",
      "vendor/github.com/stretchr/testify/assert/assertion_compare_can_convert.go",
      "vendor/github.com/stretchr/testify/assert/assertion_compare_legacy.go",
      "vendor/github.com/stretchr/testify/assert/assertion_format.go",
      "vendor/github.com/stretchr/testify/assert/assertion_forward.go",
      "vendor/github.com/stretchr/testify/assert/assertion_order.go",
      "vendor/github.com/stretchr/testify/assert/assertions.go",
      "vendor/github.com/stretchr/testify/require/require.go",
      "vendor/github.com/stretchr/testify/require/require_forward.go",
      "vendor/modules.txt"
    ],
    "message": "Merge pull request #13531 from cdoern/build\n\nAdd Context Directory to tar",
    "before_after_code_files": [
      "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
      "test/e2e/build_test.go||test/e2e/build_test.go"
    ]
  },
  "patch_diff": {
    "pkg/bindings/images/build.go||pkg/bindings/images/build.go": [
      "File: pkg/bindings/images/build.go -> pkg/bindings/images/build.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "241:    params.Add(\"platform\", platform)",
      "242:   }",
      "243:  }",
      "245:   options.ContextDirectory = contextDir",
      "246:  }",
      "",
      "[Removed Lines]",
      "244:  if contextDir, err := filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
      "",
      "[Added Lines]",
      "244:  var err error",
      "245:  var contextDir string",
      "246:  if contextDir, err = filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "302:  var (",
      "303:   headers http.Header",
      "305:  )",
      "306:  if options.SystemContext != nil && options.SystemContext.DockerAuthConfig != nil {",
      "307:   headers, err = auth.MakeXRegistryAuthHeader(options.SystemContext, options.SystemContext.DockerAuthConfig.Username, options.SystemContext.DockerAuthConfig.Password)",
      "",
      "[Removed Lines]",
      "304:   err     error",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "325:   }",
      "326:  }",
      "329:  if err != nil {",
      "330:   logrus.Errorf(\"Cannot find absolute path of %v: %v\", options.ContextDirectory, err)",
      "331:   return nil, err",
      "",
      "[Removed Lines]",
      "328:  contextDir, err := filepath.Abs(options.ContextDirectory)",
      "",
      "[Added Lines]",
      "329:  contextDir, err = filepath.Abs(options.ContextDirectory)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "556:     merr = multierror.Append(merr, err)",
      "557:     return",
      "558:    }",
      "560:    err = filepath.Walk(s, func(path string, info os.FileInfo, err error) error {",
      "561:     if err != nil {",
      "562:      return err",
      "563:     }",
      "567:     }",
      "569:     name := filepath.ToSlash(strings.TrimPrefix(path, s+string(filepath.Separator)))",
      "571:     excluded, err := pm.Matches(name) // nolint:staticcheck",
      "",
      "[Removed Lines]",
      "565:     if path == s {",
      "566:      return nil // skip root dir",
      "",
      "[Added Lines]",
      "567:     if info.IsDir() && s == path {",
      "568:      var p *os.File",
      "569:      p, err = os.Open(path)",
      "570:      if err != nil {",
      "571:       return err",
      "572:      }",
      "573:      defer p.Close()",
      "574:      _, err = p.Readdir(1)",
      "575:      if err != io.EOF {",
      "576:       return nil // non empty root dir, need to return",
      "577:      } else if err != nil {",
      "578:       logrus.Errorf(\"Error while reading directory %v: %v\", path, err)",
      "579:      }",
      "",
      "---------------"
    ],
    "test/e2e/build_test.go||test/e2e/build_test.go": [
      "File: test/e2e/build_test.go -> test/e2e/build_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "734:   err = os.Mkdir(\"relative\", 0755)",
      "735:   Expect(err).To(BeNil())",
      "736:   containerFilePath := filepath.Join(\"relative\", \"Containerfile\")",
      "738:   err = ioutil.WriteFile(containerFilePath, []byte(containerFile), 0755)",
      "739:   Expect(err).To(BeNil())",
      "741:   build.WaitWithDefaultTimeout()",
      "742:   Expect(build).To(Exit(0))",
      "743:   err = os.RemoveAll(\"relative\")",
      "",
      "[Removed Lines]",
      "737:   fmt.Println(containerFilePath)",
      "740:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\"})",
      "",
      "[Added Lines]",
      "737:   err = os.Mkdir(\"relative/build-root\", 0755)",
      "738:   Expect(err).To(BeNil())",
      "741:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\", \"./relative/build-root\"})",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5e1e13c18c22e2cd43021cb647eda328324f6c96",
      "candidate_info": {
        "commit_hash": "5e1e13c18c22e2cd43021cb647eda328324f6c96",
        "repo": "containers/podman",
        "commit_url": "https://github.com/containers/podman/commit/5e1e13c18c22e2cd43021cb647eda328324f6c96",
        "files": [
          "pkg/bindings/images/build.go",
          "test/e2e/build_test.go"
        ],
        "message": "add contextDir to tar on remote\n\npodman build fails on remote build when using a relative context directory.\nThis is because the context dir was not being added to the tar, so when remote\nthe compat build function would not be able to stat the contextDir.\n\nresolves #13293\n\nSigned-off-by: cdoern <cbdoer23@g.holycross.edu>",
        "before_after_code_files": [
          "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
          "test/e2e/build_test.go||test/e2e/build_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/containers/podman/pull/13531"
        ],
        "olp_code_files": {
          "patch": [
            "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
            "test/e2e/build_test.go||test/e2e/build_test.go"
          ],
          "candidate": [
            "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
            "test/e2e/build_test.go||test/e2e/build_test.go"
          ]
        }
      },
      "candidate_diff": {
        "pkg/bindings/images/build.go||pkg/bindings/images/build.go": [
          "File: pkg/bindings/images/build.go -> pkg/bindings/images/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:    params.Add(\"platform\", platform)",
          "242:   }",
          "243:  }",
          "245:   options.ContextDirectory = contextDir",
          "246:  }",
          "",
          "[Removed Lines]",
          "244:  if contextDir, err := filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
          "",
          "[Added Lines]",
          "244:  var err error",
          "245:  var contextDir string",
          "246:  if contextDir, err = filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:  var (",
          "303:   headers http.Header",
          "305:  )",
          "306:  if options.SystemContext != nil && options.SystemContext.DockerAuthConfig != nil {",
          "307:   headers, err = auth.MakeXRegistryAuthHeader(options.SystemContext, options.SystemContext.DockerAuthConfig.Username, options.SystemContext.DockerAuthConfig.Password)",
          "",
          "[Removed Lines]",
          "304:   err     error",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "325:   }",
          "326:  }",
          "329:  if err != nil {",
          "330:   logrus.Errorf(\"Cannot find absolute path of %v: %v\", options.ContextDirectory, err)",
          "331:   return nil, err",
          "",
          "[Removed Lines]",
          "328:  contextDir, err := filepath.Abs(options.ContextDirectory)",
          "",
          "[Added Lines]",
          "329:  contextDir, err = filepath.Abs(options.ContextDirectory)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556:     merr = multierror.Append(merr, err)",
          "557:     return",
          "558:    }",
          "560:    err = filepath.Walk(s, func(path string, info os.FileInfo, err error) error {",
          "561:     if err != nil {",
          "562:      return err",
          "563:     }",
          "567:     }",
          "569:     name := filepath.ToSlash(strings.TrimPrefix(path, s+string(filepath.Separator)))",
          "571:     excluded, err := pm.Matches(name) // nolint:staticcheck",
          "",
          "[Removed Lines]",
          "565:     if path == s {",
          "566:      return nil // skip root dir",
          "",
          "[Added Lines]",
          "567:     if info.IsDir() && s == path {",
          "568:      var p *os.File",
          "569:      p, err = os.Open(path)",
          "570:      if err != nil {",
          "571:       return err",
          "572:      }",
          "573:      defer p.Close()",
          "574:      _, err = p.Readdir(1)",
          "575:      if err != io.EOF {",
          "576:       return nil // non empty root dir, need to return",
          "577:      } else if err != nil {",
          "578:       logrus.Errorf(\"Error while reading directory %v: %v\", path, err)",
          "579:      }",
          "",
          "---------------"
        ],
        "test/e2e/build_test.go||test/e2e/build_test.go": [
          "File: test/e2e/build_test.go -> test/e2e/build_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:   err = os.Mkdir(\"relative\", 0755)",
          "735:   Expect(err).To(BeNil())",
          "736:   containerFilePath := filepath.Join(\"relative\", \"Containerfile\")",
          "738:   err = ioutil.WriteFile(containerFilePath, []byte(containerFile), 0755)",
          "739:   Expect(err).To(BeNil())",
          "741:   build.WaitWithDefaultTimeout()",
          "742:   Expect(build).To(Exit(0))",
          "743:   err = os.RemoveAll(\"relative\")",
          "",
          "[Removed Lines]",
          "737:   fmt.Println(containerFilePath)",
          "740:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\"})",
          "",
          "[Added Lines]",
          "737:   err = os.Mkdir(\"relative/build-root\", 0755)",
          "738:   Expect(err).To(BeNil())",
          "741:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\", \"./relative/build-root\"})",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d01e788b10f0dd22b6c5747b0726ca36fafb61c",
      "candidate_info": {
        "commit_hash": "2d01e788b10f0dd22b6c5747b0726ca36fafb61c",
        "repo": "containers/podman",
        "commit_url": "https://github.com/containers/podman/commit/2d01e788b10f0dd22b6c5747b0726ca36fafb61c",
        "files": [
          "pkg/bindings/images/build.go",
          "test/e2e/build_test.go"
        ],
        "message": "add contextDir to tar on remote\n\npodman build fails on remote build when using a relative context directory.\nThis is because the context dir was not being added to the tar, so when remote\nthe compat build function would not be able to stat the contextDir.\n\nresolves #13293\n\nSigned-off-by: cdoern <cbdoer23@g.holycross.edu>",
        "before_after_code_files": [
          "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
          "test/e2e/build_test.go||test/e2e/build_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
            "test/e2e/build_test.go||test/e2e/build_test.go"
          ],
          "candidate": [
            "pkg/bindings/images/build.go||pkg/bindings/images/build.go",
            "test/e2e/build_test.go||test/e2e/build_test.go"
          ]
        }
      },
      "candidate_diff": {
        "pkg/bindings/images/build.go||pkg/bindings/images/build.go": [
          "File: pkg/bindings/images/build.go -> pkg/bindings/images/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:    params.Add(\"platform\", platform)",
          "242:   }",
          "243:  }",
          "245:   options.ContextDirectory = contextDir",
          "246:  }",
          "",
          "[Removed Lines]",
          "244:  if contextDir, err := filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
          "",
          "[Added Lines]",
          "244:  var err error",
          "245:  var contextDir string",
          "246:  if contextDir, err = filepath.EvalSymlinks(options.ContextDirectory); err == nil {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:  var (",
          "303:   headers http.Header",
          "305:  )",
          "306:  if options.SystemContext != nil && options.SystemContext.DockerAuthConfig != nil {",
          "307:   headers, err = auth.MakeXRegistryAuthHeader(options.SystemContext, options.SystemContext.DockerAuthConfig.Username, options.SystemContext.DockerAuthConfig.Password)",
          "",
          "[Removed Lines]",
          "304:   err     error",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "325:   }",
          "326:  }",
          "329:  if err != nil {",
          "330:   logrus.Errorf(\"Cannot find absolute path of %v: %v\", options.ContextDirectory, err)",
          "331:   return nil, err",
          "",
          "[Removed Lines]",
          "328:  contextDir, err := filepath.Abs(options.ContextDirectory)",
          "",
          "[Added Lines]",
          "329:  contextDir, err = filepath.Abs(options.ContextDirectory)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556:     merr = multierror.Append(merr, err)",
          "557:     return",
          "558:    }",
          "560:    err = filepath.Walk(s, func(path string, info os.FileInfo, err error) error {",
          "561:     if err != nil {",
          "562:      return err",
          "563:     }",
          "567:     }",
          "569:     name := filepath.ToSlash(strings.TrimPrefix(path, s+string(filepath.Separator)))",
          "571:     excluded, err := pm.Matches(name) // nolint:staticcheck",
          "",
          "[Removed Lines]",
          "565:     if path == s {",
          "566:      return nil // skip root dir",
          "",
          "[Added Lines]",
          "567:     if info.IsDir() && s == path {",
          "568:      var p *os.File",
          "569:      p, err = os.Open(path)",
          "570:      if err != nil {",
          "571:       return err",
          "572:      }",
          "573:      defer p.Close()",
          "574:      _, err = p.Readdir(1)",
          "575:      if err != io.EOF {",
          "576:       return nil // non empty root dir, need to return",
          "577:      } else if err != nil {",
          "578:       logrus.Errorf(\"Error while reading directory %v: %v\", path, err)",
          "579:      }",
          "",
          "---------------"
        ],
        "test/e2e/build_test.go||test/e2e/build_test.go": [
          "File: test/e2e/build_test.go -> test/e2e/build_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:   err = os.Mkdir(\"relative\", 0755)",
          "735:   Expect(err).To(BeNil())",
          "736:   containerFilePath := filepath.Join(\"relative\", \"Containerfile\")",
          "738:   err = ioutil.WriteFile(containerFilePath, []byte(containerFile), 0755)",
          "739:   Expect(err).To(BeNil())",
          "741:   build.WaitWithDefaultTimeout()",
          "742:   Expect(build).To(Exit(0))",
          "743:   err = os.RemoveAll(\"relative\")",
          "",
          "[Removed Lines]",
          "737:   fmt.Println(containerFilePath)",
          "740:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\"})",
          "",
          "[Added Lines]",
          "737:   err = os.Mkdir(\"relative/build-root\", 0755)",
          "738:   Expect(err).To(BeNil())",
          "741:   build := podmanTest.Podman([]string{\"build\", \"-f\", \"./relative/Containerfile\", \"./relative/build-root\"})",
          "",
          "---------------"
        ]
      }
    }
  ]
}