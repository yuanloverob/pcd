{
  "cve_id": "CVE-2024-43803",
  "cve_desc": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. The `BareMetalHost` (BMH) CRD allows the `userData`, `metaData`, and `networkData` for the provisioned host to be specified as links to Kubernetes Secrets. There are fields for both the `Name` and `Namespace` of the Secret, meaning that versions of the baremetal-operator prior to 0.8.0, 0.6.2, and 0.5.2 will read a `Secret` from any namespace. A user with access to create or edit a `BareMetalHost` can thus exfiltrate a `Secret` from another namespace by using it as e.g. the `userData` for provisioning some host (note that this need not be a real host, it could be a VM somewhere).\n\nBMO will only read a key with the name `value` (or `userData`, `metaData`, or `networkData`), so that limits the exposure somewhat. `value` is probably a pretty common key though. Secrets used by _other_ `BareMetalHost`s in different namespaces are always vulnerable. It is probably relatively unusual for anyone other than cluster administrators to have RBAC access to create/edit a `BareMetalHost`. This vulnerability is only meaningful, if the cluster has users other than administrators and users' privileges are limited to their respective namespaces.\n\nThe patch prevents BMO from accepting links to Secrets from other namespaces as BMH input. Any BMH configuration is only read from the same namespace only. The problem is patched in BMO releases v0.7.0, v0.6.2 and v0.5.2 and users should upgrade to those versions. Prior upgrading, duplicate the BMC Secrets to the namespace where the corresponding BMH is. After upgrade, remove the old Secrets. As a workaround, an operator can configure BMO RBAC to be namespace scoped for Secrets, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces.",
  "repo": "metal3-io/baremetal-operator",
  "patch_hash": "c2b5a557641bc273367635124047d6c958aa15f7",
  "patch_info": {
    "commit_hash": "c2b5a557641bc273367635124047d6c958aa15f7",
    "repo": "metal3-io/baremetal-operator",
    "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/c2b5a557641bc273367635124047d6c958aa15f7",
    "files": [
      "controllers/metal3.io/baremetalhost_controller_test.go",
      "controllers/metal3.io/host_config_data.go",
      "controllers/metal3.io/host_config_data_test.go"
    ],
    "message": "Merge pull request #1929 from Nordix/tuomo/ghsa-pqfh-xh7w-7h3p\n\n\ud83d\udc1b Disallow fetching secrets from namespaces different from the host's one",
    "before_after_code_files": [
      "controllers/metal3.io/baremetalhost_controller_test.go||controllers/metal3.io/baremetalhost_controller_test.go",
      "controllers/metal3.io/host_config_data.go||controllers/metal3.io/host_config_data.go",
      "controllers/metal3.io/host_config_data_test.go||controllers/metal3.io/host_config_data_test.go"
    ]
  },
  "patch_diff": {
    "controllers/metal3.io/baremetalhost_controller_test.go||controllers/metal3.io/baremetalhost_controller_test.go": [
      "File: controllers/metal3.io/baremetalhost_controller_test.go -> controllers/metal3.io/baremetalhost_controller_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: )",
      "39: func newSecret(name string, data map[string]string) *corev1.Secret {",
      "40:  secretData := make(map[string][]byte)",
      "41:  for k, v := range data {",
      "42:   secretData[k] = []byte(base64.StdEncoding.EncodeToString([]byte(v)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:  return newSecretInNamespace(name, namespace, data)",
      "41: }",
      "43: func newSecretInNamespace(name, namespace string, data map[string]string) *corev1.Secret {",
      "",
      "---------------"
    ],
    "controllers/metal3.io/host_config_data.go||controllers/metal3.io/host_config_data.go": [
      "File: controllers/metal3.io/host_config_data.go -> controllers/metal3.io/host_config_data.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "4:  \"github.com/go-logr/logr\"",
      "5:  metal3api \"github.com/metal3-io/baremetal-operator/apis/metal3.io/v1alpha1\"",
      "6:  \"github.com/metal3-io/baremetal-operator/pkg/secretutils\"",
      "7:  corev1 \"k8s.io/api/core/v1\"",
      "8:  \"k8s.io/apimachinery/pkg/types\"",
      "9: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7:  \"github.com/pkg/errors\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "22: func (hcd *hostConfigData) getSecretData(name, namespace, dataKey string) (string, error) {",
      "23:  key := types.NamespacedName{",
      "24:   Name:      name,",
      "25:   Namespace: namespace,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24:  if namespace != hcd.host.Namespace {",
      "25:   return \"\", errors.Errorf(\"%s secret must be in same namespace as host %s/%s\", dataKey, hcd.host.Namespace, hcd.host.Name)",
      "26:  }",
      "",
      "---------------"
    ],
    "controllers/metal3.io/host_config_data_test.go||controllers/metal3.io/host_config_data_test.go": [
      "File: controllers/metal3.io/host_config_data_test.go -> controllers/metal3.io/host_config_data_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "323:    ExpectedNetworkData: \"\",",
      "324:    ErrNetworkData:      true,",
      "325:   },",
      "326:  }",
      "328:  for _, tc := range testCases {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "326:   {",
      "327:    Scenario: \"user-data secret in different namespace\",",
      "328:    Host: newHost(\"host-user-data\",",
      "329:     &metal3api.BareMetalHostSpec{",
      "330:      BMC: metal3api.BMCDetails{",
      "331:       Address:         \"ipmi://192.168.122.1:6233\",",
      "332:       CredentialsName: defaultSecretName,",
      "333:      },",
      "334:      UserData: &corev1.SecretReference{",
      "335:       Name:      \"user-data\",",
      "336:       Namespace: \"other-namespace\",",
      "337:      },",
      "338:     }),",
      "339:    UserDataSecret: newSecretInNamespace(\"user-data\", \"other-namespace\", map[string]string{\"userData\": \"somedata\"}),",
      "340:    ErrUserData:    true,",
      "341:   },",
      "342:   {",
      "343:    Scenario: \"meta-data secret in different namespace\",",
      "344:    Host: newHost(\"host-user-data\",",
      "345:     &metal3api.BareMetalHostSpec{",
      "346:      BMC: metal3api.BMCDetails{",
      "347:       Address:         \"ipmi://192.168.122.1:6233\",",
      "348:       CredentialsName: defaultSecretName,",
      "349:      },",
      "350:      MetaData: &corev1.SecretReference{",
      "351:       Name:      \"meta-data\",",
      "352:       Namespace: \"other-namespace\",",
      "353:      },",
      "354:     }),",
      "355:    NetworkDataSecret: newSecretInNamespace(\"meta-data\", \"other-namespace\", map[string]string{\"metaData\": \"key: value\"}),",
      "356:    ErrMetaData:       true,",
      "357:   },",
      "358:   {",
      "359:    Scenario: \"network-data secret in different namespace\",",
      "360:    Host: newHost(\"host-user-data\",",
      "361:     &metal3api.BareMetalHostSpec{",
      "362:      BMC: metal3api.BMCDetails{",
      "363:       Address:         \"ipmi://192.168.122.1:6233\",",
      "364:       CredentialsName: defaultSecretName,",
      "365:      },",
      "366:      NetworkData: &corev1.SecretReference{",
      "367:       Name:      \"net-data\",",
      "368:       Namespace: \"other-namespace\",",
      "369:      },",
      "370:     }),",
      "371:    NetworkDataSecret: newSecretInNamespace(\"net-data\", \"other-namespace\", map[string]string{\"networkData\": \"key: value\"}),",
      "372:    ErrNetworkData:    true,",
      "373:   },",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "378:    }",
      "380:    if actualMetaData != tc.ExpectedMetaData {",
      "382:    }",
      "383:   })",
      "384:  }",
      "",
      "[Removed Lines]",
      "381:     t.Fatal(fmt.Errorf(\"Failed to assert MetaData. Expected '%s' got '%s'\", actualMetaData, tc.ExpectedMetaData))",
      "",
      "[Added Lines]",
      "429:     t.Fatal(fmt.Errorf(\"Failed to assert MetaData. Expected '%s' got '%s'\", tc.ExpectedMetaData, actualMetaData))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "64a198a72aa6b52ff4ebc17334cf4ae08dd00b22",
      "candidate_info": {
        "commit_hash": "64a198a72aa6b52ff4ebc17334cf4ae08dd00b22",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/64a198a72aa6b52ff4ebc17334cf4ae08dd00b22",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": ":seedling: Bump go.etcd.io/etcd/client/pkg/v3 from 3.5.15 to 3.5.16\n\nBumps [go.etcd.io/etcd/client/pkg/v3](https://github.com/etcd-io/etcd) from 3.5.15 to 3.5.16.\n- [Release notes](https://github.com/etcd-io/etcd/releases)\n- [Commits](https://github.com/etcd-io/etcd/compare/v3.5.15...v3.5.16)\n\n---\nupdated-dependencies:\n- dependency-name: go.etcd.io/etcd/client/pkg/v3\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  github.com/pkg/errors v0.9.1",
          "13:  github.com/prometheus/client_golang v1.20.3",
          "14:  github.com/stretchr/testify v1.9.0",
          "16:  go.uber.org/zap v1.27.0",
          "17:  k8s.io/api v0.29.8",
          "18:  k8s.io/apimachinery v0.29.8",
          "",
          "[Removed Lines]",
          "15:  go.etcd.io/etcd/client/pkg/v3 v3.5.15",
          "",
          "[Added Lines]",
          "15:  go.etcd.io/etcd/client/pkg/v3 v3.5.16",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=",
          "116: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "117: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "120: go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=",
          "121: go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=",
          "122: go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=",
          "",
          "[Removed Lines]",
          "118: go.etcd.io/etcd/client/pkg/v3 v3.5.15 h1:fo0HpWz/KlHGMCC+YejpiCmyWDEuIpnTDzpJLB5fWlA=",
          "119: go.etcd.io/etcd/client/pkg/v3 v3.5.15/go.mod h1:mXDI4NAOwEiszrHCb0aqfAYNCrZP4e9hRca3d1YK8EU=",
          "",
          "[Added Lines]",
          "118: go.etcd.io/etcd/client/pkg/v3 v3.5.16 h1:ZgY48uH6UvB+/7R9Yf4x574uCO3jIx0TRDyetSfId3Q=",
          "119: go.etcd.io/etcd/client/pkg/v3 v3.5.16/go.mod h1:V8acl8pcEK0Y2g19YlOV9m9ssUe6MgiDSobSoaBAM0E=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "adcb6c2ea50d57448355c26031d8b55c9a465533",
      "candidate_info": {
        "commit_hash": "adcb6c2ea50d57448355c26031d8b55c9a465533",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/adcb6c2ea50d57448355c26031d8b55c9a465533",
        "files": [
          "apis/metal3.io/v1alpha1/baremetalhost_validation.go",
          "apis/metal3.io/v1alpha1/baremetalhost_validation_test.go"
        ],
        "message": "Add validation against cross-namespace secret references\n\nAdd to BMH creation a validation, which checks if any secret references\nis from namespaces other than BMH's. This is to prevent the secret\nleakage when a user references secrets from other ns just to get the\nsecrets out.\n\nSigned-off-by: Huy Mai <huy.mai@est.tech>",
        "before_after_code_files": [
          "apis/metal3.io/v1alpha1/baremetalhost_validation.go||apis/metal3.io/v1alpha1/baremetalhost_validation.go",
          "apis/metal3.io/v1alpha1/baremetalhost_validation_test.go||apis/metal3.io/v1alpha1/baremetalhost_validation_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apis/metal3.io/v1alpha1/baremetalhost_validation.go||apis/metal3.io/v1alpha1/baremetalhost_validation.go": [
          "File: apis/metal3.io/v1alpha1/baremetalhost_validation.go -> apis/metal3.io/v1alpha1/baremetalhost_validation.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/google/uuid\"",
          "14:  \"github.com/metal3-io/baremetal-operator/pkg/hardwareutils/bmc\"",
          "15: )",
          "17: var (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:  corev1 \"k8s.io/api/core/v1\"",
          "16:  k8serrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "17:  \"k8s.io/apimachinery/pkg/runtime/schema\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:   }",
          "35:  }",
          "37:  if raidErrors := validateRAID(host.Spec.RAID); raidErrors != nil {",
          "38:   errs = append(errs, raidErrors...)",
          "39:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:  errs = append(errs, host.validateCrossNamespaceSecretReferences()...)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "310:  return nil",
          "311: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320: func validateCrossNamespaceSecretReferences(hostNamespace, hostName, fieldName string, ref *corev1.SecretReference) error {",
          "321:  if ref != nil &&",
          "322:   ref.Namespace != \"\" &&",
          "323:   ref.Namespace != hostNamespace {",
          "324:   return k8serrors.NewForbidden(",
          "325:    schema.GroupResource{",
          "326:     Group:    \"metal3.io\",",
          "327:     Resource: \"baremetalhosts\",",
          "328:    },",
          "329:    hostName,",
          "330:    fmt.Errorf(\"%s: cross-namespace Secret references are not allowed\", fieldName),",
          "331:   )",
          "332:  }",
          "333:  return nil",
          "334: }",
          "339: func (host *BareMetalHost) validateCrossNamespaceSecretReferences() []error {",
          "340:  secretRefs := map[*corev1.SecretReference]string{",
          "341:   host.Spec.UserData:    \"userData\",",
          "342:   host.Spec.NetworkData: \"networkData\",",
          "343:   host.Spec.MetaData:    \"metaData\",",
          "344:  }",
          "345:  errs := []error{}",
          "346:  for ref, fieldName := range secretRefs {",
          "347:   if err := validateCrossNamespaceSecretReferences(host.Namespace, host.Name, fieldName, ref); err != nil {",
          "348:    errs = append(errs, err)",
          "349:   }",
          "350:  }",
          "351:  return errs",
          "352: }",
          "",
          "---------------"
        ],
        "apis/metal3.io/v1alpha1/baremetalhost_validation_test.go||apis/metal3.io/v1alpha1/baremetalhost_validation_test.go": [
          "File: apis/metal3.io/v1alpha1/baremetalhost_validation_test.go -> apis/metal3.io/v1alpha1/baremetalhost_validation_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"fmt\"",
          "5:  \"testing\"",
          "7:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "8: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  corev1 \"k8s.io/api/core/v1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:    oldBMH:    nil,",
          "679:    wantedErr: \"invalid value for the inspect.metal3.io annotation, allowed are \\\"disabled\\\" or \\\"\\\"\",",
          "680:   },",
          "681:  }",
          "683:  for _, tt := range tests {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "682:   {",
          "683:    name: \"crossNamespaceUserData\",",
          "684:    newBMH: &BareMetalHost{",
          "685:     TypeMeta:   tm,",
          "686:     ObjectMeta: om,",
          "687:     Spec: BareMetalHostSpec{",
          "688:      UserData: &corev1.SecretReference{",
          "689:       Name:      \"test-secret\",",
          "690:       Namespace: \"different-namespace\", // Different from host's namespace",
          "691:      },",
          "692:     },",
          "693:    },",
          "694:    oldBMH:    nil,",
          "695:    wantedErr: \"baremetalhosts.metal3.io \\\"test\\\" is forbidden: userData: cross-namespace Secret references are not allowed\",",
          "696:   },",
          "697:   {",
          "698:    name: \"crossNamespaceNetworkData\",",
          "699:    newBMH: &BareMetalHost{",
          "700:     TypeMeta:   tm,",
          "701:     ObjectMeta: om,",
          "702:     Spec: BareMetalHostSpec{",
          "703:      NetworkData: &corev1.SecretReference{",
          "704:       Name:      \"test-secret\",",
          "705:       Namespace: \"different-namespace\", // Different from host's namespace",
          "706:      },",
          "707:     },",
          "708:    },",
          "709:    oldBMH:    nil,",
          "710:    wantedErr: \"baremetalhosts.metal3.io \\\"test\\\" is forbidden: networkData: cross-namespace Secret references are not allowed\",",
          "711:   },",
          "712:   {",
          "713:    name: \"crossNamespaceMetaData\",",
          "714:    newBMH: &BareMetalHost{",
          "715:     TypeMeta:   tm,",
          "716:     ObjectMeta: om,",
          "717:     Spec: BareMetalHostSpec{",
          "718:      MetaData: &corev1.SecretReference{",
          "719:       Name:      \"test-secret\",",
          "720:       Namespace: \"different-namespace\", // Different from host's namespace",
          "721:      },",
          "722:     },",
          "723:    },",
          "724:    oldBMH:    nil,",
          "725:    wantedErr: \"baremetalhosts.metal3.io \\\"test\\\" is forbidden: metaData: cross-namespace Secret references are not allowed\",",
          "726:   },",
          "727:   {",
          "728:    name: \"multipleSecretsCrossNamespace\",",
          "729:    newBMH: &BareMetalHost{",
          "730:     TypeMeta:   tm,",
          "731:     ObjectMeta: om,",
          "732:     Spec: BareMetalHostSpec{",
          "733:      UserData: &corev1.SecretReference{",
          "734:       Name:      \"test-secret1\",",
          "735:       Namespace: \"different-namespace1\",",
          "736:      },",
          "737:      NetworkData: &corev1.SecretReference{",
          "738:       Name:      \"test-secret2\",",
          "739:       Namespace: \"different-namespace2\",",
          "740:      },",
          "741:      MetaData: &corev1.SecretReference{",
          "742:       Name:      \"test-secret3\",",
          "743:       Namespace: \"different-namespace3\",",
          "744:      },",
          "745:     },",
          "746:    },",
          "747:    oldBMH:    nil,",
          "748:    wantedErr: \"baremetalhosts.metal3.io \\\"test\\\" is forbidden: userData: cross-namespace Secret references are not allowed\", // Should catch at least one error",
          "749:   },",
          "750:   {",
          "751:    name: \"sameNamespaceSecrets\",",
          "752:    newBMH: &BareMetalHost{",
          "753:     TypeMeta:   tm,",
          "754:     ObjectMeta: om, // namespace is \"test-namespace\"",
          "755:     Spec: BareMetalHostSpec{",
          "756:      UserData: &corev1.SecretReference{",
          "757:       Name:      \"test-secret1\",",
          "758:       Namespace: \"test-namespace\", // Same as host's namespace",
          "759:      },",
          "760:      NetworkData: &corev1.SecretReference{",
          "761:       Name:      \"test-secret2\",",
          "762:       Namespace: \"test-namespace\", // Same as host's namespace",
          "763:      },",
          "764:      MetaData: &corev1.SecretReference{",
          "765:       Name:      \"test-secret3\",",
          "766:       Namespace: \"test-namespace\", // Same as host's namespace",
          "767:      },",
          "768:     },",
          "769:    },",
          "770:    oldBMH:    nil,",
          "771:    wantedErr: \"\", // Should be valid",
          "772:   },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c5b583e114476c2339d3d7199993fd5292bb2c7",
      "candidate_info": {
        "commit_hash": "9c5b583e114476c2339d3d7199993fd5292bb2c7",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/9c5b583e114476c2339d3d7199993fd5292bb2c7",
        "files": [
          "hack/generate.sh",
          "hack/gomod.sh"
        ],
        "message": "bump prow job scripts to basic-checks:golang-1.23\n\nWe forgot to bump these local scripts to go 1.23 long time ago.\n\nSigned-off-by: Tuomo Tanskanen <tuomo.tanskanen@est.tech>",
        "before_after_code_files": [
          "hack/generate.sh||hack/generate.sh",
          "hack/gomod.sh||hack/gomod.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hack/generate.sh||hack/generate.sh": [
          "File: hack/generate.sh -> hack/generate.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         --volume \"${PWD}:${WORKDIR}:rw,z\" \\",
          "34:         --entrypoint sh \\",
          "35:         --workdir \"${WORKDIR}\" \\",
          "37:         \"${WORKDIR}\"/hack/generate.sh \"$@\"",
          "38: fi",
          "",
          "[Removed Lines]",
          "36:         quay.io/metal3-io/basic-checks:golang-1.22 \\",
          "",
          "[Added Lines]",
          "36:         quay.io/metal3-io/basic-checks:golang-1.23 \\",
          "",
          "---------------"
        ],
        "hack/gomod.sh||hack/gomod.sh": [
          "File: hack/gomod.sh -> hack/gomod.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:         --volume \"${PWD}:${WORKDIR}:ro,z\" \\",
          "43:         --entrypoint sh \\",
          "44:         --workdir \"${WORKDIR}\" \\",
          "46:         \"${WORKDIR}\"/hack/gomod.sh \"$@\"",
          "47: fi",
          "",
          "[Removed Lines]",
          "45:         quay.io/metal3-io/basic-checks:golang-1.22 \\",
          "",
          "[Added Lines]",
          "45:         quay.io/metal3-io/basic-checks:golang-1.23 \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7b72a4de6f012bd9d596f9f00762dba49c09e79",
      "candidate_info": {
        "commit_hash": "b7b72a4de6f012bd9d596f9f00762dba49c09e79",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/b7b72a4de6f012bd9d596f9f00762dba49c09e79",
        "files": [
          "test/go.mod",
          "test/go.sum"
        ],
        "message": ":seedling: Bump the capi group across 1 directory with 2 updates\n\nBumps the capi group with 2 updates in the /test directory: [sigs.k8s.io/cluster-api](https://github.com/kubernetes-sigs/cluster-api) and [sigs.k8s.io/cluster-api/test](https://github.com/kubernetes-sigs/cluster-api).\n\n\nUpdates `sigs.k8s.io/cluster-api` from 1.7.6 to 1.7.7\n- [Release notes](https://github.com/kubernetes-sigs/cluster-api/releases)\n- [Commits](https://github.com/kubernetes-sigs/cluster-api/compare/v1.7.6...v1.7.7)\n\nUpdates `sigs.k8s.io/cluster-api/test` from 1.7.6 to 1.7.7\n- [Release notes](https://github.com/kubernetes-sigs/cluster-api/releases)\n- [Commits](https://github.com/kubernetes-sigs/cluster-api/compare/v1.7.6...v1.7.7)\n\n---\nupdated-dependencies:\n- dependency-name: sigs.k8s.io/cluster-api\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: capi\n- dependency-name: sigs.k8s.io/cluster-api/test\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: capi\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "test/go.mod||test/go.mod",
          "test/go.sum||test/go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/go.mod||test/go.mod": [
          "File: test/go.mod -> test/go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  k8s.io/klog/v2 v2.110.1",
          "18:  k8s.io/utils v0.0.0-20231127182322-b307cd553661",
          "19:  libvirt.org/go/libvirt v1.10006.0",
          "22:  sigs.k8s.io/controller-runtime v0.17.6",
          "23:  sigs.k8s.io/kustomize/api v0.17.3",
          "24:  sigs.k8s.io/kustomize/kyaml v0.17.2",
          "",
          "[Removed Lines]",
          "20:  sigs.k8s.io/cluster-api v1.7.6",
          "21:  sigs.k8s.io/cluster-api/test v1.7.6",
          "",
          "[Added Lines]",
          "20:  sigs.k8s.io/cluster-api v1.7.7",
          "21:  sigs.k8s.io/cluster-api/test v1.7.7",
          "",
          "---------------"
        ],
        "test/go.sum||test/go.sum": [
          "File: test/go.sum -> test/go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "493: libvirt.org/go/libvirt v1.10006.0/go.mod h1:1WiFE8EjZfq+FCVog+rvr1yatKbKZ9FaFMZgEqxEJqQ=",
          "494: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.28.0 h1:TgtAeesdhpm2SGwkQasmbeqDo8th5wOBA5h/AjTKA4I=",
          "495: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.28.0/go.mod h1:VHVDI/KrK4fjnV61bE2g3sA7tiETLn8sooImelsCx3Y=",
          "500: sigs.k8s.io/controller-runtime v0.17.6 h1:12IXsozEsIXWAMRpgRlYS1jjAHQXHtWEOMdULh3DbEw=",
          "501: sigs.k8s.io/controller-runtime v0.17.6/go.mod h1:N0jpP5Lo7lMTF9aL56Z/B2oWBJjey6StQM0jRbKQXtY=",
          "502: sigs.k8s.io/gateway-api v0.5.0 h1:ze+k9fJqvmL8s1t3e4q1ST8RnN+f09dEv+gfacahlAE=",
          "",
          "[Removed Lines]",
          "496: sigs.k8s.io/cluster-api v1.7.6 h1:XW9k29YWKmMZMzxkGIpW+TygLv+aDTkzhSp7i6MgzOQ=",
          "497: sigs.k8s.io/cluster-api v1.7.6/go.mod h1:wmlCVPoxbFcHeZzp4Vgphi7I8nSXAgY3cqJFeaF2QLM=",
          "498: sigs.k8s.io/cluster-api/test v1.7.6 h1:xho6HRkpSQpvpriLMIXABwrzqnzjqyYamtM9a9oQp+4=",
          "499: sigs.k8s.io/cluster-api/test v1.7.6/go.mod h1:ckOdUw20CBIuoUxohDAYtC5Ko9UVHN5vdgXCQJbZ4XE=",
          "",
          "[Added Lines]",
          "496: sigs.k8s.io/cluster-api v1.7.7 h1:c+vNNg4qGD2lrVru8kjOeDKhjeYFacFdYg3rPrg9epc=",
          "497: sigs.k8s.io/cluster-api v1.7.7/go.mod h1:wmlCVPoxbFcHeZzp4Vgphi7I8nSXAgY3cqJFeaF2QLM=",
          "498: sigs.k8s.io/cluster-api/test v1.7.7 h1:0tq//ww0KlLXyICa+sbYyEBFeAsDtpifG1Z/ry9XJu4=",
          "499: sigs.k8s.io/cluster-api/test v1.7.7/go.mod h1:ckOdUw20CBIuoUxohDAYtC5Ko9UVHN5vdgXCQJbZ4XE=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5553c7200ac75d889a8a8c5d31bd699b222af988",
      "candidate_info": {
        "commit_hash": "5553c7200ac75d889a8a8c5d31bd699b222af988",
        "repo": "metal3-io/baremetal-operator",
        "commit_url": "https://github.com/metal3-io/baremetal-operator/commit/5553c7200ac75d889a8a8c5d31bd699b222af988",
        "files": [
          "controllers/metal3.io/baremetalhost_controller.go",
          "controllers/metal3.io/bmceventsubscription_controller.go"
        ],
        "message": "fixed lint issues Signed-off-by: babugeet <abhinandhbg@gmail.com>\n\nSigned-off-by: babugeet <97796199+babugeet@users.noreply.github.com>",
        "before_after_code_files": [
          "controllers/metal3.io/baremetalhost_controller.go||controllers/metal3.io/baremetalhost_controller.go",
          "controllers/metal3.io/bmceventsubscription_controller.go||controllers/metal3.io/bmceventsubscription_controller.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/metal3-io/baremetal-operator/pull/2423"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "controllers/metal3.io/baremetalhost_controller.go||controllers/metal3.io/baremetalhost_controller.go": [
          "File: controllers/metal3.io/baremetalhost_controller.go -> controllers/metal3.io/baremetalhost_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:  subResourceNotReadyRetryDelay = time.Second * 60",
          "56:  clarifySoftPoweroffFailure    = \"Continuing with hard poweroff after soft poweroff fails. More details: \"",
          "57:  hardwareDataFinalizer         = metal3api.BareMetalHostFinalizer + \"/hardwareData\"",
          "58: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:  NotReady                      = \"Not ready\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:  if err != nil || !ready {",
          "216:   var msg string",
          "217:   if err == nil {",
          "219:   } else {",
          "220:    msg = err.Error()",
          "221:   }",
          "",
          "[Removed Lines]",
          "218:    msg = \"Not ready\"",
          "",
          "[Added Lines]",
          "219:    msg = NotReady",
          "",
          "---------------"
        ],
        "controllers/metal3.io/bmceventsubscription_controller.go||controllers/metal3.io/bmceventsubscription_controller.go": [
          "File: controllers/metal3.io/bmceventsubscription_controller.go -> controllers/metal3.io/bmceventsubscription_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  if err != nil || !ready {",
          "104:   var msg string",
          "105:   if err == nil {",
          "107:   } else {",
          "108:    msg = err.Error()",
          "109:   }",
          "",
          "[Removed Lines]",
          "106:    msg = \"Not ready\"",
          "",
          "[Added Lines]",
          "106:    msg = NotReady",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:  if err != nil || !ready {",
          "226:   var msg string",
          "227:   if err == nil {",
          "229:   } else {",
          "230:    msg = err.Error()",
          "231:   }",
          "",
          "[Removed Lines]",
          "228:    msg = \"Not ready\"",
          "",
          "[Added Lines]",
          "228:    msg = NotReady",
          "",
          "---------------"
        ]
      }
    }
  ]
}