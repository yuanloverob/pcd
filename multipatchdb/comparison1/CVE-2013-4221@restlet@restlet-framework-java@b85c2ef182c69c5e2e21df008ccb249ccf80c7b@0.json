{
  "cve_id": "CVE-2013-4221",
  "cve_desc": "The default configuration of the ObjectRepresentation class in Restlet before 2.1.4 deserializes objects from untrusted sources using the Java XMLDecoder, which allows remote attackers to execute arbitrary Java code via crafted XML.",
  "repo": "restlet/restlet-framework-java",
  "patch_hash": "b85c2ef182c69c5e2e21df008ccb249ccf80c7b9",
  "patch_info": {
    "commit_hash": "b85c2ef182c69c5e2e21df008ccb249ccf80c7b9",
    "repo": "restlet/restlet-framework-java",
    "commit_url": "https://github.com/restlet/restlet-framework-java/commit/b85c2ef182c69c5e2e21df008ccb249ccf80c7b",
    "files": [
      "build/tmpl/text/changes.txt",
      "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
      "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
    ],
    "message": "Fixed issue #774 - Removed default support of JavaBeans XML-serialization. Reported by David Jorm, Dinis Cruz, Abraham Kang and alavaro Munoz.",
    "before_after_code_files": [
      "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
      "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
    ]
  },
  "patch_diff": {
    "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java": [
      "File: modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java -> modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "78:     private static final VariantInfo VARIANT_OBJECT_XML = new VariantInfo(",
      "79:             MediaType.APPLICATION_JAVA_OBJECT_XML);",
      "81:     @Override",
      "82:     public List<Class<?>> getObjectClasses(Variant source) {",
      "83:         List<Class<?>> result = null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "82:     private static final boolean VARIANT_OBJECT_XML_SUPPORTED = Boolean",
      "83:             .getBoolean(\"org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "90:             MediaType mediaType = source.getMediaType();",
      "92:             if (MediaType.APPLICATION_JAVA_OBJECT.equals(mediaType)",
      "94:                 result = addObjectClass(result, Object.class);",
      "95:             } else if (MediaType.APPLICATION_WWW_FORM.equals(mediaType)) {",
      "96:                 result = addObjectClass(result, Form.class);",
      "",
      "[Removed Lines]",
      "93:                     || MediaType.APPLICATION_JAVA_OBJECT_XML.equals(mediaType)) {",
      "",
      "[Added Lines]",
      "97:                     || (VARIANT_OBJECT_XML_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT_XML",
      "98:                             .equals(mediaType))) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "123:                 result = addVariant(result, VARIANT_FORM);",
      "124:             } else if (Serializable.class.isAssignableFrom(source)) {",
      "125:                 result = addVariant(result, VARIANT_OBJECT);",
      "127:             }",
      "128:         }",
      "",
      "[Removed Lines]",
      "126:                 result = addVariant(result, VARIANT_OBJECT_XML);",
      "",
      "[Added Lines]",
      "131:                 if (VARIANT_OBJECT_XML_SUPPORTED) {",
      "132:                     result = addVariant(result, VARIANT_OBJECT_XML);",
      "133:                 }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "160:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
      "161:                         .isCompatible(target.getMediaType())) {",
      "162:                     result = 0.6F;",
      "165:                     result = 1.0F;",
      "168:                     result = 0.6F;",
      "169:                 }",
      "170:             } else {",
      "",
      "[Removed Lines]",
      "163:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
      "164:                         .getMediaType())) {",
      "166:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
      "167:                         .isCompatible(target.getMediaType())) {",
      "",
      "[Added Lines]",
      "170:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
      "171:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
      "172:                                 .getMediaType())) {",
      "174:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
      "175:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
      "176:                                 .isCompatible(target.getMediaType())) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "216:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
      "217:                         .isCompatible(source.getMediaType())) {",
      "218:                     result = 0.6F;",
      "221:                     result = 1.0F;",
      "224:                     result = 0.6F;",
      "225:                 } else {",
      "226:                     result = 0.5F;",
      "",
      "[Removed Lines]",
      "219:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
      "220:                         .getMediaType())) {",
      "222:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
      "223:                         .isCompatible(source.getMediaType())) {",
      "",
      "[Added Lines]",
      "228:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
      "229:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
      "230:                                 .getMediaType())) {",
      "232:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
      "233:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
      "234:                                 .isCompatible(source.getMediaType())) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "331:         } else if (Serializable.class.isAssignableFrom(entity)) {",
      "332:             updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT,",
      "333:                     1.0F);",
      "336:         } else if (String.class.isAssignableFrom(entity)",
      "337:                 || Reader.class.isAssignableFrom(entity)) {",
      "338:             updatePreferences(preferences, MediaType.TEXT_PLAIN, 1.0F);",
      "",
      "[Removed Lines]",
      "334:             updatePreferences(preferences,",
      "335:                     MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
      "",
      "[Added Lines]",
      "345:             if (VARIANT_OBJECT_XML_SUPPORTED) {",
      "346:                 updatePreferences(preferences,",
      "347:                         MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
      "348:             }",
      "",
      "---------------"
    ],
    "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java": [
      "File: modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java -> modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b1b11fe5a6594b06aed16ed125a09aa1359ed49f",
      "candidate_info": {
        "commit_hash": "b1b11fe5a6594b06aed16ed125a09aa1359ed49f",
        "repo": "restlet/restlet-framework-java",
        "commit_url": "https://github.com/restlet/restlet-framework-java/commit/b1b11fe5a6594b06aed16ed125a09aa1359ed49f",
        "files": [
          "build/tmpl/text/changes.txt",
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ],
        "message": "Fixed issues #774, #778 - Removed default support of JavaBeans XML-deserialization, binary-deserialization on ObjectRepresentation class. Reported by David Jorm.",
        "before_after_code_files": [
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ],
          "candidate": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java": [
          "File: modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java -> modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     private static final VariantInfo VARIANT_OBJECT_XML = new VariantInfo(",
          "79:             MediaType.APPLICATION_JAVA_OBJECT_XML);",
          "92:     @Override",
          "93:     public List<Class<?>> getObjectClasses(Variant source) {",
          "94:         List<Class<?>> result = null;",
          "",
          "[Removed Lines]",
          "82:     private static final boolean VARIANT_OBJECT_XML_SUPPORTED = Boolean",
          "83:             .getBoolean(\"org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED\");",
          "89:     private static final boolean VARIANT_OBJECT_BINARY_SUPPORTED = Boolean",
          "90:             .getBoolean(\"org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:         if (source.getMediaType() != null) {",
          "101:             MediaType mediaType = source.getMediaType();",
          "104:                     .equals(mediaType))",
          "106:                             .equals(mediaType))) {",
          "107:                 result = addObjectClass(result, Object.class);",
          "108:             } else if (MediaType.APPLICATION_WWW_FORM.equals(mediaType)) {",
          "",
          "[Removed Lines]",
          "103:             if ((VARIANT_OBJECT_BINARY_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT",
          "105:                     || (VARIANT_OBJECT_XML_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "",
          "[Added Lines]",
          "92:             if ((ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT",
          "94:                     || (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:             } else if (Form.class.isAssignableFrom(source)) {",
          "136:                 result = addVariant(result, VARIANT_FORM);",
          "137:             } else if (Serializable.class.isAssignableFrom(source)) {",
          "139:                     result = addVariant(result, VARIANT_OBJECT);",
          "140:                 }",
          "142:                     result = addVariant(result, VARIANT_OBJECT_XML);",
          "143:                 }",
          "144:             }",
          "",
          "[Removed Lines]",
          "138:                 if (VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "141:                 if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "",
          "[Added Lines]",
          "127:                 if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "130:                 if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "171:             result = 1.0F;",
          "172:         } else if (source instanceof Serializable) {",
          "173:             if (target != null) {",
          "175:                         && MediaType.APPLICATION_JAVA_OBJECT.equals(target",
          "176:                                 .getMediaType())) {",
          "177:                     result = 1.0F;",
          "179:                         && MediaType.APPLICATION_JAVA_OBJECT",
          "180:                                 .isCompatible(target.getMediaType())) {",
          "181:                     result = 0.6F;",
          "183:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
          "184:                                 .getMediaType())) {",
          "185:                     result = 1.0F;",
          "187:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "188:                                 .isCompatible(target.getMediaType())) {",
          "189:                     result = 0.6F;",
          "190:                 }",
          "192:                 result = 0.5F;",
          "193:             }",
          "194:         }",
          "",
          "[Removed Lines]",
          "174:                 if (VARIANT_OBJECT_BINARY_SUPPORTED",
          "178:                 } else if (VARIANT_OBJECT_BINARY_SUPPORTED",
          "182:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "186:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "191:             } else {",
          "",
          "[Added Lines]",
          "163:                 if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED",
          "167:                 } else if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED",
          "171:                 } else if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED",
          "175:                 } else if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED",
          "180:             } else if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "231:                 result = 1.0F;",
          "232:             } else if (Serializable.class.isAssignableFrom(target)",
          "233:                     || target.isPrimitive()) {",
          "235:                         && MediaType.APPLICATION_JAVA_OBJECT.equals(source",
          "236:                                 .getMediaType())) {",
          "237:                     result = 1.0F;",
          "239:                         && MediaType.APPLICATION_JAVA_OBJECT",
          "240:                                 .isCompatible(source.getMediaType())) {",
          "241:                     result = 0.6F;",
          "243:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
          "244:                                 .getMediaType())) {",
          "245:                     result = 1.0F;",
          "247:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "248:                                 .isCompatible(source.getMediaType())) {",
          "249:                     result = 0.6F;",
          "",
          "[Removed Lines]",
          "234:                 if (VARIANT_OBJECT_BINARY_SUPPORTED",
          "238:                 } else if (VARIANT_OBJECT_BINARY_SUPPORTED",
          "242:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "246:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "",
          "[Added Lines]",
          "223:                 if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED",
          "227:                 } else if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED",
          "231:                 } else if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED",
          "235:                 } else if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "354:         if (Form.class.isAssignableFrom(entity)) {",
          "355:             updatePreferences(preferences, MediaType.APPLICATION_WWW_FORM, 1.0F);",
          "356:         } else if (Serializable.class.isAssignableFrom(entity)) {",
          "358:                 updatePreferences(preferences,",
          "359:                         MediaType.APPLICATION_JAVA_OBJECT, 1.0F);",
          "360:             }",
          "362:                 updatePreferences(preferences,",
          "363:                         MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
          "364:             }",
          "",
          "[Removed Lines]",
          "357:             if (VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "361:             if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "",
          "[Added Lines]",
          "346:             if (ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "350:             if (ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED) {",
          "",
          "---------------"
        ],
        "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java": [
          "File: modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java -> modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: package org.restlet.representation;",
          "36: import java.io.IOException;",
          "37: import java.io.InputStream;",
          "38: import java.io.ObjectInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import java.beans.XMLDecoder;",
          "37: import java.beans.XMLEncoder;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: public class ObjectRepresentation<T extends Serializable> extends",
          "83:         OutputRepresentation {",
          "85:     private volatile T object;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:     public static final boolean VARIANT_OBJECT_XML_SUPPORTED = Boolean",
          "88:             .getBoolean(\"org.restlet.representation.ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED\");",
          "94:     public static final boolean VARIANT_OBJECT_BINARY_SUPPORTED = Boolean",
          "95:             .getBoolean(\"org.restlet.representation.ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:     public ObjectRepresentation(Representation serializedRepresentation)",
          "100:             throws IOException, ClassNotFoundException,",
          "101:             IllegalArgumentException {",
          "102:         super(MediaType.APPLICATION_JAVA_OBJECT);",
          "104:         if (serializedRepresentation.getMediaType().equals(",
          "105:                 MediaType.APPLICATION_JAVA_OBJECT)) {",
          "106:             setMediaType(MediaType.APPLICATION_JAVA_OBJECT);",
          "107:             InputStream is = serializedRepresentation.getStream();",
          "109:             this.object = (T) ois.readObject();",
          "111:             if (is.read() != -1) {",
          "",
          "[Removed Lines]",
          "98:     @SuppressWarnings(\"unchecked\")",
          "108:             ObjectInputStream ois = new ObjectInputStream(is);",
          "",
          "[Added Lines]",
          "114:         this(serializedRepresentation, null);",
          "115:     }",
          "130:     @SuppressWarnings(\"unchecked\")",
          "131:     public ObjectRepresentation(Representation serializedRepresentation,",
          "132:             final ClassLoader classLoader) throws IOException,",
          "133:             ClassNotFoundException, IllegalArgumentException {",
          "138:             if (!VARIANT_OBJECT_BINARY_SUPPORTED) {",
          "139:                 throw new IllegalArgumentException(",
          "140:                         \"SECURITY WARNING: The usage of ObjectInputStream when \"",
          "141:                                 + \"deserializing binary presentations from unstrusted \"",
          "142:                                 + \"sources can lead to malicious attacks. As pointed \"",
          "143:                                 + \"here (https://github.com/restlet/restlet-framework-java/issues/778), \"",
          "144:                                 + \"the ObjectInputStream class is able to force the JVM to execute unwanted \"",
          "145:                                 + \"Java code. Thus, the support of such format has been disactivated \"",
          "146:                                 + \"by default. You can activate this support by turning on the following system property: \"",
          "147:                                 + \"org.restlet.representation.ObjectRepresentation.VARIANT_OBJECT_BINARY_SUPPORTED.\");",
          "148:             }",
          "151:             ObjectInputStream ois = null;",
          "152:             if (classLoader != null) {",
          "153:                 ois = new ObjectInputStream(is) {",
          "154:                     @Override",
          "155:                     protected Class<?> resolveClass(",
          "156:                             java.io.ObjectStreamClass desc)",
          "157:                             throws java.io.IOException,",
          "158:                             java.lang.ClassNotFoundException {",
          "159:                         return Class",
          "160:                                 .forName(desc.getName(), false, classLoader);",
          "161:                     }",
          "162:                 };",
          "163:             } else {",
          "164:                 ois = new ObjectInputStream(is);",
          "165:             }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:             ois.close();",
          "120:             setMediaType(MediaType.APPLICATION_JAVA_OBJECT_XML);",
          "121:             InputStream is = serializedRepresentation.getStream();",
          "122:             java.beans.XMLDecoder decoder = new java.beans.XMLDecoder(is);",
          "",
          "[Removed Lines]",
          "118:         } else if (serializedRepresentation.getMediaType().equals(",
          "119:                 MediaType.APPLICATION_JAVA_OBJECT_XML)) {",
          "",
          "[Added Lines]",
          "176:         } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "177:                 && serializedRepresentation.getMediaType().equals(",
          "178:                         MediaType.APPLICATION_JAVA_OBJECT_XML)) {",
          "179:             if (!VARIANT_OBJECT_XML_SUPPORTED) {",
          "180:                 throw new IllegalArgumentException(",
          "181:                         \"SECURITY WARNING: The usage of XMLDecoder when \"",
          "182:                                 + \"deserializing XML presentations from unstrusted \"",
          "183:                                 + \"sources can lead to malicious attacks. As pointed \"",
          "184:                                 + \"here (http://blog.diniscruz.com/2013/08/using-xmldecoder-to-execute-server-side.html), \"",
          "185:                                 + \"the XMLDecoder class is able to force the JVM to \"",
          "186:                                 + \"execute unwanted Java code described inside the XML \"",
          "187:                                 + \"file. Thus, the support of such format has been \"",
          "188:                                 + \"disactivated by default. You can activate this \"",
          "189:                                 + \"support by turning on the following system property: \"",
          "190:                                 + \"org.restlet.representation.ObjectRepresentation.VARIANT_OBJECT_XML_SUPPORTED.\");",
          "191:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "130:             decoder.close();",
          "138:         }",
          "139:     }",
          "",
          "[Removed Lines]",
          "132:         } else {",
          "133:             throw new IllegalArgumentException(",
          "134:                     \"The serialized representation must have this media type: \"",
          "135:                             + MediaType.APPLICATION_JAVA_OBJECT.toString()",
          "136:                             + \" or this one: \"",
          "137:                             + MediaType.APPLICATION_JAVA_OBJECT_XML.toString());",
          "",
          "[Added Lines]",
          "205:         throw new IllegalArgumentException(",
          "206:                 \"The serialized representation must have this media type: \"",
          "207:                         + MediaType.APPLICATION_JAVA_OBJECT.toString()",
          "208:                         + \" or this one: \"",
          "209:                         + MediaType.APPLICATION_JAVA_OBJECT_XML.toString());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12cc79b3953c7bd276e9f1cae2fbfdb9c1a6f070",
      "candidate_info": {
        "commit_hash": "12cc79b3953c7bd276e9f1cae2fbfdb9c1a6f070",
        "repo": "restlet/restlet-framework-java",
        "commit_url": "https://github.com/restlet/restlet-framework-java/commit/12cc79b3953c7bd276e9f1cae2fbfdb9c1a6f070",
        "files": [
          "build/tmpl/text/changes.txt",
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ],
        "message": "Fixed issue #774 - Removed default support of JavaBeans XML-serialization. Reported by David Jorm, Dinis Cruz, Abraham Kang and Alvaro Munoz.",
        "before_after_code_files": [
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ],
          "candidate": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java": [
          "File: modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java -> modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     private static final VariantInfo VARIANT_OBJECT_XML = new VariantInfo(",
          "79:             MediaType.APPLICATION_JAVA_OBJECT_XML);",
          "81:     @Override",
          "82:     public List<Class<?>> getObjectClasses(Variant source) {",
          "83:         List<Class<?>> result = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     private static final boolean VARIANT_OBJECT_XML_SUPPORTED = Boolean",
          "83:             .getBoolean(\"org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:             MediaType mediaType = source.getMediaType();",
          "92:             if (MediaType.APPLICATION_JAVA_OBJECT.equals(mediaType)",
          "94:                 result = addObjectClass(result, Object.class);",
          "95:             } else if (MediaType.APPLICATION_WWW_FORM.equals(mediaType)) {",
          "96:                 result = addObjectClass(result, Form.class);",
          "",
          "[Removed Lines]",
          "93:                     || MediaType.APPLICATION_JAVA_OBJECT_XML.equals(mediaType)) {",
          "",
          "[Added Lines]",
          "97:                     || (VARIANT_OBJECT_XML_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "98:                             .equals(mediaType))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:                 result = addVariant(result, VARIANT_FORM);",
          "124:             } else if (Serializable.class.isAssignableFrom(source)) {",
          "125:                 result = addVariant(result, VARIANT_OBJECT);",
          "127:             }",
          "128:         }",
          "",
          "[Removed Lines]",
          "126:                 result = addVariant(result, VARIANT_OBJECT_XML);",
          "",
          "[Added Lines]",
          "131:                 if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "132:                     result = addVariant(result, VARIANT_OBJECT_XML);",
          "133:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "160:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
          "161:                         .isCompatible(target.getMediaType())) {",
          "162:                     result = 0.6F;",
          "165:                     result = 1.0F;",
          "168:                     result = 0.6F;",
          "169:                 }",
          "170:             } else {",
          "",
          "[Removed Lines]",
          "163:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
          "164:                         .getMediaType())) {",
          "166:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
          "167:                         .isCompatible(target.getMediaType())) {",
          "",
          "[Added Lines]",
          "170:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "171:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
          "172:                                 .getMediaType())) {",
          "174:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "175:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "176:                                 .isCompatible(target.getMediaType())) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "216:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
          "217:                         .isCompatible(source.getMediaType())) {",
          "218:                     result = 0.6F;",
          "221:                     result = 1.0F;",
          "224:                     result = 0.6F;",
          "225:                 } else {",
          "226:                     result = 0.5F;",
          "",
          "[Removed Lines]",
          "219:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
          "220:                         .getMediaType())) {",
          "222:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
          "223:                         .isCompatible(source.getMediaType())) {",
          "",
          "[Added Lines]",
          "228:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "229:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
          "230:                                 .getMediaType())) {",
          "232:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "233:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "234:                                 .isCompatible(source.getMediaType())) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "331:         } else if (Serializable.class.isAssignableFrom(entity)) {",
          "332:             updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT,",
          "333:                     1.0F);",
          "336:         } else if (String.class.isAssignableFrom(entity)",
          "337:                 || Reader.class.isAssignableFrom(entity)) {",
          "338:             updatePreferences(preferences, MediaType.TEXT_PLAIN, 1.0F);",
          "",
          "[Removed Lines]",
          "334:             updatePreferences(preferences,",
          "335:                     MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
          "",
          "[Added Lines]",
          "345:             if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "346:                 updatePreferences(preferences,",
          "347:                         MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
          "348:             }",
          "",
          "---------------"
        ],
        "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java": [
          "File: modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java -> modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: package org.restlet.representation;",
          "36: import java.io.IOException;",
          "37: import java.io.InputStream;",
          "38: import java.io.ObjectInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import java.beans.XMLDecoder;",
          "37: import java.beans.XMLEncoder;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3015e4783c2a36e7528aa611c911b7d8c4ec5ba",
      "candidate_info": {
        "commit_hash": "c3015e4783c2a36e7528aa611c911b7d8c4ec5ba",
        "repo": "restlet/restlet-framework-java",
        "commit_url": "https://github.com/restlet/restlet-framework-java/commit/c3015e4783c2a36e7528aa611c911b7d8c4ec5ba",
        "files": [
          "build/tmpl/text/changes.txt",
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ],
        "message": "Fixed issue #774 - Removed default support of JavaBeans XML-serialization. Reported by David Jorm, Dinis Cruz, Abraham Kang and Alvaro Munoz.",
        "before_after_code_files": [
          "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ],
          "candidate": [
            "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
            "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java||modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java": [
          "File: modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java -> modules/org.restlet/src/org/restlet/engine/converter/DefaultConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     private static final VariantInfo VARIANT_OBJECT_XML = new VariantInfo(",
          "79:             MediaType.APPLICATION_JAVA_OBJECT_XML);",
          "81:     @Override",
          "82:     public List<Class<?>> getObjectClasses(Variant source) {",
          "83:         List<Class<?>> result = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     private static final boolean VARIANT_OBJECT_XML_SUPPORTED = Boolean",
          "83:             .getBoolean(\"org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:             MediaType mediaType = source.getMediaType();",
          "92:             if (MediaType.APPLICATION_JAVA_OBJECT.equals(mediaType)",
          "94:                 result = addObjectClass(result, Object.class);",
          "95:             } else if (MediaType.APPLICATION_WWW_FORM.equals(mediaType)) {",
          "96:                 result = addObjectClass(result, Form.class);",
          "",
          "[Removed Lines]",
          "93:                     || MediaType.APPLICATION_JAVA_OBJECT_XML.equals(mediaType)) {",
          "",
          "[Added Lines]",
          "97:                     || (VARIANT_OBJECT_XML_SUPPORTED && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "98:                             .equals(mediaType))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:                 result = addVariant(result, VARIANT_FORM);",
          "125:             } else if (Serializable.class.isAssignableFrom(source)) {",
          "126:                 result = addVariant(result, VARIANT_OBJECT);",
          "128:             }",
          "129:         }",
          "",
          "[Removed Lines]",
          "127:                 result = addVariant(result, VARIANT_OBJECT_XML);",
          "",
          "[Added Lines]",
          "132:                 if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "133:                     result = addVariant(result, VARIANT_OBJECT_XML);",
          "134:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "161:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
          "162:                         .isCompatible(target.getMediaType())) {",
          "163:                     result = 0.6F;",
          "166:                     result = 1.0F;",
          "169:                     result = 0.6F;",
          "170:                 }",
          "171:             } else {",
          "",
          "[Removed Lines]",
          "164:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
          "165:                         .getMediaType())) {",
          "167:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
          "168:                         .isCompatible(target.getMediaType())) {",
          "",
          "[Added Lines]",
          "171:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "172:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(target",
          "173:                                 .getMediaType())) {",
          "175:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "176:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "177:                                 .isCompatible(target.getMediaType())) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "217:                 } else if (MediaType.APPLICATION_JAVA_OBJECT",
          "218:                         .isCompatible(source.getMediaType())) {",
          "219:                     result = 0.6F;",
          "222:                     result = 1.0F;",
          "225:                     result = 0.6F;",
          "226:                 } else {",
          "227:                     result = 0.5F;",
          "",
          "[Removed Lines]",
          "220:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
          "221:                         .getMediaType())) {",
          "223:                 } else if (MediaType.APPLICATION_JAVA_OBJECT_XML",
          "224:                         .isCompatible(source.getMediaType())) {",
          "",
          "[Added Lines]",
          "229:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "230:                         && MediaType.APPLICATION_JAVA_OBJECT_XML.equals(source",
          "231:                                 .getMediaType())) {",
          "233:                 } else if (VARIANT_OBJECT_XML_SUPPORTED",
          "234:                         && MediaType.APPLICATION_JAVA_OBJECT_XML",
          "235:                                 .isCompatible(source.getMediaType())) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "332:         } else if (Serializable.class.isAssignableFrom(entity)) {",
          "333:             updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT,",
          "334:                     1.0F);",
          "337:         } else if (String.class.isAssignableFrom(entity)",
          "338:                 || Reader.class.isAssignableFrom(entity)) {",
          "339:             updatePreferences(preferences, MediaType.TEXT_PLAIN, 1.0F);",
          "",
          "[Removed Lines]",
          "335:             updatePreferences(preferences,",
          "336:                     MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
          "",
          "[Added Lines]",
          "346:             if (VARIANT_OBJECT_XML_SUPPORTED) {",
          "347:                 updatePreferences(preferences,",
          "348:                         MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F);",
          "349:             }",
          "",
          "---------------"
        ],
        "modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java||modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java": [
          "File: modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java -> modules/org.restlet/src/org/restlet/representation/ObjectRepresentation.java"
        ]
      }
    }
  ]
}