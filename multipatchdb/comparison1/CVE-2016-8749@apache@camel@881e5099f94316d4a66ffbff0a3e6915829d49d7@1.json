{
  "cve_id": "CVE-2016-8749",
  "cve_desc": "Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.",
  "repo": "apache/camel",
  "patch_hash": "881e5099f94316d4a66ffbff0a3e6915829d49d7",
  "patch_info": {
    "commit_hash": "881e5099f94316d4a66ffbff0a3e6915829d49d7",
    "repo": "apache/camel",
    "commit_url": "https://github.com/apache/camel/commit/881e5099f94316d4a66ffbff0a3e6915829d49d7",
    "files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "components/camel-jacksonxml/src/main/docs/jacksonxml-dataformat.adoc",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ],
    "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
    "before_after_code_files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ]
  },
  "patch_diff": {
    "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
      "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     @XmlAttribute",
      "70:     private String disableFeatures;",
      "72:     public JacksonXMLDataFormat() {",
      "73:         super(\"jacksonxml\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     @XmlAttribute",
      "72:     private Boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "256:     public void setDisableFeatures(String disableFeatures) {",
      "257:         this.disableFeatures = disableFeatures;",
      "258:     }",
      "260:     @Override",
      "261:     public String getDataFormatName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "262:     public Boolean getAllowUnmarshallType() {",
      "263:         return allowUnmarshallType;",
      "264:     }",
      "271:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
      "272:         this.allowUnmarshallType = allowUnmarshallType;",
      "273:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "326:         if (disableFeatures != null) {",
      "327:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
      "328:         }",
      "329:     }",
      "331: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "344:         if (allowUnmarshallType != null) {",
      "345:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
      "346:         }",
      "",
      "---------------"
    ],
    "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java": [
      "File: components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java -> components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:     private String disableFeatures;",
      "105:     public String getXmlMapper() {",
      "106:         return xmlMapper;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "109:     private Boolean allowUnmarshallType = false;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "205:     public void setDisableFeatures(String disableFeatures) {",
      "206:         this.disableFeatures = disableFeatures;",
      "207:     }",
      "208: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "215:     public Boolean getAllowUnmarshallType() {",
      "216:         return allowUnmarshallType;",
      "217:     }",
      "219:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
      "220:         this.allowUnmarshallType = allowUnmarshallType;",
      "221:     }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
      "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     private String disableFeatures;",
      "70:     private boolean enableJacksonTypeConverter;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     private boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:         Class<?> clazz = unmarshalType;",
      "162:         if (type == null && isAllowJmsType()) {",
      "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
      "164:         }",
      "",
      "[Removed Lines]",
      "161:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "",
      "[Added Lines]",
      "162:         String type = null;",
      "163:         if (allowUnmarshallType) {",
      "164:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "165:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
      "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
      "328:     }",
      "330:     public String getEnableFeatures() {",
      "331:         return enableFeatures;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "334:     public boolean isAllowUnmarshallType() {",
      "335:         return allowUnmarshallType;",
      "336:     }",
      "343:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
      "344:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
      "345:     }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.camel.component.jacksonxml;",
      "19: import java.util.LinkedHashMap;",
      "21: import org.apache.camel.builder.RouteBuilder;",
      "22: import org.apache.camel.component.mock.MockEndpoint;",
      "23: import org.apache.camel.test.junit4.CamelTestSupport;",
      "24: import org.junit.Test;",
      "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
      "28:     @Test",
      "29:     public void testUnmarshalPojo() throws Exception {",
      "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
      "31:         mock.expectedMessageCount(1);",
      "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
      "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
      "36:         assertMockEndpointsSatisfied();",
      "37:     }",
      "39:     @Override",
      "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
      "41:         return new RouteBuilder() {",
      "43:             @Override",
      "44:             public void configure() throws Exception {",
      "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "49:             }",
      "50:         };",
      "51:     }",
      "53: }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             @Override",
      "47:             public void configure() throws Exception {",
      "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:                 format.setAllowUnmarshallType(true);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6c2db21d128cde8e3cdb8617b2b81c9f07baa11b",
      "candidate_info": {
        "commit_hash": "6c2db21d128cde8e3cdb8617b2b81c9f07baa11b",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/6c2db21d128cde8e3cdb8617b2b81c9f07baa11b",
        "files": [
          "components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java",
          "components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java",
          "components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java",
          "components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java",
          "components/camel-gson/src/main/docs/json-gson-dataformat.adoc",
          "components/camel-jackson/src/main/docs/json-jackson-dataformat.adoc",
          "components/camel-johnzon/src/main/docs/json-johnzon-dataformat.adoc",
          "components/camel-xstream/src/main/docs/json-xstream-dataformat.adoc"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use. Regenerated code",
        "before_after_code_files": [
          "components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java||components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java",
          "components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java||components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java",
          "components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java||components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java",
          "components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java||components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java||components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java": [
          "File: components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java -> components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:     private String permissions;",
          "126:     public String getObjectMapper() {",
          "127:         return objectMapper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     private Boolean allowUnmarshallType = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:     public void setPermissions(String permissions) {",
          "243:         this.permissions = permissions;",
          "244:     }",
          "245: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     public Boolean getAllowUnmarshallType() {",
          "253:         return allowUnmarshallType;",
          "254:     }",
          "256:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "257:         this.allowUnmarshallType = allowUnmarshallType;",
          "258:     }",
          "",
          "---------------"
        ],
        "components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java||components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java": [
          "File: components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java -> components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:     private String permissions;",
          "126:     public String getObjectMapper() {",
          "127:         return objectMapper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     private Boolean allowUnmarshallType = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:     public void setPermissions(String permissions) {",
          "243:         this.permissions = permissions;",
          "244:     }",
          "245: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     public Boolean getAllowUnmarshallType() {",
          "253:         return allowUnmarshallType;",
          "254:     }",
          "256:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "257:         this.allowUnmarshallType = allowUnmarshallType;",
          "258:     }",
          "",
          "---------------"
        ],
        "components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java||components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java": [
          "File: components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java -> components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:     private String permissions;",
          "126:     public String getObjectMapper() {",
          "127:         return objectMapper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     private Boolean allowUnmarshallType = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:     public void setPermissions(String permissions) {",
          "243:         this.permissions = permissions;",
          "244:     }",
          "245: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     public Boolean getAllowUnmarshallType() {",
          "253:         return allowUnmarshallType;",
          "254:     }",
          "256:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "257:         this.allowUnmarshallType = allowUnmarshallType;",
          "258:     }",
          "",
          "---------------"
        ],
        "components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java||components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java": [
          "File: components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java -> components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:     private String permissions;",
          "126:     public String getObjectMapper() {",
          "127:         return objectMapper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     private Boolean allowUnmarshallType = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:     public void setPermissions(String permissions) {",
          "243:         this.permissions = permissions;",
          "244:     }",
          "245: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     public Boolean getAllowUnmarshallType() {",
          "253:         return allowUnmarshallType;",
          "254:     }",
          "256:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "257:         this.allowUnmarshallType = allowUnmarshallType;",
          "258:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}