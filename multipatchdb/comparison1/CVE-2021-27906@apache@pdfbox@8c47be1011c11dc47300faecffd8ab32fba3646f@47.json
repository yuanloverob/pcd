{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "795ff45a0b57d6d7febc11bd6622ad930745dca6",
      "candidate_info": {
        "commit_hash": "795ff45a0b57d6d7febc11bd6622ad930745dca6",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/795ff45a0b57d6d7febc11bd6622ad930745dca6",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ],
        "message": "PDFBOX-5190: don't create COSName instance for an empty string\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889670 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "628:     public static COSName getPDFName(String aName)",
          "629:     {",
          "630:         COSName name = null;",
          "632:         {",
          "634:             name = commonNameMap.get(aName);",
          "",
          "[Removed Lines]",
          "631:         if (aName != null)",
          "",
          "[Added Lines]",
          "631:         if (aName != null && !aName.isEmpty())",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:     private boolean parseCOSDictionaryNameValuePair(COSDictionary obj) throws IOException",
          "286:     {",
          "287:         COSName key = parseCOSName();",
          "288:         COSBase value = parseCOSDictionaryValue();",
          "289:         skipSpaces();",
          "290:         if (((char) seqSource.peek()) == 'd')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:         if (key == null)",
          "289:         {",
          "290:             LOG.warn(\"Empty COSName at offset \" + seqSource.getPosition());",
          "291:             return false;",
          "292:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca6c1749cd833300556b2f7e7af0bba15df506cd",
      "candidate_info": {
        "commit_hash": "ca6c1749cd833300556b2f7e7af0bba15df506cd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ca6c1749cd833300556b2f7e7af0bba15df506cd",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4892: correct comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882211 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     public void setAnnotationFilter(AnnotationFilter annotationFilter)",
          "214:     {",
          "215:         this.annotationFilter = annotationFilter;",
          "",
          "[Removed Lines]",
          "216:     }",
          "",
          "[Added Lines]",
          "216:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f93f19d4e7dc6cb4bb68ccbebba71c5980354306",
      "candidate_info": {
        "commit_hash": "f93f19d4e7dc6cb4bb68ccbebba71c5980354306",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f93f19d4e7dc6cb4bb68ccbebba71c5980354306",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java"
        ],
        "message": "PDFBOX-5228: check length\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891088 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:             this.ulCodePageRange1 = ulCodePageRange1;",
          "89:             this.ulCodePageRange2 = ulCodePageRange2;",
          "90:             this.macStyle = macStyle;",
          "92:                     new PDPanoseClassification(panose) : null;",
          "93:             this.parent = parent;",
          "94:         }",
          "",
          "[Removed Lines]",
          "91:             this.panose = panose != null && panose.length >= PDPanose.LENGTH ?",
          "",
          "[Added Lines]",
          "91:             this.panose = panose != null && panose.length >= PDPanoseClassification.LENGTH ?",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: public class PDPanoseClassification",
          "26: {",
          "27:     private final byte[] bytes;",
          "29:     public PDPanoseClassification(byte[] bytes)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:     static public final int LENGTH = 10;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2d60db4d0a504884de1594a9f5e666c3fa0fd6a",
      "candidate_info": {
        "commit_hash": "e2d60db4d0a504884de1594a9f5e666c3fa0fd6a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e2d60db4d0a504884de1594a9f5e666c3fa0fd6a",
        "files": [
          "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java"
        ],
        "message": "PDFBOX-4892: optimize / simplify, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890905 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java||xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java||xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java": [
          "File: xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java -> xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:     public final void setAttribute(Attribute value)",
          "83:     {",
          "89:         attributes.put(value.getName(), value);",
          "90:     }",
          "",
          "[Removed Lines]",
          "84:         if (attributes.containsKey(value.getName()))",
          "85:         {",
          "87:             attributes.remove(value.getName());",
          "88:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:     public final void removeAttribute(String qualifiedName)",
          "133:     {",
          "139:     }",
          "",
          "[Removed Lines]",
          "134:         if (containsAttribute(qualifiedName))",
          "135:         {",
          "136:             attributes.remove(qualifiedName);",
          "137:         }",
          "",
          "[Added Lines]",
          "129:         attributes.remove(qualifiedName);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d7f8990cd20f1c58f9d3e9d797a03cec354539e",
      "candidate_info": {
        "commit_hash": "6d7f8990cd20f1c58f9d3e9d797a03cec354539e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6d7f8990cd20f1c58f9d3e9d797a03cec354539e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java"
        ],
        "message": "PDFBOX-4892: avoid unneeded conversion, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892825 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java||pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java||pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java -> pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:             {",
          "77:                 throw new EOFException(\"Can't read \" + streamData.length + \" bytes\");",
          "78:             }",
          "81:             if (streamData[0] != 0 || (streamData[1] >> 4 != 1 && streamData[1] != 1))",
          "82:             {",
          "",
          "[Removed Lines]",
          "79:             encoded = new PushbackInputStream(encoded, streamData.length);",
          "80:             ((PushbackInputStream) encoded).unread(streamData);",
          "",
          "[Added Lines]",
          "79:             PushbackInputStream pushbackInputStream = new PushbackInputStream(encoded, streamData.length);",
          "80:             pushbackInputStream.unread(streamData);",
          "81:             encoded = pushbackInputStream;",
          "",
          "---------------"
        ]
      }
    }
  ]
}