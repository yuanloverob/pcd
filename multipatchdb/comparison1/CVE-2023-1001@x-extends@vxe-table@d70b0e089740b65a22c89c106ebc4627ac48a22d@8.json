{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d321ae8a6e9d75e0cd074c40a168d325d73d9546",
      "candidate_info": {
        "commit_hash": "d321ae8a6e9d75e0cd074c40a168d325d73d9546",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/d321ae8a6e9d75e0cd074c40a168d325d73d9546",
        "files": [
          "package.json",
          "packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts",
          "packages/table/render/index.ts"
        ],
        "message": "releases 3.9.12",
        "before_after_code_files": [
          "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts",
          "packages/table/render/index.ts||packages/table/render/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts": [
          "File: packages/locale/lang/en-US.ts -> packages/locale/lang/en-US.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: 'Radio',",
          "381:           VxeCheckboxGroup: 'Checkbox',",
          "382:           VxeUploadFile: 'File',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: 'Image'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: 'Image',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts": [
          "File: packages/locale/lang/es-ES.ts -> packages/locale/lang/es-ES.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: 'Radio',",
          "381:           VxeCheckboxGroup: 'Checkbox',",
          "382:           VxeUploadFile: 'File',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: 'Image'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: 'Image',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts": [
          "File: packages/locale/lang/hu-HU.ts -> packages/locale/lang/hu-HU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: 'r\u00e1di\u00f3 gomb',",
          "381:           VxeCheckboxGroup: 'jel\u00f6l\u0151n\u00e9gyzetet',",
          "382:           VxeUploadFile: 'dokumentum',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: 'k\u00e9p'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: 'k\u00e9p',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts": [
          "File: packages/locale/lang/ja-JP.ts -> packages/locale/lang/ja-JP.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: 'Radio',",
          "381:           VxeCheckboxGroup: 'Checkbox',",
          "382:           VxeUploadFile: 'File',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: 'Image'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: 'Image',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts": [
          "File: packages/locale/lang/ko-KR.ts -> packages/locale/lang/ko-KR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u5355\u9009\u6846',",
          "381:           VxeCheckboxGroup: '\u590d\u9009\u6846',",
          "382:           VxeUploadFile: '\u6587\u4ef6',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247',",
          "384:           VxeRate: '\u8bc4\u5206',",
          "385:           VxeSlider: '\u6ed1\u5757'",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts": [
          "File: packages/locale/lang/pt-BR.ts -> packages/locale/lang/pt-BR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: 'Radio',",
          "381:           VxeCheckboxGroup: 'Checkbox',",
          "382:           VxeUploadFile: 'File',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: 'Image'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: 'Image',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts": [
          "File: packages/locale/lang/ru-RU.ts -> packages/locale/lang/ru-RU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044c',",
          "381:           VxeCheckboxGroup: '\u0444\u043b\u0430\u0436\u043e\u043a',",
          "382:           VxeUploadFile: '\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u043a\u0430\u0440\u0442\u0438\u043d\u0430'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u043a\u0430\u0440\u0442\u0438\u043d\u0430',",
          "384:           VxeRate: 'Rate',",
          "385:           VxeSlider: 'Slider'",
          "",
          "---------------"
        ],
        "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts": [
          "File: packages/locale/lang/uk-UA.ts -> packages/locale/lang/uk-UA.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u5355\u9009\u6846',",
          "381:           VxeCheckboxGroup: '\u590d\u9009\u6846',",
          "382:           VxeUploadFile: '\u6587\u4ef6',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247',",
          "384:           VxeRate: '\u8bc4\u5206',",
          "385:           VxeSlider: '\u6ed1\u5757'",
          "",
          "---------------"
        ],
        "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts": [
          "File: packages/locale/lang/vi-VN.ts -> packages/locale/lang/vi-VN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u5355\u9009\u6846',",
          "381:           VxeCheckboxGroup: '\u590d\u9009\u6846',",
          "382:           VxeUploadFile: '\u6587\u4ef6',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247',",
          "384:           VxeRate: '\u8bc4\u5206',",
          "385:           VxeSlider: '\u6ed1\u5757'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts": [
          "File: packages/locale/lang/zh-CHT.ts -> packages/locale/lang/zh-CHT.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u55ae\u9078\u6846',",
          "381:           VxeCheckboxGroup: '\u8907\u9078\u6846',",
          "382:           VxeUploadFile: '\u6587\u4ef6',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u5716\u7247'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u5716\u7247',",
          "384:           VxeRate: '\u8bc4\u5206',",
          "385:           VxeSlider: '\u6ed1\u5757'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts": [
          "File: packages/locale/lang/zh-CN.ts -> packages/locale/lang/zh-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:           VxeRadioGroup: '\u5355\u9009\u6846',",
          "381:           VxeCheckboxGroup: '\u590d\u9009\u6846',",
          "382:           VxeUploadFile: '\u6587\u4ef6',",
          "384:         }",
          "385:       },",
          "386:       widgetProp: {",
          "",
          "[Removed Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247'",
          "",
          "[Added Lines]",
          "383:           VxeUploadImage: '\u56fe\u7247',",
          "384:           VxeRate: '\u8bc4\u5206',",
          "385:           VxeSlider: '\u6ed1\u5757'",
          "",
          "---------------"
        ],
        "packages/table/render/index.ts||packages/table/render/index.ts": [
          "File: packages/table/render/index.ts -> packages/table/render/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "777:   VxeRate: {",
          "778:     renderTableDefault: defaultEditRender",
          "779:   },",
          "782:   $input: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "780:   VxeSlider: {",
          "781:     renderTableDefault: defaultEditRender",
          "782:   },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a54a06cd65bd3c4418f11285fc1cc226dc80d2b9",
      "candidate_info": {
        "commit_hash": "a54a06cd65bd3c4418f11285fc1cc226dc80d2b9",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/a54a06cd65bd3c4418f11285fc1cc226dc80d2b9",
        "files": [
          "package.json",
          "packages/table/src/methods.js",
          "types/table.d.ts"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "types/table.d.ts||types/table.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2729:   getCheckboxIndeterminateRecords (isFull) {",
          "2731:     if (treeConfig) {",
          "2733:     }",
          "2734:     return []",
          "2735:   },",
          "",
          "[Removed Lines]",
          "2730:     const { treeConfig, treeIndeterminates, afterFullData } = this",
          "2732:       return isFull ? treeIndeterminates.slice(0) : treeIndeterminates.filter(row => this.findRowIndexOf(afterFullData, row) > -1)",
          "",
          "[Added Lines]",
          "2730:     const { treeConfig, treeIndeterminates, fullDataRowIdData } = this",
          "2732:       return isFull ? treeIndeterminates.slice(0) : treeIndeterminates.filter(row => {",
          "2733:         const rowid = getRowid(this, row)",
          "2734:         return fullDataRowIdData[rowid]",
          "2735:       })",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4595:   },",
          "4596:   updateCellAreas () {",
          "4597:     if (this.mouseConfig && this.mouseOpts.area && this.handleUpdateCellAreas) {",
          "4599:     }",
          "4600:   },",
          "4601:   emitEvent (type, params, evnt) {",
          "4602:     this.$emit(type, Object.assign({ $table: this, $grid: this.$xegrid, $event: evnt }, params))",
          "",
          "[Removed Lines]",
          "4598:       this.handleUpdateCellAreas()",
          "",
          "[Added Lines]",
          "4601:       return this.handleUpdateCellAreas()",
          "4603:     return this.$nextTick()",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "611:    clearSort(fieldOrColumn?: string | ColumnInfo | null): Promise<any>;",
          "",
          "[Added Lines]",
          "617:   clearSort(fieldOrColumn?: string | ColumnInfo | null): Promise<any>;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1034:   closeFNR(): Promise<any>;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1052:   updateCellAreas(): Promise<void>;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1059: }",
          "1060: export function TableFooterMethod(params: TableFooterMethodParams): Array<string | number | null>[];",
          "1063: export function TableSpanMethod(params: TableSpanMethodParams): { rowspan: number, colspan: number }",
          "1066: export function TableFooterSpanMethod(params: TableFooterSpanMethodParams): { rowspan: number, colspan: number }",
          "1068: export interface TableOptions {",
          "",
          "[Removed Lines]",
          "1062: export interface TableSpanMethodParams extends ColumnCellRenderParams {}",
          "1065: export interface TableFooterSpanMethodParams extends ColumnFooterRenderParams {}",
          "",
          "[Added Lines]",
          "1080: export type TableSpanMethodParams = ColumnCellRenderParams",
          "1083: export type TableFooterSpanMethodParams = ColumnFooterRenderParams",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1160:   width?: number;",
          "1161:   minWidth?: number;",
          "1162: }",
          "",
          "[Removed Lines]",
          "1163: export interface ColumnDefaultConfig extends TableColumnConfig {}",
          "",
          "[Added Lines]",
          "1181: export type ColumnDefaultConfig = TableColumnConfig",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1172:   };",
          "1173:   checkMethod?(params: { column: ColumnInfo }): boolean;",
          "1174: }",
          "",
          "[Removed Lines]",
          "1175: export interface CustomConfig extends TableCustomConfig {}",
          "",
          "[Added Lines]",
          "1193: export type CustomConfig = TableCustomConfig",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1181:   startIndex?: number;",
          "1182:   seqMethod?(params: ColumnCellRenderParams): number;",
          "1183: }",
          "1186: export interface TableSortConfs {",
          "1187:   field: string;",
          "",
          "[Removed Lines]",
          "1184: export interface SeqConfig extends TableSeqConfig {}",
          "",
          "[Added Lines]",
          "1202: export type SeqConfig = TableSeqConfig",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1206:   iconAsc?: string;",
          "1207:   iconDesc?: string;",
          "1208: }",
          "",
          "[Removed Lines]",
          "1209: export interface SortConfig extends TableSortConfig {}",
          "",
          "[Added Lines]",
          "1227: export type SortConfig = TableSortConfig",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1217:   iconNone?: string;",
          "1218:   iconMatch?: string;",
          "1219: }",
          "",
          "[Removed Lines]",
          "1220: export interface FilterConfig extends TableFilterConfig {}",
          "",
          "[Added Lines]",
          "1238: export type FilterConfig = TableFilterConfig",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1230:   trigger?: 'default' | 'cell' | 'row';",
          "1231:   highlight?: boolean;",
          "1232: }",
          "",
          "[Removed Lines]",
          "1233: export interface RadioConfig extends TableRadioConfig {}",
          "",
          "[Added Lines]",
          "1251: export type RadioConfig = TableRadioConfig",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1250:   highlight?: boolean;",
          "1251:   range?: boolean;",
          "1252: }",
          "",
          "[Removed Lines]",
          "1253: export interface CheckboxConfig extends TableCheckboxConfig {}",
          "",
          "[Added Lines]",
          "1271: export type CheckboxConfig = TableCheckboxConfig",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1262:   leaveDelay?: number;",
          "1263:   contentMethod?(params: { items: any[], row: RowInfo, rowIndex: number, $rowIndex: number, column: ColumnInfo, columnIndex: number, $columnIndex: number, type: 'header' | 'body' | 'footer', cell: HTMLElement, $event: any }): string | null | void;",
          "1264: }",
          "",
          "[Removed Lines]",
          "1265: export interface TooltipConfig extends TableTooltipConfig {}",
          "",
          "[Added Lines]",
          "1283: export type TooltipConfig = TableTooltipConfig",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1283:   iconClose?: string;",
          "1284:   iconLoaded?: string;",
          "1285: }",
          "",
          "[Removed Lines]",
          "1286: export interface ExpandConfig extends TableExpandConfig {}",
          "",
          "[Added Lines]",
          "1304: export type ExpandConfig = TableExpandConfig",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1305:   iconClose?: string;",
          "1306:   iconLoaded?: string;",
          "1307: }",
          "1310: export interface TreeOpts {",
          "1311:   children: string;",
          "",
          "[Removed Lines]",
          "1308: export interface TreeConfig extends TableTreeConfig {}",
          "",
          "[Added Lines]",
          "1326: export type TreeConfig = TableTreeConfig",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1336:   visibleMethod?(params: { type: string, options: MenuFirstOption[], columns: ColumnInfo[], row?: RowInfo, rowIndex?: number, column?: ColumnInfo, columnIndex?: number }): boolean;",
          "1337:   className?: string;",
          "1338: }",
          "",
          "[Removed Lines]",
          "1339: export interface TableContextMenu extends TableMenuConfig {}",
          "1340: export interface ContextMenuConfig extends TableContextMenu {}",
          "",
          "[Added Lines]",
          "1357: export type TableContextMenu = TableMenuConfig",
          "1358: export type ContextMenuConfig = TableContextMenu",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1350:   area?: boolean;",
          "1351: }",
          "1354: export interface MouseCellArea {",
          "1355:   main: boolean;",
          "",
          "[Removed Lines]",
          "1352: export interface MouseConfig extends TableMouseConfig {}",
          "",
          "[Added Lines]",
          "1370: export type MouseConfig = TableMouseConfig",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1377:   rowspan: number;",
          "1378:   colspan: number;",
          "1379: }",
          "1382: export interface MergeItem {",
          "1383:   row: number;",
          "",
          "[Removed Lines]",
          "1380: export interface MergeOptions extends TableMergeConfig {}",
          "",
          "[Added Lines]",
          "1398: export type MergeOptions = TableMergeConfig",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1405:   isEnter?: boolean;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1427:   isShift?: boolean",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1429:   editMethod?(params: { row: RowInfo, rowIndex: number, column: ColumnInfo, columnIndex: number, cell: HTMLElement }): boolean;",
          "1430: }",
          "",
          "[Removed Lines]",
          "1431: export interface KeyboardConfig extends TableKeyboardConfig {}",
          "",
          "[Added Lines]",
          "1453: export type KeyboardConfig = TableKeyboardConfig",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1473:   activeMethod?(params: { row: RowInfo, rowIndex: number, column: ColumnInfo, columnIndex: number }): boolean;",
          "1474: }",
          "",
          "[Removed Lines]",
          "1475: export interface EditConfig extends TableEditConfig {}",
          "",
          "[Added Lines]",
          "1497: export type EditConfig = TableEditConfig",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1482:   message?: string;",
          "1483:   maxWidth?: number;",
          "1484: }",
          "",
          "[Removed Lines]",
          "1485: export interface ValidConfig extends TableValidConfig {}",
          "",
          "[Added Lines]",
          "1507: export type ValidConfig = TableValidConfig",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1490: export interface EditVaildRules {",
          "1491:   [field: string]: ColumnEditRule[];",
          "1492: }",
          "",
          "[Removed Lines]",
          "1493: export interface VaildRules extends EditVaildRules {}",
          "",
          "[Added Lines]",
          "1515: export type VaildRules = EditVaildRules",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df51f7c8f83e64e4ea294ed8972eeb5632e382e2",
      "candidate_info": {
        "commit_hash": "df51f7c8f83e64e4ea294ed8972eeb5632e382e2",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/df51f7c8f83e64e4ea294ed8972eeb5632e382e2",
        "files": [
          "package.json",
          "packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts",
          "packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts",
          "packages/table/module/export/mixin.ts",
          "packages/table/src/methods.ts",
          "styles/components/table-module/export.scss"
        ],
        "message": "releases 3.10.0",
        "before_after_code_files": [
          "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts",
          "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts",
          "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "styles/components/table-module/export.scss||styles/components/table-module/export.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts": [
          "File: packages/locale/lang/en-US.ts -> packages/locale/lang/en-US.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: 'The checkbox may stall when the amount of data is too large, it is recommended to set the parameter \"{0}\" to increase the rendering speed ',",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error.',",
          "39:       uniField: 'The field \"{0}\" is repeatedly defined, which may cause an error.',",
          "40:       delFunc: 'The function \"{0}\" is deprecated, please use \"{1}\".',",
          "41:       delProp: 'The property \"{0}\" is deprecated, please use \"{1}\".',",
          "42:       delEvent: 'The event \"{0}\" is deprecated, please use \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: 'The primary key repeats {0}=\"{1}\", which may cause an error',",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts": [
          "File: packages/locale/lang/es-ES.ts -> packages/locale/lang/es-ES.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: 'La casilla de verificaci\u00f3n puede detenerse cuando la cantidad de datos es demasiado grande, se recomienda establecer el par\u00e1metro \"{0}\" para aumentar la velocidad de representaci\u00f3n',",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error.',",
          "39:       uniField: 'The field \"{0}\" is repeatedly defined, which may cause an error.',",
          "40:       delFunc: 'La funci\u00f3n \"{0}\" est\u00e1 en desuso, por favor use \"{1}\".',",
          "41:       delProp: 'La propiedad \"{0}\" est\u00e1 en desuso, por favor use \"{1}\".',",
          "42:       delEvent: 'El evento \"{0}\" est\u00e1 en desuso, por favor use \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: 'The primary key repeats {0}=\"{1}\", which may cause an error',",
          "",
          "---------------"
        ],
        "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts": [
          "File: packages/locale/lang/hu-HU.ts -> packages/locale/lang/hu-HU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: 'Ha az adatmennyis\u00e9g t\u00fal nagy, a jel\u00f6l\u0151n\u00e9gyzet lefagyhat. Javasoljuk, hogy a \"{0}\" param\u00e9tert \u00e1ll\u00edtsa be a megjelen\u00edt\u00e9si sebess\u00e9g jav\u00edt\u00e1sa \u00e9rdek\u00e9ben.',",
          "38:       coverProp: 'A(z) \"{0}\" \"{1}\" param\u00e9tere ism\u00e9telten defini\u00e1lva van, ami hib\u00e1t okozhat.',",
          "39:       uniField: 'A(z) \"{0}\" mez\u0151n\u00e9v t\u00f6bbsz\u00f6r is meghat\u00e1roz\u00e1sra ker\u00fcl, ami hib\u00e1t okozhat',",
          "40:       delFunc: 'A(z) \"{0}\" m\u00f3dszer elavult, k\u00e9rj\u00fck, haszn\u00e1lja a \"{1}\"',",
          "41:       delProp: 'A \"{0}\" param\u00e9ter elavult, k\u00e9rj\u00fck, haszn\u00e1lja a \"{1}\" param\u00e9tert',",
          "42:       delEvent: 'A(z) \"{0}\" esem\u00e9ny elavult, k\u00e9rj\u00fck, haszn\u00e1lja a \"{1}\" esem\u00e9nyt',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts": [
          "File: packages/locale/lang/ja-JP.ts -> packages/locale/lang/ja-JP.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: '\u30d1\u30d5\u30de\u30f3\u30b9\u4f4e\u4e0b\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf \"{0}\" \u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044',",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: '\"{0}\" function\u304c\u975e\u63a8\u5968\u3067\u3059\u3002\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "41:       delProp: '\"{0}\" property\u304c\u975e\u63a8\u5968\u3067\u3059\u3002\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "42:       delEvent: '\u30a4\u30d9\u30f3\u30c8 \"{0}\" \u304c\u5ec3\u6b62\u3055\u308c\u307e\u3057\u305f\u3002 \"{1}\" \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts": [
          "File: packages/locale/lang/ko-KR.ts -> packages/locale/lang/ko-KR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "38:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "41:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "42:       delEvent: '\u4e8b\u4ef6 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts": [
          "File: packages/locale/lang/pt-BR.ts -> packages/locale/lang/pt-BR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: 'A caixa de sele\u00e7\u00e3o pode travar quando a quantidade de dados \u00e9 muito grande, \u00e9 recomendado definir o par\u00e2metro \"{0}\" para aumentar a velocidade de renderiza\u00e7\u00e3o ',",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: 'A fun\u00e7\u00e3o \"{0}\" est\u00e1 obsoleta, por favor, use \"{1}\".',",
          "41:       delProp: 'A propriedade \"{0}\" est\u00e1 obsoleta, por favor, use \"{1}\".',",
          "42:       delEvent: 'O evento \"{0}\" est\u00e1 obsoleto, por favor, use \"{1}\".',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts": [
          "File: packages/locale/lang/ru-RU.ts -> packages/locale/lang/ru-RU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: '\u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a, \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0437\u0430\u0432\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u043b\u0430\u0436\u043a\u0430. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u00ab{0}\u00bb, \u0447\u0442\u043e\u0431\u044b \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433\u0430.',",
          "38:       coverProp: '\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \"{1}\" \u0438\u0437 \"{0}\" \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443.',",
          "39:       uniField: '\u0418\u043c\u044f \u043f\u043e\u043b\u044f \"{0}\" \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443.',",
          "40:       delFunc: '\u041c\u0435\u0442\u043e\u0434 \"{0}\" \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \"{1}\"',",
          "41:       delProp: '\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \"{0}\" \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \"{1}\"',",
          "42:       delEvent: '\u0421\u043e\u0431\u044b\u0442\u0438\u0435 \"{0}\" \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u043e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts": [
          "File: packages/locale/lang/uk-UA.ts -> packages/locale/lang/uk-UA.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:       notProp: '\u4e0d\u652f\u6301\u7684\u53c2\u6570 \"{0}\"',",
          "37:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "38:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "41:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts": [
          "File: packages/locale/lang/vi-VN.ts -> packages/locale/lang/vi-VN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:       notProp: '\u4e0d\u652f\u6301\u7684\u53c2\u6570 \"{0}\"',",
          "37:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "38:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "41:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts": [
          "File: packages/locale/lang/zh-CHT.ts -> packages/locale/lang/zh-CHT.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: '\u7576\u8cc7\u6599\u91cf\u904e\u5927\u6642\u53ef\u80fd\u6703\u5c0e\u81f4\u8907\u9078\u6846\u5361\u9813\uff0c\u5efa\u8b70\u8a2d\u5b9a\u53c3\u6578 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "38:       coverProp: '\"{0}\" \u7684\u53c3\u6578 \"{1}\" \u91cd\u8907\u5b9a\u7fa9\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "39:       uniField: '\u6b04\u4f4d\u540d\u7a31 \"{0}\" \u91cd\u8907\u5b9a\u7fa9\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "40:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5ee2\u68c4\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "41:       delProp: '\u53c3\u6578 \"{0}\" \u5df2\u5ee2\u68c4\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "42:       delEvent: '\u4e8b\u4ef6 \"{0}\" \u5df2\u5ee2\u68c4\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts": [
          "File: packages/locale/lang/zh-CN.ts -> packages/locale/lang/zh-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "38:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "40:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "41:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "42:       delEvent: '\u4e8b\u4ef6 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:       repeatKey: '\u4e3b\u952e\u91cd\u590d {0}=\"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------"
        ],
        "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts": [
          "File: packages/table/module/export/export-panel.ts -> packages/table/module/export/export-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import type { VxeModalComponent, VxeInputComponent, VxeCheckboxComponent, VxeSelectComponent, VxeButtonComponent } from 'vxe-pc-ui'",
          "11: export default {",
          "12:   name: 'VxeTableExportPanel',",
          "",
          "[Removed Lines]",
          "9: const { getI18n, getIcon, globalMixins } = VxeUI",
          "",
          "[Added Lines]",
          "9: const { getI18n, getIcon, globalMixins, renderEmptyElement } = VxeUI",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   },",
          "27:   data () {",
          "28:     return {",
          "29:       isAll: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   inject: {",
          "28:     $xeTable: {",
          "29:       default: null",
          "30:     }",
          "31:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:     }",
          "78:   },",
          "79:   render (this: any, h: CreateElement) {",
          "80:     const { _e, checkedAll, isAll: isAllChecked, isIndeterminate: isAllIndeterminate, showSheet, supportMerge, supportStyle, defaultOptions, storeData } = this",
          "82:     const { isHeader } = defaultOptions",
          "83:     const cols: any[] = []",
          "85:       const colTitle = formatText(column.getTitle(), 1)",
          "86:       const isColGroup = column.children && column.children.length",
          "87:       const isChecked = column.checked",
          "",
          "[Removed Lines]",
          "81:     const { hasTree, hasMerge, isPrint, hasColgroup } = storeData",
          "84:     XEUtils.eachTree(storeData.columns, column => {",
          "",
          "[Added Lines]",
          "85:     const $xeTable = this.$xeTable",
          "87:     const exportOpts = $xeTable.exportOpts",
          "89:     const { hasTree, hasMerge, isPrint, hasColgroup, columns } = storeData",
          "91:     const slots = exportOpts.slots || {}",
          "92:     const topSlot = slots.top",
          "93:     const bottomSlot = slots.bottom",
          "94:     const defaultSlot = slots.default",
          "95:     const footerSlot = slots.footer",
          "96:     const parameterSlot = slots.parameter",
          "98:     XEUtils.eachTree(columns, column => {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "89:       const isHtml = column.type === 'html'",
          "90:       cols.push(",
          "91:         h('li', {",
          "93:             'is--group': isColGroup,",
          "94:             'is--checked': isChecked,",
          "95:             'is--indeterminate': indeterminate,",
          "",
          "[Removed Lines]",
          "92:           class: ['vxe-export--panel-column-option', `level--${column.level}`, {",
          "",
          "[Added Lines]",
          "106:           class: ['vxe-table-export--panel-column-option', `level--${column.level}`, {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127:     return h('vxe-modal', {",
          "128:       ref: 'modal',",
          "129:       props: {",
          "130:         value: storeData.visible,",
          "131:         title: getI18n(isPrint ? 'vxe.export.printTitle' : 'vxe.export.expTitle'),",
          "132:         width: 660,",
          "133:         mask: true,",
          "134:         lockView: true,",
          "136:         escClosable: true,",
          "137:         maskClosable: true,",
          "138:         loading: this.loading",
          "139:       },",
          "140:       on: {",
          "",
          "[Removed Lines]",
          "135:         showFooter: false,",
          "",
          "[Added Lines]",
          "144:         id: 'VXE_EXPORT_MODAL',",
          "148:         minWidth: 500,",
          "149:         minHeight: 400,",
          "152:         showFooter: true,",
          "155:         showMaximize: true,",
          "156:         resize: true,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "142:           storeData.visible = value",
          "143:         },",
          "144:         show: this.showEvent",
          "155:           }",
          "196:                   ])",
          "197:                 ]),",
          "223:                     props: {",
          "226:                     },",
          "227:                     on: {",
          "231:                     }",
          "232:                   })",
          "233:                 ])",
          "373:               ])",
          "401:   },",
          "402:   methods: {",
          "403:     changeOption (column: any) {",
          "",
          "[Removed Lines]",
          "145:       }",
          "146:     }, [",
          "147:       h('div', {",
          "148:         class: 'vxe-export--panel'",
          "149:       }, [",
          "150:         h('table', {",
          "151:           attrs: {",
          "152:             cellspacing: 0,",
          "153:             cellpadding: 0,",
          "154:             border: 0",
          "156:         }, [",
          "157:           h('tbody', [",
          "158:             [",
          "159:               isPrint",
          "160:                 ? _e()",
          "161:                 : h('tr', [",
          "162:                   h('td', getI18n('vxe.export.expName')),",
          "163:                   h('td', [",
          "164:                     h('vxe-input', {",
          "165:                       ref: 'filename',",
          "166:                       props: {",
          "167:                         value: defaultOptions.filename,",
          "168:                         type: 'text',",
          "169:                         clearable: true,",
          "170:                         placeholder: getI18n('vxe.export.expNamePlaceholder')",
          "171:                       },",
          "172:                       on: {",
          "173:                         modelValue (value: any) {",
          "174:                           defaultOptions.filename = value",
          "175:                         }",
          "176:                       }",
          "177:                     })",
          "178:                   ])",
          "179:                 ]),",
          "180:               isPrint",
          "181:                 ? _e()",
          "182:                 : h('tr', [",
          "183:                   h('td', getI18n('vxe.export.expType')),",
          "184:                   h('td', [",
          "185:                     h('vxe-select', {",
          "186:                       props: {",
          "187:                         value: defaultOptions.type,",
          "188:                         options: storeData.typeList",
          "189:                       },",
          "190:                       on: {",
          "191:                         input (value: any) {",
          "192:                           defaultOptions.type = value",
          "193:                         }",
          "194:                       }",
          "195:                     })",
          "198:               isPrint || showSheet",
          "199:                 ? h('tr', [",
          "200:                   h('td', getI18n('vxe.export.expSheetName')),",
          "201:                   h('td', [",
          "202:                     h('vxe-input', {",
          "203:                       ref: 'sheetname',",
          "204:                       props: {",
          "205:                         value: defaultOptions.sheetName,",
          "206:                         type: 'text',",
          "207:                         clearable: true,",
          "208:                         placeholder: getI18n('vxe.export.expSheetNamePlaceholder')",
          "209:                       },",
          "210:                       on: {",
          "211:                         modelValue (value: any) {",
          "212:                           defaultOptions.sheetName = value",
          "213:                         }",
          "214:                       }",
          "215:                     })",
          "216:                   ])",
          "217:                 ])",
          "218:                 : _e(),",
          "219:               h('tr', [",
          "220:                 h('td', getI18n('vxe.export.expMode')),",
          "221:                 h('td', [",
          "222:                   h('vxe-select', {",
          "224:                       value: defaultOptions.mode,",
          "225:                       options: storeData.modeList",
          "228:                       input (value: any) {",
          "229:                         defaultOptions.mode = value",
          "230:                       }",
          "234:               ]),",
          "235:               h('tr', [",
          "236:                 h('td', [getI18n('vxe.export.expColumn')]),",
          "237:                 h('td', [",
          "238:                   h('div', {",
          "239:                     class: 'vxe-export--panel-column'",
          "240:                   }, [",
          "241:                     h('ul', {",
          "242:                       class: 'vxe-export--panel-column-header'",
          "243:                     }, [",
          "244:                       h('li', {",
          "245:                         class: ['vxe-export--panel-column-option', {",
          "246:                           'is--checked': isAllChecked,",
          "247:                           'is--indeterminate': isAllIndeterminate",
          "248:                         }],",
          "249:                         attrs: {",
          "250:                           title: getI18n('vxe.table.allTitle')",
          "251:                         },",
          "252:                         on: {",
          "253:                           click: this.allColumnEvent",
          "254:                         }",
          "255:                       }, [",
          "256:                         h('span', {",
          "257:                           class: ['vxe-checkbox--icon', isAllIndeterminate ? getIcon().TABLE_CHECKBOX_INDETERMINATE : (isAllChecked ? getIcon().TABLE_CHECKBOX_CHECKED : getIcon().TABLE_CHECKBOX_UNCHECKED)]",
          "258:                         }),",
          "259:                         h('span', {",
          "260:                           class: 'vxe-checkbox--label'",
          "261:                         }, getI18n('vxe.export.expCurrentColumn'))",
          "262:                       ])",
          "263:                     ]),",
          "264:                     h('ul', {",
          "265:                       class: 'vxe-export--panel-column-body'",
          "266:                     }, cols)",
          "267:                   ])",
          "268:                 ])",
          "269:               ]),",
          "270:               h('tr', [",
          "271:                 h('td', getI18n('vxe.export.expOpts')),",
          "272:                 h('td', [",
          "273:                   h('div', {",
          "274:                     class: 'vxe-export--panel-option-row'",
          "275:                   }, [",
          "276:                     h('vxe-checkbox', {",
          "277:                       props: {",
          "278:                         value: isHeader,",
          "279:                         title: getI18n('vxe.export.expHeaderTitle'),",
          "280:                         content: getI18n('vxe.export.expOptHeader')",
          "281:                       },",
          "282:                       on: {",
          "283:                         input (value: any) {",
          "284:                           defaultOptions.isHeader = value",
          "285:                         }",
          "286:                       }",
          "287:                     }),",
          "288:                     h('vxe-checkbox', {",
          "289:                       props: {",
          "290:                         value: defaultOptions.isFooter,",
          "291:                         disabled: !storeData.hasFooter,",
          "292:                         title: getI18n('vxe.export.expFooterTitle'),",
          "293:                         content: getI18n('vxe.export.expOptFooter')",
          "294:                       },",
          "295:                       on: {",
          "296:                         input (value: any) {",
          "297:                           defaultOptions.isFooter = value",
          "298:                         }",
          "299:                       }",
          "300:                     }),",
          "301:                     h('vxe-checkbox', {",
          "302:                       props: {",
          "303:                         value: defaultOptions.original,",
          "304:                         title: getI18n('vxe.export.expOriginalTitle'),",
          "305:                         content: getI18n('vxe.export.expOptOriginal')",
          "306:                       },",
          "307:                       on: {",
          "308:                         input (value: any) {",
          "309:                           defaultOptions.original = value",
          "310:                         }",
          "311:                       }",
          "312:                     })",
          "313:                   ]),",
          "314:                   h('div', {",
          "315:                     class: 'vxe-export--panel-option-row'",
          "316:                   }, [",
          "317:                     h('vxe-checkbox', {",
          "318:                       props: {",
          "319:                         value: isHeader && hasColgroup && supportMerge ? defaultOptions.isColgroup : false,",
          "320:                         disabled: !isHeader || !hasColgroup || !supportMerge,",
          "321:                         title: getI18n('vxe.export.expColgroupTitle'),",
          "322:                         content: getI18n('vxe.export.expOptColgroup')",
          "323:                       },",
          "324:                       on: {",
          "325:                         input (value: any) {",
          "326:                           defaultOptions.isColgroup = value",
          "327:                         }",
          "328:                       }",
          "329:                     }),",
          "330:                     h('vxe-checkbox', {",
          "331:                       props: {",
          "332:                         value: hasMerge && supportMerge && checkedAll ? defaultOptions.isMerge : false,",
          "333:                         disabled: !hasMerge || !supportMerge || !checkedAll,",
          "334:                         title: getI18n('vxe.export.expMergeTitle'),",
          "335:                         content: getI18n('vxe.export.expOptMerge')",
          "336:                       },",
          "337:                       on: {",
          "338:                         input (value: any) {",
          "339:                           defaultOptions.isMerge = value",
          "340:                         }",
          "341:                       }",
          "342:                     }),",
          "343:                     isPrint",
          "344:                       ? _e()",
          "345:                       : h('vxe-checkbox', {",
          "346:                         props: {",
          "347:                           value: supportStyle ? defaultOptions.useStyle : false,",
          "348:                           disabled: !supportStyle,",
          "349:                           title: getI18n('vxe.export.expUseStyleTitle'),",
          "350:                           content: getI18n('vxe.export.expOptUseStyle')",
          "351:                         },",
          "352:                         on: {",
          "353:                           input (value: any) {",
          "354:                             defaultOptions.useStyle = value",
          "355:                           }",
          "356:                         }",
          "357:                       }),",
          "358:                     h('vxe-checkbox', {",
          "359:                       props: {",
          "360:                         value: hasTree ? defaultOptions.isAllExpand : false,",
          "361:                         disabled: !hasTree,",
          "362:                         title: getI18n('vxe.export.expAllExpandTitle'),",
          "363:                         content: getI18n('vxe.export.expOptAllExpand')",
          "364:                       },",
          "365:                       on: {",
          "366:                         input (value: any) {",
          "367:                           defaultOptions.isAllExpand = value",
          "368:                         }",
          "369:                       }",
          "370:                     })",
          "371:                   ])",
          "372:                 ])",
          "374:             ]",
          "375:           ])",
          "376:         ]),",
          "377:         h('div', {",
          "378:           class: 'vxe-export--panel-btns'",
          "379:         }, [",
          "380:           h('vxe-button', {",
          "381:             props: {",
          "382:               content: getI18n('vxe.export.expCancel')",
          "383:             },",
          "384:             on: {",
          "385:               click: this.cancelEvent",
          "386:             }",
          "387:           }),",
          "388:           h('vxe-button', {",
          "389:             ref: 'confirmBtn',",
          "390:             props: {",
          "391:               status: 'primary',",
          "392:               content: getI18n(isPrint ? 'vxe.export.expPrint' : 'vxe.export.expConfirm')",
          "393:             },",
          "394:             on: {",
          "395:               click: this.confirmEvent",
          "396:             }",
          "397:           })",
          "398:         ])",
          "399:       ])",
          "400:     ])",
          "",
          "[Added Lines]",
          "164:       },",
          "165:       scopedSlots: {",
          "166:         default: () => {",
          "167:           const params = {",
          "168:             $table: $xeTable,",
          "169:             $grid: $xeTable.xegrid,",
          "170:             options: exportOpts,",
          "171:             columns,",
          "172:             params: exportOpts.params as any",
          "175:           return h('div', {",
          "176:             class: 'vxe-table-export--panel'",
          "177:           }, [",
          "178:             topSlot",
          "179:               ? h('div', {",
          "180:                 class: 'vxe-table-export--panel-top'",
          "181:               }, $xeTable.callSlot(topSlot, params, h))",
          "182:               : renderEmptyElement(this),",
          "183:             h('div', {",
          "184:               class: 'vxe-table-export--panel-body'",
          "185:             }, defaultSlot",
          "186:               ? $xeTable.callSlot(defaultSlot, params, h)",
          "187:               : [",
          "188:                   h('table', {",
          "189:                     attrs: {",
          "190:                       class: 'vxe-table-export--panel-table',",
          "191:                       cellspacing: 0,",
          "192:                       cellpadding: 0,",
          "193:                       border: 0",
          "194:                     }",
          "195:                   }, [",
          "196:                     h('tbody', [",
          "197:                       [",
          "198:                         isPrint",
          "199:                           ? _e()",
          "200:                           : h('tr', [",
          "201:                             h('td', getI18n('vxe.export.expName')),",
          "202:                             h('td', [",
          "203:                               h('vxe-input', {",
          "204:                                 ref: 'filename',",
          "205:                                 props: {",
          "206:                                   value: defaultOptions.filename,",
          "207:                                   type: 'text',",
          "208:                                   clearable: true,",
          "209:                                   placeholder: getI18n('vxe.export.expNamePlaceholder')",
          "210:                                 },",
          "211:                                 on: {",
          "212:                                   modelValue (value: any) {",
          "213:                                     defaultOptions.filename = value",
          "214:                                   }",
          "215:                                 }",
          "216:                               })",
          "217:                             ])",
          "218:                           ]),",
          "219:                         isPrint",
          "220:                           ? _e()",
          "221:                           : h('tr', [",
          "222:                             h('td', getI18n('vxe.export.expType')),",
          "223:                             h('td', [",
          "224:                               h('vxe-select', {",
          "225:                                 props: {",
          "226:                                   value: defaultOptions.type,",
          "227:                                   options: storeData.typeList",
          "228:                                 },",
          "229:                                 on: {",
          "230:                                   input (value: any) {",
          "231:                                     defaultOptions.type = value",
          "232:                                   }",
          "233:                                 }",
          "234:                               })",
          "235:                             ])",
          "236:                           ]),",
          "237:                         isPrint || showSheet",
          "238:                           ? h('tr', [",
          "239:                             h('td', getI18n('vxe.export.expSheetName')),",
          "240:                             h('td', [",
          "241:                               h('vxe-input', {",
          "242:                                 ref: 'sheetname',",
          "243:                                 props: {",
          "244:                                   value: defaultOptions.sheetName,",
          "245:                                   type: 'text',",
          "246:                                   clearable: true,",
          "247:                                   placeholder: getI18n('vxe.export.expSheetNamePlaceholder')",
          "248:                                 },",
          "249:                                 on: {",
          "250:                                   modelValue (value: any) {",
          "251:                                     defaultOptions.sheetName = value",
          "252:                                   }",
          "253:                                 }",
          "254:                               })",
          "255:                             ])",
          "256:                           ])",
          "257:                           : _e(),",
          "258:                         h('tr', [",
          "259:                           h('td', getI18n('vxe.export.expMode')),",
          "260:                           h('td', [",
          "261:                             h('vxe-select', {",
          "262:                               props: {",
          "263:                                 value: defaultOptions.mode,",
          "264:                                 options: storeData.modeList",
          "265:                               },",
          "266:                               on: {",
          "267:                                 input (value: any) {",
          "268:                                   defaultOptions.mode = value",
          "269:                                 }",
          "270:                               }",
          "271:                             })",
          "272:                           ])",
          "273:                         ]),",
          "274:                         h('tr', [",
          "275:                           h('td', [getI18n('vxe.export.expColumn')]),",
          "276:                           h('td', [",
          "277:                             h('div', {",
          "278:                               class: 'vxe-table-export--panel-column'",
          "279:                             }, [",
          "280:                               h('ul', {",
          "281:                                 class: 'vxe-table-export--panel-column-header'",
          "282:                               }, [",
          "283:                                 h('li', {",
          "284:                                   class: ['vxe-table-export--panel-column-option', {",
          "285:                                     'is--checked': isAllChecked,",
          "286:                                     'is--indeterminate': isAllIndeterminate",
          "287:                                   }],",
          "288:                                   attrs: {",
          "289:                                     title: getI18n('vxe.table.allTitle')",
          "290:                                   },",
          "291:                                   on: {",
          "292:                                     click: this.allColumnEvent",
          "293:                                   }",
          "294:                                 }, [",
          "295:                                   h('span', {",
          "296:                                     class: ['vxe-checkbox--icon', isAllIndeterminate ? getIcon().TABLE_CHECKBOX_INDETERMINATE : (isAllChecked ? getIcon().TABLE_CHECKBOX_CHECKED : getIcon().TABLE_CHECKBOX_UNCHECKED)]",
          "297:                                   }),",
          "298:                                   h('span', {",
          "299:                                     class: 'vxe-checkbox--label'",
          "300:                                   }, getI18n('vxe.export.expCurrentColumn'))",
          "301:                                 ])",
          "302:                               ]),",
          "303:                               h('ul', {",
          "304:                                 class: 'vxe-table-export--panel-column-body'",
          "305:                               }, cols)",
          "306:                             ])",
          "307:                           ])",
          "308:                         ]),",
          "309:                         h('tr', [",
          "310:                           h('td', getI18n('vxe.export.expOpts')),",
          "311:                           parameterSlot",
          "312:                             ? h('td', [",
          "313:                               h('div', {",
          "314:                                 class: 'vxe-table-export--panel-option-row'",
          "315:                               }, $xeTable.callSlot(parameterSlot, params))",
          "316:                             ])",
          "317:                             : h('td', [",
          "318:                               h('div', {",
          "319:                                 class: 'vxe-table-export--panel-option-row'",
          "320:                               }, [",
          "321:                                 h('vxe-checkbox', {",
          "322:                                   props: {",
          "323:                                     value: isHeader,",
          "324:                                     title: getI18n('vxe.export.expHeaderTitle'),",
          "325:                                     content: getI18n('vxe.export.expOptHeader')",
          "326:                                   },",
          "327:                                   on: {",
          "328:                                     input (value: any) {",
          "329:                                       defaultOptions.isHeader = value",
          "330:                                     }",
          "331:                                   }",
          "332:                                 }),",
          "333:                                 h('vxe-checkbox', {",
          "334:                                   props: {",
          "335:                                     value: defaultOptions.isFooter,",
          "336:                                     disabled: !storeData.hasFooter,",
          "337:                                     title: getI18n('vxe.export.expFooterTitle'),",
          "338:                                     content: getI18n('vxe.export.expOptFooter')",
          "339:                                   },",
          "340:                                   on: {",
          "341:                                     input (value: any) {",
          "342:                                       defaultOptions.isFooter = value",
          "343:                                     }",
          "344:                                   }",
          "345:                                 }),",
          "346:                                 h('vxe-checkbox', {",
          "347:                                   props: {",
          "348:                                     value: defaultOptions.original,",
          "349:                                     title: getI18n('vxe.export.expOriginalTitle'),",
          "350:                                     content: getI18n('vxe.export.expOptOriginal')",
          "351:                                   },",
          "352:                                   on: {",
          "353:                                     input (value: any) {",
          "354:                                       defaultOptions.original = value",
          "355:                                     }",
          "356:                                   }",
          "357:                                 })",
          "358:                               ]),",
          "359:                               h('div', {",
          "360:                                 class: 'vxe-table-export--panel-option-row'",
          "361:                               }, [",
          "362:                                 h('vxe-checkbox', {",
          "363:                                   props: {",
          "364:                                     value: isHeader && hasColgroup && supportMerge ? defaultOptions.isColgroup : false,",
          "365:                                     disabled: !isHeader || !hasColgroup || !supportMerge,",
          "366:                                     title: getI18n('vxe.export.expColgroupTitle'),",
          "367:                                     content: getI18n('vxe.export.expOptColgroup')",
          "368:                                   },",
          "369:                                   on: {",
          "370:                                     input (value: any) {",
          "371:                                       defaultOptions.isColgroup = value",
          "372:                                     }",
          "373:                                   }",
          "374:                                 }),",
          "375:                                 h('vxe-checkbox', {",
          "376:                                   props: {",
          "377:                                     value: hasMerge && supportMerge && checkedAll ? defaultOptions.isMerge : false,",
          "378:                                     disabled: !hasMerge || !supportMerge || !checkedAll,",
          "379:                                     title: getI18n('vxe.export.expMergeTitle'),",
          "380:                                     content: getI18n('vxe.export.expOptMerge')",
          "381:                                   },",
          "382:                                   on: {",
          "383:                                     input (value: any) {",
          "384:                                       defaultOptions.isMerge = value",
          "385:                                     }",
          "386:                                   }",
          "387:                                 }),",
          "388:                                 isPrint",
          "389:                                   ? _e()",
          "390:                                   : h('vxe-checkbox', {",
          "391:                                     props: {",
          "392:                                       value: supportStyle ? defaultOptions.useStyle : false,",
          "393:                                       disabled: !supportStyle,",
          "394:                                       title: getI18n('vxe.export.expUseStyleTitle'),",
          "395:                                       content: getI18n('vxe.export.expOptUseStyle')",
          "396:                                     },",
          "397:                                     on: {",
          "398:                                       input (value: any) {",
          "399:                                         defaultOptions.useStyle = value",
          "400:                                       }",
          "401:                                     }",
          "402:                                   }),",
          "403:                                 h('vxe-checkbox', {",
          "404:                                   props: {",
          "405:                                     value: hasTree ? defaultOptions.isAllExpand : false,",
          "406:                                     disabled: !hasTree,",
          "407:                                     title: getI18n('vxe.export.expAllExpandTitle'),",
          "408:                                     content: getI18n('vxe.export.expOptAllExpand')",
          "409:                                   },",
          "410:                                   on: {",
          "411:                                     input (value: any) {",
          "412:                                       defaultOptions.isAllExpand = value",
          "413:                                     }",
          "414:                                   }",
          "415:                                 })",
          "416:                               ])",
          "417:                             ])",
          "418:                         ])",
          "419:                       ]",
          "420:                     ])",
          "423:             bottomSlot",
          "424:               ? h('div', {",
          "425:                 class: 'vxe-table-export--panel-bottom'",
          "426:               }, $xeTable.callSlot(bottomSlot, params, h))",
          "427:               : renderEmptyElement(this)",
          "428:           ])",
          "429:         },",
          "430:         footer: () => {",
          "431:           const params = {",
          "432:             $table: $xeTable,",
          "433:             $grid: $xeTable.xegrid,",
          "434:             options: exportOpts,",
          "435:             columns,",
          "436:             params: exportOpts.params as any",
          "437:           }",
          "438:           return h('div', {",
          "439:             class: 'vxe-table-export--panel-footer'",
          "440:           }, footerSlot",
          "441:             ? $xeTable.callSlot(footerSlot, params)",
          "442:             : [",
          "443:                 h('div', {",
          "444:                   class: 'vxe-table-export--panel-btns'",
          "445:                 }, [",
          "446:                   h('vxe-button', {",
          "448:                       content: getI18n('vxe.export.expCancel')",
          "451:                       click: this.cancelEvent",
          "452:                     }",
          "453:                   }),",
          "454:                   h('vxe-button', {",
          "455:                     ref: 'confirmBtn',",
          "456:                     props: {",
          "457:                       status: 'primary',",
          "458:                       content: getI18n(isPrint ? 'vxe.export.expPrint' : 'vxe.export.expConfirm')",
          "459:                     },",
          "460:                     on: {",
          "461:                       click: this.confirmEvent",
          "466:         }",
          "467:       }",
          "468:     })",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "471:       $xetable.print(Object.assign({}, $xetable.printOpts, this.getExportOption()))",
          "472:     },",
          "473:     exportEvent () {",
          "475:       this.loading = true",
          "477:         this.loading = false",
          "478:         this.storeData.visible = false",
          "479:       }).catch(() => {",
          "",
          "[Removed Lines]",
          "474:       const $xetable = this.$parent",
          "476:       $xetable.exportData(Object.assign({}, $xetable.exportOpts, this.getExportOption())).then(() => {",
          "",
          "[Added Lines]",
          "542:       const $xeTable = this.$xeTable",
          "543:       const exportOpts = $xeTable.exportOpts",
          "546:       $xeTable.exportData(Object.assign({}, exportOpts, this.getExportOption())).then(() => {",
          "",
          "---------------"
        ],
        "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts": [
          "File: packages/table/module/export/import-panel.ts -> packages/table/module/export/import-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import type { VxeModalComponent, VxeSelectComponent, VxeButtonComponent } from 'vxe-pc-ui'",
          "11: export default {",
          "12:   name: 'VxeTableImportPanel',",
          "",
          "[Removed Lines]",
          "9: const { getI18n, getIcon, globalMixins } = VxeUI",
          "",
          "[Added Lines]",
          "9: const { getI18n, getIcon, globalMixins, renderEmptyElement } = VxeUI",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   },",
          "24:   data () {",
          "25:     return {",
          "26:       loading: false",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:   inject: {",
          "25:     $xeTable: {",
          "26:       default: null",
          "27:     }",
          "28:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     }",
          "66:   },",
          "67:   render (this: any, h: CreateElement) {",
          "68:     const { hasFile, parseTypeLabel, defaultOptions, storeData, selectName } = this",
          "69:     return h('vxe-modal', {",
          "70:       ref: 'modal',",
          "71:       props: {",
          "72:         value: storeData.visible,",
          "73:         title: getI18n('vxe.import.impTitle'),",
          "74:         width: 540,",
          "75:         mask: true,",
          "76:         lockView: true,",
          "78:         escClosable: true,",
          "79:         maskClosable: true,",
          "80:         loading: this.loading",
          "81:       },",
          "82:       on: {",
          "",
          "[Removed Lines]",
          "77:         showFooter: false,",
          "",
          "[Added Lines]",
          "73:     const $xeTable = this.$xeTable",
          "75:     const importOpts = $xeTable.importOpts",
          "77:     const slots = importOpts.slots || {}",
          "78:     const topSlot = slots.top",
          "79:     const bottomSlot = slots.bottom",
          "80:     const defaultSlot = slots.default",
          "81:     const footerSlot = slots.footer",
          "86:         id: 'VXE_IMPORT_MODAL',",
          "90:         minWidth: 360,",
          "91:         minHeight: 240,",
          "94:         showFooter: true,",
          "97:         showMaximize: true,",
          "98:         resize: true,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:           storeData.visible = value",
          "85:         },",
          "86:         show: this.showEvent",
          "97:           }",
          "106:                     attrs: {",
          "108:                     }",
          "109:                   }, [",
          "117:                   ])",
          "124:                     on: {",
          "126:                     }",
          "145:                     }",
          "172:   },",
          "173:   methods: {",
          "174:     clearFileEvent () {",
          "",
          "[Removed Lines]",
          "87:       }",
          "88:     }, [",
          "89:       h('div', {",
          "90:         class: 'vxe-export--panel'",
          "91:       }, [",
          "92:         h('table', {",
          "93:           attrs: {",
          "94:             cellspacing: 0,",
          "95:             cellpadding: 0,",
          "96:             border: 0",
          "98:         }, [",
          "99:           h('tbody', [",
          "100:             h('tr', [",
          "101:               h('td', getI18n('vxe.import.impFile')),",
          "102:               h('td', [",
          "103:                 hasFile",
          "104:                   ? h('div', {",
          "105:                     class: 'vxe-import-selected--file',",
          "107:                       title: selectName",
          "110:                     h('span', selectName),",
          "111:                     h('i', {",
          "112:                       class: getIcon().INPUT_CLEAR,",
          "113:                       on: {",
          "114:                         click: this.clearFileEvent",
          "115:                       }",
          "116:                     })",
          "118:                   : h('button', {",
          "119:                     ref: 'fileBtn',",
          "120:                     class: 'vxe-import-select--file',",
          "121:                     attrs: {",
          "122:                       type: 'button'",
          "123:                     },",
          "125:                       click: this.selectFileEvent",
          "127:                   }, getI18n('vxe.import.impSelect'))",
          "128:               ])",
          "129:             ]),",
          "130:             h('tr', [",
          "131:               h('td', getI18n('vxe.import.impType')),",
          "132:               h('td', parseTypeLabel)",
          "133:             ]),",
          "134:             h('tr', [",
          "135:               h('td', getI18n('vxe.import.impMode')),",
          "136:               h('td', [",
          "137:                 h('vxe-select', {",
          "138:                   props: {",
          "139:                     value: defaultOptions.mode,",
          "140:                     options: storeData.modeList",
          "141:                   },",
          "142:                   on: {",
          "143:                     input (value: any) {",
          "144:                       defaultOptions.mode = value",
          "146:                   }",
          "147:                 })",
          "148:               ])",
          "149:             ])",
          "150:           ])",
          "151:         ]),",
          "152:         h('div', {",
          "153:           class: 'vxe-export--panel-btns'",
          "154:         }, [",
          "155:           h('vxe-button', {",
          "156:             on: {",
          "157:               click: this.cancelEvent",
          "158:             }",
          "159:           }, getI18n('vxe.import.impCancel')),",
          "160:           h('vxe-button', {",
          "161:             props: {",
          "162:               status: 'primary',",
          "163:               disabled: !hasFile",
          "164:             },",
          "165:             on: {",
          "166:               click: this.importEvent",
          "167:             }",
          "168:           }, getI18n('vxe.import.impConfirm'))",
          "169:         ])",
          "170:       ])",
          "171:     ])",
          "",
          "[Added Lines]",
          "106:       },",
          "107:       scopedSlots: {",
          "108:         default: () => {",
          "109:           const params = {",
          "110:             $table: $xeTable,",
          "111:             $grid: $xeTable.xegrid,",
          "112:             options: importOpts,",
          "113:             params: importOpts.params as any",
          "116:           return h('div', {",
          "117:             class: 'vxe-table-export--panel'",
          "118:           }, [",
          "119:             topSlot",
          "120:               ? h('div', {",
          "121:                 class: 'vxe-table-export--panel-top'",
          "122:               }, $xeTable.callSlot(topSlot, params, h))",
          "123:               : renderEmptyElement(this),",
          "124:             h('div', {",
          "125:               class: 'vxe-table-export--panel-body'",
          "126:             }, defaultSlot",
          "127:               ? $xeTable.callSlot(defaultSlot, params, h)",
          "128:               : [",
          "129:                   h('table', {",
          "130:                     class: 'vxe-table-export--panel-table',",
          "132:                       cellspacing: 0,",
          "133:                       cellpadding: 0,",
          "134:                       border: 0",
          "137:                     h('tbody', [",
          "138:                       h('tr', [",
          "139:                         h('td', getI18n('vxe.import.impFile')),",
          "140:                         h('td', [",
          "141:                           hasFile",
          "142:                             ? h('div', {",
          "143:                               class: 'vxe-table-export--selected--file',",
          "144:                               attrs: {",
          "145:                                 title: selectName",
          "146:                               }",
          "147:                             }, [",
          "148:                               h('span', selectName),",
          "149:                               h('i', {",
          "150:                                 class: getIcon().INPUT_CLEAR,",
          "151:                                 on: {",
          "152:                                   click: this.clearFileEvent",
          "153:                                 }",
          "154:                               })",
          "155:                             ])",
          "156:                             : h('button', {",
          "157:                               ref: 'fileBtn',",
          "158:                               class: 'vxe-table-export--select--file',",
          "159:                               attrs: {",
          "160:                                 type: 'button'",
          "161:                               },",
          "162:                               on: {",
          "163:                                 click: this.selectFileEvent",
          "164:                               }",
          "165:                             }, getI18n('vxe.import.impSelect'))",
          "166:                         ])",
          "167:                       ]),",
          "168:                       h('tr', [",
          "169:                         h('td', getI18n('vxe.import.impType')),",
          "170:                         h('td', parseTypeLabel)",
          "171:                       ]),",
          "172:                       h('tr', [",
          "173:                         h('td', getI18n('vxe.import.impMode')),",
          "174:                         h('td', [",
          "175:                           h('vxe-select', {",
          "176:                             props: {",
          "177:                               value: defaultOptions.mode,",
          "178:                               options: storeData.modeList",
          "179:                             },",
          "180:                             on: {",
          "181:                               input (value: any) {",
          "182:                                 defaultOptions.mode = value",
          "183:                               }",
          "184:                             }",
          "185:                           })",
          "186:                         ])",
          "187:                       ])",
          "188:                     ])",
          "190:                 ]",
          "191:             ),",
          "192:             bottomSlot",
          "193:               ? h('div', {",
          "194:                 class: 'vxe-table-export--panel-bottom'",
          "195:               }, $xeTable.callSlot(bottomSlot, params, h))",
          "196:               : renderEmptyElement(this)",
          "197:           ])",
          "198:         },",
          "199:         footer: () => {",
          "200:           const params = {",
          "201:             $table: $xeTable,",
          "202:             $grid: $xeTable.xegrid,",
          "203:             options: importOpts,",
          "204:             params: importOpts.params as any",
          "205:           }",
          "206:           return h('div', {",
          "207:             class: 'vxe-table-export--panel-footer'",
          "208:           }, footerSlot",
          "209:             ? $xeTable.callSlot(footerSlot, params, h)",
          "210:             : [",
          "211:                 h('div', {",
          "212:                   class: 'vxe-table-export--panel-btns'",
          "213:                 }, [",
          "214:                   h('vxe-button', {",
          "216:                       click: this.cancelEvent",
          "218:                   }, getI18n('vxe.import.impCancel')),",
          "219:                   h('vxe-button', {",
          "220:                     props: {",
          "221:                       status: 'primary',",
          "222:                       disabled: !hasFile",
          "223:                     },",
          "224:                     on: {",
          "225:                       click: this.importEvent",
          "227:                   }, getI18n('vxe.import.impConfirm'))",
          "228:                 ])",
          "229:               ]",
          "230:           )",
          "231:         }",
          "232:       }",
          "233:     })",
          "",
          "---------------"
        ],
        "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts": [
          "File: packages/table/module/export/mixin.ts -> packages/table/module/export/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "919:   })",
          "920: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "922: function handleCloseExport () {",
          "923:   if (VxeUI.modal) {",
          "924:     return VxeUI.modal.close('VXE_EXPORT_MODAL')",
          "925:   }",
          "926:   return Promise.resolve()",
          "927: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1429:         }",
          "1430:       })",
          "1431:     },",
          "1432:     _openImport (options: any) {",
          "1433:       const { importOpts } = this",
          "1434:       const defOpts = Object.assign({",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1439:     _closeImport () {",
          "1440:       if (VxeUI.modal) {",
          "1441:         return VxeUI.modal.close('VXE_IMPORT_MODAL')",
          "1442:       }",
          "1443:       return Promise.resolve()",
          "1444:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1482:       }",
          "1483:       this.initStore.import = true",
          "1484:     },",
          "1485:     _openExport (options: any) {",
          "1486:       const { exportOpts } = this",
          "1487:       if (process.env.VUE_APP_VXE_ENV === 'development') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1498:     _closeExport: handleCloseExport,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1491:       }",
          "1492:       return handleExportAndPrint(this, Object.assign({}, exportOpts, options))",
          "1493:     },",
          "1494:     _openPrint (options: any) {",
          "1495:       const { printOpts } = this",
          "1496:       if (process.env.VUE_APP_VXE_ENV === 'development') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1508:     _closePrint: handleCloseExport,",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5971: } as any",
          "5976: funcs.forEach(name => {",
          "5977:   Methods[name] = function (...args: any[]) {",
          "",
          "[Removed Lines]",
          "5974: const funcs = 'setFilter,openFilter,clearFilter,getCheckedFilters,updateFilterOptionStatus,closeMenu,setActiveCellArea,getActiveCellArea,getCellAreas,clearCellAreas,copyCellArea,cutCellArea,pasteCellArea,getCopyCellArea,getCopyCellAreas,clearCopyCellArea,setCellAreas,openFNR,openFind,openReplace,closeFNR,getSelectedCell,clearSelected,insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearEdit,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell,setSelectCell,clearValidate,fullValidate,validate,openExport,openPrint,getPrintHtml,exportData,openImport,importData,saveFile,readFile,importByFile,print,openCustom,closeCustom'.split(',')",
          "",
          "[Added Lines]",
          "5974: const funcs = 'setFilter,openFilter,clearFilter,getCheckedFilters,updateFilterOptionStatus,closeMenu,setActiveCellArea,getActiveCellArea,getCellAreas,clearCellAreas,copyCellArea,cutCellArea,pasteCellArea,getCopyCellArea,getCopyCellAreas,clearCopyCellArea,setCellAreas,openFNR,openFind,openReplace,closeFNR,getSelectedCell,clearSelected,insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearEdit,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell,setSelectCell,clearValidate,fullValidate,validate,openExport,closeExport,openPrint,closePrint,getPrintHtml,exportData,openImport,closeImport,importData,saveFile,readFile,importByFile,print,openCustom,closeCustom'.split(',')",
          "",
          "---------------"
        ],
        "styles/components/table-module/export.scss||styles/components/table-module/export.scss": [
          "File: styles/components/table-module/export.scss -> styles/components/table-module/export.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @use '../../helpers/baseMixin.scss';",
          "4:   list-style-type: none;",
          "5:   overflow: auto;",
          "6:   margin: 0;",
          "",
          "[Removed Lines]",
          "3: .vxe-export--panel-column > ul {",
          "",
          "[Added Lines]",
          "3: .vxe-table-export--panel-column > ul {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:   }",
          "16: }",
          "20:     width: 100%;",
          "21:     border: 0;",
          "22:     table-layout: fixed;",
          "",
          "[Removed Lines]",
          "18: .vxe-export--panel {",
          "19:   & > table {",
          "",
          "[Added Lines]",
          "18: .vxe-table-export--panel {",
          "19:   .vxe-table-export--panel-table {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:         & > .vxe-select {",
          "37:           width: 80%;",
          "38:         }",
          "40:           padding: 0.25em 0;",
          "41:         }",
          "42:       }",
          "43:     }",
          "44:   }",
          "46:     width: 80%;",
          "47:     border: 1px solid var(--vxe-ui-input-border-color);",
          "48:     margin: 3px 0;",
          "",
          "[Removed Lines]",
          "39:         & > .vxe-export--panel-option-row {",
          "45:   .vxe-export--panel-column {",
          "",
          "[Added Lines]",
          "39:         & > .vxe-table-export--panel-option-row {",
          "45:   .vxe-table-export--panel-column {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "62:         }",
          "63:       }",
          "64:     }",
          "66:       padding: 0.1em 0;",
          "67:       background-color: var(--vxe-ui-table-header-background-color);",
          "68:       font-weight: 700;",
          "69:       border-bottom: 1px solid var(--vxe-ui-table-border-color);",
          "70:     }",
          "72:       padding: 0.2em 0;",
          "73:       min-height: 10em;",
          "74:       max-height: 17.6em;",
          "75:     }",
          "76:   }",
          "78:     padding-right: 40px;",
          "79:     position: relative;",
          "80:     overflow: hidden;",
          "",
          "[Removed Lines]",
          "65:     .vxe-export--panel-column-header {",
          "71:     .vxe-export--panel-column-body {",
          "77:   .vxe-import-selected--file {",
          "",
          "[Added Lines]",
          "65:     .vxe-table-export--panel-column-header {",
          "71:     .vxe-table-export--panel-column-body {",
          "77:   .vxe-table-export--panel-btns {",
          "78:     text-align: right;",
          "79:     padding: 0.8em 0.25em 0.25em 0.25em;",
          "80:   }",
          "81: }",
          "83: .vxe-table-export--panel {",
          "84:   .vxe-table-export--selected--file {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "97:       }",
          "98:     }",
          "99:   }",
          "101:     width: 80%;",
          "102:     border: 1px dashed var(--vxe-ui-input-border-color);",
          "103:     padding: 6px 34px;",
          "",
          "[Removed Lines]",
          "100:   .vxe-import-select--file {",
          "",
          "[Added Lines]",
          "107:   .vxe-table-export--select--file {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "116:       border-color: var(--vxe-ui-font-primary-color);",
          "117:     }",
          "118:   }",
          "123: }",
          "126:   @include baseMixin.createCheckboxIcon();",
          "127: }",
          "",
          "[Removed Lines]",
          "119:   .vxe-export--panel-btns {",
          "120:     text-align: right;",
          "121:     padding: 0.8em 0.25em 0.25em 0.25em;",
          "122:   }",
          "125: .vxe-export--panel-column-option {",
          "",
          "[Added Lines]",
          "128: .vxe-table-export--panel-column-option {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "573daedd7115786b64858a64d999007444257101",
      "candidate_info": {
        "commit_hash": "573daedd7115786b64858a64d999007444257101",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/573daedd7115786b64858a64d999007444257101",
        "files": [
          "package.json",
          "packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts",
          "packages/table/src/body.ts",
          "packages/table/src/methods.ts"
        ],
        "message": "releases 3.10.0",
        "before_after_code_files": [
          "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts",
          "packages/table/src/body.ts||packages/table/src/body.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts": [
          "File: packages/table/module/export/export-panel.ts -> packages/table/module/export/export-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:   render (this: any, h: CreateElement) {",
          "85:     const $xeTable = this.$xeTable",
          "88:     const { _e, checkedAll, isAll: isAllChecked, isIndeterminate: isAllIndeterminate, showSheet, supportMerge, supportStyle, defaultOptions, storeData } = this",
          "89:     const { hasTree, hasMerge, isPrint, hasColgroup, columns } = storeData",
          "90:     const { isHeader } = defaultOptions",
          "92:     const topSlot = slots.top",
          "93:     const bottomSlot = slots.bottom",
          "94:     const defaultSlot = slots.default",
          "",
          "[Removed Lines]",
          "87:     const exportOpts = $xeTable.exportOpts",
          "91:     const slots = exportOpts.slots || {}",
          "",
          "[Added Lines]",
          "90:     const slots = defaultOptions.slots || {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "167:           const params = {",
          "168:             $table: $xeTable,",
          "169:             $grid: $xeTable.xegrid,",
          "171:             columns,",
          "173:           }",
          "175:           return h('div', {",
          "",
          "[Removed Lines]",
          "170:             options: exportOpts,",
          "172:             params: exportOpts.params as any",
          "",
          "[Added Lines]",
          "169:             options: defaultOptions,",
          "171:             params: defaultOptions.params as any",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "431:           const params = {",
          "432:             $table: $xeTable,",
          "433:             $grid: $xeTable.xegrid,",
          "435:             columns,",
          "437:           }",
          "438:           return h('div', {",
          "439:             class: 'vxe-table-export--panel-footer'",
          "",
          "[Removed Lines]",
          "434:             options: exportOpts,",
          "436:             params: exportOpts.params as any",
          "",
          "[Added Lines]",
          "433:             options: defaultOptions,",
          "435:             params: defaultOptions.params as any",
          "",
          "---------------"
        ],
        "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts": [
          "File: packages/table/module/export/import-panel.ts -> packages/table/module/export/import-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   render (this: any, h: CreateElement) {",
          "73:     const $xeTable = this.$xeTable",
          "76:     const { hasFile, parseTypeLabel, defaultOptions, storeData, selectName } = this",
          "78:     const topSlot = slots.top",
          "79:     const bottomSlot = slots.bottom",
          "80:     const defaultSlot = slots.default",
          "",
          "[Removed Lines]",
          "75:     const importOpts = $xeTable.importOpts",
          "77:     const slots = importOpts.slots || {}",
          "",
          "[Added Lines]",
          "76:     const slots = defaultOptions.slots || {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:           const params = {",
          "110:             $table: $xeTable,",
          "111:             $grid: $xeTable.xegrid,",
          "114:           }",
          "116:           return h('div', {",
          "",
          "[Removed Lines]",
          "112:             options: importOpts,",
          "113:             params: importOpts.params as any",
          "",
          "[Added Lines]",
          "111:             options: defaultOptions,",
          "112:             params: defaultOptions.params as any",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "200:           const params = {",
          "201:             $table: $xeTable,",
          "202:             $grid: $xeTable.xegrid,",
          "205:           }",
          "206:           return h('div', {",
          "207:             class: 'vxe-table-export--panel-footer'",
          "",
          "[Removed Lines]",
          "203:             options: importOpts,",
          "204:             params: importOpts.params as any",
          "",
          "[Added Lines]",
          "202:             options: defaultOptions,",
          "203:             params: defaultOptions.params as any",
          "",
          "---------------"
        ],
        "packages/table/src/body.ts||packages/table/src/body.ts": [
          "File: packages/table/src/body.ts -> packages/table/src/body.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:     key: columnKey || columnOpts.useKey ? column.id : $columnIndex,",
          "294:     attrs,",
          "295:     style: Object.assign({",
          "297:     }, XEUtils.isFunction(compCellStyle) ? compCellStyle(params) : compCellStyle, XEUtils.isFunction(cellStyle) ? cellStyle(params) : cellStyle),",
          "298:     on: tdOns",
          "299:   }, tdVNs)",
          "",
          "[Removed Lines]",
          "296:       height: hasEllipsis && (scrollYRHeight || rowHeight) ? `${scrollYRHeight || rowHeight}px` : (scrollYLoad ? `${rest.height || scrollYRHeight || rowHeight}px` : '')",
          "",
          "[Added Lines]",
          "296:       height: hasEllipsis && (scrollYRHeight || rowHeight) ? `${scrollYRHeight || rowHeight}px` : (scrollYLoad ? `${rest.height || 24}px` : '')",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5489:   },",
          "5491:   computeScrollLoad () {",
          "5492:     return this.$nextTick().then(() => {",
          "5493:       const { sYOpts, sXOpts, scrollXLoad, scrollYLoad, scrollXStore, scrollYStore } = this",
          "5495:       if (scrollXLoad) {",
          "5496:         const { visibleSize: visibleXSize } = handleVirtualXVisible(this)",
          "5498:         scrollXStore.offsetSize = offsetXSize",
          "5499:         scrollXStore.visibleSize = visibleXSize",
          "5500:         scrollXStore.endIndex = Math.max(scrollXStore.startIndex + scrollXStore.visibleSize + offsetXSize, scrollXStore.endIndex)",
          "",
          "[Removed Lines]",
          "5497:         const offsetXSize = sXOpts.oSize ? XEUtils.toNumber(sXOpts.oSize) : browse.msie ? 10 : (browse.edge ? 5 : 0)",
          "",
          "[Added Lines]",
          "5492:     const $xeTable = this",
          "5493:     const props = $xeTable",
          "5496:       const { showOverflow } = props",
          "5502:         const bufferSize = showOverflow ? 0 : 2",
          "5503:         const offsetXSize = Math.max(bufferSize, sXOpts.oSize ? XEUtils.toNumber(sXOpts.oSize) : browse.msie ? 10 : (browse.edge ? 5 : 0))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5509:       this.rowHeight = rowHeight",
          "5510:       const { visibleSize: visibleYSize } = handleVirtualYVisible(this)",
          "5511:       if (scrollYLoad) {",
          "5513:         scrollYStore.offsetSize = offsetYSize",
          "5514:         scrollYStore.visibleSize = visibleYSize",
          "5515:         scrollYStore.endIndex = Math.max(scrollYStore.startIndex + visibleYSize + offsetYSize, scrollYStore.endIndex)",
          "",
          "[Removed Lines]",
          "5512:         const offsetYSize = sYOpts.oSize ? XEUtils.toNumber(sYOpts.oSize) : browse.msie ? 20 : (browse.edge ? 10 : 0)",
          "",
          "[Added Lines]",
          "5519:         const bufferSize = showOverflow ? 0 : 2",
          "5520:         const offsetYSize = Math.max(bufferSize, sYOpts.oSize ? XEUtils.toNumber(sYOpts.oSize) : (browse.edge ? 10 : 0))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4c4974d5cfc29d216ea0f80dc80de69c2ed9647",
      "candidate_info": {
        "commit_hash": "c4c4974d5cfc29d216ea0f80dc80de69c2ed9647",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/c4c4974d5cfc29d216ea0f80dc80de69c2ed9647",
        "files": [
          "package.json",
          "packages/locale/lang/ar-EG.ts",
          "packages/locale/lang/de-DE.ts",
          "packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts",
          "packages/locale/lang/fr-FR.ts",
          "packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/hy-AM.ts",
          "packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/nb-NO.ts",
          "packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/ug-CN.ts",
          "packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts",
          "packages/table/module/custom/mixin.ts",
          "packages/table/module/custom/panel.ts",
          "packages/table/src/body.ts",
          "packages/table/src/cell.ts",
          "packages/table/src/header.ts",
          "packages/table/src/methods.ts",
          "packages/table/src/table.ts",
          "packages/ui/index.ts",
          "styles/components/icon.scss",
          "styles/components/table.scss",
          "styles/icon/iconfont.ttf",
          "styles/icon/iconfont.woff",
          "styles/icon/iconfont.woff2",
          "styles/theme/dark.scss",
          "styles/theme/light.scss",
          "styles/variable.scss"
        ],
        "message": "releases 3.11.22",
        "before_after_code_files": [
          "packages/locale/lang/ar-EG.ts||packages/locale/lang/ar-EG.ts",
          "packages/locale/lang/de-DE.ts||packages/locale/lang/de-DE.ts",
          "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts",
          "packages/locale/lang/fr-FR.ts||packages/locale/lang/fr-FR.ts",
          "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/hy-AM.ts||packages/locale/lang/hy-AM.ts",
          "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/nb-NO.ts||packages/locale/lang/nb-NO.ts",
          "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/ug-CN.ts||packages/locale/lang/ug-CN.ts",
          "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts",
          "packages/table/module/custom/mixin.ts||packages/table/module/custom/mixin.ts",
          "packages/table/module/custom/panel.ts||packages/table/module/custom/panel.ts",
          "packages/table/src/body.ts||packages/table/src/body.ts",
          "packages/table/src/cell.ts||packages/table/src/cell.ts",
          "packages/table/src/header.ts||packages/table/src/header.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts",
          "packages/ui/index.ts||packages/ui/index.ts",
          "styles/components/icon.scss||styles/components/icon.scss",
          "styles/components/table.scss||styles/components/table.scss",
          "styles/theme/dark.scss||styles/theme/dark.scss",
          "styles/theme/light.scss||styles/theme/light.scss",
          "styles/variable.scss||styles/variable.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/locale/lang/ar-EG.ts||packages/locale/lang/ar-EG.ts": [
          "File: packages/locale/lang/ar-EG.ts -> packages/locale/lang/ar-EG.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/de-DE.ts||packages/locale/lang/de-DE.ts": [
          "File: packages/locale/lang/de-DE.ts -> packages/locale/lang/de-DE.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts": [
          "File: packages/locale/lang/en-US.ts -> packages/locale/lang/en-US.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: 'The browser does not support import / export.',",
          "48:       impFields: 'Import failed, please check that the field name and data format are correct.',",
          "49:       treeNotImp: 'Tree table does not support import.',",
          "51:     },",
          "52:     table: {",
          "53:       emptyText: 'No Data',",
          "",
          "[Removed Lines]",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: 'Only drag and drop data from the first level',",
          "51:       treeDragChild: 'Parent data cannot be dragged and dropped into children',",
          "52:       reqPlugin: 'Optional extensions \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts": [
          "File: packages/locale/lang/es-ES.ts -> packages/locale/lang/es-ES.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: 'El navegador no es compatible con la importaci\u00f3n / exportaci\u00f3n.',",
          "48:       impFields: 'Error de importaci\u00f3n, por favor revise que el nombre del campo y el formato de datos sean correctos.',",
          "49:       treeNotImp: 'La tabla de \u00e1rbol no soporta importaci\u00f3n.',",
          "50:       reqPlugin: 'Optional extension \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/fr-FR.ts||packages/locale/lang/fr-FR.ts": [
          "File: packages/locale/lang/fr-FR.ts -> packages/locale/lang/fr-FR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts": [
          "File: packages/locale/lang/hu-HU.ts -> packages/locale/lang/hu-HU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: 'Ez a b\u00f6ng\u00e9sz\u0151 nem t\u00e1mogatja az import\u00e1l\u00e1si/export\u00e1l\u00e1si funkci\u00f3kat',",
          "48:       impFields: 'Az import\u00e1l\u00e1s nem siker\u00fclt, ellen\u0151rizze, hogy a mez\u0151n\u00e9v \u00e9s az adatform\u00e1tum helyes-e',",
          "49:       treeNotImp: 'A fat\u00e1bl\u00e1k nem t\u00e1mogatj\u00e1k az import\u00e1l\u00e1st',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/hy-AM.ts||packages/locale/lang/hy-AM.ts": [
          "File: packages/locale/lang/hy-AM.ts -> packages/locale/lang/hy-AM.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts": [
          "File: packages/locale/lang/ja-JP.ts -> packages/locale/lang/ja-JP.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u3054\u5229\u7528\u306e\u30d6\u30e9\u30a6\u30b6\u306f\u30a4\u30f3\u30dd\u30fc\u30c8/\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u307e\u305b\u3093',",
          "48:       impFields: '\u30a4\u30f3\u30dd\u30fc\u30c8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3068\u30c7\u30fc\u30bf\u5f62\u5f0f\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044',",
          "49:       treeNotImp: '\u30c4\u30ea\u30fc\u30c6\u30fc\u30d6\u30eb\u306f\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts": [
          "File: packages/locale/lang/ko-KR.ts -> packages/locale/lang/ko-KR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/nb-NO.ts||packages/locale/lang/nb-NO.ts": [
          "File: packages/locale/lang/nb-NO.ts -> packages/locale/lang/nb-NO.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts": [
          "File: packages/locale/lang/pt-BR.ts -> packages/locale/lang/pt-BR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: 'O navegador n\u00e3o suporta importa\u00e7\u00e3o/exporta\u00e7\u00e3o.',",
          "48:       impFields: 'Falha na importa\u00e7\u00e3o, verifique se o nome do campo e o formato dos dados est\u00e3o corretos.',",
          "49:       treeNotImp: 'A tabela de \u00e1rvore n\u00e3o suporta importa\u00e7\u00e3o.',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts": [
          "File: packages/locale/lang/ru-RU.ts -> packages/locale/lang/ru-RU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u042d\u0442\u043e\u0442 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u043c\u043f\u043e\u0440\u0442\u0430/\u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430.',",
          "48:       impFields: '\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044f \u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.',",
          "49:       treeNotImp: '\u0414\u0440\u0435\u0432\u043e\u0432\u0438\u0434\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0438\u043c\u043f\u043e\u0440\u0442.',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ug-CN.ts||packages/locale/lang/ug-CN.ts": [
          "File: packages/locale/lang/ug-CN.ts -> packages/locale/lang/ug-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u0628\u06c7 \u062a\u0648\u0631 \u0643\u06c6\u0631\u06af\u06c8\u0686 \u0626\u06d5\u0643\u0649\u0631\u0649\u0634/\u0626\u0627\u0686\u0649\u0642\u0649\u0634\u0646\u0649 \u0642\u0648\u0644\u0644\u0649\u0645\u0627\u064a\u062f\u06c7',",
          "48:       impFields: '\u0626\u06d5\u0643\u0649\u0631\u0649\u0634\u0649 \u0645\u06d5\u063a\u0644\u06c7\u067e \u0628\u0648\u0644\u062f\u0649\u060c\u0633\u06c6\u0632 \u06be\u06d5\u0645 \u0626\u06c7\u0686\u06c7\u0631 \u0641\u0648\u0631\u0645\u0627\u062a\u0649\u0646\u0649 \u062a\u06d5\u0643\u0634\u06c8\u0631\u06c8\u06ad',",
          "49:       treeNotImp: '\u062f\u06d5\u0631\u06d5\u062e \u0634\u06d5\u0643\u0649\u0644\u0644\u0649\u0643 \u062c\u06d5\u062f\u0649\u06cb\u06d5\u0644\u0646\u0649 \u0626\u06d5\u0643\u0649\u0631\u0649\u0634\u0646\u0649 \u0642\u0648\u0644\u0644\u0649\u0645\u0627\u064a\u062f\u06c7',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts": [
          "File: packages/locale/lang/uk-UA.ts -> packages/locale/lang/uk-UA.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts": [
          "File: packages/locale/lang/vi-VN.ts -> packages/locale/lang/vi-VN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts": [
          "File: packages/locale/lang/zh-CHT.ts -> packages/locale/lang/zh-CHT.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8a72\u700f\u89bd\u5668\u4e0d\u652f\u63f4\u532f\u5165/\u532f\u51fa\u529f\u80fd',",
          "48:       impFields: '\u532f\u5165\u5931\u6557\uff0c\u8acb\u6aa2\u67e5\u6b04\u4f4d\u540d\u7a31\u548c\u8cc7\u6599\u683c\u5f0f\u662f\u5426\u6b63\u78ba',",
          "49:       treeNotImp: '\u6a39\u8868\u683c\u4e0d\u652f\u63f4\u5c0e\u5165',",
          "50:       reqPlugin: '\u53ef\u9078\u64f4\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts": [
          "File: packages/locale/lang/zh-CN.ts -> packages/locale/lang/zh-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:       notExp: '\u8be5\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5bfc\u5165/\u5bfc\u51fa\u529f\u80fd',",
          "48:       impFields: '\u5bfc\u5165\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u5b57\u6bb5\u540d\u548c\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e',",
          "49:       treeNotImp: '\u6811\u8868\u683c\u4e0d\u652f\u6301\u5bfc\u5165',",
          "50:       reqPlugin: '\u53ef\u9009\u6269\u5c55\u63d2\u4ef6 \"{1}\" https://vxeui.com/other{0}/#/{1}/install'",
          "51:     },",
          "52:     table: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:       treeCrossDrag: '\u53ea\u80fd\u62d6\u62fd\u7b2c\u4e00\u5c42\u7ea7\u7684\u6570\u636e',",
          "51:       treeDragChild: '\u7236\u7ea7\u6570\u636e\u4e0d\u80fd\u62d6\u62fd\u5230\u5b50\u7ea7\u4e2d',",
          "",
          "---------------"
        ],
        "packages/table/module/custom/mixin.ts||packages/table/module/custom/mixin.ts": [
          "File: packages/table/module/custom/mixin.ts -> packages/table/module/custom/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:           column.visible = column.renderVisible",
          "68:         }",
          "69:       })",
          "70:       reactData.isDragColMove = true",
          "71:       setTimeout(() => {",
          "72:         reactData.isDragColMove = false",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:       reactData.isCustomStatus = true",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:       return $xeTable.$nextTick()",
          "102:     },",
          "103:     _resetCustom (options: any) {",
          "105:       const { checkMethod } = customOpts",
          "106:       const opts = Object.assign({",
          "107:         visible: true,",
          "",
          "[Removed Lines]",
          "104:       const { collectColumn, customOpts } = this",
          "",
          "[Added Lines]",
          "105:       const $xeTable = this",
          "106:       const reactData = $xeTable",
          "107:       const internalData = $xeTable",
          "109:       const { collectColumn, customOpts } = internalData",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:         }",
          "125:         column.renderResizeWidth = column.renderWidth",
          "126:       })",
          "129:     },",
          "130:     _toggleCustomAllCheckbox () {",
          "131:       const { customStore } = this",
          "",
          "[Removed Lines]",
          "127:       this.saveCustomStore('reset')",
          "128:       return this.handleCustom()",
          "",
          "[Added Lines]",
          "132:       reactData.isCustomStatus = false",
          "133:       $xeTable.saveCustomStore('reset')",
          "134:       return $xeTable.handleCustom()",
          "",
          "---------------"
        ],
        "packages/table/module/custom/panel.ts||packages/table/module/custom/panel.ts": [
          "File: packages/table/module/custom/panel.ts -> packages/table/module/custom/panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: const renderSimplePanel = (h: CreateElement, _vm: any) => {",
          "29:   const VxeUIButtonComponent = VxeUI.getComponent<VxeButtonComponent>('VxeButton')",
          "31:   const $xeTable = _vm.$xeTable",
          "34:   const { maxHeight } = customStore",
          "35:   const { checkMethod, visibleMethod, allowVisible, allowSort, allowFixed, trigger, placement } = customOpts",
          "36:   const slots = customOpts.slots || {}",
          "37:   const headerSlot = slots.header",
          "38:   const topSlot = slots.top",
          "",
          "[Removed Lines]",
          "32:   const { _e, customStore, dragColumn } = _vm",
          "33:   const { customColumnList, customOpts, isMaxFixedColumn } = $xeTable",
          "",
          "[Added Lines]",
          "31:   const props = _vm",
          "34:   const reactData = $xeTable",
          "36:   const { customStore } = props",
          "37:   const { isCustomStatus, customColumnList } = reactData",
          "38:   const customOpts = $xeTable.computeCustomOpts",
          "41:   const isMaxFixedColumn = $xeTable.computeIsMaxFixedColumn",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:   const footerSlot = slots.footer",
          "42:   const colVNs: any[] = []",
          "43:   const customWrapperOns: any = {}",
          "45:   if (trigger === 'hover') {",
          "46:     customWrapperOns.mouseenter = _vm.handleWrapperMouseenterEvent",
          "47:     customWrapperOns.mouseleave = _vm.handleWrapperMouseleaveEvent",
          "48:   }",
          "51:   const params = {",
          "52:     $table: $xeTable,",
          "53:     $grid: $xeTable.xegrid,",
          "54:     columns: customColumnList,",
          "55:     isAllChecked,",
          "57:   }",
          "58:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "59:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "",
          "[Removed Lines]",
          "49:   const isAllChecked = customStore.isAll",
          "50:   const isAllIndeterminate = customStore.isIndeterminate",
          "56:     isAllIndeterminate",
          "",
          "[Added Lines]",
          "50:   const isAllChecked = customStore.isAll",
          "51:   const isAllIndeterminate = customStore.isIndeterminate",
          "52:   const dragColumn = _vm.dragColumn",
          "63:     isAllIndeterminate,",
          "64:     isCustomStatus",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:                 class: ['vxe-checkbox--icon', isIndeterminate ? getIcon().TABLE_CHECKBOX_INDETERMINATE : (isChecked ? getIcon().TABLE_CHECKBOX_CHECKED : getIcon().TABLE_CHECKBOX_UNCHECKED)]",
          "103:               })",
          "104:             ])",
          "106:           allowSort && column.level === 1",
          "107:             ? h('div', {",
          "108:               class: 'vxe-table-custom--sort-option'",
          "",
          "[Removed Lines]",
          "105:             : _e(),",
          "",
          "[Added Lines]",
          "113:             : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126:                 })",
          "127:               ])",
          "128:             ])",
          "130:           column.type === 'html'",
          "131:             ? h('div', {",
          "132:               key: '1',",
          "",
          "[Removed Lines]",
          "129:             : _e(),",
          "",
          "[Added Lines]",
          "137:             : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "175:                 }",
          "176:               })",
          "177:             ])",
          "179:         ])",
          "180:       )",
          "181:     }",
          "",
          "[Removed Lines]",
          "178:             : _e()",
          "",
          "[Added Lines]",
          "186:             : renderEmptyElement($xeTable)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "272:                   h(VxeUIButtonComponent, {",
          "273:                     props: {",
          "274:                       mode: 'text',",
          "276:                     },",
          "277:                     on: {",
          "278:                       click: _vm.resetCustomEvent",
          "",
          "[Removed Lines]",
          "275:                       content: customOpts.resetButtonText || getI18n('vxe.table.customRestore')",
          "",
          "[Added Lines]",
          "283:                       content: customOpts.resetButtonText || getI18n('vxe.table.customRestore'),",
          "284:                       disabled: !isCustomStatus",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "298:                       }",
          "299:                     }),",
          "300:                   customOpts.immediate",
          "302:                     : h(VxeUIButtonComponent, {",
          "303:                       props: {",
          "304:                         mode: 'text',",
          "",
          "[Removed Lines]",
          "301:                     ? _e()",
          "",
          "[Added Lines]",
          "310:                     ? renderEmptyElement($xeTable)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "324:   const VxeUITooltipComponent = VxeUI.getComponent<VxeTooltipComponent>('VxeTooltip')",
          "325:   const $xeTableCustomPanel = _vm",
          "327:   const $xeTable = _vm.$xeTable",
          "330:   const { mode, modalOptions, drawerOptions, allowVisible, allowSort, allowFixed, allowResizable, checkMethod, visibleMethod } = customOpts",
          "331:   const { maxFixedSize } = columnOpts",
          "332:   const resizableOpts = $xeTable.computeResizableOpts",
          "333:   const { minWidth: reMinWidth, maxWidth: reMaxWidth } = resizableOpts",
          "334:   const modalOpts = Object.assign({}, modalOptions)",
          "335:   const drawerOpts = Object.assign({}, drawerOptions)",
          "336:   const slots = customOpts.slots || {}",
          "337:   const headerSlot = slots.header",
          "338:   const topSlot = slots.top",
          "",
          "[Removed Lines]",
          "328:   const { _e, customStore } = _vm",
          "329:   const { resizable: allResizable, customOpts, customColumnList, columnOpts, isMaxFixedColumn } = $xeTable",
          "",
          "[Added Lines]",
          "336:   const props = _vm",
          "339:   const tableProps = $xeTable",
          "340:   const reactData = $xeTable",
          "342:   const { customStore } = props",
          "343:   const { resizable: allResizable } = tableProps",
          "344:   const { isCustomStatus, customColumnList } = reactData",
          "345:   const customOpts = $xeTable.computeCustomOpts",
          "347:   const columnOpts = $xeTable.computeColumnOpts",
          "353:   const isMaxFixedColumn = $xeTable.computeIsMaxFixedColumn",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "342:   const trVNs: VNode[] = []",
          "343:   const isAllChecked = customStore.isAll",
          "344:   const isAllIndeterminate = customStore.isIndeterminate",
          "345:   const params = {",
          "346:     $table: $xeTable,",
          "347:     $grid: $xeTable.xegrid,",
          "348:     columns: customColumnList,",
          "349:     isAllChecked,",
          "351:   }",
          "352:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "353:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "",
          "[Removed Lines]",
          "350:     isAllIndeterminate",
          "",
          "[Added Lines]",
          "363:   const dragColumn = _vm.dragColumn",
          "369:     isAllIndeterminate,",
          "370:     isCustomStatus",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "418:                 })",
          "419:               ])",
          "420:             ])",
          "422:           allowSort",
          "423:             ? h('td', {",
          "424:               class: 'vxe-table-custom-popup--column-item col--sort'",
          "",
          "[Removed Lines]",
          "421:             : _e(),",
          "",
          "[Added Lines]",
          "441:             : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "444:                 ])",
          "445:                 : h('span', '-')",
          "446:             ])",
          "448:           h('td', {",
          "449:             class: 'vxe-table-custom-popup--column-item col--name'",
          "450:           }, [",
          "",
          "[Removed Lines]",
          "447:             : _e(),",
          "",
          "[Added Lines]",
          "467:             : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "491:                     : renderEmptyElement($xeTableCustomPanel)",
          "492:                   )",
          "493:             ])",
          "495:           allowFixed",
          "496:             ? h('td', {",
          "497:               class: 'vxe-table-custom-popup--column-item col--fixed'",
          "",
          "[Removed Lines]",
          "494:             : _e(),",
          "",
          "[Added Lines]",
          "514:             : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "517:                   }",
          "518:                 })",
          "519:             ])",
          "521:         ])",
          "522:       )",
          "523:     }",
          "",
          "[Removed Lines]",
          "520:             : _e()",
          "",
          "[Added Lines]",
          "540:             : renderEmptyElement($xeTable)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "545:                 ? h('col', {",
          "546:                   class: 'vxe-table-custom-popup--table-col-seq'",
          "547:                 })",
          "549:               allowSort",
          "550:                 ? h('col', {",
          "551:                   class: 'vxe-table-custom-popup--table-col-sort'",
          "552:                 })",
          "554:               h('col', {",
          "555:                 class: 'vxe-table-custom-popup--table-col-title'",
          "556:               }),",
          "",
          "[Removed Lines]",
          "548:                 : _e(),",
          "553:                 : _e(),",
          "",
          "[Added Lines]",
          "568:                 : renderEmptyElement($xeTable),",
          "573:                 : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "558:                 ? h('col', {",
          "559:                   class: 'vxe-table-custom-popup--table-col-width'",
          "560:                 })",
          "562:               allowFixed",
          "563:                 ? h('col', {",
          "564:                   class: 'vxe-table-custom-popup--table-col-fixed'",
          "565:                 })",
          "567:             ]),",
          "568:             h('thead', {}, [",
          "569:               h('tr', {}, [",
          "",
          "[Removed Lines]",
          "561:                 : _e(),",
          "566:                 : _e()",
          "",
          "[Added Lines]",
          "581:                 : renderEmptyElement($xeTable),",
          "586:                 : renderEmptyElement($xeTable)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "590:                       }, getI18n('vxe.toolbar.customAll'))",
          "591:                     ])",
          "592:                   ])",
          "594:                 allowSort",
          "595:                   ? h('th', {}, [",
          "596:                     h('span', {",
          "",
          "[Removed Lines]",
          "593:                   : _e(),",
          "",
          "[Added Lines]",
          "613:                   : renderEmptyElement($xeTable),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "613:                       })",
          "614:                       : renderEmptyElement($xeTableCustomPanel)",
          "615:                   ])",
          "617:                 h('th', {}, getI18n('vxe.custom.setting.colTitle')),",
          "618:                 allowResizable",
          "619:                   ? h('th', {}, getI18n('vxe.custom.setting.colResizable'))",
          "621:                 allowFixed",
          "622:                   ? h('th', {}, getI18n(`vxe.custom.setting.${maxFixedSize ? 'colFixedMax' : 'colFixed'}`, [maxFixedSize]))",
          "624:               ])",
          "625:             ]),",
          "626:             h('transition-group', {",
          "",
          "[Removed Lines]",
          "616:                   : _e(),",
          "620:                   : _e(),",
          "623:                   : _e()",
          "",
          "[Added Lines]",
          "636:                   : renderEmptyElement($xeTable),",
          "640:                   : renderEmptyElement($xeTable),",
          "643:                   : renderEmptyElement($xeTable)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "640:         h('div', {",
          "641:           ref: 'dragHintElemRef',",
          "642:           class: 'vxe-table-custom-popup--drag-hint'",
          "644:       ])",
          "645:     },",
          "646:     footer: () => {",
          "",
          "[Removed Lines]",
          "643:         }, getI18n('vxe.custom.cstmDragTarget', [_vm.dragColumn ? _vm.dragColumn.getTitle() : '']))",
          "",
          "[Added Lines]",
          "663:         }, getI18n('vxe.custom.cstmDragTarget', [dragColumn ? dragColumn.getTitle() : '']))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "652:       }, [",
          "653:         h(VxeUIButtonComponent, {",
          "654:           props: {",
          "656:           },",
          "657:           on: {",
          "658:             click: _vm.resetCustomEvent",
          "",
          "[Removed Lines]",
          "655:             content: customOpts.resetButtonText || getI18n('vxe.custom.cstmRestore')",
          "",
          "[Added Lines]",
          "675:             content: customOpts.resetButtonText || getI18n('vxe.custom.cstmRestore'),",
          "676:             disabled: !isCustomStatus",
          "",
          "---------------"
        ],
        "packages/table/src/body.ts||packages/table/src/body.ts": [
          "File: packages/table/src/body.ts -> packages/table/src/body.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:     if (editConfig) {",
          "408:       isNewRow = $xeTable.isInsertByRow(row)",
          "409:     }",
          "411:       rowChildren = row[childrenField]",
          "412:       isExpandTree = rowChildren && rowChildren.length && !!treeExpandedMaps[rowid]",
          "413:     }",
          "416:       trOn.dragstart = (evnt: DragEvent) => {",
          "417:         $xeTable.handleRowDragDragstartEvent(evnt)",
          "418:       }",
          "",
          "[Removed Lines]",
          "410:     if (treeConfig && !scrollYLoad && !treeOpts.transform) {",
          "415:     if (rowOpts.drag && !rowLevel) {",
          "",
          "[Added Lines]",
          "410:     if (treeConfig && !scrollYLoad && !transform) {",
          "415:     if (rowOpts.drag && (!treeConfig || transform)) {",
          "",
          "---------------"
        ],
        "packages/table/src/cell.ts||packages/table/src/cell.ts": [
          "File: packages/table/src/cell.ts -> packages/table/src/cell.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:   const { treeConfig, dragConfig } = tableProps",
          "84:   const rowOpts = $table.computeRowOpts",
          "85:   const rowDragOpts = $table.computeRowDragOpts",
          "87:   const rVisibleMethod = visibleMethod || (dragConfig ? dragConfig.rowVisibleMethod : null)",
          "88:   const vns: any[] = XEUtils.isArray(content) ? content : [content]",
          "89:   if (dragSort && rowOpts.drag && ((showIcon || (dragConfig ? dragConfig.showRowIcon : false)) && (!rVisibleMethod || rVisibleMethod(params)))) {",
          "91:       vns.unshift(",
          "92:         renderCellDragIcon(h, params)",
          "93:       )",
          "",
          "[Removed Lines]",
          "86:   const { showIcon, visibleMethod } = rowDragOpts",
          "90:     if (!treeConfig || !level) {",
          "",
          "[Added Lines]",
          "86:   const { showIcon, isCrossDrag, visibleMethod } = rowDragOpts",
          "90:     if (treeConfig) {",
          "91:       if (isCrossDrag || !level) {",
          "92:         vns.unshift(",
          "93:           renderCellDragIcon(h, params)",
          "94:         )",
          "95:       }",
          "96:     } else {",
          "",
          "---------------"
        ],
        "packages/table/src/header.ts||packages/table/src/header.ts": [
          "File: packages/table/src/header.ts -> packages/table/src/header.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:       thOns.mousedown = (evnt: any) => $xetable.triggerHeaderCellMousedownEvent(evnt, params)",
          "50:     }",
          "53:       thOns.dragstart = $xetable.handleHeaderCellDragDragstartEvent",
          "54:       thOns.dragend = $xetable.handleHeaderCellDragDragendEvent",
          "55:       thOns.dragover = $xetable.handleHeaderCellDragDragoverEvent",
          "",
          "[Removed Lines]",
          "52:     if (columnOpts.drag && !column.parentId) {",
          "",
          "[Added Lines]",
          "52:     if (columnOpts.drag) {",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:   reactData.dragTipText = tipContent",
          "440: }",
          "443:   const reactData = $xeTable",
          "445:   const el = $xeTable.$refs.refElem as HTMLElement",
          "",
          "[Removed Lines]",
          "442: function showDropTip ($xeTable: any, evnt: DragEvent | MouseEvent, trEl: HTMLElement | null, thEl: HTMLElement | null, dragPos: string) {",
          "",
          "[Added Lines]",
          "442: function showDropTip ($xeTable: any, evnt: DragEvent | MouseEvent, trEl: HTMLElement | null, thEl: HTMLElement | null, showLine: boolean, dragPos: string) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "451:   if (trEl) {",
          "452:     const rdLineEl = $xeTable.$refs.refDragRowLineElem as HTMLElement",
          "453:     if (rdLineEl) {",
          "458:       }",
          "462:     }",
          "463:   } else if (thEl) {",
          "464:     const cdLineEl = $xeTable.$refs.refDragColLineElem as HTMLElement",
          "465:     if (cdLineEl) {",
          "470:       }",
          "474:     }",
          "475:   }",
          "476:   const rdTipEl = $xeTable.$refs.refDragTipElem as HTMLElement",
          "",
          "[Removed Lines]",
          "454:       const trRect = trEl.getBoundingClientRect()",
          "455:       let top = Math.max(1, trRect.y - wrapperRect.y)",
          "456:       if (dragPos === 'bottom') {",
          "457:         top = Math.min(wrapperRect.height - 1, trRect.y - wrapperRect.y + trRect.height)",
          "459:       rdLineEl.style.top = `${top}px`",
          "460:       rdLineEl.style.width = `${wrapperRect.width - scrollbarWidth}px`",
          "461:       rdLineEl.style.display = 'block'",
          "466:       const thRect = thEl.getBoundingClientRect()",
          "467:       let left = Math.max(1, thRect.x - wrapperRect.x)",
          "468:       if (dragPos === 'right') {",
          "469:         left = Math.min(wrapperRect.width - 2, thRect.x - wrapperRect.x + thRect.width)",
          "471:       cdLineEl.style.left = `${left}px`",
          "472:       cdLineEl.style.height = `${wrapperRect.height - scrollbarHeight}px`",
          "473:       cdLineEl.style.display = 'block'",
          "",
          "[Added Lines]",
          "454:       if (showLine) {",
          "455:         const trRect = trEl.getBoundingClientRect()",
          "456:         rdLineEl.style.display = 'block'",
          "457:         rdLineEl.style.top = `${Math.max(1, trRect.y - wrapperRect.y)}px`",
          "458:         rdLineEl.style.height = `${trRect.height}px`",
          "459:         rdLineEl.style.width = `${wrapperRect.width - scrollbarWidth}px`",
          "460:         rdLineEl.setAttribute('drag-pos', dragPos)",
          "461:       } else {",
          "462:         rdLineEl.style.display = ''",
          "468:       if (showLine) {",
          "469:         const thRect = thEl.getBoundingClientRect()",
          "470:         cdLineEl.style.display = 'block'",
          "471:         cdLineEl.style.left = `${Math.max(1, thRect.x - wrapperRect.x)}px`",
          "472:         cdLineEl.style.width = `${thRect.width}px`",
          "473:         cdLineEl.style.height = `${wrapperRect.height - scrollbarHeight}px`",
          "474:         cdLineEl.setAttribute('drag-pos', dragPos)",
          "475:       } else {",
          "476:         cdLineEl.style.display = ''",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "478:     rdTipEl.style.display = 'block'",
          "479:     rdTipEl.style.top = `${Math.min(el.clientHeight - el.scrollTop - rdTipEl.clientHeight, evnt.clientY - wrapperRect.y)}px`",
          "480:     rdTipEl.style.left = `${Math.min(el.clientWidth - el.scrollLeft - rdTipEl.clientWidth - 16, evnt.clientX - wrapperRect.x)}px`",
          "481:   }",
          "482: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "485:     rdTipEl.setAttribute('drag-status', showLine ? 'normal' : 'disabled')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "964:         cacheItem = { row, rowid, seq, index: -1, _index: -1, $index: -1, items, parent, level, height: 0 }",
          "965:       }",
          "966:       if (isSource) {",
          "967:         cacheItem.index = treeConfig && parent ? -1 : index",
          "968:         fullDataRowIdMaps[rowid] = cacheItem",
          "969:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "972:         cacheItem.level = level",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1663:       tableColumn: this.tableColumn.slice(0)",
          "1664:     }",
          "1665:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1675:   getFullColumns () {",
          "1676:     const $xeTable = this",
          "1677:     const internalData = $xeTable",
          "1679:     const { collectColumn } = internalData",
          "1680:     return collectColumn.slice(0)",
          "1681:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2016:       footerData: footerTableData.slice(0)",
          "2017:     }",
          "2018:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2038:   getFullData () {",
          "2039:     const $xeTable = this",
          "2040:     const props = $xeTable",
          "2041:     const internalData = $xeTable",
          "2043:     const { treeConfig } = props",
          "2044:     const { tableFullData, tableFullTreeData } = internalData",
          "2045:     if (treeConfig) {",
          "2046:       const treeOpts = $xeTable.computeTreeOpts",
          "2047:       const { transform, mapChildrenField } = treeOpts",
          "2048:       const childrenField = treeOpts.children || treeOpts.childrenField",
          "2049:       if (transform) {",
          "2050:         return XEUtils.toArrayTree(",
          "2051:           XEUtils.toTreeArray(tableFullTreeData, {",
          "2052:             children: mapChildrenField",
          "2053:           }),",
          "2054:           { children: childrenField }",
          "2055:         )",
          "2056:       }",
          "2057:       return tableFullTreeData.slice(0)",
          "2058:     }",
          "2059:     return tableFullData.slice(0)",
          "2060:   },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2218:     return this.refreshColumn(true)",
          "2219:   },",
          "2220:   handleCustomRestore (storeData: any) {",
          "2222:     const { resizableData, sortData, visibleData, fixedData } = storeData",
          "2223:     let hasCustomSort = false",
          "",
          "[Removed Lines]",
          "2221:     let { collectColumn } = this",
          "",
          "[Added Lines]",
          "2263:     const $xetable = this",
          "2264:     const reactData = $xetable",
          "2265:     const internalData = $xetable",
          "2267:     let { collectColumn } = internalData",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2246:       if (hasCustomSort) {",
          "2247:         collectColumn = XEUtils.orderBy(collectColumn, 'renderSortNumber')",
          "2250:       }",
          "2251:     }",
          "2252:   },",
          "",
          "[Removed Lines]",
          "2248:         this.collectColumn = collectColumn",
          "2249:         this.tableFullColumn = getColumnList(collectColumn)",
          "",
          "[Added Lines]",
          "2294:         internalData.collectColumn = collectColumn",
          "2295:         internalData.tableFullColumn = getColumnList(collectColumn)",
          "2297:       reactData.isCustomStatus = true",
          "2298:     } else {",
          "2299:       reactData.isCustomStatus = false",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4999:     const { treeConfig, dragConfig } = props",
          "5000:     const rowDragOpts = $xeTable.computeRowDragOpts",
          "5002:     const treeOpts = $xeTable.computeTreeOpts",
          "5004:     const { dragRow } = reactData",
          "5006:     const dEndMethod = dragEndMethod || (dragConfig ? dragConfig.dragEndMethod : null)",
          "5007:     const dragOffsetIndex = prevDragPos === 'bottom' ? 1 : 0",
          "5008:     if (prevDragRow && dragRow) {",
          "",
          "[Removed Lines]",
          "5001:     const { dragEndMethod } = rowDragOpts",
          "5003:     const { transform } = treeOpts",
          "5005:     const { afterFullData, afterTreeFullData, tableFullData, tableFullTreeData, prevDragRow, prevDragPos } = internalData",
          "",
          "[Added Lines]",
          "5050:     const { fullAllDataRowIdData } = internalData",
          "5051:     const { isCrossDrag, isSelfToChildDrag, dragEndMethod } = rowDragOpts",
          "5053:     const { transform, mapChildrenField, parentField } = treeOpts",
          "5054:     const childrenField = treeOpts.children || treeOpts.childrenField",
          "5056:     const { afterFullData, tableFullData, prevDragRow, prevDragPos } = internalData",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5025:           let oafIndex = -1",
          "5026:           let nafIndex = -1",
          "5027:           if (treeConfig) {",
          "5041:           } else {",
          "5043:             oafIndex = $xeTable.findRowIndexOf(afterFullData, dragRow)",
          "5044:             const otfIndex = $xeTable.findRowIndexOf(tableFullData, dragRow)",
          "5045:             afterFullData.splice(oafIndex, 1)",
          "5046:             tableFullData.splice(otfIndex, 1)",
          "5048:             const pafIndex = $xeTable.findRowIndexOf(afterFullData, prevDragRow)",
          "5049:             const ptfIndex = $xeTable.findRowIndexOf(tableFullData, prevDragRow)",
          "5050:             nafIndex = pafIndex + dragOffsetIndex",
          "",
          "[Removed Lines]",
          "5029:             oafIndex = $xeTable.findRowIndexOf(afterTreeFullData, dragRow)",
          "5030:             const otfIndex = $xeTable.findRowIndexOf(tableFullTreeData, dragRow)",
          "5031:             afterTreeFullData.splice(oafIndex, 1)",
          "5032:             tableFullTreeData.splice(otfIndex, 1)",
          "5035:             const pafIndex = $xeTable.findRowIndexOf(afterTreeFullData, prevDragRow)",
          "5036:             const ptfIndex = $xeTable.findRowIndexOf(tableFullTreeData, prevDragRow)",
          "5037:             nafIndex = pafIndex + dragOffsetIndex",
          "5038:             const ntfIndex = ptfIndex + dragOffsetIndex",
          "5039:             afterTreeFullData.splice(nafIndex, 0, dragRow)",
          "5040:             tableFullTreeData.splice(ntfIndex, 0, dragRow)",
          "",
          "[Added Lines]",
          "5080:             if (transform) {",
          "5082:               const oldRowid = getRowid($xeTable, dragRow)",
          "5083:               const oldRest = fullAllDataRowIdData[oldRowid]",
          "5084:               const newRowid = getRowid($xeTable, prevDragRow)",
          "5085:               const newRest = fullAllDataRowIdData[newRowid]",
          "5086:               if (oldRest && newRest) {",
          "5087:                 const { level: oldLevel } = oldRest",
          "5088:                 const { level: newLevel } = newRest",
          "5090:                 const oldAllMaps: Record<string, any> = {}",
          "5091:                 XEUtils.eachTree([dragRow], item => {",
          "5092:                   oldAllMaps[getRowid($xeTable, item)] = item",
          "5093:                 }, { children: mapChildrenField })",
          "5095:                 let isSelfToChildStatus = false",
          "5097:                 if (oldLevel && newLevel) {",
          "5100:                   if (!isCrossDrag) {",
          "5101:                     return",
          "5102:                   }",
          "5103:                   if (oldAllMaps[newRowid]) {",
          "5104:                     if (!isSelfToChildDrag) {",
          "5105:                       isSelfToChildStatus = true",
          "5106:                       if (VxeUI.modal) {",
          "5107:                         VxeUI.modal.message({",
          "5108:                           status: 'error',",
          "5109:                           content: getI18n('vxe.error.treeDragChild')",
          "5110:                         })",
          "5111:                       }",
          "5112:                       return",
          "5113:                     }",
          "5114:                   }",
          "5115:                 } else if (oldLevel) {",
          "5118:                   if (!isCrossDrag) {",
          "5119:                     return",
          "5120:                   }",
          "5121:                 } else if (newLevel) {",
          "5124:                   if (!isCrossDrag) {",
          "5125:                     return",
          "5126:                   }",
          "5127:                   if (oldAllMaps[newRowid]) {",
          "5128:                     isSelfToChildStatus = true",
          "5129:                     if (!isSelfToChildDrag) {",
          "5130:                       if (VxeUI.modal) {",
          "5131:                         VxeUI.modal.message({",
          "5132:                           status: 'error',",
          "5133:                           content: getI18n('vxe.error.treeDragChild')",
          "5134:                         })",
          "5135:                       }",
          "5136:                       return",
          "5137:                     }",
          "5138:                   }",
          "5139:                 } else {",
          "5141:                 }",
          "5143:                 const fullList = XEUtils.toTreeArray(internalData.afterTreeFullData, { children: childrenField })",
          "5146:                 const otfIndex = $xeTable.findRowIndexOf(fullList, dragRow)",
          "5147:                 fullList.splice(otfIndex, 1)",
          "5150:                 const ptfIndex = $xeTable.findRowIndexOf(fullList, prevDragRow)",
          "5151:                 const ntfIndex = ptfIndex + dragOffsetIndex",
          "5152:                 fullList.splice(ntfIndex, 0, dragRow)",
          "5155:                 if (isSelfToChildStatus && isSelfToChildDrag) {",
          "5156:                   XEUtils.each(dragRow[childrenField], childRow => {",
          "5157:                     childRow[parentField] = dragRow[parentField]",
          "5158:                   })",
          "5159:                 }",
          "5160:                 dragRow[parentField] = prevDragRow[parentField]",
          "5162:                 internalData.tableFullTreeData = XEUtils.toArrayTree(fullList, {",
          "5163:                   key: treeOpts.rowField,",
          "5164:                   parentKey: treeOpts.parentField,",
          "5165:                   children: childrenField,",
          "5166:                   mapChildren: treeOpts.mapChildrenField",
          "5167:                 })",
          "5168:               }",
          "5169:             }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5054:           }",
          "5056:           reactData.isDragRowMove = true",
          "5059:           $xeTable.handleTableData(treeConfig && transform)",
          "5060:           if (!(treeConfig && transform)) {",
          "5061:             $xeTable.updateAfterDataIndex()",
          "5062:           }",
          "",
          "[Removed Lines]",
          "5057:           $xeTable.cacheRowMap()",
          "5058:           $xeTable.updateScrollYStatus()",
          "",
          "[Added Lines]",
          "5187:           $xeTable.cacheRowMap(true)",
          "5188:           $xeTable.updateScrollYStatus()",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5072:           $xeTable.dispatchEvent('row-dragend', {",
          "5073:             oldRow: dragRow,",
          "5074:             newRow: prevDragRow,",
          "5076:             offsetIndex: dragOffsetIndex,",
          "5077:             _index: {",
          "5078:               newIndex: nafIndex,",
          "",
          "[Removed Lines]",
          "5075:             dragPos: prevDragPos,",
          "",
          "[Added Lines]",
          "5204:             dragPos: prevDragPos as any,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5093:   },",
          "5094:   handleRowDragDragoverEvent (evnt: DragEvent) {",
          "5095:     const $xeTable = this",
          "5096:     const internalData = $xeTable",
          "5097:     const reactData = $xeTable",
          "5099:     const { dragRow } = reactData",
          "5100:     if (!dragRow) {",
          "5101:       evnt.preventDefault()",
          "5102:       return",
          "5103:     }",
          "5104:     const trEl = evnt.currentTarget as HTMLElement",
          "5109:       evnt.preventDefault()",
          "5110:       const { dragRow } = reactData",
          "5111:       const offsetY = evnt.clientY - trEl.getBoundingClientRect().y",
          "5112:       const dragPos = offsetY < trEl.clientHeight / 2 ? 'top' : 'bottom'",
          "5113:       internalData.prevDragRow = row",
          "5114:       internalData.prevDragPos = dragPos",
          "5116:       $xeTable.dispatchEvent('row-dragover', {",
          "5117:         oldRow: dragRow,",
          "5118:         targetRow: row,",
          "",
          "[Removed Lines]",
          "5105:     const rowid = trEl.getAttribute('rowid')",
          "5106:     const row = $xeTable.getRowById(rowid)",
          "5107:     if (row) {",
          "5108:       evnt.preventDefault()",
          "5115:       showDropTip($xeTable, evnt, trEl, null, dragPos)",
          "",
          "[Added Lines]",
          "5225:     const props = $xeTable",
          "5229:     const { treeConfig } = props",
          "5230:     const { fullAllDataRowIdData } = internalData",
          "5232:     const rowDragOpts = $xeTable.computeRowDragOpts",
          "5233:     const { isCrossDrag } = rowDragOpts",
          "5239:     const rowid = trEl.getAttribute('rowid') || ''",
          "5240:     const rest = fullAllDataRowIdData[rowid]",
          "5241:     if (rest) {",
          "5242:       const row = rest.row",
          "5247:       if ($xeTable.eqRow(dragRow, row) || (!isCrossDrag && treeConfig && rest.level)) {",
          "5248:         showDropTip($xeTable, evnt, trEl, null, false, dragPos)",
          "5249:         return",
          "5250:       }",
          "5253:       showDropTip($xeTable, evnt, trEl, null, true, dragPos)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5276:       const { dragCol } = reactData",
          "5277:       const offsetX = evnt.clientX - thEl.getBoundingClientRect().x",
          "5278:       const dragPos = offsetX < thEl.clientWidth / 2 ? 'left' : 'right'",
          "5279:       internalData.prevDragCol = column",
          "5280:       internalData.prevDragPos = dragPos",
          "5282:       $xeTable.dispatchEvent('column-dragover', {",
          "5283:         oldColumn: dragCol,",
          "5284:         targetColumn: column,",
          "",
          "[Removed Lines]",
          "5281:       showDropTip($xeTable, evnt, null, thEl, dragPos)",
          "",
          "[Added Lines]",
          "5417:       if (dragCol.id === column.id || column.parentId) {",
          "5418:         showDropTip($xeTable, evnt, null, thEl, false, dragPos)",
          "5419:         return",
          "5420:       }",
          "5423:       showDropTip($xeTable, evnt, null, thEl, true, dragPos)",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import type { VxeLoadingComponent, VxeTooltipComponent, VxeTabsConstructor, VxeTabsPrivateMethods } from 'vxe-pc-ui'",
          "",
          "[Removed Lines]",
          "28: const { getConfig, getI18n, renderer, globalResize, globalEvents, globalMixins, renderEmptyElement } = VxeUI",
          "",
          "[Added Lines]",
          "28: const { getConfig, getIcon, getI18n, renderer, globalResize, globalEvents, globalMixins, renderEmptyElement } = VxeUI",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121: }",
          "123: const renderDragTip = (h: CreateElement, $xeTable: any) => {",
          "124:   const rowOpts = $xeTable.computeRowOpts",
          "125:   const columnOpts = $xeTable.computeColumnOpts",
          "127:   if (rowOpts.drag || columnOpts.drag) {",
          "128:     return h('div', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:   const reactData = $xeTable",
          "126:   const { dragRow } = reactData",
          "129:   const rowDragOpts = $xeTable.computeRowDragOpts",
          "130:   const columnDragOpts = $xeTable.computeColumnDragOpts",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:     }, [",
          "131:       h('div', {",
          "132:         ref: 'refDragRowLineElem',",
          "134:       }),",
          "135:       h('div', {",
          "136:         ref: 'refDragColLineElem',",
          "138:       }),",
          "139:       h('div', {",
          "140:         ref: 'refDragTipElem',",
          "141:         class: 'vxe-table--drag-sort-tip'",
          "143:     ])",
          "144:   }",
          "145:   return renderEmptyElement($xeTable)",
          "",
          "[Removed Lines]",
          "133:         class: 'vxe-table--drag-row-line'",
          "137:         class: 'vxe-table--drag-col-line'",
          "142:       }, renderDragTipContents(h, $xeTable))",
          "",
          "[Added Lines]",
          "138:         class: ['vxe-table--drag-row-line', {",
          "139:           'is--guides': rowDragOpts.showGuidesStatus",
          "140:         }]",
          "144:         class: ['vxe-table--drag-col-line', {",
          "145:           'is--guides': columnDragOpts.showGuidesStatus",
          "146:         }]",
          "151:       }, [",
          "152:         h('div', {",
          "153:           class: 'vxe-table--drag-sort-tip-wrapper'",
          "154:         }, [",
          "155:           h('div', {",
          "156:             class: 'vxe-table--drag-sort-tip-status'",
          "157:           }, [",
          "158:             h('span', {",
          "159:               class: ['vxe-table--drag-sort-tip-normal-status', dragRow ? getIcon().TABLE_DRAG_STATUS_ROW : getIcon().TABLE_DRAG_STATUS_COLUMN]",
          "160:             }),",
          "161:             h('span', {",
          "162:               class: ['vxe-table--drag-sort-tip-disabled-status', getIcon().TABLE_DRAG_DISABLED]",
          "163:             })",
          "164:           ]),",
          "165:           h('div', {",
          "166:             class: 'vxe-table--drag-sort-tip-content'",
          "167:           }, renderDragTipContents(h, $xeTable))",
          "168:         ])",
          "169:       ])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "400:       },",
          "402:       scrollVMLoading: false,",
          "403:       isDragRowMove: false,",
          "404:       dragRow: null,",
          "405:       isDragColMove: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:       isCustomStatus: false,",
          "",
          "---------------"
        ],
        "packages/ui/index.ts||packages/ui/index.ts": [
          "File: packages/ui/index.ts -> packages/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:   TABLE_MENU_OPTIONS: iconPrefix + 'arrow-right',",
          "258:   TABLE_DRAG_ROW: iconPrefix + 'drag-handle',",
          "259:   TABLE_DRAG_COLUMN: iconPrefix + 'drag-handle',",
          "262:   TOOLBAR_TOOLS_REFRESH: iconPrefix + 'repeat',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260:   TABLE_DRAG_STATUS_ROW: iconPrefix + 'sort',",
          "261:   TABLE_DRAG_STATUS_COLUMN: iconPrefix + 'swap',",
          "262:   TABLE_DRAG_DISABLED: iconPrefix + 'no-drop',",
          "",
          "---------------"
        ],
        "styles/components/icon.scss||styles/components/icon.scss": [
          "File: styles/components/icon.scss -> styles/components/icon.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: @font-face {",
          "6:   font-family: \"vxetableiconfont\";",
          "7:   src:",
          "9: }",
          "11: @keyframes rollCircle {",
          "",
          "[Removed Lines]",
          "8:        url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2');",
          "",
          "[Added Lines]",
          "8:        url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAA14AAsAAAAAHDQAAA0pAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHFQGYACHPgqiNJwqATYCJAN8C0AABCAFhUcHg04bJhgzUpNCIPs/JWg5JswO3qoEHJLKVCM16CgJ4I6pjfSWc+fSs724PLF0xRx8eBf6/enRmbpga7OybSglD9Ta7+1+MYuYTBfNPwWaRyoJYiQF8t0BjaEDAtmZk94FsHXjD7TNf3Bg3xHWPKKsJOeBlYviwArsYF/7x7JYBi6icdX1QRlbam0HbRBN7vr9AuHAqYKMHLR7P2mdtD58SKOGqdMhFZ4+eUuyJuuh8j98AYcYuLbM3lVFZ+bui3yb5qsOB8sdH9gly/LNqAgfp2JMjE0DBBDMRdgGOuzZgf6a67XZX2bXzE2KryzUGVfhK8xuDjfZgz3GD1RiGA8oP0JSBFdZYUm4ugqHwlfrCmnrxjTatS9QWbkMxpYefPR0GF+UnYt8FQFVh/7kVeJgLTRv8xurYUozTw88Vgy3ZSX5UN565QNGBWVnMWqXecK7AvE1nsab9+XDj+PxiAo5zMdaFycY4OMp5SJd/13kPr1ktwmajiggh92K+eJNcDacQe5Gdz21qvvzz4cBHNvSuk8xFWSoNNXa9ZoS1kZxpZRZYSeefZqjz99v5O5+qX/xtVqJjl732VViR5rnHxxb6N3n+x/wMDCIxpS8iimjrTPWskpqgole1tDUEs0sTXgLa4QiWL4O4ZlWLpFQGDBAggN9JEFAlWQoMEaSBuRIqoE8STtQIelVZMWmACiQYkAbqQ/QRRoHDJGmAB2kmUCRtBAokZ7gamCfAASyo8AE2Wugh+wNUCd7CzTI3gFNsvdAi69ILnpsF7gZ2G4Ac3ynAiP8LAbK/OIWYLGWJbByujiBNSjcgVIH0/FHabT65cJRnqGaI0DNS4Ygp6QWo7JA6xiM+n46qk+j8Ex8jkaltg7hOli9qAOGaO1olPtN4dCMlqULY+yrLN7o1fTZP1/rpGU1cRugDm7U7XyfWKhd3mjY1UA8FyEutdsjAW4WHoTMPY2FI+n2ouLCauZhrl1wiLsq8RZkByy1kVEKT3Iz5eiUZAONZHSix55r3FGopAi1wsLo6uHKJZdFQr7ojAzPI4v7IFmgBlqZ/nPUi4iFqI6/AKUvcaN4DctZOKjbI3Ilv1XiqcVobvbVpw9bcnZb0RMBlXK6lUe4m4ebVwyo3+VLPkB9HkLIdo8dgZEaQXbrGeJ/NF+aZZlIEkC3DB/MRL3SsBKmiFUJ/Xp6eRzTJBFZxtI0d1+aprsKjWPSCBtgKKgEDdadZSH3aSAiAlqPHEnDiVJux9Ug+49xOYu6QNdX2XDuAlgkVgP/cgeU3v3aGvz7/S6q/963kkmMomHVl9UNMFRIWSBBro4wBoiABO4l7YSgQU8bktR6Z68Djdl6T5FC2x+W845Qi96oVXC5lLNHinePnf/L5kHpgq6MXc7ZNJheL1NkEeP2Jn0XCWF520cB0kOe46gvSI1iAUg/cN2WomoeRmCJTgK92JwW3nOAsnJKAsLIcKRjUYay2JfLRe5LCftyCfxqw4CRWvAsayBPkh2NW4X+8ehfgf6nuv4ha2RLroxusBFXTBeWF8LbC6XS4N/uwRQ5Gs72SN/5ggYLVytf7IWyJIGcDzMq92S6fZn+4f/Yf/G3m/+hf8V/9q94tZ+Q+e40JGc97X9pifMFks+Zc2gpyr80jaekkDSieSzk0os4TqegkEUOyeaUI8NDo7LVF3bxJzfozafi+e2FwE67ZnG3U9rdzj4ZFYzaF7OaRQC2K4WmtWA1izpAgSWyLGsFjng/sJwJFzlFyqZ/CpYbTlHWIpR3QzkNFqzhN6A1dH+FPizZUgvryhVNd7mnepvJ4+3Eg3Bys4e77vkMZ+SyYSD+QNJfrNEL5PMR4k1Bk0vzKwGNPeqAPr/YsGzkisb7BsGo5WSKNL395d7mC910ull/rQDociXXKMh3MsU1htaiYu0M71lus3DdQn/dLAeHrfgsSre7fjz4qly9HroWuJL7EkiDbmmkbtZ2B22Xq0lVifQaHmmKXb7CXV9UXDqCUd667aSJ3HtW1b4P7YzwbsEQGklLoWlp9zbc8Uy1SbPXnUbmBWlRHu9ghNEB2+6st6vRPf0y1g1KsA22P+PAwvYVPxRzkU+/jnEDE+z4aQd8FPYAMeU5wZmBkSOiR/qdxYvwgtih8UPzfGtDWhmNWHZiflLOA0YL1piYk5xXEzJKTN8SUZImI8PCSJn+rCwtTEtK79BZvczyCzozkiTDnmXLTsyskJv4cbw1CkWJrMHREZSHxmMyjKTT0cfSJCbjkpTorbAPI0V9QoIP8oot+ndAjHYM0/5f0XQyKkr+9GlLVZUsOjZhszrcJIwXmsLViSwQItHGUo1BrTZoSj8K221Q33v+SCtarS57fK2Xi0/cs86NrUTFuBhVShoey2DNBBqGz9+F+zb7amoF+Cen+Ou0uH9KoLDmiDj9kZHGkoEEIZQMLCEGEiVbltK20zWlnTFQKh2Ydh5bxp7P00gJLyBdu06WHEy3HYKjt2YnrGVlwXS4xQfNdLe6Z1VPncZI4JN8LT8hGX1jN9euS0U9Gc/s4qZ7E2wN8lJp7XIvfqfTWYsn07yCoqNAIYldJoi4xM/SSxGCZfxDgNH2ql3nzw0b1tXl5DRsKNAKidHL86OTIKMGwbLSQWpOiKZ8aoWmYqpawwnukPpQZITKDz49tTURHeoK9cq3NE3NQ4Ldll4D1qCmQiJv4MA8ovClMHCfuZB4KS1hO8q3RC+dVoIUS55EZ9ZLz1JtIO/RTmFYxiW3lbi1JLWNs4Bi47mPtTxRhnpxODWtLWl1293eVqslN7vBxpttSUFWRRTWbRlsL6CM3FJb7t83+WqcOUf52kUbyxHjJvSDMOcaOGP5RzNaHzeB37XNqIiznoyJcBHGH8xRrz92fOgWjI2zMUzisNHN8gFiOZsxFkckYmwOC0NjzzwndHwu7AHqAunByHTfWG/vWF/jPEOsty93XecUn2KfdKYJiGW0OazAwKMeo+ttmX3z5u1m+kIjKwp3wmEfXZT7VbgNpeAUdF1sbLPUdafGtoq+1ghjvqKAOvJtO6LwPo+5fn2MB8tjzOHD/ZZdJ8Wj9c6dMTDqjYSSSAH4qDU3BLUoqZUSZiLIma8ZRWR5KabrODErgfofSa4BH5q4GnR2VlcnJm4zcWmDsNjbKKD5p0omhZtgirqyipi4QNi4NZpgElE8ZgDFY8zb1tAeMEozs8Ja/pl4tm+U9kBr6Nu9eeDE8mA5mZ1YoygTLGHOykLvQqW3c6xZ8zgjlXGqMfu+YIvECl1Pu5L2zZMNnw0QvgTB4tHtdB39upHejsZzQN7p6HVCSF11r1eveoLKuXL02f5XjRFIOXMfPTRxTQ8fmjmSg6A+TN3Oj0aNZkubCz3f9e7e8zTG7u5eA5tt6O0+zcROvRmRT4+xWMyzUYI1cSbq8ra11WjcMwxWfSstKy/zZwv2mfsJFTLUP2AI0rCs33zrA9uhBp05kUWgsy1mS0w+fcSbUxjzdG8322Bgd/fuZtDO773rSs93aTNbjGg0f3t79O7sFnsL7o80FdXYJI4dhbPveOppyn1SIFjX00nZZ/jPp2yNofvDrX7zsoahSIA/MkRFmPv3Cdg1Dmj6dWOT2iXuU06vLu1j0FAsE82vuEbro/V2Wq3/A+vlg0igJ1oaEbm47xwyVDw6FXEWDx5ConGdegCJgnjiNqIS9x9GYsXjuxHi0y6uR4IBAJAiqtZYiHqZ+oRk2eegFTLMGLUN4dKfWanhWfc5Ip5kIErDOSn1Tvw/akUQiqu4tRdh8qceRSI9erhqrniY/11qCkor271zGZovdo5/Ql3yyHizm2Ss++hM88vxqMyoAP8c5bK2HD/Gt3DOwWY6M9u1x98OU0UMGx92yyQgWocA/xklO3/VdfSRZYcyOfNGkmxJJIXpFul+I8lwlCpZTG9SFAC6T5x9Q1BWAZz9GBKF0K9EhXkhIYT+Bdqw3CU6t1TURtdviORAV9TmyLsjdwxawKpmrrwhdNpQJjMQ3QTgb/YZ2hI0q7aIz/kOnD2hGtR9dfUTIHAe7eRJOxRxyjFF9fjyeBACqcQ0BiN1J5JGvZ7T6a4NxaU7DGgCWEpj7izoGQS5xcXEDHhlWiPcthhEnzfhVtmcn8YRt4vSd1rBMs/fOWWg1k+AnlRMtMWG0Hwe1RqWCUcxyrQqUh5JGASrgihJ39gYMEStS1CWjPTInlxUtS7eEWeiyrjeqvnwm6hS0w3TUrbjej/72/1Y2Jy5cOXG3QedJjgOLh4+AWGsfapT/pDEsolUWaa0BtbL2VeBLJ6wMp5NgMr5EPZZW0+V6cB8gj3hTL4zryf2KOenNzTTd7VvShaKlaFQIh7G9BfcNrljNINUlqa4dY+VtHutYt92EqQpgJMdV0LIhgFwK3r0kVzASX62zNbYcAURwtZ6tUDabubkhWV5VzPT9OWpNhgSaNm1rNuq02gDXGSyuEcLApy+T0vTIxslkfSh87MaydUwqXbZ4dnR3ZSySb/rruBZWgIAAA==') format('woff2');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:   }",
          "80: }",
          "82: .vxe-table-icon-edit:before {",
          "83:   content: \"\\e66e\";",
          "84: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: .vxe-table-icon-swap:before {",
          "83:   content: \"\\e7f3\";",
          "84: }",
          "86: .vxe-table-icon-sort:before {",
          "87:   content: \"\\e93e\";",
          "88: }",
          "90: .vxe-table-icon-no-drop:before {",
          "91:   content: \"\\e658\";",
          "92: }",
          "",
          "---------------"
        ],
        "styles/components/table.scss||styles/components/table.scss": [
          "File: styles/components/table.scss -> styles/components/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1279:   .vxe-table--drag-col-line {",
          "1280:     height: 100%;",
          "1281:     width: 1px;",
          "1283:   }",
          "1284:   .vxe-header--column,",
          "1285:   .vxe-body--column,",
          "",
          "[Removed Lines]",
          "1282:     background-color: var(--vxe-ui-font-primary-color);",
          "",
          "[Added Lines]",
          "1282:     border: 2px solid transparent;",
          "1283:     &[drag-pos=\"left\"] {",
          "1284:       border-left-color: var(--vxe-ui-font-primary-color);",
          "1285:     }",
          "1286:     &[drag-pos=\"right\"] {",
          "1287:       border-right-color: var(--vxe-ui-font-primary-color);",
          "1288:     }",
          "1289:     &.is--guides {",
          "1290:       background-color: var( --vxe-ui-table-drag-over-background-color);",
          "1291:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1327:   .vxe-table--drag-row-line {",
          "1328:     width: 100%;",
          "1329:     height: 1px;",
          "1331:   }",
          "1332:   .vxe-body--row {",
          "1333:     &.row--drag-origin {",
          "",
          "[Removed Lines]",
          "1330:     background-color: var(--vxe-ui-font-primary-color);",
          "",
          "[Added Lines]",
          "1339:     border: 2px solid transparent;",
          "1340:     &[drag-pos=\"top\"] {",
          "1341:       border-top-color: var(--vxe-ui-font-primary-color);",
          "1342:     }",
          "1343:     &[drag-pos=\"bottom\"] {",
          "1344:       border-bottom-color: var(--vxe-ui-font-primary-color);",
          "1345:     }",
          "1346:     &.is--guides {",
          "1347:       background-color: var( --vxe-ui-table-drag-over-background-color);",
          "1348:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1346:     position: absolute;",
          "1347:     top: 0;",
          "1348:     left: 0;",
          "1350:     max-width: 50%;",
          "1351:     min-width: 100px;",
          "1352:     border-radius: var(--vxe-ui-border-radius);",
          "",
          "[Removed Lines]",
          "1349:     padding: 0.6em 1em 0.6em 1.6em;",
          "",
          "[Added Lines]",
          "1367:     padding: 0.6em 1.4em;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1358:     background-color: var(--vxe-ui-layout-background-color);",
          "1359:     box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);",
          "1360:     z-index: 33;",
          "1361:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1379:     &[drag-status=\"normal\"] {",
          "1380:       .vxe-table--drag-sort-tip-normal-status {",
          "1381:         display: block;",
          "1382:       }",
          "1383:     }",
          "1384:     &[drag-status=\"disabled\"] {",
          "1385:       .vxe-table--drag-sort-tip-disabled-status {",
          "1386:         display: block;",
          "1387:       }",
          "1388:     }",
          "1389:   }",
          "1390:   .vxe-table--drag-sort-tip-wrapper {",
          "1391:     display: flex;",
          "1392:     flex-direction: row;",
          "1393:     align-items: center;",
          "1394:   }",
          "1395:   .vxe-table--drag-sort-tip-status {",
          "1396:     padding-right: 0.4em;",
          "1397:   }",
          "1398:   .vxe-table--drag-sort-tip-disabled-status {",
          "1399:     display: none;",
          "1400:     flex-shrink: 0;",
          "1401:     color: var(--vxe-ui-status-error-color)",
          "1402:   }",
          "1403:   .vxe-table--drag-sort-tip-normal-status {",
          "1404:     display: none;",
          "1405:   }",
          "1406:   .vxe-table--drag-sort-tip-content {",
          "1407:     flex-grow: 1;",
          "1408:     overflow: hidden;",
          "1409:     text-overflow: ellipsis;",
          "1410:     white-space: nowrap;",
          "",
          "---------------"
        ],
        "styles/theme/dark.scss||styles/theme/dark.scss": [
          "File: styles/theme/dark.scss -> styles/theme/dark.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   --vxe-ui-table-row-current-background-color: #18222c;",
          "42:   --vxe-ui-table-row-hover-current-background-color: #262727;",
          "43:   --vxe-ui-table-fixed-scrolling-box-shadow-color: rgba(0, 0, 0, 0.8);",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   --vxe-ui-table-drag-over-background-color:rgba(48, 48, 0, 0.3);",
          "",
          "---------------"
        ],
        "styles/theme/light.scss||styles/theme/light.scss": [
          "File: styles/theme/light.scss -> styles/theme/light.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   --vxe-ui-table-row-current-background-color: #{light_variable.$vxe-ui-table-row-current-background-color};",
          "38:   --vxe-ui-table-row-hover-current-background-color: #{light_variable.$vxe-ui-table-row-hover-current-background-color};",
          "39:   --vxe-ui-table-fixed-scrolling-box-shadow-color: #{light_variable.$vxe-ui-table-fixed-scrolling-box-shadow-color};",
          "40: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   --vxe-ui-table-drag-over-background-color:#{light_variable.$vxe-ui-table-drag-over-background-color};",
          "",
          "---------------"
        ],
        "styles/variable.scss||styles/variable.scss": [
          "File: styles/variable.scss -> styles/variable.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: $vxe-ui-table-row-current-background-color: #e6f7ff !default;",
          "37: $vxe-ui-table-row-hover-current-background-color: #d7effb !default;",
          "38: $vxe-ui-table-fixed-scrolling-box-shadow-color: rgba(0, 0, 0, 0.12) !default;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: $vxe-ui-table-drag-over-background-color:rgba(255,255,200,0.3) !default;",
          "",
          "---------------"
        ]
      }
    }
  ]
}