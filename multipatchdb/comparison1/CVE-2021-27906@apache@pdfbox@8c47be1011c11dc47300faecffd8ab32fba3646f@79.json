{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b0884668abd616c770afa8d9a01eeed9f40c5b26",
      "candidate_info": {
        "commit_hash": "b0884668abd616c770afa8d9a01eeed9f40c5b26",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/b0884668abd616c770afa8d9a01eeed9f40c5b26",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java"
        ],
        "message": "PDFBOX-4892: replace Stack with ArrayList\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882786 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java||fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java||fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java -> fontbox/src/main/java/org/apache/fontbox/cff/CharStringHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.fontbox.cff;",
          "20: import java.util.List;",
          "",
          "[Removed Lines]",
          "21: import java.util.Stack;",
          "",
          "[Added Lines]",
          "20: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     public List<Number> handleSequence(List<Object> sequence)",
          "39:     {",
          "41:         for (Object obj : sequence)",
          "42:         {",
          "43:             if (obj instanceof CharStringCommand)",
          "44:             {",
          "47:                 if (results != null)",
          "48:                 {",
          "50:                 }",
          "51:             }",
          "52:             else",
          "53:             {",
          "55:             }",
          "56:         }",
          "58:     }",
          "",
          "[Removed Lines]",
          "40:         Stack<Number> stack = new Stack<Number>();",
          "45:                 List<Number> results = handleCommand(stack, (CharStringCommand)obj);",
          "46:                 stack.clear();  // this is basically returning the new stack",
          "49:                     stack.addAll(results);",
          "54:                 stack.push((Number)obj);",
          "57:         return stack;",
          "",
          "[Added Lines]",
          "40:         List<Number> numbers = new ArrayList<Number>();",
          "45:                 List<Number> results = handleCommand(numbers, (CharStringCommand)obj);",
          "46:                 numbers.clear();",
          "49:                     numbers.addAll(results);",
          "54:                 numbers.add((Number) obj);",
          "57:         return numbers;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fd42fb30d15f199e7dfde463345c76c7eb438cb",
      "candidate_info": {
        "commit_hash": "9fd42fb30d15f199e7dfde463345c76c7eb438cb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9fd42fb30d15f199e7dfde463345c76c7eb438cb",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ],
        "message": "PDFBOX-4892: improve log / exception messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890499 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "905:             String badString = readString();",
          "906:             if (badString.isEmpty())",
          "907:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "905:             long startOffset = seqSource.getPosition();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "910:                 throw new IOException(",
          "911:                         \"Unknown dir object c='\" + c + \"' cInt=\" + (int) c + \" peek='\" + (char) peek",
          "913:             }",
          "",
          "[Removed Lines]",
          "912:                                 + \"' peekInt=\" + peek + \" at offset \" + seqSource.getPosition());",
          "",
          "[Added Lines]",
          "913:                         + \"' peekInt=\" + peek + \" at offset \" + seqSource.getPosition()",
          "914:                         + \" (start offset: \" + startOffset + \")\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "920:             else",
          "921:             {",
          "922:                 LOG.warn(\"Skipped unexpected dir object = '\" + badString + \"' at offset \"",
          "924:             }",
          "925:         }",
          "926:         return null;",
          "",
          "[Removed Lines]",
          "923:                         + seqSource.getPosition());",
          "",
          "[Added Lines]",
          "925:                         + seqSource.getPosition() + \" (start offset: \" + startOffset + \")\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b6fd7c7764c1b0af8b8f67219f900217ef28fdc",
      "candidate_info": {
        "commit_hash": "9b6fd7c7764c1b0af8b8f67219f900217ef28fdc",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9b6fd7c7764c1b0af8b8f67219f900217ef28fdc",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ],
        "message": "PDFBOX-4892: simplify code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890157 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1736:     private boolean bfSearchForTrailer(COSDictionary trailer) throws IOException",
          "1737:     {",
          "1739:         long originOffset = source.getPosition();",
          "1740:         source.seek(MINIMUM_SEARCH_OFFSET);",
          "1741:         while (!source.isEOF())",
          "",
          "[Removed Lines]",
          "1738:         Map<String, COSDictionary> trailerDicts = new HashMap<String, COSDictionary>();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1750:                     boolean infoFound = false;",
          "1751:                     skipSpaces();",
          "1752:                     COSDictionary trailerDict = parseCOSDictionary();",
          "1754:                     COSObject rootObj = trailerDict.getCOSObject(COSName.ROOT);",
          "1755:                     if (rootObj != null)",
          "1756:                     {",
          "1762:                     }",
          "1763:                     COSObject infoObj = trailerDict.getCOSObject(COSName.INFO);",
          "1764:                     if (infoObj != null)",
          "1765:                     {",
          "1771:                     }",
          "1772:                     if (rootFound && infoFound)",
          "1773:                     {",
          "1775:                     }",
          "1776:                 }",
          "1777:                 catch (IOException exception)",
          "",
          "[Removed Lines]",
          "1753:                     StringBuilder trailerKeys = new StringBuilder();",
          "1757:                         long objNumber = rootObj.getObjectNumber();",
          "1758:                         int genNumber = rootObj.getGenerationNumber();",
          "1759:                         trailerKeys.append(objNumber).append(\" \");",
          "1760:                         trailerKeys.append(genNumber).append(\" \");",
          "1761:                         rootFound = true;",
          "1766:                         long objNumber = infoObj.getObjectNumber();",
          "1767:                         int genNumber = infoObj.getGenerationNumber();",
          "1768:                         trailerKeys.append(objNumber).append(\" \");",
          "1769:                         trailerKeys.append(genNumber).append(\" \");",
          "1770:                         infoFound = true;",
          "1774:                         trailerDicts.put(trailerKeys.toString(), trailerDict);",
          "",
          "[Added Lines]",
          "1756:                         COSDictionary rootDict = retrieveCOSDictionary(rootObj);",
          "1757:                         if (rootDict != null && isCatalog(rootDict))",
          "1758:                         {",
          "1759:                             rootFound = true;",
          "1760:                         }",
          "1766:                         COSDictionary infoDict = retrieveCOSDictionary(infoObj);",
          "1767:                         if (infoDict != null && isInfo(infoDict))",
          "1768:                         {",
          "1769:                             infoFound = true;",
          "1770:                         }",
          "1774:                         trailer.setItem(COSName.ROOT, rootObj);",
          "1775:                         trailer.setItem(COSName.INFO, infoObj);",
          "1776:                         if (trailerDict.containsKey(COSName.ENCRYPT))",
          "1777:                         {",
          "1778:                             COSObject encObj = trailerDict.getCOSObject(COSName.ENCRYPT);",
          "1779:                             if (encObj != null)",
          "1780:                             {",
          "1783:                                 COSDictionary encDict = retrieveCOSDictionary(encObj);",
          "1784:                                 if (encDict != null)",
          "1785:                                 {",
          "1786:                                     trailer.setItem(COSName.ENCRYPT, encObj);",
          "1787:                                 }",
          "1788:                             }",
          "1789:                         }",
          "1790:                         if (trailerDict.containsKey(COSName.ID))",
          "1791:                         {",
          "1792:                             COSBase idObj = trailerDict.getItem(COSName.ID);",
          "1793:                             if (idObj instanceof COSArray)",
          "1794:                             {",
          "1795:                                 trailer.setItem(COSName.ID, idObj);",
          "1796:                             }",
          "1797:                         }",
          "1798:                         return true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1782:             source.read();",
          "1783:         }",
          "1784:         source.seek(originOffset);",
          "1840:         return false;",
          "1841:     }",
          "",
          "[Removed Lines]",
          "1786:         if (trailerDicts.size() == 1)",
          "1787:         {",
          "1788:             boolean rootFound = false;",
          "1789:             boolean infoFound = false;",
          "1790:             COSDictionary trailerDict = trailerDicts.values().iterator().next();",
          "1791:             COSBase rootObj = trailerDict.getItem(COSName.ROOT);",
          "1792:             if (rootObj instanceof COSObject)",
          "1793:             {",
          "1795:                 COSDictionary rootDict = retrieveCOSDictionary((COSObject) rootObj);",
          "1796:                 if (rootDict != null && isCatalog(rootDict))",
          "1797:                 {",
          "1798:                     rootFound = true;",
          "1799:                 }",
          "1800:             }",
          "1801:             COSBase infoObj = trailerDict.getItem(COSName.INFO);",
          "1802:             if (infoObj instanceof COSObject)",
          "1803:             {",
          "1805:                 COSDictionary infoDict = retrieveCOSDictionary((COSObject) infoObj);",
          "1806:                 if (infoDict != null && isInfo(infoDict))",
          "1807:                 {",
          "1808:                     infoFound = true;",
          "1809:                 }",
          "1810:             }",
          "1811:             if (rootFound && infoFound)",
          "1812:             {",
          "1813:                 trailer.setItem(COSName.ROOT, rootObj);",
          "1814:                 trailer.setItem(COSName.INFO, infoObj);",
          "1815:                 if (trailerDict.containsKey(COSName.ENCRYPT))",
          "1816:                 {",
          "1817:                     COSBase encObj = trailerDict.getItem(COSName.ENCRYPT);",
          "1818:                     if (encObj instanceof COSObject)",
          "1819:                     {",
          "1822:                         COSDictionary encDict = retrieveCOSDictionary((COSObject) encObj);",
          "1823:                         if (encDict != null)",
          "1824:                         {",
          "1825:                             trailer.setItem(COSName.ENCRYPT, encObj);",
          "1826:                         }",
          "1827:                     }",
          "1828:                 }",
          "1829:                 if (trailerDict.containsKey(COSName.ID))",
          "1830:                 {",
          "1831:                     COSBase idObj = trailerDict.getItem(COSName.ID);",
          "1832:                     if (idObj instanceof COSArray)",
          "1833:                     {",
          "1834:                         trailer.setItem(COSName.ID, idObj);",
          "1835:                     }",
          "1836:                 }",
          "1837:                 return true;",
          "1838:             }",
          "1839:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2248:         Long offset = bfSearchCOSObjectKeyOffsets.get(key);",
          "2249:         if (offset != null)",
          "2250:         {",
          "2252:         }",
          "2253:         return null;",
          "2254:     }",
          "",
          "[Removed Lines]",
          "2251:             return retrieveCOSDictionary(key, offset);",
          "",
          "[Added Lines]",
          "2220:             long currentPosition = source.getPosition();",
          "2221:             COSDictionary dictionary = retrieveCOSDictionary(key, offset);",
          "2222:             source.seek(currentPosition);",
          "2223:             return dictionary;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb2ea34030208ae9c32f091da92bac386700aa04",
      "candidate_info": {
        "commit_hash": "eb2ea34030208ae9c32f091da92bac386700aa04",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/eb2ea34030208ae9c32f091da92bac386700aa04",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java"
        ],
        "message": "PDFBOX-4892: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884469 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java"
        ]
      }
    },
    {
      "candidate_hash": "f292eeb64d6c2cb61724c1a8a316de4f0d9a44c3",
      "candidate_info": {
        "commit_hash": "f292eeb64d6c2cb61724c1a8a316de4f0d9a44c3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f292eeb64d6c2cb61724c1a8a316de4f0d9a44c3",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java"
        ],
        "message": "PDFBOX-5228: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891110 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     private final byte[] bytes;",
          "",
          "[Removed Lines]",
          "33:     static public final int LENGTH = 12;",
          "",
          "[Added Lines]",
          "33:     public static final int LENGTH = 12;",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     private final byte[] bytes;",
          "",
          "[Removed Lines]",
          "30:     static public final int LENGTH = 10;",
          "",
          "[Added Lines]",
          "30:     public static final int LENGTH = 10;",
          "",
          "---------------"
        ]
      }
    }
  ]
}