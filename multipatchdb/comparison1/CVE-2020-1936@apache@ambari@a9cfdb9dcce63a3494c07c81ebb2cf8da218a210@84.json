{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71ae0ee22b99bec067676ab5c1cea9ffa7191f70",
      "candidate_info": {
        "commit_hash": "71ae0ee22b99bec067676ab5c1cea9ffa7191f70",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/71ae0ee22b99bec067676ab5c1cea9ffa7191f70",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/styles.less"
        ],
        "message": "[AMBARI-24435] [Log Search UI] Remove underline text decoration from dropdowns on hover (#2133)\n\n(cherry picked from commit b89000a6baba86bd9c800b57e9b0d7c21cfdd68a)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/styles.less||ambari-logsearch/ambari-logsearch-web/src/styles.less"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/styles.less||ambari-logsearch/ambari-logsearch-web/src/styles.less": [
          "File: ambari-logsearch/ambari-logsearch-web/src/styles.less -> ambari-logsearch/ambari-logsearch-web/src/styles.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: .initial-color {",
          "23:   color: initial;",
          "24: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: .btn-link {",
          "28:   &:hover, &:focus {",
          "29:     text-decoration: none;",
          "30:   }",
          "31: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a084df031d640c3427932eadf3c30b66cb60339",
      "candidate_info": {
        "commit_hash": "2a084df031d640c3427932eadf3c30b66cb60339",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2a084df031d640c3427932eadf3c30b66cb60339",
        "files": [
          "ambari-server/src/main/resources/stacks/stack_advisor.py"
        ],
        "message": "[AMBARI-24604] Stack advisor error popup with \"500 status code\" thrown during customize service page of install wizard (dsen) (#2269)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/stacks/stack_advisor.py||ambari-server/src/main/resources/stacks/stack_advisor.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/stacks/stack_advisor.py||ambari-server/src/main/resources/stacks/stack_advisor.py": [
          "File: ambari-server/src/main/resources/stacks/stack_advisor.py -> ambari-server/src/main/resources/stacks/stack_advisor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2987:       return None",
          "2989:     dir = re.sub(\"^file://\", \"\", dir, count=1)",
          "2990:     mountPoints = {}",
          "2991:     for mountPoint in hostInfo[\"disk_info\"]:",
          "2992:       mountPoints[mountPoint[\"mountpoint\"]] = self.to_number(mountPoint[\"available\"])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2991:     if not dir:",
          "2992:       return self.getErrorItem(\"Value has wrong format\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "829e3fd984a915a44a26ddfa8e33826c1bdc7f56",
      "candidate_info": {
        "commit_hash": "829e3fd984a915a44a26ddfa8e33826c1bdc7f56",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/829e3fd984a915a44a26ddfa8e33826c1bdc7f56",
        "files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "ambari-web/app/views/common/configs/service_config_container_view.js"
        ],
        "message": "AMBARI-24585 'yarn.nodemanager.linux-container-executor.cgroups.hierarchy' is not equal to the value of yarn_hierarchy in UI Deploy",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "ambari-web/app/views/common/configs/service_config_container_view.js||ambari-web/app/views/common/configs/service_config_container_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js": [
          "File: ambari-web/app/mixins/common/configs/config_recommendation_parser.js -> ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:           if (configs.length) {",
          "138:             var mergedConfigs = configs.concat(stepConfig.get('configs'));",
          "139:             stepConfig.set('configs', mergedConfigs);",
          "140:           }",
          "141:         }",
          "142:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:             stepConfig.propertyDidChange('redrawConfigs');",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/configs/service_config_container_view.js||ambari-web/app/views/common/configs/service_config_container_view.js": [
          "File: ambari-web/app/views/common/configs/service_config_container_view.js -> ambari-web/app/views/common/configs/service_config_container_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:     if (this.get('lazyLoading')) lazyLoading.terminate(this.get('lazyLoading'));",
          "108:     this.pushViewAfterRecommendation();",
          "111:   pushViewAfterRecommendation: function() {",
          "112:     if (this.get('controller.isRecommendedLoaded')) {",
          "",
          "[Removed Lines]",
          "109:   }.observes('controller.selectedService'),",
          "",
          "[Added Lines]",
          "109:   }.observes('controller.selectedService', 'controller.selectedService.redrawConfigs'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ec7e26209685afcbcfa58a19775df550bb1a004",
      "candidate_info": {
        "commit_hash": "2ec7e26209685afcbcfa58a19775df550bb1a004",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2ec7e26209685afcbcfa58a19775df550bb1a004",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java",
          "ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java"
        ],
        "message": "AMBARI-25304. Request configurations when needed during server-side actions rather than rely on configuration data from the execution command (amagyar) (#3008)\n\n* AMBARI-25304. Request configurations when needed during server-side actions rather than rely on configuration data from the execution command (amagyar)\n\n* AMBARI-25304. Request configurations when needed during server-side actions rather than rely on configuration data from the execution command (amagyar)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java",
          "ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java||ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/AbstractServerAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:     return (commandParameters == null) ? null : commandParameters.get(propertyName);",
          "174:   }",
          "199:   protected void auditLog(AuditEvent ae) {",
          "200:     auditLogger.log(ae);",
          "201:   }",
          "",
          "[Removed Lines]",
          "183:   protected Map<String, Map<String, String>> getConfigurations() {",
          "184:     return (executionCommand == null) ? Collections.emptyMap() : executionCommand.getConfigurations();",
          "185:   }",
          "195:   protected Map<String, String> getConfiguration(String configurationName) {",
          "196:     return getConfigurations().get(configurationName);",
          "197:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/DestroyPrincipalsServerAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     String defaultRealm = getDefaultRealm(commandParameters);",
          "112:     KerberosOperationHandler operationHandler = kerberosOperationHandlerFactory.getKerberosOperationHandler(kdcType);",
          "115:     try {",
          "116:       operationHandler.open(administratorCredential, defaultRealm, kerberosConfiguration);",
          "",
          "[Removed Lines]",
          "113:     Map<String, String> kerberosConfiguration = getConfiguration(\"kerberos-env\");",
          "",
          "[Added Lines]",
          "113:     Map<String, String> kerberosConfiguration = getConfigurationProperties(\"kerberos-env\");",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: import org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal;",
          "42: import org.apache.ambari.server.state.Cluster;",
          "43: import org.apache.ambari.server.state.Clusters;",
          "44: import org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor;",
          "45: import org.apache.ambari.server.utils.StageUtils;",
          "46: import org.apache.commons.io.FileUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: import org.apache.ambari.server.state.Config;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "435:       String defaultRealm = getDefaultRealm(commandParameters);",
          "437:       KerberosOperationHandler handler = kerberosOperationHandlerFactory.getKerberosOperationHandler(kdcType);",
          "440:       try {",
          "441:         handler.open(administratorCredential, defaultRealm, kerberosConfiguration);",
          "",
          "[Removed Lines]",
          "438:       Map<String, String> kerberosConfiguration = getConfiguration(\"kerberos-env\");",
          "",
          "[Added Lines]",
          "439:       Map<String, String> kerberosConfiguration = getConfigurationProperties(\"kerberos-env\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "605:         : ambariServerHostEntity.getHostId();",
          "606:   }",
          "608:   public static class KerberosCommandParameters {",
          "609:     private Map<String, String> params;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616:   protected Map<String, String> getConfigurationProperties(String configType) throws AmbariException {",
          "617:     if (StringUtils.isNotEmpty(configType)) {",
          "618:       Cluster cluster = getCluster();",
          "619:       Config config = (cluster == null) ? null : cluster.getDesiredConfigByType(configType);",
          "620:       Map<String, String> properties = (config == null) ? null : config.getProperties();",
          "622:       if (properties == null) {",
          "623:         LOG.warn(\"The '{}' configuration data is not available:\" +",
          "624:                 \"\\n\\tcluster: {}\" +",
          "625:                 \"\\n\\tconfig: {}\" +",
          "626:                 \"\\n\\tproperties: null\",",
          "627:             configType,",
          "628:             (cluster == null) ? \"null\" : \"not null\",",
          "629:             (config == null) ? \"null\" : \"not null\");",
          "630:       }",
          "632:       return properties;",
          "633:     } else {",
          "634:       return null;",
          "635:     }",
          "636:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java||ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java -> ambari-server/src/test/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerActionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal;",
          "48: import org.apache.ambari.server.state.Cluster;",
          "49: import org.apache.ambari.server.state.Clusters;",
          "50: import org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor;",
          "51: import org.apache.ambari.server.state.stack.OsFamily;",
          "52: import org.easymock.EasyMockSupport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: import org.apache.ambari.server.state.Config;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64: public class KerberosServerActionTest extends EasyMockSupport {",
          "66:   Map<String, String> commandParams = new HashMap<>();",
          "67:   File temporaryDirectory;",
          "68:   private Injector injector;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:   private  static final Map<String, String> KERBEROS_ENV_PROPERTIES = Collections.singletonMap(\"admin_server_host\", \"kdc.example.com\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:   @Before",
          "74:   public void setUp() throws Exception {",
          "75:     cluster = createMock(Cluster.class);",
          "77:     Clusters clusters = createMock(Clusters.class);",
          "78:     expect(clusters.getCluster(anyString())).andReturn(cluster).anyTimes();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:     Config kerberosEnvConfig = createMock(Config.class);",
          "79:     expect(kerberosEnvConfig.getProperties()).andReturn(KERBEROS_ENV_PROPERTIES).anyTimes();",
          "82:     expect(cluster.getDesiredConfigByType(\"kerberos-env\")).andReturn(kerberosEnvConfig).anyTimes();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "283:     verifyAll();",
          "284:   }",
          "285: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:   @Test",
          "294:   public void testGetConfigurationProperties() throws AmbariException {",
          "295:     Config emptyConfig = createMock(Config.class);",
          "296:     expect(emptyConfig.getProperties()).andReturn(Collections.emptyMap()).once();",
          "298:     Config missingPropertiesConfig = createMock(Config.class);",
          "299:     expect(missingPropertiesConfig.getProperties()).andReturn(null).once();",
          "301:     expect(cluster.getDesiredConfigByType(\"invalid-type\")).andReturn(null).once();",
          "302:     expect(cluster.getDesiredConfigByType(\"missing-properties-type\")).andReturn(missingPropertiesConfig).once();",
          "303:     expect(cluster.getDesiredConfigByType(\"empty-type\")).andReturn(emptyConfig).once();",
          "305:     replayAll();",
          "307:     Assert.assertNull(action.getConfigurationProperties(null));",
          "308:     Assert.assertNull(action.getConfigurationProperties(\"invalid-type\"));",
          "309:     Assert.assertNull(action.getConfigurationProperties(\"missing-properties-type\"));",
          "310:     Assert.assertEquals(Collections.emptyMap(), action.getConfigurationProperties(\"empty-type\"));",
          "311:     Assert.assertEquals(KERBEROS_ENV_PROPERTIES, action.getConfigurationProperties(\"kerberos-env\"));",
          "313:     verifyAll();",
          "314:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d455f306c43524417de556db971dc44f4c7518a",
      "candidate_info": {
        "commit_hash": "2d455f306c43524417de556db971dc44f4c7518a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2d455f306c43524417de556db971dc44f4c7518a",
        "files": [
          "contrib/views/ambari-views-package/pom.xml",
          "contrib/views/commons/pom.xml",
          "contrib/views/files/pom.xml",
          "contrib/views/files/src/main/resources/ui/app/config/files-columns.js",
          "contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js",
          "contrib/views/files/src/main/resources/ui/app/models/file.js",
          "contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs",
          "contrib/views/pig/pom.xml",
          "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java",
          "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java",
          "contrib/views/pom.xml",
          "contrib/views/utils/pom.xml",
          "contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java"
        ],
        "message": "AMBARI-23817 : Visualizing the Encrypted zones and Erasure coded zones in HDFS (nitirajrathore) (#2093)",
        "before_after_code_files": [
          "contrib/views/files/src/main/resources/ui/app/config/files-columns.js||contrib/views/files/src/main/resources/ui/app/config/files-columns.js",
          "contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js||contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js",
          "contrib/views/files/src/main/resources/ui/app/models/file.js||contrib/views/files/src/main/resources/ui/app/models/file.js",
          "contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs||contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs",
          "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java||contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java",
          "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java||contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java",
          "contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java||contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java",
          "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/files/src/main/resources/ui/app/config/files-columns.js||contrib/views/files/src/main/resources/ui/app/config/files-columns.js": [
          "File: contrib/views/files/src/main/resources/ui/app/config/files-columns.js -> contrib/views/files/src/main/resources/ui/app/config/files-columns.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     isVisible: true,",
          "27:     sortable: true,",
          "28:     sortOrder: 0,",
          "30:   },",
          "31:   {",
          "32:     title: 'Size',",
          "",
          "[Removed Lines]",
          "29:     columnClass: 'col-md-4 col-xs-4'",
          "",
          "[Added Lines]",
          "29:     columnClass: 'col-md-3 col-xs-3'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     isVisible: true,",
          "51:     sortable: true,",
          "52:     sortOrder: 0,",
          "54:   },",
          "55:   {",
          "56:     title: 'Group',",
          "",
          "[Removed Lines]",
          "53:     columnClass: 'col-md-2 col-xs-2'",
          "",
          "[Added Lines]",
          "53:     columnClass: 'col-md-1 col-xs-1'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:     isVisible: true,",
          "67:     sortable: false,",
          "68:     sortOrder: 0,",
          "69:     columnClass: 'col-md-2 col-xs-2'",
          "70:   }",
          "71: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     columnClass: 'col-md-1 col-xs-1'",
          "70:   },",
          "71:   {",
          "72:     title: 'Erasure Coding',",
          "73:     key: 'erasureCodingPolicyName',",
          "74:     isVisible: true,",
          "75:     sortable: false,",
          "76:     sortOrder: 0,",
          "78:   },",
          "79:   {",
          "80:     title: 'Encrypted',",
          "81:     key: 'isEncrypted',",
          "82:     isVisible: true,",
          "83:     sortable: false,",
          "84:     sortOrder: 0,",
          "85:     columnClass: 'col-md-1 col-xs-1'",
          "",
          "---------------"
        ],
        "contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js||contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js": [
          "File: contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js -> contrib/views/files/src/main/resources/ui/app/helpers/shorten-text.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: export function shortenText(params) {",
          "22:   let text = params[0];",
          "23:   let length = params[1];",
          "24:   if (text.length < length) {",
          "25:     return text;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:   if(!text){",
          "24:     return text;",
          "25:   }",
          "",
          "---------------"
        ],
        "contrib/views/files/src/main/resources/ui/app/models/file.js||contrib/views/files/src/main/resources/ui/app/models/file.js": [
          "File: contrib/views/files/src/main/resources/ui/app/models/file.js -> contrib/views/files/src/main/resources/ui/app/models/file.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:   modificationTime                  : DS.attr('iso-date'),",
          "34:   blockSize                         : DS.attr('number'),",
          "35:   replication                       : DS.attr('number'),",
          "36:   size                              : Ember.computed.alias('len'),",
          "38:   path: function() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:   isEncrypted                       : DS.attr('boolean'),",
          "37:   isErasureCoded                    : DS.attr('boolean'),",
          "38:   erasureCodingPolicyName           : DS.attr('string'),",
          "",
          "---------------"
        ],
        "contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs||contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs": [
          "File: contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs -> contrib/views/files/src/main/resources/ui/app/templates/components/file-row.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   <div class={{get-value-from-columns columnHeaders 'permission' 'columnClass'}}>",
          "44:     {{show-permission-string file}}",
          "45:   </div>",
          "46: </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:   <div class={{get-value-from-columns columnHeaders 'erasureCodingPolicyName' 'columnClass'}}>",
          "47:     {{file.erasureCodingPolicyName}}",
          "48:   </div>",
          "49:   <div class={{get-value-from-columns columnHeaders 'isEncrypted' 'columnClass'}}>",
          "50:     {{#if file.isEncrypted}}",
          "51:       Yes",
          "52:     {{else}}",
          "53:       No",
          "54:     {{/if}}",
          "55:   </div>",
          "",
          "---------------"
        ],
        "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java||contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java": [
          "File: contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java -> contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/JobTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "112:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "113:     replay(hdfsApi);",
          "114:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "111:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "111:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "147:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream).anyTimes();",
          "148:     replay(hdfsApi);",
          "149:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "146:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "146:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "185:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "188:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "189:     replay(hdfsApi);",
          "190:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "187:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "187:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "211:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "214:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "215:     replay(hdfsApi);",
          "216:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "213:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "213:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "246:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "249:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "250:     replay(hdfsApi);",
          "251:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "248:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "248:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "267:     ByteArrayOutputStream baScriptStream = new ByteArrayOutputStream();",
          "268:     ByteArrayOutputStream baTempletonArgsStream = new ByteArrayOutputStream();",
          "272:     expect(hdfsApi.create(endsWith(\"script.pig\"), eq(true))).andReturn(scriptStream);",
          "273:     expect(hdfsApi.create(endsWith(\"params\"), eq(true))).andReturn(templetonArgsStream);",
          "274:     replay(hdfsApi);",
          "",
          "[Removed Lines]",
          "270:     FSDataOutputStream scriptStream = new FSDataOutputStream(baScriptStream);",
          "271:     FSDataOutputStream templetonArgsStream = new FSDataOutputStream(baTempletonArgsStream);",
          "",
          "[Added Lines]",
          "270:     FSDataOutputStream scriptStream = new FSDataOutputStream(baScriptStream, null);",
          "271:     FSDataOutputStream templetonArgsStream = new FSDataOutputStream(baTempletonArgsStream, null);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "295:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "298:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "299:     replay(hdfsApi);",
          "300:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "297:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "297:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "318:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "321:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "322:     replay(hdfsApi);",
          "323:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "320:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "320:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "340:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "343:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "344:     replay(hdfsApi);",
          "345:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "342:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "342:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "363:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "366:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "367:     replay(hdfsApi);",
          "368:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "365:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "365:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "398:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "401:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "402:     replay(hdfsApi);",
          "403:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "400:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "400:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "433:     ByteArrayOutputStream do_stream = new ByteArrayOutputStream();",
          "436:     expect(hdfsApi.create(anyString(), eq(true))).andReturn(stream);",
          "437:     replay(hdfsApi);",
          "438:     UserLocalObjects.setHdfsApi(hdfsApi, context);",
          "",
          "[Removed Lines]",
          "435:     FSDataOutputStream stream = new FSDataOutputStream(do_stream);",
          "",
          "[Added Lines]",
          "435:     FSDataOutputStream stream = new FSDataOutputStream(do_stream, null);",
          "",
          "---------------"
        ],
        "contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java||contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java": [
          "File: contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java -> contrib/views/pig/src/test/java/org/apache/ambari/view/pig/test/ScriptTestUnmanaged.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import org.apache.ambari.view.ViewResourceHandler;",
          "23: import org.apache.ambari.view.pig.BasePigTest;",
          "24: import org.apache.ambari.view.pig.resources.scripts.ScriptService;",
          "25: import org.apache.ambari.view.utils.UserLocal;",
          "26: import org.apache.ambari.view.utils.hdfs.HdfsApi;",
          "27: import org.apache.ambari.view.utils.hdfs.HdfsApiException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import org.apache.ambari.view.pig.utils.ServiceFormattedException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:     replay(handler, context);",
          "77:     scriptService = getService(ScriptService.class, handler, context);",
          "80:     doCreateScript(\"Test\", null);",
          "81:   }",
          "82: }",
          "",
          "[Removed Lines]",
          "79:     thrown.expect(HdfsApiException.class);",
          "",
          "[Added Lines]",
          "80:     thrown.expect(ServiceFormattedException.class);",
          "",
          "---------------"
        ],
        "contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java||contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java": [
          "File: contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java -> contrib/views/utils/src/main/java/org/apache/ambari/view/utils/hdfs/HdfsApi.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import org.apache.hadoop.fs.TrashPolicy;",
          "32: import org.apache.hadoop.fs.permission.FsAction;",
          "33: import org.apache.hadoop.fs.permission.FsPermission;",
          "34: import org.apache.hadoop.security.UserGroupInformation;",
          "35: import org.json.simple.JSONArray;",
          "36: import org.slf4j.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import org.apache.hadoop.hdfs.protocol.HdfsFileStatus;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   private final static Logger LOG =",
          "53:       LoggerFactory.getLogger(HdfsApi.class);",
          "55:   private final Configuration conf;",
          "56:   private Map<String, String> authParams;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   public static String KeyIsErasureCoded = \"isErasureCoded\";",
          "57:   public static String KeyIsEncrypted = \"isEncrypted\";",
          "58:   public static String KeyErasureCodingPolicyName = \"erasureCodingPolicyName\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "554:     Map<String, Object> json = new LinkedHashMap<String, Object>();",
          "555:     json.put(\"path\", Path.getPathWithoutSchemeAndAuthority(status.getPath())",
          "556:         .toString());",
          "558:     json.put(\"isDirectory\", status.isDirectory());",
          "559:     json.put(\"len\", status.getLen());",
          "560:     json.put(\"owner\", status.getOwner());",
          "",
          "[Removed Lines]",
          "557:     json.put(\"replication\", status.getReplication());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "567:     json.put(\"readAccess\", checkAccessPermissions(status, FsAction.READ, ugi));",
          "568:     json.put(\"writeAccess\", checkAccessPermissions(status, FsAction.WRITE, ugi));",
          "569:     json.put(\"executeAccess\", checkAccessPermissions(status, FsAction.EXECUTE, ugi));",
          "570:     return json;",
          "571:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573:     json.put(KeyIsErasureCoded, status.isErasureCoded());",
          "574:     json.put(KeyIsEncrypted, status.isEncrypted());",
          "576:     if( status instanceof HdfsFileStatus){",
          "577:       HdfsFileStatus hdfsFileStatus = (HdfsFileStatus) status;",
          "578:       if(null != hdfsFileStatus.getErasureCodingPolicy()) {",
          "579:         json.put(KeyErasureCodingPolicyName, hdfsFileStatus.getErasureCodingPolicy().getName());",
          "580:       }",
          "581:     }",
          "",
          "---------------"
        ],
        "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java": [
          "File: contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java -> contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyFileStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: package org.apache.ambari.view.utils.hdfs;",
          "20: import org.apache.hadoop.fs.FileEncryptionInfo;",
          "21: import org.apache.hadoop.fs.FileStatus;",
          "22: import org.apache.hadoop.fs.permission.FsPermission;",
          "23: import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;",
          "24: import org.apache.hadoop.hdfs.protocol.HdfsFileStatus;",
          "26: public abstract class DummyFileStatus extends FileStatus implements HdfsFileStatus {",
          "27:     @Override",
          "28:     public long getFileId() {",
          "29:         return 0;",
          "30:     }",
          "32:     @Override",
          "33:     public FileEncryptionInfo getFileEncryptionInfo() {",
          "34:         return null;",
          "35:     }",
          "37:     @Override",
          "38:     public byte[] getLocalNameInBytes() {",
          "39:         return new byte[0];",
          "40:     }",
          "42:     @Override",
          "43:     public byte[] getSymlinkInBytes() {",
          "44:         return new byte[0];",
          "45:     }",
          "47:     @Override",
          "48:     public int getChildrenNum() {",
          "49:         return 0;",
          "50:     }",
          "52:     @Override",
          "53:     public ErasureCodingPolicy getErasureCodingPolicy() {",
          "54:         return null;",
          "55:     }",
          "57:     @Override",
          "58:     public byte getStoragePolicy() {",
          "59:         return 0;",
          "60:     }",
          "62:     @Override",
          "63:     public void setPermission(FsPermission fsPermission) {",
          "65:     }",
          "67:     @Override",
          "68:     public void setOwner(String s) {",
          "70:     }",
          "72:     @Override",
          "73:     public void setGroup(String s) {",
          "75:     }",
          "76: }",
          "",
          "---------------"
        ],
        "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java": [
          "File: contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java -> contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/DummyNonHdfsFileStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.view.utils.hdfs;",
          "21: import org.apache.hadoop.fs.FileStatus;",
          "23: public abstract class DummyNonHdfsFileStatus extends FileStatus {",
          "24: }",
          "",
          "---------------"
        ],
        "contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java||contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java": [
          "File: contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java -> contrib/views/utils/src/test/java/org/apache/ambari/view/utils/hdfs/HdfsApiTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import org.apache.hadoop.fs.FileSystem;",
          "24: import org.apache.hadoop.fs.FileUtil;",
          "25: import org.apache.hadoop.fs.Path;",
          "26: import org.apache.hadoop.hdfs.MiniDFSCluster;",
          "27: import org.junit.After;",
          "28: import org.junit.Assert;",
          "29: import org.junit.Before;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.hadoop.fs.permission.FsPermission;",
          "28: import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;",
          "29: import org.apache.hadoop.io.erasurecode.ECSchema;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: import java.io.File;",
          "33: import java.io.IOException;",
          "34: import java.util.Arrays;",
          "36: public class HdfsApiTest {",
          "37:   private FileSystem fs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: import java.util.Map;",
          "40: import static org.apache.ambari.view.utils.hdfs.HdfsApi.*;",
          "41: import static org.mockito.Mockito.mock;",
          "42: import static org.mockito.Mockito.when;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:     hdfsCluster.shutdown();",
          "62:   }",
          "64:   @Test",
          "65:   public void filterAndTruncateDirStatus() throws Exception {",
          "66:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   @Test",
          "73:   public void testWith_EC_And_Encryption(){",
          "75:     DummyFileStatus fileStatus = mock(DummyFileStatus.class);",
          "76:     FsPermission fsPermission = new FsPermission((short)0777);",
          "77:     String ecPolicyName = \"Some-EC-Policy\";",
          "78:     ECSchema ecSchema = new ECSchema(\"someSchema\", 1, 1);",
          "79:     ErasureCodingPolicy erasureCodingPolicy = new ErasureCodingPolicy(ecPolicyName, ecSchema, 1024, (byte)0);",
          "80:     when(fileStatus.getPermission()).thenReturn(fsPermission);",
          "81:     when(fileStatus.getPath()).thenReturn(new Path(\"/test/path\"));",
          "82:     when(fileStatus.getErasureCodingPolicy()).thenReturn(erasureCodingPolicy);",
          "83:     when(fileStatus.isErasureCoded()).thenReturn(true);",
          "84:     when(fileStatus.isEncrypted()).thenReturn(true);",
          "85:     Map<String, Object> json = hdfsApi.fileStatusToJSON(fileStatus);",
          "87:     Assert.assertEquals(Boolean.TRUE, json.get(KeyIsErasureCoded));",
          "88:     Assert.assertEquals(Boolean.TRUE, json.get(KeyIsEncrypted));",
          "89:     Assert.assertEquals(json.get(KeyErasureCodingPolicyName), ecPolicyName);",
          "90:   }",
          "92:   @Test",
          "93:   public void testWithout_EC_And_Encryption(){",
          "95:     FsPermission fsPermission = new FsPermission((short)0777);",
          "97:     DummyFileStatus fileStatus = mock(DummyFileStatus.class);",
          "98:     when(fileStatus.getPermission()).thenReturn(fsPermission);",
          "100:     when(fileStatus.getPath()).thenReturn(new Path(\"/test/path\"));",
          "101:     when(fileStatus.getErasureCodingPolicy()).thenReturn(null);",
          "102:     when(fileStatus.isErasureCoded()).thenReturn(false);",
          "103:     when(fileStatus.isEncrypted()).thenReturn(false);",
          "104:     Map<String, Object> json = hdfsApi.fileStatusToJSON(fileStatus);",
          "106:     Assert.assertEquals(Boolean.FALSE, json.get(KeyIsErasureCoded));",
          "107:     Assert.assertEquals(Boolean.FALSE, json.get(KeyIsEncrypted));",
          "108:     Assert.assertNull(json.get(KeyErasureCodingPolicyName));",
          "109:   }",
          "111:   @Test",
          "112:   public void testNonHdfsFileStatus(){",
          "114:     DummyNonHdfsFileStatus fileStatus = mock(DummyNonHdfsFileStatus.class);",
          "115:     FsPermission fsPermission = new FsPermission((short)0777);",
          "116:     when(fileStatus.getPermission()).thenReturn(fsPermission);",
          "117:     when(fileStatus.getPath()).thenReturn(new Path(\"/test/path\"));",
          "119:     when(fileStatus.isErasureCoded()).thenReturn(false);",
          "120:     when(fileStatus.isEncrypted()).thenReturn(false);",
          "121:     Map<String, Object> json = hdfsApi.fileStatusToJSON(fileStatus);",
          "123:     Assert.assertEquals(Boolean.FALSE, json.get(KeyIsErasureCoded));",
          "124:     Assert.assertEquals( Boolean.FALSE,json.get(KeyIsEncrypted));",
          "125:     Assert.assertNull(json.get(KeyErasureCodingPolicyName));",
          "126:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}