{
  "cve_id": "CVE-2021-43667",
  "cve_desc": "A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.1.0. This bug can be leveraged by constructing a message whose payload is nil and sending this message with the method 'forwardToLeader'. This bug has been admitted and fixed by the developers of Fabric. If leveraged, any leader node will crash.",
  "repo": "hyperledger/fabric",
  "patch_hash": "ebf94b10ecc86d3a91619b98befc52277b1e3474",
  "patch_info": {
    "commit_hash": "ebf94b10ecc86d3a91619b98befc52277b1e3474",
    "repo": "hyperledger/fabric",
    "commit_url": "https://github.com/hyperledger/fabric/commit/ebf94b10ecc86d3a91619b98befc52277b1e3474",
    "files": [
      "protoutil/commonutils.go"
    ],
    "message": "FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>",
    "before_after_code_files": [
      "protoutil/commonutils.go||protoutil/commonutils.go"
    ]
  },
  "patch_diff": {
    "protoutil/commonutils.go||protoutil/commonutils.go": [
      "File: protoutil/commonutils.go -> protoutil/commonutils.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "214: func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {",
      "215:  envPayload, err := UnmarshalPayload(env.Payload)",
      "216:  if err != nil {",
      "217:   return nil, err",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "215:  if env == nil {",
      "216:   return nil, errors.New(\"Invalid envelope payload. can't be nil\")",
      "217:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fbf7b936f4347b9e0d398adb8e41a47d2b4a1497",
      "candidate_info": {
        "commit_hash": "fbf7b936f4347b9e0d398adb8e41a47d2b4a1497",
        "repo": "hyperledger/fabric",
        "commit_url": "https://github.com/hyperledger/fabric/commit/fbf7b936f4347b9e0d398adb8e41a47d2b4a1497",
        "files": [
          "protoutil/commonutils.go"
        ],
        "message": "FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>\n(cherry picked from commit 540fff8b8eed15113bf4e65df43c7a63a644bb37)",
        "before_after_code_files": [
          "protoutil/commonutils.go||protoutil/commonutils.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ],
          "candidate": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ]
        }
      },
      "candidate_diff": {
        "protoutil/commonutils.go||protoutil/commonutils.go": [
          "File: protoutil/commonutils.go -> protoutil/commonutils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "214: func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {",
          "215:  envPayload, err := UnmarshalPayload(env.Payload)",
          "216:  if err != nil {",
          "217:   return nil, err",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:  if env == nil {",
          "216:   return nil, errors.New(\"Invalid envelope payload. can't be nil\")",
          "217:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "540fff8b8eed15113bf4e65df43c7a63a644bb37",
      "candidate_info": {
        "commit_hash": "540fff8b8eed15113bf4e65df43c7a63a644bb37",
        "repo": "hyperledger/fabric",
        "commit_url": "https://github.com/hyperledger/fabric/commit/540fff8b8eed15113bf4e65df43c7a63a644bb37",
        "files": [
          "protoutil/commonutils.go"
        ],
        "message": "FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>",
        "before_after_code_files": [
          "protoutil/commonutils.go||protoutil/commonutils.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ],
          "candidate": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ]
        }
      },
      "candidate_diff": {
        "protoutil/commonutils.go||protoutil/commonutils.go": [
          "File: protoutil/commonutils.go -> protoutil/commonutils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "214: func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {",
          "215:  envPayload, err := UnmarshalPayload(env.Payload)",
          "216:  if err != nil {",
          "217:   return nil, err",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:  if env == nil {",
          "216:   return nil, errors.New(\"Invalid envelope payload. can't be nil\")",
          "217:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "befdaeecd8b821774ff9bd4da1ac09dc59d0a220",
      "candidate_info": {
        "commit_hash": "befdaeecd8b821774ff9bd4da1ac09dc59d0a220",
        "repo": "hyperledger/fabric",
        "commit_url": "https://github.com/hyperledger/fabric/commit/befdaeecd8b821774ff9bd4da1ac09dc59d0a220",
        "files": [
          "protoutil/commonutils.go"
        ],
        "message": "FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>\n(cherry picked from commit 540fff8b8eed15113bf4e65df43c7a63a644bb37)",
        "before_after_code_files": [
          "protoutil/commonutils.go||protoutil/commonutils.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ],
          "candidate": [
            "protoutil/commonutils.go||protoutil/commonutils.go"
          ]
        }
      },
      "candidate_diff": {
        "protoutil/commonutils.go||protoutil/commonutils.go": [
          "File: protoutil/commonutils.go -> protoutil/commonutils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "214: func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {",
          "215:  envPayload, err := UnmarshalPayload(env.Payload)",
          "216:  if err != nil {",
          "217:   return nil, err",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:  if env == nil {",
          "216:   return nil, errors.New(\"Invalid envelope payload. can't be nil\")",
          "217:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}