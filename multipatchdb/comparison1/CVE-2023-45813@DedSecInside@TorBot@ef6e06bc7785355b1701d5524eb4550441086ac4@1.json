{
  "cve_id": "CVE-2023-45813",
  "cve_desc": "Torbot is an open source tor network intelligence tool. In affected versions the `torbot.modules.validators.validate_link function` uses the python-validators URL validation regex. This particular regular expression has an exponential complexity which allows an attacker to cause an application crash using a well-crafted argument. An attacker can use a well-crafted URL argument to exploit the vulnerability in the regular expression and cause a Denial of Service on the system. The validators file has been removed in version 4.0.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "DedSecInside/TorBot",
  "patch_hash": "ef6e06bc7785355b1701d5524eb4550441086ac4",
  "patch_info": {
    "commit_hash": "ef6e06bc7785355b1701d5524eb4550441086ac4",
    "repo": "DedSecInside/TorBot",
    "commit_url": "https://github.com/DedSecInside/TorBot/commit/ef6e06bc7785355b1701d5524eb4550441086ac4",
    "files": [
      "torbot/modules/validators.py"
    ],
    "message": "remove unused validators file",
    "before_after_code_files": [
      "torbot/modules/validators.py||torbot/modules/validators.py"
    ]
  },
  "patch_diff": {
    "torbot/modules/validators.py||torbot/modules/validators.py": [
      "File: torbot/modules/validators.py -> torbot/modules/validators.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "461d67ea935cba683fa251b42f5f155a4113d0c5",
      "candidate_info": {
        "commit_hash": "461d67ea935cba683fa251b42f5f155a4113d0c5",
        "repo": "DedSecInside/TorBot",
        "commit_url": "https://github.com/DedSecInside/TorBot/commit/461d67ea935cba683fa251b42f5f155a4113d0c5",
        "files": [
          "torbot/__init__.py",
          "torbot/__main__.py",
          "torbot/main.py",
          "torbot/modules/api.py",
          "torbot/modules/link_io.py",
          "torbot/modules/linktree.py",
          "torbot/version.py"
        ],
        "message": "flake8 fixes",
        "before_after_code_files": [
          "torbot/__init__.py||torbot/__init__.py",
          "torbot/__main__.py||torbot/__main__.py",
          "torbot/main.py||torbot/main.py",
          "torbot/modules/api.py||torbot/modules/api.py",
          "torbot/modules/link_io.py||torbot/modules/link_io.py",
          "torbot/modules/linktree.py||torbot/modules/linktree.py",
          "torbot/version.py||torbot/version.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DedSecInside/TorBot/pull/307"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "torbot/__init__.py||torbot/__init__.py": [
          "File: torbot/__init__.py -> torbot/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "torbot/__main__.py||torbot/__main__.py": [
          "File: torbot/__main__.py -> torbot/__main__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "torbot/main.py||torbot/main.py": [
          "File: torbot/main.py -> torbot/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: from .modules.collect_data import collect_data",
          "16: from .modules.nlp import main",
          "21: # TorBot CLI class",
          "",
          "[Removed Lines]",
          "18: from . import version",
          "",
          "[Added Lines]",
          "18: VERSION = '3.1.2'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     def __init__(self, args):",
          "25:         self.args = args",
          "28:     def get_header(self):",
          "29:         license_msg = color(\"LICENSE: GNU Public License v3\", \"red\")",
          "",
          "[Removed Lines]",
          "26:         self.__version__ = version",
          "",
          "[Added Lines]",
          "26:         self.__version__ = VERSION",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "33:                             / __/ / / / /_/ / __ \\/ __ \\/ /",
          "34:                            / /_/ /_/ / _, _/ /_/ / /_/ / /",
          "35:                            \\__/\\____/_/ |_/_____/\\____/_/  V{VERSION}",
          "37:         banner = color(banner, \"red\")",
          "39:         title = r\"\"\"",
          "",
          "[Removed Lines]",
          "36:                 \"\"\".format(VERSION=version.__version__)",
          "",
          "[Added Lines]",
          "36:                 \"\"\".format(VERSION=self.__version__)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111:         print_tor_ip_address()",
          "115:         if args.classify:",
          "116:             result = main.classify(args.url)",
          "",
          "[Removed Lines]",
          "113:         tree = get_node(args.url, args.depth)",
          "",
          "[Added Lines]",
          "113:         tree = get_node(args.url, args.depth)",
          "",
          "---------------"
        ],
        "torbot/modules/api.py||torbot/modules/api.py": [
          "File: torbot/modules/api.py -> torbot/modules/api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     \"\"\"",
          "86:     endpoint = f'/content?link={link}'",
          "87:     url = base_url + endpoint",
          "89:     resp = httpx.get(url)",
          "91:     return resp.text",
          "",
          "[Removed Lines]",
          "88:     debug(f'requesting {url}')",
          "90:     debug(f'retrieved {resp.text}')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "torbot/modules/link_io.py||torbot/modules/link_io.py": [
          "File: torbot/modules/link_io.py -> torbot/modules/link_io.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:             insert(node, 'yellow')",
          "49:         else:",
          "50:             insert(node, 'red')",
          "52:     headers = [\"Title\", \"URL\", \"Status\", \"Category\"]",
          "54:     print(table)",
          "",
          "[Removed Lines]",
          "53:     table = tabulate.tabulate(table_data, headers=headers)",
          "",
          "[Added Lines]",
          "53:     table = tabulate.tabulate(table_data, headers=headers)",
          "",
          "---------------"
        ],
        "torbot/modules/linktree.py||torbot/modules/linktree.py": [
          "File: torbot/modules/linktree.py -> torbot/modules/linktree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     if depth > 0:",
          "54:         depth -= 1",
          "55:         resp = httpx.get(url, proxies='socks5://127.0.0.1:9050')",
          "57:         for child in children:",
          "58:             append_node(tree, id=child, parent_id=url)",
          "59:             build_tree(tree, child, depth)",
          "",
          "[Removed Lines]",
          "56:         children = parse_links(resp.text)",
          "",
          "[Added Lines]",
          "56:         children = parse_links(resp.text)",
          "",
          "---------------"
        ],
        "torbot/version.py||torbot/version.py": [
          "File: torbot/version.py -> torbot/version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f702d5b61c07df89e06a97ca868ea18bb84089dd",
      "candidate_info": {
        "commit_hash": "f702d5b61c07df89e06a97ca868ea18bb84089dd",
        "repo": "DedSecInside/TorBot",
        "commit_url": "https://github.com/DedSecInside/TorBot/commit/f702d5b61c07df89e06a97ca868ea18bb84089dd",
        "files": [
          "torbot/main.py",
          "torbot/modules/linktree.py"
        ],
        "message": "fix tree printing",
        "before_after_code_files": [
          "torbot/main.py||torbot/main.py",
          "torbot/modules/linktree.py||torbot/modules/linktree.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DedSecInside/TorBot/pull/307"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "torbot/main.py||torbot/main.py": [
          "File: torbot/main.py -> torbot/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:     if args.visualize == 'table' or not args.visualize:",
          "99:         tree.showTable()",
          "100:     elif args.visualize == 'tree':",
          "102:     elif args.visualize == 'json':",
          "103:         tree.showJSON()",
          "",
          "[Removed Lines]",
          "101:         tree.show()",
          "",
          "[Added Lines]",
          "101:         print(tree)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:                 data = tomllib.load(f)",
          "134:                 version = data['tool']['poetry']['version']",
          "135:         except Exception as e:",
          "138:         run(arg_parser, version)",
          "139:     except KeyboardInterrupt:",
          "",
          "[Removed Lines]",
          "136:             raise Exception(\"unable to find version from pyprojec.toml.\\n\", e)",
          "",
          "[Added Lines]",
          "136:             raise Exception(\"unable to find version from pyproject.toml.\\n\", e)",
          "",
          "---------------"
        ],
        "torbot/modules/linktree.py||torbot/modules/linktree.py": [
          "File: torbot/modules/linktree.py -> torbot/modules/linktree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         Saves the tree to the current working directory under the given file name.",
          "84:         \"\"\"",
          "85:         file_name = self._get_tree_file_name()",
          "88:     def saveJSON(self) -> None:",
          "89:         \"\"\"",
          "90:         Saves the tree to the current working directory under the given file name in JSON.",
          "91:         \"\"\"",
          "92:         json_data = self.to_json()",
          "94:             f.write(json_data)",
          "96:     def showJSON(self) -> None:",
          "",
          "[Removed Lines]",
          "86:         self.save2file(file_name)",
          "93:         with open(self._get_tree_file_name(), 'w+') as f:",
          "",
          "[Added Lines]",
          "86:         self.save2file(f'{file_name}.txt')",
          "93:         file_name = self._get_tree_file_name()",
          "94:         with open(f'{file_name}.json', 'w+') as f:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171: def parse_phone_numbers(soup: BeautifulSoup) -> list[str]:",
          "172:     \"\"\"",
          "173:     Finds all anchor tags and parses the href attribute.",
          "174:     \"\"\"",
          "175:     tags = soup.find_all('a')",
          "176:     numbers = set()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:     example attribute: `tel:+45651112331` or possiby the href attribute itself.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "174d769140a6b808f48ec4755e16e380c762d708",
      "candidate_info": {
        "commit_hash": "174d769140a6b808f48ec4755e16e380c762d708",
        "repo": "DedSecInside/TorBot",
        "commit_url": "https://github.com/DedSecInside/TorBot/commit/174d769140a6b808f48ec4755e16e380c762d708",
        "files": [
          "poetry.lock",
          "pyproject.toml"
        ],
        "message": "Add httpx and tabulate to poetry",
        "before_after_code_files": [
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DedSecInside/TorBot/pull/307"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: [[package]]",
          "4: name = \"altgraph\"",
          "",
          "[Removed Lines]",
          "1: # This file is automatically @generated by Poetry 1.6.1 and should not be changed by hand.",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.5.1 and should not be changed by hand.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:     {file = \"altgraph-0.17.2.tar.gz\", hash = \"sha256:ebf2269361b47d97b3b88e696439f6e4cbc607c17c51feb1754f90fb79839158\"},",
          "12: ]",
          "14: [[package]]",
          "15: name = \"beautifulsoup4\"",
          "16: version = \"4.11.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: [[package]]",
          "15: name = \"anyio\"",
          "16: version = \"4.0.0\"",
          "17: description = \"High level compatibility layer for multiple asynchronous event loop implementations\"",
          "18: optional = false",
          "19: python-versions = \">=3.8\"",
          "20: files = [",
          "21:     {file = \"anyio-4.0.0-py3-none-any.whl\", hash = \"sha256:cfdb2b588b9fc25ede96d8db56ed50848b0b649dca3dd1df0b11f683bb9e0b5f\"},",
          "22:     {file = \"anyio-4.0.0.tar.gz\", hash = \"sha256:f7ed51751b2c2add651e5747c891b47e26d2a21be5d32d9311dfe9692f3e5d7a\"},",
          "23: ]",
          "25: [package.dependencies]",
          "26: exceptiongroup = {version = \">=1.0.2\", markers = \"python_version < \\\"3.11\\\"\"}",
          "27: idna = \">=2.8\"",
          "28: sniffio = \">=1.1\"",
          "30: [package.extras]",
          "31: doc = [\"Sphinx (>=7)\", \"packaging\", \"sphinx-autodoc-typehints (>=1.2.0)\"]",
          "32: test = [\"anyio[trio]\", \"coverage[toml] (>=7)\", \"hypothesis (>=4.0)\", \"psutil (>=5.9)\", \"pytest (>=7.0)\", \"pytest-mock (>=3.6.1)\", \"trustme\", \"uvloop (>=0.17)\"]",
          "33: trio = [\"trio (>=0.22)\"]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     {file = \"decorator-5.1.1.tar.gz\", hash = \"sha256:637996211036b6385ef91435e4fae22989472f9d571faba8927ba8253acbc330\"},",
          "66: ]",
          "68: [[package]]",
          "69: name = \"idna\"",
          "70: version = \"3.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: [[package]]",
          "90: name = \"exceptiongroup\"",
          "91: version = \"1.1.3\"",
          "92: description = \"Backport of PEP 654 (exception groups)\"",
          "93: optional = false",
          "94: python-versions = \">=3.7\"",
          "95: files = [",
          "96:     {file = \"exceptiongroup-1.1.3-py3-none-any.whl\", hash = \"sha256:343280667a4585d195ca1cf9cef84a4e178c4b6cf2274caef9859782b567d5e3\"},",
          "97:     {file = \"exceptiongroup-1.1.3.tar.gz\", hash = \"sha256:097acd85d473d75af5bb98e41b61ff7fe35efe6675e4f9370ec6ec5126d160e9\"},",
          "98: ]",
          "100: [package.extras]",
          "101: test = [\"pytest (>=6)\"]",
          "103: [[package]]",
          "104: name = \"h11\"",
          "105: version = \"0.14.0\"",
          "106: description = \"A pure-Python, bring-your-own-I/O implementation of HTTP/1.1\"",
          "107: optional = false",
          "108: python-versions = \">=3.7\"",
          "109: files = [",
          "110:     {file = \"h11-0.14.0-py3-none-any.whl\", hash = \"sha256:e3fe4ac4b851c468cc8363d500db52c2ead036020723024a109d37346efaa761\"},",
          "111:     {file = \"h11-0.14.0.tar.gz\", hash = \"sha256:8f19fbbe99e72420ff35c00b27a34cb9937e902a8b810e2c88300c6f0a3b699d\"},",
          "112: ]",
          "114: [[package]]",
          "115: name = \"httpcore\"",
          "116: version = \"0.18.0\"",
          "117: description = \"A minimal low-level HTTP client.\"",
          "118: optional = false",
          "119: python-versions = \">=3.8\"",
          "120: files = [",
          "121:     {file = \"httpcore-0.18.0-py3-none-any.whl\", hash = \"sha256:adc5398ee0a476567bf87467063ee63584a8bce86078bf748e48754f60202ced\"},",
          "122:     {file = \"httpcore-0.18.0.tar.gz\", hash = \"sha256:13b5e5cd1dca1a6636a6aaea212b19f4f85cd88c366a2b82304181b769aab3c9\"},",
          "123: ]",
          "125: [package.dependencies]",
          "126: anyio = \">=3.0,<5.0\"",
          "127: certifi = \"*\"",
          "128: h11 = \">=0.13,<0.15\"",
          "129: sniffio = \"==1.*\"",
          "131: [package.extras]",
          "132: http2 = [\"h2 (>=3,<5)\"]",
          "133: socks = [\"socksio (==1.*)\"]",
          "135: [[package]]",
          "136: name = \"httpx\"",
          "137: version = \"0.25.0\"",
          "138: description = \"The next generation HTTP client.\"",
          "139: optional = false",
          "140: python-versions = \">=3.8\"",
          "141: files = [",
          "142:     {file = \"httpx-0.25.0-py3-none-any.whl\", hash = \"sha256:181ea7f8ba3a82578be86ef4171554dd45fec26a02556a744db029a0a27b7100\"},",
          "143:     {file = \"httpx-0.25.0.tar.gz\", hash = \"sha256:47ecda285389cb32bb2691cc6e069e3ab0205956f681c5b2ad2325719751d875\"},",
          "144: ]",
          "146: [package.dependencies]",
          "147: certifi = \"*\"",
          "148: httpcore = \">=0.18.0,<0.19.0\"",
          "149: idna = \"*\"",
          "150: sniffio = \"*\"",
          "152: [package.extras]",
          "153: brotli = [\"brotli\", \"brotlicffi\"]",
          "154: cli = [\"click (==8.*)\", \"pygments (==2.*)\", \"rich (>=10,<14)\"]",
          "155: http2 = [\"h2 (>=3,<5)\"]",
          "156: socks = [\"socksio (==1.*)\"]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "332: socks = [\"PySocks (>=1.5.6,!=1.5.7)\"]",
          "333: use-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]",
          "354: [[package]]",
          "355: name = \"scikit-learn\"",
          "356: version = \"1.3.0\"",
          "",
          "[Removed Lines]",
          "335: [[package]]",
          "336: name = \"requests-mock\"",
          "337: version = \"1.9.3\"",
          "338: description = \"Mock out responses from the requests package\"",
          "339: optional = false",
          "340: python-versions = \"*\"",
          "341: files = [",
          "342:     {file = \"requests-mock-1.9.3.tar.gz\", hash = \"sha256:8d72abe54546c1fc9696fa1516672f1031d72a55a1d66c85184f972a24ba0eba\"},",
          "343:     {file = \"requests_mock-1.9.3-py2.py3-none-any.whl\", hash = \"sha256:0a2d38a117c08bb78939ec163522976ad59a6b7fdd82b709e23bb98004a44970\"},",
          "344: ]",
          "346: [package.dependencies]",
          "347: requests = \">=2.3,<3\"",
          "348: six = \"*\"",
          "350: [package.extras]",
          "351: fixture = [\"fixtures\"]",
          "352: test = [\"fixtures\", \"mock\", \"purl\", \"pytest\", \"sphinx\", \"testrepository (>=0.0.18)\", \"testtools\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "471: [package.dependencies]",
          "472: scikit-learn = \"*\"",
          "474: [[package]]",
          "475: name = \"soupsieve\"",
          "476: version = \"2.3.2.post1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545: [[package]]",
          "546: name = \"sniffio\"",
          "547: version = \"1.3.0\"",
          "548: description = \"Sniff out which async library your code is running under\"",
          "549: optional = false",
          "550: python-versions = \">=3.7\"",
          "551: files = [",
          "552:     {file = \"sniffio-1.3.0-py3-none-any.whl\", hash = \"sha256:eecefdce1e5bbfb7ad2eeaabf7c1eeb404d7757c379bd1f7e5cce9d8bf425384\"},",
          "553:     {file = \"sniffio-1.3.0.tar.gz\", hash = \"sha256:e60305c5e5d314f5389259b7f22aaa33d8f7dee49763119234af3755c55b9101\"},",
          "554: ]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "482:     {file = \"soupsieve-2.3.2.post1.tar.gz\", hash = \"sha256:fc53893b3da2c33de295667a0e19f078c14bf86544af307354de5fcf12a3f30d\"},",
          "483: ]",
          "485: [[package]]",
          "486: name = \"termcolor\"",
          "487: version = \"1.1.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "567: [[package]]",
          "568: name = \"tabulate\"",
          "569: version = \"0.9.0\"",
          "570: description = \"Pretty-print tabular data\"",
          "571: optional = false",
          "572: python-versions = \">=3.7\"",
          "573: files = [",
          "574:     {file = \"tabulate-0.9.0-py3-none-any.whl\", hash = \"sha256:024ca478df22e9340661486f85298cff5f6dcdba14f3813e8830015b9ed1948f\"},",
          "575:     {file = \"tabulate-0.9.0.tar.gz\", hash = \"sha256:0095b12bf5966de529c0feb1fa08671671b3368eec77d7ef7ab114be2c068b3c\"},",
          "576: ]",
          "578: [package.extras]",
          "579: widechars = [\"wcwidth\"]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "595: [metadata]",
          "596: lock-version = \"2.0\"",
          "597: python-versions = \">=3.9,<=3.11.4\"",
          "",
          "[Removed Lines]",
          "598: content-hash = \"b8d1390ad998dd46bc5dd5ae402ac9a50158c2a4873a5a2ef1d7a3791870ced7\"",
          "",
          "[Added Lines]",
          "694: content-hash = \"ebad665d65bb7d8a6b22362b2ada5cca42961b41f25ff95dbd6b25a65ab803f1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ac5c326aa6b92877ead91d3dd7484485dfb83eb",
      "candidate_info": {
        "commit_hash": "0ac5c326aa6b92877ead91d3dd7484485dfb83eb",
        "repo": "DedSecInside/TorBot",
        "commit_url": "https://github.com/DedSecInside/TorBot/commit/0ac5c326aa6b92877ead91d3dd7484485dfb83eb",
        "files": [
          "poetry.lock",
          "pyproject.toml",
          "torbot/modules/api.py",
          "torbot/modules/linktree.py"
        ],
        "message": "Test support for socks5 proxy using default values",
        "before_after_code_files": [
          "poetry.lock||poetry.lock",
          "torbot/modules/api.py||torbot/modules/api.py",
          "torbot/modules/linktree.py||torbot/modules/linktree.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DedSecInside/TorBot/pull/307"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: httpcore = \">=0.18.0,<0.19.0\"",
          "149: idna = \"*\"",
          "150: sniffio = \"*\"",
          "152: [package.extras]",
          "153: brotli = [\"brotli\", \"brotlicffi\"]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151: socksio = {version = \"==1.*\", optional = true, markers = \"extra == \\\"socks\\\"\"}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "553:     {file = \"sniffio-1.3.0.tar.gz\", hash = \"sha256:e60305c5e5d314f5389259b7f22aaa33d8f7dee49763119234af3755c55b9101\"},",
          "554: ]",
          "556: [[package]]",
          "557: name = \"soupsieve\"",
          "558: version = \"2.3.2.post1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "557: [[package]]",
          "558: name = \"socksio\"",
          "559: version = \"1.0.0\"",
          "560: description = \"Sans-I/O implementation of SOCKS4, SOCKS4A, and SOCKS5.\"",
          "561: optional = false",
          "562: python-versions = \">=3.6\"",
          "563: files = [",
          "564:     {file = \"socksio-1.0.0-py3-none-any.whl\", hash = \"sha256:95dc1f15f9b34e8d7b16f06d74b8ccf48f609af32ab33c608d08761c5dcbb1f3\"},",
          "565:     {file = \"socksio-1.0.0.tar.gz\", hash = \"sha256:f88beb3da5b5c38b9890469de67d0cb0f9d494b78b106ca1845f96c10b91c4ac\"},",
          "566: ]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "691: [metadata]",
          "692: lock-version = \"2.0\"",
          "693: python-versions = \">=3.9,<=3.11.4\"",
          "",
          "[Removed Lines]",
          "694: content-hash = \"ebad665d65bb7d8a6b22362b2ada5cca42961b41f25ff95dbd6b25a65ab803f1\"",
          "",
          "[Added Lines]",
          "706: content-hash = \"bc665d85d8bb2537f084f64260e0b84212b7917a530ff79d8c8c9dd896c015d5\"",
          "",
          "---------------"
        ],
        "torbot/modules/api.py||torbot/modules/api.py": [
          "File: torbot/modules/api.py -> torbot/modules/api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     \"\"\"",
          "31:     Returns the IP address of the current Tor client the service is using.",
          "32:     \"\"\"",
          "34:     soup = BeautifulSoup(resp.text, features='html.parser')",
          "36:     # Get the content of check tor project, this contains the header and body",
          "",
          "[Removed Lines]",
          "33:     resp = httpx.get(\"https://check.torproject.org/\")",
          "",
          "[Added Lines]",
          "33:     resp = httpx.get(\"https://check.torproject.org/\", proxies='socks5://127.0.0.1:9050')",
          "",
          "---------------"
        ],
        "torbot/modules/linktree.py||torbot/modules/linktree.py": [
          "File: torbot/modules/linktree.py -> torbot/modules/linktree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Module is used for analyzing link relationships",
          "3: \"\"\"",
          "4: import os",
          "6: import httpx",
          "7: import validators",
          "8: import logging",
          "",
          "[Removed Lines]",
          "5: import re",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     Creates a node for a tree using the given ID which corresponds to a URL.",
          "36:     If the parent_id is None, this will be considered a root node.",
          "37:     \"\"\"",
          "39:     soup = BeautifulSoup(resp.text, 'html.parser')",
          "40:     title = soup.title.text.strip() if soup.title is not None else id",
          "41:     try:",
          "",
          "[Removed Lines]",
          "38:     resp = httpx.get(id)",
          "",
          "[Added Lines]",
          "38:     resp = httpx.get(id, proxies='socks5://127.0.0.1:9050')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:     \"\"\"",
          "53:     if depth > 0:",
          "54:         depth -= 1",
          "56:         children = parse_links(resp.text)",
          "57:         for child in children:",
          "58:             append_node(tree, id=child, parent_id=url)",
          "",
          "[Removed Lines]",
          "55:         resp = httpx.get(url)",
          "",
          "[Added Lines]",
          "55:         resp = httpx.get(url, proxies='socks5://127.0.0.1:9050')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f3f4dbf2de2ac4ea34e82a7436a0cf3af8722af",
      "candidate_info": {
        "commit_hash": "6f3f4dbf2de2ac4ea34e82a7436a0cf3af8722af",
        "repo": "DedSecInside/TorBot",
        "commit_url": "https://github.com/DedSecInside/TorBot/commit/6f3f4dbf2de2ac4ea34e82a7436a0cf3af8722af",
        "files": [
          "torbot/main.py"
        ],
        "message": "Add option to disable socks5",
        "before_after_code_files": [
          "torbot/main.py||torbot/main.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DedSecInside/TorBot/pull/307"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "torbot/main.py||torbot/main.py": [
          "File: torbot/main.py -> torbot/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:         sys.exit()",
          "81:     socks5_proxy = f'socks5://{socks5_host}:{socks5_port}'",
          "83:         # print header and IP address if not set to quiet",
          "84:         if not args.quiet:",
          "85:             print_header(version)",
          "",
          "[Removed Lines]",
          "82:     with httpx.Client(timeout=60, proxies=socks5_proxy) as client:",
          "",
          "[Added Lines]",
          "82:     with httpx.Client(timeout=60, proxies=socks5_proxy if not args.disable_socks5 else None) as client:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:     parser.add_argument(\"--info\", action=\"store_true\",",
          "124:                         help=\"Info displays basic info of the scanned site. Only supports a single URL at a time.\")",
          "125:     parser.add_argument(\"-v\", action=\"store_true\", help=\"verbose logging\")",
          "127:     return parser",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:     parser.add_argument(\"--disable-socks5\", action=\"store_true\", help=\"Executes HTTP requests without using SOCKS5 proxy\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}