{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5780d96858e7f738dbc801d1fbeb5d44b6e5b565",
      "candidate_info": {
        "commit_hash": "5780d96858e7f738dbc801d1fbeb5d44b6e5b565",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5780d96858e7f738dbc801d1fbeb5d44b6e5b565",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java"
        ],
        "message": "PDFBOX-4892: avoid ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884442 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:             throw new MissingOperandException(operator, arguments);",
          "42:         }",
          "45:         context.getGraphicsState().getTextState().setHorizontalScaling(scaling.floatValue());",
          "46:     }",
          "",
          "[Removed Lines]",
          "44:         COSNumber scaling = (COSNumber)arguments.get(0);",
          "",
          "[Added Lines]",
          "44:         COSBase base = arguments.get(0);",
          "45:         if (!(base instanceof COSNumber))",
          "46:         {",
          "47:             return;",
          "48:         }",
          "49:         COSNumber scaling = (COSNumber) base;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ce761dd244249bdef26436974eff88f91adbd85",
      "candidate_info": {
        "commit_hash": "9ce761dd244249bdef26436974eff88f91adbd85",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9ce761dd244249bdef26436974eff88f91adbd85",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-2776: replace QV_RCA1_RCA3_CPCPS_V4_11.pdf (that had LTV information in signature) with file from Ralf Hauser\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882881 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "804:         {",
          "805:             return; // runs only once, independent of externallySign",
          "806:         }",
          "808:         String name = inFile.getName();",
          "809:         String substring = name.substring(0, name.lastIndexOf('.'));",
          "",
          "[Removed Lines]",
          "807:         File inFile = new File(\"target/pdfs\", \"QV_RCA1_RCA3_CPCPS_V4_11.pdf\");",
          "",
          "[Added Lines]",
          "807:         File inFile = new File(\"target/pdfs\", \"notCertified_368835_Sig_en_201026090509.pdf\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cd6af766379dda5e35f07aed4917bd3a86c83f2",
      "candidate_info": {
        "commit_hash": "7cd6af766379dda5e35f07aed4917bd3a86c83f2",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/7cd6af766379dda5e35f07aed4917bd3a86c83f2",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-5215: remove unneeded code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890792 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "839:     public void testDoubleVisibleSignatureOnEncryptedFile()",
          "840:             throws IOException, CMSException, OperatorCreationException, GeneralSecurityException, TSPException, CertificateVerificationException",
          "841:     {",
          "847:         String inPath = \"target/pdfs/PDFBOX-2469-1-AcroForm-AES128.pdf\";",
          "848:         FileInputStream fis = new FileInputStream(jpegPath);",
          "850:         signing.setVisibleSignDesigner(inPath, 0, 0, -50, fis, 1);",
          "851:         signing.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 1, true);",
          "852:         signing.setExternalSigning(externallySign);",
          "",
          "[Removed Lines]",
          "843:         KeyStore keystore = KeyStore.getInstance(\"PKCS12\");",
          "844:         keystore.load(new FileInputStream(keystorePath), password.toCharArray());",
          "849:         CreateVisibleSignature signing = new CreateVisibleSignature(keystore, password.toCharArray());",
          "",
          "[Added Lines]",
          "845:         CreateVisibleSignature signing = new CreateVisibleSignature(keyStore, password.toCharArray());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "859:         inPath = destFile.getAbsolutePath();",
          "860:         fis = new FileInputStream(jpegPath);",
          "862:         signing.setVisibleSignDesigner(inPath, 0, 0, -50, fis, 2);",
          "863:         signing.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 2, true);",
          "864:         signing.setExternalSigning(externallySign);",
          "",
          "[Removed Lines]",
          "861:         signing = new CreateVisibleSignature(keystore, password.toCharArray());",
          "",
          "[Added Lines]",
          "857:         signing = new CreateVisibleSignature(keyStore, password.toCharArray());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3dc6d8102a789cab05468c0d42ba341a276688ae",
      "candidate_info": {
        "commit_hash": "3dc6d8102a789cab05468c0d42ba341a276688ae",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3dc6d8102a789cab05468c0d42ba341a276688ae",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java"
        ],
        "message": "PDFBOX-3017: remove unneeded code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882700 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:         {",
          "310:             return new ArrayList<String>();",
          "311:         }",
          "313:         ASN1Primitive derObjCrlDP = oAsnInStream.readObject();",
          "314:         ASN1OctetString dosCrlDP = (ASN1OctetString) derObjCrlDP;",
          "315:         byte[] crldpExtOctets = dosCrlDP.getOctets();",
          "317:         ASN1Primitive derObj2 = oAsnInStream2.readObject();",
          "318:         CRLDistPoint distPoint = CRLDistPoint.getInstance(derObj2);",
          "319:         List<String> crlUrls = new ArrayList<String>();",
          "",
          "[Removed Lines]",
          "312:         ASN1InputStream oAsnInStream = new ASN1InputStream(new ByteArrayInputStream(crldpExt));",
          "316:         ASN1InputStream oAsnInStream2 = new ASN1InputStream(new ByteArrayInputStream(crldpExtOctets));",
          "",
          "[Added Lines]",
          "312:         ASN1InputStream oAsnInStream = new ASN1InputStream(crldpExt);",
          "316:         ASN1InputStream oAsnInStream2 = new ASN1InputStream(crldpExtOctets);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a371253983e14f9bd572926b62f6c63a599bdef",
      "candidate_info": {
        "commit_hash": "1a371253983e14f9bd572926b62f6c63a599bdef",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1a371253983e14f9bd572926b62f6c63a599bdef",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java"
        ],
        "message": "PDFBOX-4991: improve error message when resource file not found, as suggested by Ralf Hauser\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882601 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.BufferedReader;",
          "20: import java.io.InputStream;",
          "21: import java.io.InputStreamReader;",
          "25: import java.io.IOException;",
          "26: import java.util.HashMap;",
          "27: import java.util.Map;",
          "28: import java.util.concurrent.ConcurrentHashMap;",
          "",
          "[Removed Lines]",
          "22: import org.apache.commons.logging.Log;",
          "23: import org.apache.commons.logging.LogFactory;",
          "",
          "[Added Lines]",
          "27: import org.apache.commons.logging.Log;",
          "28: import org.apache.commons.logging.LogFactory;",
          "29: import org.apache.pdfbox.io.IOUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     private static GlyphList load(String filename, int numberOfEntries)",
          "48:     {",
          "50:         try",
          "51:         {",
          "53:         }",
          "54:         catch (IOException e)",
          "55:         {",
          "56:             throw new RuntimeException(e);",
          "57:         }",
          "58:     }",
          "60:     static",
          "",
          "[Removed Lines]",
          "49:         String path = \"/org/apache/pdfbox/resources/glyphlist/\";",
          "52:             return new GlyphList(GlyphList.class.getResourceAsStream(path + filename), numberOfEntries);",
          "",
          "[Added Lines]",
          "50:         String path = \"/org/apache/pdfbox/resources/glyphlist/\" + filename;",
          "51:         InputStream resourceAsStream = null;",
          "54:             resourceAsStream = GlyphList.class.getResourceAsStream(path);",
          "55:             if (resourceAsStream == null)",
          "56:             {",
          "57:                 throw new IOException(\"GlyphList '\" + path + \"' not found\");",
          "58:             }",
          "59:             return new GlyphList(resourceAsStream, numberOfEntries);",
          "65:         finally",
          "66:         {",
          "67:             IOUtils.closeQuietly(resourceAsStream);",
          "68:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}