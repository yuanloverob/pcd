{
  "cve_id": "CVE-2021-41114",
  "cve_desc": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. It has been discovered that TYPO3 CMS is susceptible to host spoofing due to improper validation of the HTTP Host header. TYPO3 uses the HTTP Host header, for example, to generate absolute URLs during the frontend rendering process. Since the host header itself is provided by the client, it can be forged to any value, even in a name-based virtual hosts environment. This vulnerability is the same as described in TYPO3-CORE-SA-2014-001 (CVE-2014-3941). A regression, introduced during TYPO3 v11 development, led to this situation. The already existing setting $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] (used as an effective mitigation strategy in previous TYPO3 versions) was not evaluated anymore, and reintroduced the vulnerability.",
  "repo": "TYPO3/typo3",
  "patch_hash": "5cbff85506cebe343e5ae59228977547cf8e3cf4",
  "patch_info": {
    "commit_hash": "5cbff85506cebe343e5ae59228977547cf8e3cf4",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/5cbff85506cebe343e5ae59228977547cf8e3cf4",
    "files": [
      "typo3/sysext/backend/Configuration/RequestMiddlewares.php",
      "typo3/sysext/core/Classes/Http/NormalizedParams.php",
      "typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php",
      "typo3/sysext/core/Classes/ServiceProvider.php",
      "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "typo3/sysext/core/Documentation/Changelog/11.5/Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst",
      "typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php",
      "typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php",
      "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php",
      "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
      "typo3/sysext/frontend/Configuration/RequestMiddlewares.php",
      "typo3/sysext/install/Classes/Controller/InstallerController.php",
      "typo3/sysext/install/Classes/ServiceProvider.php",
      "typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php",
      "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
      "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
      "typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php"
    ],
    "message": "[SECURITY] Verify HTTP_HOST via FE/BE middleware\n\nAvoid a dependency cycle between HTTP_HOST generation\nand verification.\nAs $GLOBALS['TYPO3_REQUEST'] is not available\nduring ServerRequestFactory::fromGlobals(), HTTP_HOST\nverification can not be performed at that point.\nIt is therefore delayed into a context aware middleware\ninstead of being skipped because of missing $GLOBALS.\n\nPositive advantage of moving the verification into\nfrontend and backend middlewares, is that context\nchecks to exclude CLI/installtool can be dropped.\n\nAs a side effect this also fixes the frontend to installtool\nredirect if TYPO3 is not yet configured and running with\nan invalid SERVER_NAME, as ServerRequestFactory::fromGlobals()\ndoesn't fail.\n\nReleases: master\nResolves: #95395\nChange-Id: Idd3a3449a878cd625dad0d04892d9f0e710ca1a9\nSecurity-Bulletin: TYPO3-CORE-SA-2021-015\nSecurity-References: CVE-2021-41114\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/71438\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/backend/Configuration/RequestMiddlewares.php||typo3/sysext/backend/Configuration/RequestMiddlewares.php",
      "typo3/sysext/core/Classes/Http/NormalizedParams.php||typo3/sysext/core/Classes/Http/NormalizedParams.php",
      "typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php||typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php",
      "typo3/sysext/core/Classes/ServiceProvider.php||typo3/sysext/core/Classes/ServiceProvider.php",
      "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php||typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php",
      "typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php||typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php",
      "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php",
      "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
      "typo3/sysext/frontend/Configuration/RequestMiddlewares.php||typo3/sysext/frontend/Configuration/RequestMiddlewares.php",
      "typo3/sysext/install/Classes/Controller/InstallerController.php||typo3/sysext/install/Classes/Controller/InstallerController.php",
      "typo3/sysext/install/Classes/ServiceProvider.php||typo3/sysext/install/Classes/ServiceProvider.php",
      "typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php||typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php",
      "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
      "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
      "typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php||typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php"
    ]
  },
  "patch_diff": {
    "typo3/sysext/backend/Configuration/RequestMiddlewares.php||typo3/sysext/backend/Configuration/RequestMiddlewares.php": [
      "File: typo3/sysext/backend/Configuration/RequestMiddlewares.php -> typo3/sysext/backend/Configuration/RequestMiddlewares.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: return [",
      "13:     'backend' => [",
      "15:         'typo3/cms-core/normalized-params-attribute' => [",
      "16:             'target' => \\TYPO3\\CMS\\Core\\Middleware\\NormalizedParamsAttribute::class,",
      "17:         ],",
      "18:         'typo3/cms-backend/locked-backend' => [",
      "19:             'target' => \\TYPO3\\CMS\\Backend\\Middleware\\LockedBackendGuard::class,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:         'typo3/cms-core/verify-host-header' => [",
      "16:             'target' => \\TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader::class,",
      "17:         ],",
      "21:             'after' => [",
      "22:                 'typo3/cms-core/verify-host-header',",
      "23:             ],",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Http/NormalizedParams.php||typo3/sysext/core/Classes/Http/NormalizedParams.php": [
      "File: typo3/sysext/core/Classes/Http/NormalizedParams.php -> typo3/sysext/core/Classes/Http/NormalizedParams.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "585:                 $httpHost = $xForwardedHost;",
      "586:             }",
      "587:         }",
      "596:         return $httpHost;",
      "597:     }",
      "",
      "[Removed Lines]",
      "588:         if (!GeneralUtility::isAllowedHostHeaderValue($httpHost)) {",
      "589:             throw new \\UnexpectedValueException(",
      "590:                 'The current host header value does not match the configured trusted hosts pattern!'",
      "591:                 . ' Check the pattern defined in $GLOBALS[\\'TYPO3_CONF_VARS\\'][\\'SYS\\'][\\'trustedHostsPattern\\']'",
      "592:                 . ' and adapt it, if you want to allow the current host header \\'' . $httpHost . '\\' for your installation.',",
      "593:                 1396795886",
      "594:             );",
      "595:         }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php||typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php": [
      "File: typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php -> typo3/sysext/core/Classes/Middleware/VerifyHostHeader.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "18: namespace TYPO3\\CMS\\Core\\Middleware;",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use Psr\\Http\\Message\\ServerRequestInterface;",
      "22: use Psr\\Http\\Server\\MiddlewareInterface;",
      "23: use Psr\\Http\\Server\\RequestHandlerInterface;",
      "30: class VerifyHostHeader implements MiddlewareInterface",
      "31: {",
      "32:     public const ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL = '.*';",
      "33:     public const ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME = 'SERVER_NAME';",
      "35:     protected string $trustedHostsPattern;",
      "37:     public function __construct(string $trustedHostsPattern)",
      "38:     {",
      "39:         $this->trustedHostsPattern = $trustedHostsPattern;",
      "40:     }",
      "42:     public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface",
      "43:     {",
      "44:         $serverParams = $request->getServerParams();",
      "45:         $httpHost = $serverParams['HTTP_HOST'] ?? '';",
      "46:         if (!$this->isAllowedHostHeaderValue($httpHost, $serverParams)) {",
      "47:             throw new \\UnexpectedValueException(",
      "48:                 'The current host header value does not match the configured trusted hosts pattern!'",
      "49:                 . ' Check the pattern defined in $GLOBALS[\\'TYPO3_CONF_VARS\\'][\\'SYS\\'][\\'trustedHostsPattern\\']'",
      "50:                 . ' and adapt it, if you want to allow the current host header \\'' . $httpHost . '\\' for your installation.',",
      "51:                 1396795884",
      "52:             );",
      "53:         }",
      "55:         return $handler->handle($request);",
      "56:     }",
      "64:     public function isAllowedHostHeaderValue(string $hostHeaderValue, array $serverParams): bool",
      "65:     {",
      "67:         if ($this->trustedHostsPattern === '') {",
      "68:             return false;",
      "69:         }",
      "71:         if ($this->trustedHostsPattern === self::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "72:             return true;",
      "73:         }",
      "75:         return $this->hostHeaderValueMatchesTrustedHostsPattern($hostHeaderValue, $serverParams);",
      "76:     }",
      "81:     protected function hostHeaderValueMatchesTrustedHostsPattern(string $hostHeaderValue, array $serverParams): bool",
      "82:     {",
      "83:         if ($this->trustedHostsPattern === self::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME) {",
      "84:             $host = strtolower($hostHeaderValue);",
      "88:             $port = self::webserverUsesHttps($serverParams) ? '443' : '80';",
      "90:             $parsedHostValue = parse_url('http://' . $host);",
      "91:             if (isset($parsedHostValue['port'])) {",
      "92:                 $host = $parsedHostValue['host'];",
      "93:                 $port = (string)$parsedHostValue['port'];",
      "94:             }",
      "98:             $hostMatch = $host === strtolower($serverParams['SERVER_NAME']) && $port === $serverParams['SERVER_PORT'];",
      "99:         } else {",
      "102:             $hostMatch = (bool)preg_match('/^' . $this->trustedHostsPattern . '$/i', $hostHeaderValue);",
      "103:         }",
      "105:         return $hostMatch;",
      "106:     }",
      "116:     protected function webserverUsesHttps(array $serverParams): bool",
      "117:     {",
      "118:         if (!empty($serverParams['SSL_SESSION_ID'])) {",
      "119:             return true;",
      "120:         }",
      "124:         return !empty($serverParams['HTTPS']) && strtolower($serverParams['HTTPS']) !== 'off';",
      "125:     }",
      "126: }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/ServiceProvider.php||typo3/sysext/core/Classes/ServiceProvider.php": [
      "File: typo3/sysext/core/Classes/ServiceProvider.php -> typo3/sysext/core/Classes/ServiceProvider.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "70:             Mail\\TransportFactory::class => [ static::class, 'getMailTransportFactory' ],",
      "71:             Messaging\\FlashMessageService::class => [ static::class, 'getFlashMessageService' ],",
      "72:             Middleware\\ResponsePropagation::class => [ static::class, 'getResponsePropagationMiddleware' ],",
      "73:             Package\\FailsafePackageManager::class => [ static::class, 'getFailsafePackageManager' ],",
      "74:             Package\\Cache\\PackageDependentCacheIdentifier::class => [ static::class, 'getPackageDependentCacheIdentifier' ],",
      "75:             Registry::class => [ static::class, 'getRegistry' ],",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "73:             Middleware\\VerifyHostHeader::class => [ static::class, 'getVerifyHostHeaderMiddleware' ],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "369:         return self::new($container, Middleware\\ResponsePropagation::class);",
      "370:     }",
      "372:     public static function getFailsafePackageManager(ContainerInterface $container): Package\\FailsafePackageManager",
      "373:     {",
      "374:         $packageManager = $container->get(Package\\PackageManager::class);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "373:     public static function getVerifyHostHeaderMiddleware(ContainerInterface $container): Middleware\\VerifyHostHeader",
      "374:     {",
      "375:         return self::new($container, Middleware\\VerifyHostHeader::class, [",
      "376:             $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] ?? '',",
      "377:         ]);",
      "378:     }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
      "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: use TYPO3\\CMS\\Core\\Http\\ApplicationType;",
      "31: use TYPO3\\CMS\\Core\\Http\\RequestFactory;",
      "32: use TYPO3\\CMS\\Core\\Log\\LogManager;",
      "33: use TYPO3\\CMS\\Core\\Package\\Exception as PackageException;",
      "34: use TYPO3\\CMS\\Core\\SingletonInterface;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "47: class GeneralUtility",
      "48: {",
      "49:     const ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL = '.*';",
      "50:     const ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME = 'SERVER_NAME';",
      "",
      "[Removed Lines]",
      "58:     protected static $allowHostHeaderValue = false;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2563:                         $retVal = $host;",
      "2564:                     }",
      "2565:                 }",
      "2572:                 break;",
      "2573:             case 'HTTP_REFERER':",
      "",
      "[Removed Lines]",
      "2566:                 if (!static::isAllowedHostHeaderValue($retVal)) {",
      "2567:                     throw new \\UnexpectedValueException(",
      "2568:                         'The current host header value does not match the configured trusted hosts pattern! Check the pattern defined in $GLOBALS[\\'TYPO3_CONF_VARS\\'][\\'SYS\\'][\\'trustedHostsPattern\\'] and adapt it, if you want to allow the current host header \\'' . $retVal . '\\' for your installation.',",
      "2569:                         1396795884",
      "2570:                     );",
      "2571:                 }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2704:     public static function isAllowedHostHeaderValue($hostHeaderValue)",
      "2705:     {",
      "2760:     }",
      "",
      "[Removed Lines]",
      "2706:         if (static::$allowHostHeaderValue === true) {",
      "2707:             return true;",
      "2708:         }",
      "2710:         if (static::isInternalRequestType()) {",
      "2711:             return static::$allowHostHeaderValue = true;",
      "2712:         }",
      "2715:         if (empty($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'])) {",
      "2716:             return false;",
      "2717:         }",
      "2719:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === self::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "2720:             static::$allowHostHeaderValue = true;",
      "2721:         } else {",
      "2722:             static::$allowHostHeaderValue = static::hostHeaderValueMatchesTrustedHostsPattern($hostHeaderValue);",
      "2723:         }",
      "2725:         return static::$allowHostHeaderValue;",
      "2726:     }",
      "2735:     public static function hostHeaderValueMatchesTrustedHostsPattern($hostHeaderValue)",
      "2736:     {",
      "2737:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === self::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME) {",
      "2738:             $host = strtolower($hostHeaderValue);",
      "2742:             $port = self::webserverUsesHttps() ? '443' : '80';",
      "2744:             $parsedHostValue = parse_url('http://' . $host);",
      "2745:             if (isset($parsedHostValue['port'])) {",
      "2746:                 $host = $parsedHostValue['host'];",
      "2747:                 $port = (string)$parsedHostValue['port'];",
      "2748:             }",
      "2752:             $hostMatch = $host === strtolower($_SERVER['SERVER_NAME']) && $port === $_SERVER['SERVER_PORT'];",
      "2753:         } else {",
      "2756:             $hostMatch = (bool)preg_match('/^' . $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] . '$/i', $hostHeaderValue);",
      "2757:         }",
      "2759:         return $hostMatch;",
      "",
      "[Added Lines]",
      "2694:         trigger_error('GeneralUtility::isAllowedHostHeaderValue() will be removed in TYPO3 v12.0. Host header is verified by frontend and backend middlewares.', E_USER_DEPRECATED);",
      "2696:         $verifyHostHeader = new VerifyHostHeader($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] ?? '');",
      "2697:         return $verifyHostHeader->isAllowedHostHeaderValue($hostHeaderValue, $_SERVER);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2780:         return !empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off';",
      "2781:     }",
      "",
      "[Removed Lines]",
      "2793:     protected static function isInternalRequestType()",
      "2794:     {",
      "2795:         return Environment::isCli()",
      "2796:             || !isset($GLOBALS['TYPO3_REQUEST'])",
      "2797:             || !($GLOBALS['TYPO3_REQUEST'] instanceof ServerRequestInterface)",
      "2798:             || (bool)((int)($GLOBALS['TYPO3_REQUEST'])->getAttribute('applicationType') & TYPO3_REQUESTTYPE_INSTALL);",
      "2799:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php||typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php": [
      "File: typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php -> typo3/sysext/core/Tests/Acceptance/Application/InstallTool/UpgradeCest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "85:         $I->click($versionPanel . ' a[data-bs-toggle=\"collapse\"]');",
      "86:         $I->click($versionPanel . ' .t3js-upgradeDocs-markRead');",
      "91:         $I->amGoingTo('mark an item as unread');",
      "92:         $I->click('#heading-read');",
      "",
      "[Removed Lines]",
      "88:         $textNewFirstPanelHeading = $I->grabTextFrom($versionPanel . ' .panel-heading');",
      "89:         $I->assertNotEquals($textCurrentFirstPanelHeading, $textNewFirstPanelHeading);",
      "",
      "[Added Lines]",
      "88:         $I->dontSee($textCurrentFirstPanelHeading, '#version-1');",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php||typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php": [
      "File: typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php -> typo3/sysext/core/Tests/Unit/Middleware/VerifyHostHeaderTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "18: namespace TYPO3\\CMS\\Core\\Tests\\Unit\\Middleware;",
      "20: use Prophecy\\PhpUnit\\ProphecyTrait;",
      "21: use Psr\\Http\\Message\\ResponseInterface;",
      "22: use Psr\\Http\\Message\\ServerRequestInterface;",
      "23: use Psr\\Http\\Server\\RequestHandlerInterface;",
      "24: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "25: use TYPO3\\TestingFramework\\Core\\Unit\\UnitTestCase;",
      "27: class VerifyHostHeaderTest extends UnitTestCase",
      "28: {",
      "29:     use ProphecyTrait;",
      "34:     public function isAllowedHostHeaderValueReturnsFalseIfTrustedHostsIsNotConfigured(): void",
      "35:     {",
      "36:         $subject = new VerifyHostHeader('');",
      "37:         $serverParams = $_SERVER;",
      "38:         self::assertFalse($subject->isAllowedHostHeaderValue('evil.foo.bar', $serverParams));",
      "39:     }",
      "41:     public static function hostnamesMatchingTrustedHostsConfigurationDataProvider(): array",
      "42:     {",
      "43:         return [",
      "44:             'hostname without port matching' => ['lolli.did.this', '.*\\.did\\.this'],",
      "45:             'other hostname without port matching' => ['helmut.did.this', '.*\\.did\\.this'],",
      "46:             'two different hostnames without port matching 1st host' => ['helmut.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "47:             'two different hostnames without port matching 2nd host' => ['lolli.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "48:             'hostname with port matching' => ['lolli.did.this:42', '.*\\.did\\.this:42'],",
      "49:             'hostnames are case insensitive 1' => ['lolli.DID.this:42', '.*\\.did.this:42'],",
      "50:             'hostnames are case insensitive 2' => ['lolli.did.this:42', '.*\\.DID.this:42'],",
      "51:         ];",
      "52:     }",
      "54:     public static function hostnamesNotMatchingTrustedHostsConfigurationDataProvider(): array",
      "55:     {",
      "56:         return [",
      "57:             'hostname without port' => ['lolli.did.this', 'helmut\\.did\\.this'],",
      "58:             'hostname with port, but port not allowed' => ['lolli.did.this:42', 'helmut\\.did\\.this'],",
      "59:             'two different hostnames in pattern but host header starts with different value #1' => ['sub.helmut.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "60:             'two different hostnames in pattern but host header starts with different value #2' => ['sub.lolli.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "61:             'two different hostnames in pattern but host header ends with different value #1' => ['helmut.is.secure.tld', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "62:             'two different hostnames in pattern but host header ends with different value #2' => ['lolli.is.secure.tld', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "63:         ];",
      "64:     }",
      "72:     public function isAllowedHostHeaderValueReturnsTrueIfHostValueMatches(string $httpHost, string $hostNamePattern): void",
      "73:     {",
      "74:         $serverParams = $_SERVER;",
      "76:         $subject = new VerifyHostHeader($hostNamePattern);",
      "77:         self::assertTrue($subject->isAllowedHostHeaderValue($httpHost, $serverParams));",
      "78:     }",
      "86:     public function isAllowedHostHeaderValueReturnsFalseIfHostValueMatches(string $httpHost, string $hostNamePattern): void",
      "87:     {",
      "88:         $serverParams = $_SERVER;",
      "90:         $subject = new VerifyHostHeader($hostNamePattern);",
      "91:         self::assertFalse($subject->isAllowedHostHeaderValue($httpHost, $serverParams));",
      "92:     }",
      "94:     public function serverNamePatternDataProvider(): array",
      "95:     {",
      "96:         return [",
      "97:             'host value matches server name and server port is default http' => [",
      "98:                 'httpHost' => 'secure.web.server',",
      "99:                 'serverName' => 'secure.web.server',",
      "100:                 'isAllowed' => true,",
      "101:                 'serverPort' => '80',",
      "102:                 'ssl' => 'Off',",
      "103:             ],",
      "104:             'host value matches server name if compared case insensitive 1' => [",
      "105:                 'httpHost' => 'secure.web.server',",
      "106:                 'serverName' => 'secure.WEB.server',",
      "107:                 'isAllowed' => true,",
      "108:             ],",
      "109:             'host value matches server name if compared case insensitive 2' => [",
      "110:                 'httpHost' => 'secure.WEB.server',",
      "111:                 'serverName' => 'secure.web.server',",
      "112:                 'isAllowed' => true,",
      "113:             ],",
      "114:             'host value matches server name and server port is default https' => [",
      "115:                 'httpHost' => 'secure.web.server',",
      "116:                 'serverName' => 'secure.web.server',",
      "117:                 'isAllowed' => true,",
      "118:                 'serverPort' => '443',",
      "119:                 'ssl' => 'On',",
      "120:             ],",
      "121:             'host value matches server name and server port' => [",
      "122:                 'httpHost' => 'secure.web.server:88',",
      "123:                 'serverName' => 'secure.web.server',",
      "124:                 'isAllowed' => true,",
      "125:                 'serverPort' => '88',",
      "126:             ],",
      "127:             'host value matches server name case insensitive 1 and server port' => [",
      "128:                 'httpHost' => 'secure.WEB.server:88',",
      "129:                 'serverName' => 'secure.web.server',",
      "130:                 'isAllowed' => true,",
      "131:                 'serverPort' => '88',",
      "132:             ],",
      "133:             'host value matches server name case insensitive 2 and server port' => [",
      "134:                 'httpHost' => 'secure.web.server:88',",
      "135:                 'serverName' => 'secure.WEB.server',",
      "136:                 'isAllowed' => true,",
      "137:                 'serverPort' => '88',",
      "138:             ],",
      "139:             'host value is ipv6 but matches server name and server port' => [",
      "140:                 'httpHost' => '[::1]:81',",
      "141:                 'serverName' => '[::1]',",
      "142:                 'isAllowed' => true,",
      "143:                 'serverPort' => '81',",
      "144:             ],",
      "145:             'host value does not match server name' => [",
      "146:                 'httpHost' => 'insecure.web.server',",
      "147:                 'serverName' => 'secure.web.server',",
      "148:                 'isAllowed' => false,",
      "149:             ],",
      "150:             'host value does not match server port' => [",
      "151:                 'httpHost' => 'secure.web.server:88',",
      "152:                 'serverName' => 'secure.web.server',",
      "153:                 'isAllowed' => false,",
      "154:                 'serverPort' => '89',",
      "155:             ],",
      "156:             'host value has default port that does not match server port' => [",
      "157:                 'httpHost' => 'secure.web.server',",
      "158:                 'serverName' => 'secure.web.server',",
      "159:                 'isAllowed' => false,",
      "160:                 'serverPort' => '81',",
      "161:                 'ssl' => 'Off',",
      "162:             ],",
      "163:             'host value has default port that does not match server ssl port' => [",
      "164:                 'httpHost' => 'secure.web.server',",
      "165:                 'serverName' => 'secure.web.server',",
      "166:                 'isAllowed' => false,",
      "167:                 'serverPort' => '444',",
      "168:                 'ssl' => 'On',",
      "169:             ],",
      "170:         ];",
      "171:     }",
      "183:     public function isAllowedHostHeaderValueWorksCorrectlyWithWithServerNamePattern(",
      "184:         string $httpHost,",
      "185:         string $serverName,",
      "186:         bool $isAllowed,",
      "187:         string $serverPort = '80',",
      "188:         string $ssl = 'Off'",
      "189:     ): void {",
      "190:         $serverParams = $_SERVER;",
      "191:         $serverParams['SERVER_NAME'] = $serverName;",
      "192:         $serverParams['SERVER_PORT'] = $serverPort;",
      "193:         $serverParams['HTTPS'] = $ssl;",
      "195:         $subject = new VerifyHostHeader(VerifyHostHeader::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME);",
      "197:         self::assertSame($isAllowed, $subject->isAllowedHostHeaderValue($httpHost, $serverParams));",
      "198:     }",
      "210:     public function isAllowedHostHeaderValueWorksCorrectlyWithWithServerNamePatternAndSslProxy(",
      "211:         string $httpHost,",
      "212:         string $serverName,",
      "213:         bool $isAllowed,",
      "214:         string $serverPort = '80',",
      "215:         string $ssl = 'Off'",
      "216:     ): void {",
      "217:         $serverParams = $_SERVER;",
      "218:         $serverParams['REMOTE_ADDR'] = '10.0.0.1';",
      "219:         $serverParams['SERVER_NAME'] = $serverName;",
      "220:         $serverParams['SERVER_PORT'] = $serverPort;",
      "221:         $serverParams['HTTPS'] = $ssl;",
      "223:         $subject = new VerifyHostHeader(VerifyHostHeader::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME);",
      "225:         self::assertSame($isAllowed, $subject->isAllowedHostHeaderValue($httpHost, $serverParams));",
      "226:     }",
      "234:     public function processThrowsExceptionForNotAllowedHostnameValues(string $httpHost, string $hostNamePattern): void",
      "235:     {",
      "236:         $this->expectException(\\UnexpectedValueException::class);",
      "237:         $this->expectExceptionCode(1396795884);",
      "239:         $serverParams = $_SERVER;",
      "240:         $serverParams['HTTP_HOST'] = $httpHost;",
      "242:         $subject = new VerifyHostHeader($hostNamePattern);",
      "244:         $requestProphecy = $this->prophesize(ServerRequestInterface::class);",
      "245:         $requestProphecy->getServerParams()->willReturn($serverParams);",
      "247:         $requestHandlerProphecy = $this->prophesize(RequestHandlerInterface::class);",
      "249:         $subject->process($requestProphecy->reveal(), $requestHandlerProphecy->reveal());",
      "250:     }",
      "258:     public function processAllowsAllHostnameValuesIfHostPatternIsSetToAllowAll(string $httpHost, string $hostNamePattern): void",
      "259:     {",
      "260:         $serverParams = $_SERVER;",
      "261:         $serverParams['HTTP_HOST'] = $httpHost;",
      "263:         $subject = new VerifyHostHeader(VerifyHostHeader::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL);",
      "264:         $requestProphecy = $this->prophesize(ServerRequestInterface::class);",
      "265:         $requestProphecy->getServerParams()->willReturn($serverParams);",
      "267:         $responseProphecy = $this->prophesize(ResponseInterface::class);",
      "269:         $requestHandlerProphecy = $this->prophesize(RequestHandlerInterface::class);",
      "270:         $requestHandlerProphecy->handle($requestProphecy)->willReturn($responseProphecy->reveal())->shouldBeCalled();",
      "272:         $subject->process($requestProphecy->reveal(), $requestHandlerProphecy->reveal());",
      "273:     }",
      "274: }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php": [
      "File: typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php -> typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFixture.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: class GeneralUtilityFixture extends GeneralUtility",
      "26: {",
      "",
      "[Removed Lines]",
      "27:     public static int $isAllowedHostHeaderValueCallCount = 0;",
      "35:     public static function isAllowedHostHeaderValue($hostHeaderValue): bool",
      "36:     {",
      "37:         self::$isAllowedHostHeaderValueCallCount++;",
      "38:         return parent::isAllowedHostHeaderValue($hostHeaderValue);",
      "39:     }",
      "44:     public static function setAllowHostHeaderValue(bool $allowHostHeaderValue): void",
      "45:     {",
      "46:         static::$allowHostHeaderValue = $allowHostHeaderValue;",
      "47:     }",
      "54:     protected static function isInternalRequestType(): bool",
      "55:     {",
      "56:         return false;",
      "57:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php": [
      "File: typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php -> typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "71:     protected function setUp(): void",
      "72:     {",
      "73:         parent::setUp();",
      "77:         $this->backupPackageManager = ExtensionManagementUtilityAccessibleProxy::getPackageManager();",
      "78:     }",
      "",
      "[Removed Lines]",
      "74:         GeneralUtilityFixture::$isAllowedHostHeaderValueCallCount = 0;",
      "75:         GeneralUtilityFixture::setAllowHostHeaderValue(false);",
      "76:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1294:         self::assertEquals($expectedIp, GeneralUtility::getIndpEnv('TYPO3_HOST_ONLY'));",
      "1295:     }",
      "",
      "[Removed Lines]",
      "1300:     public function isAllowedHostHeaderValueReturnsFalseIfTrustedHostsIsNotConfigured(): void",
      "1301:     {",
      "1302:         unset($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern']);",
      "1303:         self::assertFalse(GeneralUtilityFixture::isAllowedHostHeaderValue('evil.foo.bar'));",
      "1304:     }",
      "1309:     public static function hostnamesMatchingTrustedHostsConfigurationDataProvider(): array",
      "1310:     {",
      "1311:         return [",
      "1312:             'hostname without port matching' => ['lolli.did.this', '.*\\.did\\.this'],",
      "1313:             'other hostname without port matching' => ['helmut.did.this', '.*\\.did\\.this'],",
      "1314:             'two different hostnames without port matching 1st host' => ['helmut.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1315:             'two different hostnames without port matching 2nd host' => ['lolli.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1316:             'hostname with port matching' => ['lolli.did.this:42', '.*\\.did\\.this:42'],",
      "1317:             'hostnames are case insensitive 1' => ['lolli.DID.this:42', '.*\\.did.this:42'],",
      "1318:             'hostnames are case insensitive 2' => ['lolli.did.this:42', '.*\\.DID.this:42'],",
      "1319:         ];",
      "1320:     }",
      "1325:     public static function hostnamesNotMatchingTrustedHostsConfigurationDataProvider(): array",
      "1326:     {",
      "1327:         return [",
      "1328:             'hostname without port' => ['lolli.did.this', 'helmut\\.did\\.this'],",
      "1329:             'hostname with port, but port not allowed' => ['lolli.did.this:42', 'helmut\\.did\\.this'],",
      "1330:             'two different hostnames in pattern but host header starts with different value #1' => ['sub.helmut.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1331:             'two different hostnames in pattern but host header starts with different value #2' => ['sub.lolli.is.secure', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1332:             'two different hostnames in pattern but host header ends with different value #1' => ['helmut.is.secure.tld', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1333:             'two different hostnames in pattern but host header ends with different value #2' => ['lolli.is.secure.tld', '(helmut\\.is\\.secure|lolli\\.is\\.secure)'],",
      "1334:         ];",
      "1335:     }",
      "1343:     public function isAllowedHostHeaderValueReturnsTrueIfHostValueMatches(string $httpHost, string $hostNamePattern): void",
      "1344:     {",
      "1345:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = $hostNamePattern;",
      "1346:         self::assertTrue(GeneralUtilityFixture::isAllowedHostHeaderValue($httpHost));",
      "1347:     }",
      "1355:     public function isAllowedHostHeaderValueReturnsFalseIfHostValueMatches(string $httpHost, string $hostNamePattern): void",
      "1356:     {",
      "1357:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = $hostNamePattern;",
      "1358:         self::assertFalse(GeneralUtilityFixture::isAllowedHostHeaderValue($httpHost));",
      "1359:     }",
      "1361:     public function serverNamePatternDataProvider(): array",
      "1362:     {",
      "1363:         return [",
      "1364:             'host value matches server name and server port is default http' => [",
      "1365:                 'httpHost' => 'secure.web.server',",
      "1366:                 'serverName' => 'secure.web.server',",
      "1367:                 'isAllowed' => true,",
      "1368:                 'serverPort' => '80',",
      "1369:                 'ssl' => 'Off',",
      "1370:             ],",
      "1371:             'host value matches server name if compared case insensitive 1' => [",
      "1372:                 'httpHost' => 'secure.web.server',",
      "1373:                 'serverName' => 'secure.WEB.server',",
      "1374:                 'isAllowed' => true,",
      "1375:             ],",
      "1376:             'host value matches server name if compared case insensitive 2' => [",
      "1377:                 'httpHost' => 'secure.WEB.server',",
      "1378:                 'serverName' => 'secure.web.server',",
      "1379:                 'isAllowed' => true,",
      "1380:             ],",
      "1381:             'host value matches server name and server port is default https' => [",
      "1382:                 'httpHost' => 'secure.web.server',",
      "1383:                 'serverName' => 'secure.web.server',",
      "1384:                 'isAllowed' => true,",
      "1385:                 'serverPort' => '443',",
      "1386:                 'ssl' => 'On',",
      "1387:             ],",
      "1388:             'host value matches server name and server port' => [",
      "1389:                 'httpHost' => 'secure.web.server:88',",
      "1390:                 'serverName' => 'secure.web.server',",
      "1391:                 'isAllowed' => true,",
      "1392:                 'serverPort' => '88',",
      "1393:             ],",
      "1394:             'host value matches server name case insensitive 1 and server port' => [",
      "1395:                 'httpHost' => 'secure.WEB.server:88',",
      "1396:                 'serverName' => 'secure.web.server',",
      "1397:                 'isAllowed' => true,",
      "1398:                 'serverPort' => '88',",
      "1399:             ],",
      "1400:             'host value matches server name case insensitive 2 and server port' => [",
      "1401:                 'httpHost' => 'secure.web.server:88',",
      "1402:                 'serverName' => 'secure.WEB.server',",
      "1403:                 'isAllowed' => true,",
      "1404:                 'serverPort' => '88',",
      "1405:             ],",
      "1406:             'host value is ipv6 but matches server name and server port' => [",
      "1407:                 'httpHost' => '[::1]:81',",
      "1408:                 'serverName' => '[::1]',",
      "1409:                 'isAllowed' => true,",
      "1410:                 'serverPort' => '81',",
      "1411:             ],",
      "1412:             'host value does not match server name' => [",
      "1413:                 'httpHost' => 'insecure.web.server',",
      "1414:                 'serverName' => 'secure.web.server',",
      "1415:                 'isAllowed' => false,",
      "1416:             ],",
      "1417:             'host value does not match server port' => [",
      "1418:                 'httpHost' => 'secure.web.server:88',",
      "1419:                 'serverName' => 'secure.web.server',",
      "1420:                 'isAllowed' => false,",
      "1421:                 'serverPort' => '89',",
      "1422:             ],",
      "1423:             'host value has default port that does not match server port' => [",
      "1424:                 'httpHost' => 'secure.web.server',",
      "1425:                 'serverName' => 'secure.web.server',",
      "1426:                 'isAllowed' => false,",
      "1427:                 'serverPort' => '81',",
      "1428:                 'ssl' => 'Off',",
      "1429:             ],",
      "1430:             'host value has default port that does not match server ssl port' => [",
      "1431:                 'httpHost' => 'secure.web.server',",
      "1432:                 'serverName' => 'secure.web.server',",
      "1433:                 'isAllowed' => false,",
      "1434:                 'serverPort' => '444',",
      "1435:                 'ssl' => 'On',",
      "1436:             ],",
      "1437:         ];",
      "1438:     }",
      "1450:     public function isAllowedHostHeaderValueWorksCorrectlyWithWithServerNamePattern(",
      "1451:         string $httpHost,",
      "1452:         string $serverName,",
      "1453:         bool $isAllowed,",
      "1454:         string $serverPort = '80',",
      "1455:         string $ssl = 'Off'",
      "1456:     ): void {",
      "1457:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME;",
      "1458:         $_SERVER['SERVER_NAME'] = $serverName;",
      "1459:         $_SERVER['SERVER_PORT'] = $serverPort;",
      "1460:         $_SERVER['HTTPS'] = $ssl;",
      "1461:         self::assertSame($isAllowed, GeneralUtilityFixture::isAllowedHostHeaderValue($httpHost));",
      "1462:     }",
      "1474:     public function isAllowedHostHeaderValueWorksCorrectlyWithWithServerNamePatternAndSslProxy(",
      "1475:         string $httpHost,",
      "1476:         string $serverName,",
      "1477:         bool $isAllowed,",
      "1478:         string $serverPort = '80',",
      "1479:         string $ssl = 'Off'",
      "1480:     ): void {",
      "1481:         $backup = ['sys' => $GLOBALS['TYPO3_CONF_VARS']['SYS'], 'server' => $_SERVER];",
      "1483:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME;",
      "1484:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['reverseProxySSL'] = '*';",
      "1485:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['reverseProxyIP'] = '10.0.0.1';",
      "1487:         $_SERVER['REMOTE_ADDR'] = '10.0.0.1';",
      "1488:         $_SERVER['SERVER_NAME'] = $serverName;",
      "1489:         $_SERVER['SERVER_PORT'] = $serverPort;",
      "1490:         $_SERVER['HTTPS'] = $ssl;",
      "1492:         self::assertSame($isAllowed, GeneralUtilityFixture::isAllowedHostHeaderValue($httpHost));",
      "1494:         $GLOBALS['TYPO3_CONF_VARS']['SYS'] = $backup['sys'];",
      "1495:         $_SERVER = $backup['server'];",
      "1496:     }",
      "1501:     public function allGetIndpEnvCallsRelatedToHostNamesCallIsAllowedHostHeaderValue(): void",
      "1502:     {",
      "1503:         GeneralUtilityFixture::getIndpEnv('HTTP_HOST');",
      "1504:         GeneralUtility::flushInternalRuntimeCaches();",
      "1505:         GeneralUtilityFixture::getIndpEnv('TYPO3_HOST_ONLY');",
      "1506:         GeneralUtility::flushInternalRuntimeCaches();",
      "1507:         GeneralUtilityFixture::getIndpEnv('TYPO3_REQUEST_HOST');",
      "1508:         GeneralUtility::flushInternalRuntimeCaches();",
      "1509:         GeneralUtilityFixture::getIndpEnv('TYPO3_REQUEST_URL');",
      "1510:         self::assertSame(4, GeneralUtilityFixture::$isAllowedHostHeaderValueCallCount);",
      "1511:     }",
      "1519:     public function getIndpEnvForHostThrowsExceptionForNotAllowedHostnameValues(string $httpHost, string $hostNamePattern): void",
      "1520:     {",
      "1521:         $this->expectException(\\UnexpectedValueException::class);",
      "1522:         $this->expectExceptionCode(1396795884);",
      "1523:         $_SERVER['HTTP_HOST'] = $httpHost;",
      "1524:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = $hostNamePattern;",
      "1525:         GeneralUtilityFixture::getIndpEnv('HTTP_HOST');",
      "1526:     }",
      "1534:     public function getIndpEnvForHostAllowsAllHostnameValuesIfHostPatternIsSetToAllowAll(string $httpHost, string $hostNamePattern): void",
      "1535:     {",
      "1536:         $_SERVER['HTTP_HOST'] = $httpHost;",
      "1537:         $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] = GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL;",
      "1538:         self::assertSame($httpHost, GeneralUtility::getIndpEnv('HTTP_HOST'));",
      "1539:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "typo3/sysext/frontend/Configuration/RequestMiddlewares.php||typo3/sysext/frontend/Configuration/RequestMiddlewares.php": [
      "File: typo3/sysext/frontend/Configuration/RequestMiddlewares.php -> typo3/sysext/frontend/Configuration/RequestMiddlewares.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:             'target' => \\TYPO3\\CMS\\Frontend\\Middleware\\TimeTrackerInitialization::class,",
      "17:         ],",
      "19:         'typo3/cms-core/normalized-params-attribute' => [",
      "20:             'target' => \\TYPO3\\CMS\\Core\\Middleware\\NormalizedParamsAttribute::class,",
      "21:             'after' => [",
      "23:             ],",
      "24:         ],",
      "",
      "[Removed Lines]",
      "22:                 'typo3/cms-frontend/timetracker',",
      "",
      "[Added Lines]",
      "19:         'typo3/cms-core/verify-host-header' => [",
      "20:             'target' => \\TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader::class,",
      "21:             'after' => [",
      "22:                 'typo3/cms-frontend/timetracker',",
      "23:             ],",
      "24:         ],",
      "29:                 'typo3/cms-core/verify-host-header',",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Classes/Controller/InstallerController.php||typo3/sysext/install/Classes/Controller/InstallerController.php": [
      "File: typo3/sysext/install/Classes/Controller/InstallerController.php -> typo3/sysext/install/Classes/Controller/InstallerController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "49: use TYPO3\\CMS\\Core\\Information\\Typo3Version;",
      "50: use TYPO3\\CMS\\Core\\Messaging\\FlashMessage;",
      "51: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageQueue;",
      "52: use TYPO3\\CMS\\Core\\Package\\FailsafePackageManager;",
      "53: use TYPO3\\CMS\\Core\\Registry;",
      "54: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "52: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:     private $packageManager;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "118:     private $verifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "124:         SiteConfiguration $siteConfiguration,",
      "125:         Registry $registry,",
      "126:         FailsafePackageManager $packageManager,",
      "127:         PermissionsCheck $databasePermissionsCheck",
      "128:     ) {",
      "129:         $this->lateBootService = $lateBootService;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         VerifyHostHeader $verifyHostHeader,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "133:         $this->siteConfiguration = $siteConfiguration;",
      "134:         $this->registry = $registry;",
      "135:         $this->packageManager = $packageManager;",
      "136:         $this->databasePermissionsCheck = $databasePermissionsCheck;",
      "137:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "143:         $this->verifyHostHeader = $verifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "271:     {",
      "272:         return new JsonResponse([",
      "274:         ]);",
      "275:     }",
      "283:     {",
      "285:             $this->configurationManager->setLocalConfigurationValueByPath('SYS/trustedHostsPattern', '.*');",
      "286:         }",
      "287:         return new JsonResponse([",
      "",
      "[Removed Lines]",
      "270:     public function checkTrustedHostsPatternAction(): ResponseInterface",
      "273:             'success' => GeneralUtility::hostHeaderValueMatchesTrustedHostsPattern($_SERVER['HTTP_HOST']),",
      "282:     public function executeAdjustTrustedHostsPatternAction(): ResponseInterface",
      "284:         if (!GeneralUtility::hostHeaderValueMatchesTrustedHostsPattern($_SERVER['HTTP_HOST'])) {",
      "",
      "[Added Lines]",
      "279:     public function checkTrustedHostsPatternAction(ServerRequestInterface $request): ResponseInterface",
      "281:         $serverParams = $request->getServerParams();",
      "282:         $host = $serverParams['HTTP_HOST'] ?? '';",
      "285:             'success' => $this->verifyHostHeader->isAllowedHostHeaderValue($host, $serverParams),",
      "295:     public function executeAdjustTrustedHostsPatternAction(ServerRequestInterface $request): ResponseInterface",
      "297:         $serverParams = $request->getServerParams();",
      "298:         $host = $serverParams['HTTP_HOST'] ?? '';",
      "300:         if (!$this->verifyHostHeader->isAllowedHostHeaderValue($host, $serverParams)) {",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Classes/ServiceProvider.php||typo3/sysext/install/Classes/ServiceProvider.php": [
      "File: typo3/sysext/install/Classes/ServiceProvider.php -> typo3/sysext/install/Classes/ServiceProvider.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "34: use TYPO3\\CMS\\Core\\Log\\LogManager;",
      "35: use TYPO3\\CMS\\Core\\Middleware\\NormalizedParamsAttribute as NormalizedParamsMiddleware;",
      "36: use TYPO3\\CMS\\Core\\Middleware\\ResponsePropagation as ResponsePropagationMiddleware;",
      "37: use TYPO3\\CMS\\Core\\Package\\AbstractServiceProvider;",
      "38: use TYPO3\\CMS\\Core\\Package\\FailsafePackageManager;",
      "39: use TYPO3\\CMS\\Core\\Package\\PackageManager;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "240:             $container->get(SiteConfiguration::class),",
      "241:             $container->get(Registry::class),",
      "242:             $container->get(FailsafePackageManager::class),",
      "243:             $container->get(PermissionsCheck::class)",
      "244:         );",
      "245:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "244:             $container->get(VerifyHostHeader::class),",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php||typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php": [
      "File: typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php -> typo3/sysext/install/Classes/SystemEnvironment/SetupCheck.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: use TYPO3\\CMS\\Core\\Core\\Environment;",
      "19: use TYPO3\\CMS\\Core\\Messaging\\FlashMessage;",
      "20: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageQueue;",
      "21: use TYPO3\\CMS\\Core\\Service\\OpcodeCacheService;",
      "22: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "65:     protected function checkTrustedHostPattern()",
      "66:     {",
      "68:             $this->messageQueue->enqueue(new FlashMessage(",
      "69:                 'Trusted hosts pattern is configured to allow all header values. Check the pattern defined in Admin'",
      "70:                     . ' Tools -> Settings -> Configure Installation-Wide Options -> System -> trustedHostsPattern'",
      "",
      "[Removed Lines]",
      "67:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "",
      "[Added Lines]",
      "68:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === VerifyHostHeader::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "73:                 FlashMessage::WARNING",
      "74:             ));",
      "75:         } else {",
      "77:                 $this->messageQueue->enqueue(new FlashMessage(",
      "78:                     '',",
      "79:                     'Trusted hosts pattern is configured to allow current host value.'",
      "",
      "[Removed Lines]",
      "76:             if (GeneralUtility::hostHeaderValueMatchesTrustedHostsPattern($_SERVER['HTTP_HOST'])) {",
      "",
      "[Added Lines]",
      "77:             $verifyHostHeader = new VerifyHostHeader($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] ?? '');",
      "78:             if ($verifyHostHeader->isAllowedHostHeaderValue($_SERVER['HTTP_HOST'], $_SERVER)) {",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php": [
      "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "442:             'Breaking-93003-LimitationOfPageRendererToOnlyRenderFullPage.rst',",
      "443:         ],",
      "444:     ],",
      "445: ];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "445:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL' => [",
      "446:         'restFiles' => [",
      "447:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
      "448:         ],",
      "449:     ],",
      "450:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME' => [",
      "451:         'restFiles' => [",
      "452:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
      "453:         ],",
      "454:     ],",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php": [
      "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1261:             'Deprecation-95367-GeneralUtilityisAbsPath.rst',",
      "1262:         ],",
      "1263:     ],",
      "1264: ];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1264:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::isAllowedHostHeaderValue' => [",
      "1265:         'numberOfMandatoryArguments' => 1,",
      "1266:         'maximumNumberOfArguments' => 1,",
      "1267:         'restFiles' => [",
      "1268:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
      "1269:         ],",
      "1270:     ],",
      "",
      "---------------"
    ],
    "typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php||typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php": [
      "File: typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php -> typo3/sysext/reports/Classes/Report/Status/SecurityStatus.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: use TYPO3\\CMS\\Core\\Database\\ConnectionPool;",
      "26: use TYPO3\\CMS\\Core\\Database\\Query\\Restriction\\DeletedRestriction;",
      "27: use TYPO3\\CMS\\Core\\Localization\\LanguageService;",
      "28: use TYPO3\\CMS\\Core\\Resource\\Security\\FileNameValidator;",
      "29: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "30: use TYPO3\\CMS\\Reports\\RequestAwareStatusProviderInterface;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "128:         $message = '';",
      "129:         $severity = ReportStatus::OK;",
      "132:             $value = $this->getLanguageService()->getLL('status_insecure');",
      "133:             $severity = ReportStatus::ERROR;",
      "134:             $message = $this->getLanguageService()->sL('LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:warning.install_trustedhosts');",
      "",
      "[Removed Lines]",
      "131:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "",
      "[Added Lines]",
      "132:         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === VerifyHostHeader::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e9591f2e39d2787247b0a12a264070660bb6e6ec",
      "candidate_info": {
        "commit_hash": "e9591f2e39d2787247b0a12a264070660bb6e6ec",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/e9591f2e39d2787247b0a12a264070660bb6e6ec",
        "files": [
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Documentation/Changelog/12.0/Breaking-96107-DeprecatedFunctionalityRemoved.rst",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
        ],
        "message": "[!!!][TASK] Remove GU::isAllowedHostHeaderValue and constants\n\nThe allowed host header verification is done in the\nmiddleware stack. This utility method and the\nrelated constants are not needed anymore.\n\nRelated gerrit link: https://review.typo3.org/71438/\n\nResolves: #96240\nRelated: #95395\nReleases: main\nChange-Id: I4b7cdbcd809e3269f9144248fa82381404370718\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/72503\nTested-by: core-ci <typo3@b13.com>\nTested-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: Christian Kuhn <lolli@schwarzbu.ch>\nReviewed-by: Stefan B\u00fcrk <stefan@buerk.tech>\nReviewed-by: Christian Kuhn <lolli@schwarzbu.ch>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: use TYPO3\\CMS\\Core\\Http\\ApplicationType;",
          "31: use TYPO3\\CMS\\Core\\Http\\RequestFactory;",
          "32: use TYPO3\\CMS\\Core\\Log\\LogManager;",
          "34: use TYPO3\\CMS\\Core\\Package\\Exception as PackageException;",
          "35: use TYPO3\\CMS\\Core\\SingletonInterface;",
          "",
          "[Removed Lines]",
          "33: use TYPO3\\CMS\\Core\\Middleware\\VerifyHostHeader;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: class GeneralUtility",
          "49: {",
          "",
          "[Removed Lines]",
          "51:     const ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL = '.*';",
          "53:     const ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME = 'SERVER_NAME';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2588:         return $retVal;",
          "2589:     }",
          "",
          "[Removed Lines]",
          "2598:     public static function isAllowedHostHeaderValue($hostHeaderValue)",
          "2599:     {",
          "2600:         trigger_error('GeneralUtility::isAllowedHostHeaderValue() will be removed in TYPO3 v12.0. Host header is verified by frontend and backend middlewares.', E_USER_DEPRECATED);",
          "2602:         $verifyHostHeader = new VerifyHostHeader($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] ?? '');",
          "2603:         return $verifyHostHeader->isAllowedHostHeaderValue($hostHeaderValue, $_SERVER);",
          "2604:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php": [
          "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/ClassConstantMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "446:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL' => [",
          "447:         'restFiles' => [",
          "448:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
          "449:         ],",
          "450:     ],",
          "451:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME' => [",
          "452:         'restFiles' => [",
          "453:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
          "454:         ],",
          "455:     ],",
          "456: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "449:             'Breaking-96107-DeprecatedFunctionalityRemoved.rst',",
          "455:             'Breaking-96107-DeprecatedFunctionalityRemoved.rst',",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php": [
          "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1285:         'maximumNumberOfArguments' => 1,",
          "1286:         'restFiles' => [",
          "1287:             'Deprecation-95395-GeneralUtilityIsAllowedHostHeaderValueAndTrustedHostsPatternConstants.rst',",
          "1288:         ],",
          "1289:     ],",
          "1290: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288:             'Breaking-96107-DeprecatedFunctionalityRemoved.rst',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1f77997185402dc10cb3f22943b3afa99254cd1",
      "candidate_info": {
        "commit_hash": "b1f77997185402dc10cb3f22943b3afa99254cd1",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/b1f77997185402dc10cb3f22943b3afa99254cd1",
        "files": [
          "typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php",
          "typo3/sysext/core/Classes/Log/Writer/FileWriter.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/core/Documentation/Changelog/master/Deprecation-95367-GeneralUtilityisAbsPath.rst",
          "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "typo3/sysext/indexed_search/Classes/Indexer.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
        ],
        "message": "[TASK] Deprecate GeneralUtility::isAbsPath()\n\nThe replacement \"PathUtility::isAbsolutePath()\" works the same\nway and has been around for a long time. For this reason\n\"GeneralUtility::isAbsPath()\" is deprecated.\n\nResolves: #95367\nReleases: master\nChange-Id: Ia2b1bf71773d2f0d4c7ed0ab58a937652ddade74\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/71177\nTested-by: core-ci <typo3@b13.com>\nTested-by: Wouter Wolters <typo3@wouterwolters.nl>\nTested-by: Oliver Bartsch <bo@cedev.de>\nTested-by: Benni Mack <benni@typo3.org>\nReviewed-by: Wouter Wolters <typo3@wouterwolters.nl>\nReviewed-by: Oliver Bartsch <bo@cedev.de>\nReviewed-by: Benni Mack <benni@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php||typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php",
          "typo3/sysext/core/Classes/Log/Writer/FileWriter.php||typo3/sysext/core/Classes/Log/Writer/FileWriter.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "typo3/sysext/indexed_search/Classes/Indexer.php||typo3/sysext/indexed_search/Classes/Indexer.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php||typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php": [
          "File: typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php -> typo3/sysext/core/Classes/Html/DefaultSanitizerBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: namespace TYPO3\\CMS\\Core\\Html;",
          "17: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "18: use TYPO3\\HtmlSanitizer\\Behavior;",
          "19: use TYPO3\\HtmlSanitizer\\Builder\\CommonBuilder;",
          "20: use TYPO3\\HtmlSanitizer\\Sanitizer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:         $isOnCurrentHost = new Behavior\\ClosureAttrValue(",
          "36:             static function (string $value): bool {",
          "37:                 return GeneralUtility::isValidUrl($value) && GeneralUtility::isOnCurrentHost($value)",
          "39:             }",
          "40:         );",
          "",
          "[Removed Lines]",
          "38:                     || GeneralUtility::isAbsPath($value) && GeneralUtility::isAllowedAbsPath($value); // @todo incorrect abs path!",
          "",
          "[Added Lines]",
          "39:                     || PathUtility::isAbsolutePath($value) && GeneralUtility::isAllowedAbsPath($value); // @todo incorrect abs path!",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Log/Writer/FileWriter.php||typo3/sysext/core/Classes/Log/Writer/FileWriter.php": [
          "File: typo3/sysext/core/Classes/Log/Writer/FileWriter.php -> typo3/sysext/core/Classes/Log/Writer/FileWriter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:         $scheme = parse_url($this->logFile, PHP_URL_SCHEME);",
          "212:             $logFileDirectory = PathUtility::dirname((string)preg_replace('#^file:/#', '', $this->logFile));",
          "213:             if (!@is_dir($logFileDirectory)) {",
          "",
          "[Removed Lines]",
          "210:         if ($scheme === null || $scheme === 'file' || $scheme === 'vfs' || GeneralUtility::isAbsPath($this->logFile)) {",
          "",
          "[Added Lines]",
          "210:         if ($scheme === null || $scheme === 'file' || $scheme === 'vfs' || PathUtility::isAbsolutePath($this->logFile)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1756:         }",
          "1757:         $result = false;",
          "1760:             $path = static::getFileAbsFileName($path);",
          "1761:         }",
          "1762:         if (static::isAllowedAbsPath($path)) {",
          "",
          "[Removed Lines]",
          "1759:         if (!static::isAbsPath($path)) {",
          "",
          "[Added Lines]",
          "1759:         if (!PathUtility::isAbsolutePath($path)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2823:             if ((string)$extKey !== '' && ExtensionManagementUtility::isLoaded($extKey) && (string)$local !== '') {",
          "2824:                 $filename = ExtensionManagementUtility::extPath($extKey) . $local;",
          "2825:             }",
          "2828:             $filename = Environment::getPublicPath() . '/' . $filename;",
          "2829:         } elseif (!(",
          "",
          "[Removed Lines]",
          "2826:         } elseif (!static::isAbsPath($filename)) {",
          "",
          "[Added Lines]",
          "2826:         } elseif (!PathUtility::isAbsolutePath($filename)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2866:     public static function isAbsPath($path)",
          "2867:     {",
          "2868:         if (substr($path, 0, 6) === 'vfs://') {",
          "2869:             return true;",
          "2870:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2869:         trigger_error('GeneralUtility::isAbsPath() will be removed in TYPO3 v12.0. Use PathUtility::isAbsolutePath() instead.', E_USER_DEPRECATED);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2886:             return true;",
          "2887:         }",
          "2888:         $lockRootPath = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? '';",
          "2890:             && (",
          "2891:                 str_starts_with($path, Environment::getProjectPath())",
          "2892:                 || str_starts_with($path, Environment::getPublicPath())",
          "",
          "[Removed Lines]",
          "2889:         return static::isAbsPath($path) && static::validPathStr($path)",
          "",
          "[Added Lines]",
          "2891:         return PathUtility::isAbsolutePath($path) && static::validPathStr($path)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2949:                 if (self::isOnCurrentHost($decodedUrl) && strpos($decodedUrl, self::getIndpEnv('TYPO3_SITE_URL')) === 0) {",
          "2950:                     $sanitizedUrl = $url;",
          "2951:                 }",
          "2953:                 $sanitizedUrl = $url;",
          "2954:             } elseif (strpos($testAbsoluteUrl, self::getIndpEnv('TYPO3_SITE_PATH')) === 0 && $decodedUrl[0] === '/' &&",
          "2955:                 substr($decodedUrl, 0, 2) !== '//'",
          "",
          "[Removed Lines]",
          "2952:             } elseif (self::isAbsPath($decodedUrl) && self::isAllowedAbsPath($decodedUrl)) {",
          "",
          "[Added Lines]",
          "2954:             } elseif (PathUtility::isAbsolutePath($decodedUrl) && self::isAllowedAbsPath($decodedUrl)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/PathUtility.php -> typo3/sysext/core/Classes/Utility/PathUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:         if (Environment::isWindows() && (substr($path, 1, 2) === ':/' || substr($path, 1, 2) === ':\\\\')) {",
          "270:             return true;",
          "271:         }",
          "274:     }",
          "",
          "[Removed Lines]",
          "273:         return substr($path, 0, 1) === '/';",
          "",
          "[Added Lines]",
          "273:         return substr($path, 0, 1) === '/' || substr($path, 0, 6) === 'vfs://';",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php": [
          "File: typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php -> typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: class GeneralUtilityFilesystemFixture extends GeneralUtility",
          "26: {",
          "",
          "[Removed Lines]",
          "33:     public static function isAbsPath($path): bool",
          "34:     {",
          "35:         return str_starts_with($path, 'vfs://') || parent::isAbsPath($path);",
          "36:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "typo3/sysext/indexed_search/Classes/Indexer.php||typo3/sysext/indexed_search/Classes/Indexer.php": [
          "File: typo3/sysext/indexed_search/Classes/Indexer.php -> typo3/sysext/indexed_search/Classes/Indexer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "845:         $ext = $altExtension ?: strtolower($fI['extension']);",
          "847:         if (!$contentTmpFile) {",
          "850:                 $absFile = GeneralUtility::getFileAbsFileName(Environment::getPublicPath() . '/' . $file);",
          "851:             } else {",
          "",
          "[Removed Lines]",
          "848:             if (!GeneralUtility::isAbsPath($file)) {",
          "",
          "[Added Lines]",
          "848:             if (!PathUtility::isAbsolutePath($file)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php": [
          "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1254:             'Deprecation-95326-VariousGetInstanceStaticMethodsOnSingletonInterfaces.rst',",
          "1255:         ],",
          "1256:     ],",
          "1257: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1257:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::isAbsPath' => [",
          "1258:         'numberOfMandatoryArguments' => 1,",
          "1259:         'maximumNumberOfArguments' => 1,",
          "1260:         'restFiles' => [",
          "1261:             'Deprecation-95367-GeneralUtilityisAbsPath.rst',",
          "1262:         ],",
          "1263:     ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efca6e7c20643c48f23a027081b8931fea71a6a4",
      "candidate_info": {
        "commit_hash": "efca6e7c20643c48f23a027081b8931fea71a6a4",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/efca6e7c20643c48f23a027081b8931fea71a6a4",
        "files": [
          "typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php",
          "typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php",
          "typo3/sysext/backend/Classes/Utility/BackendUtility.php",
          "typo3/sysext/backend/Classes/View/BackendLayoutView.php",
          "typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php",
          "typo3/sysext/core/Classes/Configuration/ConfigurationManager.php",
          "typo3/sysext/core/Classes/DataHandling/DataHandler.php",
          "typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php",
          "typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php",
          "typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php",
          "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "typo3/sysext/core/Classes/Resource/ResourceFactory.php",
          "typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Documentation/Changelog/master/Deprecation-95257-GeneralUtilityisFirstPartOfStr.rst",
          "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
          "typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php",
          "typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php",
          "typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php",
          "typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php",
          "typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php",
          "typo3/sysext/form/Classes/Service/TranslationService.php",
          "typo3/sysext/impexp/Classes/Export.php",
          "typo3/sysext/impexp/Classes/Import.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
          "typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php"
        ],
        "message": "[TASK] Use native str_starts_with() PHP method\n\nOne of our main utility methods \"GeneralUtility::isFirstPartOfStr\"\ncan now replaced by PHP's native \"str_starts_with()\" function\n(see https://www.php.net/manual/en/function.str-starts-with.php)\nwhich is also available for PHP 7.4 thanks to Symfony's polyfill\npackage.\n\nThis way, we can\na) slim down our own code base in favor of native PHP calls\nb) add a bit of performance due to native PHP calls\nc) move towards type-safety to ensure that we hand over strings\nto these methods, as our own method was a bit more \"lax\" on things\n\nResolves: #95257\nReleases: master\nChange-Id: I70617ab4419849353a72a10dfed31a2d96f58072\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/70444\nTested-by: core-ci <typo3@b13.com>\nTested-by: Georg Ringer <georg.ringer@gmail.com>\nTested-by: Christian Kuhn <lolli@schwarzbu.ch>\nReviewed-by: Georg Ringer <georg.ringer@gmail.com>\nReviewed-by: Christian Kuhn <lolli@schwarzbu.ch>",
        "before_after_code_files": [
          "typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php||typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php",
          "typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php||typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php",
          "typo3/sysext/backend/Classes/Utility/BackendUtility.php||typo3/sysext/backend/Classes/Utility/BackendUtility.php",
          "typo3/sysext/backend/Classes/View/BackendLayoutView.php||typo3/sysext/backend/Classes/View/BackendLayoutView.php",
          "typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php||typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php",
          "typo3/sysext/core/Classes/Configuration/ConfigurationManager.php||typo3/sysext/core/Classes/Configuration/ConfigurationManager.php",
          "typo3/sysext/core/Classes/DataHandling/DataHandler.php||typo3/sysext/core/Classes/DataHandling/DataHandler.php",
          "typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php||typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php",
          "typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php||typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php",
          "typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php||typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php",
          "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "typo3/sysext/core/Classes/Resource/ResourceCompressor.php||typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "typo3/sysext/core/Classes/Resource/ResourceFactory.php||typo3/sysext/core/Classes/Resource/ResourceFactory.php",
          "typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php||typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
          "typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php",
          "typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php||typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php",
          "typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php||typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php",
          "typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php||typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php",
          "typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php||typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php",
          "typo3/sysext/form/Classes/Service/TranslationService.php||typo3/sysext/form/Classes/Service/TranslationService.php",
          "typo3/sysext/impexp/Classes/Export.php||typo3/sysext/impexp/Classes/Export.php",
          "typo3/sysext/impexp/Classes/Import.php||typo3/sysext/impexp/Classes/Import.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
          "typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php||typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
            "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php||typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php": [
          "File: typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php -> typo3/sysext/backend/Classes/Domain/Repository/TableManualRepository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:         }",
          "124:         foreach ($cshKeys as $cshKey => $value) {",
          "127:                 $lang->loadSingleTableDescription($cshKey);",
          "128:                 $this->renderTableOfContentItem($mode, $cshKey, 'extensions', $outputSections, $tocArray, $cshKeys);",
          "129:             }",
          "132:                 $lang->loadSingleTableDescription($cshKey);",
          "133:                 $this->renderTableOfContentItem($mode, $cshKey, 'other', $outputSections, $tocArray, $cshKeys);",
          "134:             }",
          "",
          "[Removed Lines]",
          "126:             if (GeneralUtility::isFirstPartOfStr($cshKey, 'xEXT_') && !isset($GLOBALS['TCA'][$cshKey])) {",
          "131:             if (!GeneralUtility::isFirstPartOfStr($cshKey, '_MOD_') && !isset($GLOBALS['TCA'][$cshKey])) {",
          "",
          "[Added Lines]",
          "126:             if (str_starts_with($cshKey, 'xEXT_') && !isset($GLOBALS['TCA'][$cshKey])) {",
          "131:             if (!str_starts_with($cshKey, '_MOD_') && !isset($GLOBALS['TCA'][$cshKey])) {",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php||typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php": [
          "File: typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php -> typo3/sysext/backend/Classes/Form/FieldControl/AddRecord.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     {",
          "39:         $options = $this->data['renderData']['fieldControlOptions'];",
          "40:         $parameterArray = $this->data['parameterArray'];",
          "44:         $title = $options['title'] ?? 'LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.createNew';",
          "",
          "[Removed Lines]",
          "41:         $itemName = $parameterArray['itemFormElName'];",
          "",
          "[Added Lines]",
          "41:         $itemName = (string)$parameterArray['itemFormElName'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:         $pid = $this->resolvePid($options, $table);",
          "71:         $prefixOfFormElName = 'data[' . $this->data['tableName'] . '][' . $this->data['databaseRow']['uid'] . '][' . $this->data['fieldName'] . ']';",
          "72:         $flexFormPath = '';",
          "74:             $flexFormPath = str_replace('][', '/', substr($itemName, strlen($prefixOfFormElName) + 1, -1));",
          "75:         }",
          "",
          "[Removed Lines]",
          "73:         if (GeneralUtility::isFirstPartOfStr($itemName, $prefixOfFormElName)) {",
          "",
          "[Added Lines]",
          "73:         if (str_starts_with($itemName, $prefixOfFormElName)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Utility/BackendUtility.php||typo3/sysext/backend/Classes/Utility/BackendUtility.php": [
          "File: typo3/sysext/backend/Classes/Utility/BackendUtility.php -> typo3/sysext/backend/Classes/Utility/BackendUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3067:             if ($table === '_FILE') {",
          "3069:                     return '';",
          "3070:                 }",
          "",
          "[Removed Lines]",
          "3068:                 if (!GeneralUtility::isFirstPartOfStr($ref, Environment::getPublicPath())) {",
          "",
          "[Added Lines]",
          "3068:                 if (!str_starts_with($ref, Environment::getPublicPath())) {",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/View/BackendLayoutView.php||typo3/sysext/backend/Classes/View/BackendLayoutView.php": [
          "File: typo3/sysext/backend/Classes/View/BackendLayoutView.php -> typo3/sysext/backend/Classes/View/BackendLayoutView.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "507:     {",
          "508:         $columnName = $column['name'];",
          "511:             $columnName = $this->getLanguageService()->sL($columnName);",
          "512:         }",
          "",
          "[Removed Lines]",
          "510:         if (GeneralUtility::isFirstPartOfStr($columnName, 'LLL:')) {",
          "",
          "[Added Lines]",
          "510:         if (str_starts_with($columnName, 'LLL:')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php||typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php": [
          "File: typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php -> typo3/sysext/core/Classes/Cache/Backend/SimpleFileBackend.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:                 if ($basedir[strlen($basedir) - 1] !== '/') {",
          "145:                     $basedir .= '/';",
          "146:                 }",
          "148:                     $documentRoot = $basedir;",
          "149:                     $cacheDirectory = str_replace($basedir, '', $cacheDirectory);",
          "150:                     $cacheDirectoryInBaseDir = true;",
          "",
          "[Removed Lines]",
          "147:                 if (GeneralUtility::isFirstPartOfStr($cacheDirectory, $basedir)) {",
          "",
          "[Added Lines]",
          "147:                 if (str_starts_with($cacheDirectory, $basedir)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Configuration/ConfigurationManager.php||typo3/sysext/core/Classes/Configuration/ConfigurationManager.php": [
          "File: typo3/sysext/core/Classes/Configuration/ConfigurationManager.php -> typo3/sysext/core/Classes/Configuration/ConfigurationManager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:     {",
          "443:         foreach ($this->whiteListedLocalConfigurationPaths as $whiteListedPath) {",
          "445:                 return true;",
          "446:             }",
          "447:         }",
          "",
          "[Removed Lines]",
          "444:             if (GeneralUtility::isFirstPartOfStr($path, $whiteListedPath)) {",
          "",
          "[Added Lines]",
          "444:             if (str_starts_with($path, $whiteListedPath)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/DataHandling/DataHandler.php||typo3/sysext/core/Classes/DataHandling/DataHandler.php": [
          "File: typo3/sysext/core/Classes/DataHandling/DataHandler.php -> typo3/sysext/core/Classes/DataHandling/DataHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8749:             }",
          "8750:         }",
          "8753:             $cacheTag = substr($cacheCmd, 9);",
          "8754:             $tagsToFlush[] = $cacheTag;",
          "8755:         }",
          "",
          "[Removed Lines]",
          "8752:         if (GeneralUtility::isFirstPartOfStr(strtolower($cacheCmd), 'cachetag:')) {",
          "",
          "[Added Lines]",
          "8752:         if (str_starts_with(strtolower($cacheCmd), 'cachetag:')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php||typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php": [
          "File: typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php -> typo3/sysext/core/Classes/IO/PharStreamWrapperInterceptor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:         }",
          "59:         $baseName = $invocation->getBaseName();",
          "60:         return GeneralUtility::validPathStr($baseName)",
          "62:     }",
          "63: }",
          "",
          "[Removed Lines]",
          "61:             && GeneralUtility::isFirstPartOfStr($baseName, Environment::getExtensionsPath());",
          "",
          "[Added Lines]",
          "61:             && str_starts_with($baseName, Environment::getExtensionsPath());",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php||typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php": [
          "File: typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php -> typo3/sysext/core/Classes/Localization/Parser/AbstractXmlParser.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     {",
          "113:         $fileName = PathUtility::basename($fileRef);",
          "115:             return GeneralUtility::getFileAbsFileName($fileRef);",
          "116:         }",
          "",
          "[Removed Lines]",
          "110:     protected function getLocalizedFileName($fileRef, $language, $sameLocation = false)",
          "114:         if (GeneralUtility::isFirstPartOfStr($fileName, $language . '.')) {",
          "",
          "[Added Lines]",
          "110:     protected function getLocalizedFileName(string $fileRef, string $language, bool $sameLocation = false)",
          "114:         if (str_starts_with($fileName, $language . '.')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:         }",
          "125:             $validatedPrefix = Environment::getFrameworkBasePath() . '/';",
          "128:             $validatedPrefix = Environment::getBackendPath() . '/ext/';",
          "131:             $validatedPrefix = Environment::getExtensionsPath() . '/';",
          "132:         } else {",
          "",
          "[Removed Lines]",
          "123:         if (GeneralUtility::isFirstPartOfStr($fileRef, Environment::getFrameworkBasePath() . '/')) {",
          "126:         } elseif (GeneralUtility::isFirstPartOfStr($fileRef, Environment::getBackendPath() . '/ext/')) {",
          "129:         } elseif (GeneralUtility::isFirstPartOfStr($fileRef, Environment::getExtensionsPath() . '/')) {",
          "",
          "[Added Lines]",
          "123:         if (str_starts_with($fileRef, Environment::getFrameworkBasePath() . '/')) {",
          "126:         } elseif (str_starts_with($fileRef, Environment::getBackendPath() . '/ext/')) {",
          "129:         } elseif (str_starts_with($fileRef, Environment::getExtensionsPath() . '/')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php||typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php": [
          "File: typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php -> typo3/sysext/core/Classes/Locking/SimpleLockStrategy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:         $success = true;",
          "115:         if (",
          "116:             GeneralUtility::isAllowedAbsPath($this->filePath)",
          "118:         ) {",
          "119:             if (@unlink($this->filePath) === false) {",
          "120:                 $success = false;",
          "",
          "[Removed Lines]",
          "117:             && GeneralUtility::isFirstPartOfStr($this->filePath, Environment::getVarPath() . '/' . self::FILE_LOCK_FOLDER)",
          "",
          "[Added Lines]",
          "117:             && str_starts_with($this->filePath, Environment::getVarPath() . '/' . self::FILE_LOCK_FOLDER)",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php": [
          "File: typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php -> typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:         if ($this->hasCapability(ResourceStorage::CAPABILITY_PUBLIC)) {",
          "134:             if (!empty($this->configuration['baseUri'])) {",
          "135:                 $this->baseUri = rtrim($this->configuration['baseUri'], '/') . '/';",
          "138:                 $temporaryBaseUri = rtrim(PathUtility::stripPathSitePrefix($this->absoluteBasePath), '/');",
          "139:                 if ($temporaryBaseUri !== '') {",
          "",
          "[Removed Lines]",
          "136:             } elseif (GeneralUtility::isFirstPartOfStr($this->absoluteBasePath, Environment::getPublicPath())) {",
          "",
          "[Added Lines]",
          "136:             } elseif (str_starts_with($this->absoluteBasePath, Environment::getPublicPath())) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "786:             throw new \\InvalidArgumentException('Cannot add a file that is already part of this storage.', 1314778269);",
          "787:         }",
          "788:         $newFileName = $this->sanitizeFileName($newFileName !== '' ? $newFileName : PathUtility::basename($localFilePath));",
          "",
          "[Removed Lines]",
          "785:         if (GeneralUtility::isFirstPartOfStr($localFilePath, $this->absoluteBasePath) && $this->storageUid > 0) {",
          "",
          "[Added Lines]",
          "785:         if (str_starts_with($localFilePath, $this->absoluteBasePath) && $this->storageUid > 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1310:         if ($folderIdentifier !== '/') {",
          "1311:             $folderIdentifier .= '/';",
          "1312:         }",
          "1314:     }",
          "",
          "[Removed Lines]",
          "1313:         return GeneralUtility::isFirstPartOfStr($entryIdentifier, $folderIdentifier);",
          "",
          "[Added Lines]",
          "1313:         return str_starts_with($entryIdentifier, $folderIdentifier);",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Resource/ResourceCompressor.php||typo3/sysext/core/Classes/Resource/ResourceCompressor.php": [
          "File: typo3/sysext/core/Classes/Resource/ResourceCompressor.php -> typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:             if (GeneralUtility::isValidUrl($filename)) {",
          "258:                 if (GeneralUtility::isOnCurrentHost($filename) &&",
          "260:                         $filename,",
          "261:                         $GLOBALS['TYPO3_REQUEST']->getAttribute('normalizedParams')->getSiteUrl()",
          "262:                     )",
          "",
          "[Removed Lines]",
          "259:                     GeneralUtility::isFirstPartOfStr(",
          "",
          "[Added Lines]",
          "259:                     str_starts_with(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "295:                     $contents = substr($contents, 3);",
          "296:                 }",
          "299:                     $contents = $this->cssFixRelativeUrlPaths($contents, $filename);",
          "300:                 }",
          "301:                 $concatenated .= LF . $contents;",
          "",
          "[Removed Lines]",
          "298:                 if ($type === 'css' && !GeneralUtility::isFirstPartOfStr($filename, $this->targetDirectory)) {",
          "",
          "[Added Lines]",
          "298:                 if ($type === 'css' && !str_starts_with($filename, $this->targetDirectory)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "494:     {",
          "495:         foreach ($baseDirectories as $baseDirectory) {",
          "498:                 return true;",
          "499:             }",
          "500:         }",
          "",
          "[Removed Lines]",
          "497:             if (GeneralUtility::isFirstPartOfStr($filename, $baseDirectory)) {",
          "",
          "[Added Lines]",
          "497:             if (str_starts_with($filename, $baseDirectory)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Resource/ResourceFactory.php||typo3/sysext/core/Classes/Resource/ResourceFactory.php": [
          "File: typo3/sysext/core/Classes/Resource/ResourceFactory.php -> typo3/sysext/core/Classes/Resource/ResourceFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:         $input = str_replace(Environment::getPublicPath() . '/', '', $input);",
          "301:             $input = substr($input, 5);",
          "302:             return $this->retrieveFileOrFolderObject($input);",
          "303:         }",
          "",
          "[Removed Lines]",
          "300:         if (GeneralUtility::isFirstPartOfStr($input, 'file:')) {",
          "",
          "[Added Lines]",
          "300:         if (str_starts_with($input, 'file:')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355:             $folderIdentifier = $parts[0];",
          "358:                 $folderIdentifier = PathUtility::stripPathSitePrefix($parts[0]);",
          "359:             }",
          "360:         }",
          "",
          "[Removed Lines]",
          "357:             if (GeneralUtility::isFirstPartOfStr($folderIdentifier, Environment::getPublicPath() . '/')) {",
          "",
          "[Added Lines]",
          "357:             if (str_starts_with($folderIdentifier, Environment::getPublicPath() . '/')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php||typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php": [
          "File: typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php -> typo3/sysext/core/Classes/TypoScript/Parser/ConstantConfigurationParser.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     protected function buildConfigurationArray(array $configurationOption): array",
          "111:     {",
          "112:         $hierarchicConfiguration = [];",
          "114:             $configurationOption = $this->extractInformationForConfigFieldsOfTypeUser($configurationOption);",
          "116:             $configurationOption = $this->extractInformationForConfigFieldsOfTypeOptions($configurationOption);",
          "117:         }",
          "118:         $languageService = $this->getLanguageService();",
          "",
          "[Removed Lines]",
          "113:         if (GeneralUtility::isFirstPartOfStr($configurationOption['type'], 'user')) {",
          "115:         } elseif (GeneralUtility::isFirstPartOfStr($configurationOption['type'], 'options')) {",
          "",
          "[Added Lines]",
          "113:         if (str_starts_with((string)$configurationOption['type'], 'user')) {",
          "115:         } elseif (str_starts_with((string)$configurationOption['type'], 'options')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:     public static function isFirstPartOfStr($str, $partStr)",
          "729:     {",
          "730:         $str = is_array($str) ? '' : (string)$str;",
          "731:         $partStr = is_array($partStr) ? '' : (string)$partStr;",
          "732:         return $partStr !== '' && strpos($str, $partStr, 0) === 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "731:         trigger_error('GeneralUtility::isFirstPartOfStr() will be removed in TYPO3 v12.0. Use PHPs str_starts_with() method instead', E_USER_DEPRECATED);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "897:             $url = str_replace($parsedUrl['scheme'] . ':', $parsedUrl['scheme'] . '://', $url);",
          "898:         }",
          "899:         $recomposedUrl = HttpUtility::buildUrl($parsedUrl);",
          "",
          "[Removed Lines]",
          "896:         if (!self::isFirstPartOfStr($url, $parsedUrl['scheme'] . '://')) {",
          "",
          "[Added Lines]",
          "898:         if (!str_starts_with($url, $parsedUrl['scheme'] . '://')) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1832:         foreach ($allowedPathPrefixes as $pathPrefix => $prefixLabel) {",
          "1833:             $dirName = $pathPrefix . '/';",
          "1836:                 if ($errorMessage === null) {",
          "1837:                     $errorMessage = '\"' . $fI['dirname'] . '\" was not within directory ' . $prefixLabel;",
          "1838:                 }",
          "",
          "[Removed Lines]",
          "1835:             if (!static::isFirstPartOfStr($fI['dirname'], $dirName)) {",
          "",
          "[Added Lines]",
          "1837:             if (!str_starts_with($fI['dirname'], $dirName)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2136:     {",
          "2139:                 $absFileRef = substr($absFileRef, strlen($prefixToRemove));",
          "2140:             } else {",
          "2141:                 return 'ERROR: One or more of the files was NOT prefixed with the prefix-path!';",
          "",
          "[Removed Lines]",
          "2135:     public static function removePrefixPathFromList(array $fileArr, $prefixToRemove)",
          "2137:         foreach ($fileArr as $k => &$absFileRef) {",
          "2138:             if (self::isFirstPartOfStr($absFileRef, $prefixToRemove)) {",
          "",
          "[Added Lines]",
          "2137:     public static function removePrefixPathFromList(array $fileArr, string $prefixToRemove)",
          "2139:         foreach ($fileArr as &$absFileRef) {",
          "2140:             if (str_starts_with($absFileRef, $prefixToRemove)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2823:             $filename = Environment::getPublicPath() . '/' . $filename;",
          "2824:         } elseif (!(",
          "2827:         )) {",
          "2829:             $filename = '';",
          "",
          "[Removed Lines]",
          "2825:             static::isFirstPartOfStr($filename, Environment::getProjectPath())",
          "2826:                   || static::isFirstPartOfStr($filename, Environment::getPublicPath())",
          "",
          "[Added Lines]",
          "2827:             str_starts_with($filename, Environment::getProjectPath())",
          "2828:                   || str_starts_with($filename, Environment::getPublicPath())",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2883:         $lockRootPath = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? '';",
          "2884:         return static::isAbsPath($path) && static::validPathStr($path)",
          "2885:             && (",
          "2889:             );",
          "2890:     }",
          "",
          "[Removed Lines]",
          "2886:                 static::isFirstPartOfStr($path, Environment::getProjectPath())",
          "2887:                 || static::isFirstPartOfStr($path, Environment::getPublicPath())",
          "2888:                 || ($lockRootPath && static::isFirstPartOfStr($path, $lockRootPath))",
          "",
          "[Added Lines]",
          "2888:                 str_starts_with($path, Environment::getProjectPath())",
          "2889:                 || str_starts_with($path, Environment::getPublicPath())",
          "2890:                 || ($lockRootPath && str_starts_with($path, $lockRootPath))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3041:             if (",
          "3042:                 self::validPathStr($uploadedTempFileName)",
          "3043:                 && (",
          "3046:                 )",
          "3047:                 && @is_file($uploadedTempFileName)",
          "3048:             ) {",
          "",
          "[Removed Lines]",
          "3044:                     self::isFirstPartOfStr($uploadedTempFileName, Environment::getPublicPath() . '/typo3temp/')",
          "3045:                     || self::isFirstPartOfStr($uploadedTempFileName, Environment::getVarPath() . '/')",
          "",
          "[Added Lines]",
          "3046:                     str_starts_with($uploadedTempFileName, Environment::getPublicPath() . '/typo3temp/')",
          "3047:                     || str_starts_with($uploadedTempFileName, Environment::getVarPath() . '/')",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php||typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php": [
          "File: typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php -> typo3/sysext/core/Tests/Unit/Utility/Fixtures/GeneralUtilityFilesystemFixture.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     public static function isAbsPath($path): bool",
          "34:     {",
          "36:     }",
          "",
          "[Removed Lines]",
          "35:         return self::isFirstPartOfStr($path, 'vfs://') || parent::isAbsPath($path);",
          "",
          "[Added Lines]",
          "35:         return str_starts_with($path, 'vfs://') || parent::isAbsPath($path);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     public static function isAllowedAbsPath($path): bool",
          "45:     {",
          "47:     }",
          "",
          "[Removed Lines]",
          "46:         return self::isFirstPartOfStr($path, 'vfs://') || parent::isAllowedAbsPath($path);",
          "",
          "[Added Lines]",
          "46:         return str_starts_with($path, 'vfs://') || parent::isAllowedAbsPath($path);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:     public static function validPathStr($theFile): bool",
          "56:     {",
          "58:     }",
          "",
          "[Removed Lines]",
          "57:         return self::isFirstPartOfStr($theFile, 'vfs://') || parent::validPathStr($theFile);",
          "",
          "[Added Lines]",
          "57:         return str_starts_with($theFile, 'vfs://') || parent::validPathStr($theFile);",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php": [
          "File: typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php -> typo3/sysext/core/Tests/Unit/Utility/GeneralUtilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "584:         self::assertCount(1000, explode(',', $list));",
          "585:     }",
          "",
          "[Removed Lines]",
          "595:     public function isFirstPartOfStrReturnsTrueForMatchingFirstPartDataProvider(): array",
          "596:     {",
          "597:         return [",
          "598:             'match first part of string' => ['hello world', 'hello'],",
          "599:             'match whole string' => ['hello', 'hello'],",
          "600:             'integer is part of string with same number' => ['24', 24],",
          "601:             'string is part of integer with same number' => [24, '24'],",
          "602:             'integer is part of string starting with same number' => ['24 beer please', 24]",
          "603:         ];",
          "604:     }",
          "610:     public function isFirstPartOfStrReturnsTrueForMatchingFirstPart($string, $part): void",
          "611:     {",
          "612:         self::assertTrue(GeneralUtility::isFirstPartOfStr($string, $part));",
          "613:     }",
          "620:     public function isFirstPartOfStrReturnsFalseForNotMatchingFirstPartDataProvider(): array",
          "621:     {",
          "622:         return [",
          "623:             'no string match' => ['hello', 'bye'],",
          "624:             'no case sensitive string match' => ['hello world', 'Hello'],",
          "625:             'array is not part of string' => ['string', []],",
          "626:             'string is not part of array' => [[], 'string'],",
          "627:             'NULL is not part of string' => ['string', null],",
          "628:             'string is not part of NULL' => [null, 'string'],",
          "629:             'NULL is not part of array' => [[], null],",
          "630:             'array is not part of NULL' => [null, []],",
          "631:             'empty string is not part of empty string' => ['', ''],",
          "632:             'NULL is not part of empty string' => ['', null],",
          "633:             'false is not part of empty string' => ['', false],",
          "634:             'empty string is not part of NULL' => [null, ''],",
          "635:             'empty string is not part of false' => [false, ''],",
          "636:             'empty string is not part of zero integer' => [0, ''],",
          "637:             'zero integer is not part of NULL' => [null, 0],",
          "638:             'zero integer is not part of empty string' => ['', 0]",
          "639:         ];",
          "640:     }",
          "646:     public function isFirstPartOfStrReturnsFalseForNotMatchingFirstPart($string, $part): void",
          "647:     {",
          "648:         self::assertFalse(GeneralUtility::isFirstPartOfStr($string, $part));",
          "649:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php||typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php": [
          "File: typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php -> typo3/sysext/core/Tests/UnitDeprecated/Utility/GeneralUtilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             'List contains removeme multiple times nothing else 5x' => ['removeme,removeme,removeme,removeme,removeme', ''],",
          "87:         ];",
          "88:     }",
          "89: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     public function isFirstPartOfStrReturnsTrueForMatchingFirstPartDataProvider(): array",
          "99:     {",
          "100:         return [",
          "101:             'match first part of string' => ['hello world', 'hello'],",
          "102:             'match whole string' => ['hello', 'hello'],",
          "103:             'integer is part of string with same number' => ['24', 24],",
          "104:             'string is part of integer with same number' => [24, '24'],",
          "105:             'integer is part of string starting with same number' => ['24 beer please', 24]",
          "106:         ];",
          "107:     }",
          "113:     public function isFirstPartOfStrReturnsTrueForMatchingFirstPart($string, $part): void",
          "114:     {",
          "115:         self::assertTrue(GeneralUtility::isFirstPartOfStr($string, $part));",
          "116:     }",
          "123:     public function isFirstPartOfStrReturnsFalseForNotMatchingFirstPartDataProvider(): array",
          "124:     {",
          "125:         return [",
          "126:             'no string match' => ['hello', 'bye'],",
          "127:             'no case sensitive string match' => ['hello world', 'Hello'],",
          "128:             'array is not part of string' => ['string', []],",
          "129:             'string is not part of array' => [[], 'string'],",
          "130:             'NULL is not part of string' => ['string', null],",
          "131:             'string is not part of NULL' => [null, 'string'],",
          "132:             'NULL is not part of array' => [[], null],",
          "133:             'array is not part of NULL' => [null, []],",
          "134:             'empty string is not part of empty string' => ['', ''],",
          "135:             'NULL is not part of empty string' => ['', null],",
          "136:             'false is not part of empty string' => ['', false],",
          "137:             'empty string is not part of NULL' => [null, ''],",
          "138:             'empty string is not part of false' => [false, ''],",
          "139:             'empty string is not part of zero integer' => [0, ''],",
          "140:             'zero integer is not part of NULL' => [null, 0],",
          "141:             'zero integer is not part of empty string' => ['', 0]",
          "142:         ];",
          "143:     }",
          "149:     public function isFirstPartOfStrReturnsFalseForNotMatchingFirstPart($string, $part): void",
          "150:     {",
          "151:         self::assertFalse(GeneralUtility::isFirstPartOfStr($string, $part));",
          "152:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php||typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php": [
          "File: typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php -> typo3/sysext/extbase/Classes/Utility/LocalizationUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:             return null;",
          "77:         }",
          "78:         $value = null;",
          "80:             $keyParts = explode(':', $key);",
          "81:             unset($keyParts[0]);",
          "82:             $key = array_pop($keyParts);",
          "",
          "[Removed Lines]",
          "79:         if (GeneralUtility::isFirstPartOfStr($key, 'LLL:')) {",
          "",
          "[Added Lines]",
          "79:         if (str_starts_with($key, 'LLL:')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php||typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php": [
          "File: typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php -> typo3/sysext/extensionmanager/Classes/Utility/InstallUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "608:     {",
          "609:         $allowedPaths = Extension::returnAllowedInstallPaths();",
          "610:         foreach ($allowedPaths as $allowedPath) {",
          "612:                 return true;",
          "613:             }",
          "614:         }",
          "",
          "[Removed Lines]",
          "611:             if (GeneralUtility::isFirstPartOfStr($path, $allowedPath)) {",
          "",
          "[Added Lines]",
          "611:             if (str_starts_with($path, $allowedPath)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php||typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php": [
          "File: typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php -> typo3/sysext/extensionmanager/Classes/Utility/ListUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use TYPO3\\CMS\\Core\\Package\\PackageManager;",
          "22: use TYPO3\\CMS\\Core\\SingletonInterface;",
          "23: use TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;",
          "25: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "26: use TYPO3\\CMS\\Core\\Utility\\VersionNumberUtility;",
          "27: use TYPO3\\CMS\\Extensionmanager\\Domain\\Model\\Extension;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:     protected function getInstallTypeForPackage(PackageInterface $package)",
          "163:     {",
          "164:         foreach (Extension::returnInstallPaths() as $installType => $installPath) {",
          "166:                 return $installType;",
          "167:             }",
          "168:         }",
          "",
          "[Removed Lines]",
          "165:             if (GeneralUtility::isFirstPartOfStr($package->getPackagePath(), $installPath)) {",
          "",
          "[Added Lines]",
          "164:             if (str_starts_with($package->getPackagePath(), $installPath)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php||typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php": [
          "File: typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php -> typo3/sysext/felogin/Classes/Validation/RedirectUrlValidator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:             $parsedUrl = @parse_url($url);",
          "121:             if ($parsedUrl !== false && !isset($parsedUrl['scheme']) && !isset($parsedUrl['host'])) {",
          "124:             }",
          "125:         }",
          "126:         return false;",
          "",
          "[Removed Lines]",
          "123:                 return $parsedUrl['path'][0] !== '/' || GeneralUtility::isFirstPartOfStr($parsedUrl['path'], GeneralUtility::getIndpEnv('TYPO3_SITE_PATH'));",
          "",
          "[Added Lines]",
          "123:                 return $parsedUrl['path'][0] !== '/' || str_starts_with($parsedUrl['path'], GeneralUtility::getIndpEnv('TYPO3_SITE_PATH'));",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Service/TranslationService.php||typo3/sysext/form/Classes/Service/TranslationService.php": [
          "File: typo3/sysext/form/Classes/Service/TranslationService.php -> typo3/sysext/form/Classes/Service/TranslationService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:         }",
          "123:         $keyParts = explode(':', $key);",
          "125:             $locallangPathAndFilename = $keyParts[1] . ':' . $keyParts[2];",
          "126:             $key = $keyParts[3];",
          "127:         } elseif (PathUtility::isExtensionPath($key)) {",
          "",
          "[Removed Lines]",
          "124:         if (GeneralUtility::isFirstPartOfStr($key, 'LLL:')) {",
          "",
          "[Added Lines]",
          "124:         if (str_starts_with($key, 'LLL:')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/impexp/Classes/Export.php||typo3/sysext/impexp/Classes/Export.php": [
          "File: typo3/sysext/impexp/Classes/Export.php -> typo3/sysext/impexp/Classes/Export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:         foreach ($relations as &$relation) {",
          "592:             if (isset($relation['type']) && $relation['type'] === 'file') {",
          "593:                 foreach ($relation['newValueFiles'] as &$fileRelationData) {",
          "596:                         $relatedFilePath = PathUtility::stripPathSitePrefix($absoluteFilePath);",
          "597:                         $fileRelationData['ID'] = md5($relatedFilePath);",
          "598:                     }",
          "",
          "[Removed Lines]",
          "594:                     $absoluteFilePath = $fileRelationData['ID_absFile'];",
          "595:                     if (GeneralUtility::isFirstPartOfStr($absoluteFilePath, Environment::getPublicPath())) {",
          "",
          "[Added Lines]",
          "594:                     $absoluteFilePath = (string)$fileRelationData['ID_absFile'];",
          "595:                     if (str_starts_with($absoluteFilePath, Environment::getPublicPath())) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "603:                 if (is_array($relation['flexFormRels']['file'] ?? null)) {",
          "604:                     foreach ($relation['flexFormRels']['file'] as &$subList) {",
          "605:                         foreach ($subList as &$fileRelationData) {",
          "608:                                 $relatedFilePath = PathUtility::stripPathSitePrefix($absoluteFilePath);",
          "609:                                 $fileRelationData['ID'] = md5($relatedFilePath);",
          "610:                             }",
          "",
          "[Removed Lines]",
          "606:                             $absoluteFilePath = $fileRelationData['ID_absFile'];",
          "607:                             if (GeneralUtility::isFirstPartOfStr($absoluteFilePath, Environment::getPublicPath())) {",
          "",
          "[Added Lines]",
          "606:                             $absoluteFilePath = (string)$fileRelationData['ID_absFile'];",
          "607:                             if (str_starts_with($absoluteFilePath, Environment::getPublicPath())) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1062:                         $resAbsolutePath = GeneralUtility::resolveBackPath(PathUtility::dirname($fileData['ID_absFile']) . '/' . $resRelativePath);",
          "1063:                         $resAbsolutePath = GeneralUtility::getFileAbsFileName($resAbsolutePath);",
          "1064:                         if ($resAbsolutePath !== ''",
          "1066:                             && @is_file($resAbsolutePath)",
          "1067:                         ) {",
          "1068:                             $resourceCaptured = true;",
          "",
          "[Removed Lines]",
          "1065:                             && GeneralUtility::isFirstPartOfStr($resAbsolutePath, Environment::getPublicPath() . '/' . $this->getFileadminFolderName() . '/')",
          "",
          "[Added Lines]",
          "1065:                             && str_starts_with($resAbsolutePath, Environment::getPublicPath() . '/' . $this->getFileadminFolderName() . '/')",
          "",
          "---------------"
        ],
        "typo3/sysext/impexp/Classes/Import.php||typo3/sysext/impexp/Classes/Import.php": [
          "File: typo3/sysext/impexp/Classes/Import.php -> typo3/sysext/impexp/Classes/Import.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1588:         if ($this->dat['header']['files'][$softref['file_ID']]) {",
          "1590:             $dirPrefix = PathUtility::dirname($relFileName) . '/';",
          "1594:                 $newFileName = $this->processSoftReferencesSaveFileCreateRelFile($dirPrefix, PathUtility::basename($relFileName), $softref['file_ID'], $table, $uid) ?: '';",
          "",
          "[Removed Lines]",
          "1591:             if (GeneralUtility::isFirstPartOfStr($dirPrefix, $this->getFileadminFolderName() . '/')) {",
          "",
          "[Added Lines]",
          "1591:             if (str_starts_with($dirPrefix, $this->getFileadminFolderName() . '/')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1653:                                 $relResourceFileName = $this->dat['files'][$res_fileID]['parentRelFileName'];",
          "1654:                                 $absResourceFileName = GeneralUtility::resolveBackPath(Environment::getPublicPath() . '/' . $origDirPrefix . $relResourceFileName);",
          "1655:                                 $absResourceFileName = GeneralUtility::getFileAbsFileName($absResourceFileName);",
          "1657:                                     $destDir = PathUtility::stripPathSitePrefix(PathUtility::dirname($absResourceFileName) . '/');",
          "1658:                                     if ($this->resolveStoragePath($destDir, false) !== null && $this->checkOrCreateDir($destDir)) {",
          "1659:                                         $this->writeFileVerify($absResourceFileName, $res_fileID);",
          "",
          "[Removed Lines]",
          "1656:                                 if ($absResourceFileName && GeneralUtility::isFirstPartOfStr($absResourceFileName, Environment::getPublicPath() . '/' . $this->getFileadminFolderName() . '/')) {",
          "",
          "[Added Lines]",
          "1656:                                 if ($absResourceFileName && str_starts_with($absResourceFileName, Environment::getPublicPath() . '/' . $this->getFileadminFolderName() . '/')) {",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php": [
          "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/MethodCallStaticMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:             'Deprecation-94791-GeneralUtilityminifyJavaScript.rst'",
          "1171:         ],",
          "1172:     ],",
          "1173: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1173:     'TYPO3\\CMS\\Core\\Utility\\GeneralUtility::isFirstPartOfStr' => [",
          "1174:         'numberOfMandatoryArguments' => 2,",
          "1175:         'maximumNumberOfArguments' => 2,",
          "1176:         'restFiles' => [",
          "1177:             'Deprecation-95257-GeneralUtilityisFirstPartOfStr.rst'",
          "1178:         ],",
          "1179:     ],",
          "",
          "---------------"
        ],
        "typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php||typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php": [
          "File: typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php -> typo3/sysext/lowlevel/Classes/Command/LostFilesCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:             $customPaths = GeneralUtility::trimExplode(',', $customPaths, true);",
          "201:             foreach ($customPaths as $customPath) {",
          "202:                 if (false === realpath(Environment::getPublicPath() . '/' . $customPath)",
          "204:                     throw new \\Exception('The path: \"' . $customPath . '\" is invalid', 1450086736);",
          "205:                 }",
          "206:                 $files = GeneralUtility::getAllFilesAndFoldersInPath($files, Environment::getPublicPath() . '/' . $customPath);",
          "",
          "[Removed Lines]",
          "203:                     || !GeneralUtility::isFirstPartOfStr((string)realpath(Environment::getPublicPath() . '/' . $customPath), (string)realpath(Environment::getPublicPath()))) {",
          "",
          "[Added Lines]",
          "203:                     || !str_starts_with((string)realpath(Environment::getPublicPath() . '/' . $customPath), (string)realpath(Environment::getPublicPath()))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:             $fileIsInExcludedPath = false;",
          "226:             foreach ($excludedPaths as $exclPath) {",
          "228:                     $fileIsInExcludedPath = true;",
          "229:                     break;",
          "230:                 }",
          "",
          "[Removed Lines]",
          "227:                 if (GeneralUtility::isFirstPartOfStr($value, $exclPath)) {",
          "",
          "[Added Lines]",
          "227:                 if (str_starts_with($value, $exclPath)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbdc05b6ee6c6965ced1eca552a64baf034eb283",
      "candidate_info": {
        "commit_hash": "cbdc05b6ee6c6965ced1eca552a64baf034eb283",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/cbdc05b6ee6c6965ced1eca552a64baf034eb283",
        "files": [
          "typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php",
          "typo3/sysext/backend/Classes/Template/ModuleTemplate.php",
          "typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php",
          "typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php",
          "typo3/sysext/core/Classes/Localization/LanguageService.php",
          "typo3/sysext/core/Classes/Page/PageRenderer.php",
          "typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php",
          "typo3/sysext/core/Classes/TypoScript/TemplateService.php",
          "typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/dashboard/Classes/DashboardInitializationService.php",
          "typo3/sysext/form/Classes/Controller/FormEditorController.php",
          "typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php",
          "typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php",
          "typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php",
          "typo3/sysext/form/Classes/Service/TranslationService.php",
          "typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php"
        ],
        "message": "[TASK] Use extension source paths in icon API\n\nAlso introduce internal PathUtility API to resolve\nthe web path of extension resources and a helper\npublic API method to check whether a path is an\nextension resource path.\n\nStart using the new API throughout the core.\nAll checks of EXT prefix are replaced,\nfurther usages of getAbsoluteWebPath will\nbe replaced in subsequent patches.\n\nReleases: master\nResolves: #95022\n\nChange-Id: I27994f309af8b35ad3822a5be59d81d164fa9cd0\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/70805\nTested-by: core-ci <typo3@b13.com>\nTested-by: Oliver Bartsch <bo@cedev.de>\nTested-by: Benni Mack <benni@typo3.org>\nReviewed-by: Nikita Hovratov <nikita.h@live.de>\nReviewed-by: Oliver Bartsch <bo@cedev.de>\nReviewed-by: Benni Mack <benni@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php||typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php",
          "typo3/sysext/backend/Classes/Template/ModuleTemplate.php||typo3/sysext/backend/Classes/Template/ModuleTemplate.php",
          "typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php||typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php",
          "typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php||typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php",
          "typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php",
          "typo3/sysext/core/Classes/Localization/LanguageService.php||typo3/sysext/core/Classes/Localization/LanguageService.php",
          "typo3/sysext/core/Classes/Page/PageRenderer.php||typo3/sysext/core/Classes/Page/PageRenderer.php",
          "typo3/sysext/core/Classes/Resource/ResourceCompressor.php||typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php||typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php",
          "typo3/sysext/core/Classes/TypoScript/TemplateService.php||typo3/sysext/core/Classes/TypoScript/TemplateService.php",
          "typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php||typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/dashboard/Classes/DashboardInitializationService.php||typo3/sysext/dashboard/Classes/DashboardInitializationService.php",
          "typo3/sysext/form/Classes/Controller/FormEditorController.php||typo3/sysext/form/Classes/Controller/FormEditorController.php",
          "typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php||typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php",
          "typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php||typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php",
          "typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php||typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php",
          "typo3/sysext/form/Classes/Service/TranslationService.php||typo3/sysext/form/Classes/Service/TranslationService.php",
          "typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php||typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php||typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php": [
          "File: typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php -> typo3/sysext/backend/Classes/Controller/AbstractFormEngineAjaxController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     protected function getRelativePathToStylesheetFile(string $stylesheetFile): string",
          "81:     {",
          "83:             $stylesheetFile = GeneralUtility::getFileAbsFileName($stylesheetFile);",
          "84:             $stylesheetFile = PathUtility::getRelativePathTo($stylesheetFile) ?? '';",
          "85:             $stylesheetFile = rtrim($stylesheetFile, '/');",
          "",
          "[Removed Lines]",
          "82:         if (strpos($stylesheetFile, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "82:         if (PathUtility::isExtensionPath($stylesheetFile)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Template/ModuleTemplate.php||typo3/sysext/backend/Classes/Template/ModuleTemplate.php": [
          "File: typo3/sysext/backend/Classes/Template/ModuleTemplate.php -> typo3/sysext/backend/Classes/Template/ModuleTemplate.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:             return $filename;",
          "681:         }",
          "682:         $urlPrefix = '';",
          "684:             $absoluteFilename = GeneralUtility::getFileAbsFileName($filename);",
          "685:             $filename = '';",
          "686:             if ($absoluteFilename !== '') {",
          "",
          "[Removed Lines]",
          "683:         if (strpos($filename, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "683:         if (PathUtility::isExtensionPath($filename)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php||typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php": [
          "File: typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php -> typo3/sysext/core/Classes/Configuration/Loader/PageTsConfigLoader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:                 $includeTsConfigFileList = GeneralUtility::trimExplode(',', $page['tsconfig_includes'], true);",
          "82:                 foreach ($includeTsConfigFileList as $key => $includeTsConfigFile) {",
          "84:                         [$includeTsConfigFileExtensionKey, $includeTsConfigFilename] = explode(",
          "85:                             '/',",
          "86:                             substr($includeTsConfigFile, 4),",
          "",
          "[Removed Lines]",
          "83:                     if (strpos($includeTsConfigFile, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "83:                     if (PathUtility::isExtensionPath($includeTsConfigFile)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php||typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php": [
          "File: typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php -> typo3/sysext/core/Classes/Configuration/Loader/YamlFileLoader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     protected function getStreamlinedFileName(string $fileName, ?string $currentFileName): string",
          "122:     {",
          "123:         if (!empty($currentFileName)) {",
          "125:                 $streamlinedFileName = GeneralUtility::getFileAbsFileName($fileName);",
          "126:             } else {",
          "",
          "[Removed Lines]",
          "124:             if (strpos($fileName, 'EXT:') === 0 || GeneralUtility::isAbsPath($fileName)) {",
          "",
          "[Added Lines]",
          "124:             if (PathUtility::isExtensionPath($fileName) || PathUtility::isAbsolutePath($fileName)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php": [
          "File: typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php -> typo3/sysext/core/Classes/Imaging/IconProvider/AbstractSvgIconProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Core\\Imaging\\IconProvider;",
          "20: use TYPO3\\CMS\\Core\\Imaging\\Icon;",
          "28: {",
          "29:     public const MARKUP_IDENTIFIER_INLINE = 'inline';",
          "",
          "[Removed Lines]",
          "27: abstract class AbstractSvgIconProvider",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Imaging\\IconProviderInterface;",
          "22: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "23: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "30: abstract class AbstractSvgIconProvider implements IconProviderInterface",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:         $icon->setAlternativeMarkup(self::MARKUP_IDENTIFIER_INLINE, $this->generateInlineMarkup($options));",
          "42:     }",
          "44:     protected function getInlineSvg(string $source): string",
          "45:     {",
          "46:         if (!file_exists($source)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     protected function getPublicPath(string $source): string",
          "54:     {",
          "55:         if (PathUtility::isExtensionPath($source)) {",
          "56:             return PathUtility::getPublicResourceWebPath($source);",
          "57:         }",
          "59:         return PathUtility::getAbsoluteWebPath(PathUtility::isAbsolutePath($source) ? $source : GeneralUtility::getFileAbsFileName($source));",
          "60:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php": [
          "File: typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php -> typo3/sysext/core/Classes/Imaging/IconProvider/BitmapIconProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         $source = $options['source'];",
          "60:     }",
          "",
          "[Removed Lines]",
          "54:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "55:             $source = GeneralUtility::getFileAbsFileName($source);",
          "56:         }",
          "57:         $source = PathUtility::getAbsoluteWebPath($source);",
          "59:         return '<img src=\"' . htmlspecialchars($source) . '\" width=\"' . $icon->getDimension()->getWidth() . '\" height=\"' . $icon->getDimension()->getHeight() . '\" alt=\"\" />';",
          "",
          "[Added Lines]",
          "54:         return '<img src=\"' . htmlspecialchars($this->getPublicPath($source)) . '\" width=\"' . $icon->getDimension()->getWidth() . '\" height=\"' . $icon->getDimension()->getHeight() . '\" alt=\"\" />';",
          "55:     }",
          "63:     protected function getPublicPath(string $source): string",
          "64:     {",
          "65:         if (PathUtility::isExtensionPath($source)) {",
          "66:             return PathUtility::getPublicResourceWebPath($source);",
          "67:         }",
          "69:         return PathUtility::getAbsoluteWebPath(PathUtility::isAbsolutePath($source) ? $source : GeneralUtility::getFileAbsFileName($source));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:         $source = $options['source'];",
          "81:             return '';",
          "82:         }",
          "",
          "[Removed Lines]",
          "76:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "77:             $source = GeneralUtility::getFileAbsFileName($source);",
          "78:         }",
          "80:         if (!file_exists($source)) {",
          "",
          "[Added Lines]",
          "86:         $filePath = PathUtility::isAbsolutePath($source) ? $source : GeneralUtility::getFileAbsFileName($source);",
          "88:         if (!file_exists($filePath)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:             '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 %1$d %2$d\" width=\"%1$d\" height=\"%2$d\"><image width=\"%1$d\" height=\"%1$d\" xlink:href=\"%3$s\"/></svg>',",
          "86:             $icon->getDimension()->getWidth(),",
          "87:             $icon->getDimension()->getHeight(),",
          "89:         );",
          "90:     }",
          "91: }",
          "",
          "[Removed Lines]",
          "88:             PathUtility::getAbsoluteWebPath($source)",
          "",
          "[Added Lines]",
          "96:             $this->getPublicPath($source)",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php": [
          "File: typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php -> typo3/sysext/core/Classes/Imaging/IconProvider/SvgIconProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: namespace TYPO3\\CMS\\Core\\Imaging\\IconProvider;",
          "18: use TYPO3\\CMS\\Core\\Imaging\\Icon;",
          "20: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "21: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "27: {",
          "",
          "[Removed Lines]",
          "19: use TYPO3\\CMS\\Core\\Imaging\\IconProviderInterface;",
          "26: class SvgIconProvider extends AbstractSvgIconProvider implements IconProviderInterface",
          "",
          "[Added Lines]",
          "25: class SvgIconProvider extends AbstractSvgIconProvider",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:         }",
          "40:         $source = $options['source'];",
          "48:     }",
          "",
          "[Removed Lines]",
          "42:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "43:             $source = GeneralUtility::getFileAbsFileName($source);",
          "44:         }",
          "46:         $source = PathUtility::getAbsoluteWebPath($source);",
          "47:         return '<img src=\"' . htmlspecialchars($source) . '\" width=\"' . $icon->getDimension()->getWidth() . '\" height=\"' . $icon->getDimension()->getHeight() . '\" alt=\"\" />';",
          "",
          "[Added Lines]",
          "40:         return '<img src=\"' . htmlspecialchars($this->getPublicPath($source)) . '\" width=\"' . $icon->getDimension()->getWidth() . '\" height=\"' . $icon->getDimension()->getHeight() . '\" alt=\"\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:         $source = $options['source'];",
          "64:             $source = GeneralUtility::getFileAbsFileName($source);",
          "65:         }",
          "",
          "[Removed Lines]",
          "63:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "",
          "[Added Lines]",
          "56:         if (PathUtility::isExtensionPath($source) || !PathUtility::isAbsolutePath($source)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php||typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php": [
          "File: typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php -> typo3/sysext/core/Classes/Imaging/IconProvider/SvgSpriteIconProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Core\\Imaging\\IconProvider;",
          "20: use TYPO3\\CMS\\Core\\Imaging\\Icon;",
          "22: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "23: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Imaging\\IconProviderInterface;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: {",
          "",
          "[Removed Lines]",
          "30: class SvgSpriteIconProvider extends AbstractSvgIconProvider implements IconProviderInterface",
          "",
          "[Added Lines]",
          "29: class SvgSpriteIconProvider extends AbstractSvgIconProvider",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42:         }",
          "44:         $source = $options['sprite'];",
          "52:     }",
          "",
          "[Removed Lines]",
          "46:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "47:             $source = GeneralUtility::getFileAbsFileName($source);",
          "48:         }",
          "50:         $source = PathUtility::getAbsoluteWebPath($source);",
          "51:         return '<svg class=\"icon-color\"><use xlink:href=\"' . htmlspecialchars($source) . '\" /></svg>';",
          "",
          "[Added Lines]",
          "44:         return '<svg class=\"icon-color\"><use xlink:href=\"' . htmlspecialchars($this->getPublicPath($source)) . '\" /></svg>';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:         $source = $options['source'];",
          "68:             $source = GeneralUtility::getFileAbsFileName($source);",
          "69:         }",
          "",
          "[Removed Lines]",
          "67:         if (strpos($source, 'EXT:') === 0 || strpos($source, '/') !== 0) {",
          "",
          "[Added Lines]",
          "60:         if (PathUtility::isExtensionPath($source) || !PathUtility::isAbsolutePath($source)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Localization/LanguageService.php||typo3/sysext/core/Classes/Localization/LanguageService.php": [
          "File: typo3/sysext/core/Classes/Localization/LanguageService.php -> typo3/sysext/core/Classes/Localization/LanguageService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use TYPO3\\CMS\\Core\\Site\\Entity\\SiteLanguage;",
          "21: use TYPO3\\CMS\\Core\\Utility\\ArrayUtility;",
          "22: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:             $restStr = substr(trim($input), 4);",
          "176:             $extPrfx = '';",
          "179:                 $restStr = substr(trim($restStr), 4);",
          "180:                 $extPrfx = 'EXT:';",
          "181:             }",
          "",
          "[Removed Lines]",
          "178:             if (strpos(trim($restStr), 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "179:             if (PathUtility::isExtensionPath(trim($restStr))) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Page/PageRenderer.php||typo3/sysext/core/Classes/Page/PageRenderer.php": [
          "File: typo3/sysext/core/Classes/Page/PageRenderer.php -> typo3/sysext/core/Classes/Page/PageRenderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2583:     protected function getStreamlinedFileName($file, $prepareForOutput = true)",
          "2584:     {",
          "2586:             $file = GeneralUtility::getFileAbsFileName($file);",
          "2588:             $file = PathUtility::getRelativePathTo($file) ?? '';",
          "",
          "[Removed Lines]",
          "2585:         if (strpos($file, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "2585:         if (PathUtility::isExtensionPath($file)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Resource/ResourceCompressor.php||typo3/sysext/core/Classes/Resource/ResourceCompressor.php": [
          "File: typo3/sysext/core/Classes/Resource/ResourceCompressor.php -> typo3/sysext/core/Classes/Resource/ResourceCompressor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:             $filename = 'typo3/' . $filename;",
          "467:         }",
          "470:             $file = GeneralUtility::getFileAbsFileName($filename);",
          "471:         } elseif (strpos($filename, '../') === 0) {",
          "472:             $file = GeneralUtility::resolveBackPath(Environment::getBackendPath() . '/' . $filename);",
          "",
          "[Removed Lines]",
          "469:         if (strpos($filename, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "469:         if (PathUtility::isExtensionPath($filename)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php||typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php": [
          "File: typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php -> typo3/sysext/core/Classes/TypoScript/Parser/TypoScriptParser.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "944:                 $filePointerPathParts = explode('/', substr($filename, 4));",
          "946:                 [$includeType] = explode('.', (string)array_pop($filePointerPathParts));",
          "",
          "[Removed Lines]",
          "943:             if (strpos(strtoupper($filename), 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "943:             if (PathUtility::isExtensionPath(strtoupper($filename))) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/TypoScript/TemplateService.php||typo3/sysext/core/Classes/TypoScript/TemplateService.php": [
          "File: typo3/sysext/core/Classes/TypoScript/TemplateService.php -> typo3/sysext/core/Classes/TypoScript/TemplateService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: use TYPO3\\CMS\\Core\\Utility\\ArrayUtility;",
          "34: use TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;",
          "35: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "36: use TYPO3\\CMS\\Frontend\\Configuration\\TypoScript\\ConditionMatching\\ConditionMatcher;",
          "37: use TYPO3\\CMS\\Frontend\\Controller\\TypoScriptFrontendController;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "763:             $include_static_fileArr = GeneralUtility::trimExplode(',', $row['include_static_file'], true);",
          "765:             foreach ($include_static_fileArr as $ISF_file) {",
          "767:                     [$ISF_extKey, $ISF_localPath] = explode('/', substr($ISF_file, 4), 2);",
          "768:                     if ((string)$ISF_extKey !== '' && ExtensionManagementUtility::isLoaded($ISF_extKey) && (string)$ISF_localPath !== '') {",
          "769:                         $ISF_localPath = rtrim($ISF_localPath, '/') . '/';",
          "",
          "[Removed Lines]",
          "766:                 if (strpos($ISF_file, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "767:                 if (PathUtility::isExtensionPath($ISF_file)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php||typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php -> typo3/sysext/core/Classes/Utility/ExtensionManagementUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "855:             }",
          "857:             if (!empty($moduleConfiguration['icon'])) {",
          "858:                 $iconRegistry = GeneralUtility::makeInstance(IconRegistry::class);",
          "859:                 $iconIdentifier = 'module-' . $fullModuleSignature;",
          "861:                 $iconRegistry->registerIcon(",
          "862:                     $iconIdentifier,",
          "863:                     $iconProvider,",
          "865:                 );",
          "866:                 $moduleConfiguration['iconIdentifier'] = $iconIdentifier;",
          "867:                 unset($moduleConfiguration['icon']);",
          "",
          "[Removed Lines]",
          "860:                 $iconProvider = $iconRegistry->detectIconProvider($moduleConfiguration['icon']);",
          "864:                     ['source' => GeneralUtility::getFileAbsFileName($moduleConfiguration['icon'])]",
          "",
          "[Added Lines]",
          "858:                 $iconPath = $moduleConfiguration['icon'];",
          "859:                 if (!PathUtility::isExtensionPath($iconPath)) {",
          "860:                     $iconPath = GeneralUtility::getFileAbsFileName($iconPath);",
          "861:                 }",
          "864:                 $iconProvider = $iconRegistry->detectIconProvider($iconPath);",
          "868:                     ['source' => $iconPath]",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2810:             return '';",
          "2811:         }",
          "2814:             [$extKey, $local] = explode('/', substr($filename, 4), 2);",
          "2815:             $filename = '';",
          "2816:             if ((string)$extKey !== '' && ExtensionManagementUtility::isLoaded($extKey) && (string)$local !== '') {",
          "",
          "[Removed Lines]",
          "2813:         if (strpos($filename, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "2813:         if (PathUtility::isExtensionPath($filename)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/PathUtility.php -> typo3/sysext/core/Classes/Utility/PathUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         return $targetPath;",
          "67:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     public static function getPublicResourceWebPath(string $resourcePath): string",
          "77:     {",
          "78:         if (!self::isExtensionPath($resourcePath)) {",
          "79:             throw new \\RuntimeException('Resource paths must start with EXT:', 1630089406);",
          "80:         }",
          "82:         return self::getAbsoluteWebPath(GeneralUtility::getFileAbsFileName($resourcePath));",
          "83:     }",
          "91:     public static function isExtensionPath(string $path): bool",
          "92:     {",
          "93:         return strpos($path, 'EXT:') === 0;",
          "94:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/dashboard/Classes/DashboardInitializationService.php||typo3/sysext/dashboard/Classes/DashboardInitializationService.php": [
          "File: typo3/sysext/dashboard/Classes/DashboardInitializationService.php -> typo3/sysext/dashboard/Classes/DashboardInitializationService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:     protected function defineJsFiles(AdditionalJavaScriptInterface $widgetInstance): void",
          "181:     {",
          "182:         foreach ($widgetInstance->getJsFiles() as $jsFile) {",
          "185:             }",
          "186:             $this->jsFiles[$jsFile] = $jsFile;",
          "187:         }",
          "",
          "[Removed Lines]",
          "183:             if (strpos($jsFile, 'EXT:') === 0) {",
          "184:                 $jsFile = PathUtility::getAbsoluteWebPath(GeneralUtility::getFileAbsFileName($jsFile));",
          "",
          "[Added Lines]",
          "183:             if (PathUtility::isExtensionPath($jsFile)) {",
          "184:                 $jsFile = PathUtility::getPublicResourceWebPath($jsFile);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "196:     protected function defineCssFiles(AdditionalCssInterface $widgetInstance): void",
          "197:     {",
          "198:         foreach ($widgetInstance->getCssFiles() as $cssFile) {",
          "201:             }",
          "202:             $this->cssFiles[$cssFile] = $cssFile;",
          "203:         }",
          "",
          "[Removed Lines]",
          "199:             if (strpos($cssFile, 'EXT:') === 0) {",
          "200:                 $cssFile = PathUtility::getAbsoluteWebPath(GeneralUtility::getFileAbsFileName($cssFile));",
          "",
          "[Added Lines]",
          "199:             if (PathUtility::isExtensionPath($cssFile)) {",
          "200:                 $cssFile = PathUtility::getPublicResourceWebPath($cssFile);",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Controller/FormEditorController.php||typo3/sysext/form/Classes/Controller/FormEditorController.php": [
          "File: typo3/sysext/form/Classes/Controller/FormEditorController.php -> typo3/sysext/form/Classes/Controller/FormEditorController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: use TYPO3\\CMS\\Core\\Site\\Entity\\SiteLanguage;",
          "30: use TYPO3\\CMS\\Core\\Utility\\ArrayUtility;",
          "31: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "32: use TYPO3\\CMS\\Extbase\\Mvc\\View\\JsonView;",
          "33: use TYPO3\\CMS\\Fluid\\View\\TemplateView;",
          "34: use TYPO3\\CMS\\Form\\Domain\\Configuration\\ConfigurationService;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:         }",
          "83:         if (",
          "85:             && !$this->formSettings['persistenceManager']['allowSaveToExtensionPaths']",
          "86:         ) {",
          "87:             throw new PersistenceManagerException('Edit a extension formDefinition is not allowed.', 1478265661);",
          "",
          "[Removed Lines]",
          "84:             strpos($formPersistenceIdentifier, 'EXT:') === 0",
          "",
          "[Added Lines]",
          "85:             PathUtility::isExtensionPath($formPersistenceIdentifier)",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php||typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php": [
          "File: typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php -> typo3/sysext/form/Classes/Hooks/FormPagePreviewRenderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageService;",
          "27: use TYPO3\\CMS\\Core\\Service\\FlexFormService;",
          "28: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "29: use TYPO3\\CMS\\Core\\Utility\\StringUtility;",
          "30: use TYPO3\\CMS\\Form\\Mvc\\Configuration\\Exception\\NoSuchFileException;",
          "31: use TYPO3\\CMS\\Form\\Mvc\\Configuration\\Exception\\ParseErrorException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:                 try {",
          "58:                     if (",
          "59:                         StringUtility::endsWith($persistenceIdentifier, FormPersistenceManager::FORM_DEFINITION_FILE_EXTENSION)",
          "61:                     ) {",
          "62:                         $formDefinition = $formPersistenceManager->load($persistenceIdentifier);",
          "63:                         $formLabel = $formDefinition['label'];",
          "",
          "[Removed Lines]",
          "60:                         || strpos($persistenceIdentifier, 'EXT:') === 0",
          "",
          "[Added Lines]",
          "61:                         || PathUtility::isExtensionPath($persistenceIdentifier)",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php||typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php": [
          "File: typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php -> typo3/sysext/form/Classes/Mvc/Persistence/FormPersistenceManager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "610:     protected function pathIsIntendedAsExtensionPath(string $path): bool",
          "611:     {",
          "613:     }",
          "",
          "[Removed Lines]",
          "612:         return strpos($path, 'EXT:') === 0;",
          "",
          "[Added Lines]",
          "612:         return PathUtility::isExtensionPath($path);",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php||typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php": [
          "File: typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php -> typo3/sysext/form/Classes/Mvc/Property/PropertyMappingConfiguration.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:             return false;",
          "132:         }",
          "135:             return false;",
          "136:         }",
          "",
          "[Removed Lines]",
          "134:         if (strpos($saveToFileMountIdentifier, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "134:         if (PathUtility::isExtensionPath($saveToFileMountIdentifier)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/form/Classes/Service/TranslationService.php||typo3/sysext/form/Classes/Service/TranslationService.php": [
          "File: typo3/sysext/form/Classes/Service/TranslationService.php -> typo3/sysext/form/Classes/Service/TranslationService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Core\\Utility\\ArrayUtility;",
          "28: use TYPO3\\CMS\\Core\\Utility\\Exception\\MissingArrayPathException;",
          "29: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "30: use TYPO3\\CMS\\Extbase\\Configuration\\ConfigurationManagerInterface;",
          "31: use TYPO3\\CMS\\Form\\Domain\\Model\\FormElements\\FormElementInterface;",
          "32: use TYPO3\\CMS\\Form\\Domain\\Model\\Renderable\\RootRenderableInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:         if (GeneralUtility::isFirstPartOfStr($key, 'LLL:')) {",
          "124:             $locallangPathAndFilename = $keyParts[1] . ':' . $keyParts[2];",
          "125:             $key = $keyParts[3];",
          "127:             $locallangPathAndFilename = $keyParts[0] . ':' . $keyParts[1];",
          "128:             $key = $keyParts[2];",
          "129:         } else {",
          "",
          "[Removed Lines]",
          "126:         } elseif (GeneralUtility::isFirstPartOfStr($key, 'EXT:')) {",
          "",
          "[Added Lines]",
          "127:         } elseif (PathUtility::isExtensionPath($key)) {",
          "",
          "---------------"
        ],
        "typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php||typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php": [
          "File: typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php -> typo3/sysext/rte_ckeditor/Classes/Form/Element/RichTextElement.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "353:         foreach ($configuration as $key => $value) {",
          "354:             if (is_array($value)) {",
          "355:                 $configuration[$key] = $this->replaceAbsolutePathsToRelativeResourcesPath($value);",
          "357:                 $configuration[$key] = $this->resolveUrlPath($value);",
          "358:             }",
          "359:         }",
          "",
          "[Removed Lines]",
          "356:             } elseif (is_string($value) && stripos($value, 'EXT:') === 0) {",
          "",
          "[Added Lines]",
          "356:             } elseif (is_string($value) && PathUtility::isExtensionPath(strtoupper($value))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f39c70f9859d1cb80ea54f4ec2080fecf732ffa",
      "candidate_info": {
        "commit_hash": "8f39c70f9859d1cb80ea54f4ec2080fecf732ffa",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/8f39c70f9859d1cb80ea54f4ec2080fecf732ffa",
        "files": [
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php"
        ],
        "message": "[TASK] Add native types to the GeneralUtility properties\n\nResolves: #97892\nReleases: main\nChange-Id: Ib704bd1dbf8fb1be71ff80748c379273ded6552b\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75096\nTested-by: core-ci <typo3@b13.com>\nTested-by: Christian Kuhn <lolli@schwarzbu.ch>\nTested-by: Stefan B\u00fcrk <stefan@buerk.tech>\nReviewed-by: Christian Kuhn <lolli@schwarzbu.ch>\nReviewed-by: Stefan B\u00fcrk <stefan@buerk.tech>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: class GeneralUtility",
          "51: {",
          "",
          "[Removed Lines]",
          "55:     protected static $container;",
          "",
          "[Added Lines]",
          "52:     protected static ?ContainerInterface $container = null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:     final private function __construct()",
          "85:     {",
          "",
          "[Removed Lines]",
          "63:     protected static $singletonInstances = [];",
          "70:     protected static $nonSingletonInstances = [];",
          "77:     protected static $finalClassNameCache = [];",
          "82:     protected static $indpEnvCache = [];",
          "",
          "[Added Lines]",
          "60:     protected static array $singletonInstances = [];",
          "67:     protected static array $nonSingletonInstances = [];",
          "74:     protected static array $finalClassNameCache = [];",
          "79:     protected static array $indpEnvCache = [];",
          "",
          "---------------"
        ]
      }
    }
  ]
}