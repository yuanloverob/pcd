{
  "cve_id": "CVE-2024-1726",
  "cve_desc": "A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.",
  "repo": "quarkusio/quarkus",
  "patch_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
  "patch_info": {
    "commit_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "repo": "quarkusio/quarkus",
    "commit_url": "https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ],
    "message": "Perform security checks eagerly in RR on inherited endpoints\n\n(cherry picked from commit 37834cb44a0bc5101cdf60922c8dd0301efac822)",
    "before_after_code_files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ]
  },
  "patch_diff": {
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:         assertStatus(path, 403, 401);",
      "92:     }",
      "94:     @Test",
      "95:     public void shouldDenyUnannotatedOnInterface() {",
      "96:         String path = \"/unsecured/defaultSecurityInterface\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "94:     @Test",
      "95:     public void shouldAllowAnnotatedParentEndpoint() {",
      "97:         String path = \"/unsecured/parent-annotated\";",
      "98:         assertStatus(path, 200, 401);",
      "99:     }",
      "101:     @Test",
      "102:     public void shouldAllowAnnotatedEndpointOnInterface() {",
      "104:         String path = \"/unsecured/interface-annotated\";",
      "105:         assertStatus(path, 200, 401);",
      "106:     }",
      "108:     @Test",
      "109:     public void shouldDenyUnannotatedOverriddenOnInterfaceImplementor() {",
      "111:         String path = \"/unsecured/interface-overridden-declared-on-implementor\";",
      "112:         assertStatus(path, 403, 401);",
      "113:     }",
      "115:     @Test",
      "116:     public void shouldAllowAnnotatedOverriddenEndpointDeclaredOnInterface() {",
      "118:         String path = \"/unsecured/interface-overridden-declared-on-interface\";",
      "119:         assertStatus(path, 200, 401);",
      "121:         given().auth().preemptive()",
      "122:                 .basic(\"admin\", \"admin\").get(path)",
      "123:                 .then()",
      "124:                 .body(Matchers.is(\"implementor-response\"));",
      "125:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityParent\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/parent-annotated\")",
      "18:     public String parentAnnotated() {",
      "19:         return \"parent-annotated\";",
      "20:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:     public UnsecuredSubResource permitAllSub() {",
      "58:         return new UnsecuredSubResource();",
      "59:     }",
      "60: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "61:     @Override",
      "62:     public String interfaceOverriddenDeclaredOnInterface() {",
      "63:         return \"implementor-response\";",
      "64:     }",
      "66:     @GET",
      "67:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "68:     @Override",
      "69:     public String interfaceOverriddenDeclaredOnImplementor() {",
      "70:         return \"implementor-response\";",
      "71:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityInterface\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/interface-annotated\")",
      "18:     default String interfaceAnnotated() {",
      "19:         return \"interface-annotated\";",
      "20:     }",
      "22:     @RolesAllowed({ \"admin\", \"user\" })",
      "23:     @GET",
      "24:     @Path(\"/interface-overridden-declared-on-interface\")",
      "25:     default String interfaceOverriddenDeclaredOnInterface() {",
      "27:         return \"interface-overridden-declared-on-interface\";",
      "28:     }",
      "30:     @RolesAllowed({ \"admin\", \"user\" })",
      "31:     @GET",
      "32:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "33:     default String interfaceOverriddenDeclaredOnImplementor() {",
      "35:         return \"interface-overridden-declared-on-implementor\";",
      "36:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "187:     }",
      "189:     static MethodDescription lazyMethodToMethodDescription(ResteasyReactiveResourceInfo lazyMethod) {",
      "191:                 lazyMethod.getName(), MethodDescription.typesAsStrings(lazyMethod.getParameterTypes()));",
      "192:     }",
      "",
      "[Removed Lines]",
      "190:         return new MethodDescription(lazyMethod.getResourceClass().getName(),",
      "",
      "[Added Lines]",
      "190:         return new MethodDescription(lazyMethod.getActualDeclaringClassName(),",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java": [
      "File: independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java -> independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:             }",
      "184:         }",
      "185:         serverResourceMethod.setHandlerChainCustomizers(methodCustomizers);",
      "186:         return serverResourceMethod;",
      "187:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "186:         serverResourceMethod.setActualDeclaringClassName(methodInfo.declaringClass().name().toString());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "190:         ResteasyReactiveResourceInfo lazyMethod = new ResteasyReactiveResourceInfo(method.getName(), resourceClass,",
      "191:                 parameterDeclaredUnresolvedTypes, classAnnotationNames, method.getMethodAnnotationNames(),",
      "194:         RuntimeInterceptorDeployment.MethodInterceptorContext interceptorDeployment = runtimeInterceptorDeployment",
      "195:                 .forMethod(method, lazyMethod);",
      "",
      "[Removed Lines]",
      "192:                 !defaultBlocking && !method.isBlocking());",
      "",
      "[Added Lines]",
      "192:                 !defaultBlocking && !method.isBlocking(), method.getActualDeclaringClassName());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:     private List<HandlerChainCustomizer> handlerChainCustomizers = new ArrayList<>();",
      "20:     private ParameterExtractor customerParameterExtractor;",
      "22:     public ServerResourceMethod() {",
      "23:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21:     private String actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:         this.customerParameterExtractor = customerParameterExtractor;",
      "71:         return this;",
      "72:     }",
      "73: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:     public String getActualDeclaringClassName() {",
      "76:         return actualDeclaringClassName;",
      "77:     }",
      "79:     public void setActualDeclaringClassName(String actualDeclaringClassName) {",
      "80:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "81:     }",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:     public final boolean isNonBlocking;",
      "30:     private volatile Annotation[] classAnnotations;",
      "31:     private volatile Method method;",
      "32:     private volatile Annotation[] annotations;",
      "33:     private volatile Type returnType;",
      "34:     private volatile String methodId;",
      "36:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "37:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking) {",
      "38:         this.name = name;",
      "39:         this.declaringClass = declaringClass;",
      "40:         this.parameterTypes = parameterTypes;",
      "41:         this.classAnnotationNames = classAnnotationNames;",
      "42:         this.methodAnnotationNames = methodAnnotationNames;",
      "43:         this.isNonBlocking = isNonBlocking;",
      "44:     }",
      "46:     public String getName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:     private final String actualDeclaringClassName;",
      "39:     @Deprecated",
      "42:         this(name, declaringClass, parameterTypes, classAnnotationNames, methodAnnotationNames, isNonBlocking,",
      "43:                 declaringClass.getName());",
      "44:     }",
      "46:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "47:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking,",
      "48:             String actualDeclaringClassName) {",
      "55:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "119:         }",
      "120:         return methodId;",
      "121:     }",
      "122: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135:     public String getActualDeclaringClassName() {",
      "136:         return actualDeclaringClassName;",
      "137:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "45c86cc178a943937a71b0f34692ea4711d738cc",
      "candidate_info": {
        "commit_hash": "45c86cc178a943937a71b0f34692ea4711d738cc",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/45c86cc178a943937a71b0f34692ea4711d738cc",
        "files": [
          "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java",
          "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java",
          "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java"
        ],
        "message": "Quartz - prevent memory leak when Job instance is a @Dependent bean\n\n(cherry picked from commit 6dcfaca7b62b6119ed454e8fafc58fe389cbefcc)",
        "before_after_code_files": [
          "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java||extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java",
          "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java||extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java",
          "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java||extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java||extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java": [
          "File: extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java -> extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DependentBeanJobTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.quartz.test;",
          "3: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "4: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "6: import java.util.concurrent.CountDownLatch;",
          "7: import java.util.concurrent.TimeUnit;",
          "9: import jakarta.annotation.PostConstruct;",
          "10: import jakarta.annotation.PreDestroy;",
          "11: import jakarta.enterprise.context.ApplicationScoped;",
          "12: import jakarta.enterprise.context.Dependent;",
          "13: import jakarta.inject.Inject;",
          "15: import org.jboss.shrinkwrap.api.asset.StringAsset;",
          "16: import org.junit.jupiter.api.Test;",
          "17: import org.junit.jupiter.api.extension.RegisterExtension;",
          "18: import org.quartz.Job;",
          "19: import org.quartz.JobBuilder;",
          "20: import org.quartz.JobDetail;",
          "21: import org.quartz.JobExecutionContext;",
          "22: import org.quartz.JobExecutionException;",
          "23: import org.quartz.Scheduler;",
          "24: import org.quartz.SchedulerException;",
          "25: import org.quartz.SimpleScheduleBuilder;",
          "26: import org.quartz.Trigger;",
          "27: import org.quartz.TriggerBuilder;",
          "29: import io.quarkus.test.QuarkusUnitTest;",
          "31: public class DependentBeanJobTest {",
          "33:     @RegisterExtension",
          "34:     static final QuarkusUnitTest test = new QuarkusUnitTest()",
          "35:             .withApplicationRoot((jar) -> jar",
          "36:                     .addClasses(Service.class, MyJob.class)",
          "37:                     .addAsResource(new StringAsset(\"quarkus.quartz.start-mode=forced\"),",
          "38:                             \"application.properties\"));",
          "40:     @Inject",
          "41:     Scheduler quartz;",
          "43:     @Inject",
          "44:     Service service;",
          "46:     @Test",
          "47:     public void testDependentBeanJobDestroyed() throws SchedulerException, InterruptedException {",
          "48:         assertEquals(0, MyJob.timesConstructed);",
          "49:         assertEquals(0, MyJob.timesDestroyed);",
          "51:         CountDownLatch latch = service.initializeLatch(10);",
          "52:         for (int i = 0; i < 10; i++) {",
          "53:             Trigger trigger = TriggerBuilder.newTrigger()",
          "54:                     .withIdentity(\"myTrigger\" + i, \"myGroup\")",
          "55:                     .startNow()",
          "56:                     .build();",
          "57:             JobDetail job = JobBuilder.newJob(MyJob.class)",
          "58:                     .withIdentity(\"myJob\" + i, \"myGroup\")",
          "59:                     .build();",
          "60:             quartz.scheduleJob(job, trigger);",
          "61:         }",
          "62:         assertTrue(latch.await(5, TimeUnit.SECONDS), \"Latch count: \" + latch.getCount());",
          "63:         assertEquals(10, MyJob.timesConstructed);",
          "64:         assertEquals(10, MyJob.timesDestroyed);",
          "67:         latch = service.initializeLatch(3);",
          "68:         JobDetail job = JobBuilder.newJob(MyJob.class)",
          "69:                 .withIdentity(\"myRepeatingJob\", \"myGroup\")",
          "70:                 .build();",
          "71:         Trigger trigger = TriggerBuilder.newTrigger()",
          "72:                 .withIdentity(\"myRepeatingTrigger\", \"myGroup\")",
          "73:                 .startNow()",
          "74:                 .withSchedule(",
          "75:                         SimpleScheduleBuilder.simpleSchedule()",
          "76:                                 .withIntervalInMilliseconds(333)",
          "77:                                 .withRepeatCount(3))",
          "78:                 .build();",
          "79:         quartz.scheduleJob(job, trigger);",
          "81:         assertTrue(latch.await(2, TimeUnit.SECONDS), \"Latch count: \" + latch.getCount());",
          "82:         assertEquals(13, MyJob.timesConstructed);",
          "83:         assertEquals(13, MyJob.timesDestroyed);",
          "84:     }",
          "86:     @ApplicationScoped",
          "87:     public static class Service {",
          "89:         volatile CountDownLatch latch;",
          "91:         public CountDownLatch initializeLatch(int latchCountdown) {",
          "92:             this.latch = new CountDownLatch(latchCountdown);",
          "93:             return latch;",
          "94:         }",
          "96:         public void execute() {",
          "97:             latch.countDown();",
          "98:         }",
          "100:     }",
          "102:     @Dependent",
          "103:     static class MyJob implements Job {",
          "105:         public static volatile int timesConstructed = 0;",
          "106:         public static volatile int timesDestroyed = 0;",
          "108:         @Inject",
          "109:         Service service;",
          "111:         @PostConstruct",
          "112:         void postConstruct() {",
          "113:             timesConstructed++;",
          "114:         }",
          "116:         @PreDestroy",
          "117:         void preDestroy() {",
          "118:             timesDestroyed++;",
          "119:         }",
          "121:         @Override",
          "122:         public void execute(JobExecutionContext context) throws JobExecutionException {",
          "123:             service.execute();",
          "124:         }",
          "125:     }",
          "126: }",
          "",
          "---------------"
        ],
        "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java||extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java": [
          "File: extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java -> extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/CdiAwareJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.quartz.runtime;",
          "3: import jakarta.enterprise.context.Dependent;",
          "4: import jakarta.enterprise.inject.Instance;",
          "6: import org.quartz.Job;",
          "7: import org.quartz.JobExecutionContext;",
          "8: import org.quartz.JobExecutionException;",
          "9: import org.quartz.Scheduler;",
          "10: import org.quartz.spi.TriggerFiredBundle;",
          "18: class CdiAwareJob implements Job {",
          "20:     private final Instance.Handle<? extends Job> jobInstanceHandle;",
          "22:     public CdiAwareJob(Instance.Handle<? extends Job> jobInstanceHandle) {",
          "23:         this.jobInstanceHandle = jobInstanceHandle;",
          "24:     }",
          "26:     @Override",
          "27:     public void execute(JobExecutionContext context) throws JobExecutionException {",
          "28:         try {",
          "29:             jobInstanceHandle.get().execute(context);",
          "30:         } finally {",
          "31:             if (jobInstanceHandle.getBean().getScope().equals(Dependent.class)) {",
          "32:                 jobInstanceHandle.destroy();",
          "33:             }",
          "34:         }",
          "35:     }",
          "36: }",
          "",
          "---------------"
        ],
        "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java||extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java": [
          "File: extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java -> extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzSchedulerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1244:                 jobClass = (Class<? extends Job>) jobClass.getSuperclass();",
          "1245:             }",
          "1247:             if (instance.isResolvable()) {",
          "1250:             }",
          "1252:             return jobWithSpanWrapper(super.newJob(bundle, Scheduler));",
          "",
          "[Removed Lines]",
          "1246:             Instance<?> instance = jobs.select(jobClass);",
          "1249:                 return jobWithSpanWrapper((Job) instance.get());",
          "",
          "[Added Lines]",
          "1246:             Instance<? extends Job> instance = jobs.select(jobClass);",
          "1249:                 return jobWithSpanWrapper(new CdiAwareJob(instance.getHandle()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9806cf6d6fbe1d6a49216cb78831f1c0c7789999",
      "candidate_info": {
        "commit_hash": "9806cf6d6fbe1d6a49216cb78831f1c0c7789999",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/9806cf6d6fbe1d6a49216cb78831f1c0c7789999",
        "files": [
          "test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java"
        ],
        "message": "Allow subclasses to override how much memory extension tests are allowed\n\n(cherry picked from commit 554bb02493b94bb2e2f11286f39ea93fb587c38e)",
        "before_after_code_files": [
          "test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java||test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java||test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java": [
          "File: test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java -> test-framework/maven/src/main/java/io/quarkus/maven/it/RunAndCheckMojoTestBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     protected File testDir;",
          "26:     protected DevModeClient devModeClient = new DevModeClient(getPort());",
          "27:     private static final int DEFAULT_PORT = 8080;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     private static final int DEFAULT_MEMORY_IN_MB = 128;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:         return DEFAULT_PORT;",
          "34:     }",
          "36:     @AfterEach",
          "37:     public void cleanup() {",
          "38:         shutdownTheApp();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     protected int getAllowedHeapInMb() {",
          "42:         return DEFAULT_MEMORY_IN_MB;",
          "43:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:         running.execute(args, Map.of());",
          "106:     }",
          "",
          "[Removed Lines]",
          "104:         args.add(\"-Djvm.args=-Xmx128m\");",
          "",
          "[Added Lines]",
          "113:         args.add(\"-Djvm.args=-Xmx\" + getAllowedHeapInMb() + \"m\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fd11a9e1042734e9e5feae09fbe56a89d6596d0",
      "candidate_info": {
        "commit_hash": "7fd11a9e1042734e9e5feae09fbe56a89d6596d0",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/7fd11a9e1042734e9e5feae09fbe56a89d6596d0",
        "files": [
          "extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java"
        ],
        "message": "Fix Keycloak Admin Client Reactive Jackson reader provider priority\n\n(cherry picked from commit 8c0c413a2e646caecdba35ea03a2dbf54df74e61)",
        "before_after_code_files": [
          "extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java||extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java||extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java": [
          "File: extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java -> extensions/keycloak-admin-client-reactive/runtime/src/main/java/io/quarkus/keycloak/admin/client/reactive/runtime/ResteasyReactiveClientProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: public class ResteasyReactiveClientProvider implements ResteasyClientProvider {",
          "30:     private static final List<String> HANDLED_MEDIA_TYPES = List.of(MediaType.APPLICATION_JSON);",
          "33:     private final boolean tlsTrustAll;",
          "",
          "[Removed Lines]",
          "31:     private static final int PROVIDER_PRIORITY = Priorities.USER + 100; // ensures that it will be used first",
          "",
          "[Added Lines]",
          "31:     private static final int WRITER_PROVIDER_PRIORITY = Priorities.USER + 100; // ensures that it will be used first",
          "32:     private static final int READER_PROVIDER_PRIORITY = Priorities.USER - 100; // ensures that it will be used first",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:                 clientBuilder = clientBuilder",
          "78:                         .registerMessageBodyReader(new JacksonBasicMessageBodyReader(newObjectMapper), Object.class,",
          "79:                                 HANDLED_MEDIA_TYPES, true,",
          "81:                         .registerMessageBodyWriter(new ClientJacksonMessageBodyWriter(newObjectMapper), Object.class,",
          "83:             }",
          "84:             InstanceHandle<ClientLogger> clientLogger = arcContainer.instance(ClientLogger.class);",
          "85:             if (clientLogger.isAvailable()) {",
          "",
          "[Removed Lines]",
          "80:                                 PROVIDER_PRIORITY)",
          "82:                                 HANDLED_MEDIA_TYPES, true, PROVIDER_PRIORITY);",
          "",
          "[Added Lines]",
          "81:                                 READER_PROVIDER_PRIORITY)",
          "83:                                 HANDLED_MEDIA_TYPES, true, WRITER_PROVIDER_PRIORITY);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8282af8c9a626f3608dfe2f2eb0c435c02ca712a",
      "candidate_info": {
        "commit_hash": "8282af8c9a626f3608dfe2f2eb0c435c02ca712a",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/8282af8c9a626f3608dfe2f2eb0c435c02ca712a",
        "files": [
          "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java",
          "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java",
          "independent-projects/bootstrap/pom.xml",
          "independent-projects/extension-maven-plugin/pom.xml"
        ],
        "message": "Configure SISU bean filtering for the bootstrap Maven resolver\n\n(cherry picked from commit 1f231f0ebbaef987f292afc839b37a72dddfdf9e)",
        "before_after_code_files": [
          "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java||independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java",
          "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java||independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java||independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java": [
          "File: independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java -> independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContext.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: import io.quarkus.bootstrap.resolver.maven.workspace.ModelUtils;",
          "80: import io.quarkus.bootstrap.util.PropertyUtils;",
          "81: import io.quarkus.maven.dependency.ArtifactCoords;",
          "84: import io.smallrye.beanbag.maven.MavenFactory;",
          "86: public class BootstrapMavenContext {",
          "",
          "[Removed Lines]",
          "82: import io.smallrye.beanbag.BeanSupplier;",
          "83: import io.smallrye.beanbag.Scope;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:     private Boolean effectiveModelBuilder;",
          "133:     private Boolean wsModuleParentHierarchy;",
          "134:     private SettingsDecrypter settingsDecrypter;",
          "136:     public static BootstrapMavenContextConfig<?> config() {",
          "137:         return new BootstrapMavenContextConfig<>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:     private final List<String> excludeSisuBeanPackages;",
          "134:     private final List<String> includeSisuBeanPackages;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:         this.remotePluginRepos = config.remotePluginRepos;",
          "159:         this.remoteRepoManager = config.remoteRepoManager;",
          "160:         this.cliOptions = config.cliOptions;",
          "161:         if (config.rootProjectDir == null) {",
          "162:             final String topLevelBaseDirStr = PropertyUtils.getProperty(MAVEN_TOP_LEVEL_PROJECT_BASEDIR);",
          "163:             if (topLevelBaseDirStr != null) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:         this.excludeSisuBeanPackages = config.getExcludeSisuBeanPackages();",
          "162:         this.includeSisuBeanPackages = config.getIncludeSisuBeanPackages();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "872:     protected MavenFactory configureMavenFactory() {",
          "873:         return MavenFactory.create(RepositorySystem.class.getClassLoader(), builder -> {",
          "880:         });",
          "881:     }",
          "",
          "[Removed Lines]",
          "874:             builder.addBean(ModelBuilder.class).setSupplier(new BeanSupplier<ModelBuilder>() {",
          "875:                 @Override",
          "876:                 public ModelBuilder get(Scope scope) {",
          "877:                     return new MavenModelBuilder(BootstrapMavenContext.this);",
          "878:                 }",
          "879:             }).setPriority(100).build();",
          "",
          "[Added Lines]",
          "876:             for (var pkg : includeSisuBeanPackages) {",
          "877:                 builder.includePackage(pkg);",
          "878:             }",
          "879:             for (var pkg : excludeSisuBeanPackages) {",
          "880:                 builder.excludePackage(pkg);",
          "881:             }",
          "882:             builder.addBean(ModelBuilder.class)",
          "883:                     .setSupplier(scope -> new MavenModelBuilder(BootstrapMavenContext.this))",
          "884:                     .setPriority(100).build();",
          "",
          "---------------"
        ],
        "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java||independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java": [
          "File: independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java -> independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/maven/BootstrapMavenContextConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import java.nio.file.Files;",
          "5: import java.nio.file.Path;",
          "6: import java.nio.file.Paths;",
          "7: import java.util.List;",
          "8: import java.util.function.Function;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     protected Boolean effectiveModelBuilder;",
          "37:     protected Boolean wsModuleParentHierarchy;",
          "38:     protected Function<Path, Model> modelProvider;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     protected List<String> excludeSisuBeanPackages;",
          "41:     protected List<String> includeSisuBeanPackages;",
          "43:     public T excludeSisuBeanPackage(String packageName) {",
          "44:         if (excludeSisuBeanPackages == null) {",
          "45:             excludeSisuBeanPackages = new ArrayList<>();",
          "46:         }",
          "47:         excludeSisuBeanPackages.add(packageName);",
          "48:         return (T) this;",
          "49:     }",
          "51:     protected List<String> getExcludeSisuBeanPackages() {",
          "52:         if (excludeSisuBeanPackages == null) {",
          "53:             return List.of(\"org.apache.maven.shared.release\",",
          "54:                     \"org.apache.maven.toolchain\",",
          "55:                     \"org.apache.maven.lifecycle\",",
          "56:                     \"org.apache.maven.execution\",",
          "57:                     \"org.apache.maven.plugin\");",
          "58:         }",
          "59:         return excludeSisuBeanPackages;",
          "60:     }",
          "62:     public T includeSisuBeanPackage(String packageName) {",
          "63:         if (includeSisuBeanPackages == null) {",
          "64:             includeSisuBeanPackages = new ArrayList<>();",
          "65:         }",
          "66:         includeSisuBeanPackages.add(packageName);",
          "67:         return (T) this;",
          "68:     }",
          "70:     protected List<String> getIncludeSisuBeanPackages() {",
          "71:         if (includeSisuBeanPackages == null) {",
          "72:             return List.of(\"io.smallrye.beanbag\",",
          "73:                     \"org.eclipse.aether\",",
          "74:                     \"org.sonatype.plexus.components\",",
          "75:                     \"org.apache.maven\");",
          "76:         }",
          "77:         return includeSisuBeanPackages;",
          "78:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20a4811de2d43e3b3a62ce1746a6e2dbc1e18082",
      "candidate_info": {
        "commit_hash": "20a4811de2d43e3b3a62ce1746a6e2dbc1e18082",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/20a4811de2d43e3b3a62ce1746a6e2dbc1e18082",
        "files": [
          "extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java",
          "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java"
        ],
        "message": "Don't warn about @NotBody use in @GET methods in REST Client\n\nFixes: #38798\n(cherry picked from commit c18c33f22a17ceec8aaf8b29e27900ed6ea7d9de)",
        "before_after_code_files": [
          "extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java||extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java",
          "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java||independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java||extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java": [
          "File: extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java -> extensions/resteasy-reactive/jaxrs-client-reactive/deployment/src/main/java/io/quarkus/jaxrs/client/reactive/deployment/QuarkusClientEndpointIndexer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:                 + \"' but no JSON extension has been added. Consider adding 'quarkus-rest-client-reactive-jackson' (recommended) or 'quarkus-rest-client-reactive-jsonb'.\");",
          "73:     }",
          "75:     public static final class Builder extends AbstractBuilder<Builder> {",
          "77:         private final Capabilities capabilities;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:     @Override",
          "76:     protected void warnAboutMissUsedBodyParameter(DotName httpMethod, MethodInfo methodInfo) {",
          "78:     }",
          "",
          "---------------"
        ],
        "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java||independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java": [
          "File: independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java -> independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:                                         + currentMethodInfo.parameterName(i));",
          "612:                     bodyParamType = paramType;",
          "613:                     if (GET.equals(httpMethod) || HEAD.equals(httpMethod) || OPTIONS.equals(httpMethod)) {",
          "616:                     }",
          "617:                 }",
          "618:                 String elementType = parameterResult.getElementType();",
          "",
          "[Removed Lines]",
          "614:                         log.warn(\"Using a body parameter with \" + httpMethod + \" is strongly discouraged. Offending method is '\"",
          "615:                                 + currentMethodInfo.declaringClass().name() + \"#\" + currentMethodInfo + \"'\");",
          "",
          "[Added Lines]",
          "614:                         warnAboutMissUsedBodyParameter(httpMethod, currentMethodInfo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "778:         }",
          "779:     }",
          "781:     protected boolean skipParameter(Map<DotName, AnnotationInstance> anns) {",
          "782:         return skipMethodParameter != null && skipMethodParameter.test(anns);",
          "783:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "780:     protected void warnAboutMissUsedBodyParameter(DotName httpMethod, MethodInfo methodInfo) {",
          "781:         log.warn(\"Using a body parameter with \" + httpMethod + \" is strongly discouraged. Offending method is '\"",
          "782:                 + methodInfo.declaringClass().name() + \"#\" + methodInfo + \"'\");",
          "783:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}