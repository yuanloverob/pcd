{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e219d857bf11497b1a425bc21d87dae25faaf7b0",
      "candidate_info": {
        "commit_hash": "e219d857bf11497b1a425bc21d87dae25faaf7b0",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/e219d857bf11497b1a425bc21d87dae25faaf7b0",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/ivs/2020-07-14/paginators-1.json",
          "models/apis/lakeformation/2017-03-31/api-2.json",
          "models/apis/lakeformation/2017-03-31/docs-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/storagegateway/2013-06-30/api-2.json",
          "models/apis/storagegateway/2013-06-30/docs-2.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go",
          "service/organizations/api.go",
          "service/servicecatalog/api.go",
          "service/storagegateway/api.go",
          "service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.34.8 (2020-08-19) (#3493)\n\nRelease v1.34.8 (2020-08-19)\n===\n\n### Service Client Updates\n* `service/ivs`: Updates service API, documentation, and paginators\n* `service/lakeformation`: Updates service API and documentation\n* `service/organizations`: Updates service documentation\n  * Minor documentation updates for AWS Organizations\n* `service/servicecatalog`: Updates service API and documentation\n  * Enhance SearchProvisionedProducts API to allow queries using productName and provisioningArtifactName. Added lastProvisioningRecordId and lastSuccessfulRecordId to Read ProvisionedProduct APIs\n* `service/storagegateway`: Updates service API and documentation\n  * Added WORM, tape retention lock, and custom pool features for virtual tapes.\n* `service/transcribe-streaming`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go||service/lakeformation/api.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/storagegateway/api.go||service/storagegateway/api.go",
          "service/storagegateway/doc.go||service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5316:     Protocols: []string{\"https\"},",
          "5317:    },",
          "5318:    Endpoints: endpoints{",
          "5319:     \"ap-east-1\":      endpoint{},",
          "5320:     \"ap-northeast-1\": endpoint{},",
          "5321:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5319:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5329:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.7\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.8\"",
          "",
          "---------------"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:  return out, req.Send()",
          "425: }",
          "427: const opDeleteStreamKey = \"DeleteStreamKey\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427: const opDeletePlaybackKeyPair = \"DeletePlaybackKeyPair\"",
          "453: func (c *IVS) DeletePlaybackKeyPairRequest(input *DeletePlaybackKeyPairInput) (req *request.Request, output *DeletePlaybackKeyPairOutput) {",
          "454:  op := &request.Operation{",
          "455:   Name:       opDeletePlaybackKeyPair,",
          "456:   HTTPMethod: \"POST\",",
          "457:   HTTPPath:   \"/DeletePlaybackKeyPair\",",
          "458:  }",
          "460:  if input == nil {",
          "461:   input = &DeletePlaybackKeyPairInput{}",
          "462:  }",
          "464:  output = &DeletePlaybackKeyPairOutput{}",
          "465:  req = c.newRequest(op, input, output)",
          "466:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "467:  return",
          "468: }",
          "492: func (c *IVS) DeletePlaybackKeyPair(input *DeletePlaybackKeyPairInput) (*DeletePlaybackKeyPairOutput, error) {",
          "493:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "494:  return out, req.Send()",
          "495: }",
          "506: func (c *IVS) DeletePlaybackKeyPairWithContext(ctx aws.Context, input *DeletePlaybackKeyPairInput, opts ...request.Option) (*DeletePlaybackKeyPairOutput, error) {",
          "507:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "508:  req.SetContext(ctx)",
          "509:  req.ApplyOptions(opts...)",
          "510:  return out, req.Send()",
          "511: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "592:  return out, req.Send()",
          "593: }",
          "595: const opGetStream = \"GetStream\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "681: const opGetPlaybackKeyPair = \"GetPlaybackKeyPair\"",
          "707: func (c *IVS) GetPlaybackKeyPairRequest(input *GetPlaybackKeyPairInput) (req *request.Request, output *GetPlaybackKeyPairOutput) {",
          "708:  op := &request.Operation{",
          "709:   Name:       opGetPlaybackKeyPair,",
          "710:   HTTPMethod: \"POST\",",
          "711:   HTTPPath:   \"/GetPlaybackKeyPair\",",
          "712:  }",
          "714:  if input == nil {",
          "715:   input = &GetPlaybackKeyPairInput{}",
          "716:  }",
          "718:  output = &GetPlaybackKeyPairOutput{}",
          "719:  req = c.newRequest(op, input, output)",
          "720:  return",
          "721: }",
          "744: func (c *IVS) GetPlaybackKeyPair(input *GetPlaybackKeyPairInput) (*GetPlaybackKeyPairOutput, error) {",
          "745:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "746:  return out, req.Send()",
          "747: }",
          "758: func (c *IVS) GetPlaybackKeyPairWithContext(ctx aws.Context, input *GetPlaybackKeyPairInput, opts ...request.Option) (*GetPlaybackKeyPairOutput, error) {",
          "759:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "760:  req.SetContext(ctx)",
          "761:  req.ApplyOptions(opts...)",
          "762:  return out, req.Send()",
          "763: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "758:  return out, req.Send()",
          "759: }",
          "761: const opListChannels = \"ListChannels\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "931: const opImportPlaybackKeyPair = \"ImportPlaybackKeyPair\"",
          "957: func (c *IVS) ImportPlaybackKeyPairRequest(input *ImportPlaybackKeyPairInput) (req *request.Request, output *ImportPlaybackKeyPairOutput) {",
          "958:  op := &request.Operation{",
          "959:   Name:       opImportPlaybackKeyPair,",
          "960:   HTTPMethod: \"POST\",",
          "961:   HTTPPath:   \"/ImportPlaybackKeyPair\",",
          "962:  }",
          "964:  if input == nil {",
          "965:   input = &ImportPlaybackKeyPairInput{}",
          "966:  }",
          "968:  output = &ImportPlaybackKeyPairOutput{}",
          "969:  req = c.newRequest(op, input, output)",
          "970:  return",
          "971: }",
          "998: func (c *IVS) ImportPlaybackKeyPair(input *ImportPlaybackKeyPairInput) (*ImportPlaybackKeyPairOutput, error) {",
          "999:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1000:  return out, req.Send()",
          "1001: }",
          "1012: func (c *IVS) ImportPlaybackKeyPairWithContext(ctx aws.Context, input *ImportPlaybackKeyPairInput, opts ...request.Option) (*ImportPlaybackKeyPairOutput, error) {",
          "1013:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1014:  req.SetContext(ctx)",
          "1015:  req.ApplyOptions(opts...)",
          "1016:  return out, req.Send()",
          "1017: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "898:  return p.Err()",
          "899: }",
          "901: const opListStreamKeys = \"ListStreamKeys\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1159: const opListPlaybackKeyPairs = \"ListPlaybackKeyPairs\"",
          "1185: func (c *IVS) ListPlaybackKeyPairsRequest(input *ListPlaybackKeyPairsInput) (req *request.Request, output *ListPlaybackKeyPairsOutput) {",
          "1186:  op := &request.Operation{",
          "1187:   Name:       opListPlaybackKeyPairs,",
          "1188:   HTTPMethod: \"POST\",",
          "1189:   HTTPPath:   \"/ListPlaybackKeyPairs\",",
          "1190:   Paginator: &request.Paginator{",
          "1191:    InputTokens:     []string{\"nextToken\"},",
          "1192:    OutputTokens:    []string{\"nextToken\"},",
          "1193:    LimitToken:      \"maxResults\",",
          "1194:    TruncationToken: \"\",",
          "1195:   },",
          "1196:  }",
          "1198:  if input == nil {",
          "1199:   input = &ListPlaybackKeyPairsInput{}",
          "1200:  }",
          "1202:  output = &ListPlaybackKeyPairsOutput{}",
          "1203:  req = c.newRequest(op, input, output)",
          "1204:  return",
          "1205: }",
          "1224: func (c *IVS) ListPlaybackKeyPairs(input *ListPlaybackKeyPairsInput) (*ListPlaybackKeyPairsOutput, error) {",
          "1225:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1226:  return out, req.Send()",
          "1227: }",
          "1238: func (c *IVS) ListPlaybackKeyPairsWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, opts ...request.Option) (*ListPlaybackKeyPairsOutput, error) {",
          "1239:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1240:  req.SetContext(ctx)",
          "1241:  req.ApplyOptions(opts...)",
          "1242:  return out, req.Send()",
          "1243: }",
          "1262: func (c *IVS) ListPlaybackKeyPairsPages(input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool) error {",
          "1263:  return c.ListPlaybackKeyPairsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1264: }",
          "1273: func (c *IVS) ListPlaybackKeyPairsPagesWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool, opts ...request.Option) error {",
          "1274:  p := request.Pagination{",
          "1275:   NewRequest: func() (*request.Request, error) {",
          "1276:    var inCpy *ListPlaybackKeyPairsInput",
          "1277:    if input != nil {",
          "1278:     tmp := *input",
          "1279:     inCpy = &tmp",
          "1280:    }",
          "1281:    req, _ := c.ListPlaybackKeyPairsRequest(inCpy)",
          "1282:    req.SetContext(ctx)",
          "1283:    req.ApplyOptions(opts...)",
          "1284:    return req, nil",
          "1285:   },",
          "1286:  }",
          "1288:  for p.Next() {",
          "1289:   if !fn(p.Page().(*ListPlaybackKeyPairsOutput), !p.HasNextPage()) {",
          "1290:    break",
          "1291:   }",
          "1292:  }",
          "1294:  return p.Err()",
          "1295: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2001:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2005:  IngestEndpoint *string `locationName:\"ingestEndpoint\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2400:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2049:  return s",
          "2050: }",
          "2053: func (s *Channel) SetIngestEndpoint(v string) *Channel {",
          "2054:  s.IngestEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2452: func (s *Channel) SetAuthorized(v bool) *Channel {",
          "2453:  s.Authorized = &v",
          "2454:  return s",
          "2455: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2151:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2154:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2559:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2176:  return s",
          "2177: }",
          "2180: func (s *ChannelSummary) SetLatencyMode(v string) *ChannelSummary {",
          "2181:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2588: func (s *ChannelSummary) SetAuthorized(v bool) *ChannelSummary {",
          "2589:  s.Authorized = &v",
          "2590:  return s",
          "2591: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2255: type CreateChannelInput struct {",
          "2256:  _ struct{} `type:\"structure\"`",
          "2259:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2673:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2291:  return s.String()",
          "2292: }",
          "2295: func (s *CreateChannelInput) SetLatencyMode(v string) *CreateChannelInput {",
          "2296:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: func (s *CreateChannelInput) SetAuthorized(v bool) *CreateChannelInput {",
          "2713:  s.Authorized = &v",
          "2714:  return s",
          "2715: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2420:  return s",
          "2421: }",
          "2424:  _ struct{} `type:\"structure\"`",
          "2429:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2430: }",
          "2434:  return awsutil.Prettify(s)",
          "2435: }",
          "2439:  return s.String()",
          "2440: }",
          "2445:  if s.Arn == nil {",
          "2446:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2447:  }",
          "",
          "[Removed Lines]",
          "2423: type DeleteChannelInput struct {",
          "2433: func (s DeleteChannelInput) String() string {",
          "2438: func (s DeleteChannelInput) GoString() string {",
          "2443: func (s *DeleteChannelInput) Validate() error {",
          "2444:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "",
          "[Added Lines]",
          "2846: type DeleteChannelInput struct {",
          "2847:  _ struct{} `type:\"structure\"`",
          "2852:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2853: }",
          "2856: func (s DeleteChannelInput) String() string {",
          "2857:  return awsutil.Prettify(s)",
          "2858: }",
          "2861: func (s DeleteChannelInput) GoString() string {",
          "2862:  return s.String()",
          "2863: }",
          "2866: func (s *DeleteChannelInput) Validate() error {",
          "2867:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "2868:  if s.Arn == nil {",
          "2869:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2870:  }",
          "2871:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2872:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2873:  }",
          "2875:  if invalidParams.Len() > 0 {",
          "2876:   return invalidParams",
          "2877:  }",
          "2878:  return nil",
          "2879: }",
          "2882: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2883:  s.Arn = &v",
          "2884:  return s",
          "2885: }",
          "2887: type DeleteChannelOutput struct {",
          "2888:  _ struct{} `type:\"structure\"`",
          "2889: }",
          "2892: func (s DeleteChannelOutput) String() string {",
          "2893:  return awsutil.Prettify(s)",
          "2894: }",
          "2897: func (s DeleteChannelOutput) GoString() string {",
          "2898:  return s.String()",
          "2899: }",
          "2901: type DeletePlaybackKeyPairInput struct {",
          "2911: func (s DeletePlaybackKeyPairInput) String() string {",
          "2916: func (s DeletePlaybackKeyPairInput) GoString() string {",
          "2921: func (s *DeletePlaybackKeyPairInput) Validate() error {",
          "2922:  invalidParams := request.ErrInvalidParams{Context: \"DeletePlaybackKeyPairInput\"}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2456: }",
          "2460:  s.Arn = &v",
          "2461:  return s",
          "2462: }",
          "2465:  _ struct{} `type:\"structure\"`",
          "2466: }",
          "2470:  return awsutil.Prettify(s)",
          "2471: }",
          "2475:  return s.String()",
          "2476: }",
          "",
          "[Removed Lines]",
          "2459: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2464: type DeleteChannelOutput struct {",
          "2469: func (s DeleteChannelOutput) String() string {",
          "2474: func (s DeleteChannelOutput) GoString() string {",
          "",
          "[Added Lines]",
          "2937: func (s *DeletePlaybackKeyPairInput) SetArn(v string) *DeletePlaybackKeyPairInput {",
          "2942: type DeletePlaybackKeyPairOutput struct {",
          "2947: func (s DeletePlaybackKeyPairOutput) String() string {",
          "2952: func (s DeletePlaybackKeyPairOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2594:  return s",
          "2595: }",
          "2597: type GetStreamInput struct {",
          "2598:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3075: type GetPlaybackKeyPairInput struct {",
          "3076:  _ struct{} `type:\"structure\"`",
          "3081:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3082: }",
          "3085: func (s GetPlaybackKeyPairInput) String() string {",
          "3086:  return awsutil.Prettify(s)",
          "3087: }",
          "3090: func (s GetPlaybackKeyPairInput) GoString() string {",
          "3091:  return s.String()",
          "3092: }",
          "3095: func (s *GetPlaybackKeyPairInput) Validate() error {",
          "3096:  invalidParams := request.ErrInvalidParams{Context: \"GetPlaybackKeyPairInput\"}",
          "3097:  if s.Arn == nil {",
          "3098:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "3099:  }",
          "3100:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "3101:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "3102:  }",
          "3104:  if invalidParams.Len() > 0 {",
          "3105:   return invalidParams",
          "3106:  }",
          "3107:  return nil",
          "3108: }",
          "3111: func (s *GetPlaybackKeyPairInput) SetArn(v string) *GetPlaybackKeyPairInput {",
          "3112:  s.Arn = &v",
          "3113:  return s",
          "3114: }",
          "3116: type GetPlaybackKeyPairOutput struct {",
          "3117:  _ struct{} `type:\"structure\"`",
          "3120:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3121: }",
          "3124: func (s GetPlaybackKeyPairOutput) String() string {",
          "3125:  return awsutil.Prettify(s)",
          "3126: }",
          "3129: func (s GetPlaybackKeyPairOutput) GoString() string {",
          "3130:  return s.String()",
          "3131: }",
          "3134: func (s *GetPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *GetPlaybackKeyPairOutput {",
          "3135:  s.KeyPair = v",
          "3136:  return s",
          "3137: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2722:  return s",
          "2723: }",
          "2725: type InternalServerException struct {",
          "2726:  _            struct{}                  `type:\"structure\"`",
          "2727:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3267: type ImportPlaybackKeyPairInput struct {",
          "3268:  _ struct{} `type:\"structure\"`",
          "3272:  Name *string `locationName:\"name\" type:\"string\"`",
          "3277:  PublicKeyMaterial *string `locationName:\"publicKeyMaterial\" type:\"string\" required:\"true\"`",
          "3280:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3281: }",
          "3284: func (s ImportPlaybackKeyPairInput) String() string {",
          "3285:  return awsutil.Prettify(s)",
          "3286: }",
          "3289: func (s ImportPlaybackKeyPairInput) GoString() string {",
          "3290:  return s.String()",
          "3291: }",
          "3294: func (s *ImportPlaybackKeyPairInput) Validate() error {",
          "3295:  invalidParams := request.ErrInvalidParams{Context: \"ImportPlaybackKeyPairInput\"}",
          "3296:  if s.PublicKeyMaterial == nil {",
          "3297:   invalidParams.Add(request.NewErrParamRequired(\"PublicKeyMaterial\"))",
          "3298:  }",
          "3300:  if invalidParams.Len() > 0 {",
          "3301:   return invalidParams",
          "3302:  }",
          "3303:  return nil",
          "3304: }",
          "3307: func (s *ImportPlaybackKeyPairInput) SetName(v string) *ImportPlaybackKeyPairInput {",
          "3308:  s.Name = &v",
          "3309:  return s",
          "3310: }",
          "3313: func (s *ImportPlaybackKeyPairInput) SetPublicKeyMaterial(v string) *ImportPlaybackKeyPairInput {",
          "3314:  s.PublicKeyMaterial = &v",
          "3315:  return s",
          "3316: }",
          "3319: func (s *ImportPlaybackKeyPairInput) SetTags(v map[string]*string) *ImportPlaybackKeyPairInput {",
          "3320:  s.Tags = v",
          "3321:  return s",
          "3322: }",
          "3324: type ImportPlaybackKeyPairOutput struct {",
          "3325:  _ struct{} `type:\"structure\"`",
          "3328:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3329: }",
          "3332: func (s ImportPlaybackKeyPairOutput) String() string {",
          "3333:  return awsutil.Prettify(s)",
          "3334: }",
          "3337: func (s ImportPlaybackKeyPairOutput) GoString() string {",
          "3338:  return s.String()",
          "3339: }",
          "3342: func (s *ImportPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *ImportPlaybackKeyPairOutput {",
          "3343:  s.KeyPair = v",
          "3344:  return s",
          "3345: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2870:  return s",
          "2871: }",
          "2873: type ListStreamKeysInput struct {",
          "2874:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3495: type ListPlaybackKeyPairsInput struct {",
          "3496:  _ struct{} `type:\"structure\"`",
          "3500:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "3503:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3504: }",
          "3507: func (s ListPlaybackKeyPairsInput) String() string {",
          "3508:  return awsutil.Prettify(s)",
          "3509: }",
          "3512: func (s ListPlaybackKeyPairsInput) GoString() string {",
          "3513:  return s.String()",
          "3514: }",
          "3517: func (s *ListPlaybackKeyPairsInput) Validate() error {",
          "3518:  invalidParams := request.ErrInvalidParams{Context: \"ListPlaybackKeyPairsInput\"}",
          "3519:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "3520:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "3521:  }",
          "3523:  if invalidParams.Len() > 0 {",
          "3524:   return invalidParams",
          "3525:  }",
          "3526:  return nil",
          "3527: }",
          "3530: func (s *ListPlaybackKeyPairsInput) SetMaxResults(v int64) *ListPlaybackKeyPairsInput {",
          "3531:  s.MaxResults = &v",
          "3532:  return s",
          "3533: }",
          "3536: func (s *ListPlaybackKeyPairsInput) SetNextToken(v string) *ListPlaybackKeyPairsInput {",
          "3537:  s.NextToken = &v",
          "3538:  return s",
          "3539: }",
          "3541: type ListPlaybackKeyPairsOutput struct {",
          "3542:  _ struct{} `type:\"structure\"`",
          "3547:  KeyPairs []*PlaybackKeyPairSummary `locationName:\"keyPairs\" type:\"list\" required:\"true\"`",
          "3551:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3552: }",
          "3555: func (s ListPlaybackKeyPairsOutput) String() string {",
          "3556:  return awsutil.Prettify(s)",
          "3557: }",
          "3560: func (s ListPlaybackKeyPairsOutput) GoString() string {",
          "3561:  return s.String()",
          "3562: }",
          "3565: func (s *ListPlaybackKeyPairsOutput) SetKeyPairs(v []*PlaybackKeyPairSummary) *ListPlaybackKeyPairsOutput {",
          "3566:  s.KeyPairs = v",
          "3567:  return s",
          "3568: }",
          "3571: func (s *ListPlaybackKeyPairsOutput) SetNextToken(v string) *ListPlaybackKeyPairsOutput {",
          "3572:  s.NextToken = &v",
          "3573:  return s",
          "3574: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3203:  return s.RespMetadata.RequestID",
          "3204: }",
          "3206: type PutMetadataInput struct {",
          "3207:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3910: type PlaybackKeyPair struct {",
          "3911:  _ struct{} `type:\"structure\"`",
          "3914:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3917:  Fingerprint *string `locationName:\"fingerprint\" type:\"string\"`",
          "3920:  Name *string `locationName:\"name\" type:\"string\"`",
          "3923:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3924: }",
          "3927: func (s PlaybackKeyPair) String() string {",
          "3928:  return awsutil.Prettify(s)",
          "3929: }",
          "3932: func (s PlaybackKeyPair) GoString() string {",
          "3933:  return s.String()",
          "3934: }",
          "3937: func (s *PlaybackKeyPair) SetArn(v string) *PlaybackKeyPair {",
          "3938:  s.Arn = &v",
          "3939:  return s",
          "3940: }",
          "3943: func (s *PlaybackKeyPair) SetFingerprint(v string) *PlaybackKeyPair {",
          "3944:  s.Fingerprint = &v",
          "3945:  return s",
          "3946: }",
          "3949: func (s *PlaybackKeyPair) SetName(v string) *PlaybackKeyPair {",
          "3950:  s.Name = &v",
          "3951:  return s",
          "3952: }",
          "3955: func (s *PlaybackKeyPair) SetTags(v map[string]*string) *PlaybackKeyPair {",
          "3956:  s.Tags = v",
          "3957:  return s",
          "3958: }",
          "3961: type PlaybackKeyPairSummary struct {",
          "3962:  _ struct{} `type:\"structure\"`",
          "3965:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3968:  Name *string `locationName:\"name\" type:\"string\"`",
          "3971:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3972: }",
          "3975: func (s PlaybackKeyPairSummary) String() string {",
          "3976:  return awsutil.Prettify(s)",
          "3977: }",
          "3980: func (s PlaybackKeyPairSummary) GoString() string {",
          "3981:  return s.String()",
          "3982: }",
          "3985: func (s *PlaybackKeyPairSummary) SetArn(v string) *PlaybackKeyPairSummary {",
          "3986:  s.Arn = &v",
          "3987:  return s",
          "3988: }",
          "3991: func (s *PlaybackKeyPairSummary) SetName(v string) *PlaybackKeyPairSummary {",
          "3992:  s.Name = &v",
          "3993:  return s",
          "3994: }",
          "3997: func (s *PlaybackKeyPairSummary) SetTags(v map[string]*string) *PlaybackKeyPairSummary {",
          "3998:  s.Tags = v",
          "3999:  return s",
          "4000: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3930:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3933:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4729:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3984:  return s",
          "3985: }",
          "3988: func (s *UpdateChannelInput) SetLatencyMode(v string) *UpdateChannelInput {",
          "3989:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4787: func (s *UpdateChannelInput) SetAuthorized(v bool) *UpdateChannelInput {",
          "4788:  s.Authorized = &v",
          "4789:  return s",
          "4790: }",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go"
        ],
        "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go": [
          "File: service/ivs/ivsiface/interface.go -> service/ivs/ivsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  DeleteChannelWithContext(aws.Context, *ivs.DeleteChannelInput, ...request.Option) (*ivs.DeleteChannelOutput, error)",
          "81:  DeleteChannelRequest(*ivs.DeleteChannelInput) (*request.Request, *ivs.DeleteChannelOutput)",
          "83:  DeleteStreamKey(*ivs.DeleteStreamKeyInput) (*ivs.DeleteStreamKeyOutput, error)",
          "84:  DeleteStreamKeyWithContext(aws.Context, *ivs.DeleteStreamKeyInput, ...request.Option) (*ivs.DeleteStreamKeyOutput, error)",
          "85:  DeleteStreamKeyRequest(*ivs.DeleteStreamKeyInput) (*request.Request, *ivs.DeleteStreamKeyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeletePlaybackKeyPair(*ivs.DeletePlaybackKeyPairInput) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "84:  DeletePlaybackKeyPairWithContext(aws.Context, *ivs.DeletePlaybackKeyPairInput, ...request.Option) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "85:  DeletePlaybackKeyPairRequest(*ivs.DeletePlaybackKeyPairInput) (*request.Request, *ivs.DeletePlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  GetChannelWithContext(aws.Context, *ivs.GetChannelInput, ...request.Option) (*ivs.GetChannelOutput, error)",
          "89:  GetChannelRequest(*ivs.GetChannelInput) (*request.Request, *ivs.GetChannelOutput)",
          "91:  GetStream(*ivs.GetStreamInput) (*ivs.GetStreamOutput, error)",
          "92:  GetStreamWithContext(aws.Context, *ivs.GetStreamInput, ...request.Option) (*ivs.GetStreamOutput, error)",
          "93:  GetStreamRequest(*ivs.GetStreamInput) (*request.Request, *ivs.GetStreamOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:  GetPlaybackKeyPair(*ivs.GetPlaybackKeyPairInput) (*ivs.GetPlaybackKeyPairOutput, error)",
          "96:  GetPlaybackKeyPairWithContext(aws.Context, *ivs.GetPlaybackKeyPairInput, ...request.Option) (*ivs.GetPlaybackKeyPairOutput, error)",
          "97:  GetPlaybackKeyPairRequest(*ivs.GetPlaybackKeyPairInput) (*request.Request, *ivs.GetPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:  GetStreamKeyWithContext(aws.Context, *ivs.GetStreamKeyInput, ...request.Option) (*ivs.GetStreamKeyOutput, error)",
          "97:  GetStreamKeyRequest(*ivs.GetStreamKeyInput) (*request.Request, *ivs.GetStreamKeyOutput)",
          "99:  ListChannels(*ivs.ListChannelsInput) (*ivs.ListChannelsOutput, error)",
          "100:  ListChannelsWithContext(aws.Context, *ivs.ListChannelsInput, ...request.Option) (*ivs.ListChannelsOutput, error)",
          "101:  ListChannelsRequest(*ivs.ListChannelsInput) (*request.Request, *ivs.ListChannelsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:  ImportPlaybackKeyPair(*ivs.ImportPlaybackKeyPairInput) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "108:  ImportPlaybackKeyPairWithContext(aws.Context, *ivs.ImportPlaybackKeyPairInput, ...request.Option) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "109:  ImportPlaybackKeyPairRequest(*ivs.ImportPlaybackKeyPairInput) (*request.Request, *ivs.ImportPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103:  ListChannelsPages(*ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool) error",
          "104:  ListChannelsPagesWithContext(aws.Context, *ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool, ...request.Option) error",
          "106:  ListStreamKeys(*ivs.ListStreamKeysInput) (*ivs.ListStreamKeysOutput, error)",
          "107:  ListStreamKeysWithContext(aws.Context, *ivs.ListStreamKeysInput, ...request.Option) (*ivs.ListStreamKeysOutput, error)",
          "108:  ListStreamKeysRequest(*ivs.ListStreamKeysInput) (*request.Request, *ivs.ListStreamKeysOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  ListPlaybackKeyPairs(*ivs.ListPlaybackKeyPairsInput) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "119:  ListPlaybackKeyPairsWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, ...request.Option) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "120:  ListPlaybackKeyPairsRequest(*ivs.ListPlaybackKeyPairsInput) (*request.Request, *ivs.ListPlaybackKeyPairsOutput)",
          "122:  ListPlaybackKeyPairsPages(*ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool) error",
          "123:  ListPlaybackKeyPairsPagesWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/lakeformation/api.go||service/lakeformation/api.go": [
          "File: service/lakeformation/api.go -> service/lakeformation/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2157:  return s",
          "2158: }",
          "2161: type EntityNotFoundException struct {",
          "2162:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2165: type DetailsMap struct {",
          "2166:  _ struct{} `type:\"structure\"`",
          "2170:  ResourceShare []*string `type:\"list\"`",
          "2171: }",
          "2174: func (s DetailsMap) String() string {",
          "2175:  return awsutil.Prettify(s)",
          "2176: }",
          "2179: func (s DetailsMap) GoString() string {",
          "2180:  return s.String()",
          "2181: }",
          "2184: func (s *DetailsMap) SetResourceShare(v []*string) *DetailsMap {",
          "2185:  s.ResourceShare = v",
          "2186:  return s",
          "2187: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3035: type PrincipalResourcePermissions struct {",
          "3036:  _ struct{} `type:\"structure\"`",
          "3039:  Permissions []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3069:  AdditionalDetails *DetailsMap `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3059:  return s.String()",
          "3060: }",
          "3063: func (s *PrincipalResourcePermissions) SetPermissions(v []*string) *PrincipalResourcePermissions {",
          "3064:  s.Permissions = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3096: func (s *PrincipalResourcePermissions) SetAdditionalDetails(v *DetailsMap) *PrincipalResourcePermissions {",
          "3097:  s.AdditionalDetails = v",
          "3098:  return s",
          "3099: }",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16547:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16550:  LastRecordId *string `min:\"1\" type:\"string\"`",
          "16553:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16559:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16574:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16560:  ProductId *string `min:\"1\" type:\"string\"`",
          "16563:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16587:  ProductName *string `type:\"string\"`",
          "16593:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16636:  return s",
          "16637: }",
          "16640: func (s *ProvisionedProductAttribute) SetLastRecordId(v string) *ProvisionedProductAttribute {",
          "16641:  s.LastRecordId = &v",
          "16642:  return s",
          "16643: }",
          "16646: func (s *ProvisionedProductAttribute) SetName(v string) *ProvisionedProductAttribute {",
          "16647:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16670: func (s *ProvisionedProductAttribute) SetLastProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16671:  s.LastProvisioningRecordId = &v",
          "16672:  return s",
          "16673: }",
          "16682: func (s *ProvisionedProductAttribute) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16683:  s.LastSuccessfulProvisioningRecordId = &v",
          "16684:  return s",
          "16685: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16660:  return s",
          "16661: }",
          "16664: func (s *ProvisionedProductAttribute) SetProvisioningArtifactId(v string) *ProvisionedProductAttribute {",
          "16665:  s.ProvisioningArtifactId = &v",
          "16666:  return s",
          "16667: }",
          "16670: func (s *ProvisionedProductAttribute) SetStatus(v string) *ProvisionedProductAttribute {",
          "16671:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16706: func (s *ProvisionedProductAttribute) SetProductName(v string) *ProvisionedProductAttribute {",
          "16707:  s.ProductName = &v",
          "16708:  return s",
          "16709: }",
          "16718: func (s *ProvisionedProductAttribute) SetProvisioningArtifactName(v string) *ProvisionedProductAttribute {",
          "16719:  s.ProvisioningArtifactName = &v",
          "16720:  return s",
          "16721: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16721:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16724:  LastRecordId *string `type:\"string\"`",
          "16727:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16787:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16802:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16796:  return s",
          "16797: }",
          "16800: func (s *ProvisionedProductDetail) SetLastRecordId(v string) *ProvisionedProductDetail {",
          "16801:  s.LastRecordId = &v",
          "16802:  return s",
          "16803: }",
          "16806: func (s *ProvisionedProductDetail) SetName(v string) *ProvisionedProductDetail {",
          "16807:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16878: func (s *ProvisionedProductDetail) SetLastProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16879:  s.LastProvisioningRecordId = &v",
          "16880:  return s",
          "16881: }",
          "16890: func (s *ProvisionedProductDetail) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16891:  s.LastSuccessfulProvisioningRecordId = &v",
          "16892:  return s",
          "16893: }",
          "",
          "---------------"
        ],
        "service/storagegateway/api.go||service/storagegateway/api.go": [
          "File: service/storagegateway/api.go -> service/storagegateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opCreateTapeWithBarcode = \"CreateTapeWithBarcode\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1436: const opCreateTapePool = \"CreateTapePool\"",
          "1462: func (c *StorageGateway) CreateTapePoolRequest(input *CreateTapePoolInput) (req *request.Request, output *CreateTapePoolOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opCreateTapePool,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &CreateTapePoolInput{}",
          "1471:  }",
          "1473:  output = &CreateTapePoolOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1500: func (c *StorageGateway) CreateTapePool(input *CreateTapePoolInput) (*CreateTapePoolOutput, error) {",
          "1501:  req, out := c.CreateTapePoolRequest(input)",
          "1502:  return out, req.Send()",
          "1503: }",
          "1514: func (c *StorageGateway) CreateTapePoolWithContext(ctx aws.Context, input *CreateTapePoolInput, opts ...request.Option) (*CreateTapePoolOutput, error) {",
          "1515:  req, out := c.CreateTapePoolRequest(input)",
          "1516:  req.SetContext(ctx)",
          "1517:  req.ApplyOptions(opts...)",
          "1518:  return out, req.Send()",
          "1519: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2322:  return out, req.Send()",
          "2323: }",
          "2325: const opDeleteVolume = \"DeleteVolume\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2410: const opDeleteTapePool = \"DeleteTapePool\"",
          "2436: func (c *StorageGateway) DeleteTapePoolRequest(input *DeleteTapePoolInput) (req *request.Request, output *DeleteTapePoolOutput) {",
          "2437:  op := &request.Operation{",
          "2438:   Name:       opDeleteTapePool,",
          "2439:   HTTPMethod: \"POST\",",
          "2440:   HTTPPath:   \"/\",",
          "2441:  }",
          "2443:  if input == nil {",
          "2444:   input = &DeleteTapePoolInput{}",
          "2445:  }",
          "2447:  output = &DeleteTapePoolOutput{}",
          "2448:  req = c.newRequest(op, input, output)",
          "2449:  return",
          "2450: }",
          "2475: func (c *StorageGateway) DeleteTapePool(input *DeleteTapePoolInput) (*DeleteTapePoolOutput, error) {",
          "2476:  req, out := c.DeleteTapePoolRequest(input)",
          "2477:  return out, req.Send()",
          "2478: }",
          "2489: func (c *StorageGateway) DeleteTapePoolWithContext(ctx aws.Context, input *DeleteTapePoolInput, opts ...request.Option) (*DeleteTapePoolOutput, error) {",
          "2490:  req, out := c.DeleteTapePoolRequest(input)",
          "2491:  req.SetContext(ctx)",
          "2492:  req.ApplyOptions(opts...)",
          "2493:  return out, req.Send()",
          "2494: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5109:  return p.Err()",
          "5110: }",
          "5112: const opListTapes = \"ListTapes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5283: const opListTapePools = \"ListTapePools\"",
          "5309: func (c *StorageGateway) ListTapePoolsRequest(input *ListTapePoolsInput) (req *request.Request, output *ListTapePoolsOutput) {",
          "5310:  op := &request.Operation{",
          "5311:   Name:       opListTapePools,",
          "5312:   HTTPMethod: \"POST\",",
          "5313:   HTTPPath:   \"/\",",
          "5314:  }",
          "5316:  if input == nil {",
          "5317:   input = &ListTapePoolsInput{}",
          "5318:  }",
          "5320:  output = &ListTapePoolsOutput{}",
          "5321:  req = c.newRequest(op, input, output)",
          "5322:  return",
          "5323: }",
          "5354: func (c *StorageGateway) ListTapePools(input *ListTapePoolsInput) (*ListTapePoolsOutput, error) {",
          "5355:  req, out := c.ListTapePoolsRequest(input)",
          "5356:  return out, req.Send()",
          "5357: }",
          "5368: func (c *StorageGateway) ListTapePoolsWithContext(ctx aws.Context, input *ListTapePoolsInput, opts ...request.Option) (*ListTapePoolsOutput, error) {",
          "5369:  req, out := c.ListTapePoolsRequest(input)",
          "5370:  req.SetContext(ctx)",
          "5371:  req.ApplyOptions(opts...)",
          "5372:  return out, req.Send()",
          "5373: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8223: type AssignTapePoolInput struct {",
          "8224:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8496:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8273:  return nil",
          "8274: }",
          "8277: func (s *AssignTapePoolInput) SetPoolId(v string) *AssignTapePoolInput {",
          "8278:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8549: func (s *AssignTapePoolInput) SetBypassGovernanceRetention(v bool) *AssignTapePoolInput {",
          "8550:  s.BypassGovernanceRetention = &v",
          "8551:  return s",
          "8552: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8529:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "8530: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8813:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8594:  return s",
          "8595: }",
          "8598: type CacheAttributes struct {",
          "8599:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8882: func (s *AutomaticTapeCreationRule) SetWorm(v bool) *AutomaticTapeCreationRule {",
          "8883:  s.Worm = &v",
          "8884:  return s",
          "8885: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10390:  return s",
          "10391: }",
          "10394: type CreateTapeWithBarcodeInput struct {",
          "10395:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10683: type CreateTapePoolInput struct {",
          "10684:  _ struct{} `type:\"structure\"`",
          "10689:  PoolName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10693:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "10700:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "10708:  StorageClass *string `type:\"string\" required:\"true\" enum:\"TapeStorageClass\"`",
          "10717:  Tags []*Tag `type:\"list\"`",
          "10718: }",
          "10721: func (s CreateTapePoolInput) String() string {",
          "10722:  return awsutil.Prettify(s)",
          "10723: }",
          "10726: func (s CreateTapePoolInput) GoString() string {",
          "10727:  return s.String()",
          "10728: }",
          "10731: func (s *CreateTapePoolInput) Validate() error {",
          "10732:  invalidParams := request.ErrInvalidParams{Context: \"CreateTapePoolInput\"}",
          "10733:  if s.PoolName == nil {",
          "10734:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "10735:  }",
          "10736:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "10737:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "10738:  }",
          "10739:  if s.StorageClass == nil {",
          "10740:   invalidParams.Add(request.NewErrParamRequired(\"StorageClass\"))",
          "10741:  }",
          "10742:  if s.Tags != nil {",
          "10743:   for i, v := range s.Tags {",
          "10744:    if v == nil {",
          "10745:     continue",
          "10746:    }",
          "10747:    if err := v.Validate(); err != nil {",
          "10748:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "10749:    }",
          "10750:   }",
          "10751:  }",
          "10753:  if invalidParams.Len() > 0 {",
          "10754:   return invalidParams",
          "10755:  }",
          "10756:  return nil",
          "10757: }",
          "10760: func (s *CreateTapePoolInput) SetPoolName(v string) *CreateTapePoolInput {",
          "10761:  s.PoolName = &v",
          "10762:  return s",
          "10763: }",
          "10766: func (s *CreateTapePoolInput) SetRetentionLockTimeInDays(v int64) *CreateTapePoolInput {",
          "10767:  s.RetentionLockTimeInDays = &v",
          "10768:  return s",
          "10769: }",
          "10772: func (s *CreateTapePoolInput) SetRetentionLockType(v string) *CreateTapePoolInput {",
          "10773:  s.RetentionLockType = &v",
          "10774:  return s",
          "10775: }",
          "10778: func (s *CreateTapePoolInput) SetStorageClass(v string) *CreateTapePoolInput {",
          "10779:  s.StorageClass = &v",
          "10780:  return s",
          "10781: }",
          "10784: func (s *CreateTapePoolInput) SetTags(v []*Tag) *CreateTapePoolInput {",
          "10785:  s.Tags = v",
          "10786:  return s",
          "10787: }",
          "10789: type CreateTapePoolOutput struct {",
          "10790:  _ struct{} `type:\"structure\"`",
          "10795:  PoolARN *string `min:\"50\" type:\"string\"`",
          "10796: }",
          "10799: func (s CreateTapePoolOutput) String() string {",
          "10800:  return awsutil.Prettify(s)",
          "10801: }",
          "10804: func (s CreateTapePoolOutput) GoString() string {",
          "10805:  return s.String()",
          "10806: }",
          "10809: func (s *CreateTapePoolOutput) SetPoolARN(v string) *CreateTapePoolOutput {",
          "10810:  s.PoolARN = &v",
          "10811:  return s",
          "10812: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10446:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10447: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10871:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10539:  return s",
          "10540: }",
          "10543: type CreateTapeWithBarcodeOutput struct {",
          "10544:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10968: func (s *CreateTapeWithBarcodeInput) SetWorm(v bool) *CreateTapeWithBarcodeInput {",
          "10969:  s.Worm = &v",
          "10970:  return s",
          "10971: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10634:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10635: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11069:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10751:  return s",
          "10752: }",
          "10755: type CreateTapesOutput struct {",
          "10756:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11190: func (s *CreateTapesInput) SetWorm(v bool) *CreateTapesInput {",
          "11191:  s.Worm = &v",
          "11192:  return s",
          "11193: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11246: type DeleteTapeArchiveInput struct {",
          "11247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11694:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11279:  return nil",
          "11280: }",
          "11283: func (s *DeleteTapeArchiveInput) SetTapeARN(v string) *DeleteTapeArchiveInput {",
          "11284:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11730: func (s *DeleteTapeArchiveInput) SetBypassGovernanceRetention(v bool) *DeleteTapeArchiveInput {",
          "11731:  s.BypassGovernanceRetention = &v",
          "11732:  return s",
          "11733: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "11314: type DeleteTapeInput struct {",
          "11315:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11774:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11359:  return nil",
          "11360: }",
          "11363: func (s *DeleteTapeInput) SetGatewayARN(v string) *DeleteTapeInput {",
          "11364:  s.GatewayARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11822: func (s *DeleteTapeInput) SetBypassGovernanceRetention(v bool) *DeleteTapeInput {",
          "11823:  s.BypassGovernanceRetention = &v",
          "11824:  return s",
          "11825: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "11395:  return s",
          "11396: }",
          "11399: type DeleteVolumeInput struct {",
          "11400:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11863: type DeleteTapePoolInput struct {",
          "11864:  _ struct{} `type:\"structure\"`",
          "11869:  PoolARN *string `min:\"50\" type:\"string\" required:\"true\"`",
          "11870: }",
          "11873: func (s DeleteTapePoolInput) String() string {",
          "11874:  return awsutil.Prettify(s)",
          "11875: }",
          "11878: func (s DeleteTapePoolInput) GoString() string {",
          "11879:  return s.String()",
          "11880: }",
          "11883: func (s *DeleteTapePoolInput) Validate() error {",
          "11884:  invalidParams := request.ErrInvalidParams{Context: \"DeleteTapePoolInput\"}",
          "11885:  if s.PoolARN == nil {",
          "11886:   invalidParams.Add(request.NewErrParamRequired(\"PoolARN\"))",
          "11887:  }",
          "11888:  if s.PoolARN != nil && len(*s.PoolARN) < 50 {",
          "11889:   invalidParams.Add(request.NewErrParamMinLen(\"PoolARN\", 50))",
          "11890:  }",
          "11892:  if invalidParams.Len() > 0 {",
          "11893:   return invalidParams",
          "11894:  }",
          "11895:  return nil",
          "11896: }",
          "11899: func (s *DeleteTapePoolInput) SetPoolARN(v string) *DeleteTapePoolInput {",
          "11900:  s.PoolARN = &v",
          "11901:  return s",
          "11902: }",
          "11904: type DeleteTapePoolOutput struct {",
          "11905:  _ struct{} `type:\"structure\"`",
          "11908:  PoolARN *string `min:\"50\" type:\"string\"`",
          "11909: }",
          "11912: func (s DeleteTapePoolOutput) String() string {",
          "11913:  return awsutil.Prettify(s)",
          "11914: }",
          "11917: func (s DeleteTapePoolOutput) GoString() string {",
          "11918:  return s.String()",
          "11919: }",
          "11922: func (s *DeleteTapePoolOutput) SetPoolARN(v string) *DeleteTapePoolOutput {",
          "11923:  s.PoolARN = &v",
          "11924:  return s",
          "11925: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14675:  return s",
          "14676: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15207: type ListTapePoolsInput struct {",
          "15208:  _ struct{} `type:\"structure\"`",
          "15212:  Limit *int64 `min:\"1\" type:\"integer\"`",
          "15216:  Marker *string `min:\"1\" type:\"string\"`",
          "15221:  PoolARNs []*string `type:\"list\"`",
          "15222: }",
          "15225: func (s ListTapePoolsInput) String() string {",
          "15226:  return awsutil.Prettify(s)",
          "15227: }",
          "15230: func (s ListTapePoolsInput) GoString() string {",
          "15231:  return s.String()",
          "15232: }",
          "15235: func (s *ListTapePoolsInput) Validate() error {",
          "15236:  invalidParams := request.ErrInvalidParams{Context: \"ListTapePoolsInput\"}",
          "15237:  if s.Limit != nil && *s.Limit < 1 {",
          "15238:   invalidParams.Add(request.NewErrParamMinValue(\"Limit\", 1))",
          "15239:  }",
          "15240:  if s.Marker != nil && len(*s.Marker) < 1 {",
          "15241:   invalidParams.Add(request.NewErrParamMinLen(\"Marker\", 1))",
          "15242:  }",
          "15244:  if invalidParams.Len() > 0 {",
          "15245:   return invalidParams",
          "15246:  }",
          "15247:  return nil",
          "15248: }",
          "15251: func (s *ListTapePoolsInput) SetLimit(v int64) *ListTapePoolsInput {",
          "15252:  s.Limit = &v",
          "15253:  return s",
          "15254: }",
          "15257: func (s *ListTapePoolsInput) SetMarker(v string) *ListTapePoolsInput {",
          "15258:  s.Marker = &v",
          "15259:  return s",
          "15260: }",
          "15263: func (s *ListTapePoolsInput) SetPoolARNs(v []*string) *ListTapePoolsInput {",
          "15264:  s.PoolARNs = v",
          "15265:  return s",
          "15266: }",
          "15268: type ListTapePoolsOutput struct {",
          "15269:  _ struct{} `type:\"structure\"`",
          "15275:  Marker *string `min:\"1\" type:\"string\"`",
          "15279:  PoolInfos []*PoolInfo `type:\"list\"`",
          "15280: }",
          "15283: func (s ListTapePoolsOutput) String() string {",
          "15284:  return awsutil.Prettify(s)",
          "15285: }",
          "15288: func (s ListTapePoolsOutput) GoString() string {",
          "15289:  return s.String()",
          "15290: }",
          "15293: func (s *ListTapePoolsOutput) SetMarker(v string) *ListTapePoolsOutput {",
          "15294:  s.Marker = &v",
          "15295:  return s",
          "15296: }",
          "15299: func (s *ListTapePoolsOutput) SetPoolInfos(v []*PoolInfo) *ListTapePoolsOutput {",
          "15300:  s.PoolInfos = v",
          "15301:  return s",
          "15302: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "15487:  return s",
          "15488: }",
          "15491: type RefreshCacheInput struct {",
          "15492:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16117: type PoolInfo struct {",
          "16118:  _ struct{} `type:\"structure\"`",
          "16123:  PoolARN *string `min:\"50\" type:\"string\"`",
          "16127:  PoolName *string `min:\"1\" type:\"string\"`",
          "16130:  PoolStatus *string `type:\"string\" enum:\"PoolStatus\"`",
          "16134:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "16141:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "16147:  StorageClass *string `type:\"string\" enum:\"TapeStorageClass\"`",
          "16148: }",
          "16151: func (s PoolInfo) String() string {",
          "16152:  return awsutil.Prettify(s)",
          "16153: }",
          "16156: func (s PoolInfo) GoString() string {",
          "16157:  return s.String()",
          "16158: }",
          "16161: func (s *PoolInfo) SetPoolARN(v string) *PoolInfo {",
          "16162:  s.PoolARN = &v",
          "16163:  return s",
          "16164: }",
          "16167: func (s *PoolInfo) SetPoolName(v string) *PoolInfo {",
          "16168:  s.PoolName = &v",
          "16169:  return s",
          "16170: }",
          "16173: func (s *PoolInfo) SetPoolStatus(v string) *PoolInfo {",
          "16174:  s.PoolStatus = &v",
          "16175:  return s",
          "16176: }",
          "16179: func (s *PoolInfo) SetRetentionLockTimeInDays(v int64) *PoolInfo {",
          "16180:  s.RetentionLockTimeInDays = &v",
          "16181:  return s",
          "16182: }",
          "16185: func (s *PoolInfo) SetRetentionLockType(v string) *PoolInfo {",
          "16186:  s.RetentionLockType = &v",
          "16187:  return s",
          "16188: }",
          "16191: func (s *PoolInfo) SetStorageClass(v string) *PoolInfo {",
          "16192:  s.StorageClass = &v",
          "16193:  return s",
          "16194: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "16887:  KMSKey *string `min:\"7\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17596:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16902:  Progress *float64 `type:\"double\"`",
          "16905:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17614:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "16926:  VTLDevice *string `min:\"50\" type:\"string\"`",
          "16927: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17641:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "16942:  return s",
          "16943: }",
          "16946: func (s *Tape) SetPoolId(v string) *Tape {",
          "16947:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17661: func (s *Tape) SetPoolEntryDate(v time.Time) *Tape {",
          "17662:  s.PoolEntryDate = &v",
          "17663:  return s",
          "17664: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "16954:  return s",
          "16955: }",
          "16958: func (s *Tape) SetTapeARN(v string) *Tape {",
          "16959:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17679: func (s *Tape) SetRetentionStartDate(v time.Time) *Tape {",
          "17680:  s.RetentionStartDate = &v",
          "17681:  return s",
          "17682: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16996:  return s",
          "16997: }",
          "17000: type TapeArchive struct {",
          "17001:  _ struct{} `type:\"structure\"`",
          "17007:  CompletionTime *time.Time `type:\"timestamp\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17727: func (s *Tape) SetWorm(v bool) *Tape {",
          "17728:  s.Worm = &v",
          "17729:  return s",
          "17730: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "17012:  KMSKey *string `min:\"7\" type:\"string\"`",
          "17018:  PoolId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17751:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "17761:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "17044:  TapeUsedInBytes *int64 `type:\"long\"`",
          "17045: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17790:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "17066:  return s",
          "17067: }",
          "17070: func (s *TapeArchive) SetPoolId(v string) *TapeArchive {",
          "17071:  s.PoolId = &v",
          "17072:  return s",
          "17073: }",
          "17076: func (s *TapeArchive) SetRetrievedTo(v string) *TapeArchive {",
          "17077:  s.RetrievedTo = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17816: func (s *TapeArchive) SetPoolEntryDate(v time.Time) *TapeArchive {",
          "17817:  s.PoolEntryDate = &v",
          "17818:  return s",
          "17819: }",
          "17828: func (s *TapeArchive) SetRetentionStartDate(v time.Time) *TapeArchive {",
          "17829:  s.RetentionStartDate = &v",
          "17830:  return s",
          "17831: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "17114:  return s",
          "17115: }",
          "17118: type TapeInfo struct {",
          "17119:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17876: func (s *TapeArchive) SetWorm(v bool) *TapeArchive {",
          "17877:  s.Worm = &v",
          "17878:  return s",
          "17879: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "17123:  GatewayARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17891:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "17132:  PoolId *string `min:\"1\" type:\"string\"`",
          "17135:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17903:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "17160:  return s",
          "17161: }",
          "17164: func (s *TapeInfo) SetPoolId(v string) *TapeInfo {",
          "17165:  s.PoolId = &v",
          "17166:  return s",
          "17167: }",
          "17170: func (s *TapeInfo) SetTapeARN(v string) *TapeInfo {",
          "17171:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17935: func (s *TapeInfo) SetPoolEntryDate(v time.Time) *TapeInfo {",
          "17936:  s.PoolEntryDate = &v",
          "17937:  return s",
          "17938: }",
          "17947: func (s *TapeInfo) SetRetentionStartDate(v time.Time) *TapeInfo {",
          "17948:  s.RetentionStartDate = &v",
          "17949:  return s",
          "17950: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "19388:  }",
          "19389: }",
          "19391: const (",
          "19393:  SMBSecurityStrategyClientSpecified = \"ClientSpecified\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174: const (",
          "20176:  PoolStatusActive = \"ACTIVE\"",
          "20179:  PoolStatusDeleted = \"DELETED\"",
          "20180: )",
          "20183: func PoolStatus_Values() []string {",
          "20184:  return []string{",
          "20185:   PoolStatusActive,",
          "20186:   PoolStatusDeleted,",
          "20187:  }",
          "20188: }",
          "20190: const (",
          "20192:  RetentionLockTypeCompliance = \"COMPLIANCE\"",
          "20195:  RetentionLockTypeGovernance = \"GOVERNANCE\"",
          "20198:  RetentionLockTypeNone = \"NONE\"",
          "20199: )",
          "20202: func RetentionLockType_Values() []string {",
          "20203:  return []string{",
          "20204:   RetentionLockTypeCompliance,",
          "20205:   RetentionLockTypeGovernance,",
          "20206:   RetentionLockTypeNone,",
          "20207:  }",
          "20208: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "19407:   SMBSecurityStrategyMandatoryEncryption,",
          "19408:  }",
          "19409: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20230: const (",
          "20232:  TapeStorageClassDeepArchive = \"DEEP_ARCHIVE\"",
          "20235:  TapeStorageClassGlacier = \"GLACIER\"",
          "20236: )",
          "20239: func TapeStorageClass_Values() []string {",
          "20240:  return []string{",
          "20241:   TapeStorageClassDeepArchive,",
          "20242:   TapeStorageClassGlacier,",
          "20243:  }",
          "20244: }",
          "",
          "---------------"
        ],
        "service/storagegateway/doc.go||service/storagegateway/doc.go": [
          "File: service/storagegateway/doc.go -> service/storagegateway/doc.go"
        ],
        "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go": [
          "File: service/storagegateway/storagegatewayiface/interface.go -> service/storagegateway/storagegatewayiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  CreateStorediSCSIVolumeWithContext(aws.Context, *storagegateway.CreateStorediSCSIVolumeInput, ...request.Option) (*storagegateway.CreateStorediSCSIVolumeOutput, error)",
          "121:  CreateStorediSCSIVolumeRequest(*storagegateway.CreateStorediSCSIVolumeInput) (*request.Request, *storagegateway.CreateStorediSCSIVolumeOutput)",
          "123:  CreateTapeWithBarcode(*storagegateway.CreateTapeWithBarcodeInput) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "124:  CreateTapeWithBarcodeWithContext(aws.Context, *storagegateway.CreateTapeWithBarcodeInput, ...request.Option) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "125:  CreateTapeWithBarcodeRequest(*storagegateway.CreateTapeWithBarcodeInput) (*request.Request, *storagegateway.CreateTapeWithBarcodeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  CreateTapePool(*storagegateway.CreateTapePoolInput) (*storagegateway.CreateTapePoolOutput, error)",
          "124:  CreateTapePoolWithContext(aws.Context, *storagegateway.CreateTapePoolInput, ...request.Option) (*storagegateway.CreateTapePoolOutput, error)",
          "125:  CreateTapePoolRequest(*storagegateway.CreateTapePoolInput) (*request.Request, *storagegateway.CreateTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:  DeleteTapeArchiveWithContext(aws.Context, *storagegateway.DeleteTapeArchiveInput, ...request.Option) (*storagegateway.DeleteTapeArchiveOutput, error)",
          "161:  DeleteTapeArchiveRequest(*storagegateway.DeleteTapeArchiveInput) (*request.Request, *storagegateway.DeleteTapeArchiveOutput)",
          "163:  DeleteVolume(*storagegateway.DeleteVolumeInput) (*storagegateway.DeleteVolumeOutput, error)",
          "164:  DeleteVolumeWithContext(aws.Context, *storagegateway.DeleteVolumeInput, ...request.Option) (*storagegateway.DeleteVolumeOutput, error)",
          "165:  DeleteVolumeRequest(*storagegateway.DeleteVolumeInput) (*request.Request, *storagegateway.DeleteVolumeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:  DeleteTapePool(*storagegateway.DeleteTapePoolInput) (*storagegateway.DeleteTapePoolOutput, error)",
          "168:  DeleteTapePoolWithContext(aws.Context, *storagegateway.DeleteTapePoolInput, ...request.Option) (*storagegateway.DeleteTapePoolOutput, error)",
          "169:  DeleteTapePoolRequest(*storagegateway.DeleteTapePoolInput) (*request.Request, *storagegateway.DeleteTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:  ListTagsForResourcePages(*storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool) error",
          "290:  ListTagsForResourcePagesWithContext(aws.Context, *storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "292:  ListTapes(*storagegateway.ListTapesInput) (*storagegateway.ListTapesOutput, error)",
          "293:  ListTapesWithContext(aws.Context, *storagegateway.ListTapesInput, ...request.Option) (*storagegateway.ListTapesOutput, error)",
          "294:  ListTapesRequest(*storagegateway.ListTapesInput) (*request.Request, *storagegateway.ListTapesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:  ListTapePools(*storagegateway.ListTapePoolsInput) (*storagegateway.ListTapePoolsOutput, error)",
          "301:  ListTapePoolsWithContext(aws.Context, *storagegateway.ListTapePoolsInput, ...request.Option) (*storagegateway.ListTapePoolsOutput, error)",
          "302:  ListTapePoolsRequest(*storagegateway.ListTapePoolsInput) (*request.Request, *storagegateway.ListTapePoolsOutput)",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "799:  EndTime *float64 `type:\"double\"`",
          "803:  StartTime *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "803:  Speaker *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "835:  return s",
          "836: }",
          "839: func (s *Item) SetStartTime(v float64) *Item {",
          "840:  s.StartTime = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "843: func (s *Item) SetSpeaker(v string) *Item {",
          "844:  s.Speaker = &v",
          "845:  return s",
          "846: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1119:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1132:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1195:  return s",
          "1196: }",
          "1199: func (s *StartStreamTranscriptionInput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionInput {",
          "1200:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1212: func (s *StartStreamTranscriptionInput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionInput {",
          "1213:  s.ShowSpeakerLabel = &v",
          "1214:  return s",
          "1215: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1235:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "1238:  VocabularyFilterMethod *string `location:\"header\" locationName:\"x-amzn-transcribe-vocabulary-filter-method\" type:\"string\" enum:\"VocabularyFilterMethod\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1257:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1284:  return s",
          "1285: }",
          "1288: func (s *StartStreamTranscriptionOutput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionOutput {",
          "1289:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310: func (s *StartStreamTranscriptionOutput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionOutput {",
          "1311:  s.ShowSpeakerLabel = &v",
          "1312:  return s",
          "1313: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:          {",
          "233:           Content:               aws.String(\"string value goes here\"),",
          "234:           EndTime:               aws.Float64(123.45),",
          "235:           StartTime:             aws.Float64(123.45),",
          "236:           Type:                  aws.String(\"string value goes here\"),",
          "237:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:          {",
          "240:           Content:               aws.String(\"string value goes here\"),",
          "241:           EndTime:               aws.Float64(123.45),",
          "242:           StartTime:             aws.Float64(123.45),",
          "243:           Type:                  aws.String(\"string value goes here\"),",
          "244:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "246:          {",
          "247:           Content:               aws.String(\"string value goes here\"),",
          "248:           EndTime:               aws.Float64(123.45),",
          "249:           StartTime:             aws.Float64(123.45),",
          "250:           Type:                  aws.String(\"string value goes here\"),",
          "251:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:          {",
          "259:           Content:               aws.String(\"string value goes here\"),",
          "260:           EndTime:               aws.Float64(123.45),",
          "261:           StartTime:             aws.Float64(123.45),",
          "262:           Type:                  aws.String(\"string value goes here\"),",
          "263:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:          {",
          "266:           Content:               aws.String(\"string value goes here\"),",
          "267:           EndTime:               aws.Float64(123.45),",
          "268:           StartTime:             aws.Float64(123.45),",
          "269:           Type:                  aws.String(\"string value goes here\"),",
          "270:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "272:          {",
          "273:           Content:               aws.String(\"string value goes here\"),",
          "274:           EndTime:               aws.Float64(123.45),",
          "275:           StartTime:             aws.Float64(123.45),",
          "276:           Type:                  aws.String(\"string value goes here\"),",
          "277:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "284:          {",
          "285:           Content:               aws.String(\"string value goes here\"),",
          "286:           EndTime:               aws.Float64(123.45),",
          "287:           StartTime:             aws.Float64(123.45),",
          "288:           Type:                  aws.String(\"string value goes here\"),",
          "289:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "291:          {",
          "292:           Content:               aws.String(\"string value goes here\"),",
          "293:           EndTime:               aws.Float64(123.45),",
          "294:           StartTime:             aws.Float64(123.45),",
          "295:           Type:                  aws.String(\"string value goes here\"),",
          "296:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "298:          {",
          "299:           Content:               aws.String(\"string value goes here\"),",
          "300:           EndTime:               aws.Float64(123.45),",
          "301:           StartTime:             aws.Float64(123.45),",
          "302:           Type:                  aws.String(\"string value goes here\"),",
          "303:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "318:          {",
          "319:           Content:               aws.String(\"string value goes here\"),",
          "320:           EndTime:               aws.Float64(123.45),",
          "321:           StartTime:             aws.Float64(123.45),",
          "322:           Type:                  aws.String(\"string value goes here\"),",
          "323:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "325:          {",
          "326:           Content:               aws.String(\"string value goes here\"),",
          "327:           EndTime:               aws.Float64(123.45),",
          "328:           StartTime:             aws.Float64(123.45),",
          "329:           Type:                  aws.String(\"string value goes here\"),",
          "330:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "332:          {",
          "333:           Content:               aws.String(\"string value goes here\"),",
          "334:           EndTime:               aws.Float64(123.45),",
          "335:           StartTime:             aws.Float64(123.45),",
          "336:           Type:                  aws.String(\"string value goes here\"),",
          "337:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "344:          {",
          "345:           Content:               aws.String(\"string value goes here\"),",
          "346:           EndTime:               aws.Float64(123.45),",
          "347:           StartTime:             aws.Float64(123.45),",
          "348:           Type:                  aws.String(\"string value goes here\"),",
          "349:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "351:          {",
          "352:           Content:               aws.String(\"string value goes here\"),",
          "353:           EndTime:               aws.Float64(123.45),",
          "354:           StartTime:             aws.Float64(123.45),",
          "355:           Type:                  aws.String(\"string value goes here\"),",
          "356:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "358:          {",
          "359:           Content:               aws.String(\"string value goes here\"),",
          "360:           EndTime:               aws.Float64(123.45),",
          "361:           StartTime:             aws.Float64(123.45),",
          "362:           Type:                  aws.String(\"string value goes here\"),",
          "363:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "370:          {",
          "371:           Content:               aws.String(\"string value goes here\"),",
          "372:           EndTime:               aws.Float64(123.45),",
          "373:           StartTime:             aws.Float64(123.45),",
          "374:           Type:                  aws.String(\"string value goes here\"),",
          "375:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "377:          {",
          "378:           Content:               aws.String(\"string value goes here\"),",
          "379:           EndTime:               aws.Float64(123.45),",
          "380:           StartTime:             aws.Float64(123.45),",
          "381:           Type:                  aws.String(\"string value goes here\"),",
          "382:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "384:          {",
          "385:           Content:               aws.String(\"string value goes here\"),",
          "386:           EndTime:               aws.Float64(123.45),",
          "387:           StartTime:             aws.Float64(123.45),",
          "388:           Type:                  aws.String(\"string value goes here\"),",
          "389:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "404:          {",
          "405:           Content:               aws.String(\"string value goes here\"),",
          "406:           EndTime:               aws.Float64(123.45),",
          "407:           StartTime:             aws.Float64(123.45),",
          "408:           Type:                  aws.String(\"string value goes here\"),",
          "409:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "411:          {",
          "412:           Content:               aws.String(\"string value goes here\"),",
          "413:           EndTime:               aws.Float64(123.45),",
          "414:           StartTime:             aws.Float64(123.45),",
          "415:           Type:                  aws.String(\"string value goes here\"),",
          "416:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "433:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "418:          {",
          "419:           Content:               aws.String(\"string value goes here\"),",
          "420:           EndTime:               aws.Float64(123.45),",
          "421:           StartTime:             aws.Float64(123.45),",
          "422:           Type:                  aws.String(\"string value goes here\"),",
          "423:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "441:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "430:          {",
          "431:           Content:               aws.String(\"string value goes here\"),",
          "432:           EndTime:               aws.Float64(123.45),",
          "433:           StartTime:             aws.Float64(123.45),",
          "434:           Type:                  aws.String(\"string value goes here\"),",
          "435:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "437:          {",
          "438:           Content:               aws.String(\"string value goes here\"),",
          "439:           EndTime:               aws.Float64(123.45),",
          "440:           StartTime:             aws.Float64(123.45),",
          "441:           Type:                  aws.String(\"string value goes here\"),",
          "442:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "462:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "444:          {",
          "445:           Content:               aws.String(\"string value goes here\"),",
          "446:           EndTime:               aws.Float64(123.45),",
          "447:           StartTime:             aws.Float64(123.45),",
          "448:           Type:                  aws.String(\"string value goes here\"),",
          "449:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "456:          {",
          "457:           Content:               aws.String(\"string value goes here\"),",
          "458:           EndTime:               aws.Float64(123.45),",
          "459:           StartTime:             aws.Float64(123.45),",
          "460:           Type:                  aws.String(\"string value goes here\"),",
          "461:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "463:          {",
          "464:           Content:               aws.String(\"string value goes here\"),",
          "465:           EndTime:               aws.Float64(123.45),",
          "466:           StartTime:             aws.Float64(123.45),",
          "467:           Type:                  aws.String(\"string value goes here\"),",
          "468:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "470:          {",
          "471:           Content:               aws.String(\"string value goes here\"),",
          "472:           EndTime:               aws.Float64(123.45),",
          "473:           StartTime:             aws.Float64(123.45),",
          "474:           Type:                  aws.String(\"string value goes here\"),",
          "475:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "499:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f03f4c61fcc870f700d872010c0ce0593816c717",
      "candidate_info": {
        "commit_hash": "f03f4c61fcc870f700d872010c0ce0593816c717",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/f03f4c61fcc870f700d872010c0ce0593816c717",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/codeguru-reviewer/2019-09-19/api-2.json",
          "models/apis/codeguru-reviewer/2019-09-19/docs-2.json",
          "models/apis/codeguru-reviewer/2019-09-19/paginators-1.json",
          "models/apis/es/2015-01-01/api-2.json",
          "models/apis/es/2015-01-01/docs-2.json",
          "models/apis/fms/2018-01-01/api-2.json",
          "models/apis/fms/2018-01-01/docs-2.json",
          "models/apis/redshift/2012-12-01/api-2.json",
          "models/apis/redshift/2012-12-01/docs-2.json",
          "models/apis/redshift/2012-12-01/paginators-1.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/codegurureviewer/api.go",
          "service/codegurureviewer/codegururevieweriface/interface.go",
          "service/codegurureviewer/errors.go",
          "service/elasticsearchservice/api.go",
          "service/fms/api.go",
          "service/redshift/api.go",
          "service/redshift/errors.go",
          "service/redshift/redshiftiface/interface.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/errors.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.30.12 (2020-04-22) (#3278)\n\nRelease v1.30.12 (2020-04-22)\n===\n\n### Service Client Updates\n* `service/codeguru-reviewer`: Updates service API, documentation, and paginators\n* `service/es`: Updates service API and documentation\n  * This change adds a new field 'OptionalDeployment' to ServiceSoftwareOptions to indicate whether a service software update is optional or mandatory. If True, it indicates that the update is optional, and the service software is not automatically updated. If False, the service software is automatically updated after AutomatedUpdateDate.\n* `service/fms`: Updates service API and documentation\n* `service/redshift`: Updates service API, documentation, and paginators\n  * Amazon Redshift support for usage limits\n* `service/transcribe-streaming`: Updates service API and documentation\n\n### SDK Enhancements\n* `aws/credentials/stscreds`: Add support for custom web identity TokenFetcher ([#3256](https://github.com/aws/aws-sdk-go/pull/3256))\n  * Adds new constructor, `NewWebIdentityRoleProviderWithToken` for `WebIdentityRoleProvider` which takes a `TokenFetcher`. Implement `TokenFetcher` to provide custom sources for web identity tokens. The `TokenFetcher` must be concurrency safe. `TokenFetcher` may return unique value each time it is called.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/codegurureviewer/api.go||service/codegurureviewer/api.go",
          "service/codegurureviewer/codegururevieweriface/interface.go||service/codegurureviewer/codegururevieweriface/interface.go",
          "service/codegurureviewer/errors.go||service/codegurureviewer/errors.go",
          "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go",
          "service/fms/api.go||service/fms/api.go",
          "service/redshift/api.go||service/redshift/api.go",
          "service/redshift/errors.go||service/redshift/errors.go",
          "service/redshift/redshiftiface/interface.go||service/redshift/redshiftiface/interface.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/errors.go||service/transcribestreamingservice/errors.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: const (",
          "20:  ApEast1RegionID      = \"ap-east-1\"      // Asia Pacific (Hong Kong).",
          "21:  ApNortheast1RegionID = \"ap-northeast-1\" // Asia Pacific (Tokyo).",
          "22:  ApNortheast2RegionID = \"ap-northeast-2\" // Asia Pacific (Seoul).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:  AfSouth1RegionID     = \"af-south-1\"     // Africa (Cape Town).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:  DNSSuffix: \"amazonaws.com\",",
          "98:  RegionRegex: regionRegex{",
          "99:   Regexp: func() *regexp.Regexp {",
          "101:    return reg",
          "102:   }(),",
          "103:  },",
          "",
          "[Removed Lines]",
          "100:    reg, _ := regexp.Compile(\"^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$\")",
          "",
          "[Added Lines]",
          "101:    reg, _ := regexp.Compile(\"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:   SignatureVersions: []string{\"v4\"},",
          "108:  },",
          "109:  Regions: regions{",
          "110:   \"ap-east-1\": region{",
          "111:    Description: \"Asia Pacific (Hong Kong)\",",
          "112:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:   \"af-south-1\": region{",
          "112:    Description: \"Africa (Cape Town)\",",
          "113:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "172:   \"access-analyzer\": service{",
          "174:    Endpoints: endpoints{",
          "175:     \"ap-east-1\":      endpoint{},",
          "176:     \"ap-northeast-1\": endpoint{},",
          "177:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:   \"acm\": service{",
          "197:    Endpoints: endpoints{",
          "198:     \"ap-east-1\":      endpoint{},",
          "199:     \"ap-northeast-1\": endpoint{},",
          "200:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "303:   \"api.ecr\": service{",
          "305:    Endpoints: endpoints{",
          "306:     \"ap-east-1\": endpoint{",
          "307:      Hostname: \"api.ecr.ap-east-1.amazonaws.com\",",
          "308:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:     \"af-south-1\": endpoint{",
          "313:      Hostname: \"api.ecr.af-south-1.amazonaws.com\",",
          "314:      CredentialScope: credentialScope{",
          "315:       Region: \"af-south-1\",",
          "316:      },",
          "317:     },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "510:   \"apigateway\": service{",
          "512:    Endpoints: endpoints{",
          "513:     \"ap-east-1\":      endpoint{},",
          "514:     \"ap-northeast-1\": endpoint{},",
          "515:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "525:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "535:     Protocols: []string{\"http\", \"https\"},",
          "536:    },",
          "537:    Endpoints: endpoints{",
          "538:     \"ap-east-1\":      endpoint{},",
          "539:     \"ap-northeast-1\": endpoint{},",
          "540:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "551:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "646:     Protocols: []string{\"http\", \"https\"},",
          "647:    },",
          "648:    Endpoints: endpoints{",
          "649:     \"ap-east-1\":      endpoint{},",
          "650:     \"ap-northeast-1\": endpoint{},",
          "651:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "834:   \"cloudformation\": service{",
          "836:    Endpoints: endpoints{",
          "837:     \"ap-east-1\":      endpoint{},",
          "838:     \"ap-northeast-1\": endpoint{},",
          "839:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "952:   \"cloudtrail\": service{",
          "954:    Endpoints: endpoints{",
          "955:     \"ap-east-1\":      endpoint{},",
          "956:     \"ap-northeast-1\": endpoint{},",
          "957:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1075:   \"codedeploy\": service{",
          "1077:    Endpoints: endpoints{",
          "1078:     \"ap-east-1\":      endpoint{},",
          "1079:     \"ap-northeast-1\": endpoint{},",
          "1080:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1095:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1505:   \"directconnect\": service{",
          "1507:    Endpoints: endpoints{",
          "1508:     \"ap-east-1\":      endpoint{},",
          "1509:     \"ap-northeast-1\": endpoint{},",
          "1510:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1526:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1560:   \"dms\": service{",
          "1562:    Endpoints: endpoints{",
          "1563:     \"ap-east-1\":      endpoint{},",
          "1564:     \"ap-northeast-1\": endpoint{},",
          "1565:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1582:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1727:     Protocols: []string{\"http\", \"https\"},",
          "1728:    },",
          "1729:    Endpoints: endpoints{",
          "1730:     \"ap-east-1\":      endpoint{},",
          "1731:     \"ap-northeast-1\": endpoint{},",
          "1732:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1750:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1789:     Protocols: []string{\"http\", \"https\"},",
          "1790:    },",
          "1791:    Endpoints: endpoints{",
          "1792:     \"ap-east-1\":      endpoint{},",
          "1793:     \"ap-northeast-1\": endpoint{},",
          "1794:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1813:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1853:   \"ecs\": service{",
          "1855:    Endpoints: endpoints{",
          "1856:     \"ap-east-1\":      endpoint{},",
          "1857:     \"ap-northeast-1\": endpoint{},",
          "1858:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1878:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1923:   \"elasticache\": service{",
          "1925:    Endpoints: endpoints{",
          "1926:     \"ap-east-1\":      endpoint{},",
          "1927:     \"ap-northeast-1\": endpoint{},",
          "1928:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1949:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1952:   \"elasticbeanstalk\": service{",
          "1954:    Endpoints: endpoints{",
          "1955:     \"ap-east-1\":      endpoint{},",
          "1956:     \"ap-northeast-1\": endpoint{},",
          "1957:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1979:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2132:     Protocols: []string{\"https\"},",
          "2133:    },",
          "2134:    Endpoints: endpoints{",
          "2135:     \"ap-east-1\":      endpoint{},",
          "2136:     \"ap-northeast-1\": endpoint{},",
          "2137:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2160:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2182:     Protocols:     []string{\"https\"},",
          "2183:    },",
          "2184:    Endpoints: endpoints{",
          "2185:     \"ap-east-1\":      endpoint{},",
          "2186:     \"ap-northeast-1\": endpoint{},",
          "2187:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2211:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2273:   \"es\": service{",
          "2275:    Endpoints: endpoints{",
          "2276:     \"ap-east-1\":      endpoint{},",
          "2277:     \"ap-northeast-1\": endpoint{},",
          "2278:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2303:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2302:   \"events\": service{",
          "2304:    Endpoints: endpoints{",
          "2305:     \"ap-east-1\":      endpoint{},",
          "2306:     \"ap-northeast-1\": endpoint{},",
          "2307:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2333:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2541:    Endpoints: endpoints{",
          "2542:     \"ap-east-1\":      endpoint{},",
          "2543:     \"ap-northeast-1\": endpoint{},",
          "2544:     \"ap-southeast-1\": endpoint{},",
          "2545:     \"ap-southeast-2\": endpoint{},",
          "2546:     \"eu-central-1\":   endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2573:     \"ap-northeast-2\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2577:     Protocols: []string{\"http\", \"https\"},",
          "2578:    },",
          "2579:    Endpoints: endpoints{",
          "2580:     \"ap-east-1\":      endpoint{},",
          "2581:     \"ap-northeast-1\": endpoint{},",
          "2582:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2610:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3016:   \"kinesis\": service{",
          "3018:    Endpoints: endpoints{",
          "3019:     \"ap-east-1\":      endpoint{},",
          "3020:     \"ap-northeast-1\": endpoint{},",
          "3021:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3050:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3105:   \"kms\": service{",
          "3107:    Endpoints: endpoints{",
          "3108:     \"ap-east-1\":      endpoint{},",
          "3109:     \"ap-northeast-1\": endpoint{},",
          "3110:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3140:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3146:   \"lambda\": service{",
          "3148:    Endpoints: endpoints{",
          "3149:     \"ap-east-1\":      endpoint{},",
          "3150:     \"ap-northeast-1\": endpoint{},",
          "3151:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3258:   \"logs\": service{",
          "3260:    Endpoints: endpoints{",
          "3261:     \"ap-east-1\":      endpoint{},",
          "3262:     \"ap-northeast-1\": endpoint{},",
          "3263:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3295:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "3401:     },",
          "3402:    },",
          "3403:    Endpoints: endpoints{",
          "3404:     \"ap-east-1\":      endpoint{},",
          "3405:     \"ap-northeast-1\": endpoint{},",
          "3406:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3439:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "3442:     },",
          "3443:    },",
          "3444:    Endpoints: endpoints{",
          "3445:     \"ap-southeast-2\": endpoint{},",
          "3446:     \"eu-west-1\":      endpoint{},",
          "3447:     \"us-east-1\":      endpoint{},",
          "3448:     \"us-west-2\":      endpoint{},",
          "3449:    },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3481:     \"ap-southeast-1\": endpoint{},",
          "3483:     \"eu-central-1\":   endpoint{},",
          "3485:     \"eu-west-2\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "3453:     Protocols: []string{\"http\", \"https\"},",
          "3454:    },",
          "3455:    Endpoints: endpoints{",
          "3456:     \"ap-east-1\":      endpoint{},",
          "3457:     \"ap-northeast-1\": endpoint{},",
          "3458:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3495:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3977:   \"rds\": service{",
          "3979:    Endpoints: endpoints{",
          "3980:     \"ap-east-1\":      endpoint{},",
          "3981:     \"ap-northeast-1\": endpoint{},",
          "3982:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4020:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4002:   \"redshift\": service{",
          "4004:    Endpoints: endpoints{",
          "4005:     \"ap-east-1\":      endpoint{},",
          "4006:     \"ap-northeast-1\": endpoint{},",
          "4007:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4046:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4072:   \"resource-groups\": service{",
          "4074:    Endpoints: endpoints{",
          "4075:     \"ap-east-1\":      endpoint{},",
          "4076:     \"ap-northeast-1\": endpoint{},",
          "4077:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4117:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4179:     },",
          "4180:    },",
          "4181:    Endpoints: endpoints{",
          "4182:     \"ap-southeast-2\": endpoint{},",
          "4183:     \"eu-west-1\":      endpoint{},",
          "4184:     \"us-east-1\":      endpoint{},",
          "4185:     \"us-west-2\":      endpoint{},",
          "4186:    },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4225:     \"ap-southeast-1\": endpoint{},",
          "4227:     \"eu-central-1\":   endpoint{},",
          "4229:     \"eu-west-2\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4243:     DualStackHostname: \"{service}.dualstack.{region}.{dnsSuffix}\",",
          "4244:    },",
          "4245:    Endpoints: endpoints{",
          "4247:     \"ap-northeast-1\": endpoint{",
          "4248:      Hostname:          \"s3.ap-northeast-1.amazonaws.com\",",
          "4249:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "4246:     \"ap-east-1\": endpoint{},",
          "",
          "[Added Lines]",
          "4292:     \"af-south-1\": endpoint{},",
          "4293:     \"ap-east-1\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4732:   \"sms\": service{",
          "4734:    Endpoints: endpoints{",
          "4735:     \"ap-east-1\":      endpoint{},",
          "4736:     \"ap-northeast-1\": endpoint{},",
          "4737:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4782:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4891:     Protocols: []string{\"http\", \"https\"},",
          "4892:    },",
          "4893:    Endpoints: endpoints{",
          "4894:     \"ap-east-1\":      endpoint{},",
          "4895:     \"ap-northeast-1\": endpoint{},",
          "4896:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4942:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "4941:     Protocols:     []string{\"http\", \"https\"},",
          "4942:    },",
          "4943:    Endpoints: endpoints{",
          "4944:     \"ap-east-1\":      endpoint{},",
          "4945:     \"ap-northeast-1\": endpoint{},",
          "4946:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4993:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "4990:   \"ssm\": service{",
          "4992:    Endpoints: endpoints{",
          "4993:     \"ap-east-1\":      endpoint{},",
          "4994:     \"ap-northeast-1\": endpoint{},",
          "4995:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5043:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5061:   \"states\": service{",
          "5063:    Endpoints: endpoints{",
          "5064:     \"ap-east-1\":      endpoint{},",
          "5065:     \"ap-northeast-1\": endpoint{},",
          "5066:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5115:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "5196:    PartitionEndpoint: \"aws-global\",",
          "5198:    Endpoints: endpoints{",
          "5199:     \"ap-east-1\":      endpoint{},",
          "5200:     \"ap-northeast-1\": endpoint{},",
          "5201:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5251:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "5261:   \"swf\": service{",
          "5263:    Endpoints: endpoints{",
          "5264:     \"ap-east-1\":      endpoint{},",
          "5265:     \"ap-northeast-1\": endpoint{},",
          "5266:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5317:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "5308:   \"tagging\": service{",
          "5310:    Endpoints: endpoints{",
          "5311:     \"ap-east-1\":      endpoint{},",
          "5312:     \"ap-northeast-1\": endpoint{},",
          "5313:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5365:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "5741:   \"xray\": service{",
          "5743:    Endpoints: endpoints{",
          "5744:     \"ap-east-1\":      endpoint{},",
          "5745:     \"ap-northeast-1\": endpoint{},",
          "5746:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5799:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "7390:     },",
          "7391:    },",
          "7392:   },",
          "7393:   \"serverlessrepo\": service{",
          "7394:    Defaults: endpoint{",
          "7395:     Protocols: []string{\"https\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7449:   \"securityhub\": service{",
          "7451:    Endpoints: endpoints{",
          "7452:     \"us-gov-east-1\": endpoint{},",
          "7453:     \"us-gov-west-1\": endpoint{},",
          "7454:    },",
          "7455:   },",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "7729:     \"us-iso-east-1\": endpoint{},",
          "7730:    },",
          "7731:   },",
          "7732:   \"config\": service{",
          "7734:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7795:   \"comprehend\": service{",
          "7796:    Defaults: endpoint{",
          "7797:     Protocols: []string{\"https\"},",
          "7798:    },",
          "7799:    Endpoints: endpoints{",
          "7800:     \"us-iso-east-1\": endpoint{},",
          "7801:    },",
          "7802:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.11\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.12\"",
          "",
          "---------------"
        ],
        "service/codegurureviewer/api.go||service/codegurureviewer/api.go": [
          "File: service/codegurureviewer/api.go -> service/codegurureviewer/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13: )",
          "15: const opAssociateRepository = \"AssociateRepository\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:  return out, req.Send()",
          "112: }",
          "114: const opDescribeRepositoryAssociation = \"DescribeRepositoryAssociation\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116: const opDescribeCodeReview = \"DescribeCodeReview\"",
          "142: func (c *CodeGuruReviewer) DescribeCodeReviewRequest(input *DescribeCodeReviewInput) (req *request.Request, output *DescribeCodeReviewOutput) {",
          "143:  op := &request.Operation{",
          "144:   Name:       opDescribeCodeReview,",
          "145:   HTTPMethod: \"GET\",",
          "146:   HTTPPath:   \"/codereviews/{CodeReviewArn}\",",
          "147:  }",
          "149:  if input == nil {",
          "150:   input = &DescribeCodeReviewInput{}",
          "151:  }",
          "153:  output = &DescribeCodeReviewOutput{}",
          "154:  req = c.newRequest(op, input, output)",
          "155:  return",
          "156: }",
          "186: func (c *CodeGuruReviewer) DescribeCodeReview(input *DescribeCodeReviewInput) (*DescribeCodeReviewOutput, error) {",
          "187:  req, out := c.DescribeCodeReviewRequest(input)",
          "188:  return out, req.Send()",
          "189: }",
          "200: func (c *CodeGuruReviewer) DescribeCodeReviewWithContext(ctx aws.Context, input *DescribeCodeReviewInput, opts ...request.Option) (*DescribeCodeReviewOutput, error) {",
          "201:  req, out := c.DescribeCodeReviewRequest(input)",
          "202:  req.SetContext(ctx)",
          "203:  req.ApplyOptions(opts...)",
          "204:  return out, req.Send()",
          "205: }",
          "207: const opDescribeRecommendationFeedback = \"DescribeRecommendationFeedback\"",
          "233: func (c *CodeGuruReviewer) DescribeRecommendationFeedbackRequest(input *DescribeRecommendationFeedbackInput) (req *request.Request, output *DescribeRecommendationFeedbackOutput) {",
          "234:  op := &request.Operation{",
          "235:   Name:       opDescribeRecommendationFeedback,",
          "236:   HTTPMethod: \"GET\",",
          "237:   HTTPPath:   \"/feedback/{CodeReviewArn}\",",
          "238:  }",
          "240:  if input == nil {",
          "241:   input = &DescribeRecommendationFeedbackInput{}",
          "242:  }",
          "244:  output = &DescribeRecommendationFeedbackOutput{}",
          "245:  req = c.newRequest(op, input, output)",
          "246:  return",
          "247: }",
          "277: func (c *CodeGuruReviewer) DescribeRecommendationFeedback(input *DescribeRecommendationFeedbackInput) (*DescribeRecommendationFeedbackOutput, error) {",
          "278:  req, out := c.DescribeRecommendationFeedbackRequest(input)",
          "279:  return out, req.Send()",
          "280: }",
          "291: func (c *CodeGuruReviewer) DescribeRecommendationFeedbackWithContext(ctx aws.Context, input *DescribeRecommendationFeedbackInput, opts ...request.Option) (*DescribeRecommendationFeedbackOutput, error) {",
          "292:  req, out := c.DescribeRecommendationFeedbackRequest(input)",
          "293:  req.SetContext(ctx)",
          "294:  req.ApplyOptions(opts...)",
          "295:  return out, req.Send()",
          "296: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:  return out, req.Send()",
          "299: }",
          "328:  op := &request.Operation{",
          "330:   HTTPMethod: \"GET\",",
          "332:   Paginator: &request.Paginator{",
          "333:    InputTokens:     []string{\"NextToken\"},",
          "334:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "301: const opListRepositoryAssociations = \"ListRepositoryAssociations\"",
          "327: func (c *CodeGuruReviewer) ListRepositoryAssociationsRequest(input *ListRepositoryAssociationsInput) (req *request.Request, output *ListRepositoryAssociationsOutput) {",
          "329:   Name:       opListRepositoryAssociations,",
          "331:   HTTPPath:   \"/associations\",",
          "",
          "[Added Lines]",
          "485: const opListCodeReviews = \"ListCodeReviews\"",
          "511: func (c *CodeGuruReviewer) ListCodeReviewsRequest(input *ListCodeReviewsInput) (req *request.Request, output *ListCodeReviewsOutput) {",
          "513:   Name:       opListCodeReviews,",
          "515:   HTTPPath:   \"/codereviews\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "338:  }",
          "340:  if input == nil {",
          "342:  }",
          "345:  req = c.newRequest(op, input, output)",
          "346:  return",
          "347: }",
          "",
          "[Removed Lines]",
          "341:   input = &ListRepositoryAssociationsInput{}",
          "344:  output = &ListRepositoryAssociationsOutput{}",
          "",
          "[Added Lines]",
          "525:   input = &ListCodeReviewsInput{}",
          "528:  output = &ListCodeReviewsOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "375:  return out, req.Send()",
          "376: }",
          "389:  req.SetContext(ctx)",
          "390:  req.ApplyOptions(opts...)",
          "391:  return out, req.Send()",
          "392: }",
          "413: }",
          "423:  p := request.Pagination{",
          "424:   NewRequest: func() (*request.Request, error) {",
          "426:    if input != nil {",
          "427:     tmp := *input",
          "428:     inCpy = &tmp",
          "429:    }",
          "431:    req.SetContext(ctx)",
          "432:    req.ApplyOptions(opts...)",
          "433:    return req, nil",
          "",
          "[Removed Lines]",
          "373: func (c *CodeGuruReviewer) ListRepositoryAssociations(input *ListRepositoryAssociationsInput) (*ListRepositoryAssociationsOutput, error) {",
          "374:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "387: func (c *CodeGuruReviewer) ListRepositoryAssociationsWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, opts ...request.Option) (*ListRepositoryAssociationsOutput, error) {",
          "388:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "411: func (c *CodeGuruReviewer) ListRepositoryAssociationsPages(input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool) error {",
          "412:  return c.ListRepositoryAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "422: func (c *CodeGuruReviewer) ListRepositoryAssociationsPagesWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "425:    var inCpy *ListRepositoryAssociationsInput",
          "430:    req, _ := c.ListRepositoryAssociationsRequest(inCpy)",
          "",
          "[Added Lines]",
          "558: func (c *CodeGuruReviewer) ListCodeReviews(input *ListCodeReviewsInput) (*ListCodeReviewsOutput, error) {",
          "559:  req, out := c.ListCodeReviewsRequest(input)",
          "572: func (c *CodeGuruReviewer) ListCodeReviewsWithContext(ctx aws.Context, input *ListCodeReviewsInput, opts ...request.Option) (*ListCodeReviewsOutput, error) {",
          "573:  req, out := c.ListCodeReviewsRequest(input)",
          "596: func (c *CodeGuruReviewer) ListCodeReviewsPages(input *ListCodeReviewsInput, fn func(*ListCodeReviewsOutput, bool) bool) error {",
          "597:  return c.ListCodeReviewsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "607: func (c *CodeGuruReviewer) ListCodeReviewsPagesWithContext(ctx aws.Context, input *ListCodeReviewsInput, fn func(*ListCodeReviewsOutput, bool) bool, opts ...request.Option) error {",
          "610:    var inCpy *ListCodeReviewsInput",
          "615:    req, _ := c.ListCodeReviewsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "435:  }",
          "437:  for p.Next() {",
          "439:    break",
          "440:   }",
          "441:  }",
          "",
          "[Removed Lines]",
          "438:   if !fn(p.Page().(*ListRepositoryAssociationsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "623:   if !fn(p.Page().(*ListCodeReviewsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "443:  return p.Err()",
          "444: }",
          "467:  }",
          "479:  }",
          "500: }",
          "526:  ClientRequestToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "532: }",
          "537: }",
          "542: }",
          "563: }",
          "568:  return s",
          "569: }",
          "574:  return s",
          "575: }",
          "578:  _ struct{} `type:\"structure\"`",
          "582: }",
          "586:  return awsutil.Prettify(s)",
          "587: }",
          "591:  return s.String()",
          "592: }",
          "597:  return s",
          "598: }",
          "602:  _ struct{} `type:\"structure\"`",
          "608: }",
          "612:  return awsutil.Prettify(s)",
          "613: }",
          "617:  return s.String()",
          "618: }",
          "634: }",
          "639:  return s",
          "640: }",
          "",
          "[Removed Lines]",
          "447: type AccessDeniedException struct {",
          "448:  _            struct{}                  `type:\"structure\"`",
          "449:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "451:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "452: }",
          "455: func (s AccessDeniedException) String() string {",
          "456:  return awsutil.Prettify(s)",
          "457: }",
          "460: func (s AccessDeniedException) GoString() string {",
          "461:  return s.String()",
          "462: }",
          "464: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "465:  return &AccessDeniedException{",
          "466:   RespMetadata: v,",
          "468: }",
          "471: func (s *AccessDeniedException) Code() string {",
          "472:  return \"AccessDeniedException\"",
          "473: }",
          "476: func (s *AccessDeniedException) Message() string {",
          "477:  if s.Message_ != nil {",
          "478:   return *s.Message_",
          "480:  return \"\"",
          "481: }",
          "484: func (s *AccessDeniedException) OrigErr() error {",
          "485:  return nil",
          "486: }",
          "488: func (s *AccessDeniedException) Error() string {",
          "489:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "490: }",
          "493: func (s *AccessDeniedException) StatusCode() int {",
          "494:  return s.RespMetadata.StatusCode",
          "495: }",
          "498: func (s *AccessDeniedException) RequestID() string {",
          "499:  return s.RespMetadata.RequestID",
          "502: type AssociateRepositoryInput struct {",
          "503:  _ struct{} `type:\"structure\"`",
          "531:  Repository *Repository `type:\"structure\" required:\"true\"`",
          "535: func (s AssociateRepositoryInput) String() string {",
          "536:  return awsutil.Prettify(s)",
          "540: func (s AssociateRepositoryInput) GoString() string {",
          "541:  return s.String()",
          "545: func (s *AssociateRepositoryInput) Validate() error {",
          "546:  invalidParams := request.ErrInvalidParams{Context: \"AssociateRepositoryInput\"}",
          "547:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "548:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "549:  }",
          "550:  if s.Repository == nil {",
          "551:   invalidParams.Add(request.NewErrParamRequired(\"Repository\"))",
          "552:  }",
          "553:  if s.Repository != nil {",
          "554:   if err := s.Repository.Validate(); err != nil {",
          "555:    invalidParams.AddNested(\"Repository\", err.(request.ErrInvalidParams))",
          "556:   }",
          "557:  }",
          "559:  if invalidParams.Len() > 0 {",
          "560:   return invalidParams",
          "561:  }",
          "562:  return nil",
          "566: func (s *AssociateRepositoryInput) SetClientRequestToken(v string) *AssociateRepositoryInput {",
          "567:  s.ClientRequestToken = &v",
          "572: func (s *AssociateRepositoryInput) SetRepository(v *Repository) *AssociateRepositoryInput {",
          "573:  s.Repository = v",
          "577: type AssociateRepositoryOutput struct {",
          "581:  RepositoryAssociation *RepositoryAssociation `type:\"structure\"`",
          "585: func (s AssociateRepositoryOutput) String() string {",
          "590: func (s AssociateRepositoryOutput) GoString() string {",
          "595: func (s *AssociateRepositoryOutput) SetRepositoryAssociation(v *RepositoryAssociation) *AssociateRepositoryOutput {",
          "596:  s.RepositoryAssociation = v",
          "601: type CodeCommitRepository struct {",
          "607:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "611: func (s CodeCommitRepository) String() string {",
          "616: func (s CodeCommitRepository) GoString() string {",
          "621: func (s *CodeCommitRepository) Validate() error {",
          "622:  invalidParams := request.ErrInvalidParams{Context: \"CodeCommitRepository\"}",
          "623:  if s.Name == nil {",
          "624:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "625:  }",
          "626:  if s.Name != nil && len(*s.Name) < 1 {",
          "627:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "628:  }",
          "630:  if invalidParams.Len() > 0 {",
          "631:   return invalidParams",
          "632:  }",
          "633:  return nil",
          "637: func (s *CodeCommitRepository) SetName(v string) *CodeCommitRepository {",
          "638:  s.Name = &v",
          "",
          "[Added Lines]",
          "631: const opListRecommendationFeedback = \"ListRecommendationFeedback\"",
          "657: func (c *CodeGuruReviewer) ListRecommendationFeedbackRequest(input *ListRecommendationFeedbackInput) (req *request.Request, output *ListRecommendationFeedbackOutput) {",
          "658:  op := &request.Operation{",
          "659:   Name:       opListRecommendationFeedback,",
          "660:   HTTPMethod: \"GET\",",
          "661:   HTTPPath:   \"/feedback/{CodeReviewArn}/RecommendationFeedback\",",
          "662:   Paginator: &request.Paginator{",
          "663:    InputTokens:     []string{\"NextToken\"},",
          "664:    OutputTokens:    []string{\"NextToken\"},",
          "665:    LimitToken:      \"MaxResults\",",
          "666:    TruncationToken: \"\",",
          "667:   },",
          "670:  if input == nil {",
          "671:   input = &ListRecommendationFeedbackInput{}",
          "674:  output = &ListRecommendationFeedbackOutput{}",
          "675:  req = c.newRequest(op, input, output)",
          "676:  return",
          "709: func (c *CodeGuruReviewer) ListRecommendationFeedback(input *ListRecommendationFeedbackInput) (*ListRecommendationFeedbackOutput, error) {",
          "710:  req, out := c.ListRecommendationFeedbackRequest(input)",
          "711:  return out, req.Send()",
          "712: }",
          "723: func (c *CodeGuruReviewer) ListRecommendationFeedbackWithContext(ctx aws.Context, input *ListRecommendationFeedbackInput, opts ...request.Option) (*ListRecommendationFeedbackOutput, error) {",
          "724:  req, out := c.ListRecommendationFeedbackRequest(input)",
          "725:  req.SetContext(ctx)",
          "726:  req.ApplyOptions(opts...)",
          "727:  return out, req.Send()",
          "728: }",
          "747: func (c *CodeGuruReviewer) ListRecommendationFeedbackPages(input *ListRecommendationFeedbackInput, fn func(*ListRecommendationFeedbackOutput, bool) bool) error {",
          "748:  return c.ListRecommendationFeedbackPagesWithContext(aws.BackgroundContext(), input, fn)",
          "749: }",
          "758: func (c *CodeGuruReviewer) ListRecommendationFeedbackPagesWithContext(ctx aws.Context, input *ListRecommendationFeedbackInput, fn func(*ListRecommendationFeedbackOutput, bool) bool, opts ...request.Option) error {",
          "759:  p := request.Pagination{",
          "760:   NewRequest: func() (*request.Request, error) {",
          "761:    var inCpy *ListRecommendationFeedbackInput",
          "762:    if input != nil {",
          "763:     tmp := *input",
          "764:     inCpy = &tmp",
          "765:    }",
          "766:    req, _ := c.ListRecommendationFeedbackRequest(inCpy)",
          "767:    req.SetContext(ctx)",
          "768:    req.ApplyOptions(opts...)",
          "769:    return req, nil",
          "770:   },",
          "771:  }",
          "773:  for p.Next() {",
          "774:   if !fn(p.Page().(*ListRecommendationFeedbackOutput), !p.HasNextPage()) {",
          "775:    break",
          "776:   }",
          "777:  }",
          "779:  return p.Err()",
          "780: }",
          "782: const opListRecommendations = \"ListRecommendations\"",
          "808: func (c *CodeGuruReviewer) ListRecommendationsRequest(input *ListRecommendationsInput) (req *request.Request, output *ListRecommendationsOutput) {",
          "809:  op := &request.Operation{",
          "810:   Name:       opListRecommendations,",
          "811:   HTTPMethod: \"GET\",",
          "812:   HTTPPath:   \"/codereviews/{CodeReviewArn}/Recommendations\",",
          "813:   Paginator: &request.Paginator{",
          "814:    InputTokens:     []string{\"NextToken\"},",
          "815:    OutputTokens:    []string{\"NextToken\"},",
          "816:    LimitToken:      \"MaxResults\",",
          "817:    TruncationToken: \"\",",
          "818:   },",
          "819:  }",
          "821:  if input == nil {",
          "822:   input = &ListRecommendationsInput{}",
          "823:  }",
          "825:  output = &ListRecommendationsOutput{}",
          "826:  req = c.newRequest(op, input, output)",
          "827:  return",
          "828: }",
          "858: func (c *CodeGuruReviewer) ListRecommendations(input *ListRecommendationsInput) (*ListRecommendationsOutput, error) {",
          "859:  req, out := c.ListRecommendationsRequest(input)",
          "860:  return out, req.Send()",
          "861: }",
          "872: func (c *CodeGuruReviewer) ListRecommendationsWithContext(ctx aws.Context, input *ListRecommendationsInput, opts ...request.Option) (*ListRecommendationsOutput, error) {",
          "873:  req, out := c.ListRecommendationsRequest(input)",
          "874:  req.SetContext(ctx)",
          "875:  req.ApplyOptions(opts...)",
          "876:  return out, req.Send()",
          "877: }",
          "896: func (c *CodeGuruReviewer) ListRecommendationsPages(input *ListRecommendationsInput, fn func(*ListRecommendationsOutput, bool) bool) error {",
          "897:  return c.ListRecommendationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "898: }",
          "907: func (c *CodeGuruReviewer) ListRecommendationsPagesWithContext(ctx aws.Context, input *ListRecommendationsInput, fn func(*ListRecommendationsOutput, bool) bool, opts ...request.Option) error {",
          "908:  p := request.Pagination{",
          "909:   NewRequest: func() (*request.Request, error) {",
          "910:    var inCpy *ListRecommendationsInput",
          "911:    if input != nil {",
          "912:     tmp := *input",
          "913:     inCpy = &tmp",
          "914:    }",
          "915:    req, _ := c.ListRecommendationsRequest(inCpy)",
          "916:    req.SetContext(ctx)",
          "917:    req.ApplyOptions(opts...)",
          "918:    return req, nil",
          "919:   },",
          "920:  }",
          "922:  for p.Next() {",
          "923:   if !fn(p.Page().(*ListRecommendationsOutput), !p.HasNextPage()) {",
          "924:    break",
          "925:   }",
          "926:  }",
          "928:  return p.Err()",
          "929: }",
          "931: const opListRepositoryAssociations = \"ListRepositoryAssociations\"",
          "957: func (c *CodeGuruReviewer) ListRepositoryAssociationsRequest(input *ListRepositoryAssociationsInput) (req *request.Request, output *ListRepositoryAssociationsOutput) {",
          "958:  op := &request.Operation{",
          "959:   Name:       opListRepositoryAssociations,",
          "960:   HTTPMethod: \"GET\",",
          "961:   HTTPPath:   \"/associations\",",
          "962:   Paginator: &request.Paginator{",
          "963:    InputTokens:     []string{\"NextToken\"},",
          "964:    OutputTokens:    []string{\"NextToken\"},",
          "965:    LimitToken:      \"MaxResults\",",
          "966:    TruncationToken: \"\",",
          "967:   },",
          "968:  }",
          "970:  if input == nil {",
          "971:   input = &ListRepositoryAssociationsInput{}",
          "972:  }",
          "974:  output = &ListRepositoryAssociationsOutput{}",
          "975:  req = c.newRequest(op, input, output)",
          "976:  return",
          "977: }",
          "1003: func (c *CodeGuruReviewer) ListRepositoryAssociations(input *ListRepositoryAssociationsInput) (*ListRepositoryAssociationsOutput, error) {",
          "1004:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "1005:  return out, req.Send()",
          "1006: }",
          "1017: func (c *CodeGuruReviewer) ListRepositoryAssociationsWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, opts ...request.Option) (*ListRepositoryAssociationsOutput, error) {",
          "1018:  req, out := c.ListRepositoryAssociationsRequest(input)",
          "1019:  req.SetContext(ctx)",
          "1020:  req.ApplyOptions(opts...)",
          "1021:  return out, req.Send()",
          "1022: }",
          "1041: func (c *CodeGuruReviewer) ListRepositoryAssociationsPages(input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool) error {",
          "1042:  return c.ListRepositoryAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1043: }",
          "1052: func (c *CodeGuruReviewer) ListRepositoryAssociationsPagesWithContext(ctx aws.Context, input *ListRepositoryAssociationsInput, fn func(*ListRepositoryAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "1053:  p := request.Pagination{",
          "1054:   NewRequest: func() (*request.Request, error) {",
          "1055:    var inCpy *ListRepositoryAssociationsInput",
          "1056:    if input != nil {",
          "1057:     tmp := *input",
          "1058:     inCpy = &tmp",
          "1059:    }",
          "1060:    req, _ := c.ListRepositoryAssociationsRequest(inCpy)",
          "1061:    req.SetContext(ctx)",
          "1062:    req.ApplyOptions(opts...)",
          "1063:    return req, nil",
          "1064:   },",
          "1065:  }",
          "1067:  for p.Next() {",
          "1068:   if !fn(p.Page().(*ListRepositoryAssociationsOutput), !p.HasNextPage()) {",
          "1069:    break",
          "1070:   }",
          "1071:  }",
          "1073:  return p.Err()",
          "1074: }",
          "1076: const opPutRecommendationFeedback = \"PutRecommendationFeedback\"",
          "1102: func (c *CodeGuruReviewer) PutRecommendationFeedbackRequest(input *PutRecommendationFeedbackInput) (req *request.Request, output *PutRecommendationFeedbackOutput) {",
          "1103:  op := &request.Operation{",
          "1104:   Name:       opPutRecommendationFeedback,",
          "1105:   HTTPMethod: \"PUT\",",
          "1106:   HTTPPath:   \"/feedback\",",
          "1107:  }",
          "1109:  if input == nil {",
          "1110:   input = &PutRecommendationFeedbackInput{}",
          "1111:  }",
          "1113:  output = &PutRecommendationFeedbackOutput{}",
          "1114:  req = c.newRequest(op, input, output)",
          "1115:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1116:  return",
          "1117: }",
          "1148: func (c *CodeGuruReviewer) PutRecommendationFeedback(input *PutRecommendationFeedbackInput) (*PutRecommendationFeedbackOutput, error) {",
          "1149:  req, out := c.PutRecommendationFeedbackRequest(input)",
          "1150:  return out, req.Send()",
          "1151: }",
          "1162: func (c *CodeGuruReviewer) PutRecommendationFeedbackWithContext(ctx aws.Context, input *PutRecommendationFeedbackInput, opts ...request.Option) (*PutRecommendationFeedbackOutput, error) {",
          "1163:  req, out := c.PutRecommendationFeedbackRequest(input)",
          "1164:  req.SetContext(ctx)",
          "1165:  req.ApplyOptions(opts...)",
          "1166:  return out, req.Send()",
          "1167: }",
          "1170: type AccessDeniedException struct {",
          "1171:  _            struct{}                  `type:\"structure\"`",
          "1172:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "1174:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "1175: }",
          "1178: func (s AccessDeniedException) String() string {",
          "1179:  return awsutil.Prettify(s)",
          "1180: }",
          "1183: func (s AccessDeniedException) GoString() string {",
          "1184:  return s.String()",
          "1185: }",
          "1187: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "1188:  return &AccessDeniedException{",
          "1189:   RespMetadata: v,",
          "1190:  }",
          "1191: }",
          "1194: func (s *AccessDeniedException) Code() string {",
          "1195:  return \"AccessDeniedException\"",
          "1196: }",
          "1199: func (s *AccessDeniedException) Message() string {",
          "1200:  if s.Message_ != nil {",
          "1201:   return *s.Message_",
          "1202:  }",
          "1203:  return \"\"",
          "1204: }",
          "1207: func (s *AccessDeniedException) OrigErr() error {",
          "1208:  return nil",
          "1209: }",
          "1211: func (s *AccessDeniedException) Error() string {",
          "1212:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1213: }",
          "1216: func (s *AccessDeniedException) StatusCode() int {",
          "1217:  return s.RespMetadata.StatusCode",
          "1218: }",
          "1221: func (s *AccessDeniedException) RequestID() string {",
          "1222:  return s.RespMetadata.RequestID",
          "1223: }",
          "1225: type AssociateRepositoryInput struct {",
          "1226:  _ struct{} `type:\"structure\"`",
          "1253:  Repository *Repository `type:\"structure\" required:\"true\"`",
          "1254: }",
          "1257: func (s AssociateRepositoryInput) String() string {",
          "1258:  return awsutil.Prettify(s)",
          "1259: }",
          "1262: func (s AssociateRepositoryInput) GoString() string {",
          "1263:  return s.String()",
          "1264: }",
          "1267: func (s *AssociateRepositoryInput) Validate() error {",
          "1268:  invalidParams := request.ErrInvalidParams{Context: \"AssociateRepositoryInput\"}",
          "1269:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "1270:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "1271:  }",
          "1272:  if s.Repository == nil {",
          "1273:   invalidParams.Add(request.NewErrParamRequired(\"Repository\"))",
          "1274:  }",
          "1275:  if s.Repository != nil {",
          "1276:   if err := s.Repository.Validate(); err != nil {",
          "1277:    invalidParams.AddNested(\"Repository\", err.(request.ErrInvalidParams))",
          "1278:   }",
          "1279:  }",
          "1281:  if invalidParams.Len() > 0 {",
          "1282:   return invalidParams",
          "1283:  }",
          "1284:  return nil",
          "1285: }",
          "1288: func (s *AssociateRepositoryInput) SetClientRequestToken(v string) *AssociateRepositoryInput {",
          "1289:  s.ClientRequestToken = &v",
          "1290:  return s",
          "1291: }",
          "1294: func (s *AssociateRepositoryInput) SetRepository(v *Repository) *AssociateRepositoryInput {",
          "1295:  s.Repository = v",
          "1296:  return s",
          "1297: }",
          "1299: type AssociateRepositoryOutput struct {",
          "1300:  _ struct{} `type:\"structure\"`",
          "1303:  RepositoryAssociation *RepositoryAssociation `type:\"structure\"`",
          "1304: }",
          "1307: func (s AssociateRepositoryOutput) String() string {",
          "1308:  return awsutil.Prettify(s)",
          "1309: }",
          "1312: func (s AssociateRepositoryOutput) GoString() string {",
          "1313:  return s.String()",
          "1314: }",
          "1317: func (s *AssociateRepositoryOutput) SetRepositoryAssociation(v *RepositoryAssociation) *AssociateRepositoryOutput {",
          "1318:  s.RepositoryAssociation = v",
          "1319:  return s",
          "1320: }",
          "1323: type CodeCommitRepository struct {",
          "1324:  _ struct{} `type:\"structure\"`",
          "1329:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "1330: }",
          "1333: func (s CodeCommitRepository) String() string {",
          "1334:  return awsutil.Prettify(s)",
          "1335: }",
          "1338: func (s CodeCommitRepository) GoString() string {",
          "1339:  return s.String()",
          "1340: }",
          "1343: func (s *CodeCommitRepository) Validate() error {",
          "1344:  invalidParams := request.ErrInvalidParams{Context: \"CodeCommitRepository\"}",
          "1345:  if s.Name == nil {",
          "1346:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "1347:  }",
          "1348:  if s.Name != nil && len(*s.Name) < 1 {",
          "1349:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "1350:  }",
          "1352:  if invalidParams.Len() > 0 {",
          "1353:   return invalidParams",
          "1354:  }",
          "1355:  return nil",
          "1356: }",
          "1359: func (s *CodeCommitRepository) SetName(v string) *CodeCommitRepository {",
          "1360:  s.Name = &v",
          "1361:  return s",
          "1362: }",
          "1365: type CodeReview struct {",
          "1366:  _ struct{} `type:\"structure\"`",
          "1369:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "1372:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1376:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1379:  Metrics *Metrics `type:\"structure\"`",
          "1382:  Name *string `min:\"1\" type:\"string\"`",
          "1385:  Owner *string `min:\"1\" type:\"string\"`",
          "1388:  ProviderType *string `type:\"string\" enum:\"ProviderType\"`",
          "1391:  PullRequestId *string `min:\"1\" type:\"string\"`",
          "1394:  RepositoryName *string `min:\"1\" type:\"string\"`",
          "1397:  SourceCodeType *SourceCodeType `type:\"structure\"`",
          "1400:  State *string `type:\"string\" enum:\"JobState\"`",
          "1403:  StateReason *string `type:\"string\"`",
          "1406:  Type *string `type:\"string\" enum:\"Type\"`",
          "1407: }",
          "1410: func (s CodeReview) String() string {",
          "1411:  return awsutil.Prettify(s)",
          "1412: }",
          "1415: func (s CodeReview) GoString() string {",
          "1416:  return s.String()",
          "1417: }",
          "1420: func (s *CodeReview) SetCodeReviewArn(v string) *CodeReview {",
          "1421:  s.CodeReviewArn = &v",
          "1422:  return s",
          "1423: }",
          "1426: func (s *CodeReview) SetCreatedTimeStamp(v time.Time) *CodeReview {",
          "1427:  s.CreatedTimeStamp = &v",
          "1428:  return s",
          "1429: }",
          "1432: func (s *CodeReview) SetLastUpdatedTimeStamp(v time.Time) *CodeReview {",
          "1433:  s.LastUpdatedTimeStamp = &v",
          "1434:  return s",
          "1438: func (s *CodeReview) SetMetrics(v *Metrics) *CodeReview {",
          "1439:  s.Metrics = v",
          "1440:  return s",
          "1444: func (s *CodeReview) SetName(v string) *CodeReview {",
          "1445:  s.Name = &v",
          "1446:  return s",
          "1450: func (s *CodeReview) SetOwner(v string) *CodeReview {",
          "1451:  s.Owner = &v",
          "1452:  return s",
          "1453: }",
          "1456: func (s *CodeReview) SetProviderType(v string) *CodeReview {",
          "1457:  s.ProviderType = &v",
          "1458:  return s",
          "1462: func (s *CodeReview) SetPullRequestId(v string) *CodeReview {",
          "1463:  s.PullRequestId = &v",
          "1468: func (s *CodeReview) SetRepositoryName(v string) *CodeReview {",
          "1469:  s.RepositoryName = &v",
          "1474: func (s *CodeReview) SetSourceCodeType(v *SourceCodeType) *CodeReview {",
          "1475:  s.SourceCodeType = v",
          "1476:  return s",
          "1477: }",
          "1480: func (s *CodeReview) SetState(v string) *CodeReview {",
          "1481:  s.State = &v",
          "1482:  return s",
          "1483: }",
          "1486: func (s *CodeReview) SetStateReason(v string) *CodeReview {",
          "1487:  s.StateReason = &v",
          "1488:  return s",
          "1489: }",
          "1492: func (s *CodeReview) SetType(v string) *CodeReview {",
          "1493:  s.Type = &v",
          "1494:  return s",
          "1495: }",
          "1498: type CodeReviewSummary struct {",
          "1502:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "1505:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1509:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "1512:  MetricsSummary *MetricsSummary `type:\"structure\"`",
          "1515:  Name *string `min:\"1\" type:\"string\"`",
          "1518:  Owner *string `min:\"1\" type:\"string\"`",
          "1521:  ProviderType *string `type:\"string\" enum:\"ProviderType\"`",
          "1524:  PullRequestId *string `min:\"1\" type:\"string\"`",
          "1527:  RepositoryName *string `min:\"1\" type:\"string\"`",
          "1530:  State *string `type:\"string\" enum:\"JobState\"`",
          "1533:  Type *string `type:\"string\" enum:\"Type\"`",
          "1537: func (s CodeReviewSummary) String() string {",
          "1542: func (s CodeReviewSummary) GoString() string {",
          "1547: func (s *CodeReviewSummary) SetCodeReviewArn(v string) *CodeReviewSummary {",
          "1548:  s.CodeReviewArn = &v",
          "1553: func (s *CodeReviewSummary) SetCreatedTimeStamp(v time.Time) *CodeReviewSummary {",
          "1554:  s.CreatedTimeStamp = &v",
          "1555:  return s",
          "1556: }",
          "1559: func (s *CodeReviewSummary) SetLastUpdatedTimeStamp(v time.Time) *CodeReviewSummary {",
          "1560:  s.LastUpdatedTimeStamp = &v",
          "1561:  return s",
          "1562: }",
          "1565: func (s *CodeReviewSummary) SetMetricsSummary(v *MetricsSummary) *CodeReviewSummary {",
          "1566:  s.MetricsSummary = v",
          "1567:  return s",
          "1568: }",
          "1571: func (s *CodeReviewSummary) SetName(v string) *CodeReviewSummary {",
          "1572:  s.Name = &v",
          "1573:  return s",
          "1574: }",
          "1577: func (s *CodeReviewSummary) SetOwner(v string) *CodeReviewSummary {",
          "1578:  s.Owner = &v",
          "1579:  return s",
          "1580: }",
          "1583: func (s *CodeReviewSummary) SetProviderType(v string) *CodeReviewSummary {",
          "1584:  s.ProviderType = &v",
          "1585:  return s",
          "1586: }",
          "1589: func (s *CodeReviewSummary) SetPullRequestId(v string) *CodeReviewSummary {",
          "1590:  s.PullRequestId = &v",
          "1591:  return s",
          "1592: }",
          "1595: func (s *CodeReviewSummary) SetRepositoryName(v string) *CodeReviewSummary {",
          "1596:  s.RepositoryName = &v",
          "1597:  return s",
          "1598: }",
          "1601: func (s *CodeReviewSummary) SetState(v string) *CodeReviewSummary {",
          "1602:  s.State = &v",
          "1603:  return s",
          "1604: }",
          "1607: func (s *CodeReviewSummary) SetType(v string) *CodeReviewSummary {",
          "1608:  s.Type = &v",
          "1609:  return s",
          "1610: }",
          "1613: type CommitDiffSourceCodeType struct {",
          "1617:  DestinationCommit *string `min:\"6\" type:\"string\"`",
          "1620:  SourceCommit *string `min:\"6\" type:\"string\"`",
          "1624: func (s CommitDiffSourceCodeType) String() string {",
          "1629: func (s CommitDiffSourceCodeType) GoString() string {",
          "1634: func (s *CommitDiffSourceCodeType) SetDestinationCommit(v string) *CommitDiffSourceCodeType {",
          "1635:  s.DestinationCommit = &v",
          "1636:  return s",
          "1640: func (s *CommitDiffSourceCodeType) SetSourceCommit(v string) *CommitDiffSourceCodeType {",
          "1641:  s.SourceCommit = &v",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "678:  return \"\"",
          "679: }",
          "684: }",
          "688: }",
          "693: }",
          "698: }",
          "700: type DescribeRepositoryAssociationInput struct {",
          "701:  _ struct{} `type:\"structure\"`",
          "706:  AssociationArn *string `location:\"uri\" locationName:\"AssociationArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "682: func (s *ConflictException) OrigErr() error {",
          "683:  return nil",
          "686: func (s *ConflictException) Error() string {",
          "687:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "691: func (s *ConflictException) StatusCode() int {",
          "692:  return s.RespMetadata.StatusCode",
          "696: func (s *ConflictException) RequestID() string {",
          "697:  return s.RespMetadata.RequestID",
          "",
          "[Added Lines]",
          "1685: func (s *ConflictException) OrigErr() error {",
          "1686:  return nil",
          "1687: }",
          "1689: func (s *ConflictException) Error() string {",
          "1690:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1691: }",
          "1694: func (s *ConflictException) StatusCode() int {",
          "1695:  return s.RespMetadata.StatusCode",
          "1696: }",
          "1699: func (s *ConflictException) RequestID() string {",
          "1700:  return s.RespMetadata.RequestID",
          "1701: }",
          "1703: type DescribeCodeReviewInput struct {",
          "1704:  _ struct{} `type:\"structure\"`",
          "1709:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "1710: }",
          "1713: func (s DescribeCodeReviewInput) String() string {",
          "1714:  return awsutil.Prettify(s)",
          "1715: }",
          "1718: func (s DescribeCodeReviewInput) GoString() string {",
          "1719:  return s.String()",
          "1720: }",
          "1723: func (s *DescribeCodeReviewInput) Validate() error {",
          "1724:  invalidParams := request.ErrInvalidParams{Context: \"DescribeCodeReviewInput\"}",
          "1725:  if s.CodeReviewArn == nil {",
          "1726:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "1727:  }",
          "1728:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "1729:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "1730:  }",
          "1732:  if invalidParams.Len() > 0 {",
          "1733:   return invalidParams",
          "1734:  }",
          "1735:  return nil",
          "1736: }",
          "1739: func (s *DescribeCodeReviewInput) SetCodeReviewArn(v string) *DescribeCodeReviewInput {",
          "1740:  s.CodeReviewArn = &v",
          "1741:  return s",
          "1742: }",
          "1744: type DescribeCodeReviewOutput struct {",
          "1745:  _ struct{} `type:\"structure\"`",
          "1748:  CodeReview *CodeReview `type:\"structure\"`",
          "1749: }",
          "1752: func (s DescribeCodeReviewOutput) String() string {",
          "1753:  return awsutil.Prettify(s)",
          "1754: }",
          "1757: func (s DescribeCodeReviewOutput) GoString() string {",
          "1758:  return s.String()",
          "1759: }",
          "1762: func (s *DescribeCodeReviewOutput) SetCodeReview(v *CodeReview) *DescribeCodeReviewOutput {",
          "1763:  s.CodeReview = v",
          "1764:  return s",
          "1765: }",
          "1767: type DescribeRecommendationFeedbackInput struct {",
          "1768:  _ struct{} `type:\"structure\"`",
          "1773:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "1779:  RecommendationId *string `location:\"querystring\" locationName:\"RecommendationId\" min:\"1\" type:\"string\" required:\"true\"`",
          "1783:  UserId *string `location:\"querystring\" locationName:\"UserId\" min:\"1\" type:\"string\"`",
          "1784: }",
          "1787: func (s DescribeRecommendationFeedbackInput) String() string {",
          "1788:  return awsutil.Prettify(s)",
          "1789: }",
          "1792: func (s DescribeRecommendationFeedbackInput) GoString() string {",
          "1793:  return s.String()",
          "1794: }",
          "1797: func (s *DescribeRecommendationFeedbackInput) Validate() error {",
          "1798:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRecommendationFeedbackInput\"}",
          "1799:  if s.CodeReviewArn == nil {",
          "1800:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "1801:  }",
          "1802:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "1803:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "1804:  }",
          "1805:  if s.RecommendationId == nil {",
          "1806:   invalidParams.Add(request.NewErrParamRequired(\"RecommendationId\"))",
          "1807:  }",
          "1808:  if s.RecommendationId != nil && len(*s.RecommendationId) < 1 {",
          "1809:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationId\", 1))",
          "1810:  }",
          "1811:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "1812:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "1813:  }",
          "1815:  if invalidParams.Len() > 0 {",
          "1816:   return invalidParams",
          "1817:  }",
          "1818:  return nil",
          "1819: }",
          "1822: func (s *DescribeRecommendationFeedbackInput) SetCodeReviewArn(v string) *DescribeRecommendationFeedbackInput {",
          "1823:  s.CodeReviewArn = &v",
          "1824:  return s",
          "1825: }",
          "1828: func (s *DescribeRecommendationFeedbackInput) SetRecommendationId(v string) *DescribeRecommendationFeedbackInput {",
          "1829:  s.RecommendationId = &v",
          "1830:  return s",
          "1831: }",
          "1834: func (s *DescribeRecommendationFeedbackInput) SetUserId(v string) *DescribeRecommendationFeedbackInput {",
          "1835:  s.UserId = &v",
          "1836:  return s",
          "1837: }",
          "1839: type DescribeRecommendationFeedbackOutput struct {",
          "1840:  _ struct{} `type:\"structure\"`",
          "1843:  RecommendationFeedback *RecommendationFeedback `type:\"structure\"`",
          "1847: func (s DescribeRecommendationFeedbackOutput) String() string {",
          "1848:  return awsutil.Prettify(s)",
          "1852: func (s DescribeRecommendationFeedbackOutput) GoString() string {",
          "1853:  return s.String()",
          "1857: func (s *DescribeRecommendationFeedbackOutput) SetRecommendationFeedback(v *RecommendationFeedback) *DescribeRecommendationFeedbackOutput {",
          "1858:  s.RecommendationFeedback = v",
          "1859:  return s",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "881:  return s.RespMetadata.RequestID",
          "882: }",
          "884: type ListRepositoryAssociationsInput struct {",
          "885:  _ struct{} `type:\"structure\"`",
          "895:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "898:  Names []*string `location:\"querystring\" locationName:\"Name\" min:\"1\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2047: type ListCodeReviewsInput struct {",
          "2048:  _ struct{} `type:\"structure\"`",
          "2052:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2058:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2063:  ProviderTypes []*string `location:\"querystring\" locationName:\"ProviderTypes\" min:\"1\" type:\"list\"`",
          "2067:  RepositoryNames []*string `location:\"querystring\" locationName:\"RepositoryNames\" min:\"1\" type:\"list\"`",
          "2072:  States []*string `location:\"querystring\" locationName:\"States\" min:\"1\" type:\"list\"`",
          "2077:  Type *string `location:\"querystring\" locationName:\"Type\" type:\"string\" required:\"true\" enum:\"Type\"`",
          "2078: }",
          "2081: func (s ListCodeReviewsInput) String() string {",
          "2082:  return awsutil.Prettify(s)",
          "2083: }",
          "2086: func (s ListCodeReviewsInput) GoString() string {",
          "2087:  return s.String()",
          "2088: }",
          "2091: func (s *ListCodeReviewsInput) Validate() error {",
          "2092:  invalidParams := request.ErrInvalidParams{Context: \"ListCodeReviewsInput\"}",
          "2093:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2094:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2095:  }",
          "2096:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2097:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2098:  }",
          "2099:  if s.ProviderTypes != nil && len(s.ProviderTypes) < 1 {",
          "2100:   invalidParams.Add(request.NewErrParamMinLen(\"ProviderTypes\", 1))",
          "2101:  }",
          "2102:  if s.RepositoryNames != nil && len(s.RepositoryNames) < 1 {",
          "2103:   invalidParams.Add(request.NewErrParamMinLen(\"RepositoryNames\", 1))",
          "2104:  }",
          "2105:  if s.States != nil && len(s.States) < 1 {",
          "2106:   invalidParams.Add(request.NewErrParamMinLen(\"States\", 1))",
          "2107:  }",
          "2108:  if s.Type == nil {",
          "2109:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "2110:  }",
          "2112:  if invalidParams.Len() > 0 {",
          "2113:   return invalidParams",
          "2114:  }",
          "2115:  return nil",
          "2116: }",
          "2119: func (s *ListCodeReviewsInput) SetMaxResults(v int64) *ListCodeReviewsInput {",
          "2120:  s.MaxResults = &v",
          "2121:  return s",
          "2122: }",
          "2125: func (s *ListCodeReviewsInput) SetNextToken(v string) *ListCodeReviewsInput {",
          "2126:  s.NextToken = &v",
          "2127:  return s",
          "2128: }",
          "2131: func (s *ListCodeReviewsInput) SetProviderTypes(v []*string) *ListCodeReviewsInput {",
          "2132:  s.ProviderTypes = v",
          "2133:  return s",
          "2134: }",
          "2137: func (s *ListCodeReviewsInput) SetRepositoryNames(v []*string) *ListCodeReviewsInput {",
          "2138:  s.RepositoryNames = v",
          "2139:  return s",
          "2140: }",
          "2143: func (s *ListCodeReviewsInput) SetStates(v []*string) *ListCodeReviewsInput {",
          "2144:  s.States = v",
          "2145:  return s",
          "2146: }",
          "2149: func (s *ListCodeReviewsInput) SetType(v string) *ListCodeReviewsInput {",
          "2150:  s.Type = &v",
          "2151:  return s",
          "2152: }",
          "2154: type ListCodeReviewsOutput struct {",
          "2155:  _ struct{} `type:\"structure\"`",
          "2158:  CodeReviewSummaries []*CodeReviewSummary `type:\"list\"`",
          "2161:  NextToken *string `min:\"1\" type:\"string\"`",
          "2162: }",
          "2165: func (s ListCodeReviewsOutput) String() string {",
          "2166:  return awsutil.Prettify(s)",
          "2167: }",
          "2170: func (s ListCodeReviewsOutput) GoString() string {",
          "2171:  return s.String()",
          "2172: }",
          "2175: func (s *ListCodeReviewsOutput) SetCodeReviewSummaries(v []*CodeReviewSummary) *ListCodeReviewsOutput {",
          "2176:  s.CodeReviewSummaries = v",
          "2177:  return s",
          "2178: }",
          "2181: func (s *ListCodeReviewsOutput) SetNextToken(v string) *ListCodeReviewsOutput {",
          "2182:  s.NextToken = &v",
          "2183:  return s",
          "2184: }",
          "2186: type ListRecommendationFeedbackInput struct {",
          "2187:  _ struct{} `type:\"structure\"`",
          "2192:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2196:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2202:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2207:  RecommendationIds []*string `location:\"querystring\" locationName:\"RecommendationIds\" min:\"1\" type:\"list\"`",
          "2212:  UserIds []*string `location:\"querystring\" locationName:\"UserIds\" min:\"1\" type:\"list\"`",
          "2213: }",
          "2216: func (s ListRecommendationFeedbackInput) String() string {",
          "2217:  return awsutil.Prettify(s)",
          "2218: }",
          "2221: func (s ListRecommendationFeedbackInput) GoString() string {",
          "2222:  return s.String()",
          "2223: }",
          "2226: func (s *ListRecommendationFeedbackInput) Validate() error {",
          "2227:  invalidParams := request.ErrInvalidParams{Context: \"ListRecommendationFeedbackInput\"}",
          "2228:  if s.CodeReviewArn == nil {",
          "2229:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2230:  }",
          "2231:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2232:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2233:  }",
          "2234:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2235:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2236:  }",
          "2237:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2238:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2239:  }",
          "2240:  if s.RecommendationIds != nil && len(s.RecommendationIds) < 1 {",
          "2241:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationIds\", 1))",
          "2242:  }",
          "2243:  if s.UserIds != nil && len(s.UserIds) < 1 {",
          "2244:   invalidParams.Add(request.NewErrParamMinLen(\"UserIds\", 1))",
          "2245:  }",
          "2247:  if invalidParams.Len() > 0 {",
          "2248:   return invalidParams",
          "2249:  }",
          "2250:  return nil",
          "2251: }",
          "2254: func (s *ListRecommendationFeedbackInput) SetCodeReviewArn(v string) *ListRecommendationFeedbackInput {",
          "2255:  s.CodeReviewArn = &v",
          "2256:  return s",
          "2257: }",
          "2260: func (s *ListRecommendationFeedbackInput) SetMaxResults(v int64) *ListRecommendationFeedbackInput {",
          "2261:  s.MaxResults = &v",
          "2262:  return s",
          "2263: }",
          "2266: func (s *ListRecommendationFeedbackInput) SetNextToken(v string) *ListRecommendationFeedbackInput {",
          "2267:  s.NextToken = &v",
          "2268:  return s",
          "2269: }",
          "2272: func (s *ListRecommendationFeedbackInput) SetRecommendationIds(v []*string) *ListRecommendationFeedbackInput {",
          "2273:  s.RecommendationIds = v",
          "2274:  return s",
          "2275: }",
          "2278: func (s *ListRecommendationFeedbackInput) SetUserIds(v []*string) *ListRecommendationFeedbackInput {",
          "2279:  s.UserIds = v",
          "2280:  return s",
          "2281: }",
          "2283: type ListRecommendationFeedbackOutput struct {",
          "2284:  _ struct{} `type:\"structure\"`",
          "2290:  NextToken *string `min:\"1\" type:\"string\"`",
          "2293:  RecommendationFeedbackSummaries []*RecommendationFeedbackSummary `type:\"list\"`",
          "2294: }",
          "2297: func (s ListRecommendationFeedbackOutput) String() string {",
          "2298:  return awsutil.Prettify(s)",
          "2299: }",
          "2302: func (s ListRecommendationFeedbackOutput) GoString() string {",
          "2303:  return s.String()",
          "2304: }",
          "2307: func (s *ListRecommendationFeedbackOutput) SetNextToken(v string) *ListRecommendationFeedbackOutput {",
          "2308:  s.NextToken = &v",
          "2309:  return s",
          "2310: }",
          "2313: func (s *ListRecommendationFeedbackOutput) SetRecommendationFeedbackSummaries(v []*RecommendationFeedbackSummary) *ListRecommendationFeedbackOutput {",
          "2314:  s.RecommendationFeedbackSummaries = v",
          "2315:  return s",
          "2316: }",
          "2318: type ListRecommendationsInput struct {",
          "2319:  _ struct{} `type:\"structure\"`",
          "2324:  CodeReviewArn *string `location:\"uri\" locationName:\"CodeReviewArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2328:  MaxResults *int64 `location:\"querystring\" locationName:\"MaxResults\" min:\"1\" type:\"integer\"`",
          "2331:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"1\" type:\"string\"`",
          "2332: }",
          "2335: func (s ListRecommendationsInput) String() string {",
          "2336:  return awsutil.Prettify(s)",
          "2337: }",
          "2340: func (s ListRecommendationsInput) GoString() string {",
          "2341:  return s.String()",
          "2342: }",
          "2345: func (s *ListRecommendationsInput) Validate() error {",
          "2346:  invalidParams := request.ErrInvalidParams{Context: \"ListRecommendationsInput\"}",
          "2347:  if s.CodeReviewArn == nil {",
          "2348:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2349:  }",
          "2350:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2351:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2352:  }",
          "2353:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2354:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2355:  }",
          "2356:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "2357:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "2358:  }",
          "2360:  if invalidParams.Len() > 0 {",
          "2361:   return invalidParams",
          "2362:  }",
          "2363:  return nil",
          "2364: }",
          "2367: func (s *ListRecommendationsInput) SetCodeReviewArn(v string) *ListRecommendationsInput {",
          "2368:  s.CodeReviewArn = &v",
          "2369:  return s",
          "2370: }",
          "2373: func (s *ListRecommendationsInput) SetMaxResults(v int64) *ListRecommendationsInput {",
          "2374:  s.MaxResults = &v",
          "2375:  return s",
          "2376: }",
          "2379: func (s *ListRecommendationsInput) SetNextToken(v string) *ListRecommendationsInput {",
          "2380:  s.NextToken = &v",
          "2381:  return s",
          "2382: }",
          "2384: type ListRecommendationsOutput struct {",
          "2385:  _ struct{} `type:\"structure\"`",
          "2388:  NextToken *string `min:\"1\" type:\"string\"`",
          "2391:  RecommendationSummaries []*RecommendationSummary `type:\"list\"`",
          "2392: }",
          "2395: func (s ListRecommendationsOutput) String() string {",
          "2396:  return awsutil.Prettify(s)",
          "2397: }",
          "2400: func (s ListRecommendationsOutput) GoString() string {",
          "2401:  return s.String()",
          "2402: }",
          "2405: func (s *ListRecommendationsOutput) SetNextToken(v string) *ListRecommendationsOutput {",
          "2406:  s.NextToken = &v",
          "2407:  return s",
          "2408: }",
          "2411: func (s *ListRecommendationsOutput) SetRecommendationSummaries(v []*RecommendationSummary) *ListRecommendationsOutput {",
          "2412:  s.RecommendationSummaries = v",
          "2413:  return s",
          "2414: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1026:  return s",
          "1027: }",
          "1030: type NotFoundException struct {",
          "1031:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2562: type Metrics struct {",
          "2563:  _ struct{} `type:\"structure\"`",
          "2566:  FindingsCount *int64 `type:\"long\"`",
          "2569:  MeteredLinesOfCodeCount *int64 `type:\"long\"`",
          "2570: }",
          "2573: func (s Metrics) String() string {",
          "2574:  return awsutil.Prettify(s)",
          "2575: }",
          "2578: func (s Metrics) GoString() string {",
          "2579:  return s.String()",
          "2580: }",
          "2583: func (s *Metrics) SetFindingsCount(v int64) *Metrics {",
          "2584:  s.FindingsCount = &v",
          "2585:  return s",
          "2586: }",
          "2589: func (s *Metrics) SetMeteredLinesOfCodeCount(v int64) *Metrics {",
          "2590:  s.MeteredLinesOfCodeCount = &v",
          "2591:  return s",
          "2592: }",
          "2595: type MetricsSummary struct {",
          "2596:  _ struct{} `type:\"structure\"`",
          "2599:  FindingsCount *int64 `type:\"long\"`",
          "2602:  MeteredLinesOfCodeCount *int64 `type:\"long\"`",
          "2603: }",
          "2606: func (s MetricsSummary) String() string {",
          "2607:  return awsutil.Prettify(s)",
          "2608: }",
          "2611: func (s MetricsSummary) GoString() string {",
          "2612:  return s.String()",
          "2613: }",
          "2616: func (s *MetricsSummary) SetFindingsCount(v int64) *MetricsSummary {",
          "2617:  s.FindingsCount = &v",
          "2618:  return s",
          "2619: }",
          "2622: func (s *MetricsSummary) SetMeteredLinesOfCodeCount(v int64) *MetricsSummary {",
          "2623:  s.MeteredLinesOfCodeCount = &v",
          "2624:  return s",
          "2625: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1082:  return s.RespMetadata.RequestID",
          "1083: }",
          "1086: type Repository struct {",
          "1087:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2683: type PutRecommendationFeedbackInput struct {",
          "2684:  _ struct{} `type:\"structure\"`",
          "2689:  CodeReviewArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2695:  Reactions []*string `type:\"list\" required:\"true\"`",
          "2701:  RecommendationId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2702: }",
          "2705: func (s PutRecommendationFeedbackInput) String() string {",
          "2706:  return awsutil.Prettify(s)",
          "2707: }",
          "2710: func (s PutRecommendationFeedbackInput) GoString() string {",
          "2711:  return s.String()",
          "2712: }",
          "2715: func (s *PutRecommendationFeedbackInput) Validate() error {",
          "2716:  invalidParams := request.ErrInvalidParams{Context: \"PutRecommendationFeedbackInput\"}",
          "2717:  if s.CodeReviewArn == nil {",
          "2718:   invalidParams.Add(request.NewErrParamRequired(\"CodeReviewArn\"))",
          "2719:  }",
          "2720:  if s.CodeReviewArn != nil && len(*s.CodeReviewArn) < 1 {",
          "2721:   invalidParams.Add(request.NewErrParamMinLen(\"CodeReviewArn\", 1))",
          "2722:  }",
          "2723:  if s.Reactions == nil {",
          "2724:   invalidParams.Add(request.NewErrParamRequired(\"Reactions\"))",
          "2725:  }",
          "2726:  if s.RecommendationId == nil {",
          "2727:   invalidParams.Add(request.NewErrParamRequired(\"RecommendationId\"))",
          "2728:  }",
          "2729:  if s.RecommendationId != nil && len(*s.RecommendationId) < 1 {",
          "2730:   invalidParams.Add(request.NewErrParamMinLen(\"RecommendationId\", 1))",
          "2731:  }",
          "2733:  if invalidParams.Len() > 0 {",
          "2734:   return invalidParams",
          "2735:  }",
          "2736:  return nil",
          "2737: }",
          "2740: func (s *PutRecommendationFeedbackInput) SetCodeReviewArn(v string) *PutRecommendationFeedbackInput {",
          "2741:  s.CodeReviewArn = &v",
          "2742:  return s",
          "2743: }",
          "2746: func (s *PutRecommendationFeedbackInput) SetReactions(v []*string) *PutRecommendationFeedbackInput {",
          "2747:  s.Reactions = v",
          "2748:  return s",
          "2749: }",
          "2752: func (s *PutRecommendationFeedbackInput) SetRecommendationId(v string) *PutRecommendationFeedbackInput {",
          "2753:  s.RecommendationId = &v",
          "2754:  return s",
          "2755: }",
          "2757: type PutRecommendationFeedbackOutput struct {",
          "2758:  _ struct{} `type:\"structure\"`",
          "2759: }",
          "2762: func (s PutRecommendationFeedbackOutput) String() string {",
          "2763:  return awsutil.Prettify(s)",
          "2764: }",
          "2767: func (s PutRecommendationFeedbackOutput) GoString() string {",
          "2768:  return s.String()",
          "2769: }",
          "2772: type RecommendationFeedback struct {",
          "2773:  _ struct{} `type:\"structure\"`",
          "2776:  CodeReviewArn *string `min:\"1\" type:\"string\"`",
          "2779:  CreatedTimeStamp *time.Time `type:\"timestamp\"`",
          "2782:  LastUpdatedTimeStamp *time.Time `type:\"timestamp\"`",
          "2786:  Reactions []*string `type:\"list\"`",
          "2790:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2793:  UserId *string `min:\"1\" type:\"string\"`",
          "2794: }",
          "2797: func (s RecommendationFeedback) String() string {",
          "2798:  return awsutil.Prettify(s)",
          "2799: }",
          "2802: func (s RecommendationFeedback) GoString() string {",
          "2803:  return s.String()",
          "2804: }",
          "2807: func (s *RecommendationFeedback) SetCodeReviewArn(v string) *RecommendationFeedback {",
          "2808:  s.CodeReviewArn = &v",
          "2809:  return s",
          "2810: }",
          "2813: func (s *RecommendationFeedback) SetCreatedTimeStamp(v time.Time) *RecommendationFeedback {",
          "2814:  s.CreatedTimeStamp = &v",
          "2815:  return s",
          "2816: }",
          "2819: func (s *RecommendationFeedback) SetLastUpdatedTimeStamp(v time.Time) *RecommendationFeedback {",
          "2820:  s.LastUpdatedTimeStamp = &v",
          "2821:  return s",
          "2822: }",
          "2825: func (s *RecommendationFeedback) SetReactions(v []*string) *RecommendationFeedback {",
          "2826:  s.Reactions = v",
          "2827:  return s",
          "2828: }",
          "2831: func (s *RecommendationFeedback) SetRecommendationId(v string) *RecommendationFeedback {",
          "2832:  s.RecommendationId = &v",
          "2833:  return s",
          "2834: }",
          "2837: func (s *RecommendationFeedback) SetUserId(v string) *RecommendationFeedback {",
          "2838:  s.UserId = &v",
          "2839:  return s",
          "2840: }",
          "2843: type RecommendationFeedbackSummary struct {",
          "2844:  _ struct{} `type:\"structure\"`",
          "2847:  Reactions []*string `type:\"list\"`",
          "2851:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2854:  UserId *string `min:\"1\" type:\"string\"`",
          "2855: }",
          "2858: func (s RecommendationFeedbackSummary) String() string {",
          "2859:  return awsutil.Prettify(s)",
          "2860: }",
          "2863: func (s RecommendationFeedbackSummary) GoString() string {",
          "2864:  return s.String()",
          "2865: }",
          "2868: func (s *RecommendationFeedbackSummary) SetReactions(v []*string) *RecommendationFeedbackSummary {",
          "2869:  s.Reactions = v",
          "2870:  return s",
          "2871: }",
          "2874: func (s *RecommendationFeedbackSummary) SetRecommendationId(v string) *RecommendationFeedbackSummary {",
          "2875:  s.RecommendationId = &v",
          "2876:  return s",
          "2877: }",
          "2880: func (s *RecommendationFeedbackSummary) SetUserId(v string) *RecommendationFeedbackSummary {",
          "2881:  s.UserId = &v",
          "2882:  return s",
          "2883: }",
          "2886: type RecommendationSummary struct {",
          "2887:  _ struct{} `type:\"structure\"`",
          "2891:  Description *string `min:\"1\" type:\"string\"`",
          "2896:  EndLine *int64 `type:\"integer\"`",
          "2899:  FilePath *string `min:\"1\" type:\"string\"`",
          "2903:  RecommendationId *string `min:\"1\" type:\"string\"`",
          "2907:  StartLine *int64 `type:\"integer\"`",
          "2908: }",
          "2911: func (s RecommendationSummary) String() string {",
          "2912:  return awsutil.Prettify(s)",
          "2913: }",
          "2916: func (s RecommendationSummary) GoString() string {",
          "2917:  return s.String()",
          "2918: }",
          "2921: func (s *RecommendationSummary) SetDescription(v string) *RecommendationSummary {",
          "2922:  s.Description = &v",
          "2923:  return s",
          "2924: }",
          "2927: func (s *RecommendationSummary) SetEndLine(v int64) *RecommendationSummary {",
          "2928:  s.EndLine = &v",
          "2929:  return s",
          "2930: }",
          "2933: func (s *RecommendationSummary) SetFilePath(v string) *RecommendationSummary {",
          "2934:  s.FilePath = &v",
          "2935:  return s",
          "2936: }",
          "2939: func (s *RecommendationSummary) SetRecommendationId(v string) *RecommendationSummary {",
          "2940:  s.RecommendationId = &v",
          "2941:  return s",
          "2942: }",
          "2945: func (s *RecommendationSummary) SetStartLine(v int64) *RecommendationSummary {",
          "2946:  s.StartLine = &v",
          "2947:  return s",
          "2948: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1315:  return s",
          "1316: }",
          "1319: type ThrottlingException struct {",
          "1320:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3183: type ResourceNotFoundException struct {",
          "3184:  _            struct{}                  `type:\"structure\"`",
          "3185:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3187:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3188: }",
          "3191: func (s ResourceNotFoundException) String() string {",
          "3192:  return awsutil.Prettify(s)",
          "3193: }",
          "3196: func (s ResourceNotFoundException) GoString() string {",
          "3197:  return s.String()",
          "3198: }",
          "3200: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "3201:  return &ResourceNotFoundException{",
          "3202:   RespMetadata: v,",
          "3203:  }",
          "3204: }",
          "3207: func (s *ResourceNotFoundException) Code() string {",
          "3208:  return \"ResourceNotFoundException\"",
          "3209: }",
          "3212: func (s *ResourceNotFoundException) Message() string {",
          "3213:  if s.Message_ != nil {",
          "3214:   return *s.Message_",
          "3215:  }",
          "3216:  return \"\"",
          "3217: }",
          "3220: func (s *ResourceNotFoundException) OrigErr() error {",
          "3221:  return nil",
          "3222: }",
          "3224: func (s *ResourceNotFoundException) Error() string {",
          "3225:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3226: }",
          "3229: func (s *ResourceNotFoundException) StatusCode() int {",
          "3230:  return s.RespMetadata.StatusCode",
          "3231: }",
          "3234: func (s *ResourceNotFoundException) RequestID() string {",
          "3235:  return s.RespMetadata.RequestID",
          "3236: }",
          "3239: type SourceCodeType struct {",
          "3240:  _ struct{} `type:\"structure\"`",
          "3243:  CommitDiff *CommitDiffSourceCodeType `type:\"structure\"`",
          "3244: }",
          "3247: func (s SourceCodeType) String() string {",
          "3248:  return awsutil.Prettify(s)",
          "3249: }",
          "3252: func (s SourceCodeType) GoString() string {",
          "3253:  return s.String()",
          "3254: }",
          "3257: func (s *SourceCodeType) SetCommitDiff(v *CommitDiffSourceCodeType) *SourceCodeType {",
          "3258:  s.CommitDiff = v",
          "3259:  return s",
          "3260: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1427:  return s.RespMetadata.RequestID",
          "1428: }",
          "1430: const (",
          "1432:  ProviderTypeCodeCommit = \"CodeCommit\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3374: const (",
          "3376:  JobStateCompleted = \"Completed\"",
          "3379:  JobStatePending = \"Pending\"",
          "3382:  JobStateFailed = \"Failed\"",
          "3385:  JobStateDeleting = \"Deleting\"",
          "3386: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1435:  ProviderTypeGitHub = \"GitHub\"",
          "1436: )",
          "1438: const (",
          "1440:  RepositoryAssociationStateAssociated = \"Associated\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3396: const (",
          "3398:  ReactionThumbsUp = \"ThumbsUp\"",
          "3401:  ReactionThumbsDown = \"ThumbsDown\"",
          "3402: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1449:  RepositoryAssociationStateDisassociating = \"Disassociating\"",
          "1450: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3418: const (",
          "3420:  TypePullRequest = \"PullRequest\"",
          "3421: )",
          "",
          "---------------"
        ],
        "service/codegurureviewer/codegururevieweriface/interface.go||service/codegurureviewer/codegururevieweriface/interface.go": [
          "File: service/codegurureviewer/codegururevieweriface/interface.go -> service/codegurureviewer/codegururevieweriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  AssociateRepositoryWithContext(aws.Context, *codegurureviewer.AssociateRepositoryInput, ...request.Option) (*codegurureviewer.AssociateRepositoryOutput, error)",
          "65:  AssociateRepositoryRequest(*codegurureviewer.AssociateRepositoryInput) (*request.Request, *codegurureviewer.AssociateRepositoryOutput)",
          "67:  DescribeRepositoryAssociation(*codegurureviewer.DescribeRepositoryAssociationInput) (*codegurureviewer.DescribeRepositoryAssociationOutput, error)",
          "68:  DescribeRepositoryAssociationWithContext(aws.Context, *codegurureviewer.DescribeRepositoryAssociationInput, ...request.Option) (*codegurureviewer.DescribeRepositoryAssociationOutput, error)",
          "69:  DescribeRepositoryAssociationRequest(*codegurureviewer.DescribeRepositoryAssociationInput) (*request.Request, *codegurureviewer.DescribeRepositoryAssociationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  DescribeCodeReview(*codegurureviewer.DescribeCodeReviewInput) (*codegurureviewer.DescribeCodeReviewOutput, error)",
          "68:  DescribeCodeReviewWithContext(aws.Context, *codegurureviewer.DescribeCodeReviewInput, ...request.Option) (*codegurureviewer.DescribeCodeReviewOutput, error)",
          "69:  DescribeCodeReviewRequest(*codegurureviewer.DescribeCodeReviewInput) (*request.Request, *codegurureviewer.DescribeCodeReviewOutput)",
          "71:  DescribeRecommendationFeedback(*codegurureviewer.DescribeRecommendationFeedbackInput) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error)",
          "72:  DescribeRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.DescribeRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error)",
          "73:  DescribeRecommendationFeedbackRequest(*codegurureviewer.DescribeRecommendationFeedbackInput) (*request.Request, *codegurureviewer.DescribeRecommendationFeedbackOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  DisassociateRepositoryWithContext(aws.Context, *codegurureviewer.DisassociateRepositoryInput, ...request.Option) (*codegurureviewer.DisassociateRepositoryOutput, error)",
          "73:  DisassociateRepositoryRequest(*codegurureviewer.DisassociateRepositoryInput) (*request.Request, *codegurureviewer.DisassociateRepositoryOutput)",
          "75:  ListRepositoryAssociations(*codegurureviewer.ListRepositoryAssociationsInput) (*codegurureviewer.ListRepositoryAssociationsOutput, error)",
          "76:  ListRepositoryAssociationsWithContext(aws.Context, *codegurureviewer.ListRepositoryAssociationsInput, ...request.Option) (*codegurureviewer.ListRepositoryAssociationsOutput, error)",
          "77:  ListRepositoryAssociationsRequest(*codegurureviewer.ListRepositoryAssociationsInput) (*request.Request, *codegurureviewer.ListRepositoryAssociationsOutput)",
          "79:  ListRepositoryAssociationsPages(*codegurureviewer.ListRepositoryAssociationsInput, func(*codegurureviewer.ListRepositoryAssociationsOutput, bool) bool) error",
          "80:  ListRepositoryAssociationsPagesWithContext(aws.Context, *codegurureviewer.ListRepositoryAssociationsInput, func(*codegurureviewer.ListRepositoryAssociationsOutput, bool) bool, ...request.Option) error",
          "81: }",
          "83: var _ CodeGuruReviewerAPI = (*codegurureviewer.CodeGuruReviewer)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  ListCodeReviews(*codegurureviewer.ListCodeReviewsInput) (*codegurureviewer.ListCodeReviewsOutput, error)",
          "84:  ListCodeReviewsWithContext(aws.Context, *codegurureviewer.ListCodeReviewsInput, ...request.Option) (*codegurureviewer.ListCodeReviewsOutput, error)",
          "85:  ListCodeReviewsRequest(*codegurureviewer.ListCodeReviewsInput) (*request.Request, *codegurureviewer.ListCodeReviewsOutput)",
          "87:  ListCodeReviewsPages(*codegurureviewer.ListCodeReviewsInput, func(*codegurureviewer.ListCodeReviewsOutput, bool) bool) error",
          "88:  ListCodeReviewsPagesWithContext(aws.Context, *codegurureviewer.ListCodeReviewsInput, func(*codegurureviewer.ListCodeReviewsOutput, bool) bool, ...request.Option) error",
          "90:  ListRecommendationFeedback(*codegurureviewer.ListRecommendationFeedbackInput) (*codegurureviewer.ListRecommendationFeedbackOutput, error)",
          "91:  ListRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.ListRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.ListRecommendationFeedbackOutput, error)",
          "92:  ListRecommendationFeedbackRequest(*codegurureviewer.ListRecommendationFeedbackInput) (*request.Request, *codegurureviewer.ListRecommendationFeedbackOutput)",
          "94:  ListRecommendationFeedbackPages(*codegurureviewer.ListRecommendationFeedbackInput, func(*codegurureviewer.ListRecommendationFeedbackOutput, bool) bool) error",
          "95:  ListRecommendationFeedbackPagesWithContext(aws.Context, *codegurureviewer.ListRecommendationFeedbackInput, func(*codegurureviewer.ListRecommendationFeedbackOutput, bool) bool, ...request.Option) error",
          "97:  ListRecommendations(*codegurureviewer.ListRecommendationsInput) (*codegurureviewer.ListRecommendationsOutput, error)",
          "98:  ListRecommendationsWithContext(aws.Context, *codegurureviewer.ListRecommendationsInput, ...request.Option) (*codegurureviewer.ListRecommendationsOutput, error)",
          "99:  ListRecommendationsRequest(*codegurureviewer.ListRecommendationsInput) (*request.Request, *codegurureviewer.ListRecommendationsOutput)",
          "101:  ListRecommendationsPages(*codegurureviewer.ListRecommendationsInput, func(*codegurureviewer.ListRecommendationsOutput, bool) bool) error",
          "102:  ListRecommendationsPagesWithContext(aws.Context, *codegurureviewer.ListRecommendationsInput, func(*codegurureviewer.ListRecommendationsOutput, bool) bool, ...request.Option) error",
          "111:  PutRecommendationFeedback(*codegurureviewer.PutRecommendationFeedbackInput) (*codegurureviewer.PutRecommendationFeedbackOutput, error)",
          "112:  PutRecommendationFeedbackWithContext(aws.Context, *codegurureviewer.PutRecommendationFeedbackInput, ...request.Option) (*codegurureviewer.PutRecommendationFeedbackOutput, error)",
          "113:  PutRecommendationFeedbackRequest(*codegurureviewer.PutRecommendationFeedbackInput) (*request.Request, *codegurureviewer.PutRecommendationFeedbackOutput)",
          "",
          "---------------"
        ],
        "service/codegurureviewer/errors.go||service/codegurureviewer/errors.go": [
          "File: service/codegurureviewer/errors.go -> service/codegurureviewer/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  ErrCodeNotFoundException = \"NotFoundException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: )",
          "50: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "57: }",
          "",
          "[Removed Lines]",
          "51:  \"AccessDeniedException\":   newErrorAccessDeniedException,",
          "52:  \"ConflictException\":       newErrorConflictException,",
          "53:  \"InternalServerException\": newErrorInternalServerException,",
          "54:  \"NotFoundException\":       newErrorNotFoundException,",
          "55:  \"ThrottlingException\":     newErrorThrottlingException,",
          "56:  \"ValidationException\":     newErrorValidationException,",
          "",
          "[Added Lines]",
          "57:  \"AccessDeniedException\":     newErrorAccessDeniedException,",
          "58:  \"ConflictException\":         newErrorConflictException,",
          "59:  \"InternalServerException\":   newErrorInternalServerException,",
          "60:  \"NotFoundException\":         newErrorNotFoundException,",
          "61:  \"ResourceNotFoundException\": newErrorResourceNotFoundException,",
          "62:  \"ThrottlingException\":       newErrorThrottlingException,",
          "63:  \"ValidationException\":       newErrorValidationException,",
          "",
          "---------------"
        ],
        "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go": [
          "File: service/elasticsearchservice/api.go -> service/elasticsearchservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8222:  NewVersion *string `type:\"string\"`",
          "8226:  UpdateAvailable *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8226:  OptionalDeployment *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8270:  return s",
          "8271: }",
          "8274: func (s *ServiceSoftwareOptions) SetUpdateAvailable(v bool) *ServiceSoftwareOptions {",
          "8275:  s.UpdateAvailable = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8278: func (s *ServiceSoftwareOptions) SetOptionalDeployment(v bool) *ServiceSoftwareOptions {",
          "8279:  s.OptionalDeployment = &v",
          "8280:  return s",
          "8281: }",
          "",
          "---------------"
        ],
        "service/fms/api.go||service/fms/api.go": [
          "File: service/fms/api.go -> service/fms/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4180: const (",
          "4182:  CustomerPolicyScopeIdTypeAccount = \"ACCOUNT\"",
          "4183: )",
          "4185: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4209:  CustomerPolicyScopeIdTypeOrgUnit = \"ORG_UNIT\"",
          "",
          "---------------"
        ],
        "service/redshift/api.go||service/redshift/api.go": [
          "File: service/redshift/api.go -> service/redshift/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1983:  return out, req.Send()",
          "1984: }",
          "1986: const opDeleteCluster = \"DeleteCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1986: const opCreateUsageLimit = \"CreateUsageLimit\"",
          "2012: func (c *Redshift) CreateUsageLimitRequest(input *CreateUsageLimitInput) (req *request.Request, output *CreateUsageLimitOutput) {",
          "2013:  op := &request.Operation{",
          "2014:   Name:       opCreateUsageLimit,",
          "2015:   HTTPMethod: \"POST\",",
          "2016:   HTTPPath:   \"/\",",
          "2017:  }",
          "2019:  if input == nil {",
          "2020:   input = &CreateUsageLimitInput{}",
          "2021:  }",
          "2023:  output = &CreateUsageLimitOutput{}",
          "2024:  req = c.newRequest(op, input, output)",
          "2025:  return",
          "2026: }",
          "2063: func (c *Redshift) CreateUsageLimit(input *CreateUsageLimitInput) (*CreateUsageLimitOutput, error) {",
          "2064:  req, out := c.CreateUsageLimitRequest(input)",
          "2065:  return out, req.Send()",
          "2066: }",
          "2077: func (c *Redshift) CreateUsageLimitWithContext(ctx aws.Context, input *CreateUsageLimitInput, opts ...request.Option) (*CreateUsageLimitOutput, error) {",
          "2078:  req, out := c.CreateUsageLimitRequest(input)",
          "2079:  req.SetContext(ctx)",
          "2080:  req.ApplyOptions(opts...)",
          "2081:  return out, req.Send()",
          "2082: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3038:  return out, req.Send()",
          "3039: }",
          "3041: const opDescribeAccountAttributes = \"DescribeAccountAttributes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3139: const opDeleteUsageLimit = \"DeleteUsageLimit\"",
          "3165: func (c *Redshift) DeleteUsageLimitRequest(input *DeleteUsageLimitInput) (req *request.Request, output *DeleteUsageLimitOutput) {",
          "3166:  op := &request.Operation{",
          "3167:   Name:       opDeleteUsageLimit,",
          "3168:   HTTPMethod: \"POST\",",
          "3169:   HTTPPath:   \"/\",",
          "3170:  }",
          "3172:  if input == nil {",
          "3173:   input = &DeleteUsageLimitInput{}",
          "3174:  }",
          "3176:  output = &DeleteUsageLimitOutput{}",
          "3177:  req = c.newRequest(op, input, output)",
          "3178:  req.Handlers.Unmarshal.Swap(query.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3179:  return",
          "3180: }",
          "3201: func (c *Redshift) DeleteUsageLimit(input *DeleteUsageLimitInput) (*DeleteUsageLimitOutput, error) {",
          "3202:  req, out := c.DeleteUsageLimitRequest(input)",
          "3203:  return out, req.Send()",
          "3204: }",
          "3215: func (c *Redshift) DeleteUsageLimitWithContext(ctx aws.Context, input *DeleteUsageLimitInput, opts ...request.Option) (*DeleteUsageLimitOutput, error) {",
          "3216:  req, out := c.DeleteUsageLimitRequest(input)",
          "3217:  req.SetContext(ctx)",
          "3218:  req.ApplyOptions(opts...)",
          "3219:  return out, req.Send()",
          "3220: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6459:  return out, req.Send()",
          "6460: }",
          "6462: const opDisableLogging = \"DisableLogging\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6643: const opDescribeUsageLimits = \"DescribeUsageLimits\"",
          "6669: func (c *Redshift) DescribeUsageLimitsRequest(input *DescribeUsageLimitsInput) (req *request.Request, output *DescribeUsageLimitsOutput) {",
          "6670:  op := &request.Operation{",
          "6671:   Name:       opDescribeUsageLimits,",
          "6672:   HTTPMethod: \"POST\",",
          "6673:   HTTPPath:   \"/\",",
          "6674:   Paginator: &request.Paginator{",
          "6675:    InputTokens:     []string{\"Marker\"},",
          "6676:    OutputTokens:    []string{\"Marker\"},",
          "6677:    LimitToken:      \"MaxRecords\",",
          "6678:    TruncationToken: \"\",",
          "6679:   },",
          "6680:  }",
          "6682:  if input == nil {",
          "6683:   input = &DescribeUsageLimitsInput{}",
          "6684:  }",
          "6686:  output = &DescribeUsageLimitsOutput{}",
          "6687:  req = c.newRequest(op, input, output)",
          "6688:  return",
          "6689: }",
          "6724: func (c *Redshift) DescribeUsageLimits(input *DescribeUsageLimitsInput) (*DescribeUsageLimitsOutput, error) {",
          "6725:  req, out := c.DescribeUsageLimitsRequest(input)",
          "6726:  return out, req.Send()",
          "6727: }",
          "6738: func (c *Redshift) DescribeUsageLimitsWithContext(ctx aws.Context, input *DescribeUsageLimitsInput, opts ...request.Option) (*DescribeUsageLimitsOutput, error) {",
          "6739:  req, out := c.DescribeUsageLimitsRequest(input)",
          "6740:  req.SetContext(ctx)",
          "6741:  req.ApplyOptions(opts...)",
          "6742:  return out, req.Send()",
          "6743: }",
          "6762: func (c *Redshift) DescribeUsageLimitsPages(input *DescribeUsageLimitsInput, fn func(*DescribeUsageLimitsOutput, bool) bool) error {",
          "6763:  return c.DescribeUsageLimitsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "6764: }",
          "6773: func (c *Redshift) DescribeUsageLimitsPagesWithContext(ctx aws.Context, input *DescribeUsageLimitsInput, fn func(*DescribeUsageLimitsOutput, bool) bool, opts ...request.Option) error {",
          "6774:  p := request.Pagination{",
          "6775:   NewRequest: func() (*request.Request, error) {",
          "6776:    var inCpy *DescribeUsageLimitsInput",
          "6777:    if input != nil {",
          "6778:     tmp := *input",
          "6779:     inCpy = &tmp",
          "6780:    }",
          "6781:    req, _ := c.DescribeUsageLimitsRequest(inCpy)",
          "6782:    req.SetContext(ctx)",
          "6783:    req.ApplyOptions(opts...)",
          "6784:    return req, nil",
          "6785:   },",
          "6786:  }",
          "6788:  for p.Next() {",
          "6789:   if !fn(p.Page().(*DescribeUsageLimitsOutput), !p.HasNextPage()) {",
          "6790:    break",
          "6791:   }",
          "6792:  }",
          "6794:  return p.Err()",
          "6795: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8205:  return out, req.Send()",
          "8206: }",
          "8235:  op := &request.Operation{",
          "8237:   HTTPMethod: \"POST\",",
          "8238:   HTTPPath:   \"/\",",
          "8239:  }",
          "8241:  if input == nil {",
          "8243:  }",
          "8246:  req = c.newRequest(op, input, output)",
          "8247:  return",
          "8248: }",
          "",
          "[Removed Lines]",
          "8208: const opPauseCluster = \"PauseCluster\"",
          "8234: func (c *Redshift) PauseClusterRequest(input *PauseClusterInput) (req *request.Request, output *PauseClusterOutput) {",
          "8236:   Name:       opPauseCluster,",
          "8242:   input = &PauseClusterInput{}",
          "8245:  output = &PauseClusterOutput{}",
          "",
          "[Added Lines]",
          "8543: const opModifyUsageLimit = \"ModifyUsageLimit\"",
          "8569: func (c *Redshift) ModifyUsageLimitRequest(input *ModifyUsageLimitInput) (req *request.Request, output *ModifyUsageLimitOutput) {",
          "8571:   Name:       opModifyUsageLimit,",
          "8577:   input = &ModifyUsageLimitInput{}",
          "8580:  output = &ModifyUsageLimitOutput{}",
          "8608: func (c *Redshift) ModifyUsageLimit(input *ModifyUsageLimitInput) (*ModifyUsageLimitOutput, error) {",
          "8609:  req, out := c.ModifyUsageLimitRequest(input)",
          "8610:  return out, req.Send()",
          "8611: }",
          "8622: func (c *Redshift) ModifyUsageLimitWithContext(ctx aws.Context, input *ModifyUsageLimitInput, opts ...request.Option) (*ModifyUsageLimitOutput, error) {",
          "8623:  req, out := c.ModifyUsageLimitRequest(input)",
          "8624:  req.SetContext(ctx)",
          "8625:  req.ApplyOptions(opts...)",
          "8626:  return out, req.Send()",
          "8627: }",
          "8629: const opPauseCluster = \"PauseCluster\"",
          "8655: func (c *Redshift) PauseClusterRequest(input *PauseClusterInput) (req *request.Request, output *PauseClusterOutput) {",
          "8656:  op := &request.Operation{",
          "8657:   Name:       opPauseCluster,",
          "8658:   HTTPMethod: \"POST\",",
          "8659:   HTTPPath:   \"/\",",
          "8660:  }",
          "8662:  if input == nil {",
          "8663:   input = &PauseClusterInput{}",
          "8664:  }",
          "8666:  output = &PauseClusterOutput{}",
          "8667:  req = c.newRequest(op, input, output)",
          "8668:  return",
          "8669: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "13285:  return s.String()",
          "13286: }",
          "13290: type DataTransferProgress struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13709: type CreateUsageLimitInput struct {",
          "13710:  _ struct{} `type:\"structure\"`",
          "13716:  Amount *int64 `type:\"long\" required:\"true\"`",
          "13720:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "13725:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "13730:  FeatureType *string `type:\"string\" required:\"true\" enum:\"UsageLimitFeatureType\"`",
          "13738:  LimitType *string `type:\"string\" required:\"true\" enum:\"UsageLimitLimitType\"`",
          "13742:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "13745:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "13746: }",
          "13749: func (s CreateUsageLimitInput) String() string {",
          "13750:  return awsutil.Prettify(s)",
          "13751: }",
          "13754: func (s CreateUsageLimitInput) GoString() string {",
          "13755:  return s.String()",
          "13756: }",
          "13759: func (s *CreateUsageLimitInput) Validate() error {",
          "13760:  invalidParams := request.ErrInvalidParams{Context: \"CreateUsageLimitInput\"}",
          "13761:  if s.Amount == nil {",
          "13762:   invalidParams.Add(request.NewErrParamRequired(\"Amount\"))",
          "13763:  }",
          "13764:  if s.ClusterIdentifier == nil {",
          "13765:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "13766:  }",
          "13767:  if s.FeatureType == nil {",
          "13768:   invalidParams.Add(request.NewErrParamRequired(\"FeatureType\"))",
          "13769:  }",
          "13770:  if s.LimitType == nil {",
          "13771:   invalidParams.Add(request.NewErrParamRequired(\"LimitType\"))",
          "13772:  }",
          "13774:  if invalidParams.Len() > 0 {",
          "13775:   return invalidParams",
          "13776:  }",
          "13777:  return nil",
          "13778: }",
          "13781: func (s *CreateUsageLimitInput) SetAmount(v int64) *CreateUsageLimitInput {",
          "13782:  s.Amount = &v",
          "13783:  return s",
          "13784: }",
          "13787: func (s *CreateUsageLimitInput) SetBreachAction(v string) *CreateUsageLimitInput {",
          "13788:  s.BreachAction = &v",
          "13789:  return s",
          "13790: }",
          "13793: func (s *CreateUsageLimitInput) SetClusterIdentifier(v string) *CreateUsageLimitInput {",
          "13794:  s.ClusterIdentifier = &v",
          "13795:  return s",
          "13796: }",
          "13799: func (s *CreateUsageLimitInput) SetFeatureType(v string) *CreateUsageLimitInput {",
          "13800:  s.FeatureType = &v",
          "13801:  return s",
          "13802: }",
          "13805: func (s *CreateUsageLimitInput) SetLimitType(v string) *CreateUsageLimitInput {",
          "13806:  s.LimitType = &v",
          "13807:  return s",
          "13808: }",
          "13811: func (s *CreateUsageLimitInput) SetPeriod(v string) *CreateUsageLimitInput {",
          "13812:  s.Period = &v",
          "13813:  return s",
          "13814: }",
          "13817: func (s *CreateUsageLimitInput) SetTags(v []*Tag) *CreateUsageLimitInput {",
          "13818:  s.Tags = v",
          "13819:  return s",
          "13820: }",
          "13823: type CreateUsageLimitOutput struct {",
          "13824:  _ struct{} `type:\"structure\"`",
          "13828:  Amount *int64 `type:\"long\"`",
          "13838:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "13841:  ClusterIdentifier *string `type:\"string\"`",
          "13844:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "13848:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "13852:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "13855:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "13858:  UsageLimitId *string `type:\"string\"`",
          "13859: }",
          "13862: func (s CreateUsageLimitOutput) String() string {",
          "13863:  return awsutil.Prettify(s)",
          "13864: }",
          "13867: func (s CreateUsageLimitOutput) GoString() string {",
          "13868:  return s.String()",
          "13869: }",
          "13872: func (s *CreateUsageLimitOutput) SetAmount(v int64) *CreateUsageLimitOutput {",
          "13873:  s.Amount = &v",
          "13874:  return s",
          "13875: }",
          "13878: func (s *CreateUsageLimitOutput) SetBreachAction(v string) *CreateUsageLimitOutput {",
          "13879:  s.BreachAction = &v",
          "13880:  return s",
          "13881: }",
          "13884: func (s *CreateUsageLimitOutput) SetClusterIdentifier(v string) *CreateUsageLimitOutput {",
          "13885:  s.ClusterIdentifier = &v",
          "13886:  return s",
          "13887: }",
          "13890: func (s *CreateUsageLimitOutput) SetFeatureType(v string) *CreateUsageLimitOutput {",
          "13891:  s.FeatureType = &v",
          "13892:  return s",
          "13893: }",
          "13896: func (s *CreateUsageLimitOutput) SetLimitType(v string) *CreateUsageLimitOutput {",
          "13897:  s.LimitType = &v",
          "13898:  return s",
          "13899: }",
          "13902: func (s *CreateUsageLimitOutput) SetPeriod(v string) *CreateUsageLimitOutput {",
          "13903:  s.Period = &v",
          "13904:  return s",
          "13905: }",
          "13908: func (s *CreateUsageLimitOutput) SetTags(v []*Tag) *CreateUsageLimitOutput {",
          "13909:  s.Tags = v",
          "13910:  return s",
          "13911: }",
          "13914: func (s *CreateUsageLimitOutput) SetUsageLimitId(v string) *CreateUsageLimitOutput {",
          "13915:  s.UsageLimitId = &v",
          "13916:  return s",
          "13917: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "14239:  return s.String()",
          "14240: }",
          "14242: type DescribeAccountAttributesInput struct {",
          "14243:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14873: type DeleteUsageLimitInput struct {",
          "14874:  _ struct{} `type:\"structure\"`",
          "14879:  UsageLimitId *string `type:\"string\" required:\"true\"`",
          "14880: }",
          "14883: func (s DeleteUsageLimitInput) String() string {",
          "14884:  return awsutil.Prettify(s)",
          "14885: }",
          "14888: func (s DeleteUsageLimitInput) GoString() string {",
          "14889:  return s.String()",
          "14890: }",
          "14893: func (s *DeleteUsageLimitInput) Validate() error {",
          "14894:  invalidParams := request.ErrInvalidParams{Context: \"DeleteUsageLimitInput\"}",
          "14895:  if s.UsageLimitId == nil {",
          "14896:   invalidParams.Add(request.NewErrParamRequired(\"UsageLimitId\"))",
          "14897:  }",
          "14899:  if invalidParams.Len() > 0 {",
          "14900:   return invalidParams",
          "14901:  }",
          "14902:  return nil",
          "14903: }",
          "14906: func (s *DeleteUsageLimitInput) SetUsageLimitId(v string) *DeleteUsageLimitInput {",
          "14907:  s.UsageLimitId = &v",
          "14908:  return s",
          "14909: }",
          "14911: type DeleteUsageLimitOutput struct {",
          "14912:  _ struct{} `type:\"structure\"`",
          "14913: }",
          "14916: func (s DeleteUsageLimitOutput) String() string {",
          "14917:  return awsutil.Prettify(s)",
          "14918: }",
          "14921: func (s DeleteUsageLimitOutput) GoString() string {",
          "14922:  return s.String()",
          "14923: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "17302:  Marker *string `type:\"string\"`",
          "17349:  TagKeys []*string `locationNameList:\"TagKey\" type:\"list\"`",
          "17357:  TagValues []*string `locationNameList:\"TagValue\" type:\"list\"`",
          "17358: }",
          "17362:  return awsutil.Prettify(s)",
          "17363: }",
          "17367:  return s.String()",
          "17368: }",
          "17373:  return s",
          "17374: }",
          "17379:  return s",
          "17380: }",
          "17385:  return s",
          "17386: }",
          "17391:  return s",
          "17392: }",
          "17396:  s.TagKeys = v",
          "17397:  return s",
          "17398: }",
          "17402:  s.TagValues = v",
          "17403:  return s",
          "17404: }",
          "17407:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "17308:  MaxRecords *int64 `type:\"integer\"`",
          "17312:  ResourceName *string `type:\"string\"`",
          "17341:  ResourceType *string `type:\"string\"`",
          "17361: func (s DescribeTagsInput) String() string {",
          "17366: func (s DescribeTagsInput) GoString() string {",
          "17371: func (s *DescribeTagsInput) SetMarker(v string) *DescribeTagsInput {",
          "17372:  s.Marker = &v",
          "17377: func (s *DescribeTagsInput) SetMaxRecords(v int64) *DescribeTagsInput {",
          "17378:  s.MaxRecords = &v",
          "17383: func (s *DescribeTagsInput) SetResourceName(v string) *DescribeTagsInput {",
          "17384:  s.ResourceName = &v",
          "17389: func (s *DescribeTagsInput) SetResourceType(v string) *DescribeTagsInput {",
          "17390:  s.ResourceType = &v",
          "17395: func (s *DescribeTagsInput) SetTagKeys(v []*string) *DescribeTagsInput {",
          "17401: func (s *DescribeTagsInput) SetTagValues(v []*string) *DescribeTagsInput {",
          "17406: type DescribeTagsOutput struct {",
          "",
          "[Added Lines]",
          "17991:  MaxRecords *int64 `type:\"integer\"`",
          "17995:  ResourceName *string `type:\"string\"`",
          "18024:  ResourceType *string `type:\"string\"`",
          "18032:  TagKeys []*string `locationNameList:\"TagKey\" type:\"list\"`",
          "18040:  TagValues []*string `locationNameList:\"TagValue\" type:\"list\"`",
          "18041: }",
          "18044: func (s DescribeTagsInput) String() string {",
          "18045:  return awsutil.Prettify(s)",
          "18046: }",
          "18049: func (s DescribeTagsInput) GoString() string {",
          "18050:  return s.String()",
          "18051: }",
          "18054: func (s *DescribeTagsInput) SetMarker(v string) *DescribeTagsInput {",
          "18055:  s.Marker = &v",
          "18056:  return s",
          "18057: }",
          "18060: func (s *DescribeTagsInput) SetMaxRecords(v int64) *DescribeTagsInput {",
          "18061:  s.MaxRecords = &v",
          "18062:  return s",
          "18063: }",
          "18066: func (s *DescribeTagsInput) SetResourceName(v string) *DescribeTagsInput {",
          "18067:  s.ResourceName = &v",
          "18068:  return s",
          "18069: }",
          "18072: func (s *DescribeTagsInput) SetResourceType(v string) *DescribeTagsInput {",
          "18073:  s.ResourceType = &v",
          "18074:  return s",
          "18075: }",
          "18078: func (s *DescribeTagsInput) SetTagKeys(v []*string) *DescribeTagsInput {",
          "18079:  s.TagKeys = v",
          "18080:  return s",
          "18081: }",
          "18084: func (s *DescribeTagsInput) SetTagValues(v []*string) *DescribeTagsInput {",
          "18085:  s.TagValues = v",
          "18086:  return s",
          "18087: }",
          "18089: type DescribeTagsOutput struct {",
          "18090:  _ struct{} `type:\"structure\"`",
          "18097:  Marker *string `type:\"string\"`",
          "18100:  TaggedResources []*TaggedResource `locationNameList:\"TaggedResource\" type:\"list\"`",
          "18101: }",
          "18104: func (s DescribeTagsOutput) String() string {",
          "18105:  return awsutil.Prettify(s)",
          "18106: }",
          "18109: func (s DescribeTagsOutput) GoString() string {",
          "18110:  return s.String()",
          "18111: }",
          "18114: func (s *DescribeTagsOutput) SetMarker(v string) *DescribeTagsOutput {",
          "18115:  s.Marker = &v",
          "18116:  return s",
          "18117: }",
          "18120: func (s *DescribeTagsOutput) SetTaggedResources(v []*TaggedResource) *DescribeTagsOutput {",
          "18121:  s.TaggedResources = v",
          "18122:  return s",
          "18123: }",
          "18125: type DescribeUsageLimitsInput struct {",
          "18126:  _ struct{} `type:\"structure\"`",
          "18129:  ClusterIdentifier *string `type:\"string\"`",
          "18132:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "18139:  Marker *string `type:\"string\"`",
          "18149:  MaxRecords *int64 `type:\"integer\"`",
          "18168:  UsageLimitId *string `type:\"string\"`",
          "18172: func (s DescribeUsageLimitsInput) String() string {",
          "18177: func (s DescribeUsageLimitsInput) GoString() string {",
          "18182: func (s *DescribeUsageLimitsInput) SetClusterIdentifier(v string) *DescribeUsageLimitsInput {",
          "18183:  s.ClusterIdentifier = &v",
          "18188: func (s *DescribeUsageLimitsInput) SetFeatureType(v string) *DescribeUsageLimitsInput {",
          "18189:  s.FeatureType = &v",
          "18194: func (s *DescribeUsageLimitsInput) SetMarker(v string) *DescribeUsageLimitsInput {",
          "18195:  s.Marker = &v",
          "18200: func (s *DescribeUsageLimitsInput) SetMaxRecords(v int64) *DescribeUsageLimitsInput {",
          "18201:  s.MaxRecords = &v",
          "18206: func (s *DescribeUsageLimitsInput) SetTagKeys(v []*string) *DescribeUsageLimitsInput {",
          "18212: func (s *DescribeUsageLimitsInput) SetTagValues(v []*string) *DescribeUsageLimitsInput {",
          "18218: func (s *DescribeUsageLimitsInput) SetUsageLimitId(v string) *DescribeUsageLimitsInput {",
          "18219:  s.UsageLimitId = &v",
          "18220:  return s",
          "18221: }",
          "18223: type DescribeUsageLimitsOutput struct {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17414:  Marker *string `type:\"string\"`",
          "17418: }",
          "17422:  return awsutil.Prettify(s)",
          "17423: }",
          "17427:  return s.String()",
          "17428: }",
          "17432:  s.Marker = &v",
          "17433:  return s",
          "17434: }",
          "17439:  return s",
          "17440: }",
          "",
          "[Removed Lines]",
          "17417:  TaggedResources []*TaggedResource `locationNameList:\"TaggedResource\" type:\"list\"`",
          "17421: func (s DescribeTagsOutput) String() string {",
          "17426: func (s DescribeTagsOutput) GoString() string {",
          "17431: func (s *DescribeTagsOutput) SetMarker(v string) *DescribeTagsOutput {",
          "17437: func (s *DescribeTagsOutput) SetTaggedResources(v []*TaggedResource) *DescribeTagsOutput {",
          "17438:  s.TaggedResources = v",
          "",
          "[Added Lines]",
          "18234:  UsageLimits []*UsageLimit `type:\"list\"`",
          "18238: func (s DescribeUsageLimitsOutput) String() string {",
          "18243: func (s DescribeUsageLimitsOutput) GoString() string {",
          "18248: func (s *DescribeUsageLimitsOutput) SetMarker(v string) *DescribeUsageLimitsOutput {",
          "18254: func (s *DescribeUsageLimitsOutput) SetUsageLimits(v []*UsageLimit) *DescribeUsageLimitsOutput {",
          "18255:  s.UsageLimits = v",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "20349:  return s",
          "20350: }",
          "20353: type NodeConfigurationOption struct {",
          "20354:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21169: type ModifyUsageLimitInput struct {",
          "21170:  _ struct{} `type:\"structure\"`",
          "21173:  Amount *int64 `type:\"long\"`",
          "21177:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "21182:  UsageLimitId *string `type:\"string\" required:\"true\"`",
          "21183: }",
          "21186: func (s ModifyUsageLimitInput) String() string {",
          "21187:  return awsutil.Prettify(s)",
          "21188: }",
          "21191: func (s ModifyUsageLimitInput) GoString() string {",
          "21192:  return s.String()",
          "21193: }",
          "21196: func (s *ModifyUsageLimitInput) Validate() error {",
          "21197:  invalidParams := request.ErrInvalidParams{Context: \"ModifyUsageLimitInput\"}",
          "21198:  if s.UsageLimitId == nil {",
          "21199:   invalidParams.Add(request.NewErrParamRequired(\"UsageLimitId\"))",
          "21200:  }",
          "21202:  if invalidParams.Len() > 0 {",
          "21203:   return invalidParams",
          "21204:  }",
          "21205:  return nil",
          "21206: }",
          "21209: func (s *ModifyUsageLimitInput) SetAmount(v int64) *ModifyUsageLimitInput {",
          "21210:  s.Amount = &v",
          "21211:  return s",
          "21212: }",
          "21215: func (s *ModifyUsageLimitInput) SetBreachAction(v string) *ModifyUsageLimitInput {",
          "21216:  s.BreachAction = &v",
          "21217:  return s",
          "21218: }",
          "21221: func (s *ModifyUsageLimitInput) SetUsageLimitId(v string) *ModifyUsageLimitInput {",
          "21222:  s.UsageLimitId = &v",
          "21223:  return s",
          "21224: }",
          "21227: type ModifyUsageLimitOutput struct {",
          "21228:  _ struct{} `type:\"structure\"`",
          "21232:  Amount *int64 `type:\"long\"`",
          "21242:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "21245:  ClusterIdentifier *string `type:\"string\"`",
          "21248:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "21252:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "21256:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "21259:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "21262:  UsageLimitId *string `type:\"string\"`",
          "21263: }",
          "21266: func (s ModifyUsageLimitOutput) String() string {",
          "21267:  return awsutil.Prettify(s)",
          "21268: }",
          "21271: func (s ModifyUsageLimitOutput) GoString() string {",
          "21272:  return s.String()",
          "21273: }",
          "21276: func (s *ModifyUsageLimitOutput) SetAmount(v int64) *ModifyUsageLimitOutput {",
          "21277:  s.Amount = &v",
          "21278:  return s",
          "21279: }",
          "21282: func (s *ModifyUsageLimitOutput) SetBreachAction(v string) *ModifyUsageLimitOutput {",
          "21283:  s.BreachAction = &v",
          "21284:  return s",
          "21285: }",
          "21288: func (s *ModifyUsageLimitOutput) SetClusterIdentifier(v string) *ModifyUsageLimitOutput {",
          "21289:  s.ClusterIdentifier = &v",
          "21290:  return s",
          "21291: }",
          "21294: func (s *ModifyUsageLimitOutput) SetFeatureType(v string) *ModifyUsageLimitOutput {",
          "21295:  s.FeatureType = &v",
          "21296:  return s",
          "21297: }",
          "21300: func (s *ModifyUsageLimitOutput) SetLimitType(v string) *ModifyUsageLimitOutput {",
          "21301:  s.LimitType = &v",
          "21302:  return s",
          "21303: }",
          "21306: func (s *ModifyUsageLimitOutput) SetPeriod(v string) *ModifyUsageLimitOutput {",
          "21307:  s.Period = &v",
          "21308:  return s",
          "21309: }",
          "21312: func (s *ModifyUsageLimitOutput) SetTags(v []*Tag) *ModifyUsageLimitOutput {",
          "21313:  s.Tags = v",
          "21314:  return s",
          "21315: }",
          "21318: func (s *ModifyUsageLimitOutput) SetUsageLimitId(v string) *ModifyUsageLimitOutput {",
          "21319:  s.UsageLimitId = &v",
          "21320:  return s",
          "21321: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "23718:  return s",
          "23719: }",
          "23722: type VpcSecurityGroupMembership struct {",
          "23723:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24693: type UsageLimit struct {",
          "24694:  _ struct{} `type:\"structure\"`",
          "24698:  Amount *int64 `type:\"long\"`",
          "24708:  BreachAction *string `type:\"string\" enum:\"UsageLimitBreachAction\"`",
          "24711:  ClusterIdentifier *string `type:\"string\"`",
          "24714:  FeatureType *string `type:\"string\" enum:\"UsageLimitFeatureType\"`",
          "24718:  LimitType *string `type:\"string\" enum:\"UsageLimitLimitType\"`",
          "24722:  Period *string `type:\"string\" enum:\"UsageLimitPeriod\"`",
          "24725:  Tags []*Tag `locationNameList:\"Tag\" type:\"list\"`",
          "24728:  UsageLimitId *string `type:\"string\"`",
          "24729: }",
          "24732: func (s UsageLimit) String() string {",
          "24733:  return awsutil.Prettify(s)",
          "24734: }",
          "24737: func (s UsageLimit) GoString() string {",
          "24738:  return s.String()",
          "24739: }",
          "24742: func (s *UsageLimit) SetAmount(v int64) *UsageLimit {",
          "24743:  s.Amount = &v",
          "24744:  return s",
          "24745: }",
          "24748: func (s *UsageLimit) SetBreachAction(v string) *UsageLimit {",
          "24749:  s.BreachAction = &v",
          "24750:  return s",
          "24751: }",
          "24754: func (s *UsageLimit) SetClusterIdentifier(v string) *UsageLimit {",
          "24755:  s.ClusterIdentifier = &v",
          "24756:  return s",
          "24757: }",
          "24760: func (s *UsageLimit) SetFeatureType(v string) *UsageLimit {",
          "24761:  s.FeatureType = &v",
          "24762:  return s",
          "24763: }",
          "24766: func (s *UsageLimit) SetLimitType(v string) *UsageLimit {",
          "24767:  s.LimitType = &v",
          "24768:  return s",
          "24769: }",
          "24772: func (s *UsageLimit) SetPeriod(v string) *UsageLimit {",
          "24773:  s.Period = &v",
          "24774:  return s",
          "24775: }",
          "24778: func (s *UsageLimit) SetTags(v []*Tag) *UsageLimit {",
          "24779:  s.Tags = v",
          "24780:  return s",
          "24781: }",
          "24784: func (s *UsageLimit) SetUsageLimitId(v string) *UsageLimit {",
          "24785:  s.UsageLimitId = &v",
          "24786:  return s",
          "24787: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "23914:  TableRestoreStatusTypeCanceled = \"CANCELED\"",
          "23915: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24985: const (",
          "24987:  UsageLimitBreachActionLog = \"log\"",
          "24990:  UsageLimitBreachActionEmitMetric = \"emit-metric\"",
          "24993:  UsageLimitBreachActionDisable = \"disable\"",
          "24994: )",
          "24996: const (",
          "24998:  UsageLimitFeatureTypeSpectrum = \"spectrum\"",
          "25001:  UsageLimitFeatureTypeConcurrencyScaling = \"concurrency-scaling\"",
          "25002: )",
          "25004: const (",
          "25006:  UsageLimitLimitTypeTime = \"time\"",
          "25009:  UsageLimitLimitTypeDataScanned = \"data-scanned\"",
          "25010: )",
          "25012: const (",
          "25014:  UsageLimitPeriodDaily = \"daily\"",
          "25017:  UsageLimitPeriodWeekly = \"weekly\"",
          "25020:  UsageLimitPeriodMonthly = \"monthly\"",
          "25021: )",
          "",
          "---------------"
        ],
        "service/redshift/errors.go||service/redshift/errors.go": [
          "File: service/redshift/errors.go -> service/redshift/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "422:  ErrCodeInvalidTagFault = \"InvalidTagFault\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:  ErrCodeInvalidUsageLimitFault = \"InvalidUsageLimit\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "697:  ErrCodeUnsupportedOptionFault = \"UnsupportedOptionFault\"",
          "698: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "709:  ErrCodeUsageLimitAlreadyExistsFault = \"UsageLimitAlreadyExists\"",
          "715:  ErrCodeUsageLimitNotFoundFault = \"UsageLimitNotFound\"",
          "",
          "---------------"
        ],
        "service/redshift/redshiftiface/interface.go||service/redshift/redshiftiface/interface.go": [
          "File: service/redshift/redshiftiface/interface.go -> service/redshift/redshiftiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  CreateTagsWithContext(aws.Context, *redshift.CreateTagsInput, ...request.Option) (*redshift.CreateTagsOutput, error)",
          "137:  CreateTagsRequest(*redshift.CreateTagsInput) (*request.Request, *redshift.CreateTagsOutput)",
          "139:  DeleteCluster(*redshift.DeleteClusterInput) (*redshift.DeleteClusterOutput, error)",
          "140:  DeleteClusterWithContext(aws.Context, *redshift.DeleteClusterInput, ...request.Option) (*redshift.DeleteClusterOutput, error)",
          "141:  DeleteClusterRequest(*redshift.DeleteClusterInput) (*request.Request, *redshift.DeleteClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:  CreateUsageLimit(*redshift.CreateUsageLimitInput) (*redshift.CreateUsageLimitOutput, error)",
          "140:  CreateUsageLimitWithContext(aws.Context, *redshift.CreateUsageLimitInput, ...request.Option) (*redshift.CreateUsageLimitOutput, error)",
          "141:  CreateUsageLimitRequest(*redshift.CreateUsageLimitInput) (*request.Request, *redshift.CreateUsageLimitOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:  DeleteTagsWithContext(aws.Context, *redshift.DeleteTagsInput, ...request.Option) (*redshift.DeleteTagsOutput, error)",
          "185:  DeleteTagsRequest(*redshift.DeleteTagsInput) (*request.Request, *redshift.DeleteTagsOutput)",
          "187:  DescribeAccountAttributes(*redshift.DescribeAccountAttributesInput) (*redshift.DescribeAccountAttributesOutput, error)",
          "188:  DescribeAccountAttributesWithContext(aws.Context, *redshift.DescribeAccountAttributesInput, ...request.Option) (*redshift.DescribeAccountAttributesOutput, error)",
          "189:  DescribeAccountAttributesRequest(*redshift.DescribeAccountAttributesInput) (*request.Request, *redshift.DescribeAccountAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:  DeleteUsageLimit(*redshift.DeleteUsageLimitInput) (*redshift.DeleteUsageLimitOutput, error)",
          "192:  DeleteUsageLimitWithContext(aws.Context, *redshift.DeleteUsageLimitInput, ...request.Option) (*redshift.DeleteUsageLimitOutput, error)",
          "193:  DeleteUsageLimitRequest(*redshift.DeleteUsageLimitInput) (*request.Request, *redshift.DeleteUsageLimitOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "347:  DescribeTagsWithContext(aws.Context, *redshift.DescribeTagsInput, ...request.Option) (*redshift.DescribeTagsOutput, error)",
          "348:  DescribeTagsRequest(*redshift.DescribeTagsInput) (*request.Request, *redshift.DescribeTagsOutput)",
          "350:  DisableLogging(*redshift.DisableLoggingInput) (*redshift.LoggingStatus, error)",
          "351:  DisableLoggingWithContext(aws.Context, *redshift.DisableLoggingInput, ...request.Option) (*redshift.LoggingStatus, error)",
          "352:  DisableLoggingRequest(*redshift.DisableLoggingInput) (*request.Request, *redshift.LoggingStatus)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:  DescribeUsageLimits(*redshift.DescribeUsageLimitsInput) (*redshift.DescribeUsageLimitsOutput, error)",
          "359:  DescribeUsageLimitsWithContext(aws.Context, *redshift.DescribeUsageLimitsInput, ...request.Option) (*redshift.DescribeUsageLimitsOutput, error)",
          "360:  DescribeUsageLimitsRequest(*redshift.DescribeUsageLimitsInput) (*request.Request, *redshift.DescribeUsageLimitsOutput)",
          "362:  DescribeUsageLimitsPages(*redshift.DescribeUsageLimitsInput, func(*redshift.DescribeUsageLimitsOutput, bool) bool) error",
          "363:  DescribeUsageLimitsPagesWithContext(aws.Context, *redshift.DescribeUsageLimitsInput, func(*redshift.DescribeUsageLimitsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "419:  ModifySnapshotScheduleWithContext(aws.Context, *redshift.ModifySnapshotScheduleInput, ...request.Option) (*redshift.ModifySnapshotScheduleOutput, error)",
          "420:  ModifySnapshotScheduleRequest(*redshift.ModifySnapshotScheduleInput) (*request.Request, *redshift.ModifySnapshotScheduleOutput)",
          "422:  PauseCluster(*redshift.PauseClusterInput) (*redshift.PauseClusterOutput, error)",
          "423:  PauseClusterWithContext(aws.Context, *redshift.PauseClusterInput, ...request.Option) (*redshift.PauseClusterOutput, error)",
          "424:  PauseClusterRequest(*redshift.PauseClusterInput) (*request.Request, *redshift.PauseClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:  ModifyUsageLimit(*redshift.ModifyUsageLimitInput) (*redshift.ModifyUsageLimitOutput, error)",
          "438:  ModifyUsageLimitWithContext(aws.Context, *redshift.ModifyUsageLimitInput, ...request.Option) (*redshift.ModifyUsageLimitOutput, error)",
          "439:  ModifyUsageLimitRequest(*redshift.ModifyUsageLimitInput) (*request.Request, *redshift.ModifyUsageLimitOutput)",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:  return s",
          "961: }",
          "963: type StartStreamTranscriptionInput struct {",
          "964:  _ struct{} `type:\"structure\" payload:\"AudioStream\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "967: type ServiceUnavailableException struct {",
          "968:  _            struct{}                  `type:\"structure\"`",
          "969:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "971:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "972: }",
          "975: func (s ServiceUnavailableException) String() string {",
          "976:  return awsutil.Prettify(s)",
          "977: }",
          "980: func (s ServiceUnavailableException) GoString() string {",
          "981:  return s.String()",
          "982: }",
          "985: func (s *ServiceUnavailableException) eventTranscriptResultStream() {}",
          "989: func (s *ServiceUnavailableException) UnmarshalEvent(",
          "990:  payloadUnmarshaler protocol.PayloadUnmarshaler,",
          "991:  msg eventstream.Message,",
          "992: ) error {",
          "993:  if err := payloadUnmarshaler.UnmarshalPayload(",
          "994:   bytes.NewReader(msg.Payload), s,",
          "995:  ); err != nil {",
          "996:   return err",
          "997:  }",
          "998:  return nil",
          "999: }",
          "1001: func (s *ServiceUnavailableException) MarshalEvent(pm protocol.PayloadMarshaler) (msg eventstream.Message, err error) {",
          "1002:  msg.Headers.Set(eventstreamapi.MessageTypeHeader, eventstream.StringValue(eventstreamapi.ExceptionMessageType))",
          "1003:  var buf bytes.Buffer",
          "1004:  if err = pm.MarshalPayload(&buf, s); err != nil {",
          "1005:   return eventstream.Message{}, err",
          "1006:  }",
          "1007:  msg.Payload = buf.Bytes()",
          "1008:  return msg, err",
          "1009: }",
          "1011: func newErrorServiceUnavailableException(v protocol.ResponseMetadata) error {",
          "1012:  return &ServiceUnavailableException{",
          "1013:   RespMetadata: v,",
          "1014:  }",
          "1015: }",
          "1018: func (s *ServiceUnavailableException) Code() string {",
          "1019:  return \"ServiceUnavailableException\"",
          "1020: }",
          "1023: func (s *ServiceUnavailableException) Message() string {",
          "1024:  if s.Message_ != nil {",
          "1025:   return *s.Message_",
          "1026:  }",
          "1027:  return \"\"",
          "1028: }",
          "1031: func (s *ServiceUnavailableException) OrigErr() error {",
          "1032:  return nil",
          "1033: }",
          "1035: func (s *ServiceUnavailableException) Error() string {",
          "1036:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "1037: }",
          "1040: func (s *ServiceUnavailableException) StatusCode() int {",
          "1041:  return s.RespMetadata.StatusCode",
          "1042: }",
          "1045: func (s *ServiceUnavailableException) RequestID() string {",
          "1046:  return s.RespMetadata.RequestID",
          "1047: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1329:   return newErrorInternalFailureException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "1330:  case \"LimitExceededException\":",
          "1331:   return newErrorLimitExceededException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "1332:  default:",
          "1333:   return nil, awserr.New(",
          "1334:    request.ErrCodeSerialization,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1418:  case \"ServiceUnavailableException\":",
          "1419:   return newErrorServiceUnavailableException(u.metadata).(eventstreamapi.Unmarshaler), nil",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/errors.go||service/transcribestreamingservice/errors.go": [
          "File: service/transcribestreamingservice/errors.go -> service/transcribestreamingservice/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "41: )",
          "43: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "48: }",
          "",
          "[Removed Lines]",
          "44:  \"BadRequestException\":      newErrorBadRequestException,",
          "45:  \"ConflictException\":        newErrorConflictException,",
          "46:  \"InternalFailureException\": newErrorInternalFailureException,",
          "47:  \"LimitExceededException\":   newErrorLimitExceededException,",
          "",
          "[Added Lines]",
          "46:  ErrCodeServiceUnavailableException = \"ServiceUnavailableException\"",
          "50:  \"BadRequestException\":         newErrorBadRequestException,",
          "51:  \"ConflictException\":           newErrorConflictException,",
          "52:  \"InternalFailureException\":    newErrorInternalFailureException,",
          "53:  \"LimitExceededException\":      newErrorLimitExceededException,",
          "54:  \"ServiceUnavailableException\": newErrorServiceUnavailableException,",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "503: var _ awserr.Error = (*ConflictException)(nil)",
          "504: var _ awserr.Error = (*InternalFailureException)(nil)",
          "505: var _ awserr.Error = (*LimitExceededException)(nil)",
          "507: type loopReader struct {",
          "508:  source *bytes.Reader",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506: var _ awserr.Error = (*ServiceUnavailableException)(nil)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0d3a58c4bb5d73c6af52dc9e837240f44844118",
      "candidate_info": {
        "commit_hash": "e0d3a58c4bb5d73c6af52dc9e837240f44844118",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/e0d3a58c4bb5d73c6af52dc9e837240f44844118",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/docdb/2014-10-31/api-2.json",
          "models/apis/docdb/2014-10-31/docs-2.json",
          "models/apis/docdb/2014-10-31/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/managedblockchain/2018-09-24/api-2.json",
          "models/apis/managedblockchain/2018-09-24/docs-2.json",
          "models/apis/states/2016-11-23/api-2.json",
          "models/apis/states/2016-11-23/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/docdb/api.go",
          "service/docdb/docdbiface/interface.go",
          "service/ec2/api.go",
          "service/managedblockchain/api.go",
          "service/sfn/api.go",
          "service/sfn/errors.go"
        ],
        "message": "Release v1.34.23 (2020-09-14) (#3536)\n\nRelease v1.34.23 (2020-09-14)\n===\n\n### Service Client Updates\n* `service/docdb`: Updates service API, documentation, and paginators\n  * Updated API documentation and added paginators for DescribeCertificates, DescribeDBClusterParameterGroups, DescribeDBClusterParameters, DescribeDBClusterSnapshots and DescribePendingMaintenanceActions\n* `service/ec2`: Updates service API\n  * This release adds support for the T4G instance family to the EC2 ModifyDefaultCreditSpecification and GetDefaultCreditSpecification APIs.\n* `service/managedblockchain`: Updates service API and documentation\n* `service/states`: Updates service API and documentation\n  * This release of the AWS Step Functions SDK introduces support for AWS X-Ray.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/docdb/api.go||service/docdb/api.go",
          "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/managedblockchain/api.go||service/managedblockchain/api.go",
          "service/sfn/api.go||service/sfn/api.go",
          "service/sfn/errors.go||service/sfn/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2705:     Protocols: []string{\"https\"},",
          "2706:    },",
          "2707:    Endpoints: endpoints{",
          "2708:     \"ap-east-1\":      endpoint{},",
          "2709:     \"ap-northeast-1\": endpoint{},",
          "2710:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2708:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2714:     \"ca-central-1\":   endpoint{},",
          "2715:     \"eu-central-1\":   endpoint{},",
          "2716:     \"eu-north-1\":     endpoint{},",
          "2717:     \"eu-west-1\":      endpoint{},",
          "2718:     \"eu-west-2\":      endpoint{},",
          "2719:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2718:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8524:    },",
          "8525:    Endpoints: endpoints{",
          "8526:     \"fips-us-gov-west-1\": endpoint{",
          "8528:      CredentialScope: credentialScope{",
          "8529:       Region: \"us-gov-west-1\",",
          "8530:      },",
          "",
          "[Removed Lines]",
          "8527:      Hostname: \"s3-fips-us-gov-west-1.amazonaws.com\",",
          "",
          "[Added Lines]",
          "8529:      Hostname: \"s3-fips.us-gov-west-1.amazonaws.com\",",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.22\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.23\"",
          "",
          "---------------"
        ],
        "service/docdb/api.go||service/docdb/api.go": [
          "File: service/docdb/api.go -> service/docdb/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:   Name:       opDescribeCertificates,",
          "1396:   HTTPMethod: \"POST\",",
          "1397:   HTTPPath:   \"/\",",
          "1398:  }",
          "1400:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395:   Paginator: &request.Paginator{",
          "1396:    InputTokens:     []string{\"Marker\"},",
          "1397:    OutputTokens:    []string{\"Marker\"},",
          "1398:    LimitToken:      \"MaxRecords\",",
          "1399:    TruncationToken: \"\",",
          "1400:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1444:  return out, req.Send()",
          "1445: }",
          "1447: const opDescribeDBClusterParameterGroups = \"DescribeDBClusterParameterGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1467: func (c *DocDB) DescribeCertificatesPages(input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool) error {",
          "1468:  return c.DescribeCertificatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1469: }",
          "1478: func (c *DocDB) DescribeCertificatesPagesWithContext(ctx aws.Context, input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool, opts ...request.Option) error {",
          "1479:  p := request.Pagination{",
          "1480:   NewRequest: func() (*request.Request, error) {",
          "1481:    var inCpy *DescribeCertificatesInput",
          "1482:    if input != nil {",
          "1483:     tmp := *input",
          "1484:     inCpy = &tmp",
          "1485:    }",
          "1486:    req, _ := c.DescribeCertificatesRequest(inCpy)",
          "1487:    req.SetContext(ctx)",
          "1488:    req.ApplyOptions(opts...)",
          "1489:    return req, nil",
          "1490:   },",
          "1491:  }",
          "1493:  for p.Next() {",
          "1494:   if !fn(p.Page().(*DescribeCertificatesOutput), !p.HasNextPage()) {",
          "1495:    break",
          "1496:   }",
          "1497:  }",
          "1499:  return p.Err()",
          "1500: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1475:   Name:       opDescribeDBClusterParameterGroups,",
          "1476:   HTTPMethod: \"POST\",",
          "1477:   HTTPPath:   \"/\",",
          "1478:  }",
          "1480:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1533:   Paginator: &request.Paginator{",
          "1534:    InputTokens:     []string{\"Marker\"},",
          "1535:    OutputTokens:    []string{\"Marker\"},",
          "1536:    LimitToken:      \"MaxRecords\",",
          "1537:    TruncationToken: \"\",",
          "1538:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1525:  return out, req.Send()",
          "1526: }",
          "1528: const opDescribeDBClusterParameters = \"DescribeDBClusterParameters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1606: func (c *DocDB) DescribeDBClusterParameterGroupsPages(input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool) error {",
          "1607:  return c.DescribeDBClusterParameterGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1608: }",
          "1617: func (c *DocDB) DescribeDBClusterParameterGroupsPagesWithContext(ctx aws.Context, input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool, opts ...request.Option) error {",
          "1618:  p := request.Pagination{",
          "1619:   NewRequest: func() (*request.Request, error) {",
          "1620:    var inCpy *DescribeDBClusterParameterGroupsInput",
          "1621:    if input != nil {",
          "1622:     tmp := *input",
          "1623:     inCpy = &tmp",
          "1624:    }",
          "1625:    req, _ := c.DescribeDBClusterParameterGroupsRequest(inCpy)",
          "1626:    req.SetContext(ctx)",
          "1627:    req.ApplyOptions(opts...)",
          "1628:    return req, nil",
          "1629:   },",
          "1630:  }",
          "1632:  for p.Next() {",
          "1633:   if !fn(p.Page().(*DescribeDBClusterParameterGroupsOutput), !p.HasNextPage()) {",
          "1634:    break",
          "1635:   }",
          "1636:  }",
          "1638:  return p.Err()",
          "1639: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1556:   Name:       opDescribeDBClusterParameters,",
          "1557:   HTTPMethod: \"POST\",",
          "1558:   HTTPPath:   \"/\",",
          "1559:  }",
          "1561:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1672:   Paginator: &request.Paginator{",
          "1673:    InputTokens:     []string{\"Marker\"},",
          "1674:    OutputTokens:    []string{\"Marker\"},",
          "1675:    LimitToken:      \"MaxRecords\",",
          "1676:    TruncationToken: \"\",",
          "1677:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1604:  return out, req.Send()",
          "1605: }",
          "1607: const opDescribeDBClusterSnapshotAttributes = \"DescribeDBClusterSnapshotAttributes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1743: func (c *DocDB) DescribeDBClusterParametersPages(input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool) error {",
          "1744:  return c.DescribeDBClusterParametersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1745: }",
          "1754: func (c *DocDB) DescribeDBClusterParametersPagesWithContext(ctx aws.Context, input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool, opts ...request.Option) error {",
          "1755:  p := request.Pagination{",
          "1756:   NewRequest: func() (*request.Request, error) {",
          "1757:    var inCpy *DescribeDBClusterParametersInput",
          "1758:    if input != nil {",
          "1759:     tmp := *input",
          "1760:     inCpy = &tmp",
          "1761:    }",
          "1762:    req, _ := c.DescribeDBClusterParametersRequest(inCpy)",
          "1763:    req.SetContext(ctx)",
          "1764:    req.ApplyOptions(opts...)",
          "1765:    return req, nil",
          "1766:   },",
          "1767:  }",
          "1769:  for p.Next() {",
          "1770:   if !fn(p.Page().(*DescribeDBClusterParametersOutput), !p.HasNextPage()) {",
          "1771:    break",
          "1772:   }",
          "1773:  }",
          "1775:  return p.Err()",
          "1776: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1721:   Name:       opDescribeDBClusterSnapshots,",
          "1722:   HTTPMethod: \"POST\",",
          "1723:   HTTPPath:   \"/\",",
          "1724:  }",
          "1726:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1895:   Paginator: &request.Paginator{",
          "1896:    InputTokens:     []string{\"Marker\"},",
          "1897:    OutputTokens:    []string{\"Marker\"},",
          "1898:    LimitToken:      \"MaxRecords\",",
          "1899:    TruncationToken: \"\",",
          "1900:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1770:  return out, req.Send()",
          "1771: }",
          "1773: const opDescribeDBClusters = \"DescribeDBClusters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1967: func (c *DocDB) DescribeDBClusterSnapshotsPages(input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool) error {",
          "1968:  return c.DescribeDBClusterSnapshotsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1969: }",
          "1978: func (c *DocDB) DescribeDBClusterSnapshotsPagesWithContext(ctx aws.Context, input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool, opts ...request.Option) error {",
          "1979:  p := request.Pagination{",
          "1980:   NewRequest: func() (*request.Request, error) {",
          "1981:    var inCpy *DescribeDBClusterSnapshotsInput",
          "1982:    if input != nil {",
          "1983:     tmp := *input",
          "1984:     inCpy = &tmp",
          "1985:    }",
          "1986:    req, _ := c.DescribeDBClusterSnapshotsRequest(inCpy)",
          "1987:    req.SetContext(ctx)",
          "1988:    req.ApplyOptions(opts...)",
          "1989:    return req, nil",
          "1990:   },",
          "1991:  }",
          "1993:  for p.Next() {",
          "1994:   if !fn(p.Page().(*DescribeDBClusterSnapshotsOutput), !p.HasNextPage()) {",
          "1995:    break",
          "1996:   }",
          "1997:  }",
          "1999:  return p.Err()",
          "2000: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2767:   Name:       opDescribePendingMaintenanceActions,",
          "2768:   HTTPMethod: \"POST\",",
          "2769:   HTTPPath:   \"/\",",
          "2770:  }",
          "2772:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2999:   Paginator: &request.Paginator{",
          "3000:    InputTokens:     []string{\"Marker\"},",
          "3001:    OutputTokens:    []string{\"Marker\"},",
          "3002:    LimitToken:      \"MaxRecords\",",
          "3003:    TruncationToken: \"\",",
          "3004:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2816:  return out, req.Send()",
          "2817: }",
          "2819: const opFailoverDBCluster = \"FailoverDBCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3071: func (c *DocDB) DescribePendingMaintenanceActionsPages(input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool) error {",
          "3072:  return c.DescribePendingMaintenanceActionsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3073: }",
          "3082: func (c *DocDB) DescribePendingMaintenanceActionsPagesWithContext(ctx aws.Context, input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool, opts ...request.Option) error {",
          "3083:  p := request.Pagination{",
          "3084:   NewRequest: func() (*request.Request, error) {",
          "3085:    var inCpy *DescribePendingMaintenanceActionsInput",
          "3086:    if input != nil {",
          "3087:     tmp := *input",
          "3088:     inCpy = &tmp",
          "3089:    }",
          "3090:    req, _ := c.DescribePendingMaintenanceActionsRequest(inCpy)",
          "3091:    req.SetContext(ctx)",
          "3092:    req.ApplyOptions(opts...)",
          "3093:    return req, nil",
          "3094:   },",
          "3095:  }",
          "3097:  for p.Next() {",
          "3098:   if !fn(p.Page().(*DescribePendingMaintenanceActionsOutput), !p.HasNextPage()) {",
          "3099:    break",
          "3100:   }",
          "3101:  }",
          "3103:  return p.Err()",
          "3104: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4967:  Port *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5258:  PreSignedUrl *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5116:  return s",
          "5117: }",
          "5120: func (s *CreateDBClusterInput) SetPreferredBackupWindow(v string) *CreateDBClusterInput {",
          "5121:  s.PreferredBackupWindow = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5411: func (s *CreateDBClusterInput) SetPreSignedUrl(v string) *CreateDBClusterInput {",
          "5412:  s.PreSignedUrl = &v",
          "5413:  return s",
          "5414: }",
          "",
          "---------------"
        ],
        "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go": [
          "File: service/docdb/docdbiface/interface.go -> service/docdb/docdbiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  DescribeCertificatesWithContext(aws.Context, *docdb.DescribeCertificatesInput, ...request.Option) (*docdb.DescribeCertificatesOutput, error)",
          "121:  DescribeCertificatesRequest(*docdb.DescribeCertificatesInput) (*request.Request, *docdb.DescribeCertificatesOutput)",
          "123:  DescribeDBClusterParameterGroups(*docdb.DescribeDBClusterParameterGroupsInput) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "124:  DescribeDBClusterParameterGroupsWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, ...request.Option) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "125:  DescribeDBClusterParameterGroupsRequest(*docdb.DescribeDBClusterParameterGroupsInput) (*request.Request, *docdb.DescribeDBClusterParameterGroupsOutput)",
          "127:  DescribeDBClusterParameters(*docdb.DescribeDBClusterParametersInput) (*docdb.DescribeDBClusterParametersOutput, error)",
          "128:  DescribeDBClusterParametersWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, ...request.Option) (*docdb.DescribeDBClusterParametersOutput, error)",
          "129:  DescribeDBClusterParametersRequest(*docdb.DescribeDBClusterParametersInput) (*request.Request, *docdb.DescribeDBClusterParametersOutput)",
          "131:  DescribeDBClusterSnapshotAttributes(*docdb.DescribeDBClusterSnapshotAttributesInput) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "132:  DescribeDBClusterSnapshotAttributesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotAttributesInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "133:  DescribeDBClusterSnapshotAttributesRequest(*docdb.DescribeDBClusterSnapshotAttributesInput) (*request.Request, *docdb.DescribeDBClusterSnapshotAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  DescribeCertificatesPages(*docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool) error",
          "124:  DescribeCertificatesPagesWithContext(aws.Context, *docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool, ...request.Option) error",
          "130:  DescribeDBClusterParameterGroupsPages(*docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool) error",
          "131:  DescribeDBClusterParameterGroupsPagesWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool, ...request.Option) error",
          "137:  DescribeDBClusterParametersPages(*docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool) error",
          "138:  DescribeDBClusterParametersPagesWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:  DescribeDBClusterSnapshotsWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotsOutput, error)",
          "137:  DescribeDBClusterSnapshotsRequest(*docdb.DescribeDBClusterSnapshotsInput) (*request.Request, *docdb.DescribeDBClusterSnapshotsOutput)",
          "139:  DescribeDBClusters(*docdb.DescribeDBClustersInput) (*docdb.DescribeDBClustersOutput, error)",
          "140:  DescribeDBClustersWithContext(aws.Context, *docdb.DescribeDBClustersInput, ...request.Option) (*docdb.DescribeDBClustersOutput, error)",
          "141:  DescribeDBClustersRequest(*docdb.DescribeDBClustersInput) (*request.Request, *docdb.DescribeDBClustersOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  DescribeDBClusterSnapshotsPages(*docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool) error",
          "149:  DescribeDBClusterSnapshotsPagesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:  DescribePendingMaintenanceActionsWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, ...request.Option) (*docdb.DescribePendingMaintenanceActionsOutput, error)",
          "191:  DescribePendingMaintenanceActionsRequest(*docdb.DescribePendingMaintenanceActionsInput) (*request.Request, *docdb.DescribePendingMaintenanceActionsOutput)",
          "193:  FailoverDBCluster(*docdb.FailoverDBClusterInput) (*docdb.FailoverDBClusterOutput, error)",
          "194:  FailoverDBClusterWithContext(aws.Context, *docdb.FailoverDBClusterInput, ...request.Option) (*docdb.FailoverDBClusterOutput, error)",
          "195:  FailoverDBClusterRequest(*docdb.FailoverDBClusterInput) (*request.Request, *docdb.FailoverDBClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:  DescribePendingMaintenanceActionsPages(*docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool) error",
          "206:  DescribePendingMaintenanceActionsPagesWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120070:  UnlimitedSupportedInstanceFamilyT3a = \"t3a\"",
          "120071: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120073:  UnlimitedSupportedInstanceFamilyT4g = \"t4g\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120076:   UnlimitedSupportedInstanceFamilyT2,",
          "120077:   UnlimitedSupportedInstanceFamilyT3,",
          "120078:   UnlimitedSupportedInstanceFamilyT3a,",
          "120079:  }",
          "120080: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120082:   UnlimitedSupportedInstanceFamilyT4g,",
          "",
          "---------------"
        ],
        "service/managedblockchain/api.go||service/managedblockchain/api.go": [
          "File: service/managedblockchain/api.go -> service/managedblockchain/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5324:  NetworkId *string `min:\"1\" type:\"string\"`",
          "5327:  Status *string `type:\"string\" enum:\"NodeStatus\"`",
          "5328: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5327:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5385:  return s",
          "5386: }",
          "5389: func (s *Node) SetStatus(v string) *Node {",
          "5390:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5392: func (s *Node) SetStateDB(v string) *Node {",
          "5393:  s.StateDB = &v",
          "5394:  return s",
          "5395: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5410:  LogPublishingConfiguration *NodeLogPublishingConfiguration `type:\"structure\"`",
          "5411: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5424:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5454:  return s",
          "5455: }",
          "5459: type NodeFabricAttributes struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: func (s *NodeConfiguration) SetStateDB(v string) *NodeConfiguration {",
          "5473:  s.StateDB = &v",
          "5474:  return s",
          "5475: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6887:  }",
          "6888: }",
          "6890: const (",
          "6892:  ThresholdComparatorGreaterThan = \"GREATER_THAN\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6910: const (",
          "6912:  StateDBTypeLevelDb = \"LevelDB\"",
          "6915:  StateDBTypeCouchDb = \"CouchDB\"",
          "6916: )",
          "6919: func StateDBType_Values() []string {",
          "6920:  return []string{",
          "6921:   StateDBTypeLevelDb,",
          "6922:   StateDBTypeCouchDb,",
          "6923:  }",
          "6924: }",
          "",
          "---------------"
        ],
        "service/sfn/api.go||service/sfn/api.go": [
          "File: service/sfn/api.go -> service/sfn/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2968:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2980:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3056:  return s",
          "3057: }",
          "3060: func (s *CreateStateMachineInput) SetType(v string) *CreateStateMachineInput {",
          "3061:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3072: func (s *CreateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *CreateStateMachineInput {",
          "3073:  s.TracingConfiguration = v",
          "3074:  return s",
          "3075: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3414:  StopDate *time.Time `locationName:\"stopDate\" type:\"timestamp\"`",
          "3415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3435:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3484:  return s",
          "3485: }",
          "3487: type DescribeStateMachineForExecutionInput struct {",
          "3488:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3509: func (s *DescribeExecutionOutput) SetTraceHeader(v string) *DescribeExecutionOutput {",
          "3510:  s.TraceHeader = &v",
          "3511:  return s",
          "3512: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3555:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3585:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3601:  return s",
          "3602: }",
          "3605: func (s *DescribeStateMachineForExecutionOutput) SetUpdateDate(v time.Time) *DescribeStateMachineForExecutionOutput {",
          "3606:  s.UpdateDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3635: func (s *DescribeStateMachineForExecutionOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineForExecutionOutput {",
          "3636:  s.TracingConfiguration = v",
          "3637:  return s",
          "3638: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3701:  Status *string `locationName:\"status\" type:\"string\" enum:\"StateMachineStatus\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3740:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3758:  return s",
          "3759: }",
          "3762: func (s *DescribeStateMachineOutput) SetType(v string) *DescribeStateMachineOutput {",
          "3763:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3801: func (s *DescribeStateMachineOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineOutput {",
          "3802:  s.TracingConfiguration = v",
          "3803:  return s",
          "3804: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5190:  return s.RespMetadata.RequestID",
          "5191: }",
          "5194: type LambdaFunctionFailedEventDetails struct {",
          "5195:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5240: type InvalidTracingConfiguration struct {",
          "5241:  _            struct{}                  `type:\"structure\"`",
          "5242:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5244:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5245: }",
          "5248: func (s InvalidTracingConfiguration) String() string {",
          "5249:  return awsutil.Prettify(s)",
          "5250: }",
          "5253: func (s InvalidTracingConfiguration) GoString() string {",
          "5254:  return s.String()",
          "5255: }",
          "5257: func newErrorInvalidTracingConfiguration(v protocol.ResponseMetadata) error {",
          "5258:  return &InvalidTracingConfiguration{",
          "5259:   RespMetadata: v,",
          "5260:  }",
          "5261: }",
          "5264: func (s *InvalidTracingConfiguration) Code() string {",
          "5265:  return \"InvalidTracingConfiguration\"",
          "5266: }",
          "5269: func (s *InvalidTracingConfiguration) Message() string {",
          "5270:  if s.Message_ != nil {",
          "5271:   return *s.Message_",
          "5272:  }",
          "5273:  return \"\"",
          "5274: }",
          "5277: func (s *InvalidTracingConfiguration) OrigErr() error {",
          "5278:  return nil",
          "5279: }",
          "5281: func (s *InvalidTracingConfiguration) Error() string {",
          "5282:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5283: }",
          "5286: func (s *InvalidTracingConfiguration) StatusCode() int {",
          "5287:  return s.RespMetadata.StatusCode",
          "5288: }",
          "5291: func (s *InvalidTracingConfiguration) RequestID() string {",
          "5292:  return s.RespMetadata.RequestID",
          "5293: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6300:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "6301: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6406:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6347:  return s",
          "6348: }",
          "6350: type StartExecutionOutput struct {",
          "6351:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6457: func (s *StartExecutionInput) SetTraceHeader(v string) *StartExecutionInput {",
          "6458:  s.TraceHeader = &v",
          "6459:  return s",
          "6460: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7680:  return s.RespMetadata.RequestID",
          "7681: }",
          "7683: type UntagResourceInput struct {",
          "7684:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7797: type TracingConfiguration struct {",
          "7798:  _ struct{} `type:\"structure\"`",
          "7801:  Enabled *bool `locationName:\"enabled\" type:\"boolean\"`",
          "7802: }",
          "7805: func (s TracingConfiguration) String() string {",
          "7806:  return awsutil.Prettify(s)",
          "7807: }",
          "7810: func (s TracingConfiguration) GoString() string {",
          "7811:  return s.String()",
          "7812: }",
          "7815: func (s *TracingConfiguration) SetEnabled(v bool) *TracingConfiguration {",
          "7816:  s.Enabled = &v",
          "7817:  return s",
          "7818: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7768:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7769: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7908:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7829:  return s",
          "7830: }",
          "7832: type UpdateStateMachineOutput struct {",
          "7833:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7973: func (s *UpdateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *UpdateStateMachineInput {",
          "7974:  s.TracingConfiguration = v",
          "7975:  return s",
          "7976: }",
          "",
          "---------------"
        ],
        "service/sfn/errors.go||service/sfn/errors.go": [
          "File: service/sfn/errors.go -> service/sfn/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:  ErrCodeInvalidToken = \"InvalidToken\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:  ErrCodeInvalidTracingConfiguration = \"InvalidTracingConfiguration\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:  \"InvalidName\":                  newErrorInvalidName,",
          "165:  \"InvalidOutput\":                newErrorInvalidOutput,",
          "166:  \"InvalidToken\":                 newErrorInvalidToken,",
          "167:  \"MissingRequiredParameter\":     newErrorMissingRequiredParameter,",
          "168:  \"ResourceNotFound\":             newErrorResourceNotFound,",
          "169:  \"StateMachineAlreadyExists\":    newErrorStateMachineAlreadyExists,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:  \"InvalidTracingConfiguration\":  newErrorInvalidTracingConfiguration,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
      "candidate_info": {
        "commit_hash": "f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/f3abecfcb048f8645ac8a98dfb9d190ed9d58a8d",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/doc.go",
          "service/elasticache/api.go"
        ],
        "message": "Release v1.33.1 (2020-07-02) ===\n\n### Service Client Updates\n* `service/connect`: Updates service documentation\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/doc.go||service/connect/doc.go",
          "service/elasticache/api.go||service/elasticache/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:     \"ap-south-1\":     endpoint{},",
          "685:     \"ap-southeast-1\": endpoint{},",
          "686:     \"ap-southeast-2\": endpoint{},",
          "687:     \"eu-central-1\":   endpoint{},",
          "688:     \"eu-west-1\":      endpoint{},",
          "689:     \"eu-west-2\":      endpoint{},",
          "690:     \"us-east-1\":      endpoint{},",
          "691:     \"us-east-2\":      endpoint{},",
          "692:     \"us-west-2\":      endpoint{},",
          "693:    },",
          "694:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:     \"ca-central-1\":   endpoint{},",
          "689:     \"eu-north-1\":     endpoint{},",
          "692:     \"eu-west-3\":      endpoint{},",
          "693:     \"sa-east-1\":      endpoint{},",
          "696:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4280:   \"ram\": service{",
          "4282:    Endpoints: endpoints{",
          "4283:     \"ap-east-1\":      endpoint{},",
          "4284:     \"ap-northeast-1\": endpoint{},",
          "4285:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4288:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4289:     \"ca-central-1\":   endpoint{},",
          "4290:     \"eu-central-1\":   endpoint{},",
          "4291:     \"eu-north-1\":     endpoint{},",
          "4292:     \"eu-west-1\":      endpoint{},",
          "4293:     \"eu-west-2\":      endpoint{},",
          "4294:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4298:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.0\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.1\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go"
        ],
        "service/connect/doc.go||service/connect/doc.go": [
          "File: service/connect/doc.go -> service/connect/doc.go"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ]
      }
    },
    {
      "candidate_hash": "32dab430faeada57e79f8c9f0be15d1258c6d0af",
      "candidate_info": {
        "commit_hash": "32dab430faeada57e79f8c9f0be15d1258c6d0af",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/32dab430faeada57e79f8c9f0be15d1258c6d0af",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/codebuild/2016-10-06/api-2.json",
          "models/apis/codebuild/2016-10-06/docs-2.json",
          "models/apis/codebuild/2016-10-06/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/guardduty/2017-11-28/api-2.json",
          "models/apis/guardduty/2017-11-28/docs-2.json",
          "models/apis/guardduty/2017-11-28/paginators-1.json",
          "models/apis/kafka/2018-11-14/api-2.json",
          "models/apis/kafka/2018-11-14/docs-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/resource-groups/2017-11-27/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/sesv2/2019-09-27/api-2.json",
          "models/apis/sesv2/2019-09-27/docs-2.json",
          "models/apis/sesv2/2019-09-27/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/cloudfront/api.go",
          "service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go",
          "service/guardduty/api.go",
          "service/guardduty/guarddutyiface/interface.go",
          "service/kafka/api.go",
          "service/kafka/kafkaiface/interface.go",
          "service/organizations/api.go",
          "service/resourcegroups/api.go",
          "service/servicecatalog/api.go",
          "service/sesv2/api.go",
          "service/sesv2/errors.go",
          "service/sesv2/sesv2iface/interface.go"
        ],
        "message": "Release v1.33.16 (2020-07-30) ===\n\n### Service Client Updates\n* `service/cloudfront`: Updates service documentation\n  * Documentation updates for CloudFront\n* `service/codebuild`: Updates service API, documentation, and paginators\n  * Adding support for BuildBatch, and CodeCoverage APIs. BuildBatch allows you to model your project environment in source, and helps start multiple builds with a single API call. CodeCoverage allows you to track your code coverage using AWS CodeBuild.\n* `service/ec2`: Updates service API\n  * EC2 On-Demand Capacity Reservations now adds support to bring your own licenses (BYOL) of Windows operating system to launch EC2 instances.\n* `service/guardduty`: Updates service API, documentation, and paginators\n  * GuardDuty can now provide detailed cost metrics broken down by account, data source, and S3 resources, based on the past 30 days of usage.  This new feature also supports viewing cost metrics for all member accounts as a GuardDuty master.\n* `service/kafka`: Updates service API and documentation\n* `service/organizations`: Updates service documentation\n  * Documentation updates for AWS Organizations\n* `service/resource-groups`: Updates service documentation\n* `service/servicecatalog`: Updates service API and documentation\n  * This release adds support for ProvisionProduct, UpdateProvisionedProduct & DescribeProvisioningParameters by product name, provisioning artifact name and path name. In addition DescribeProvisioningParameters now returns a list of provisioning artifact outputs.\n* `service/sesv2`: Updates service API, documentation, and paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/codebuild/api.go||service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/guardduty/api.go||service/guardduty/api.go",
          "service/guardduty/guarddutyiface/interface.go||service/guardduty/guarddutyiface/interface.go",
          "service/kafka/api.go||service/kafka/api.go",
          "service/kafka/kafkaiface/interface.go||service/kafka/kafkaiface/interface.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/resourcegroups/api.go||service/resourcegroups/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/sesv2/api.go||service/sesv2/api.go",
          "service/sesv2/errors.go||service/sesv2/errors.go",
          "service/sesv2/sesv2iface/interface.go||service/sesv2/sesv2iface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "898:     \"ca-central-1\":   endpoint{},",
          "899:     \"eu-central-1\":   endpoint{},",
          "900:     \"eu-north-1\":     endpoint{},",
          "901:     \"eu-west-1\":      endpoint{},",
          "902:     \"eu-west-2\":      endpoint{},",
          "903:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "901:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1813:   \"ds\": service{",
          "1815:    Endpoints: endpoints{",
          "1816:     \"ap-east-1\":      endpoint{},",
          "1817:     \"ap-northeast-1\": endpoint{},",
          "1818:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1817:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1822:     \"ca-central-1\":   endpoint{},",
          "1823:     \"eu-central-1\":   endpoint{},",
          "1824:     \"eu-north-1\":     endpoint{},",
          "1825:     \"eu-west-1\":      endpoint{},",
          "1826:     \"eu-west-2\":      endpoint{},",
          "1827:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1827:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6344:   },",
          "6345:  },",
          "6346:  Services: services{",
          "6347:   \"acm\": service{",
          "6349:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6350:   \"access-analyzer\": service{",
          "6352:    Endpoints: endpoints{",
          "6353:     \"cn-north-1\":     endpoint{},",
          "6354:     \"cn-northwest-1\": endpoint{},",
          "6355:    },",
          "6356:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.16\"",
          "",
          "---------------"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go"
        ],
        "service/codebuild/api.go||service/codebuild/api.go": [
          "File: service/codebuild/api.go -> service/codebuild/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:  return out, req.Send()",
          "93: }",
          "95: const opBatchGetBuilds = \"BatchGetBuilds\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95: const opBatchGetBuildBatches = \"BatchGetBuildBatches\"",
          "121: func (c *CodeBuild) BatchGetBuildBatchesRequest(input *BatchGetBuildBatchesInput) (req *request.Request, output *BatchGetBuildBatchesOutput) {",
          "122:  op := &request.Operation{",
          "123:   Name:       opBatchGetBuildBatches,",
          "124:   HTTPMethod: \"POST\",",
          "125:   HTTPPath:   \"/\",",
          "126:  }",
          "128:  if input == nil {",
          "129:   input = &BatchGetBuildBatchesInput{}",
          "130:  }",
          "132:  output = &BatchGetBuildBatchesOutput{}",
          "133:  req = c.newRequest(op, input, output)",
          "134:  return",
          "135: }",
          "153: func (c *CodeBuild) BatchGetBuildBatches(input *BatchGetBuildBatchesInput) (*BatchGetBuildBatchesOutput, error) {",
          "154:  req, out := c.BatchGetBuildBatchesRequest(input)",
          "155:  return out, req.Send()",
          "156: }",
          "167: func (c *CodeBuild) BatchGetBuildBatchesWithContext(ctx aws.Context, input *BatchGetBuildBatchesInput, opts ...request.Option) (*BatchGetBuildBatchesOutput, error) {",
          "168:  req, out := c.BatchGetBuildBatchesRequest(input)",
          "169:  req.SetContext(ctx)",
          "170:  req.ApplyOptions(opts...)",
          "171:  return out, req.Send()",
          "172: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680:  return out, req.Send()",
          "681: }",
          "683: const opDeleteProject = \"DeleteProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "762: const opDeleteBuildBatch = \"DeleteBuildBatch\"",
          "788: func (c *CodeBuild) DeleteBuildBatchRequest(input *DeleteBuildBatchInput) (req *request.Request, output *DeleteBuildBatchOutput) {",
          "789:  op := &request.Operation{",
          "790:   Name:       opDeleteBuildBatch,",
          "791:   HTTPMethod: \"POST\",",
          "792:   HTTPPath:   \"/\",",
          "793:  }",
          "795:  if input == nil {",
          "796:   input = &DeleteBuildBatchInput{}",
          "797:  }",
          "799:  output = &DeleteBuildBatchOutput{}",
          "800:  req = c.newRequest(op, input, output)",
          "801:  return",
          "802: }",
          "820: func (c *CodeBuild) DeleteBuildBatch(input *DeleteBuildBatchInput) (*DeleteBuildBatchOutput, error) {",
          "821:  req, out := c.DeleteBuildBatchRequest(input)",
          "822:  return out, req.Send()",
          "823: }",
          "834: func (c *CodeBuild) DeleteBuildBatchWithContext(ctx aws.Context, input *DeleteBuildBatchInput, opts ...request.Option) (*DeleteBuildBatchOutput, error) {",
          "835:  req, out := c.DeleteBuildBatchRequest(input)",
          "836:  req.SetContext(ctx)",
          "837:  req.ApplyOptions(opts...)",
          "838:  return out, req.Send()",
          "839: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1174:  return out, req.Send()",
          "1175: }",
          "1177: const opDescribeTestCases = \"DescribeTestCases\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1335: const opDescribeCodeCoverages = \"DescribeCodeCoverages\"",
          "1361: func (c *CodeBuild) DescribeCodeCoveragesRequest(input *DescribeCodeCoveragesInput) (req *request.Request, output *DescribeCodeCoveragesOutput) {",
          "1362:  op := &request.Operation{",
          "1363:   Name:       opDescribeCodeCoverages,",
          "1364:   HTTPMethod: \"POST\",",
          "1365:   HTTPPath:   \"/\",",
          "1366:   Paginator: &request.Paginator{",
          "1367:    InputTokens:     []string{\"nextToken\"},",
          "1368:    OutputTokens:    []string{\"nextToken\"},",
          "1369:    LimitToken:      \"maxResults\",",
          "1370:    TruncationToken: \"\",",
          "1371:   },",
          "1372:  }",
          "1374:  if input == nil {",
          "1375:   input = &DescribeCodeCoveragesInput{}",
          "1376:  }",
          "1378:  output = &DescribeCodeCoveragesOutput{}",
          "1379:  req = c.newRequest(op, input, output)",
          "1380:  return",
          "1381: }",
          "1399: func (c *CodeBuild) DescribeCodeCoverages(input *DescribeCodeCoveragesInput) (*DescribeCodeCoveragesOutput, error) {",
          "1400:  req, out := c.DescribeCodeCoveragesRequest(input)",
          "1401:  return out, req.Send()",
          "1402: }",
          "1413: func (c *CodeBuild) DescribeCodeCoveragesWithContext(ctx aws.Context, input *DescribeCodeCoveragesInput, opts ...request.Option) (*DescribeCodeCoveragesOutput, error) {",
          "1414:  req, out := c.DescribeCodeCoveragesRequest(input)",
          "1415:  req.SetContext(ctx)",
          "1416:  req.ApplyOptions(opts...)",
          "1417:  return out, req.Send()",
          "1418: }",
          "1437: func (c *CodeBuild) DescribeCodeCoveragesPages(input *DescribeCodeCoveragesInput, fn func(*DescribeCodeCoveragesOutput, bool) bool) error {",
          "1438:  return c.DescribeCodeCoveragesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1439: }",
          "1448: func (c *CodeBuild) DescribeCodeCoveragesPagesWithContext(ctx aws.Context, input *DescribeCodeCoveragesInput, fn func(*DescribeCodeCoveragesOutput, bool) bool, opts ...request.Option) error {",
          "1449:  p := request.Pagination{",
          "1450:   NewRequest: func() (*request.Request, error) {",
          "1451:    var inCpy *DescribeCodeCoveragesInput",
          "1452:    if input != nil {",
          "1453:     tmp := *input",
          "1454:     inCpy = &tmp",
          "1455:    }",
          "1456:    req, _ := c.DescribeCodeCoveragesRequest(inCpy)",
          "1457:    req.SetContext(ctx)",
          "1458:    req.ApplyOptions(opts...)",
          "1459:    return req, nil",
          "1460:   },",
          "1461:  }",
          "1463:  for p.Next() {",
          "1464:   if !fn(p.Page().(*DescribeCodeCoveragesOutput), !p.HasNextPage()) {",
          "1465:    break",
          "1466:   }",
          "1467:  }",
          "1469:  return p.Err()",
          "1470: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1566:  return out, req.Send()",
          "1567: }",
          "1596:  op := &request.Operation{",
          "1598:   HTTPMethod: \"POST\",",
          "1599:   HTTPPath:   \"/\",",
          "1600:   Paginator: &request.Paginator{",
          "1601:    InputTokens:     []string{\"nextToken\"},",
          "1602:    OutputTokens:    []string{\"nextToken\"},",
          "1604:    TruncationToken: \"\",",
          "1605:   },",
          "1606:  }",
          "1608:  if input == nil {",
          "1610:  }",
          "1613:  req = c.newRequest(op, input, output)",
          "1614:  return",
          "1615: }",
          "1635:  return out, req.Send()",
          "1636: }",
          "1649:  req.SetContext(ctx)",
          "1650:  req.ApplyOptions(opts...)",
          "1651:  return out, req.Send()",
          "1652: }",
          "1673: }",
          "1683:  p := request.Pagination{",
          "1684:   NewRequest: func() (*request.Request, error) {",
          "1686:    if input != nil {",
          "1687:     tmp := *input",
          "1688:     inCpy = &tmp",
          "1689:    }",
          "1691:    req.SetContext(ctx)",
          "1692:    req.ApplyOptions(opts...)",
          "1693:    return req, nil",
          "",
          "[Removed Lines]",
          "1569: const opListBuilds = \"ListBuilds\"",
          "1595: func (c *CodeBuild) ListBuildsRequest(input *ListBuildsInput) (req *request.Request, output *ListBuildsOutput) {",
          "1597:   Name:       opListBuilds,",
          "1603:    LimitToken:      \"\",",
          "1609:   input = &ListBuildsInput{}",
          "1612:  output = &ListBuildsOutput{}",
          "1633: func (c *CodeBuild) ListBuilds(input *ListBuildsInput) (*ListBuildsOutput, error) {",
          "1634:  req, out := c.ListBuildsRequest(input)",
          "1647: func (c *CodeBuild) ListBuildsWithContext(ctx aws.Context, input *ListBuildsInput, opts ...request.Option) (*ListBuildsOutput, error) {",
          "1648:  req, out := c.ListBuildsRequest(input)",
          "1671: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "1672:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1682: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "1685:    var inCpy *ListBuildsInput",
          "1690:    req, _ := c.ListBuildsRequest(inCpy)",
          "",
          "[Added Lines]",
          "1864: const opListBuildBatches = \"ListBuildBatches\"",
          "1890: func (c *CodeBuild) ListBuildBatchesRequest(input *ListBuildBatchesInput) (req *request.Request, output *ListBuildBatchesOutput) {",
          "1892:   Name:       opListBuildBatches,",
          "1898:    LimitToken:      \"maxResults\",",
          "1904:   input = &ListBuildBatchesInput{}",
          "1907:  output = &ListBuildBatchesOutput{}",
          "1928: func (c *CodeBuild) ListBuildBatches(input *ListBuildBatchesInput) (*ListBuildBatchesOutput, error) {",
          "1929:  req, out := c.ListBuildBatchesRequest(input)",
          "1942: func (c *CodeBuild) ListBuildBatchesWithContext(ctx aws.Context, input *ListBuildBatchesInput, opts ...request.Option) (*ListBuildBatchesOutput, error) {",
          "1943:  req, out := c.ListBuildBatchesRequest(input)",
          "1966: func (c *CodeBuild) ListBuildBatchesPages(input *ListBuildBatchesInput, fn func(*ListBuildBatchesOutput, bool) bool) error {",
          "1967:  return c.ListBuildBatchesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1977: func (c *CodeBuild) ListBuildBatchesPagesWithContext(ctx aws.Context, input *ListBuildBatchesInput, fn func(*ListBuildBatchesOutput, bool) bool, opts ...request.Option) error {",
          "1980:    var inCpy *ListBuildBatchesInput",
          "1985:    req, _ := c.ListBuildBatchesRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1695:  }",
          "1697:  for p.Next() {",
          "1699:    break",
          "1700:   }",
          "1701:  }",
          "",
          "[Removed Lines]",
          "1698:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1993:   if !fn(p.Page().(*ListBuildBatchesOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1703:  return p.Err()",
          "1704: }",
          "",
          "[Removed Lines]",
          "1706: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "[Added Lines]",
          "2001: const opListBuildBatchesForProject = \"ListBuildBatchesForProject\"",
          "2027: func (c *CodeBuild) ListBuildBatchesForProjectRequest(input *ListBuildBatchesForProjectInput) (req *request.Request, output *ListBuildBatchesForProjectOutput) {",
          "2028:  op := &request.Operation{",
          "2029:   Name:       opListBuildBatchesForProject,",
          "2030:   HTTPMethod: \"POST\",",
          "2031:   HTTPPath:   \"/\",",
          "2032:   Paginator: &request.Paginator{",
          "2033:    InputTokens:     []string{\"nextToken\"},",
          "2034:    OutputTokens:    []string{\"nextToken\"},",
          "2035:    LimitToken:      \"maxResults\",",
          "2036:    TruncationToken: \"\",",
          "2037:   },",
          "2038:  }",
          "2040:  if input == nil {",
          "2041:   input = &ListBuildBatchesForProjectInput{}",
          "2042:  }",
          "2044:  output = &ListBuildBatchesForProjectOutput{}",
          "2045:  req = c.newRequest(op, input, output)",
          "2046:  return",
          "2047: }",
          "2068: func (c *CodeBuild) ListBuildBatchesForProject(input *ListBuildBatchesForProjectInput) (*ListBuildBatchesForProjectOutput, error) {",
          "2069:  req, out := c.ListBuildBatchesForProjectRequest(input)",
          "2070:  return out, req.Send()",
          "2071: }",
          "2082: func (c *CodeBuild) ListBuildBatchesForProjectWithContext(ctx aws.Context, input *ListBuildBatchesForProjectInput, opts ...request.Option) (*ListBuildBatchesForProjectOutput, error) {",
          "2083:  req, out := c.ListBuildBatchesForProjectRequest(input)",
          "2084:  req.SetContext(ctx)",
          "2085:  req.ApplyOptions(opts...)",
          "2086:  return out, req.Send()",
          "2087: }",
          "2106: func (c *CodeBuild) ListBuildBatchesForProjectPages(input *ListBuildBatchesForProjectInput, fn func(*ListBuildBatchesForProjectOutput, bool) bool) error {",
          "2107:  return c.ListBuildBatchesForProjectPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2108: }",
          "2117: func (c *CodeBuild) ListBuildBatchesForProjectPagesWithContext(ctx aws.Context, input *ListBuildBatchesForProjectInput, fn func(*ListBuildBatchesForProjectOutput, bool) bool, opts ...request.Option) error {",
          "2118:  p := request.Pagination{",
          "2119:   NewRequest: func() (*request.Request, error) {",
          "2120:    var inCpy *ListBuildBatchesForProjectInput",
          "2121:    if input != nil {",
          "2122:     tmp := *input",
          "2123:     inCpy = &tmp",
          "2124:    }",
          "2125:    req, _ := c.ListBuildBatchesForProjectRequest(inCpy)",
          "2126:    req.SetContext(ctx)",
          "2127:    req.ApplyOptions(opts...)",
          "2128:    return req, nil",
          "2129:   },",
          "2130:  }",
          "2132:  for p.Next() {",
          "2133:   if !fn(p.Page().(*ListBuildBatchesForProjectOutput), !p.HasNextPage()) {",
          "2134:    break",
          "2135:   }",
          "2136:  }",
          "2138:  return p.Err()",
          "2139: }",
          "2141: const opListBuilds = \"ListBuilds\"",
          "2167: func (c *CodeBuild) ListBuildsRequest(input *ListBuildsInput) (req *request.Request, output *ListBuildsOutput) {",
          "2168:  op := &request.Operation{",
          "2169:   Name:       opListBuilds,",
          "2170:   HTTPMethod: \"POST\",",
          "2171:   HTTPPath:   \"/\",",
          "2172:   Paginator: &request.Paginator{",
          "2173:    InputTokens:     []string{\"nextToken\"},",
          "2174:    OutputTokens:    []string{\"nextToken\"},",
          "2175:    LimitToken:      \"\",",
          "2176:    TruncationToken: \"\",",
          "2177:   },",
          "2178:  }",
          "2180:  if input == nil {",
          "2181:   input = &ListBuildsInput{}",
          "2182:  }",
          "2184:  output = &ListBuildsOutput{}",
          "2185:  req = c.newRequest(op, input, output)",
          "2186:  return",
          "2187: }",
          "2205: func (c *CodeBuild) ListBuilds(input *ListBuildsInput) (*ListBuildsOutput, error) {",
          "2206:  req, out := c.ListBuildsRequest(input)",
          "2207:  return out, req.Send()",
          "2208: }",
          "2219: func (c *CodeBuild) ListBuildsWithContext(ctx aws.Context, input *ListBuildsInput, opts ...request.Option) (*ListBuildsOutput, error) {",
          "2220:  req, out := c.ListBuildsRequest(input)",
          "2221:  req.SetContext(ctx)",
          "2222:  req.ApplyOptions(opts...)",
          "2223:  return out, req.Send()",
          "2224: }",
          "2243: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "2244:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2245: }",
          "2254: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "2255:  p := request.Pagination{",
          "2256:   NewRequest: func() (*request.Request, error) {",
          "2257:    var inCpy *ListBuildsInput",
          "2258:    if input != nil {",
          "2259:     tmp := *input",
          "2260:     inCpy = &tmp",
          "2261:    }",
          "2262:    req, _ := c.ListBuildsRequest(inCpy)",
          "2263:    req.SetContext(ctx)",
          "2264:    req.ApplyOptions(opts...)",
          "2265:    return req, nil",
          "2266:   },",
          "2267:  }",
          "2269:  for p.Next() {",
          "2270:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "2271:    break",
          "2272:   }",
          "2273:  }",
          "2275:  return p.Err()",
          "2276: }",
          "2278: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2900:  return out, req.Send()",
          "2901: }",
          "",
          "[Removed Lines]",
          "2903: const opStartBuild = \"StartBuild\"",
          "",
          "[Added Lines]",
          "3480: const opRetryBuild = \"RetryBuild\"",
          "3506: func (c *CodeBuild) RetryBuildRequest(input *RetryBuildInput) (req *request.Request, output *RetryBuildOutput) {",
          "3507:  op := &request.Operation{",
          "3508:   Name:       opRetryBuild,",
          "3509:   HTTPMethod: \"POST\",",
          "3510:   HTTPPath:   \"/\",",
          "3511:  }",
          "3513:  if input == nil {",
          "3514:   input = &RetryBuildInput{}",
          "3515:  }",
          "3517:  output = &RetryBuildOutput{}",
          "3518:  req = c.newRequest(op, input, output)",
          "3519:  return",
          "3520: }",
          "3544: func (c *CodeBuild) RetryBuild(input *RetryBuildInput) (*RetryBuildOutput, error) {",
          "3545:  req, out := c.RetryBuildRequest(input)",
          "3546:  return out, req.Send()",
          "3547: }",
          "3558: func (c *CodeBuild) RetryBuildWithContext(ctx aws.Context, input *RetryBuildInput, opts ...request.Option) (*RetryBuildOutput, error) {",
          "3559:  req, out := c.RetryBuildRequest(input)",
          "3560:  req.SetContext(ctx)",
          "3561:  req.ApplyOptions(opts...)",
          "3562:  return out, req.Send()",
          "3563: }",
          "3565: const opRetryBuildBatch = \"RetryBuildBatch\"",
          "3591: func (c *CodeBuild) RetryBuildBatchRequest(input *RetryBuildBatchInput) (req *request.Request, output *RetryBuildBatchOutput) {",
          "3592:  op := &request.Operation{",
          "3593:   Name:       opRetryBuildBatch,",
          "3594:   HTTPMethod: \"POST\",",
          "3595:   HTTPPath:   \"/\",",
          "3596:  }",
          "3598:  if input == nil {",
          "3599:   input = &RetryBuildBatchInput{}",
          "3600:  }",
          "3602:  output = &RetryBuildBatchOutput{}",
          "3603:  req = c.newRequest(op, input, output)",
          "3604:  return",
          "3605: }",
          "3626: func (c *CodeBuild) RetryBuildBatch(input *RetryBuildBatchInput) (*RetryBuildBatchOutput, error) {",
          "3627:  req, out := c.RetryBuildBatchRequest(input)",
          "3628:  return out, req.Send()",
          "3629: }",
          "3640: func (c *CodeBuild) RetryBuildBatchWithContext(ctx aws.Context, input *RetryBuildBatchInput, opts ...request.Option) (*RetryBuildBatchOutput, error) {",
          "3641:  req, out := c.RetryBuildBatchRequest(input)",
          "3642:  req.SetContext(ctx)",
          "3643:  req.ApplyOptions(opts...)",
          "3644:  return out, req.Send()",
          "3645: }",
          "3647: const opStartBuild = \"StartBuild\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2985:  return out, req.Send()",
          "2986: }",
          "2988: const opStopBuild = \"StopBuild\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3732: const opStartBuildBatch = \"StartBuildBatch\"",
          "3758: func (c *CodeBuild) StartBuildBatchRequest(input *StartBuildBatchInput) (req *request.Request, output *StartBuildBatchOutput) {",
          "3759:  op := &request.Operation{",
          "3760:   Name:       opStartBuildBatch,",
          "3761:   HTTPMethod: \"POST\",",
          "3762:   HTTPPath:   \"/\",",
          "3763:  }",
          "3765:  if input == nil {",
          "3766:   input = &StartBuildBatchInput{}",
          "3767:  }",
          "3769:  output = &StartBuildBatchOutput{}",
          "3770:  req = c.newRequest(op, input, output)",
          "3771:  return",
          "3772: }",
          "3793: func (c *CodeBuild) StartBuildBatch(input *StartBuildBatchInput) (*StartBuildBatchOutput, error) {",
          "3794:  req, out := c.StartBuildBatchRequest(input)",
          "3795:  return out, req.Send()",
          "3796: }",
          "3807: func (c *CodeBuild) StartBuildBatchWithContext(ctx aws.Context, input *StartBuildBatchInput, opts ...request.Option) (*StartBuildBatchOutput, error) {",
          "3808:  req, out := c.StartBuildBatchRequest(input)",
          "3809:  req.SetContext(ctx)",
          "3810:  req.ApplyOptions(opts...)",
          "3811:  return out, req.Send()",
          "3812: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3067:  return out, req.Send()",
          "3068: }",
          "3070: const opUpdateProject = \"UpdateProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3896: const opStopBuildBatch = \"StopBuildBatch\"",
          "3922: func (c *CodeBuild) StopBuildBatchRequest(input *StopBuildBatchInput) (req *request.Request, output *StopBuildBatchOutput) {",
          "3923:  op := &request.Operation{",
          "3924:   Name:       opStopBuildBatch,",
          "3925:   HTTPMethod: \"POST\",",
          "3926:   HTTPPath:   \"/\",",
          "3927:  }",
          "3929:  if input == nil {",
          "3930:   input = &StopBuildBatchInput{}",
          "3931:  }",
          "3933:  output = &StopBuildBatchOutput{}",
          "3934:  req = c.newRequest(op, input, output)",
          "3935:  return",
          "3936: }",
          "3957: func (c *CodeBuild) StopBuildBatch(input *StopBuildBatchInput) (*StopBuildBatchOutput, error) {",
          "3958:  req, out := c.StopBuildBatchRequest(input)",
          "3959:  return out, req.Send()",
          "3960: }",
          "3971: func (c *CodeBuild) StopBuildBatchWithContext(ctx aws.Context, input *StopBuildBatchInput, opts ...request.Option) (*StopBuildBatchOutput, error) {",
          "3972:  req, out := c.StopBuildBatchRequest(input)",
          "3973:  req.SetContext(ctx)",
          "3974:  req.ApplyOptions(opts...)",
          "3975:  return out, req.Send()",
          "3976: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3447:  return s",
          "3448: }",
          "3451:  _ struct{} `type:\"structure\"`",
          "3457: }",
          "",
          "[Removed Lines]",
          "3450: type BatchGetBuildsInput struct {",
          "3456:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\" required:\"true\"`",
          "",
          "[Added Lines]",
          "4358: type BatchGetBuildBatchesInput struct {",
          "4364:  Ids []*string `locationName:\"ids\" type:\"list\" required:\"true\"`",
          "4365: }",
          "4368: func (s BatchGetBuildBatchesInput) String() string {",
          "4369:  return awsutil.Prettify(s)",
          "4370: }",
          "4373: func (s BatchGetBuildBatchesInput) GoString() string {",
          "4374:  return s.String()",
          "4375: }",
          "4378: func (s *BatchGetBuildBatchesInput) Validate() error {",
          "4379:  invalidParams := request.ErrInvalidParams{Context: \"BatchGetBuildBatchesInput\"}",
          "4380:  if s.Ids == nil {",
          "4381:   invalidParams.Add(request.NewErrParamRequired(\"Ids\"))",
          "4382:  }",
          "4384:  if invalidParams.Len() > 0 {",
          "4385:   return invalidParams",
          "4386:  }",
          "4387:  return nil",
          "4388: }",
          "4391: func (s *BatchGetBuildBatchesInput) SetIds(v []*string) *BatchGetBuildBatchesInput {",
          "4392:  s.Ids = v",
          "4393:  return s",
          "4394: }",
          "4396: type BatchGetBuildBatchesOutput struct {",
          "4397:  _ struct{} `type:\"structure\"`",
          "4400:  BuildBatches []*BuildBatch `locationName:\"buildBatches\" type:\"list\"`",
          "4403:  BuildBatchesNotFound []*string `locationName:\"buildBatchesNotFound\" type:\"list\"`",
          "4404: }",
          "4407: func (s BatchGetBuildBatchesOutput) String() string {",
          "4408:  return awsutil.Prettify(s)",
          "4409: }",
          "4412: func (s BatchGetBuildBatchesOutput) GoString() string {",
          "4413:  return s.String()",
          "4414: }",
          "4417: func (s *BatchGetBuildBatchesOutput) SetBuildBatches(v []*BuildBatch) *BatchGetBuildBatchesOutput {",
          "4418:  s.BuildBatches = v",
          "4419:  return s",
          "4420: }",
          "4423: func (s *BatchGetBuildBatchesOutput) SetBuildBatchesNotFound(v []*string) *BatchGetBuildBatchesOutput {",
          "4424:  s.BuildBatchesNotFound = v",
          "4425:  return s",
          "4426: }",
          "4428: type BatchGetBuildsInput struct {",
          "4429:  _ struct{} `type:\"structure\"`",
          "4434:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3743:  return s",
          "3744: }",
          "3747: type Build struct {",
          "3748:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4725: type BatchRestrictions struct {",
          "4726:  _ struct{} `type:\"structure\"`",
          "4731:  ComputeTypesAllowed []*string `locationName:\"computeTypesAllowed\" type:\"list\"`",
          "4734:  MaximumBuildsAllowed *int64 `locationName:\"maximumBuildsAllowed\" type:\"integer\"`",
          "4735: }",
          "4738: func (s BatchRestrictions) String() string {",
          "4739:  return awsutil.Prettify(s)",
          "4740: }",
          "4743: func (s BatchRestrictions) GoString() string {",
          "4744:  return s.String()",
          "4745: }",
          "4748: func (s *BatchRestrictions) SetComputeTypesAllowed(v []*string) *BatchRestrictions {",
          "4749:  s.ComputeTypesAllowed = v",
          "4750:  return s",
          "4751: }",
          "4754: func (s *BatchRestrictions) SetMaximumBuildsAllowed(v int64) *BatchRestrictions {",
          "4755:  s.MaximumBuildsAllowed = &v",
          "4756:  return s",
          "4757: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3754:  Artifacts *BuildArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "3757:  BuildComplete *bool `locationName:\"buildComplete\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4770:  BuildBatchArn *string `locationName:\"buildBatchArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3930:  return s",
          "3931: }",
          "3934: func (s *Build) SetBuildComplete(v bool) *Build {",
          "3935:  s.BuildComplete = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4950: func (s *Build) SetBuildBatchArn(v string) *Build {",
          "4951:  s.BuildBatchArn = &v",
          "4952:  return s",
          "4953: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4188:  return s",
          "4189: }",
          "4193:  _ struct{} `type:\"structure\"`",
          "4285:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "4286: }",
          "4290:  return awsutil.Prettify(s)",
          "4291: }",
          "4295:  return s.String()",
          "4296: }",
          "4301:  return s",
          "4302: }",
          "4307:  return s",
          "4308: }",
          "4313:  return s",
          "4314: }",
          "4319:  return s",
          "4320: }",
          "4325:  return s",
          "4326: }",
          "4331:  return s",
          "4332: }",
          "4370: }",
          "4375: }",
          "4380: }",
          "4385:  return s",
          "4386: }",
          "4391:  return s",
          "4392: }",
          "4415: }",
          "4420: }",
          "4425: }",
          "4438: }",
          "4443:  return s",
          "4444: }",
          "4449:  return s",
          "4450: }",
          "4455:  return s",
          "4456: }",
          "4572: }",
          "4576:  return awsutil.Prettify(s)",
          "4577: }",
          "4581:  return s.String()",
          "4582: }",
          "4697:  return s",
          "4698: }",
          "4703:  return s",
          "4704: }",
          "4709:  return s",
          "4710: }",
          "4715:  return s",
          "4716: }",
          "4721:  return s",
          "4722: }",
          "4727:  return s",
          "4728: }",
          "4764: }",
          "4770: }",
          "4776: }",
          "4781:  return s",
          "4782: }",
          "4787:  return s",
          "4788: }",
          "4793:  return s",
          "4794: }",
          "4799:  return s",
          "4800: }",
          "4805:  return s",
          "4806: }",
          "4809:  _ struct{} `type:\"structure\"`",
          "4813: }",
          "4817:  return awsutil.Prettify(s)",
          "4818: }",
          "4822:  return s.String()",
          "4823: }",
          "4828:  return s",
          "4829: }",
          "4832:  _ struct{} `type:\"structure\"`",
          "4855: }",
          "4859:  return awsutil.Prettify(s)",
          "4860: }",
          "4864:  return s.String()",
          "4865: }",
          "4902: }",
          "4907:  return s",
          "4908: }",
          "4913:  return s",
          "4914: }",
          "4919:  return s",
          "4920: }",
          "4925:  return s",
          "4926: }",
          "4929:  _ struct{} `type:\"structure\"`",
          "4933: }",
          "4937:  return awsutil.Prettify(s)",
          "4938: }",
          "4942:  return s.String()",
          "4943: }",
          "4948:  return s",
          "4949: }",
          "4952:  _ struct{} `type:\"structure\"`",
          "4974: }",
          "4978:  return awsutil.Prettify(s)",
          "4979: }",
          "4983:  return s.String()",
          "4984: }",
          "5000: }",
          "5005:  return s",
          "5006: }",
          "5011:  return s",
          "5012: }",
          "5017:  return s",
          "5018: }",
          "5021:  _ struct{} `type:\"structure\"`",
          "5087: }",
          "5091:  return awsutil.Prettify(s)",
          "5092: }",
          "5096:  return s.String()",
          "5097: }",
          "5107:  }",
          "5109:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "4192: type BuildNotDeleted struct {",
          "4196:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "4199:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "4200: }",
          "4203: func (s BuildNotDeleted) String() string {",
          "4204:  return awsutil.Prettify(s)",
          "4205: }",
          "4208: func (s BuildNotDeleted) GoString() string {",
          "4209:  return s.String()",
          "4210: }",
          "4213: func (s *BuildNotDeleted) SetId(v string) *BuildNotDeleted {",
          "4214:  s.Id = &v",
          "4215:  return s",
          "4216: }",
          "4219: func (s *BuildNotDeleted) SetStatusCode(v string) *BuildNotDeleted {",
          "4220:  s.StatusCode = &v",
          "4221:  return s",
          "4222: }",
          "4225: type BuildPhase struct {",
          "4226:  _ struct{} `type:\"structure\"`",
          "4230:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "4234:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "4237:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "4255:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "4282:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildPhaseType\"`",
          "4289: func (s BuildPhase) String() string {",
          "4294: func (s BuildPhase) GoString() string {",
          "4299: func (s *BuildPhase) SetContexts(v []*PhaseContext) *BuildPhase {",
          "4300:  s.Contexts = v",
          "4305: func (s *BuildPhase) SetDurationInSeconds(v int64) *BuildPhase {",
          "4306:  s.DurationInSeconds = &v",
          "4311: func (s *BuildPhase) SetEndTime(v time.Time) *BuildPhase {",
          "4312:  s.EndTime = &v",
          "4317: func (s *BuildPhase) SetPhaseStatus(v string) *BuildPhase {",
          "4318:  s.PhaseStatus = &v",
          "4323: func (s *BuildPhase) SetPhaseType(v string) *BuildPhase {",
          "4324:  s.PhaseType = &v",
          "4329: func (s *BuildPhase) SetStartTime(v time.Time) *BuildPhase {",
          "4330:  s.StartTime = &v",
          "4336: type BuildStatusConfig struct {",
          "4337:  _ struct{} `type:\"structure\"`",
          "4353:  Context *string `locationName:\"context\" type:\"string\"`",
          "4369:  TargetUrl *string `locationName:\"targetUrl\" type:\"string\"`",
          "4373: func (s BuildStatusConfig) String() string {",
          "4374:  return awsutil.Prettify(s)",
          "4378: func (s BuildStatusConfig) GoString() string {",
          "4379:  return s.String()",
          "4383: func (s *BuildStatusConfig) SetContext(v string) *BuildStatusConfig {",
          "4384:  s.Context = &v",
          "4389: func (s *BuildStatusConfig) SetTargetUrl(v string) *BuildStatusConfig {",
          "4390:  s.TargetUrl = &v",
          "4395: type CloudWatchLogsConfig struct {",
          "4396:  _ struct{} `type:\"structure\"`",
          "4400:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "4410:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "4414:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "4418: func (s CloudWatchLogsConfig) String() string {",
          "4419:  return awsutil.Prettify(s)",
          "4423: func (s CloudWatchLogsConfig) GoString() string {",
          "4424:  return s.String()",
          "4428: func (s *CloudWatchLogsConfig) Validate() error {",
          "4429:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchLogsConfig\"}",
          "4430:  if s.Status == nil {",
          "4431:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "4432:  }",
          "4434:  if invalidParams.Len() > 0 {",
          "4435:   return invalidParams",
          "4436:  }",
          "4437:  return nil",
          "4441: func (s *CloudWatchLogsConfig) SetGroupName(v string) *CloudWatchLogsConfig {",
          "4442:  s.GroupName = &v",
          "4447: func (s *CloudWatchLogsConfig) SetStatus(v string) *CloudWatchLogsConfig {",
          "4448:  s.Status = &v",
          "4453: func (s *CloudWatchLogsConfig) SetStreamName(v string) *CloudWatchLogsConfig {",
          "4454:  s.StreamName = &v",
          "4458: type CreateProjectInput struct {",
          "4459:  _ struct{} `type:\"structure\"`",
          "4464:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\" required:\"true\"`",
          "4468:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "4472:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "4475:  Description *string `locationName:\"description\" type:\"string\"`",
          "4485:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "4490:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\" required:\"true\"`",
          "4495:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "4499:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "4504:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "4507:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "4510:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "4515:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "4518:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "4525:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\" required:\"true\"`",
          "4530:  Source *ProjectSource `locationName:\"source\" type:\"structure\" required:\"true\"`",
          "4557:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "4563:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "4568:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "4571:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "4575: func (s CreateProjectInput) String() string {",
          "4580: func (s CreateProjectInput) GoString() string {",
          "4585: func (s *CreateProjectInput) Validate() error {",
          "4586:  invalidParams := request.ErrInvalidParams{Context: \"CreateProjectInput\"}",
          "4587:  if s.Artifacts == nil {",
          "4588:   invalidParams.Add(request.NewErrParamRequired(\"Artifacts\"))",
          "4589:  }",
          "4590:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "4591:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "4592:  }",
          "4593:  if s.Environment == nil {",
          "4594:   invalidParams.Add(request.NewErrParamRequired(\"Environment\"))",
          "4595:  }",
          "4596:  if s.Name == nil {",
          "4597:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4598:  }",
          "4599:  if s.Name != nil && len(*s.Name) < 2 {",
          "4600:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "4601:  }",
          "4602:  if s.QueuedTimeoutInMinutes != nil && *s.QueuedTimeoutInMinutes < 5 {",
          "4603:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutes\", 5))",
          "4604:  }",
          "4605:  if s.ServiceRole == nil {",
          "4606:   invalidParams.Add(request.NewErrParamRequired(\"ServiceRole\"))",
          "4607:  }",
          "4608:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "4609:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "4610:  }",
          "4611:  if s.Source == nil {",
          "4612:   invalidParams.Add(request.NewErrParamRequired(\"Source\"))",
          "4613:  }",
          "4614:  if s.TimeoutInMinutes != nil && *s.TimeoutInMinutes < 5 {",
          "4615:   invalidParams.Add(request.NewErrParamMinValue(\"TimeoutInMinutes\", 5))",
          "4616:  }",
          "4617:  if s.Artifacts != nil {",
          "4618:   if err := s.Artifacts.Validate(); err != nil {",
          "4619:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "4620:   }",
          "4621:  }",
          "4622:  if s.Cache != nil {",
          "4623:   if err := s.Cache.Validate(); err != nil {",
          "4624:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "4625:   }",
          "4626:  }",
          "4627:  if s.Environment != nil {",
          "4628:   if err := s.Environment.Validate(); err != nil {",
          "4629:    invalidParams.AddNested(\"Environment\", err.(request.ErrInvalidParams))",
          "4630:   }",
          "4631:  }",
          "4632:  if s.LogsConfig != nil {",
          "4633:   if err := s.LogsConfig.Validate(); err != nil {",
          "4634:    invalidParams.AddNested(\"LogsConfig\", err.(request.ErrInvalidParams))",
          "4635:   }",
          "4636:  }",
          "4637:  if s.SecondaryArtifacts != nil {",
          "4638:   for i, v := range s.SecondaryArtifacts {",
          "4639:    if v == nil {",
          "4640:     continue",
          "4641:    }",
          "4642:    if err := v.Validate(); err != nil {",
          "4643:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifacts\", i), err.(request.ErrInvalidParams))",
          "4644:    }",
          "4645:   }",
          "4646:  }",
          "4647:  if s.SecondarySourceVersions != nil {",
          "4648:   for i, v := range s.SecondarySourceVersions {",
          "4649:    if v == nil {",
          "4650:     continue",
          "4651:    }",
          "4652:    if err := v.Validate(); err != nil {",
          "4653:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourceVersions\", i), err.(request.ErrInvalidParams))",
          "4654:    }",
          "4655:   }",
          "4656:  }",
          "4657:  if s.SecondarySources != nil {",
          "4658:   for i, v := range s.SecondarySources {",
          "4659:    if v == nil {",
          "4660:     continue",
          "4661:    }",
          "4662:    if err := v.Validate(); err != nil {",
          "4663:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySources\", i), err.(request.ErrInvalidParams))",
          "4664:    }",
          "4665:   }",
          "4666:  }",
          "4667:  if s.Source != nil {",
          "4668:   if err := s.Source.Validate(); err != nil {",
          "4669:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "4670:   }",
          "4671:  }",
          "4672:  if s.Tags != nil {",
          "4673:   for i, v := range s.Tags {",
          "4674:    if v == nil {",
          "4675:     continue",
          "4676:    }",
          "4677:    if err := v.Validate(); err != nil {",
          "4678:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4679:    }",
          "4680:   }",
          "4681:  }",
          "4682:  if s.VpcConfig != nil {",
          "4683:   if err := s.VpcConfig.Validate(); err != nil {",
          "4684:    invalidParams.AddNested(\"VpcConfig\", err.(request.ErrInvalidParams))",
          "4685:   }",
          "4686:  }",
          "4688:  if invalidParams.Len() > 0 {",
          "4689:   return invalidParams",
          "4690:  }",
          "4691:  return nil",
          "4692: }",
          "4695: func (s *CreateProjectInput) SetArtifacts(v *ProjectArtifacts) *CreateProjectInput {",
          "4696:  s.Artifacts = v",
          "4701: func (s *CreateProjectInput) SetBadgeEnabled(v bool) *CreateProjectInput {",
          "4702:  s.BadgeEnabled = &v",
          "4707: func (s *CreateProjectInput) SetCache(v *ProjectCache) *CreateProjectInput {",
          "4708:  s.Cache = v",
          "4713: func (s *CreateProjectInput) SetDescription(v string) *CreateProjectInput {",
          "4714:  s.Description = &v",
          "4719: func (s *CreateProjectInput) SetEncryptionKey(v string) *CreateProjectInput {",
          "4720:  s.EncryptionKey = &v",
          "4725: func (s *CreateProjectInput) SetEnvironment(v *ProjectEnvironment) *CreateProjectInput {",
          "4726:  s.Environment = v",
          "4731: func (s *CreateProjectInput) SetFileSystemLocations(v []*ProjectFileSystemLocation) *CreateProjectInput {",
          "4732:  s.FileSystemLocations = v",
          "4733:  return s",
          "4734: }",
          "4737: func (s *CreateProjectInput) SetLogsConfig(v *LogsConfig) *CreateProjectInput {",
          "4738:  s.LogsConfig = v",
          "4739:  return s",
          "4740: }",
          "4743: func (s *CreateProjectInput) SetName(v string) *CreateProjectInput {",
          "4744:  s.Name = &v",
          "4745:  return s",
          "4746: }",
          "4749: func (s *CreateProjectInput) SetQueuedTimeoutInMinutes(v int64) *CreateProjectInput {",
          "4750:  s.QueuedTimeoutInMinutes = &v",
          "4751:  return s",
          "4752: }",
          "4755: func (s *CreateProjectInput) SetSecondaryArtifacts(v []*ProjectArtifacts) *CreateProjectInput {",
          "4756:  s.SecondaryArtifacts = v",
          "4757:  return s",
          "4758: }",
          "4761: func (s *CreateProjectInput) SetSecondarySourceVersions(v []*ProjectSourceVersion) *CreateProjectInput {",
          "4762:  s.SecondarySourceVersions = v",
          "4763:  return s",
          "4767: func (s *CreateProjectInput) SetSecondarySources(v []*ProjectSource) *CreateProjectInput {",
          "4768:  s.SecondarySources = v",
          "4769:  return s",
          "4773: func (s *CreateProjectInput) SetServiceRole(v string) *CreateProjectInput {",
          "4774:  s.ServiceRole = &v",
          "4775:  return s",
          "4779: func (s *CreateProjectInput) SetSource(v *ProjectSource) *CreateProjectInput {",
          "4780:  s.Source = v",
          "4785: func (s *CreateProjectInput) SetSourceVersion(v string) *CreateProjectInput {",
          "4786:  s.SourceVersion = &v",
          "4791: func (s *CreateProjectInput) SetTags(v []*Tag) *CreateProjectInput {",
          "4792:  s.Tags = v",
          "4797: func (s *CreateProjectInput) SetTimeoutInMinutes(v int64) *CreateProjectInput {",
          "4798:  s.TimeoutInMinutes = &v",
          "4803: func (s *CreateProjectInput) SetVpcConfig(v *VpcConfig) *CreateProjectInput {",
          "4804:  s.VpcConfig = v",
          "4808: type CreateProjectOutput struct {",
          "4812:  Project *Project `locationName:\"project\" type:\"structure\"`",
          "4816: func (s CreateProjectOutput) String() string {",
          "4821: func (s CreateProjectOutput) GoString() string {",
          "4826: func (s *CreateProjectOutput) SetProject(v *Project) *CreateProjectOutput {",
          "4827:  s.Project = v",
          "4831: type CreateReportGroupInput struct {",
          "4838:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\" required:\"true\"`",
          "4843:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "4849:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "4854:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ReportType\"`",
          "4858: func (s CreateReportGroupInput) String() string {",
          "4863: func (s CreateReportGroupInput) GoString() string {",
          "4868: func (s *CreateReportGroupInput) Validate() error {",
          "4869:  invalidParams := request.ErrInvalidParams{Context: \"CreateReportGroupInput\"}",
          "4870:  if s.ExportConfig == nil {",
          "4871:   invalidParams.Add(request.NewErrParamRequired(\"ExportConfig\"))",
          "4872:  }",
          "4873:  if s.Name == nil {",
          "4874:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4875:  }",
          "4876:  if s.Name != nil && len(*s.Name) < 2 {",
          "4877:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "4878:  }",
          "4879:  if s.Type == nil {",
          "4880:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "4881:  }",
          "4882:  if s.ExportConfig != nil {",
          "4883:   if err := s.ExportConfig.Validate(); err != nil {",
          "4884:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "4885:   }",
          "4886:  }",
          "4887:  if s.Tags != nil {",
          "4888:   for i, v := range s.Tags {",
          "4889:    if v == nil {",
          "4890:     continue",
          "4891:    }",
          "4892:    if err := v.Validate(); err != nil {",
          "4893:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4894:    }",
          "4895:   }",
          "4896:  }",
          "4898:  if invalidParams.Len() > 0 {",
          "4899:   return invalidParams",
          "4900:  }",
          "4901:  return nil",
          "4905: func (s *CreateReportGroupInput) SetExportConfig(v *ReportExportConfig) *CreateReportGroupInput {",
          "4906:  s.ExportConfig = v",
          "4911: func (s *CreateReportGroupInput) SetName(v string) *CreateReportGroupInput {",
          "4912:  s.Name = &v",
          "4917: func (s *CreateReportGroupInput) SetTags(v []*Tag) *CreateReportGroupInput {",
          "4918:  s.Tags = v",
          "4923: func (s *CreateReportGroupInput) SetType(v string) *CreateReportGroupInput {",
          "4924:  s.Type = &v",
          "4928: type CreateReportGroupOutput struct {",
          "4932:  ReportGroup *ReportGroup `locationName:\"reportGroup\" type:\"structure\"`",
          "4936: func (s CreateReportGroupOutput) String() string {",
          "4941: func (s CreateReportGroupOutput) GoString() string {",
          "4946: func (s *CreateReportGroupOutput) SetReportGroup(v *ReportGroup) *CreateReportGroupOutput {",
          "4947:  s.ReportGroup = v",
          "4951: type CreateWebhookInput struct {",
          "4960:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "4968:  FilterGroups [][]*WebhookFilter `locationName:\"filterGroups\" type:\"list\"`",
          "4973:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "4977: func (s CreateWebhookInput) String() string {",
          "4982: func (s CreateWebhookInput) GoString() string {",
          "4987: func (s *CreateWebhookInput) Validate() error {",
          "4988:  invalidParams := request.ErrInvalidParams{Context: \"CreateWebhookInput\"}",
          "4989:  if s.ProjectName == nil {",
          "4990:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "4991:  }",
          "4992:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "4993:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "4994:  }",
          "4996:  if invalidParams.Len() > 0 {",
          "4997:   return invalidParams",
          "4998:  }",
          "4999:  return nil",
          "5003: func (s *CreateWebhookInput) SetBranchFilter(v string) *CreateWebhookInput {",
          "5004:  s.BranchFilter = &v",
          "5009: func (s *CreateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *CreateWebhookInput {",
          "5010:  s.FilterGroups = v",
          "5015: func (s *CreateWebhookInput) SetProjectName(v string) *CreateWebhookInput {",
          "5016:  s.ProjectName = &v",
          "5020: type CreateWebhookOutput struct {",
          "5025:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "5026: }",
          "5029: func (s CreateWebhookOutput) String() string {",
          "5030:  return awsutil.Prettify(s)",
          "5031: }",
          "5034: func (s CreateWebhookOutput) GoString() string {",
          "5035:  return s.String()",
          "5036: }",
          "5039: func (s *CreateWebhookOutput) SetWebhook(v *Webhook) *CreateWebhookOutput {",
          "5040:  s.Webhook = v",
          "5041:  return s",
          "5042: }",
          "5046: type DebugSession struct {",
          "5047:  _ struct{} `type:\"structure\"`",
          "5050:  SessionEnabled *bool `locationName:\"sessionEnabled\" type:\"boolean\"`",
          "5055:  SessionTarget *string `locationName:\"sessionTarget\" min:\"1\" type:\"string\"`",
          "5056: }",
          "5059: func (s DebugSession) String() string {",
          "5060:  return awsutil.Prettify(s)",
          "5061: }",
          "5064: func (s DebugSession) GoString() string {",
          "5065:  return s.String()",
          "5066: }",
          "5069: func (s *DebugSession) SetSessionEnabled(v bool) *DebugSession {",
          "5070:  s.SessionEnabled = &v",
          "5071:  return s",
          "5072: }",
          "5075: func (s *DebugSession) SetSessionTarget(v string) *DebugSession {",
          "5076:  s.SessionTarget = &v",
          "5077:  return s",
          "5078: }",
          "5080: type DeleteProjectInput struct {",
          "5081:  _ struct{} `type:\"structure\"`",
          "5086:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "5090: func (s DeleteProjectInput) String() string {",
          "5095: func (s DeleteProjectInput) GoString() string {",
          "5100: func (s *DeleteProjectInput) Validate() error {",
          "5101:  invalidParams := request.ErrInvalidParams{Context: \"DeleteProjectInput\"}",
          "5102:  if s.Name == nil {",
          "5103:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5104:  }",
          "5105:  if s.Name != nil && len(*s.Name) < 1 {",
          "5106:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "",
          "[Added Lines]",
          "5214: type BuildBatch struct {",
          "5218:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5221:  Artifacts *BuildArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "5224:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "5230:  BuildBatchNumber *int64 `locationName:\"buildBatchNumber\" type:\"long\"`",
          "5233:  BuildBatchStatus *string `locationName:\"buildBatchStatus\" type:\"string\" enum:\"StatusType\"`",
          "5237:  BuildGroups []*BuildGroup `locationName:\"buildGroups\" type:\"list\"`",
          "5241:  BuildTimeoutInMinutes *int64 `locationName:\"buildTimeoutInMinutes\" type:\"integer\"`",
          "5244:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "5247:  Complete *bool `locationName:\"complete\" type:\"boolean\"`",
          "5250:  CurrentPhase *string `locationName:\"currentPhase\" type:\"string\"`",
          "5260:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "5263:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5266:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "5271:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "5274:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "5286:  Initiator *string `locationName:\"initiator\" type:\"string\"`",
          "5290:  LogConfig *LogsConfig `locationName:\"logConfig\" type:\"structure\"`",
          "5293:  Phases []*BuildBatchPhase `locationName:\"phases\" type:\"list\"`",
          "5296:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\"`",
          "5300:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" type:\"integer\"`",
          "5310:  ResolvedSourceVersion *string `locationName:\"resolvedSourceVersion\" min:\"1\" type:\"string\"`",
          "5314:  SecondaryArtifacts []*BuildArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "5335:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "5338:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "5341:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "5344:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "5347:  SourceVersion *string `locationName:\"sourceVersion\" min:\"1\" type:\"string\"`",
          "5353:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "5357: func (s BuildBatch) String() string {",
          "5362: func (s BuildBatch) GoString() string {",
          "5367: func (s *BuildBatch) SetArn(v string) *BuildBatch {",
          "5368:  s.Arn = &v",
          "5373: func (s *BuildBatch) SetArtifacts(v *BuildArtifacts) *BuildBatch {",
          "5374:  s.Artifacts = v",
          "5379: func (s *BuildBatch) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *BuildBatch {",
          "5380:  s.BuildBatchConfig = v",
          "5385: func (s *BuildBatch) SetBuildBatchNumber(v int64) *BuildBatch {",
          "5386:  s.BuildBatchNumber = &v",
          "5391: func (s *BuildBatch) SetBuildBatchStatus(v string) *BuildBatch {",
          "5392:  s.BuildBatchStatus = &v",
          "5397: func (s *BuildBatch) SetBuildGroups(v []*BuildGroup) *BuildBatch {",
          "5398:  s.BuildGroups = v",
          "5403: func (s *BuildBatch) SetBuildTimeoutInMinutes(v int64) *BuildBatch {",
          "5404:  s.BuildTimeoutInMinutes = &v",
          "5405:  return s",
          "5406: }",
          "5409: func (s *BuildBatch) SetCache(v *ProjectCache) *BuildBatch {",
          "5410:  s.Cache = v",
          "5411:  return s",
          "5412: }",
          "5415: func (s *BuildBatch) SetComplete(v bool) *BuildBatch {",
          "5416:  s.Complete = &v",
          "5417:  return s",
          "5421: func (s *BuildBatch) SetCurrentPhase(v string) *BuildBatch {",
          "5422:  s.CurrentPhase = &v",
          "5423:  return s",
          "5427: func (s *BuildBatch) SetEncryptionKey(v string) *BuildBatch {",
          "5428:  s.EncryptionKey = &v",
          "5429:  return s",
          "5433: func (s *BuildBatch) SetEndTime(v time.Time) *BuildBatch {",
          "5434:  s.EndTime = &v",
          "5439: func (s *BuildBatch) SetEnvironment(v *ProjectEnvironment) *BuildBatch {",
          "5440:  s.Environment = v",
          "5445: func (s *BuildBatch) SetFileSystemLocations(v []*ProjectFileSystemLocation) *BuildBatch {",
          "5446:  s.FileSystemLocations = v",
          "5447:  return s",
          "5448: }",
          "5451: func (s *BuildBatch) SetId(v string) *BuildBatch {",
          "5452:  s.Id = &v",
          "5453:  return s",
          "5454: }",
          "5457: func (s *BuildBatch) SetInitiator(v string) *BuildBatch {",
          "5458:  s.Initiator = &v",
          "5459:  return s",
          "5460: }",
          "5463: func (s *BuildBatch) SetLogConfig(v *LogsConfig) *BuildBatch {",
          "5464:  s.LogConfig = v",
          "5465:  return s",
          "5469: func (s *BuildBatch) SetPhases(v []*BuildBatchPhase) *BuildBatch {",
          "5470:  s.Phases = v",
          "5471:  return s",
          "5475: func (s *BuildBatch) SetProjectName(v string) *BuildBatch {",
          "5476:  s.ProjectName = &v",
          "5477:  return s",
          "5481: func (s *BuildBatch) SetQueuedTimeoutInMinutes(v int64) *BuildBatch {",
          "5482:  s.QueuedTimeoutInMinutes = &v",
          "5483:  return s",
          "5484: }",
          "5487: func (s *BuildBatch) SetResolvedSourceVersion(v string) *BuildBatch {",
          "5488:  s.ResolvedSourceVersion = &v",
          "5489:  return s",
          "5493: func (s *BuildBatch) SetSecondaryArtifacts(v []*BuildArtifacts) *BuildBatch {",
          "5494:  s.SecondaryArtifacts = v",
          "5499: func (s *BuildBatch) SetSecondarySourceVersions(v []*ProjectSourceVersion) *BuildBatch {",
          "5500:  s.SecondarySourceVersions = v",
          "5505: func (s *BuildBatch) SetSecondarySources(v []*ProjectSource) *BuildBatch {",
          "5506:  s.SecondarySources = v",
          "5511: func (s *BuildBatch) SetServiceRole(v string) *BuildBatch {",
          "5512:  s.ServiceRole = &v",
          "5513:  return s",
          "5514: }",
          "5517: func (s *BuildBatch) SetSource(v *ProjectSource) *BuildBatch {",
          "5518:  s.Source = v",
          "5519:  return s",
          "5520: }",
          "5523: func (s *BuildBatch) SetSourceVersion(v string) *BuildBatch {",
          "5524:  s.SourceVersion = &v",
          "5525:  return s",
          "5526: }",
          "5529: func (s *BuildBatch) SetStartTime(v time.Time) *BuildBatch {",
          "5530:  s.StartTime = &v",
          "5531:  return s",
          "5532: }",
          "5535: func (s *BuildBatch) SetVpcConfig(v *VpcConfig) *BuildBatch {",
          "5536:  s.VpcConfig = v",
          "5537:  return s",
          "5538: }",
          "5541: type BuildBatchFilter struct {",
          "5542:  _ struct{} `type:\"structure\"`",
          "5546:  Status *string `locationName:\"status\" type:\"string\" enum:\"StatusType\"`",
          "5547: }",
          "5550: func (s BuildBatchFilter) String() string {",
          "5551:  return awsutil.Prettify(s)",
          "5552: }",
          "5555: func (s BuildBatchFilter) GoString() string {",
          "5556:  return s.String()",
          "5557: }",
          "5560: func (s *BuildBatchFilter) SetStatus(v string) *BuildBatchFilter {",
          "5561:  s.Status = &v",
          "5562:  return s",
          "5563: }",
          "5566: type BuildBatchPhase struct {",
          "5567:  _ struct{} `type:\"structure\"`",
          "5571:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "5575:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "5578:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5609:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "5640:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildBatchPhaseType\"`",
          "5643:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "5647: func (s BuildBatchPhase) String() string {",
          "5652: func (s BuildBatchPhase) GoString() string {",
          "5657: func (s *BuildBatchPhase) SetContexts(v []*PhaseContext) *BuildBatchPhase {",
          "5658:  s.Contexts = v",
          "5663: func (s *BuildBatchPhase) SetDurationInSeconds(v int64) *BuildBatchPhase {",
          "5664:  s.DurationInSeconds = &v",
          "5669: func (s *BuildBatchPhase) SetEndTime(v time.Time) *BuildBatchPhase {",
          "5670:  s.EndTime = &v",
          "5675: func (s *BuildBatchPhase) SetPhaseStatus(v string) *BuildBatchPhase {",
          "5676:  s.PhaseStatus = &v",
          "5681: func (s *BuildBatchPhase) SetPhaseType(v string) *BuildBatchPhase {",
          "5682:  s.PhaseType = &v",
          "5687: func (s *BuildBatchPhase) SetStartTime(v time.Time) *BuildBatchPhase {",
          "5688:  s.StartTime = &v",
          "5695: type BuildGroup struct {",
          "5696:  _ struct{} `type:\"structure\"`",
          "5699:  CurrentBuildSummary *BuildSummary `locationName:\"currentBuildSummary\" type:\"structure\"`",
          "5703:  DependsOn []*string `locationName:\"dependsOn\" type:\"list\"`",
          "5706:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "5709:  IgnoreFailure *bool `locationName:\"ignoreFailure\" type:\"boolean\"`",
          "5713:  PriorBuildSummaryList []*BuildSummary `locationName:\"priorBuildSummaryList\" type:\"list\"`",
          "5717: func (s BuildGroup) String() string {",
          "5718:  return awsutil.Prettify(s)",
          "5722: func (s BuildGroup) GoString() string {",
          "5723:  return s.String()",
          "5727: func (s *BuildGroup) SetCurrentBuildSummary(v *BuildSummary) *BuildGroup {",
          "5728:  s.CurrentBuildSummary = v",
          "5733: func (s *BuildGroup) SetDependsOn(v []*string) *BuildGroup {",
          "5734:  s.DependsOn = v",
          "5739: func (s *BuildGroup) SetIdentifier(v string) *BuildGroup {",
          "5740:  s.Identifier = &v",
          "5745: func (s *BuildGroup) SetIgnoreFailure(v bool) *BuildGroup {",
          "5746:  s.IgnoreFailure = &v",
          "5751: func (s *BuildGroup) SetPriorBuildSummaryList(v []*BuildSummary) *BuildGroup {",
          "5752:  s.PriorBuildSummaryList = v",
          "5757: type BuildNotDeleted struct {",
          "5761:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "5764:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "5768: func (s BuildNotDeleted) String() string {",
          "5773: func (s BuildNotDeleted) GoString() string {",
          "5778: func (s *BuildNotDeleted) SetId(v string) *BuildNotDeleted {",
          "5779:  s.Id = &v",
          "5784: func (s *BuildNotDeleted) SetStatusCode(v string) *BuildNotDeleted {",
          "5785:  s.StatusCode = &v",
          "5786:  return s",
          "5787: }",
          "5790: type BuildPhase struct {",
          "5795:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "5799:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "5802:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5833:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "5860:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildPhaseType\"`",
          "5863:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "5867: func (s BuildPhase) String() string {",
          "5872: func (s BuildPhase) GoString() string {",
          "5877: func (s *BuildPhase) SetContexts(v []*PhaseContext) *BuildPhase {",
          "5878:  s.Contexts = v",
          "5879:  return s",
          "5880: }",
          "5883: func (s *BuildPhase) SetDurationInSeconds(v int64) *BuildPhase {",
          "5884:  s.DurationInSeconds = &v",
          "5885:  return s",
          "5889: func (s *BuildPhase) SetEndTime(v time.Time) *BuildPhase {",
          "5890:  s.EndTime = &v",
          "5895: func (s *BuildPhase) SetPhaseStatus(v string) *BuildPhase {",
          "5896:  s.PhaseStatus = &v",
          "5901: func (s *BuildPhase) SetPhaseType(v string) *BuildPhase {",
          "5902:  s.PhaseType = &v",
          "5907: func (s *BuildPhase) SetStartTime(v time.Time) *BuildPhase {",
          "5908:  s.StartTime = &v",
          "5914: type BuildStatusConfig struct {",
          "5931:  Context *string `locationName:\"context\" type:\"string\"`",
          "5947:  TargetUrl *string `locationName:\"targetUrl\" type:\"string\"`",
          "5951: func (s BuildStatusConfig) String() string {",
          "5956: func (s BuildStatusConfig) GoString() string {",
          "5961: func (s *BuildStatusConfig) SetContext(v string) *BuildStatusConfig {",
          "5962:  s.Context = &v",
          "5967: func (s *BuildStatusConfig) SetTargetUrl(v string) *BuildStatusConfig {",
          "5968:  s.TargetUrl = &v",
          "5969:  return s",
          "5970: }",
          "5973: type BuildSummary struct {",
          "5977:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "6004:  BuildStatus *string `locationName:\"buildStatus\" type:\"string\" enum:\"StatusType\"`",
          "6008:  PrimaryArtifact *ResolvedArtifact `locationName:\"primaryArtifact\" type:\"structure\"`",
          "6011:  RequestedOn *time.Time `locationName:\"requestedOn\" type:\"timestamp\"`",
          "6015:  SecondaryArtifacts []*ResolvedArtifact `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "6019: func (s BuildSummary) String() string {",
          "6024: func (s BuildSummary) GoString() string {",
          "6029: func (s *BuildSummary) SetArn(v string) *BuildSummary {",
          "6030:  s.Arn = &v",
          "6031:  return s",
          "6032: }",
          "6035: func (s *BuildSummary) SetBuildStatus(v string) *BuildSummary {",
          "6036:  s.BuildStatus = &v",
          "6037:  return s",
          "6041: func (s *BuildSummary) SetPrimaryArtifact(v *ResolvedArtifact) *BuildSummary {",
          "6042:  s.PrimaryArtifact = v",
          "6047: func (s *BuildSummary) SetRequestedOn(v time.Time) *BuildSummary {",
          "6048:  s.RequestedOn = &v",
          "6053: func (s *BuildSummary) SetSecondaryArtifacts(v []*ResolvedArtifact) *BuildSummary {",
          "6054:  s.SecondaryArtifacts = v",
          "6059: type CloudWatchLogsConfig struct {",
          "6064:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "6074:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "6078:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "6082: func (s CloudWatchLogsConfig) String() string {",
          "6087: func (s CloudWatchLogsConfig) GoString() string {",
          "6092: func (s *CloudWatchLogsConfig) Validate() error {",
          "6093:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchLogsConfig\"}",
          "6094:  if s.Status == nil {",
          "6095:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5112:  return nil",
          "5113: }",
          "5118:  return s",
          "5119: }",
          "5128: }",
          "5133: }",
          "5136:  _ struct{} `type:\"structure\"`",
          "5178: }",
          "5182:  return awsutil.Prettify(s)",
          "5183: }",
          "5187:  return s.String()",
          "5188: }",
          "5197: }",
          "5202: }",
          "5207: }",
          "5223: }",
          "5228:  return s",
          "5229: }",
          "5233: }",
          "5238: }",
          "5243: }",
          "5246:  _ struct{} `type:\"structure\"`",
          "5252: }",
          "5256:  return awsutil.Prettify(s)",
          "5257: }",
          "5261:  return s.String()",
          "5262: }",
          "5278: }",
          "5283:  return s",
          "5284: }",
          "5288: }",
          "5293: }",
          "5298: }",
          "5301:  _ struct{} `type:\"structure\"`",
          "5371: }",
          "5375:  return awsutil.Prettify(s)",
          "5376: }",
          "5380:  return s.String()",
          "5381: }",
          "5388:  }",
          "5391:  }",
          "5393:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5116: func (s *DeleteProjectInput) SetName(v string) *DeleteProjectInput {",
          "5117:  s.Name = &v",
          "5121: type DeleteProjectOutput struct {",
          "5122:  _ struct{} `type:\"structure\"`",
          "5123: }",
          "5126: func (s DeleteProjectOutput) String() string {",
          "5127:  return awsutil.Prettify(s)",
          "5131: func (s DeleteProjectOutput) GoString() string {",
          "5132:  return s.String()",
          "5135: type DeleteReportGroupInput struct {",
          "5141:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5142: }",
          "5145: func (s DeleteReportGroupInput) String() string {",
          "5146:  return awsutil.Prettify(s)",
          "5147: }",
          "5150: func (s DeleteReportGroupInput) GoString() string {",
          "5151:  return s.String()",
          "5152: }",
          "5155: func (s *DeleteReportGroupInput) Validate() error {",
          "5156:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportGroupInput\"}",
          "5157:  if s.Arn == nil {",
          "5158:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5159:  }",
          "5160:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5161:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5162:  }",
          "5164:  if invalidParams.Len() > 0 {",
          "5165:   return invalidParams",
          "5166:  }",
          "5167:  return nil",
          "5168: }",
          "5171: func (s *DeleteReportGroupInput) SetArn(v string) *DeleteReportGroupInput {",
          "5172:  s.Arn = &v",
          "5173:  return s",
          "5174: }",
          "5176: type DeleteReportGroupOutput struct {",
          "5177:  _ struct{} `type:\"structure\"`",
          "5181: func (s DeleteReportGroupOutput) String() string {",
          "5186: func (s DeleteReportGroupOutput) GoString() string {",
          "5190: type DeleteReportInput struct {",
          "5191:  _ struct{} `type:\"structure\"`",
          "5196:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5200: func (s DeleteReportInput) String() string {",
          "5201:  return awsutil.Prettify(s)",
          "5205: func (s DeleteReportInput) GoString() string {",
          "5206:  return s.String()",
          "5210: func (s *DeleteReportInput) Validate() error {",
          "5211:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportInput\"}",
          "5212:  if s.Arn == nil {",
          "5213:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5214:  }",
          "5215:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5216:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5217:  }",
          "5219:  if invalidParams.Len() > 0 {",
          "5220:   return invalidParams",
          "5221:  }",
          "5222:  return nil",
          "5226: func (s *DeleteReportInput) SetArn(v string) *DeleteReportInput {",
          "5227:  s.Arn = &v",
          "5231: type DeleteReportOutput struct {",
          "5232:  _ struct{} `type:\"structure\"`",
          "5236: func (s DeleteReportOutput) String() string {",
          "5237:  return awsutil.Prettify(s)",
          "5241: func (s DeleteReportOutput) GoString() string {",
          "5242:  return s.String()",
          "5245: type DeleteResourcePolicyInput struct {",
          "5251:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5255: func (s DeleteResourcePolicyInput) String() string {",
          "5260: func (s DeleteResourcePolicyInput) GoString() string {",
          "5265: func (s *DeleteResourcePolicyInput) Validate() error {",
          "5266:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResourcePolicyInput\"}",
          "5267:  if s.ResourceArn == nil {",
          "5268:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5269:  }",
          "5270:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5271:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5272:  }",
          "5274:  if invalidParams.Len() > 0 {",
          "5275:   return invalidParams",
          "5276:  }",
          "5277:  return nil",
          "5281: func (s *DeleteResourcePolicyInput) SetResourceArn(v string) *DeleteResourcePolicyInput {",
          "5282:  s.ResourceArn = &v",
          "5286: type DeleteResourcePolicyOutput struct {",
          "5287:  _ struct{} `type:\"structure\"`",
          "5291: func (s DeleteResourcePolicyOutput) String() string {",
          "5292:  return awsutil.Prettify(s)",
          "5296: func (s DeleteResourcePolicyOutput) GoString() string {",
          "5297:  return s.String()",
          "5300: type DeleteSourceCredentialsInput struct {",
          "5306:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5307: }",
          "5310: func (s DeleteSourceCredentialsInput) String() string {",
          "5311:  return awsutil.Prettify(s)",
          "5312: }",
          "5315: func (s DeleteSourceCredentialsInput) GoString() string {",
          "5316:  return s.String()",
          "5317: }",
          "5320: func (s *DeleteSourceCredentialsInput) Validate() error {",
          "5321:  invalidParams := request.ErrInvalidParams{Context: \"DeleteSourceCredentialsInput\"}",
          "5322:  if s.Arn == nil {",
          "5323:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5324:  }",
          "5325:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5326:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5327:  }",
          "5329:  if invalidParams.Len() > 0 {",
          "5330:   return invalidParams",
          "5331:  }",
          "5332:  return nil",
          "5333: }",
          "5336: func (s *DeleteSourceCredentialsInput) SetArn(v string) *DeleteSourceCredentialsInput {",
          "5337:  s.Arn = &v",
          "5338:  return s",
          "5339: }",
          "5341: type DeleteSourceCredentialsOutput struct {",
          "5342:  _ struct{} `type:\"structure\"`",
          "5345:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5346: }",
          "5349: func (s DeleteSourceCredentialsOutput) String() string {",
          "5350:  return awsutil.Prettify(s)",
          "5351: }",
          "5354: func (s DeleteSourceCredentialsOutput) GoString() string {",
          "5355:  return s.String()",
          "5356: }",
          "5359: func (s *DeleteSourceCredentialsOutput) SetArn(v string) *DeleteSourceCredentialsOutput {",
          "5360:  s.Arn = &v",
          "5361:  return s",
          "5362: }",
          "5364: type DeleteWebhookInput struct {",
          "5365:  _ struct{} `type:\"structure\"`",
          "5370:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "5374: func (s DeleteWebhookInput) String() string {",
          "5379: func (s DeleteWebhookInput) GoString() string {",
          "5384: func (s *DeleteWebhookInput) Validate() error {",
          "5385:  invalidParams := request.ErrInvalidParams{Context: \"DeleteWebhookInput\"}",
          "5386:  if s.ProjectName == nil {",
          "5387:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "5389:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "5390:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "",
          "[Added Lines]",
          "6105: func (s *CloudWatchLogsConfig) SetGroupName(v string) *CloudWatchLogsConfig {",
          "6106:  s.GroupName = &v",
          "6111: func (s *CloudWatchLogsConfig) SetStatus(v string) *CloudWatchLogsConfig {",
          "6112:  s.Status = &v",
          "6113:  return s",
          "6117: func (s *CloudWatchLogsConfig) SetStreamName(v string) *CloudWatchLogsConfig {",
          "6118:  s.StreamName = &v",
          "6119:  return s",
          "6129: type CodeCoverage struct {",
          "6133:  BranchCoveragePercentage *float64 `locationName:\"branchCoveragePercentage\" type:\"double\"`",
          "6136:  BranchesCovered *int64 `locationName:\"branchesCovered\" type:\"integer\"`",
          "6139:  BranchesMissed *int64 `locationName:\"branchesMissed\" type:\"integer\"`",
          "6142:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "6145:  FilePath *string `locationName:\"filePath\" min:\"1\" type:\"string\"`",
          "6148:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "6151:  LineCoveragePercentage *float64 `locationName:\"lineCoveragePercentage\" type:\"double\"`",
          "6154:  LinesCovered *int64 `locationName:\"linesCovered\" type:\"integer\"`",
          "6157:  LinesMissed *int64 `locationName:\"linesMissed\" type:\"integer\"`",
          "6160:  ReportARN *string `locationName:\"reportARN\" min:\"1\" type:\"string\"`",
          "6164: func (s CodeCoverage) String() string {",
          "6169: func (s CodeCoverage) GoString() string {",
          "6174: func (s *CodeCoverage) SetBranchCoveragePercentage(v float64) *CodeCoverage {",
          "6175:  s.BranchCoveragePercentage = &v",
          "6176:  return s",
          "6177: }",
          "6180: func (s *CodeCoverage) SetBranchesCovered(v int64) *CodeCoverage {",
          "6181:  s.BranchesCovered = &v",
          "6182:  return s",
          "6186: func (s *CodeCoverage) SetBranchesMissed(v int64) *CodeCoverage {",
          "6187:  s.BranchesMissed = &v",
          "6188:  return s",
          "6192: func (s *CodeCoverage) SetExpired(v time.Time) *CodeCoverage {",
          "6193:  s.Expired = &v",
          "6194:  return s",
          "6198: func (s *CodeCoverage) SetFilePath(v string) *CodeCoverage {",
          "6199:  s.FilePath = &v",
          "6200:  return s",
          "6201: }",
          "6204: func (s *CodeCoverage) SetId(v string) *CodeCoverage {",
          "6205:  s.Id = &v",
          "6206:  return s",
          "6210: func (s *CodeCoverage) SetLineCoveragePercentage(v float64) *CodeCoverage {",
          "6211:  s.LineCoveragePercentage = &v",
          "6216: func (s *CodeCoverage) SetLinesCovered(v int64) *CodeCoverage {",
          "6217:  s.LinesCovered = &v",
          "6218:  return s",
          "6222: func (s *CodeCoverage) SetLinesMissed(v int64) *CodeCoverage {",
          "6223:  s.LinesMissed = &v",
          "6224:  return s",
          "6228: func (s *CodeCoverage) SetReportARN(v string) *CodeCoverage {",
          "6229:  s.ReportARN = &v",
          "6230:  return s",
          "6240: type CodeCoverageReportSummary struct {",
          "6244:  BranchCoveragePercentage *float64 `locationName:\"branchCoveragePercentage\" type:\"double\"`",
          "6247:  BranchesCovered *int64 `locationName:\"branchesCovered\" type:\"integer\"`",
          "6250:  BranchesMissed *int64 `locationName:\"branchesMissed\" type:\"integer\"`",
          "6253:  LineCoveragePercentage *float64 `locationName:\"lineCoveragePercentage\" type:\"double\"`",
          "6256:  LinesCovered *int64 `locationName:\"linesCovered\" type:\"integer\"`",
          "6259:  LinesMissed *int64 `locationName:\"linesMissed\" type:\"integer\"`",
          "6263: func (s CodeCoverageReportSummary) String() string {",
          "6268: func (s CodeCoverageReportSummary) GoString() string {",
          "6273: func (s *CodeCoverageReportSummary) SetBranchCoveragePercentage(v float64) *CodeCoverageReportSummary {",
          "6274:  s.BranchCoveragePercentage = &v",
          "6275:  return s",
          "6276: }",
          "6279: func (s *CodeCoverageReportSummary) SetBranchesCovered(v int64) *CodeCoverageReportSummary {",
          "6280:  s.BranchesCovered = &v",
          "6281:  return s",
          "6285: func (s *CodeCoverageReportSummary) SetBranchesMissed(v int64) *CodeCoverageReportSummary {",
          "6286:  s.BranchesMissed = &v",
          "6291: func (s *CodeCoverageReportSummary) SetLineCoveragePercentage(v float64) *CodeCoverageReportSummary {",
          "6292:  s.LineCoveragePercentage = &v",
          "6293:  return s",
          "6297: func (s *CodeCoverageReportSummary) SetLinesCovered(v int64) *CodeCoverageReportSummary {",
          "6298:  s.LinesCovered = &v",
          "6299:  return s",
          "6303: func (s *CodeCoverageReportSummary) SetLinesMissed(v int64) *CodeCoverageReportSummary {",
          "6304:  s.LinesMissed = &v",
          "6305:  return s",
          "6308: type CreateProjectInput struct {",
          "6314:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\" required:\"true\"`",
          "6318:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "6322:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "6326:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "6329:  Description *string `locationName:\"description\" type:\"string\"`",
          "6339:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "6344:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\" required:\"true\"`",
          "6349:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "6353:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "6358:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "6361:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "6364:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "6369:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "6372:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "6379:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\" required:\"true\"`",
          "6384:  Source *ProjectSource `locationName:\"source\" type:\"structure\" required:\"true\"`",
          "6411:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "6417:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "6422:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "6425:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "6429: func (s CreateProjectInput) String() string {",
          "6434: func (s CreateProjectInput) GoString() string {",
          "6439: func (s *CreateProjectInput) Validate() error {",
          "6440:  invalidParams := request.ErrInvalidParams{Context: \"CreateProjectInput\"}",
          "6441:  if s.Artifacts == nil {",
          "6442:   invalidParams.Add(request.NewErrParamRequired(\"Artifacts\"))",
          "6444:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "6445:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "6446:  }",
          "6447:  if s.Environment == nil {",
          "6448:   invalidParams.Add(request.NewErrParamRequired(\"Environment\"))",
          "6449:  }",
          "6450:  if s.Name == nil {",
          "6451:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "6452:  }",
          "6453:  if s.Name != nil && len(*s.Name) < 2 {",
          "6454:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "6455:  }",
          "6456:  if s.QueuedTimeoutInMinutes != nil && *s.QueuedTimeoutInMinutes < 5 {",
          "6457:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutes\", 5))",
          "6458:  }",
          "6459:  if s.ServiceRole == nil {",
          "6460:   invalidParams.Add(request.NewErrParamRequired(\"ServiceRole\"))",
          "6461:  }",
          "6462:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "6463:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "6464:  }",
          "6465:  if s.Source == nil {",
          "6466:   invalidParams.Add(request.NewErrParamRequired(\"Source\"))",
          "6467:  }",
          "6468:  if s.TimeoutInMinutes != nil && *s.TimeoutInMinutes < 5 {",
          "6469:   invalidParams.Add(request.NewErrParamMinValue(\"TimeoutInMinutes\", 5))",
          "6470:  }",
          "6471:  if s.Artifacts != nil {",
          "6472:   if err := s.Artifacts.Validate(); err != nil {",
          "6473:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "6474:   }",
          "6475:  }",
          "6476:  if s.BuildBatchConfig != nil {",
          "6477:   if err := s.BuildBatchConfig.Validate(); err != nil {",
          "6478:    invalidParams.AddNested(\"BuildBatchConfig\", err.(request.ErrInvalidParams))",
          "6479:   }",
          "6480:  }",
          "6481:  if s.Cache != nil {",
          "6482:   if err := s.Cache.Validate(); err != nil {",
          "6483:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "6484:   }",
          "6485:  }",
          "6486:  if s.Environment != nil {",
          "6487:   if err := s.Environment.Validate(); err != nil {",
          "6488:    invalidParams.AddNested(\"Environment\", err.(request.ErrInvalidParams))",
          "6489:   }",
          "6490:  }",
          "6491:  if s.LogsConfig != nil {",
          "6492:   if err := s.LogsConfig.Validate(); err != nil {",
          "6493:    invalidParams.AddNested(\"LogsConfig\", err.(request.ErrInvalidParams))",
          "6494:   }",
          "6495:  }",
          "6496:  if s.SecondaryArtifacts != nil {",
          "6497:   for i, v := range s.SecondaryArtifacts {",
          "6498:    if v == nil {",
          "6499:     continue",
          "6500:    }",
          "6501:    if err := v.Validate(); err != nil {",
          "6502:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifacts\", i), err.(request.ErrInvalidParams))",
          "6503:    }",
          "6504:   }",
          "6505:  }",
          "6506:  if s.SecondarySourceVersions != nil {",
          "6507:   for i, v := range s.SecondarySourceVersions {",
          "6508:    if v == nil {",
          "6509:     continue",
          "6510:    }",
          "6511:    if err := v.Validate(); err != nil {",
          "6512:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourceVersions\", i), err.(request.ErrInvalidParams))",
          "6513:    }",
          "6514:   }",
          "6515:  }",
          "6516:  if s.SecondarySources != nil {",
          "6517:   for i, v := range s.SecondarySources {",
          "6518:    if v == nil {",
          "6519:     continue",
          "6520:    }",
          "6521:    if err := v.Validate(); err != nil {",
          "6522:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySources\", i), err.(request.ErrInvalidParams))",
          "6523:    }",
          "6524:   }",
          "6525:  }",
          "6526:  if s.Source != nil {",
          "6527:   if err := s.Source.Validate(); err != nil {",
          "6528:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "6529:   }",
          "6530:  }",
          "6531:  if s.Tags != nil {",
          "6532:   for i, v := range s.Tags {",
          "6533:    if v == nil {",
          "6534:     continue",
          "6535:    }",
          "6536:    if err := v.Validate(); err != nil {",
          "6537:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "6538:    }",
          "6539:   }",
          "6540:  }",
          "6541:  if s.VpcConfig != nil {",
          "6542:   if err := s.VpcConfig.Validate(); err != nil {",
          "6543:    invalidParams.AddNested(\"VpcConfig\", err.(request.ErrInvalidParams))",
          "6544:   }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5396:  return nil",
          "5397: }",
          "5402:  return s",
          "5403: }",
          "5443: }",
          "5448: }",
          "5453: }",
          "5469: }",
          "5474:  return s",
          "5475: }",
          "5480:  return s",
          "5481: }",
          "5486:  return s",
          "5487: }",
          "5492:  return s",
          "5493: }",
          "5509: }",
          "5514: }",
          "5519: }",
          "5524:  return s",
          "5525: }",
          "5530:  return s",
          "5531: }",
          "5545: }",
          "5550: }",
          "5555: }",
          "5560:  return s",
          "5561: }",
          "5566:  return s",
          "5567: }",
          "5572:  return s",
          "5573: }",
          "5578:  _ struct{} `type:\"structure\"`",
          "5585: }",
          "5589:  return awsutil.Prettify(s)",
          "5590: }",
          "5594:  return s.String()",
          "5595: }",
          "5606:  return s",
          "5607: }",
          "5612:  _ struct{} `type:\"structure\"`",
          "5619: }",
          "5623:  return awsutil.Prettify(s)",
          "5624: }",
          "5685:  return s.String()",
          "5686: }",
          "5691:  if s.Name == nil {",
          "5692:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5693:  }",
          "5696:  }",
          "5699:  }",
          "5701:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5400: func (s *DeleteWebhookInput) SetProjectName(v string) *DeleteWebhookInput {",
          "5401:  s.ProjectName = &v",
          "5405: type DeleteWebhookOutput struct {",
          "5406:  _ struct{} `type:\"structure\"`",
          "5407: }",
          "5410: func (s DeleteWebhookOutput) String() string {",
          "5411:  return awsutil.Prettify(s)",
          "5412: }",
          "5415: func (s DeleteWebhookOutput) GoString() string {",
          "5416:  return s.String()",
          "5417: }",
          "5419: type DescribeTestCasesInput struct {",
          "5420:  _ struct{} `type:\"structure\"`",
          "5423:  Filter *TestCaseFilter `locationName:\"filter\" type:\"structure\"`",
          "5428:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5437:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5442:  ReportArn *string `locationName:\"reportArn\" type:\"string\" required:\"true\"`",
          "5446: func (s DescribeTestCasesInput) String() string {",
          "5447:  return awsutil.Prettify(s)",
          "5451: func (s DescribeTestCasesInput) GoString() string {",
          "5452:  return s.String()",
          "5456: func (s *DescribeTestCasesInput) Validate() error {",
          "5457:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTestCasesInput\"}",
          "5458:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5459:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5460:  }",
          "5461:  if s.ReportArn == nil {",
          "5462:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "5463:  }",
          "5465:  if invalidParams.Len() > 0 {",
          "5466:   return invalidParams",
          "5467:  }",
          "5468:  return nil",
          "5472: func (s *DescribeTestCasesInput) SetFilter(v *TestCaseFilter) *DescribeTestCasesInput {",
          "5473:  s.Filter = v",
          "5478: func (s *DescribeTestCasesInput) SetMaxResults(v int64) *DescribeTestCasesInput {",
          "5479:  s.MaxResults = &v",
          "5484: func (s *DescribeTestCasesInput) SetNextToken(v string) *DescribeTestCasesInput {",
          "5485:  s.NextToken = &v",
          "5490: func (s *DescribeTestCasesInput) SetReportArn(v string) *DescribeTestCasesInput {",
          "5491:  s.ReportArn = &v",
          "5495: type DescribeTestCasesOutput struct {",
          "5496:  _ struct{} `type:\"structure\"`",
          "5505:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5508:  TestCases []*TestCase `locationName:\"testCases\" type:\"list\"`",
          "5512: func (s DescribeTestCasesOutput) String() string {",
          "5513:  return awsutil.Prettify(s)",
          "5517: func (s DescribeTestCasesOutput) GoString() string {",
          "5518:  return s.String()",
          "5522: func (s *DescribeTestCasesOutput) SetNextToken(v string) *DescribeTestCasesOutput {",
          "5523:  s.NextToken = &v",
          "5528: func (s *DescribeTestCasesOutput) SetTestCases(v []*TestCase) *DescribeTestCasesOutput {",
          "5529:  s.TestCases = v",
          "5534: type EnvironmentImage struct {",
          "5535:  _ struct{} `type:\"structure\"`",
          "5538:  Description *string `locationName:\"description\" type:\"string\"`",
          "5541:  Name *string `locationName:\"name\" type:\"string\"`",
          "5544:  Versions []*string `locationName:\"versions\" type:\"list\"`",
          "5548: func (s EnvironmentImage) String() string {",
          "5549:  return awsutil.Prettify(s)",
          "5553: func (s EnvironmentImage) GoString() string {",
          "5554:  return s.String()",
          "5558: func (s *EnvironmentImage) SetDescription(v string) *EnvironmentImage {",
          "5559:  s.Description = &v",
          "5564: func (s *EnvironmentImage) SetName(v string) *EnvironmentImage {",
          "5565:  s.Name = &v",
          "5570: func (s *EnvironmentImage) SetVersions(v []*string) *EnvironmentImage {",
          "5571:  s.Versions = v",
          "5577: type EnvironmentLanguage struct {",
          "5581:  Images []*EnvironmentImage `locationName:\"images\" type:\"list\"`",
          "5584:  Language *string `locationName:\"language\" type:\"string\" enum:\"LanguageType\"`",
          "5588: func (s EnvironmentLanguage) String() string {",
          "5593: func (s EnvironmentLanguage) GoString() string {",
          "5598: func (s *EnvironmentLanguage) SetImages(v []*EnvironmentImage) *EnvironmentLanguage {",
          "5599:  s.Images = v",
          "5600:  return s",
          "5601: }",
          "5604: func (s *EnvironmentLanguage) SetLanguage(v string) *EnvironmentLanguage {",
          "5605:  s.Language = &v",
          "5611: type EnvironmentPlatform struct {",
          "5615:  Languages []*EnvironmentLanguage `locationName:\"languages\" type:\"list\"`",
          "5618:  Platform *string `locationName:\"platform\" type:\"string\" enum:\"PlatformType\"`",
          "5622: func (s EnvironmentPlatform) String() string {",
          "5627: func (s EnvironmentPlatform) GoString() string {",
          "5628:  return s.String()",
          "5629: }",
          "5632: func (s *EnvironmentPlatform) SetLanguages(v []*EnvironmentLanguage) *EnvironmentPlatform {",
          "5633:  s.Languages = v",
          "5634:  return s",
          "5635: }",
          "5638: func (s *EnvironmentPlatform) SetPlatform(v string) *EnvironmentPlatform {",
          "5639:  s.Platform = &v",
          "5640:  return s",
          "5641: }",
          "5644: type EnvironmentVariable struct {",
          "5645:  _ struct{} `type:\"structure\"`",
          "5650:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "5664:  Type *string `locationName:\"type\" type:\"string\" enum:\"EnvironmentVariableType\"`",
          "5675:  Value *string `locationName:\"value\" type:\"string\" required:\"true\"`",
          "5676: }",
          "5679: func (s EnvironmentVariable) String() string {",
          "5680:  return awsutil.Prettify(s)",
          "5681: }",
          "5684: func (s EnvironmentVariable) GoString() string {",
          "5689: func (s *EnvironmentVariable) Validate() error {",
          "5690:  invalidParams := request.ErrInvalidParams{Context: \"EnvironmentVariable\"}",
          "5694:  if s.Name != nil && len(*s.Name) < 1 {",
          "5695:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "5697:  if s.Value == nil {",
          "5698:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "",
          "[Added Lines]",
          "6554: func (s *CreateProjectInput) SetArtifacts(v *ProjectArtifacts) *CreateProjectInput {",
          "6555:  s.Artifacts = v",
          "6560: func (s *CreateProjectInput) SetBadgeEnabled(v bool) *CreateProjectInput {",
          "6561:  s.BadgeEnabled = &v",
          "6562:  return s",
          "6566: func (s *CreateProjectInput) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *CreateProjectInput {",
          "6567:  s.BuildBatchConfig = v",
          "6568:  return s",
          "6572: func (s *CreateProjectInput) SetCache(v *ProjectCache) *CreateProjectInput {",
          "6573:  s.Cache = v",
          "6574:  return s",
          "6578: func (s *CreateProjectInput) SetDescription(v string) *CreateProjectInput {",
          "6579:  s.Description = &v",
          "6580:  return s",
          "6584: func (s *CreateProjectInput) SetEncryptionKey(v string) *CreateProjectInput {",
          "6585:  s.EncryptionKey = &v",
          "6590: func (s *CreateProjectInput) SetEnvironment(v *ProjectEnvironment) *CreateProjectInput {",
          "6591:  s.Environment = v",
          "6596: func (s *CreateProjectInput) SetFileSystemLocations(v []*ProjectFileSystemLocation) *CreateProjectInput {",
          "6597:  s.FileSystemLocations = v",
          "6602: func (s *CreateProjectInput) SetLogsConfig(v *LogsConfig) *CreateProjectInput {",
          "6603:  s.LogsConfig = v",
          "6608: func (s *CreateProjectInput) SetName(v string) *CreateProjectInput {",
          "6609:  s.Name = &v",
          "6610:  return s",
          "6614: func (s *CreateProjectInput) SetQueuedTimeoutInMinutes(v int64) *CreateProjectInput {",
          "6615:  s.QueuedTimeoutInMinutes = &v",
          "6616:  return s",
          "6620: func (s *CreateProjectInput) SetSecondaryArtifacts(v []*ProjectArtifacts) *CreateProjectInput {",
          "6621:  s.SecondaryArtifacts = v",
          "6622:  return s",
          "6626: func (s *CreateProjectInput) SetSecondarySourceVersions(v []*ProjectSourceVersion) *CreateProjectInput {",
          "6627:  s.SecondarySourceVersions = v",
          "6632: func (s *CreateProjectInput) SetSecondarySources(v []*ProjectSource) *CreateProjectInput {",
          "6633:  s.SecondarySources = v",
          "6638: func (s *CreateProjectInput) SetServiceRole(v string) *CreateProjectInput {",
          "6639:  s.ServiceRole = &v",
          "6640:  return s",
          "6644: func (s *CreateProjectInput) SetSource(v *ProjectSource) *CreateProjectInput {",
          "6645:  s.Source = v",
          "6646:  return s",
          "6650: func (s *CreateProjectInput) SetSourceVersion(v string) *CreateProjectInput {",
          "6651:  s.SourceVersion = &v",
          "6652:  return s",
          "6656: func (s *CreateProjectInput) SetTags(v []*Tag) *CreateProjectInput {",
          "6657:  s.Tags = v",
          "6662: func (s *CreateProjectInput) SetTimeoutInMinutes(v int64) *CreateProjectInput {",
          "6663:  s.TimeoutInMinutes = &v",
          "6668: func (s *CreateProjectInput) SetVpcConfig(v *VpcConfig) *CreateProjectInput {",
          "6669:  s.VpcConfig = v",
          "6673: type CreateProjectOutput struct {",
          "6677:  Project *Project `locationName:\"project\" type:\"structure\"`",
          "6681: func (s CreateProjectOutput) String() string {",
          "6686: func (s CreateProjectOutput) GoString() string {",
          "6691: func (s *CreateProjectOutput) SetProject(v *Project) *CreateProjectOutput {",
          "6692:  s.Project = v",
          "6696: type CreateReportGroupInput struct {",
          "6703:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\" required:\"true\"`",
          "6708:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "6714:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "6719:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ReportType\"`",
          "6723: func (s CreateReportGroupInput) String() string {",
          "6728: func (s CreateReportGroupInput) GoString() string {",
          "6733: func (s *CreateReportGroupInput) Validate() error {",
          "6734:  invalidParams := request.ErrInvalidParams{Context: \"CreateReportGroupInput\"}",
          "6735:  if s.ExportConfig == nil {",
          "6736:   invalidParams.Add(request.NewErrParamRequired(\"ExportConfig\"))",
          "6737:  }",
          "6741:  if s.Name != nil && len(*s.Name) < 2 {",
          "6742:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "6744:  if s.Type == nil {",
          "6745:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "6746:  }",
          "6747:  if s.ExportConfig != nil {",
          "6748:   if err := s.ExportConfig.Validate(); err != nil {",
          "6749:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "6750:   }",
          "6751:  }",
          "6752:  if s.Tags != nil {",
          "6753:   for i, v := range s.Tags {",
          "6754:    if v == nil {",
          "6755:     continue",
          "6756:    }",
          "6757:    if err := v.Validate(); err != nil {",
          "6758:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "6759:    }",
          "6760:   }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5704:  return nil",
          "5705: }",
          "5709:  s.Name = &v",
          "5710:  return s",
          "5711: }",
          "5716:  return s",
          "5717: }",
          "5722:  return s",
          "5723: }",
          "5727:  _ struct{} `type:\"structure\"`",
          "5739: }",
          "5743:  return awsutil.Prettify(s)",
          "5744: }",
          "5748:  return s.String()",
          "5749: }",
          "5760:  return s",
          "5761: }",
          "5764:  _ struct{} `type:\"structure\"`",
          "5770: }",
          "5774:  return awsutil.Prettify(s)",
          "5775: }",
          "5779:  return s.String()",
          "5780: }",
          "5787:  }",
          "5790:  }",
          "5792:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5708: func (s *EnvironmentVariable) SetName(v string) *EnvironmentVariable {",
          "5714: func (s *EnvironmentVariable) SetType(v string) *EnvironmentVariable {",
          "5715:  s.Type = &v",
          "5720: func (s *EnvironmentVariable) SetValue(v string) *EnvironmentVariable {",
          "5721:  s.Value = &v",
          "5726: type ExportedEnvironmentVariable struct {",
          "5730:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "5738:  Value *string `locationName:\"value\" type:\"string\"`",
          "5742: func (s ExportedEnvironmentVariable) String() string {",
          "5747: func (s ExportedEnvironmentVariable) GoString() string {",
          "5752: func (s *ExportedEnvironmentVariable) SetName(v string) *ExportedEnvironmentVariable {",
          "5753:  s.Name = &v",
          "5754:  return s",
          "5755: }",
          "5758: func (s *ExportedEnvironmentVariable) SetValue(v string) *ExportedEnvironmentVariable {",
          "5759:  s.Value = &v",
          "5763: type GetResourcePolicyInput struct {",
          "5769:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5773: func (s GetResourcePolicyInput) String() string {",
          "5778: func (s GetResourcePolicyInput) GoString() string {",
          "5783: func (s *GetResourcePolicyInput) Validate() error {",
          "5784:  invalidParams := request.ErrInvalidParams{Context: \"GetResourcePolicyInput\"}",
          "5785:  if s.ResourceArn == nil {",
          "5786:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5788:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5789:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "[Added Lines]",
          "6770: func (s *CreateReportGroupInput) SetExportConfig(v *ReportExportConfig) *CreateReportGroupInput {",
          "6771:  s.ExportConfig = v",
          "6772:  return s",
          "6773: }",
          "6776: func (s *CreateReportGroupInput) SetName(v string) *CreateReportGroupInput {",
          "6782: func (s *CreateReportGroupInput) SetTags(v []*Tag) *CreateReportGroupInput {",
          "6783:  s.Tags = v",
          "6788: func (s *CreateReportGroupInput) SetType(v string) *CreateReportGroupInput {",
          "6789:  s.Type = &v",
          "6793: type CreateReportGroupOutput struct {",
          "6797:  ReportGroup *ReportGroup `locationName:\"reportGroup\" type:\"structure\"`",
          "6801: func (s CreateReportGroupOutput) String() string {",
          "6806: func (s CreateReportGroupOutput) GoString() string {",
          "6811: func (s *CreateReportGroupOutput) SetReportGroup(v *ReportGroup) *CreateReportGroupOutput {",
          "6812:  s.ReportGroup = v",
          "6816: type CreateWebhookInput struct {",
          "6825:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "6828:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "6836:  FilterGroups [][]*WebhookFilter `locationName:\"filterGroups\" type:\"list\"`",
          "6841:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "6845: func (s CreateWebhookInput) String() string {",
          "6850: func (s CreateWebhookInput) GoString() string {",
          "6855: func (s *CreateWebhookInput) Validate() error {",
          "6856:  invalidParams := request.ErrInvalidParams{Context: \"CreateWebhookInput\"}",
          "6857:  if s.ProjectName == nil {",
          "6858:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6860:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "6861:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5795:  return nil",
          "5796: }",
          "5801:  return s",
          "5802: }",
          "5805:  _ struct{} `type:\"structure\"`",
          "5809: }",
          "5813:  return awsutil.Prettify(s)",
          "5814: }",
          "5818:  return s.String()",
          "5819: }",
          "5824:  return s",
          "5825: }",
          "5830:  _ struct{} `type:\"structure\"`",
          "5836: }",
          "5840:  return awsutil.Prettify(s)",
          "5841: }",
          "5845:  return s.String()",
          "5846: }",
          "5859: }",
          "5864:  return s",
          "5865: }",
          "5868:  _ struct{} `type:\"structure\"`",
          "5896: }",
          "5900:  return awsutil.Prettify(s)",
          "5901: }",
          "5905:  return s.String()",
          "5906: }",
          "5922:  }",
          "5925:  }",
          "5927:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5799: func (s *GetResourcePolicyInput) SetResourceArn(v string) *GetResourcePolicyInput {",
          "5800:  s.ResourceArn = &v",
          "5804: type GetResourcePolicyOutput struct {",
          "5808:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\"`",
          "5812: func (s GetResourcePolicyOutput) String() string {",
          "5817: func (s GetResourcePolicyOutput) GoString() string {",
          "5822: func (s *GetResourcePolicyOutput) SetPolicy(v string) *GetResourcePolicyOutput {",
          "5823:  s.Policy = &v",
          "5829: type GitSubmodulesConfig struct {",
          "5835:  FetchSubmodules *bool `locationName:\"fetchSubmodules\" type:\"boolean\" required:\"true\"`",
          "5839: func (s GitSubmodulesConfig) String() string {",
          "5844: func (s GitSubmodulesConfig) GoString() string {",
          "5849: func (s *GitSubmodulesConfig) Validate() error {",
          "5850:  invalidParams := request.ErrInvalidParams{Context: \"GitSubmodulesConfig\"}",
          "5851:  if s.FetchSubmodules == nil {",
          "5852:   invalidParams.Add(request.NewErrParamRequired(\"FetchSubmodules\"))",
          "5853:  }",
          "5855:  if invalidParams.Len() > 0 {",
          "5856:   return invalidParams",
          "5857:  }",
          "5858:  return nil",
          "5862: func (s *GitSubmodulesConfig) SetFetchSubmodules(v bool) *GitSubmodulesConfig {",
          "5863:  s.FetchSubmodules = &v",
          "5867: type ImportSourceCredentialsInput struct {",
          "5875:  AuthType *string `locationName:\"authType\" type:\"string\" required:\"true\" enum:\"AuthType\"`",
          "5880:  ServerType *string `locationName:\"serverType\" type:\"string\" required:\"true\" enum:\"ServerType\"`",
          "5885:  ShouldOverwrite *bool `locationName:\"shouldOverwrite\" type:\"boolean\"`",
          "5891:  Token *string `locationName:\"token\" min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5895:  Username *string `locationName:\"username\" min:\"1\" type:\"string\"`",
          "5899: func (s ImportSourceCredentialsInput) String() string {",
          "5904: func (s ImportSourceCredentialsInput) GoString() string {",
          "5909: func (s *ImportSourceCredentialsInput) Validate() error {",
          "5910:  invalidParams := request.ErrInvalidParams{Context: \"ImportSourceCredentialsInput\"}",
          "5911:  if s.AuthType == nil {",
          "5912:   invalidParams.Add(request.NewErrParamRequired(\"AuthType\"))",
          "5913:  }",
          "5914:  if s.ServerType == nil {",
          "5915:   invalidParams.Add(request.NewErrParamRequired(\"ServerType\"))",
          "5916:  }",
          "5917:  if s.Token == nil {",
          "5918:   invalidParams.Add(request.NewErrParamRequired(\"Token\"))",
          "5919:  }",
          "5920:  if s.Token != nil && len(*s.Token) < 1 {",
          "5921:   invalidParams.Add(request.NewErrParamMinLen(\"Token\", 1))",
          "5923:  if s.Username != nil && len(*s.Username) < 1 {",
          "5924:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "",
          "[Added Lines]",
          "6871: func (s *CreateWebhookInput) SetBranchFilter(v string) *CreateWebhookInput {",
          "6872:  s.BranchFilter = &v",
          "6877: func (s *CreateWebhookInput) SetBuildType(v string) *CreateWebhookInput {",
          "6878:  s.BuildType = &v",
          "6879:  return s",
          "6880: }",
          "6883: func (s *CreateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *CreateWebhookInput {",
          "6884:  s.FilterGroups = v",
          "6885:  return s",
          "6886: }",
          "6889: func (s *CreateWebhookInput) SetProjectName(v string) *CreateWebhookInput {",
          "6890:  s.ProjectName = &v",
          "6891:  return s",
          "6892: }",
          "6894: type CreateWebhookOutput struct {",
          "6899:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "6903: func (s CreateWebhookOutput) String() string {",
          "6908: func (s CreateWebhookOutput) GoString() string {",
          "6913: func (s *CreateWebhookOutput) SetWebhook(v *Webhook) *CreateWebhookOutput {",
          "6914:  s.Webhook = v",
          "6920: type DebugSession struct {",
          "6924:  SessionEnabled *bool `locationName:\"sessionEnabled\" type:\"boolean\"`",
          "6929:  SessionTarget *string `locationName:\"sessionTarget\" min:\"1\" type:\"string\"`",
          "6933: func (s DebugSession) String() string {",
          "6938: func (s DebugSession) GoString() string {",
          "6943: func (s *DebugSession) SetSessionEnabled(v bool) *DebugSession {",
          "6944:  s.SessionEnabled = &v",
          "6945:  return s",
          "6949: func (s *DebugSession) SetSessionTarget(v string) *DebugSession {",
          "6950:  s.SessionTarget = &v",
          "6954: type DeleteBuildBatchInput struct {",
          "6960:  Id *string `locationName:\"id\" min:\"1\" type:\"string\" required:\"true\"`",
          "6964: func (s DeleteBuildBatchInput) String() string {",
          "6969: func (s DeleteBuildBatchInput) GoString() string {",
          "6974: func (s *DeleteBuildBatchInput) Validate() error {",
          "6975:  invalidParams := request.ErrInvalidParams{Context: \"DeleteBuildBatchInput\"}",
          "6976:  if s.Id == nil {",
          "6977:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "6979:  if s.Id != nil && len(*s.Id) < 1 {",
          "6980:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5930:  return nil",
          "5931: }",
          "5948:  return s",
          "5949: }",
          "5968: }",
          "5972:  return awsutil.Prettify(s)",
          "5973: }",
          "5977:  return s.String()",
          "5978: }",
          "5983:  return s",
          "5984: }",
          "5992: }",
          "5996:  return awsutil.Prettify(s)",
          "5997: }",
          "6001:  return s.String()",
          "6002: }",
          "6007:  }",
          "6019:  }",
          "6021: }",
          "6026: }",
          "6030: }",
          "6035: }",
          "6040: }",
          "6043:  _ struct{} `type:\"structure\"`",
          "6049: }",
          "6053:  return awsutil.Prettify(s)",
          "6054: }",
          "6058:  return s.String()",
          "6059: }",
          "6066:  }",
          "6069:  }",
          "6071:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5934: func (s *ImportSourceCredentialsInput) SetAuthType(v string) *ImportSourceCredentialsInput {",
          "5935:  s.AuthType = &v",
          "5936:  return s",
          "5937: }",
          "5940: func (s *ImportSourceCredentialsInput) SetServerType(v string) *ImportSourceCredentialsInput {",
          "5941:  s.ServerType = &v",
          "5942:  return s",
          "5943: }",
          "5946: func (s *ImportSourceCredentialsInput) SetShouldOverwrite(v bool) *ImportSourceCredentialsInput {",
          "5947:  s.ShouldOverwrite = &v",
          "5952: func (s *ImportSourceCredentialsInput) SetToken(v string) *ImportSourceCredentialsInput {",
          "5953:  s.Token = &v",
          "5954:  return s",
          "5955: }",
          "5958: func (s *ImportSourceCredentialsInput) SetUsername(v string) *ImportSourceCredentialsInput {",
          "5959:  s.Username = &v",
          "5960:  return s",
          "5961: }",
          "5963: type ImportSourceCredentialsOutput struct {",
          "5964:  _ struct{} `type:\"structure\"`",
          "5967:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5971: func (s ImportSourceCredentialsOutput) String() string {",
          "5976: func (s ImportSourceCredentialsOutput) GoString() string {",
          "5981: func (s *ImportSourceCredentialsOutput) SetArn(v string) *ImportSourceCredentialsOutput {",
          "5982:  s.Arn = &v",
          "5987: type InvalidInputException struct {",
          "5988:  _            struct{}                  `type:\"structure\"`",
          "5989:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5991:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5995: func (s InvalidInputException) String() string {",
          "6000: func (s InvalidInputException) GoString() string {",
          "6004: func newErrorInvalidInputException(v protocol.ResponseMetadata) error {",
          "6005:  return &InvalidInputException{",
          "6006:   RespMetadata: v,",
          "6008: }",
          "6011: func (s *InvalidInputException) Code() string {",
          "6012:  return \"InvalidInputException\"",
          "6013: }",
          "6016: func (s *InvalidInputException) Message() string {",
          "6017:  if s.Message_ != nil {",
          "6018:   return *s.Message_",
          "6020:  return \"\"",
          "6024: func (s *InvalidInputException) OrigErr() error {",
          "6025:  return nil",
          "6028: func (s *InvalidInputException) Error() string {",
          "6029:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6033: func (s *InvalidInputException) StatusCode() int {",
          "6034:  return s.RespMetadata.StatusCode",
          "6038: func (s *InvalidInputException) RequestID() string {",
          "6039:  return s.RespMetadata.RequestID",
          "6042: type InvalidateProjectCacheInput struct {",
          "6048:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "6052: func (s InvalidateProjectCacheInput) String() string {",
          "6057: func (s InvalidateProjectCacheInput) GoString() string {",
          "6062: func (s *InvalidateProjectCacheInput) Validate() error {",
          "6063:  invalidParams := request.ErrInvalidParams{Context: \"InvalidateProjectCacheInput\"}",
          "6064:  if s.ProjectName == nil {",
          "6065:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6067:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "6068:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "",
          "[Added Lines]",
          "6990: func (s *DeleteBuildBatchInput) SetId(v string) *DeleteBuildBatchInput {",
          "6991:  s.Id = &v",
          "6995: type DeleteBuildBatchOutput struct {",
          "6996:  _ struct{} `type:\"structure\"`",
          "7000:  BuildsDeleted []*string `locationName:\"buildsDeleted\" min:\"1\" type:\"list\"`",
          "7004:  BuildsNotDeleted []*BuildNotDeleted `locationName:\"buildsNotDeleted\" type:\"list\"`",
          "7007:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "7011: func (s DeleteBuildBatchOutput) String() string {",
          "7016: func (s DeleteBuildBatchOutput) GoString() string {",
          "7021: func (s *DeleteBuildBatchOutput) SetBuildsDeleted(v []*string) *DeleteBuildBatchOutput {",
          "7022:  s.BuildsDeleted = v",
          "7027: func (s *DeleteBuildBatchOutput) SetBuildsNotDeleted(v []*BuildNotDeleted) *DeleteBuildBatchOutput {",
          "7028:  s.BuildsNotDeleted = v",
          "7029:  return s",
          "7030: }",
          "7033: func (s *DeleteBuildBatchOutput) SetStatusCode(v string) *DeleteBuildBatchOutput {",
          "7034:  s.StatusCode = &v",
          "7035:  return s",
          "7036: }",
          "7038: type DeleteProjectInput struct {",
          "7039:  _ struct{} `type:\"structure\"`",
          "7044:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "7048: func (s DeleteProjectInput) String() string {",
          "7053: func (s DeleteProjectInput) GoString() string {",
          "7058: func (s *DeleteProjectInput) Validate() error {",
          "7059:  invalidParams := request.ErrInvalidParams{Context: \"DeleteProjectInput\"}",
          "7060:  if s.Name == nil {",
          "7061:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7062:  }",
          "7063:  if s.Name != nil && len(*s.Name) < 1 {",
          "7064:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7067:  if invalidParams.Len() > 0 {",
          "7068:   return invalidParams",
          "7070:  return nil",
          "7074: func (s *DeleteProjectInput) SetName(v string) *DeleteProjectInput {",
          "7075:  s.Name = &v",
          "7076:  return s",
          "7079: type DeleteProjectOutput struct {",
          "7080:  _ struct{} `type:\"structure\"`",
          "7084: func (s DeleteProjectOutput) String() string {",
          "7085:  return awsutil.Prettify(s)",
          "7089: func (s DeleteProjectOutput) GoString() string {",
          "7090:  return s.String()",
          "7093: type DeleteReportGroupInput struct {",
          "7099:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7103: func (s DeleteReportGroupInput) String() string {",
          "7108: func (s DeleteReportGroupInput) GoString() string {",
          "7113: func (s *DeleteReportGroupInput) Validate() error {",
          "7114:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportGroupInput\"}",
          "7115:  if s.Arn == nil {",
          "7116:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7118:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7119:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6074:  return nil",
          "6075: }",
          "6080:  return s",
          "6081: }",
          "6084:  _ struct{} `type:\"structure\"`",
          "6085: }",
          "6089:  return awsutil.Prettify(s)",
          "6090: }",
          "6094:  return s.String()",
          "6095: }",
          "6098:  _ struct{} `type:\"structure\"`",
          "6119: }",
          "6123:  return awsutil.Prettify(s)",
          "6124: }",
          "6128:  return s.String()",
          "6129: }",
          "6136:  }",
          "6139:  }",
          "6141:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6078: func (s *InvalidateProjectCacheInput) SetProjectName(v string) *InvalidateProjectCacheInput {",
          "6079:  s.ProjectName = &v",
          "6083: type InvalidateProjectCacheOutput struct {",
          "6088: func (s InvalidateProjectCacheOutput) String() string {",
          "6093: func (s InvalidateProjectCacheOutput) GoString() string {",
          "6097: type ListBuildsForProjectInput struct {",
          "6106:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6111:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "6118:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6122: func (s ListBuildsForProjectInput) String() string {",
          "6127: func (s ListBuildsForProjectInput) GoString() string {",
          "6132: func (s *ListBuildsForProjectInput) Validate() error {",
          "6133:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildsForProjectInput\"}",
          "6134:  if s.ProjectName == nil {",
          "6135:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6137:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "6138:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "",
          "[Added Lines]",
          "7129: func (s *DeleteReportGroupInput) SetArn(v string) *DeleteReportGroupInput {",
          "7130:  s.Arn = &v",
          "7134: type DeleteReportGroupOutput struct {",
          "7139: func (s DeleteReportGroupOutput) String() string {",
          "7144: func (s DeleteReportGroupOutput) GoString() string {",
          "7148: type DeleteReportInput struct {",
          "7154:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7158: func (s DeleteReportInput) String() string {",
          "7163: func (s DeleteReportInput) GoString() string {",
          "7168: func (s *DeleteReportInput) Validate() error {",
          "7169:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportInput\"}",
          "7170:  if s.Arn == nil {",
          "7171:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7173:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7174:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "6144:  return nil",
          "6145: }",
          "6150:  return s",
          "6151: }",
          "6157: }",
          "6163: }",
          "6177: }",
          "6181:  return awsutil.Prettify(s)",
          "6182: }",
          "6186:  return s.String()",
          "6187: }",
          "6193: }",
          "6198:  return s",
          "6199: }",
          "6202:  _ struct{} `type:\"structure\"`",
          "6218: }",
          "6222:  return awsutil.Prettify(s)",
          "6223: }",
          "6227:  return s.String()",
          "6228: }",
          "6234: }",
          "6239:  return s",
          "6240: }",
          "6243:  _ struct{} `type:\"structure\"`",
          "6253: }",
          "6257:  return awsutil.Prettify(s)",
          "6258: }",
          "6262:  return s.String()",
          "6263: }",
          "6274:  return s",
          "6275: }",
          "6278:  _ struct{} `type:\"structure\"`",
          "6279: }",
          "6283:  return awsutil.Prettify(s)",
          "6284: }",
          "6288:  return s.String()",
          "6289: }",
          "6297: }",
          "6301:  return awsutil.Prettify(s)",
          "6302: }",
          "6306:  return s.String()",
          "6307: }",
          "6316:  _ struct{} `type:\"structure\"`",
          "6346:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6347: }",
          "6351:  return awsutil.Prettify(s)",
          "6352: }",
          "6356:  return s.String()",
          "6357: }",
          "6364:  }",
          "6366:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6148: func (s *ListBuildsForProjectInput) SetNextToken(v string) *ListBuildsForProjectInput {",
          "6149:  s.NextToken = &v",
          "6154: func (s *ListBuildsForProjectInput) SetProjectName(v string) *ListBuildsForProjectInput {",
          "6155:  s.ProjectName = &v",
          "6156:  return s",
          "6160: func (s *ListBuildsForProjectInput) SetSortOrder(v string) *ListBuildsForProjectInput {",
          "6161:  s.SortOrder = &v",
          "6162:  return s",
          "6165: type ListBuildsForProjectOutput struct {",
          "6166:  _ struct{} `type:\"structure\"`",
          "6170:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "6176:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6180: func (s ListBuildsForProjectOutput) String() string {",
          "6185: func (s ListBuildsForProjectOutput) GoString() string {",
          "6190: func (s *ListBuildsForProjectOutput) SetIds(v []*string) *ListBuildsForProjectOutput {",
          "6191:  s.Ids = v",
          "6192:  return s",
          "6196: func (s *ListBuildsForProjectOutput) SetNextToken(v string) *ListBuildsForProjectOutput {",
          "6197:  s.NextToken = &v",
          "6201: type ListBuildsInput struct {",
          "6210:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6217:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6221: func (s ListBuildsInput) String() string {",
          "6226: func (s ListBuildsInput) GoString() string {",
          "6231: func (s *ListBuildsInput) SetNextToken(v string) *ListBuildsInput {",
          "6232:  s.NextToken = &v",
          "6233:  return s",
          "6237: func (s *ListBuildsInput) SetSortOrder(v string) *ListBuildsInput {",
          "6238:  s.SortOrder = &v",
          "6242: type ListBuildsOutput struct {",
          "6246:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "6252:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6256: func (s ListBuildsOutput) String() string {",
          "6261: func (s ListBuildsOutput) GoString() string {",
          "6266: func (s *ListBuildsOutput) SetIds(v []*string) *ListBuildsOutput {",
          "6267:  s.Ids = v",
          "6268:  return s",
          "6269: }",
          "6272: func (s *ListBuildsOutput) SetNextToken(v string) *ListBuildsOutput {",
          "6273:  s.NextToken = &v",
          "6277: type ListCuratedEnvironmentImagesInput struct {",
          "6282: func (s ListCuratedEnvironmentImagesInput) String() string {",
          "6287: func (s ListCuratedEnvironmentImagesInput) GoString() string {",
          "6291: type ListCuratedEnvironmentImagesOutput struct {",
          "6292:  _ struct{} `type:\"structure\"`",
          "6296:  Platforms []*EnvironmentPlatform `locationName:\"platforms\" type:\"list\"`",
          "6300: func (s ListCuratedEnvironmentImagesOutput) String() string {",
          "6305: func (s ListCuratedEnvironmentImagesOutput) GoString() string {",
          "6310: func (s *ListCuratedEnvironmentImagesOutput) SetPlatforms(v []*EnvironmentPlatform) *ListCuratedEnvironmentImagesOutput {",
          "6311:  s.Platforms = v",
          "6312:  return s",
          "6313: }",
          "6315: type ListProjectsInput struct {",
          "6324:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6337:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ProjectSortByType\"`",
          "6350: func (s ListProjectsInput) String() string {",
          "6355: func (s ListProjectsInput) GoString() string {",
          "6360: func (s *ListProjectsInput) Validate() error {",
          "6361:  invalidParams := request.ErrInvalidParams{Context: \"ListProjectsInput\"}",
          "6362:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "6363:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "",
          "[Added Lines]",
          "7184: func (s *DeleteReportInput) SetArn(v string) *DeleteReportInput {",
          "7185:  s.Arn = &v",
          "7189: type DeleteReportOutput struct {",
          "7190:  _ struct{} `type:\"structure\"`",
          "7194: func (s DeleteReportOutput) String() string {",
          "7195:  return awsutil.Prettify(s)",
          "7199: func (s DeleteReportOutput) GoString() string {",
          "7200:  return s.String()",
          "7201: }",
          "7203: type DeleteResourcePolicyInput struct {",
          "7204:  _ struct{} `type:\"structure\"`",
          "7209:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7213: func (s DeleteResourcePolicyInput) String() string {",
          "7218: func (s DeleteResourcePolicyInput) GoString() string {",
          "7223: func (s *DeleteResourcePolicyInput) Validate() error {",
          "7224:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResourcePolicyInput\"}",
          "7225:  if s.ResourceArn == nil {",
          "7226:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7227:  }",
          "7228:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7229:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7230:  }",
          "7232:  if invalidParams.Len() > 0 {",
          "7233:   return invalidParams",
          "7234:  }",
          "7235:  return nil",
          "7239: func (s *DeleteResourcePolicyInput) SetResourceArn(v string) *DeleteResourcePolicyInput {",
          "7240:  s.ResourceArn = &v",
          "7244: type DeleteResourcePolicyOutput struct {",
          "7246: }",
          "7249: func (s DeleteResourcePolicyOutput) String() string {",
          "7250:  return awsutil.Prettify(s)",
          "7251: }",
          "7254: func (s DeleteResourcePolicyOutput) GoString() string {",
          "7255:  return s.String()",
          "7256: }",
          "7258: type DeleteSourceCredentialsInput struct {",
          "7259:  _ struct{} `type:\"structure\"`",
          "7264:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7268: func (s DeleteSourceCredentialsInput) String() string {",
          "7273: func (s DeleteSourceCredentialsInput) GoString() string {",
          "7278: func (s *DeleteSourceCredentialsInput) Validate() error {",
          "7279:  invalidParams := request.ErrInvalidParams{Context: \"DeleteSourceCredentialsInput\"}",
          "7280:  if s.Arn == nil {",
          "7281:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7282:  }",
          "7283:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7284:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "7285:  }",
          "7287:  if invalidParams.Len() > 0 {",
          "7288:   return invalidParams",
          "7289:  }",
          "7290:  return nil",
          "7294: func (s *DeleteSourceCredentialsInput) SetArn(v string) *DeleteSourceCredentialsInput {",
          "7295:  s.Arn = &v",
          "7299: type DeleteSourceCredentialsOutput struct {",
          "7303:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "7307: func (s DeleteSourceCredentialsOutput) String() string {",
          "7312: func (s DeleteSourceCredentialsOutput) GoString() string {",
          "7317: func (s *DeleteSourceCredentialsOutput) SetArn(v string) *DeleteSourceCredentialsOutput {",
          "7318:  s.Arn = &v",
          "7322: type DeleteWebhookInput struct {",
          "7328:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "7332: func (s DeleteWebhookInput) String() string {",
          "7337: func (s DeleteWebhookInput) GoString() string {",
          "7342: func (s *DeleteWebhookInput) Validate() error {",
          "7343:  invalidParams := request.ErrInvalidParams{Context: \"DeleteWebhookInput\"}",
          "7344:  if s.ProjectName == nil {",
          "7345:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "7346:  }",
          "7347:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "7348:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "7349:  }",
          "7351:  if invalidParams.Len() > 0 {",
          "7352:   return invalidParams",
          "7353:  }",
          "7354:  return nil",
          "7355: }",
          "7358: func (s *DeleteWebhookInput) SetProjectName(v string) *DeleteWebhookInput {",
          "7359:  s.ProjectName = &v",
          "7360:  return s",
          "7361: }",
          "7363: type DeleteWebhookOutput struct {",
          "7364:  _ struct{} `type:\"structure\"`",
          "7368: func (s DeleteWebhookOutput) String() string {",
          "7373: func (s DeleteWebhookOutput) GoString() string {",
          "7377: type DescribeCodeCoveragesInput struct {",
          "7381:  MaxLineCoveragePercentage *float64 `locationName:\"maxLineCoveragePercentage\" type:\"double\"`",
          "7384:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "7387:  MinLineCoveragePercentage *float64 `locationName:\"minLineCoveragePercentage\" type:\"double\"`",
          "7392:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "7397:  ReportArn *string `locationName:\"reportArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7408:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportCodeCoverageSortByType\"`",
          "7415: func (s DescribeCodeCoveragesInput) String() string {",
          "7420: func (s DescribeCodeCoveragesInput) GoString() string {",
          "7425: func (s *DescribeCodeCoveragesInput) Validate() error {",
          "7426:  invalidParams := request.ErrInvalidParams{Context: \"DescribeCodeCoveragesInput\"}",
          "7427:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "7428:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "7429:  }",
          "7430:  if s.ReportArn == nil {",
          "7431:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "7432:  }",
          "7433:  if s.ReportArn != nil && len(*s.ReportArn) < 1 {",
          "7434:   invalidParams.Add(request.NewErrParamMinLen(\"ReportArn\", 1))",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "6369:  return nil",
          "6370: }",
          "6374:  s.NextToken = &v",
          "6375:  return s",
          "6376: }",
          "6380:  s.SortBy = &v",
          "6381:  return s",
          "6382: }",
          "6386:  s.SortOrder = &v",
          "6387:  return s",
          "6388: }",
          "6391:  _ struct{} `type:\"structure\"`",
          "6402: }",
          "6406:  return awsutil.Prettify(s)",
          "6407: }",
          "6411:  return s.String()",
          "6412: }",
          "6417:  return s",
          "6418: }",
          "6423:  return s",
          "6424: }",
          "6427:  _ struct{} `type:\"structure\"`",
          "6432:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "6373: func (s *ListProjectsInput) SetNextToken(v string) *ListProjectsInput {",
          "6379: func (s *ListProjectsInput) SetSortBy(v string) *ListProjectsInput {",
          "6385: func (s *ListProjectsInput) SetSortOrder(v string) *ListProjectsInput {",
          "6390: type ListProjectsOutput struct {",
          "6397:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6401:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "6405: func (s ListProjectsOutput) String() string {",
          "6410: func (s ListProjectsOutput) GoString() string {",
          "6415: func (s *ListProjectsOutput) SetNextToken(v string) *ListProjectsOutput {",
          "6416:  s.NextToken = &v",
          "6421: func (s *ListProjectsOutput) SetProjects(v []*string) *ListProjectsOutput {",
          "6422:  s.Projects = v",
          "6426: type ListReportGroupsInput struct {",
          "",
          "[Added Lines]",
          "7444: func (s *DescribeCodeCoveragesInput) SetMaxLineCoveragePercentage(v float64) *DescribeCodeCoveragesInput {",
          "7445:  s.MaxLineCoveragePercentage = &v",
          "7446:  return s",
          "7447: }",
          "7450: func (s *DescribeCodeCoveragesInput) SetMaxResults(v int64) *DescribeCodeCoveragesInput {",
          "7451:  s.MaxResults = &v",
          "7452:  return s",
          "7453: }",
          "7456: func (s *DescribeCodeCoveragesInput) SetMinLineCoveragePercentage(v float64) *DescribeCodeCoveragesInput {",
          "7457:  s.MinLineCoveragePercentage = &v",
          "7458:  return s",
          "7459: }",
          "7462: func (s *DescribeCodeCoveragesInput) SetNextToken(v string) *DescribeCodeCoveragesInput {",
          "7468: func (s *DescribeCodeCoveragesInput) SetReportArn(v string) *DescribeCodeCoveragesInput {",
          "7469:  s.ReportArn = &v",
          "7470:  return s",
          "7471: }",
          "7474: func (s *DescribeCodeCoveragesInput) SetSortBy(v string) *DescribeCodeCoveragesInput {",
          "7480: func (s *DescribeCodeCoveragesInput) SetSortOrder(v string) *DescribeCodeCoveragesInput {",
          "7485: type DescribeCodeCoveragesOutput struct {",
          "7489:  CodeCoverages []*CodeCoverage `locationName:\"codeCoverages\" type:\"list\"`",
          "7493:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "7497: func (s DescribeCodeCoveragesOutput) String() string {",
          "7502: func (s DescribeCodeCoveragesOutput) GoString() string {",
          "7507: func (s *DescribeCodeCoveragesOutput) SetCodeCoverages(v []*CodeCoverage) *DescribeCodeCoveragesOutput {",
          "7508:  s.CodeCoverages = v",
          "7513: func (s *DescribeCodeCoveragesOutput) SetNextToken(v string) *DescribeCodeCoveragesOutput {",
          "7514:  s.NextToken = &v",
          "7518: type DescribeTestCasesInput struct {",
          "7522:  Filter *TestCaseFilter `locationName:\"filter\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "6441:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6455: }",
          "6459:  return awsutil.Prettify(s)",
          "6460: }",
          "6464:  return s.String()",
          "6465: }",
          "6470:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6471:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6472:  }",
          "6474:  if invalidParams.Len() > 0 {",
          "6475:   return invalidParams",
          "",
          "[Removed Lines]",
          "6450:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportGroupSortByType\"`",
          "6454:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6458: func (s ListReportGroupsInput) String() string {",
          "6463: func (s ListReportGroupsInput) GoString() string {",
          "6468: func (s *ListReportGroupsInput) Validate() error {",
          "6469:  invalidParams := request.ErrInvalidParams{Context: \"ListReportGroupsInput\"}",
          "",
          "[Added Lines]",
          "7541:  ReportArn *string `locationName:\"reportArn\" type:\"string\" required:\"true\"`",
          "7545: func (s DescribeTestCasesInput) String() string {",
          "7550: func (s DescribeTestCasesInput) GoString() string {",
          "7555: func (s *DescribeTestCasesInput) Validate() error {",
          "7556:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTestCasesInput\"}",
          "7560:  if s.ReportArn == nil {",
          "7561:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "7562:  }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "6477:  return nil",
          "6478: }",
          "6482:  s.MaxResults = &v",
          "6483:  return s",
          "6484: }",
          "6488:  s.NextToken = &v",
          "6489:  return s",
          "6490: }",
          "6501:  return s",
          "6502: }",
          "6505:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "6481: func (s *ListReportGroupsInput) SetMaxResults(v int64) *ListReportGroupsInput {",
          "6487: func (s *ListReportGroupsInput) SetNextToken(v string) *ListReportGroupsInput {",
          "6493: func (s *ListReportGroupsInput) SetSortBy(v string) *ListReportGroupsInput {",
          "6494:  s.SortBy = &v",
          "6495:  return s",
          "6496: }",
          "6499: func (s *ListReportGroupsInput) SetSortOrder(v string) *ListReportGroupsInput {",
          "6500:  s.SortOrder = &v",
          "6504: type ListReportGroupsOutput struct {",
          "",
          "[Added Lines]",
          "7571: func (s *DescribeTestCasesInput) SetFilter(v *TestCaseFilter) *DescribeTestCasesInput {",
          "7572:  s.Filter = v",
          "7573:  return s",
          "7574: }",
          "7577: func (s *DescribeTestCasesInput) SetMaxResults(v int64) *DescribeTestCasesInput {",
          "7583: func (s *DescribeTestCasesInput) SetNextToken(v string) *DescribeTestCasesInput {",
          "7589: func (s *DescribeTestCasesInput) SetReportArn(v string) *DescribeTestCasesInput {",
          "7590:  s.ReportArn = &v",
          "7594: type DescribeTestCasesOutput struct {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6514:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6518: }",
          "6522:  return awsutil.Prettify(s)",
          "6523: }",
          "6527:  return s.String()",
          "6528: }",
          "6532:  s.NextToken = &v",
          "6533:  return s",
          "6534: }",
          "6539:  return s",
          "6540: }",
          "6543:  _ struct{} `type:\"structure\"`",
          "6570: }",
          "6574:  return awsutil.Prettify(s)",
          "6575: }",
          "6579:  return s.String()",
          "6580: }",
          "6613:  return s",
          "6614: }",
          "6619:  return s",
          "6620: }",
          "6625:  return s",
          "6626: }",
          "6629:  _ struct{} `type:\"structure\"`",
          "6642: }",
          "6646:  return awsutil.Prettify(s)",
          "6647: }",
          "6651:  return s.String()",
          "6652: }",
          "6657:  return s",
          "6658: }",
          "6663:  return s",
          "6664: }",
          "6667:  _ struct{} `type:\"structure\"`",
          "6694: }",
          "6698:  return awsutil.Prettify(s)",
          "6699: }",
          "6703:  return s.String()",
          "6704: }",
          "6722:  return s",
          "6723: }",
          "6778:  return s",
          "6779: }",
          "6782:  _ struct{} `type:\"structure\"`",
          "6813: }",
          "6817:  return awsutil.Prettify(s)",
          "6818: }",
          "6822:  return s.String()",
          "6823: }",
          "6830:  }",
          "6833:  }",
          "6835:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6517:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "6521: func (s ListReportGroupsOutput) String() string {",
          "6526: func (s ListReportGroupsOutput) GoString() string {",
          "6531: func (s *ListReportGroupsOutput) SetNextToken(v string) *ListReportGroupsOutput {",
          "6537: func (s *ListReportGroupsOutput) SetReportGroups(v []*string) *ListReportGroupsOutput {",
          "6538:  s.ReportGroups = v",
          "6542: type ListReportsForReportGroupInput struct {",
          "6546:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "6551:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6560:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6565:  ReportGroupArn *string `locationName:\"reportGroupArn\" type:\"string\" required:\"true\"`",
          "6569:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6573: func (s ListReportsForReportGroupInput) String() string {",
          "6578: func (s ListReportsForReportGroupInput) GoString() string {",
          "6583: func (s *ListReportsForReportGroupInput) Validate() error {",
          "6584:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsForReportGroupInput\"}",
          "6585:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6586:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6587:  }",
          "6588:  if s.ReportGroupArn == nil {",
          "6589:   invalidParams.Add(request.NewErrParamRequired(\"ReportGroupArn\"))",
          "6590:  }",
          "6592:  if invalidParams.Len() > 0 {",
          "6593:   return invalidParams",
          "6594:  }",
          "6595:  return nil",
          "6596: }",
          "6599: func (s *ListReportsForReportGroupInput) SetFilter(v *ReportFilter) *ListReportsForReportGroupInput {",
          "6600:  s.Filter = v",
          "6601:  return s",
          "6602: }",
          "6605: func (s *ListReportsForReportGroupInput) SetMaxResults(v int64) *ListReportsForReportGroupInput {",
          "6606:  s.MaxResults = &v",
          "6607:  return s",
          "6608: }",
          "6611: func (s *ListReportsForReportGroupInput) SetNextToken(v string) *ListReportsForReportGroupInput {",
          "6612:  s.NextToken = &v",
          "6617: func (s *ListReportsForReportGroupInput) SetReportGroupArn(v string) *ListReportsForReportGroupInput {",
          "6618:  s.ReportGroupArn = &v",
          "6623: func (s *ListReportsForReportGroupInput) SetSortOrder(v string) *ListReportsForReportGroupInput {",
          "6624:  s.SortOrder = &v",
          "6628: type ListReportsForReportGroupOutput struct {",
          "6638:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6641:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "6645: func (s ListReportsForReportGroupOutput) String() string {",
          "6650: func (s ListReportsForReportGroupOutput) GoString() string {",
          "6655: func (s *ListReportsForReportGroupOutput) SetNextToken(v string) *ListReportsForReportGroupOutput {",
          "6656:  s.NextToken = &v",
          "6661: func (s *ListReportsForReportGroupOutput) SetReports(v []*string) *ListReportsForReportGroupOutput {",
          "6662:  s.Reports = v",
          "6666: type ListReportsInput struct {",
          "6670:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "6675:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6684:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6693:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6697: func (s ListReportsInput) String() string {",
          "6702: func (s ListReportsInput) GoString() string {",
          "6707: func (s *ListReportsInput) Validate() error {",
          "6708:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsInput\"}",
          "6709:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6710:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6711:  }",
          "6713:  if invalidParams.Len() > 0 {",
          "6714:   return invalidParams",
          "6715:  }",
          "6716:  return nil",
          "6717: }",
          "6720: func (s *ListReportsInput) SetFilter(v *ReportFilter) *ListReportsInput {",
          "6721:  s.Filter = v",
          "6726: func (s *ListReportsInput) SetMaxResults(v int64) *ListReportsInput {",
          "6727:  s.MaxResults = &v",
          "6728:  return s",
          "6729: }",
          "6732: func (s *ListReportsInput) SetNextToken(v string) *ListReportsInput {",
          "6733:  s.NextToken = &v",
          "6734:  return s",
          "6735: }",
          "6738: func (s *ListReportsInput) SetSortOrder(v string) *ListReportsInput {",
          "6739:  s.SortOrder = &v",
          "6740:  return s",
          "6741: }",
          "6743: type ListReportsOutput struct {",
          "6744:  _ struct{} `type:\"structure\"`",
          "6753:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6756:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "6757: }",
          "6760: func (s ListReportsOutput) String() string {",
          "6761:  return awsutil.Prettify(s)",
          "6762: }",
          "6765: func (s ListReportsOutput) GoString() string {",
          "6766:  return s.String()",
          "6767: }",
          "6770: func (s *ListReportsOutput) SetNextToken(v string) *ListReportsOutput {",
          "6771:  s.NextToken = &v",
          "6772:  return s",
          "6773: }",
          "6776: func (s *ListReportsOutput) SetReports(v []*string) *ListReportsOutput {",
          "6777:  s.Reports = v",
          "6781: type ListSharedProjectsInput struct {",
          "6787:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6796:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6805:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "6812:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6816: func (s ListSharedProjectsInput) String() string {",
          "6821: func (s ListSharedProjectsInput) GoString() string {",
          "6826: func (s *ListSharedProjectsInput) Validate() error {",
          "6827:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedProjectsInput\"}",
          "6828:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6829:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6831:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "6832:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "",
          "[Added Lines]",
          "7607:  TestCases []*TestCase `locationName:\"testCases\" type:\"list\"`",
          "7611: func (s DescribeTestCasesOutput) String() string {",
          "7616: func (s DescribeTestCasesOutput) GoString() string {",
          "7621: func (s *DescribeTestCasesOutput) SetNextToken(v string) *DescribeTestCasesOutput {",
          "7627: func (s *DescribeTestCasesOutput) SetTestCases(v []*TestCase) *DescribeTestCasesOutput {",
          "7628:  s.TestCases = v",
          "7633: type EnvironmentImage struct {",
          "7637:  Description *string `locationName:\"description\" type:\"string\"`",
          "7640:  Name *string `locationName:\"name\" type:\"string\"`",
          "7643:  Versions []*string `locationName:\"versions\" type:\"list\"`",
          "7647: func (s EnvironmentImage) String() string {",
          "7652: func (s EnvironmentImage) GoString() string {",
          "7657: func (s *EnvironmentImage) SetDescription(v string) *EnvironmentImage {",
          "7658:  s.Description = &v",
          "7663: func (s *EnvironmentImage) SetName(v string) *EnvironmentImage {",
          "7664:  s.Name = &v",
          "7669: func (s *EnvironmentImage) SetVersions(v []*string) *EnvironmentImage {",
          "7670:  s.Versions = v",
          "7676: type EnvironmentLanguage struct {",
          "7680:  Images []*EnvironmentImage `locationName:\"images\" type:\"list\"`",
          "7683:  Language *string `locationName:\"language\" type:\"string\" enum:\"LanguageType\"`",
          "7687: func (s EnvironmentLanguage) String() string {",
          "7692: func (s EnvironmentLanguage) GoString() string {",
          "7697: func (s *EnvironmentLanguage) SetImages(v []*EnvironmentImage) *EnvironmentLanguage {",
          "7698:  s.Images = v",
          "7703: func (s *EnvironmentLanguage) SetLanguage(v string) *EnvironmentLanguage {",
          "7704:  s.Language = &v",
          "7710: type EnvironmentPlatform struct {",
          "7714:  Languages []*EnvironmentLanguage `locationName:\"languages\" type:\"list\"`",
          "7717:  Platform *string `locationName:\"platform\" type:\"string\" enum:\"PlatformType\"`",
          "7721: func (s EnvironmentPlatform) String() string {",
          "7726: func (s EnvironmentPlatform) GoString() string {",
          "7731: func (s *EnvironmentPlatform) SetLanguages(v []*EnvironmentLanguage) *EnvironmentPlatform {",
          "7732:  s.Languages = v",
          "7737: func (s *EnvironmentPlatform) SetPlatform(v string) *EnvironmentPlatform {",
          "7738:  s.Platform = &v",
          "7743: type EnvironmentVariable struct {",
          "7749:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "7763:  Type *string `locationName:\"type\" type:\"string\" enum:\"EnvironmentVariableType\"`",
          "7774:  Value *string `locationName:\"value\" type:\"string\" required:\"true\"`",
          "7778: func (s EnvironmentVariable) String() string {",
          "7783: func (s EnvironmentVariable) GoString() string {",
          "7788: func (s *EnvironmentVariable) Validate() error {",
          "7789:  invalidParams := request.ErrInvalidParams{Context: \"EnvironmentVariable\"}",
          "7790:  if s.Name == nil {",
          "7791:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7793:  if s.Name != nil && len(*s.Name) < 1 {",
          "7794:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7795:  }",
          "7796:  if s.Value == nil {",
          "7797:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6838:  return nil",
          "6839: }",
          "6850:  return s",
          "6851: }",
          "6856:  return s",
          "6857: }",
          "6862:  return s",
          "6863: }",
          "6866:  _ struct{} `type:\"structure\"`",
          "6880: }",
          "6884:  return awsutil.Prettify(s)",
          "6885: }",
          "6889:  return s.String()",
          "6890: }",
          "6895:  return s",
          "6896: }",
          "6901:  return s",
          "6902: }",
          "6905:  _ struct{} `type:\"structure\"`",
          "6936: }",
          "6940:  return awsutil.Prettify(s)",
          "6941: }",
          "6945:  return s.String()",
          "6946: }",
          "6953:  }",
          "6955:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6842: func (s *ListSharedProjectsInput) SetMaxResults(v int64) *ListSharedProjectsInput {",
          "6843:  s.MaxResults = &v",
          "6844:  return s",
          "6845: }",
          "6848: func (s *ListSharedProjectsInput) SetNextToken(v string) *ListSharedProjectsInput {",
          "6849:  s.NextToken = &v",
          "6854: func (s *ListSharedProjectsInput) SetSortBy(v string) *ListSharedProjectsInput {",
          "6855:  s.SortBy = &v",
          "6860: func (s *ListSharedProjectsInput) SetSortOrder(v string) *ListSharedProjectsInput {",
          "6861:  s.SortOrder = &v",
          "6865: type ListSharedProjectsOutput struct {",
          "6875:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6879:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "6883: func (s ListSharedProjectsOutput) String() string {",
          "6888: func (s ListSharedProjectsOutput) GoString() string {",
          "6893: func (s *ListSharedProjectsOutput) SetNextToken(v string) *ListSharedProjectsOutput {",
          "6894:  s.NextToken = &v",
          "6899: func (s *ListSharedProjectsOutput) SetProjects(v []*string) *ListSharedProjectsOutput {",
          "6900:  s.Projects = v",
          "6904: type ListSharedReportGroupsInput struct {",
          "6910:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6919:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6928:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "6935:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6939: func (s ListSharedReportGroupsInput) String() string {",
          "6944: func (s ListSharedReportGroupsInput) GoString() string {",
          "6949: func (s *ListSharedReportGroupsInput) Validate() error {",
          "6950:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedReportGroupsInput\"}",
          "6951:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6952:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "",
          "[Added Lines]",
          "7807: func (s *EnvironmentVariable) SetName(v string) *EnvironmentVariable {",
          "7808:  s.Name = &v",
          "7813: func (s *EnvironmentVariable) SetType(v string) *EnvironmentVariable {",
          "7814:  s.Type = &v",
          "7819: func (s *EnvironmentVariable) SetValue(v string) *EnvironmentVariable {",
          "7820:  s.Value = &v",
          "7825: type ExportedEnvironmentVariable struct {",
          "7829:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "7837:  Value *string `locationName:\"value\" type:\"string\"`",
          "7841: func (s ExportedEnvironmentVariable) String() string {",
          "7846: func (s ExportedEnvironmentVariable) GoString() string {",
          "7851: func (s *ExportedEnvironmentVariable) SetName(v string) *ExportedEnvironmentVariable {",
          "7852:  s.Name = &v",
          "7857: func (s *ExportedEnvironmentVariable) SetValue(v string) *ExportedEnvironmentVariable {",
          "7858:  s.Value = &v",
          "7862: type GetResourcePolicyInput struct {",
          "7868:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7872: func (s GetResourcePolicyInput) String() string {",
          "7877: func (s GetResourcePolicyInput) GoString() string {",
          "7882: func (s *GetResourcePolicyInput) Validate() error {",
          "7883:  invalidParams := request.ErrInvalidParams{Context: \"GetResourcePolicyInput\"}",
          "7884:  if s.ResourceArn == nil {",
          "7885:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7886:  }",
          "7887:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7888:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6958:  return nil",
          "6959: }",
          "6964:  return s",
          "6965: }",
          "6971: }",
          "7005: }",
          "7009:  return s.String()",
          "7010: }",
          "7021:  return s",
          "7022: }",
          "7025:  _ struct{} `type:\"structure\"`",
          "7026: }",
          "7030:  return awsutil.Prettify(s)",
          "7031: }",
          "7035:  return s.String()",
          "7036: }",
          "7055: }",
          "7060:  return s",
          "7061: }",
          "7066:  _ struct{} `type:\"structure\"`",
          "7075: }",
          "7079:  return awsutil.Prettify(s)",
          "7080: }",
          "7084:  return s.String()",
          "7085: }",
          "7094:  }",
          "7099:  }",
          "7101:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6962: func (s *ListSharedReportGroupsInput) SetMaxResults(v int64) *ListSharedReportGroupsInput {",
          "6963:  s.MaxResults = &v",
          "6968: func (s *ListSharedReportGroupsInput) SetNextToken(v string) *ListSharedReportGroupsInput {",
          "6969:  s.NextToken = &v",
          "6970:  return s",
          "6974: func (s *ListSharedReportGroupsInput) SetSortBy(v string) *ListSharedReportGroupsInput {",
          "6975:  s.SortBy = &v",
          "6976:  return s",
          "6977: }",
          "6980: func (s *ListSharedReportGroupsInput) SetSortOrder(v string) *ListSharedReportGroupsInput {",
          "6981:  s.SortOrder = &v",
          "6982:  return s",
          "6983: }",
          "6985: type ListSharedReportGroupsOutput struct {",
          "6986:  _ struct{} `type:\"structure\"`",
          "6995:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6999:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "7000: }",
          "7003: func (s ListSharedReportGroupsOutput) String() string {",
          "7004:  return awsutil.Prettify(s)",
          "7008: func (s ListSharedReportGroupsOutput) GoString() string {",
          "7013: func (s *ListSharedReportGroupsOutput) SetNextToken(v string) *ListSharedReportGroupsOutput {",
          "7014:  s.NextToken = &v",
          "7015:  return s",
          "7016: }",
          "7019: func (s *ListSharedReportGroupsOutput) SetReportGroups(v []*string) *ListSharedReportGroupsOutput {",
          "7020:  s.ReportGroups = v",
          "7024: type ListSourceCredentialsInput struct {",
          "7029: func (s ListSourceCredentialsInput) String() string {",
          "7034: func (s ListSourceCredentialsInput) GoString() string {",
          "7038: type ListSourceCredentialsOutput struct {",
          "7039:  _ struct{} `type:\"structure\"`",
          "7044:  SourceCredentialsInfos []*SourceCredentialsInfo `locationName:\"sourceCredentialsInfos\" type:\"list\"`",
          "7045: }",
          "7048: func (s ListSourceCredentialsOutput) String() string {",
          "7049:  return awsutil.Prettify(s)",
          "7050: }",
          "7053: func (s ListSourceCredentialsOutput) GoString() string {",
          "7054:  return s.String()",
          "7058: func (s *ListSourceCredentialsOutput) SetSourceCredentialsInfos(v []*SourceCredentialsInfo) *ListSourceCredentialsOutput {",
          "7059:  s.SourceCredentialsInfos = v",
          "7065: type LogsConfig struct {",
          "7070:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "7074:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "7078: func (s LogsConfig) String() string {",
          "7083: func (s LogsConfig) GoString() string {",
          "7088: func (s *LogsConfig) Validate() error {",
          "7089:  invalidParams := request.ErrInvalidParams{Context: \"LogsConfig\"}",
          "7090:  if s.CloudWatchLogs != nil {",
          "7091:   if err := s.CloudWatchLogs.Validate(); err != nil {",
          "7092:    invalidParams.AddNested(\"CloudWatchLogs\", err.(request.ErrInvalidParams))",
          "7093:   }",
          "7095:  if s.S3Logs != nil {",
          "7096:   if err := s.S3Logs.Validate(); err != nil {",
          "7097:    invalidParams.AddNested(\"S3Logs\", err.(request.ErrInvalidParams))",
          "7098:   }",
          "",
          "[Added Lines]",
          "7898: func (s *GetResourcePolicyInput) SetResourceArn(v string) *GetResourcePolicyInput {",
          "7899:  s.ResourceArn = &v",
          "7903: type GetResourcePolicyOutput struct {",
          "7904:  _ struct{} `type:\"structure\"`",
          "7907:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\"`",
          "7911: func (s GetResourcePolicyOutput) String() string {",
          "7912:  return awsutil.Prettify(s)",
          "7916: func (s GetResourcePolicyOutput) GoString() string {",
          "7921: func (s *GetResourcePolicyOutput) SetPolicy(v string) *GetResourcePolicyOutput {",
          "7922:  s.Policy = &v",
          "7928: type GitSubmodulesConfig struct {",
          "7934:  FetchSubmodules *bool `locationName:\"fetchSubmodules\" type:\"boolean\" required:\"true\"`",
          "7938: func (s GitSubmodulesConfig) String() string {",
          "7943: func (s GitSubmodulesConfig) GoString() string {",
          "7948: func (s *GitSubmodulesConfig) Validate() error {",
          "7949:  invalidParams := request.ErrInvalidParams{Context: \"GitSubmodulesConfig\"}",
          "7950:  if s.FetchSubmodules == nil {",
          "7951:   invalidParams.Add(request.NewErrParamRequired(\"FetchSubmodules\"))",
          "7952:  }",
          "7954:  if invalidParams.Len() > 0 {",
          "7955:   return invalidParams",
          "7956:  }",
          "7957:  return nil",
          "7961: func (s *GitSubmodulesConfig) SetFetchSubmodules(v bool) *GitSubmodulesConfig {",
          "7962:  s.FetchSubmodules = &v",
          "7966: type ImportSourceCredentialsInput struct {",
          "7974:  AuthType *string `locationName:\"authType\" type:\"string\" required:\"true\" enum:\"AuthType\"`",
          "7979:  ServerType *string `locationName:\"serverType\" type:\"string\" required:\"true\" enum:\"ServerType\"`",
          "7984:  ShouldOverwrite *bool `locationName:\"shouldOverwrite\" type:\"boolean\"`",
          "7990:  Token *string `locationName:\"token\" min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7994:  Username *string `locationName:\"username\" min:\"1\" type:\"string\"`",
          "7998: func (s ImportSourceCredentialsInput) String() string {",
          "8003: func (s ImportSourceCredentialsInput) GoString() string {",
          "8008: func (s *ImportSourceCredentialsInput) Validate() error {",
          "8009:  invalidParams := request.ErrInvalidParams{Context: \"ImportSourceCredentialsInput\"}",
          "8010:  if s.AuthType == nil {",
          "8011:   invalidParams.Add(request.NewErrParamRequired(\"AuthType\"))",
          "8013:  if s.ServerType == nil {",
          "8014:   invalidParams.Add(request.NewErrParamRequired(\"ServerType\"))",
          "8015:  }",
          "8016:  if s.Token == nil {",
          "8017:   invalidParams.Add(request.NewErrParamRequired(\"Token\"))",
          "8018:  }",
          "8019:  if s.Token != nil && len(*s.Token) < 1 {",
          "8020:   invalidParams.Add(request.NewErrParamMinLen(\"Token\", 1))",
          "8021:  }",
          "8022:  if s.Username != nil && len(*s.Username) < 1 {",
          "8023:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "7104:  return nil",
          "7105: }",
          "7110:  return s",
          "7111: }",
          "7116:  return s",
          "7117: }",
          "7148: }",
          "7152:  return awsutil.Prettify(s)",
          "7153: }",
          "7157:  return s.String()",
          "7158: }",
          "7163:  return s",
          "7164: }",
          "7170: }",
          "7176: }",
          "7182: }",
          "7188: }",
          "7194: }",
          "7200: }",
          "7206: }",
          "7217: }",
          "7221:  return awsutil.Prettify(s)",
          "7222: }",
          "7226:  return s.String()",
          "7227: }",
          "7233: }",
          "7238:  return s",
          "7239: }",
          "7247: }",
          "7251:  return awsutil.Prettify(s)",
          "7252: }",
          "7256:  return s.String()",
          "7257: }",
          "7263: }",
          "7268: }",
          "7276: }",
          "7280:  return nil",
          "7281: }",
          "7285: }",
          "7290: }",
          "7295: }",
          "7300:  _ struct{} `type:\"structure\"`",
          "7308: }",
          "7312:  return awsutil.Prettify(s)",
          "7313: }",
          "7317:  return s.String()",
          "7318: }",
          "7323:  return s",
          "7324: }",
          "7329:  return s",
          "7330: }",
          "7334:  _ struct{} `type:\"structure\"`",
          "7449: }",
          "7453:  return awsutil.Prettify(s)",
          "7454: }",
          "7458:  return s.String()",
          "7459: }",
          "7464:  return s",
          "7465: }",
          "7470:  return s",
          "7471: }",
          "7476:  return s",
          "7477: }",
          "7482:  return s",
          "7483: }",
          "7488:  return s",
          "7489: }",
          "7513: }",
          "7519: }",
          "7525: }",
          "7537: }",
          "7542:  return s",
          "7543: }",
          "7548:  return s",
          "7549: }",
          "7554:  return s",
          "7555: }",
          "7560:  return s",
          "7561: }",
          "7566:  return s",
          "7567: }",
          "7572:  return s",
          "7573: }",
          "7578:  return s",
          "7579: }",
          "7584:  return s",
          "7585: }",
          "7590:  return s",
          "7591: }",
          "7596:  return s",
          "7597: }",
          "7601:  _ struct{} `type:\"structure\"`",
          "7719: }",
          "7723:  return awsutil.Prettify(s)",
          "7724: }",
          "7728:  return s.String()",
          "7729: }",
          "7736:  }",
          "7738:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "7108: func (s *LogsConfig) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsConfig {",
          "7109:  s.CloudWatchLogs = v",
          "7114: func (s *LogsConfig) SetS3Logs(v *S3LogsConfig) *LogsConfig {",
          "7115:  s.S3Logs = v",
          "7120: type LogsLocation struct {",
          "7121:  _ struct{} `type:\"structure\"`",
          "7124:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "7128:  CloudWatchLogsArn *string `locationName:\"cloudWatchLogsArn\" type:\"string\"`",
          "7131:  DeepLink *string `locationName:\"deepLink\" type:\"string\"`",
          "7134:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "7137:  S3DeepLink *string `locationName:\"s3DeepLink\" type:\"string\"`",
          "7140:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "7144:  S3LogsArn *string `locationName:\"s3LogsArn\" type:\"string\"`",
          "7147:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "7151: func (s LogsLocation) String() string {",
          "7156: func (s LogsLocation) GoString() string {",
          "7161: func (s *LogsLocation) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsLocation {",
          "7162:  s.CloudWatchLogs = v",
          "7167: func (s *LogsLocation) SetCloudWatchLogsArn(v string) *LogsLocation {",
          "7168:  s.CloudWatchLogsArn = &v",
          "7169:  return s",
          "7173: func (s *LogsLocation) SetDeepLink(v string) *LogsLocation {",
          "7174:  s.DeepLink = &v",
          "7175:  return s",
          "7179: func (s *LogsLocation) SetGroupName(v string) *LogsLocation {",
          "7180:  s.GroupName = &v",
          "7181:  return s",
          "7185: func (s *LogsLocation) SetS3DeepLink(v string) *LogsLocation {",
          "7186:  s.S3DeepLink = &v",
          "7187:  return s",
          "7191: func (s *LogsLocation) SetS3Logs(v *S3LogsConfig) *LogsLocation {",
          "7192:  s.S3Logs = v",
          "7193:  return s",
          "7197: func (s *LogsLocation) SetS3LogsArn(v string) *LogsLocation {",
          "7198:  s.S3LogsArn = &v",
          "7199:  return s",
          "7203: func (s *LogsLocation) SetStreamName(v string) *LogsLocation {",
          "7204:  s.StreamName = &v",
          "7205:  return s",
          "7209: type NetworkInterface struct {",
          "7210:  _ struct{} `type:\"structure\"`",
          "7213:  NetworkInterfaceId *string `locationName:\"networkInterfaceId\" min:\"1\" type:\"string\"`",
          "7216:  SubnetId *string `locationName:\"subnetId\" min:\"1\" type:\"string\"`",
          "7220: func (s NetworkInterface) String() string {",
          "7225: func (s NetworkInterface) GoString() string {",
          "7230: func (s *NetworkInterface) SetNetworkInterfaceId(v string) *NetworkInterface {",
          "7231:  s.NetworkInterfaceId = &v",
          "7232:  return s",
          "7236: func (s *NetworkInterface) SetSubnetId(v string) *NetworkInterface {",
          "7237:  s.SubnetId = &v",
          "7242: type OAuthProviderException struct {",
          "7243:  _            struct{}                  `type:\"structure\"`",
          "7244:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7246:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7250: func (s OAuthProviderException) String() string {",
          "7255: func (s OAuthProviderException) GoString() string {",
          "7259: func newErrorOAuthProviderException(v protocol.ResponseMetadata) error {",
          "7260:  return &OAuthProviderException{",
          "7261:   RespMetadata: v,",
          "7262:  }",
          "7266: func (s *OAuthProviderException) Code() string {",
          "7267:  return \"OAuthProviderException\"",
          "7271: func (s *OAuthProviderException) Message() string {",
          "7272:  if s.Message_ != nil {",
          "7273:   return *s.Message_",
          "7274:  }",
          "7275:  return \"\"",
          "7279: func (s *OAuthProviderException) OrigErr() error {",
          "7283: func (s *OAuthProviderException) Error() string {",
          "7284:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7288: func (s *OAuthProviderException) StatusCode() int {",
          "7289:  return s.RespMetadata.StatusCode",
          "7293: func (s *OAuthProviderException) RequestID() string {",
          "7294:  return s.RespMetadata.RequestID",
          "7299: type PhaseContext struct {",
          "7304:  Message *string `locationName:\"message\" type:\"string\"`",
          "7307:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "7311: func (s PhaseContext) String() string {",
          "7316: func (s PhaseContext) GoString() string {",
          "7321: func (s *PhaseContext) SetMessage(v string) *PhaseContext {",
          "7322:  s.Message = &v",
          "7327: func (s *PhaseContext) SetStatusCode(v string) *PhaseContext {",
          "7328:  s.StatusCode = &v",
          "7333: type Project struct {",
          "7337:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7340:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "7343:  Badge *ProjectBadge `locationName:\"badge\" type:\"structure\"`",
          "7346:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "7349:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "7352:  Description *string `locationName:\"description\" type:\"string\"`",
          "7362:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "7365:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "7370:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "7374:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "7378:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "7381:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "7384:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "7387:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "7392:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "7395:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "7400:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "7403:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "7430:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "7436:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "7441:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "7444:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "7448:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "7452: func (s Project) String() string {",
          "7457: func (s Project) GoString() string {",
          "7462: func (s *Project) SetArn(v string) *Project {",
          "7463:  s.Arn = &v",
          "7468: func (s *Project) SetArtifacts(v *ProjectArtifacts) *Project {",
          "7469:  s.Artifacts = v",
          "7474: func (s *Project) SetBadge(v *ProjectBadge) *Project {",
          "7475:  s.Badge = v",
          "7480: func (s *Project) SetCache(v *ProjectCache) *Project {",
          "7481:  s.Cache = v",
          "7486: func (s *Project) SetCreated(v time.Time) *Project {",
          "7487:  s.Created = &v",
          "7492: func (s *Project) SetDescription(v string) *Project {",
          "7493:  s.Description = &v",
          "7494:  return s",
          "7495: }",
          "7498: func (s *Project) SetEncryptionKey(v string) *Project {",
          "7499:  s.EncryptionKey = &v",
          "7500:  return s",
          "7501: }",
          "7504: func (s *Project) SetEnvironment(v *ProjectEnvironment) *Project {",
          "7505:  s.Environment = v",
          "7506:  return s",
          "7507: }",
          "7510: func (s *Project) SetFileSystemLocations(v []*ProjectFileSystemLocation) *Project {",
          "7511:  s.FileSystemLocations = v",
          "7512:  return s",
          "7516: func (s *Project) SetLastModified(v time.Time) *Project {",
          "7517:  s.LastModified = &v",
          "7518:  return s",
          "7522: func (s *Project) SetLogsConfig(v *LogsConfig) *Project {",
          "7523:  s.LogsConfig = v",
          "7524:  return s",
          "7528: func (s *Project) SetName(v string) *Project {",
          "7529:  s.Name = &v",
          "7530:  return s",
          "7531: }",
          "7534: func (s *Project) SetQueuedTimeoutInMinutes(v int64) *Project {",
          "7535:  s.QueuedTimeoutInMinutes = &v",
          "7536:  return s",
          "7540: func (s *Project) SetSecondaryArtifacts(v []*ProjectArtifacts) *Project {",
          "7541:  s.SecondaryArtifacts = v",
          "7546: func (s *Project) SetSecondarySourceVersions(v []*ProjectSourceVersion) *Project {",
          "7547:  s.SecondarySourceVersions = v",
          "7552: func (s *Project) SetSecondarySources(v []*ProjectSource) *Project {",
          "7553:  s.SecondarySources = v",
          "7558: func (s *Project) SetServiceRole(v string) *Project {",
          "7559:  s.ServiceRole = &v",
          "7564: func (s *Project) SetSource(v *ProjectSource) *Project {",
          "7565:  s.Source = v",
          "7570: func (s *Project) SetSourceVersion(v string) *Project {",
          "7571:  s.SourceVersion = &v",
          "7576: func (s *Project) SetTags(v []*Tag) *Project {",
          "7577:  s.Tags = v",
          "7582: func (s *Project) SetTimeoutInMinutes(v int64) *Project {",
          "7583:  s.TimeoutInMinutes = &v",
          "7588: func (s *Project) SetVpcConfig(v *VpcConfig) *Project {",
          "7589:  s.VpcConfig = v",
          "7594: func (s *Project) SetWebhook(v *Webhook) *Project {",
          "7595:  s.Webhook = v",
          "7600: type ProjectArtifacts struct {",
          "7604:  ArtifactIdentifier *string `locationName:\"artifactIdentifier\" type:\"string\"`",
          "7610:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "7622:  Location *string `locationName:\"location\" type:\"string\"`",
          "7648:  Name *string `locationName:\"name\" type:\"string\"`",
          "7666:  NamespaceType *string `locationName:\"namespaceType\" type:\"string\" enum:\"ArtifactNamespace\"`",
          "7672:  OverrideArtifactName *bool `locationName:\"overrideArtifactName\" type:\"boolean\"`",
          "7687:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ArtifactPackaging\"`",
          "7705:  Path *string `locationName:\"path\" type:\"string\"`",
          "7718:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ArtifactsType\"`",
          "7722: func (s ProjectArtifacts) String() string {",
          "7727: func (s ProjectArtifacts) GoString() string {",
          "7732: func (s *ProjectArtifacts) Validate() error {",
          "7733:  invalidParams := request.ErrInvalidParams{Context: \"ProjectArtifacts\"}",
          "7734:  if s.Type == nil {",
          "7735:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "",
          "[Added Lines]",
          "8033: func (s *ImportSourceCredentialsInput) SetAuthType(v string) *ImportSourceCredentialsInput {",
          "8034:  s.AuthType = &v",
          "8039: func (s *ImportSourceCredentialsInput) SetServerType(v string) *ImportSourceCredentialsInput {",
          "8040:  s.ServerType = &v",
          "8045: func (s *ImportSourceCredentialsInput) SetShouldOverwrite(v bool) *ImportSourceCredentialsInput {",
          "8046:  s.ShouldOverwrite = &v",
          "8047:  return s",
          "8048: }",
          "8051: func (s *ImportSourceCredentialsInput) SetToken(v string) *ImportSourceCredentialsInput {",
          "8052:  s.Token = &v",
          "8053:  return s",
          "8054: }",
          "8057: func (s *ImportSourceCredentialsInput) SetUsername(v string) *ImportSourceCredentialsInput {",
          "8058:  s.Username = &v",
          "8059:  return s",
          "8060: }",
          "8062: type ImportSourceCredentialsOutput struct {",
          "8063:  _ struct{} `type:\"structure\"`",
          "8066:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8070: func (s ImportSourceCredentialsOutput) String() string {",
          "8075: func (s ImportSourceCredentialsOutput) GoString() string {",
          "8080: func (s *ImportSourceCredentialsOutput) SetArn(v string) *ImportSourceCredentialsOutput {",
          "8081:  s.Arn = &v",
          "8086: type InvalidInputException struct {",
          "8087:  _            struct{}                  `type:\"structure\"`",
          "8088:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8090:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8094: func (s InvalidInputException) String() string {",
          "8095:  return awsutil.Prettify(s)",
          "8099: func (s InvalidInputException) GoString() string {",
          "8100:  return s.String()",
          "8103: func newErrorInvalidInputException(v protocol.ResponseMetadata) error {",
          "8104:  return &InvalidInputException{",
          "8105:   RespMetadata: v,",
          "8106:  }",
          "8110: func (s *InvalidInputException) Code() string {",
          "8111:  return \"InvalidInputException\"",
          "8115: func (s *InvalidInputException) Message() string {",
          "8116:  if s.Message_ != nil {",
          "8117:   return *s.Message_",
          "8118:  }",
          "8119:  return \"\"",
          "8123: func (s *InvalidInputException) OrigErr() error {",
          "8124:  return nil",
          "8127: func (s *InvalidInputException) Error() string {",
          "8128:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8129: }",
          "8132: func (s *InvalidInputException) StatusCode() int {",
          "8133:  return s.RespMetadata.StatusCode",
          "8134: }",
          "8137: func (s *InvalidInputException) RequestID() string {",
          "8138:  return s.RespMetadata.RequestID",
          "8139: }",
          "8141: type InvalidateProjectCacheInput struct {",
          "8142:  _ struct{} `type:\"structure\"`",
          "8147:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8151: func (s InvalidateProjectCacheInput) String() string {",
          "8156: func (s InvalidateProjectCacheInput) GoString() string {",
          "8161: func (s *InvalidateProjectCacheInput) Validate() error {",
          "8162:  invalidParams := request.ErrInvalidParams{Context: \"InvalidateProjectCacheInput\"}",
          "8163:  if s.ProjectName == nil {",
          "8164:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "8165:  }",
          "8166:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8167:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8168:  }",
          "8170:  if invalidParams.Len() > 0 {",
          "8171:   return invalidParams",
          "8172:  }",
          "8173:  return nil",
          "8177: func (s *InvalidateProjectCacheInput) SetProjectName(v string) *InvalidateProjectCacheInput {",
          "8178:  s.ProjectName = &v",
          "8182: type InvalidateProjectCacheOutput struct {",
          "8183:  _ struct{} `type:\"structure\"`",
          "8187: func (s InvalidateProjectCacheOutput) String() string {",
          "8192: func (s InvalidateProjectCacheOutput) GoString() string {",
          "8196: type ListBuildBatchesForProjectInput struct {",
          "8197:  _ struct{} `type:\"structure\"`",
          "8200:  Filter *BuildBatchFilter `locationName:\"filter\" type:\"structure\"`",
          "8203:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8208:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8211:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\"`",
          "8219:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8223: func (s ListBuildBatchesForProjectInput) String() string {",
          "8224:  return awsutil.Prettify(s)",
          "8228: func (s ListBuildBatchesForProjectInput) GoString() string {",
          "8229:  return s.String()",
          "8233: func (s *ListBuildBatchesForProjectInput) Validate() error {",
          "8234:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildBatchesForProjectInput\"}",
          "8235:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8236:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8237:  }",
          "8238:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8239:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8240:  }",
          "8242:  if invalidParams.Len() > 0 {",
          "8243:   return invalidParams",
          "8244:  }",
          "8249: func (s *ListBuildBatchesForProjectInput) SetFilter(v *BuildBatchFilter) *ListBuildBatchesForProjectInput {",
          "8250:  s.Filter = v",
          "8251:  return s",
          "8255: func (s *ListBuildBatchesForProjectInput) SetMaxResults(v int64) *ListBuildBatchesForProjectInput {",
          "8256:  s.MaxResults = &v",
          "8257:  return s",
          "8261: func (s *ListBuildBatchesForProjectInput) SetNextToken(v string) *ListBuildBatchesForProjectInput {",
          "8262:  s.NextToken = &v",
          "8263:  return s",
          "8267: func (s *ListBuildBatchesForProjectInput) SetProjectName(v string) *ListBuildBatchesForProjectInput {",
          "8268:  s.ProjectName = &v",
          "8269:  return s",
          "8270: }",
          "8273: func (s *ListBuildBatchesForProjectInput) SetSortOrder(v string) *ListBuildBatchesForProjectInput {",
          "8274:  s.SortOrder = &v",
          "8275:  return s",
          "8276: }",
          "8278: type ListBuildBatchesForProjectOutput struct {",
          "8282:  Ids []*string `locationName:\"ids\" type:\"list\"`",
          "8287:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8291: func (s ListBuildBatchesForProjectOutput) String() string {",
          "8296: func (s ListBuildBatchesForProjectOutput) GoString() string {",
          "8301: func (s *ListBuildBatchesForProjectOutput) SetIds(v []*string) *ListBuildBatchesForProjectOutput {",
          "8302:  s.Ids = v",
          "8307: func (s *ListBuildBatchesForProjectOutput) SetNextToken(v string) *ListBuildBatchesForProjectOutput {",
          "8308:  s.NextToken = &v",
          "8312: type ListBuildBatchesInput struct {",
          "8316:  Filter *BuildBatchFilter `locationName:\"filter\" type:\"structure\"`",
          "8319:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8324:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8332:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8333: }",
          "8336: func (s ListBuildBatchesInput) String() string {",
          "8337:  return awsutil.Prettify(s)",
          "8338: }",
          "8341: func (s ListBuildBatchesInput) GoString() string {",
          "8342:  return s.String()",
          "8343: }",
          "8346: func (s *ListBuildBatchesInput) Validate() error {",
          "8347:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildBatchesInput\"}",
          "8348:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8349:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8350:  }",
          "8352:  if invalidParams.Len() > 0 {",
          "8353:   return invalidParams",
          "8354:  }",
          "8355:  return nil",
          "8356: }",
          "8359: func (s *ListBuildBatchesInput) SetFilter(v *BuildBatchFilter) *ListBuildBatchesInput {",
          "8360:  s.Filter = v",
          "8361:  return s",
          "8362: }",
          "8365: func (s *ListBuildBatchesInput) SetMaxResults(v int64) *ListBuildBatchesInput {",
          "8366:  s.MaxResults = &v",
          "8367:  return s",
          "8368: }",
          "8371: func (s *ListBuildBatchesInput) SetNextToken(v string) *ListBuildBatchesInput {",
          "8372:  s.NextToken = &v",
          "8373:  return s",
          "8374: }",
          "8377: func (s *ListBuildBatchesInput) SetSortOrder(v string) *ListBuildBatchesInput {",
          "8378:  s.SortOrder = &v",
          "8379:  return s",
          "8380: }",
          "8382: type ListBuildBatchesOutput struct {",
          "8383:  _ struct{} `type:\"structure\"`",
          "8386:  Ids []*string `locationName:\"ids\" type:\"list\"`",
          "8390:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8391: }",
          "8394: func (s ListBuildBatchesOutput) String() string {",
          "8395:  return awsutil.Prettify(s)",
          "8396: }",
          "8399: func (s ListBuildBatchesOutput) GoString() string {",
          "8400:  return s.String()",
          "8401: }",
          "8404: func (s *ListBuildBatchesOutput) SetIds(v []*string) *ListBuildBatchesOutput {",
          "8405:  s.Ids = v",
          "8406:  return s",
          "8407: }",
          "8410: func (s *ListBuildBatchesOutput) SetNextToken(v string) *ListBuildBatchesOutput {",
          "8411:  s.NextToken = &v",
          "8412:  return s",
          "8413: }",
          "8415: type ListBuildsForProjectInput struct {",
          "8416:  _ struct{} `type:\"structure\"`",
          "8424:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8429:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8436:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8437: }",
          "8440: func (s ListBuildsForProjectInput) String() string {",
          "8441:  return awsutil.Prettify(s)",
          "8442: }",
          "8445: func (s ListBuildsForProjectInput) GoString() string {",
          "8446:  return s.String()",
          "8447: }",
          "8450: func (s *ListBuildsForProjectInput) Validate() error {",
          "8451:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildsForProjectInput\"}",
          "8452:  if s.ProjectName == nil {",
          "8453:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "8454:  }",
          "8455:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8456:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8457:  }",
          "8459:  if invalidParams.Len() > 0 {",
          "8460:   return invalidParams",
          "8461:  }",
          "8462:  return nil",
          "8463: }",
          "8466: func (s *ListBuildsForProjectInput) SetNextToken(v string) *ListBuildsForProjectInput {",
          "8467:  s.NextToken = &v",
          "8468:  return s",
          "8469: }",
          "8472: func (s *ListBuildsForProjectInput) SetProjectName(v string) *ListBuildsForProjectInput {",
          "8473:  s.ProjectName = &v",
          "8474:  return s",
          "8475: }",
          "8478: func (s *ListBuildsForProjectInput) SetSortOrder(v string) *ListBuildsForProjectInput {",
          "8479:  s.SortOrder = &v",
          "8480:  return s",
          "8481: }",
          "8483: type ListBuildsForProjectOutput struct {",
          "8484:  _ struct{} `type:\"structure\"`",
          "8488:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "8494:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8495: }",
          "8498: func (s ListBuildsForProjectOutput) String() string {",
          "8499:  return awsutil.Prettify(s)",
          "8500: }",
          "8503: func (s ListBuildsForProjectOutput) GoString() string {",
          "8504:  return s.String()",
          "8505: }",
          "8508: func (s *ListBuildsForProjectOutput) SetIds(v []*string) *ListBuildsForProjectOutput {",
          "8509:  s.Ids = v",
          "8510:  return s",
          "8511: }",
          "8514: func (s *ListBuildsForProjectOutput) SetNextToken(v string) *ListBuildsForProjectOutput {",
          "8515:  s.NextToken = &v",
          "8516:  return s",
          "8517: }",
          "8519: type ListBuildsInput struct {",
          "8520:  _ struct{} `type:\"structure\"`",
          "8528:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8535:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8536: }",
          "8539: func (s ListBuildsInput) String() string {",
          "8540:  return awsutil.Prettify(s)",
          "8541: }",
          "8544: func (s ListBuildsInput) GoString() string {",
          "8545:  return s.String()",
          "8546: }",
          "8549: func (s *ListBuildsInput) SetNextToken(v string) *ListBuildsInput {",
          "8550:  s.NextToken = &v",
          "8551:  return s",
          "8552: }",
          "8555: func (s *ListBuildsInput) SetSortOrder(v string) *ListBuildsInput {",
          "8556:  s.SortOrder = &v",
          "8557:  return s",
          "8558: }",
          "8560: type ListBuildsOutput struct {",
          "8561:  _ struct{} `type:\"structure\"`",
          "8564:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "8570:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8571: }",
          "8574: func (s ListBuildsOutput) String() string {",
          "8575:  return awsutil.Prettify(s)",
          "8576: }",
          "8579: func (s ListBuildsOutput) GoString() string {",
          "8580:  return s.String()",
          "8581: }",
          "8584: func (s *ListBuildsOutput) SetIds(v []*string) *ListBuildsOutput {",
          "8585:  s.Ids = v",
          "8586:  return s",
          "8587: }",
          "8590: func (s *ListBuildsOutput) SetNextToken(v string) *ListBuildsOutput {",
          "8591:  s.NextToken = &v",
          "8592:  return s",
          "8593: }",
          "8595: type ListCuratedEnvironmentImagesInput struct {",
          "8596:  _ struct{} `type:\"structure\"`",
          "8597: }",
          "8600: func (s ListCuratedEnvironmentImagesInput) String() string {",
          "8601:  return awsutil.Prettify(s)",
          "8602: }",
          "8605: func (s ListCuratedEnvironmentImagesInput) GoString() string {",
          "8606:  return s.String()",
          "8607: }",
          "8609: type ListCuratedEnvironmentImagesOutput struct {",
          "8610:  _ struct{} `type:\"structure\"`",
          "8614:  Platforms []*EnvironmentPlatform `locationName:\"platforms\" type:\"list\"`",
          "8615: }",
          "8618: func (s ListCuratedEnvironmentImagesOutput) String() string {",
          "8619:  return awsutil.Prettify(s)",
          "8620: }",
          "8623: func (s ListCuratedEnvironmentImagesOutput) GoString() string {",
          "8624:  return s.String()",
          "8625: }",
          "8628: func (s *ListCuratedEnvironmentImagesOutput) SetPlatforms(v []*EnvironmentPlatform) *ListCuratedEnvironmentImagesOutput {",
          "8629:  s.Platforms = v",
          "8630:  return s",
          "8631: }",
          "8633: type ListProjectsInput struct {",
          "8634:  _ struct{} `type:\"structure\"`",
          "8642:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "8655:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ProjectSortByType\"`",
          "8664:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8665: }",
          "8668: func (s ListProjectsInput) String() string {",
          "8669:  return awsutil.Prettify(s)",
          "8670: }",
          "8673: func (s ListProjectsInput) GoString() string {",
          "8674:  return s.String()",
          "8675: }",
          "8678: func (s *ListProjectsInput) Validate() error {",
          "8679:  invalidParams := request.ErrInvalidParams{Context: \"ListProjectsInput\"}",
          "8680:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "8681:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "8682:  }",
          "8684:  if invalidParams.Len() > 0 {",
          "8685:   return invalidParams",
          "8686:  }",
          "8687:  return nil",
          "8688: }",
          "8691: func (s *ListProjectsInput) SetNextToken(v string) *ListProjectsInput {",
          "8692:  s.NextToken = &v",
          "8693:  return s",
          "8694: }",
          "8697: func (s *ListProjectsInput) SetSortBy(v string) *ListProjectsInput {",
          "8698:  s.SortBy = &v",
          "8699:  return s",
          "8700: }",
          "8703: func (s *ListProjectsInput) SetSortOrder(v string) *ListProjectsInput {",
          "8704:  s.SortOrder = &v",
          "8705:  return s",
          "8706: }",
          "8708: type ListProjectsOutput struct {",
          "8709:  _ struct{} `type:\"structure\"`",
          "8715:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8719:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "8720: }",
          "8723: func (s ListProjectsOutput) String() string {",
          "8724:  return awsutil.Prettify(s)",
          "8725: }",
          "8728: func (s ListProjectsOutput) GoString() string {",
          "8729:  return s.String()",
          "8730: }",
          "8733: func (s *ListProjectsOutput) SetNextToken(v string) *ListProjectsOutput {",
          "8734:  s.NextToken = &v",
          "8735:  return s",
          "8736: }",
          "8739: func (s *ListProjectsOutput) SetProjects(v []*string) *ListProjectsOutput {",
          "8740:  s.Projects = v",
          "8741:  return s",
          "8742: }",
          "8744: type ListReportGroupsInput struct {",
          "8745:  _ struct{} `type:\"structure\"`",
          "8750:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8759:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8768:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportGroupSortByType\"`",
          "8772:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8773: }",
          "8776: func (s ListReportGroupsInput) String() string {",
          "8777:  return awsutil.Prettify(s)",
          "8778: }",
          "8781: func (s ListReportGroupsInput) GoString() string {",
          "8782:  return s.String()",
          "8783: }",
          "8786: func (s *ListReportGroupsInput) Validate() error {",
          "8787:  invalidParams := request.ErrInvalidParams{Context: \"ListReportGroupsInput\"}",
          "8788:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8789:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8790:  }",
          "8792:  if invalidParams.Len() > 0 {",
          "8793:   return invalidParams",
          "8794:  }",
          "8795:  return nil",
          "8796: }",
          "8799: func (s *ListReportGroupsInput) SetMaxResults(v int64) *ListReportGroupsInput {",
          "8800:  s.MaxResults = &v",
          "8801:  return s",
          "8802: }",
          "8805: func (s *ListReportGroupsInput) SetNextToken(v string) *ListReportGroupsInput {",
          "8806:  s.NextToken = &v",
          "8807:  return s",
          "8808: }",
          "8811: func (s *ListReportGroupsInput) SetSortBy(v string) *ListReportGroupsInput {",
          "8812:  s.SortBy = &v",
          "8813:  return s",
          "8814: }",
          "8817: func (s *ListReportGroupsInput) SetSortOrder(v string) *ListReportGroupsInput {",
          "8818:  s.SortOrder = &v",
          "8819:  return s",
          "8820: }",
          "8822: type ListReportGroupsOutput struct {",
          "8823:  _ struct{} `type:\"structure\"`",
          "8832:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8835:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "8836: }",
          "8839: func (s ListReportGroupsOutput) String() string {",
          "8840:  return awsutil.Prettify(s)",
          "8841: }",
          "8844: func (s ListReportGroupsOutput) GoString() string {",
          "8845:  return s.String()",
          "8846: }",
          "8849: func (s *ListReportGroupsOutput) SetNextToken(v string) *ListReportGroupsOutput {",
          "8850:  s.NextToken = &v",
          "8851:  return s",
          "8852: }",
          "8855: func (s *ListReportGroupsOutput) SetReportGroups(v []*string) *ListReportGroupsOutput {",
          "8856:  s.ReportGroups = v",
          "8857:  return s",
          "8858: }",
          "8860: type ListReportsForReportGroupInput struct {",
          "8861:  _ struct{} `type:\"structure\"`",
          "8864:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "8869:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8878:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8883:  ReportGroupArn *string `locationName:\"reportGroupArn\" type:\"string\" required:\"true\"`",
          "8887:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8888: }",
          "8891: func (s ListReportsForReportGroupInput) String() string {",
          "8892:  return awsutil.Prettify(s)",
          "8893: }",
          "8896: func (s ListReportsForReportGroupInput) GoString() string {",
          "8897:  return s.String()",
          "8898: }",
          "8901: func (s *ListReportsForReportGroupInput) Validate() error {",
          "8902:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsForReportGroupInput\"}",
          "8903:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8904:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8905:  }",
          "8906:  if s.ReportGroupArn == nil {",
          "8907:   invalidParams.Add(request.NewErrParamRequired(\"ReportGroupArn\"))",
          "8908:  }",
          "8910:  if invalidParams.Len() > 0 {",
          "8911:   return invalidParams",
          "8912:  }",
          "8913:  return nil",
          "8914: }",
          "8917: func (s *ListReportsForReportGroupInput) SetFilter(v *ReportFilter) *ListReportsForReportGroupInput {",
          "8918:  s.Filter = v",
          "8919:  return s",
          "8920: }",
          "8923: func (s *ListReportsForReportGroupInput) SetMaxResults(v int64) *ListReportsForReportGroupInput {",
          "8924:  s.MaxResults = &v",
          "8925:  return s",
          "8926: }",
          "8929: func (s *ListReportsForReportGroupInput) SetNextToken(v string) *ListReportsForReportGroupInput {",
          "8930:  s.NextToken = &v",
          "8931:  return s",
          "8932: }",
          "8935: func (s *ListReportsForReportGroupInput) SetReportGroupArn(v string) *ListReportsForReportGroupInput {",
          "8936:  s.ReportGroupArn = &v",
          "8937:  return s",
          "8938: }",
          "8941: func (s *ListReportsForReportGroupInput) SetSortOrder(v string) *ListReportsForReportGroupInput {",
          "8942:  s.SortOrder = &v",
          "8943:  return s",
          "8944: }",
          "8946: type ListReportsForReportGroupOutput struct {",
          "8947:  _ struct{} `type:\"structure\"`",
          "8956:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8959:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "8960: }",
          "8963: func (s ListReportsForReportGroupOutput) String() string {",
          "8964:  return awsutil.Prettify(s)",
          "8965: }",
          "8968: func (s ListReportsForReportGroupOutput) GoString() string {",
          "8969:  return s.String()",
          "8970: }",
          "8973: func (s *ListReportsForReportGroupOutput) SetNextToken(v string) *ListReportsForReportGroupOutput {",
          "8974:  s.NextToken = &v",
          "8975:  return s",
          "8976: }",
          "8979: func (s *ListReportsForReportGroupOutput) SetReports(v []*string) *ListReportsForReportGroupOutput {",
          "8980:  s.Reports = v",
          "8981:  return s",
          "8982: }",
          "8984: type ListReportsInput struct {",
          "8985:  _ struct{} `type:\"structure\"`",
          "8988:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "8993:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9002:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9011:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9012: }",
          "9015: func (s ListReportsInput) String() string {",
          "9016:  return awsutil.Prettify(s)",
          "9017: }",
          "9020: func (s ListReportsInput) GoString() string {",
          "9021:  return s.String()",
          "9022: }",
          "9025: func (s *ListReportsInput) Validate() error {",
          "9026:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsInput\"}",
          "9027:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9028:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9029:  }",
          "9031:  if invalidParams.Len() > 0 {",
          "9032:   return invalidParams",
          "9033:  }",
          "9034:  return nil",
          "9035: }",
          "9038: func (s *ListReportsInput) SetFilter(v *ReportFilter) *ListReportsInput {",
          "9039:  s.Filter = v",
          "9040:  return s",
          "9041: }",
          "9044: func (s *ListReportsInput) SetMaxResults(v int64) *ListReportsInput {",
          "9045:  s.MaxResults = &v",
          "9046:  return s",
          "9047: }",
          "9050: func (s *ListReportsInput) SetNextToken(v string) *ListReportsInput {",
          "9051:  s.NextToken = &v",
          "9052:  return s",
          "9053: }",
          "9056: func (s *ListReportsInput) SetSortOrder(v string) *ListReportsInput {",
          "9057:  s.SortOrder = &v",
          "9058:  return s",
          "9059: }",
          "9061: type ListReportsOutput struct {",
          "9062:  _ struct{} `type:\"structure\"`",
          "9071:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9074:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "9075: }",
          "9078: func (s ListReportsOutput) String() string {",
          "9079:  return awsutil.Prettify(s)",
          "9080: }",
          "9083: func (s ListReportsOutput) GoString() string {",
          "9084:  return s.String()",
          "9085: }",
          "9088: func (s *ListReportsOutput) SetNextToken(v string) *ListReportsOutput {",
          "9089:  s.NextToken = &v",
          "9090:  return s",
          "9091: }",
          "9094: func (s *ListReportsOutput) SetReports(v []*string) *ListReportsOutput {",
          "9095:  s.Reports = v",
          "9096:  return s",
          "9097: }",
          "9099: type ListSharedProjectsInput struct {",
          "9100:  _ struct{} `type:\"structure\"`",
          "9105:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9114:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "9123:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "9130:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9131: }",
          "9134: func (s ListSharedProjectsInput) String() string {",
          "9135:  return awsutil.Prettify(s)",
          "9136: }",
          "9139: func (s ListSharedProjectsInput) GoString() string {",
          "9140:  return s.String()",
          "9141: }",
          "9144: func (s *ListSharedProjectsInput) Validate() error {",
          "9145:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedProjectsInput\"}",
          "9146:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9147:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9148:  }",
          "9149:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "9150:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "9151:  }",
          "9153:  if invalidParams.Len() > 0 {",
          "9154:   return invalidParams",
          "9155:  }",
          "9156:  return nil",
          "9157: }",
          "9160: func (s *ListSharedProjectsInput) SetMaxResults(v int64) *ListSharedProjectsInput {",
          "9161:  s.MaxResults = &v",
          "9162:  return s",
          "9163: }",
          "9166: func (s *ListSharedProjectsInput) SetNextToken(v string) *ListSharedProjectsInput {",
          "9167:  s.NextToken = &v",
          "9168:  return s",
          "9169: }",
          "9172: func (s *ListSharedProjectsInput) SetSortBy(v string) *ListSharedProjectsInput {",
          "9173:  s.SortBy = &v",
          "9174:  return s",
          "9175: }",
          "9178: func (s *ListSharedProjectsInput) SetSortOrder(v string) *ListSharedProjectsInput {",
          "9179:  s.SortOrder = &v",
          "9180:  return s",
          "9181: }",
          "9183: type ListSharedProjectsOutput struct {",
          "9184:  _ struct{} `type:\"structure\"`",
          "9193:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9197:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "9198: }",
          "9201: func (s ListSharedProjectsOutput) String() string {",
          "9202:  return awsutil.Prettify(s)",
          "9203: }",
          "9206: func (s ListSharedProjectsOutput) GoString() string {",
          "9207:  return s.String()",
          "9208: }",
          "9211: func (s *ListSharedProjectsOutput) SetNextToken(v string) *ListSharedProjectsOutput {",
          "9212:  s.NextToken = &v",
          "9213:  return s",
          "9214: }",
          "9217: func (s *ListSharedProjectsOutput) SetProjects(v []*string) *ListSharedProjectsOutput {",
          "9218:  s.Projects = v",
          "9219:  return s",
          "9220: }",
          "9222: type ListSharedReportGroupsInput struct {",
          "9223:  _ struct{} `type:\"structure\"`",
          "9228:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9237:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9246:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "9253:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9254: }",
          "9257: func (s ListSharedReportGroupsInput) String() string {",
          "9258:  return awsutil.Prettify(s)",
          "9259: }",
          "9262: func (s ListSharedReportGroupsInput) GoString() string {",
          "9263:  return s.String()",
          "9264: }",
          "9267: func (s *ListSharedReportGroupsInput) Validate() error {",
          "9268:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedReportGroupsInput\"}",
          "9269:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9270:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9271:  }",
          "9273:  if invalidParams.Len() > 0 {",
          "9274:   return invalidParams",
          "9275:  }",
          "9276:  return nil",
          "9277: }",
          "9280: func (s *ListSharedReportGroupsInput) SetMaxResults(v int64) *ListSharedReportGroupsInput {",
          "9281:  s.MaxResults = &v",
          "9282:  return s",
          "9283: }",
          "9286: func (s *ListSharedReportGroupsInput) SetNextToken(v string) *ListSharedReportGroupsInput {",
          "9287:  s.NextToken = &v",
          "9288:  return s",
          "9289: }",
          "9292: func (s *ListSharedReportGroupsInput) SetSortBy(v string) *ListSharedReportGroupsInput {",
          "9293:  s.SortBy = &v",
          "9294:  return s",
          "9295: }",
          "9298: func (s *ListSharedReportGroupsInput) SetSortOrder(v string) *ListSharedReportGroupsInput {",
          "9299:  s.SortOrder = &v",
          "9300:  return s",
          "9301: }",
          "9303: type ListSharedReportGroupsOutput struct {",
          "9304:  _ struct{} `type:\"structure\"`",
          "9313:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9317:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "9318: }",
          "9321: func (s ListSharedReportGroupsOutput) String() string {",
          "9322:  return awsutil.Prettify(s)",
          "9323: }",
          "9326: func (s ListSharedReportGroupsOutput) GoString() string {",
          "9327:  return s.String()",
          "9328: }",
          "9331: func (s *ListSharedReportGroupsOutput) SetNextToken(v string) *ListSharedReportGroupsOutput {",
          "9332:  s.NextToken = &v",
          "9333:  return s",
          "9334: }",
          "9337: func (s *ListSharedReportGroupsOutput) SetReportGroups(v []*string) *ListSharedReportGroupsOutput {",
          "9338:  s.ReportGroups = v",
          "9339:  return s",
          "9340: }",
          "9342: type ListSourceCredentialsInput struct {",
          "9343:  _ struct{} `type:\"structure\"`",
          "9344: }",
          "9347: func (s ListSourceCredentialsInput) String() string {",
          "9348:  return awsutil.Prettify(s)",
          "9349: }",
          "9352: func (s ListSourceCredentialsInput) GoString() string {",
          "9353:  return s.String()",
          "9354: }",
          "9356: type ListSourceCredentialsOutput struct {",
          "9357:  _ struct{} `type:\"structure\"`",
          "9362:  SourceCredentialsInfos []*SourceCredentialsInfo `locationName:\"sourceCredentialsInfos\" type:\"list\"`",
          "9363: }",
          "9366: func (s ListSourceCredentialsOutput) String() string {",
          "9367:  return awsutil.Prettify(s)",
          "9368: }",
          "9371: func (s ListSourceCredentialsOutput) GoString() string {",
          "9372:  return s.String()",
          "9373: }",
          "9376: func (s *ListSourceCredentialsOutput) SetSourceCredentialsInfos(v []*SourceCredentialsInfo) *ListSourceCredentialsOutput {",
          "9377:  s.SourceCredentialsInfos = v",
          "9378:  return s",
          "9379: }",
          "9383: type LogsConfig struct {",
          "9384:  _ struct{} `type:\"structure\"`",
          "9388:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "9392:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "9393: }",
          "9396: func (s LogsConfig) String() string {",
          "9397:  return awsutil.Prettify(s)",
          "9398: }",
          "9401: func (s LogsConfig) GoString() string {",
          "9402:  return s.String()",
          "9403: }",
          "9406: func (s *LogsConfig) Validate() error {",
          "9407:  invalidParams := request.ErrInvalidParams{Context: \"LogsConfig\"}",
          "9408:  if s.CloudWatchLogs != nil {",
          "9409:   if err := s.CloudWatchLogs.Validate(); err != nil {",
          "9410:    invalidParams.AddNested(\"CloudWatchLogs\", err.(request.ErrInvalidParams))",
          "9411:   }",
          "9412:  }",
          "9413:  if s.S3Logs != nil {",
          "9414:   if err := s.S3Logs.Validate(); err != nil {",
          "9415:    invalidParams.AddNested(\"S3Logs\", err.(request.ErrInvalidParams))",
          "9416:   }",
          "9417:  }",
          "9419:  if invalidParams.Len() > 0 {",
          "9420:   return invalidParams",
          "9421:  }",
          "9422:  return nil",
          "9423: }",
          "9426: func (s *LogsConfig) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsConfig {",
          "9427:  s.CloudWatchLogs = v",
          "9428:  return s",
          "9429: }",
          "9432: func (s *LogsConfig) SetS3Logs(v *S3LogsConfig) *LogsConfig {",
          "9433:  s.S3Logs = v",
          "9434:  return s",
          "9435: }",
          "9438: type LogsLocation struct {",
          "9439:  _ struct{} `type:\"structure\"`",
          "9442:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "9446:  CloudWatchLogsArn *string `locationName:\"cloudWatchLogsArn\" type:\"string\"`",
          "9449:  DeepLink *string `locationName:\"deepLink\" type:\"string\"`",
          "9452:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "9455:  S3DeepLink *string `locationName:\"s3DeepLink\" type:\"string\"`",
          "9458:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "9462:  S3LogsArn *string `locationName:\"s3LogsArn\" type:\"string\"`",
          "9465:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "9466: }",
          "9469: func (s LogsLocation) String() string {",
          "9470:  return awsutil.Prettify(s)",
          "9471: }",
          "9474: func (s LogsLocation) GoString() string {",
          "9475:  return s.String()",
          "9476: }",
          "9479: func (s *LogsLocation) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsLocation {",
          "9480:  s.CloudWatchLogs = v",
          "9481:  return s",
          "9482: }",
          "9485: func (s *LogsLocation) SetCloudWatchLogsArn(v string) *LogsLocation {",
          "9486:  s.CloudWatchLogsArn = &v",
          "9487:  return s",
          "9488: }",
          "9491: func (s *LogsLocation) SetDeepLink(v string) *LogsLocation {",
          "9492:  s.DeepLink = &v",
          "9493:  return s",
          "9494: }",
          "9497: func (s *LogsLocation) SetGroupName(v string) *LogsLocation {",
          "9498:  s.GroupName = &v",
          "9499:  return s",
          "9500: }",
          "9503: func (s *LogsLocation) SetS3DeepLink(v string) *LogsLocation {",
          "9504:  s.S3DeepLink = &v",
          "9505:  return s",
          "9506: }",
          "9509: func (s *LogsLocation) SetS3Logs(v *S3LogsConfig) *LogsLocation {",
          "9510:  s.S3Logs = v",
          "9511:  return s",
          "9512: }",
          "9515: func (s *LogsLocation) SetS3LogsArn(v string) *LogsLocation {",
          "9516:  s.S3LogsArn = &v",
          "9517:  return s",
          "9518: }",
          "9521: func (s *LogsLocation) SetStreamName(v string) *LogsLocation {",
          "9522:  s.StreamName = &v",
          "9523:  return s",
          "9524: }",
          "9527: type NetworkInterface struct {",
          "9528:  _ struct{} `type:\"structure\"`",
          "9531:  NetworkInterfaceId *string `locationName:\"networkInterfaceId\" min:\"1\" type:\"string\"`",
          "9534:  SubnetId *string `locationName:\"subnetId\" min:\"1\" type:\"string\"`",
          "9535: }",
          "9538: func (s NetworkInterface) String() string {",
          "9539:  return awsutil.Prettify(s)",
          "9540: }",
          "9543: func (s NetworkInterface) GoString() string {",
          "9544:  return s.String()",
          "9545: }",
          "9548: func (s *NetworkInterface) SetNetworkInterfaceId(v string) *NetworkInterface {",
          "9549:  s.NetworkInterfaceId = &v",
          "9550:  return s",
          "9551: }",
          "9554: func (s *NetworkInterface) SetSubnetId(v string) *NetworkInterface {",
          "9555:  s.SubnetId = &v",
          "9556:  return s",
          "9557: }",
          "9560: type OAuthProviderException struct {",
          "9561:  _            struct{}                  `type:\"structure\"`",
          "9562:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9564:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "9565: }",
          "9568: func (s OAuthProviderException) String() string {",
          "9569:  return awsutil.Prettify(s)",
          "9570: }",
          "9573: func (s OAuthProviderException) GoString() string {",
          "9574:  return s.String()",
          "9575: }",
          "9577: func newErrorOAuthProviderException(v protocol.ResponseMetadata) error {",
          "9578:  return &OAuthProviderException{",
          "9579:   RespMetadata: v,",
          "9580:  }",
          "9581: }",
          "9584: func (s *OAuthProviderException) Code() string {",
          "9585:  return \"OAuthProviderException\"",
          "9586: }",
          "9589: func (s *OAuthProviderException) Message() string {",
          "9590:  if s.Message_ != nil {",
          "9591:   return *s.Message_",
          "9592:  }",
          "9593:  return \"\"",
          "9594: }",
          "9597: func (s *OAuthProviderException) OrigErr() error {",
          "9598:  return nil",
          "9599: }",
          "9601: func (s *OAuthProviderException) Error() string {",
          "9602:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9603: }",
          "9606: func (s *OAuthProviderException) StatusCode() int {",
          "9607:  return s.RespMetadata.StatusCode",
          "9608: }",
          "9611: func (s *OAuthProviderException) RequestID() string {",
          "9612:  return s.RespMetadata.RequestID",
          "9613: }",
          "9617: type PhaseContext struct {",
          "9618:  _ struct{} `type:\"structure\"`",
          "9622:  Message *string `locationName:\"message\" type:\"string\"`",
          "9625:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "9626: }",
          "9629: func (s PhaseContext) String() string {",
          "9630:  return awsutil.Prettify(s)",
          "9631: }",
          "9634: func (s PhaseContext) GoString() string {",
          "9635:  return s.String()",
          "9636: }",
          "9639: func (s *PhaseContext) SetMessage(v string) *PhaseContext {",
          "9640:  s.Message = &v",
          "9641:  return s",
          "9642: }",
          "9645: func (s *PhaseContext) SetStatusCode(v string) *PhaseContext {",
          "9646:  s.StatusCode = &v",
          "9647:  return s",
          "9648: }",
          "9651: type Project struct {",
          "9652:  _ struct{} `type:\"structure\"`",
          "9655:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "9658:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "9661:  Badge *ProjectBadge `locationName:\"badge\" type:\"structure\"`",
          "9665:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "9668:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "9671:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "9674:  Description *string `locationName:\"description\" type:\"string\"`",
          "9684:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "9687:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "9692:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "9696:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "9700:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "9703:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "9706:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "9709:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "9714:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "9717:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "9722:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "9725:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "9752:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "9758:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "9763:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "9766:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "9770:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "9771: }",
          "9774: func (s Project) String() string {",
          "9775:  return awsutil.Prettify(s)",
          "9776: }",
          "9779: func (s Project) GoString() string {",
          "9780:  return s.String()",
          "9781: }",
          "9784: func (s *Project) SetArn(v string) *Project {",
          "9785:  s.Arn = &v",
          "9786:  return s",
          "9787: }",
          "9790: func (s *Project) SetArtifacts(v *ProjectArtifacts) *Project {",
          "9791:  s.Artifacts = v",
          "9792:  return s",
          "9793: }",
          "9796: func (s *Project) SetBadge(v *ProjectBadge) *Project {",
          "9797:  s.Badge = v",
          "9798:  return s",
          "9799: }",
          "9802: func (s *Project) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *Project {",
          "9803:  s.BuildBatchConfig = v",
          "9804:  return s",
          "9805: }",
          "9808: func (s *Project) SetCache(v *ProjectCache) *Project {",
          "9809:  s.Cache = v",
          "9810:  return s",
          "9811: }",
          "9814: func (s *Project) SetCreated(v time.Time) *Project {",
          "9815:  s.Created = &v",
          "9816:  return s",
          "9817: }",
          "9820: func (s *Project) SetDescription(v string) *Project {",
          "9821:  s.Description = &v",
          "9822:  return s",
          "9823: }",
          "9826: func (s *Project) SetEncryptionKey(v string) *Project {",
          "9827:  s.EncryptionKey = &v",
          "9828:  return s",
          "9829: }",
          "9832: func (s *Project) SetEnvironment(v *ProjectEnvironment) *Project {",
          "9833:  s.Environment = v",
          "9834:  return s",
          "9835: }",
          "9838: func (s *Project) SetFileSystemLocations(v []*ProjectFileSystemLocation) *Project {",
          "9839:  s.FileSystemLocations = v",
          "9840:  return s",
          "9841: }",
          "9844: func (s *Project) SetLastModified(v time.Time) *Project {",
          "9845:  s.LastModified = &v",
          "9846:  return s",
          "9847: }",
          "9850: func (s *Project) SetLogsConfig(v *LogsConfig) *Project {",
          "9851:  s.LogsConfig = v",
          "9852:  return s",
          "9853: }",
          "9856: func (s *Project) SetName(v string) *Project {",
          "9857:  s.Name = &v",
          "9858:  return s",
          "9859: }",
          "9862: func (s *Project) SetQueuedTimeoutInMinutes(v int64) *Project {",
          "9863:  s.QueuedTimeoutInMinutes = &v",
          "9864:  return s",
          "9865: }",
          "9868: func (s *Project) SetSecondaryArtifacts(v []*ProjectArtifacts) *Project {",
          "9869:  s.SecondaryArtifacts = v",
          "9870:  return s",
          "9871: }",
          "9874: func (s *Project) SetSecondarySourceVersions(v []*ProjectSourceVersion) *Project {",
          "9875:  s.SecondarySourceVersions = v",
          "9876:  return s",
          "9877: }",
          "9880: func (s *Project) SetSecondarySources(v []*ProjectSource) *Project {",
          "9881:  s.SecondarySources = v",
          "9882:  return s",
          "9883: }",
          "9886: func (s *Project) SetServiceRole(v string) *Project {",
          "9887:  s.ServiceRole = &v",
          "9888:  return s",
          "9889: }",
          "9892: func (s *Project) SetSource(v *ProjectSource) *Project {",
          "9893:  s.Source = v",
          "9894:  return s",
          "9895: }",
          "9898: func (s *Project) SetSourceVersion(v string) *Project {",
          "9899:  s.SourceVersion = &v",
          "9900:  return s",
          "9901: }",
          "9904: func (s *Project) SetTags(v []*Tag) *Project {",
          "9905:  s.Tags = v",
          "9906:  return s",
          "9907: }",
          "9910: func (s *Project) SetTimeoutInMinutes(v int64) *Project {",
          "9911:  s.TimeoutInMinutes = &v",
          "9912:  return s",
          "9913: }",
          "9916: func (s *Project) SetVpcConfig(v *VpcConfig) *Project {",
          "9917:  s.VpcConfig = v",
          "9918:  return s",
          "9919: }",
          "9922: func (s *Project) SetWebhook(v *Webhook) *Project {",
          "9923:  s.Webhook = v",
          "9924:  return s",
          "9925: }",
          "9928: type ProjectArtifacts struct {",
          "9929:  _ struct{} `type:\"structure\"`",
          "9932:  ArtifactIdentifier *string `locationName:\"artifactIdentifier\" type:\"string\"`",
          "9938:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9950:  Location *string `locationName:\"location\" type:\"string\"`",
          "9976:  Name *string `locationName:\"name\" type:\"string\"`",
          "9994:  NamespaceType *string `locationName:\"namespaceType\" type:\"string\" enum:\"ArtifactNamespace\"`",
          "10000:  OverrideArtifactName *bool `locationName:\"overrideArtifactName\" type:\"boolean\"`",
          "10015:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ArtifactPackaging\"`",
          "10033:  Path *string `locationName:\"path\" type:\"string\"`",
          "10046:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ArtifactsType\"`",
          "10047: }",
          "10050: func (s ProjectArtifacts) String() string {",
          "10051:  return awsutil.Prettify(s)",
          "10052: }",
          "10055: func (s ProjectArtifacts) GoString() string {",
          "10056:  return s.String()",
          "10057: }",
          "10060: func (s *ProjectArtifacts) Validate() error {",
          "10061:  invalidParams := request.ErrInvalidParams{Context: \"ProjectArtifacts\"}",
          "10062:  if s.Type == nil {",
          "10063:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10064:  }",
          "10066:  if invalidParams.Len() > 0 {",
          "10067:   return invalidParams",
          "10068:  }",
          "10069:  return nil",
          "10070: }",
          "10073: func (s *ProjectArtifacts) SetArtifactIdentifier(v string) *ProjectArtifacts {",
          "10074:  s.ArtifactIdentifier = &v",
          "10075:  return s",
          "10076: }",
          "10079: func (s *ProjectArtifacts) SetEncryptionDisabled(v bool) *ProjectArtifacts {",
          "10080:  s.EncryptionDisabled = &v",
          "10081:  return s",
          "10082: }",
          "10085: func (s *ProjectArtifacts) SetLocation(v string) *ProjectArtifacts {",
          "10086:  s.Location = &v",
          "10087:  return s",
          "10088: }",
          "10091: func (s *ProjectArtifacts) SetName(v string) *ProjectArtifacts {",
          "10092:  s.Name = &v",
          "10093:  return s",
          "10094: }",
          "10097: func (s *ProjectArtifacts) SetNamespaceType(v string) *ProjectArtifacts {",
          "10098:  s.NamespaceType = &v",
          "10099:  return s",
          "10100: }",
          "10103: func (s *ProjectArtifacts) SetOverrideArtifactName(v bool) *ProjectArtifacts {",
          "10104:  s.OverrideArtifactName = &v",
          "10105:  return s",
          "10106: }",
          "10109: func (s *ProjectArtifacts) SetPackaging(v string) *ProjectArtifacts {",
          "10110:  s.Packaging = &v",
          "10111:  return s",
          "10112: }",
          "10115: func (s *ProjectArtifacts) SetPath(v string) *ProjectArtifacts {",
          "10116:  s.Path = &v",
          "10117:  return s",
          "10118: }",
          "10121: func (s *ProjectArtifacts) SetType(v string) *ProjectArtifacts {",
          "10122:  s.Type = &v",
          "10123:  return s",
          "10124: }",
          "10127: type ProjectBadge struct {",
          "10128:  _ struct{} `type:\"structure\"`",
          "10132:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "10139:  BadgeRequestUrl *string `locationName:\"badgeRequestUrl\" type:\"string\"`",
          "10140: }",
          "10143: func (s ProjectBadge) String() string {",
          "10144:  return awsutil.Prettify(s)",
          "10145: }",
          "10148: func (s ProjectBadge) GoString() string {",
          "10149:  return s.String()",
          "10150: }",
          "10153: func (s *ProjectBadge) SetBadgeEnabled(v bool) *ProjectBadge {",
          "10154:  s.BadgeEnabled = &v",
          "10155:  return s",
          "10156: }",
          "10159: func (s *ProjectBadge) SetBadgeRequestUrl(v string) *ProjectBadge {",
          "10160:  s.BadgeRequestUrl = &v",
          "10161:  return s",
          "10162: }",
          "10165: type ProjectBuildBatchConfig struct {",
          "10166:  _ struct{} `type:\"structure\"`",
          "10170:  CombineArtifacts *bool `locationName:\"combineArtifacts\" type:\"boolean\"`",
          "10174:  Restrictions *BatchRestrictions `locationName:\"restrictions\" type:\"structure\"`",
          "10177:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "10181:  TimeoutInMins *int64 `locationName:\"timeoutInMins\" type:\"integer\"`",
          "10182: }",
          "10185: func (s ProjectBuildBatchConfig) String() string {",
          "10186:  return awsutil.Prettify(s)",
          "10187: }",
          "10190: func (s ProjectBuildBatchConfig) GoString() string {",
          "10191:  return s.String()",
          "10192: }",
          "10195: func (s *ProjectBuildBatchConfig) Validate() error {",
          "10196:  invalidParams := request.ErrInvalidParams{Context: \"ProjectBuildBatchConfig\"}",
          "10197:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "10198:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "10199:  }",
          "10201:  if invalidParams.Len() > 0 {",
          "10202:   return invalidParams",
          "10203:  }",
          "10204:  return nil",
          "10205: }",
          "10208: func (s *ProjectBuildBatchConfig) SetCombineArtifacts(v bool) *ProjectBuildBatchConfig {",
          "10209:  s.CombineArtifacts = &v",
          "10210:  return s",
          "10211: }",
          "10214: func (s *ProjectBuildBatchConfig) SetRestrictions(v *BatchRestrictions) *ProjectBuildBatchConfig {",
          "10215:  s.Restrictions = v",
          "10216:  return s",
          "10217: }",
          "10220: func (s *ProjectBuildBatchConfig) SetServiceRole(v string) *ProjectBuildBatchConfig {",
          "10221:  s.ServiceRole = &v",
          "10222:  return s",
          "10223: }",
          "10226: func (s *ProjectBuildBatchConfig) SetTimeoutInMins(v int64) *ProjectBuildBatchConfig {",
          "10227:  s.TimeoutInMins = &v",
          "10228:  return s",
          "10229: }",
          "10232: type ProjectCache struct {",
          "10233:  _ struct{} `type:\"structure\"`",
          "10240:  Location *string `locationName:\"location\" type:\"string\"`",
          "10268:  Modes []*string `locationName:\"modes\" type:\"list\"`",
          "10280:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"CacheType\"`",
          "10281: }",
          "10284: func (s ProjectCache) String() string {",
          "10285:  return awsutil.Prettify(s)",
          "10286: }",
          "10289: func (s ProjectCache) GoString() string {",
          "10290:  return s.String()",
          "10291: }",
          "10294: func (s *ProjectCache) Validate() error {",
          "10295:  invalidParams := request.ErrInvalidParams{Context: \"ProjectCache\"}",
          "10296:  if s.Type == nil {",
          "10297:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10298:  }",
          "10300:  if invalidParams.Len() > 0 {",
          "10301:   return invalidParams",
          "10302:  }",
          "10303:  return nil",
          "10304: }",
          "10307: func (s *ProjectCache) SetLocation(v string) *ProjectCache {",
          "10308:  s.Location = &v",
          "10309:  return s",
          "10310: }",
          "10313: func (s *ProjectCache) SetModes(v []*string) *ProjectCache {",
          "10314:  s.Modes = v",
          "10315:  return s",
          "10316: }",
          "10319: func (s *ProjectCache) SetType(v string) *ProjectCache {",
          "10320:  s.Type = &v",
          "10321:  return s",
          "10322: }",
          "10325: type ProjectEnvironment struct {",
          "10326:  _ struct{} `type:\"structure\"`",
          "10329:  Certificate *string `locationName:\"certificate\" type:\"string\"`",
          "10360:  ComputeType *string `locationName:\"computeType\" type:\"string\" required:\"true\" enum:\"ComputeType\"`",
          "10364:  EnvironmentVariables []*EnvironmentVariable `locationName:\"environmentVariables\" type:\"list\"`",
          "10377:  Image *string `locationName:\"image\" min:\"1\" type:\"string\" required:\"true\"`",
          "10392:  ImagePullCredentialsType *string `locationName:\"imagePullCredentialsType\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "10417:  PrivilegedMode *bool `locationName:\"privilegedMode\" type:\"boolean\"`",
          "10420:  RegistryCredential *RegistryCredential `locationName:\"registryCredential\" type:\"structure\"`",
          "10441:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"EnvironmentType\"`",
          "10442: }",
          "10445: func (s ProjectEnvironment) String() string {",
          "10446:  return awsutil.Prettify(s)",
          "10447: }",
          "10450: func (s ProjectEnvironment) GoString() string {",
          "10451:  return s.String()",
          "10452: }",
          "10455: func (s *ProjectEnvironment) Validate() error {",
          "10456:  invalidParams := request.ErrInvalidParams{Context: \"ProjectEnvironment\"}",
          "10457:  if s.ComputeType == nil {",
          "10458:   invalidParams.Add(request.NewErrParamRequired(\"ComputeType\"))",
          "10459:  }",
          "10460:  if s.Image == nil {",
          "10461:   invalidParams.Add(request.NewErrParamRequired(\"Image\"))",
          "10462:  }",
          "10463:  if s.Image != nil && len(*s.Image) < 1 {",
          "10464:   invalidParams.Add(request.NewErrParamMinLen(\"Image\", 1))",
          "10465:  }",
          "10466:  if s.Type == nil {",
          "10467:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10468:  }",
          "10469:  if s.EnvironmentVariables != nil {",
          "10470:   for i, v := range s.EnvironmentVariables {",
          "10471:    if v == nil {",
          "10472:     continue",
          "10473:    }",
          "10474:    if err := v.Validate(); err != nil {",
          "10475:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariables\", i), err.(request.ErrInvalidParams))",
          "10476:    }",
          "10477:   }",
          "10478:  }",
          "10479:  if s.RegistryCredential != nil {",
          "10480:   if err := s.RegistryCredential.Validate(); err != nil {",
          "10481:    invalidParams.AddNested(\"RegistryCredential\", err.(request.ErrInvalidParams))",
          "10482:   }",
          "10483:  }",
          "10485:  if invalidParams.Len() > 0 {",
          "10486:   return invalidParams",
          "10487:  }",
          "10488:  return nil",
          "10489: }",
          "10492: func (s *ProjectEnvironment) SetCertificate(v string) *ProjectEnvironment {",
          "10493:  s.Certificate = &v",
          "10494:  return s",
          "10495: }",
          "10498: func (s *ProjectEnvironment) SetComputeType(v string) *ProjectEnvironment {",
          "10499:  s.ComputeType = &v",
          "10500:  return s",
          "10501: }",
          "10504: func (s *ProjectEnvironment) SetEnvironmentVariables(v []*EnvironmentVariable) *ProjectEnvironment {",
          "10505:  s.EnvironmentVariables = v",
          "10506:  return s",
          "10507: }",
          "10510: func (s *ProjectEnvironment) SetImage(v string) *ProjectEnvironment {",
          "10511:  s.Image = &v",
          "10512:  return s",
          "10513: }",
          "10516: func (s *ProjectEnvironment) SetImagePullCredentialsType(v string) *ProjectEnvironment {",
          "10517:  s.ImagePullCredentialsType = &v",
          "10518:  return s",
          "10519: }",
          "10522: func (s *ProjectEnvironment) SetPrivilegedMode(v bool) *ProjectEnvironment {",
          "10523:  s.PrivilegedMode = &v",
          "10524:  return s",
          "10525: }",
          "10528: func (s *ProjectEnvironment) SetRegistryCredential(v *RegistryCredential) *ProjectEnvironment {",
          "10529:  s.RegistryCredential = v",
          "10530:  return s",
          "10531: }",
          "10534: func (s *ProjectEnvironment) SetType(v string) *ProjectEnvironment {",
          "10535:  s.Type = &v",
          "10536:  return s",
          "10537: }",
          "10541: type ProjectFileSystemLocation struct {",
          "10542:  _ struct{} `type:\"structure\"`",
          "10550:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "10562:  Location *string `locationName:\"location\" type:\"string\"`",
          "10567:  MountOptions *string `locationName:\"mountOptions\" type:\"string\"`",
          "10570:  MountPoint *string `locationName:\"mountPoint\" type:\"string\"`",
          "10573:  Type *string `locationName:\"type\" type:\"string\" enum:\"FileSystemType\"`",
          "10577: func (s ProjectFileSystemLocation) String() string {",
          "10582: func (s ProjectFileSystemLocation) GoString() string {",
          "10587: func (s *ProjectFileSystemLocation) SetIdentifier(v string) *ProjectFileSystemLocation {",
          "10588:  s.Identifier = &v",
          "10593: func (s *ProjectFileSystemLocation) SetLocation(v string) *ProjectFileSystemLocation {",
          "10594:  s.Location = &v",
          "10599: func (s *ProjectFileSystemLocation) SetMountOptions(v string) *ProjectFileSystemLocation {",
          "10600:  s.MountOptions = &v",
          "10605: func (s *ProjectFileSystemLocation) SetMountPoint(v string) *ProjectFileSystemLocation {",
          "10606:  s.MountPoint = &v",
          "10611: func (s *ProjectFileSystemLocation) SetType(v string) *ProjectFileSystemLocation {",
          "10612:  s.Type = &v",
          "10617: type ProjectSource struct {",
          "10618:  _ struct{} `type:\"structure\"`",
          "10625:  Auth *SourceAuth `locationName:\"auth\" type:\"structure\"`",
          "10630:  BuildStatusConfig *BuildStatusConfig `locationName:\"buildStatusConfig\" type:\"structure\"`",
          "10642:  Buildspec *string `locationName:\"buildspec\" type:\"string\"`",
          "10645:  GitCloneDepth *int64 `locationName:\"gitCloneDepth\" type:\"integer\"`",
          "10648:  GitSubmodulesConfig *GitSubmodulesConfig `locationName:\"gitSubmodulesConfig\" type:\"structure\"`",
          "10652:  InsecureSsl *bool `locationName:\"insecureSsl\" type:\"boolean\"`",
          "10694:  Location *string `locationName:\"location\" type:\"string\"`",
          "10703:  ReportBuildStatus *bool `locationName:\"reportBuildStatus\" type:\"boolean\"`",
          "10706:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\"`",
          "10729:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceType\"`",
          "10733: func (s ProjectSource) String() string {",
          "10734:  return awsutil.Prettify(s)",
          "10738: func (s ProjectSource) GoString() string {",
          "10739:  return s.String()",
          "10743: func (s *ProjectSource) Validate() error {",
          "10744:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSource\"}",
          "10745:  if s.Type == nil {",
          "10746:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10747:  }",
          "10748:  if s.Auth != nil {",
          "10749:   if err := s.Auth.Validate(); err != nil {",
          "10750:    invalidParams.AddNested(\"Auth\", err.(request.ErrInvalidParams))",
          "10751:   }",
          "10752:  }",
          "10753:  if s.GitSubmodulesConfig != nil {",
          "10754:   if err := s.GitSubmodulesConfig.Validate(); err != nil {",
          "10755:    invalidParams.AddNested(\"GitSubmodulesConfig\", err.(request.ErrInvalidParams))",
          "10756:   }",
          "10757:  }",
          "10759:  if invalidParams.Len() > 0 {",
          "10760:   return invalidParams",
          "10761:  }",
          "10762:  return nil",
          "10766: func (s *ProjectSource) SetAuth(v *SourceAuth) *ProjectSource {",
          "10767:  s.Auth = v",
          "10772: func (s *ProjectSource) SetBuildStatusConfig(v *BuildStatusConfig) *ProjectSource {",
          "10773:  s.BuildStatusConfig = v",
          "10778: func (s *ProjectSource) SetBuildspec(v string) *ProjectSource {",
          "10779:  s.Buildspec = &v",
          "10784: func (s *ProjectSource) SetGitCloneDepth(v int64) *ProjectSource {",
          "10785:  s.GitCloneDepth = &v",
          "10790: func (s *ProjectSource) SetGitSubmodulesConfig(v *GitSubmodulesConfig) *ProjectSource {",
          "10791:  s.GitSubmodulesConfig = v",
          "10796: func (s *ProjectSource) SetInsecureSsl(v bool) *ProjectSource {",
          "10797:  s.InsecureSsl = &v",
          "10802: func (s *ProjectSource) SetLocation(v string) *ProjectSource {",
          "10803:  s.Location = &v",
          "10808: func (s *ProjectSource) SetReportBuildStatus(v bool) *ProjectSource {",
          "10809:  s.ReportBuildStatus = &v",
          "10814: func (s *ProjectSource) SetSourceIdentifier(v string) *ProjectSource {",
          "10815:  s.SourceIdentifier = &v",
          "10820: func (s *ProjectSource) SetType(v string) *ProjectSource {",
          "10821:  s.Type = &v",
          "10826: type ProjectSourceVersion struct {",
          "10832:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\" required:\"true\"`",
          "10858:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\" required:\"true\"`",
          "10862: func (s ProjectSourceVersion) String() string {",
          "10867: func (s ProjectSourceVersion) GoString() string {",
          "10872: func (s *ProjectSourceVersion) Validate() error {",
          "10873:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSourceVersion\"}",
          "10874:  if s.SourceIdentifier == nil {",
          "10875:   invalidParams.Add(request.NewErrParamRequired(\"SourceIdentifier\"))",
          "10876:  }",
          "10877:  if s.SourceVersion == nil {",
          "10878:   invalidParams.Add(request.NewErrParamRequired(\"SourceVersion\"))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "7741:  return nil",
          "7742: }",
          "7747:  return s",
          "7748: }",
          "7753:  return s",
          "7754: }",
          "7760: }",
          "7766: }",
          "7772: }",
          "7778: }",
          "7783:  return s",
          "7784: }",
          "7789:  return s",
          "7790: }",
          "7795:  return s",
          "7796: }",
          "7800:  _ struct{} `type:\"structure\"`",
          "7812: }",
          "7816:  return awsutil.Prettify(s)",
          "7817: }",
          "7821:  return s.String()",
          "7822: }",
          "7827:  return s",
          "7828: }",
          "7833:  return s",
          "7834: }",
          "7838:  _ struct{} `type:\"structure\"`",
          "7886: }",
          "7890:  return awsutil.Prettify(s)",
          "7891: }",
          "7895:  return s.String()",
          "7896: }",
          "7909: }",
          "7914:  return s",
          "7915: }",
          "7920:  return s",
          "7921: }",
          "7926:  return s",
          "7927: }",
          "8087:   }",
          "8088:  }",
          "",
          "[Removed Lines]",
          "7745: func (s *ProjectArtifacts) SetArtifactIdentifier(v string) *ProjectArtifacts {",
          "7746:  s.ArtifactIdentifier = &v",
          "7751: func (s *ProjectArtifacts) SetEncryptionDisabled(v bool) *ProjectArtifacts {",
          "7752:  s.EncryptionDisabled = &v",
          "7757: func (s *ProjectArtifacts) SetLocation(v string) *ProjectArtifacts {",
          "7758:  s.Location = &v",
          "7759:  return s",
          "7763: func (s *ProjectArtifacts) SetName(v string) *ProjectArtifacts {",
          "7764:  s.Name = &v",
          "7765:  return s",
          "7769: func (s *ProjectArtifacts) SetNamespaceType(v string) *ProjectArtifacts {",
          "7770:  s.NamespaceType = &v",
          "7771:  return s",
          "7775: func (s *ProjectArtifacts) SetOverrideArtifactName(v bool) *ProjectArtifacts {",
          "7776:  s.OverrideArtifactName = &v",
          "7777:  return s",
          "7781: func (s *ProjectArtifacts) SetPackaging(v string) *ProjectArtifacts {",
          "7782:  s.Packaging = &v",
          "7787: func (s *ProjectArtifacts) SetPath(v string) *ProjectArtifacts {",
          "7788:  s.Path = &v",
          "7793: func (s *ProjectArtifacts) SetType(v string) *ProjectArtifacts {",
          "7794:  s.Type = &v",
          "7799: type ProjectBadge struct {",
          "7804:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "7811:  BadgeRequestUrl *string `locationName:\"badgeRequestUrl\" type:\"string\"`",
          "7815: func (s ProjectBadge) String() string {",
          "7820: func (s ProjectBadge) GoString() string {",
          "7825: func (s *ProjectBadge) SetBadgeEnabled(v bool) *ProjectBadge {",
          "7826:  s.BadgeEnabled = &v",
          "7831: func (s *ProjectBadge) SetBadgeRequestUrl(v string) *ProjectBadge {",
          "7832:  s.BadgeRequestUrl = &v",
          "7837: type ProjectCache struct {",
          "7845:  Location *string `locationName:\"location\" type:\"string\"`",
          "7873:  Modes []*string `locationName:\"modes\" type:\"list\"`",
          "7885:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"CacheType\"`",
          "7889: func (s ProjectCache) String() string {",
          "7894: func (s ProjectCache) GoString() string {",
          "7899: func (s *ProjectCache) Validate() error {",
          "7900:  invalidParams := request.ErrInvalidParams{Context: \"ProjectCache\"}",
          "7901:  if s.Type == nil {",
          "7902:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "7903:  }",
          "7905:  if invalidParams.Len() > 0 {",
          "7906:   return invalidParams",
          "7907:  }",
          "7908:  return nil",
          "7912: func (s *ProjectCache) SetLocation(v string) *ProjectCache {",
          "7913:  s.Location = &v",
          "7918: func (s *ProjectCache) SetModes(v []*string) *ProjectCache {",
          "7919:  s.Modes = v",
          "7924: func (s *ProjectCache) SetType(v string) *ProjectCache {",
          "7925:  s.Type = &v",
          "7930: type ProjectEnvironment struct {",
          "7931:  _ struct{} `type:\"structure\"`",
          "7934:  Certificate *string `locationName:\"certificate\" type:\"string\"`",
          "7965:  ComputeType *string `locationName:\"computeType\" type:\"string\" required:\"true\" enum:\"ComputeType\"`",
          "7969:  EnvironmentVariables []*EnvironmentVariable `locationName:\"environmentVariables\" type:\"list\"`",
          "7982:  Image *string `locationName:\"image\" min:\"1\" type:\"string\" required:\"true\"`",
          "7997:  ImagePullCredentialsType *string `locationName:\"imagePullCredentialsType\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "8022:  PrivilegedMode *bool `locationName:\"privilegedMode\" type:\"boolean\"`",
          "8025:  RegistryCredential *RegistryCredential `locationName:\"registryCredential\" type:\"structure\"`",
          "8046:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"EnvironmentType\"`",
          "8047: }",
          "8050: func (s ProjectEnvironment) String() string {",
          "8051:  return awsutil.Prettify(s)",
          "8052: }",
          "8055: func (s ProjectEnvironment) GoString() string {",
          "8056:  return s.String()",
          "8057: }",
          "8060: func (s *ProjectEnvironment) Validate() error {",
          "8061:  invalidParams := request.ErrInvalidParams{Context: \"ProjectEnvironment\"}",
          "8062:  if s.ComputeType == nil {",
          "8063:   invalidParams.Add(request.NewErrParamRequired(\"ComputeType\"))",
          "8064:  }",
          "8065:  if s.Image == nil {",
          "8066:   invalidParams.Add(request.NewErrParamRequired(\"Image\"))",
          "8067:  }",
          "8068:  if s.Image != nil && len(*s.Image) < 1 {",
          "8069:   invalidParams.Add(request.NewErrParamMinLen(\"Image\", 1))",
          "8070:  }",
          "8071:  if s.Type == nil {",
          "8072:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "8073:  }",
          "8074:  if s.EnvironmentVariables != nil {",
          "8075:   for i, v := range s.EnvironmentVariables {",
          "8076:    if v == nil {",
          "8077:     continue",
          "8078:    }",
          "8079:    if err := v.Validate(); err != nil {",
          "8080:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariables\", i), err.(request.ErrInvalidParams))",
          "8081:    }",
          "8082:   }",
          "8083:  }",
          "8084:  if s.RegistryCredential != nil {",
          "8085:   if err := s.RegistryCredential.Validate(); err != nil {",
          "8086:    invalidParams.AddNested(\"RegistryCredential\", err.(request.ErrInvalidParams))",
          "",
          "[Added Lines]",
          "10888: func (s *ProjectSourceVersion) SetSourceIdentifier(v string) *ProjectSourceVersion {",
          "10889:  s.SourceIdentifier = &v",
          "10894: func (s *ProjectSourceVersion) SetSourceVersion(v string) *ProjectSourceVersion {",
          "10895:  s.SourceVersion = &v",
          "10899: type PutResourcePolicyInput struct {",
          "10900:  _ struct{} `type:\"structure\"`",
          "10908:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\" required:\"true\"`",
          "10914:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "10918: func (s PutResourcePolicyInput) String() string {",
          "10919:  return awsutil.Prettify(s)",
          "10923: func (s PutResourcePolicyInput) GoString() string {",
          "10924:  return s.String()",
          "10928: func (s *PutResourcePolicyInput) Validate() error {",
          "10929:  invalidParams := request.ErrInvalidParams{Context: \"PutResourcePolicyInput\"}",
          "10930:  if s.Policy == nil {",
          "10931:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "10932:  }",
          "10933:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "10934:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "10935:  }",
          "10936:  if s.ResourceArn == nil {",
          "10937:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "10938:  }",
          "10939:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "10940:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "10941:  }",
          "10943:  if invalidParams.Len() > 0 {",
          "10944:   return invalidParams",
          "10945:  }",
          "10946:  return nil",
          "10950: func (s *PutResourcePolicyInput) SetPolicy(v string) *PutResourcePolicyInput {",
          "10951:  s.Policy = &v",
          "10956: func (s *PutResourcePolicyInput) SetResourceArn(v string) *PutResourcePolicyInput {",
          "10957:  s.ResourceArn = &v",
          "10961: type PutResourcePolicyOutput struct {",
          "10962:  _ struct{} `type:\"structure\"`",
          "10966:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\"`",
          "10967: }",
          "10970: func (s PutResourcePolicyOutput) String() string {",
          "10971:  return awsutil.Prettify(s)",
          "10972: }",
          "10975: func (s PutResourcePolicyOutput) GoString() string {",
          "10976:  return s.String()",
          "10977: }",
          "10980: func (s *PutResourcePolicyOutput) SetResourceArn(v string) *PutResourcePolicyOutput {",
          "10981:  s.ResourceArn = &v",
          "10994: type RegistryCredential struct {",
          "11004:  Credential *string `locationName:\"credential\" min:\"1\" type:\"string\" required:\"true\"`",
          "11010:  CredentialProvider *string `locationName:\"credentialProvider\" type:\"string\" required:\"true\" enum:\"CredentialProviderType\"`",
          "11014: func (s RegistryCredential) String() string {",
          "11019: func (s RegistryCredential) GoString() string {",
          "11024: func (s *RegistryCredential) Validate() error {",
          "11025:  invalidParams := request.ErrInvalidParams{Context: \"RegistryCredential\"}",
          "11026:  if s.Credential == nil {",
          "11027:   invalidParams.Add(request.NewErrParamRequired(\"Credential\"))",
          "11028:  }",
          "11029:  if s.Credential != nil && len(*s.Credential) < 1 {",
          "11030:   invalidParams.Add(request.NewErrParamMinLen(\"Credential\", 1))",
          "11031:  }",
          "11032:  if s.CredentialProvider == nil {",
          "11033:   invalidParams.Add(request.NewErrParamRequired(\"CredentialProvider\"))",
          "11034:  }",
          "11036:  if invalidParams.Len() > 0 {",
          "11037:   return invalidParams",
          "11038:  }",
          "11039:  return nil",
          "11040: }",
          "11043: func (s *RegistryCredential) SetCredential(v string) *RegistryCredential {",
          "11044:  s.Credential = &v",
          "11049: func (s *RegistryCredential) SetCredentialProvider(v string) *RegistryCredential {",
          "11050:  s.CredentialProvider = &v",
          "11059: type Report struct {",
          "11063:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "11067:  CodeCoverageSummary *CodeCoverageReportSummary `locationName:\"codeCoverageSummary\" type:\"structure\"`",
          "11070:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "11073:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "11077:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "11080:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "11083:  Name *string `locationName:\"name\" type:\"string\"`",
          "11086:  ReportGroupArn *string `locationName:\"reportGroupArn\" min:\"1\" type:\"string\"`",
          "11089:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "11092:  TestSummary *TestReportSummary `locationName:\"testSummary\" type:\"structure\"`",
          "11096:  Truncated *bool `locationName:\"truncated\" type:\"boolean\"`",
          "11107:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "11111: func (s Report) String() string {",
          "11116: func (s Report) GoString() string {",
          "11121: func (s *Report) SetArn(v string) *Report {",
          "11122:  s.Arn = &v",
          "11123:  return s",
          "11124: }",
          "11127: func (s *Report) SetCodeCoverageSummary(v *CodeCoverageReportSummary) *Report {",
          "11128:  s.CodeCoverageSummary = v",
          "11129:  return s",
          "11133: func (s *Report) SetCreated(v time.Time) *Report {",
          "11134:  s.Created = &v",
          "11139: func (s *Report) SetExecutionId(v string) *Report {",
          "11140:  s.ExecutionId = &v",
          "11145: func (s *Report) SetExpired(v time.Time) *Report {",
          "11146:  s.Expired = &v",
          "11151: func (s *Report) SetExportConfig(v *ReportExportConfig) *Report {",
          "11152:  s.ExportConfig = v",
          "11153:  return s",
          "11154: }",
          "11157: func (s *Report) SetName(v string) *Report {",
          "11158:  s.Name = &v",
          "11159:  return s",
          "11160: }",
          "11163: func (s *Report) SetReportGroupArn(v string) *Report {",
          "11164:  s.ReportGroupArn = &v",
          "11165:  return s",
          "11166: }",
          "11169: func (s *Report) SetStatus(v string) *Report {",
          "11170:  s.Status = &v",
          "11171:  return s",
          "11172: }",
          "11175: func (s *Report) SetTestSummary(v *TestReportSummary) *Report {",
          "11176:  s.TestSummary = v",
          "11177:  return s",
          "11178: }",
          "11181: func (s *Report) SetTruncated(v bool) *Report {",
          "11182:  s.Truncated = &v",
          "11183:  return s",
          "11184: }",
          "11187: func (s *Report) SetType(v string) *Report {",
          "11188:  s.Type = &v",
          "11189:  return s",
          "11190: }",
          "11193: type ReportExportConfig struct {",
          "11194:  _ struct{} `type:\"structure\"`",
          "11201:  ExportConfigType *string `locationName:\"exportConfigType\" type:\"string\" enum:\"ReportExportConfigType\"`",
          "11205:  S3Destination *S3ReportExportConfig `locationName:\"s3Destination\" type:\"structure\"`",
          "11206: }",
          "11209: func (s ReportExportConfig) String() string {",
          "11210:  return awsutil.Prettify(s)",
          "11211: }",
          "11214: func (s ReportExportConfig) GoString() string {",
          "11215:  return s.String()",
          "11216: }",
          "11219: func (s *ReportExportConfig) Validate() error {",
          "11220:  invalidParams := request.ErrInvalidParams{Context: \"ReportExportConfig\"}",
          "11221:  if s.S3Destination != nil {",
          "11222:   if err := s.S3Destination.Validate(); err != nil {",
          "11223:    invalidParams.AddNested(\"S3Destination\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "8093:  return nil",
          "8094: }",
          "8105:  return s",
          "8106: }",
          "8111:  return s",
          "8112: }",
          "8124: }",
          "8130: }",
          "8136: }",
          "8141:  return s",
          "8142: }",
          "8147:  _ struct{} `type:\"structure\"`",
          "8179: }",
          "8183:  return awsutil.Prettify(s)",
          "8184: }",
          "8188:  return s.String()",
          "8189: }",
          "8194:  return s",
          "8195: }",
          "8200:  return s",
          "8201: }",
          "8206:  return s",
          "8207: }",
          "8212:  return s",
          "8213: }",
          "8218:  return s",
          "8219: }",
          "8335: }",
          "8339:  return awsutil.Prettify(s)",
          "8340: }",
          "8344:  return s.String()",
          "8345: }",
          "8368: }",
          "8373:  return s",
          "8374: }",
          "8379:  return s",
          "8380: }",
          "8386: }",
          "8392: }",
          "8398: }",
          "8404: }",
          "8410: }",
          "8416: }",
          "8422: }",
          "8428: }",
          "8464: }",
          "8468:  return awsutil.Prettify(s)",
          "8469: }",
          "8473:  return s.String()",
          "8474: }",
          "8484:  }",
          "8488:  }",
          "8489:  return nil",
          "8490: }",
          "8496: }",
          "8502: }",
          "8505:  _ struct{} `type:\"structure\"`",
          "8520: }",
          "8524:  return awsutil.Prettify(s)",
          "8525: }",
          "8529:  return s.String()",
          "8530: }",
          "8546:  }",
          "8548:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8097: func (s *ProjectEnvironment) SetCertificate(v string) *ProjectEnvironment {",
          "8098:  s.Certificate = &v",
          "8099:  return s",
          "8100: }",
          "8103: func (s *ProjectEnvironment) SetComputeType(v string) *ProjectEnvironment {",
          "8104:  s.ComputeType = &v",
          "8109: func (s *ProjectEnvironment) SetEnvironmentVariables(v []*EnvironmentVariable) *ProjectEnvironment {",
          "8110:  s.EnvironmentVariables = v",
          "8115: func (s *ProjectEnvironment) SetImage(v string) *ProjectEnvironment {",
          "8116:  s.Image = &v",
          "8117:  return s",
          "8118: }",
          "8121: func (s *ProjectEnvironment) SetImagePullCredentialsType(v string) *ProjectEnvironment {",
          "8122:  s.ImagePullCredentialsType = &v",
          "8123:  return s",
          "8127: func (s *ProjectEnvironment) SetPrivilegedMode(v bool) *ProjectEnvironment {",
          "8128:  s.PrivilegedMode = &v",
          "8129:  return s",
          "8133: func (s *ProjectEnvironment) SetRegistryCredential(v *RegistryCredential) *ProjectEnvironment {",
          "8134:  s.RegistryCredential = v",
          "8135:  return s",
          "8139: func (s *ProjectEnvironment) SetType(v string) *ProjectEnvironment {",
          "8140:  s.Type = &v",
          "8146: type ProjectFileSystemLocation struct {",
          "8155:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "8167:  Location *string `locationName:\"location\" type:\"string\"`",
          "8172:  MountOptions *string `locationName:\"mountOptions\" type:\"string\"`",
          "8175:  MountPoint *string `locationName:\"mountPoint\" type:\"string\"`",
          "8178:  Type *string `locationName:\"type\" type:\"string\" enum:\"FileSystemType\"`",
          "8182: func (s ProjectFileSystemLocation) String() string {",
          "8187: func (s ProjectFileSystemLocation) GoString() string {",
          "8192: func (s *ProjectFileSystemLocation) SetIdentifier(v string) *ProjectFileSystemLocation {",
          "8193:  s.Identifier = &v",
          "8198: func (s *ProjectFileSystemLocation) SetLocation(v string) *ProjectFileSystemLocation {",
          "8199:  s.Location = &v",
          "8204: func (s *ProjectFileSystemLocation) SetMountOptions(v string) *ProjectFileSystemLocation {",
          "8205:  s.MountOptions = &v",
          "8210: func (s *ProjectFileSystemLocation) SetMountPoint(v string) *ProjectFileSystemLocation {",
          "8211:  s.MountPoint = &v",
          "8216: func (s *ProjectFileSystemLocation) SetType(v string) *ProjectFileSystemLocation {",
          "8217:  s.Type = &v",
          "8222: type ProjectSource struct {",
          "8223:  _ struct{} `type:\"structure\"`",
          "8230:  Auth *SourceAuth `locationName:\"auth\" type:\"structure\"`",
          "8235:  BuildStatusConfig *BuildStatusConfig `locationName:\"buildStatusConfig\" type:\"structure\"`",
          "8247:  Buildspec *string `locationName:\"buildspec\" type:\"string\"`",
          "8250:  GitCloneDepth *int64 `locationName:\"gitCloneDepth\" type:\"integer\"`",
          "8253:  GitSubmodulesConfig *GitSubmodulesConfig `locationName:\"gitSubmodulesConfig\" type:\"structure\"`",
          "8257:  InsecureSsl *bool `locationName:\"insecureSsl\" type:\"boolean\"`",
          "8299:  Location *string `locationName:\"location\" type:\"string\"`",
          "8308:  ReportBuildStatus *bool `locationName:\"reportBuildStatus\" type:\"boolean\"`",
          "8311:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\"`",
          "8334:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceType\"`",
          "8338: func (s ProjectSource) String() string {",
          "8343: func (s ProjectSource) GoString() string {",
          "8348: func (s *ProjectSource) Validate() error {",
          "8349:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSource\"}",
          "8350:  if s.Type == nil {",
          "8351:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "8352:  }",
          "8353:  if s.Auth != nil {",
          "8354:   if err := s.Auth.Validate(); err != nil {",
          "8355:    invalidParams.AddNested(\"Auth\", err.(request.ErrInvalidParams))",
          "8356:   }",
          "8357:  }",
          "8358:  if s.GitSubmodulesConfig != nil {",
          "8359:   if err := s.GitSubmodulesConfig.Validate(); err != nil {",
          "8360:    invalidParams.AddNested(\"GitSubmodulesConfig\", err.(request.ErrInvalidParams))",
          "8361:   }",
          "8362:  }",
          "8364:  if invalidParams.Len() > 0 {",
          "8365:   return invalidParams",
          "8366:  }",
          "8367:  return nil",
          "8371: func (s *ProjectSource) SetAuth(v *SourceAuth) *ProjectSource {",
          "8372:  s.Auth = v",
          "8377: func (s *ProjectSource) SetBuildStatusConfig(v *BuildStatusConfig) *ProjectSource {",
          "8378:  s.BuildStatusConfig = v",
          "8383: func (s *ProjectSource) SetBuildspec(v string) *ProjectSource {",
          "8384:  s.Buildspec = &v",
          "8385:  return s",
          "8389: func (s *ProjectSource) SetGitCloneDepth(v int64) *ProjectSource {",
          "8390:  s.GitCloneDepth = &v",
          "8391:  return s",
          "8395: func (s *ProjectSource) SetGitSubmodulesConfig(v *GitSubmodulesConfig) *ProjectSource {",
          "8396:  s.GitSubmodulesConfig = v",
          "8397:  return s",
          "8401: func (s *ProjectSource) SetInsecureSsl(v bool) *ProjectSource {",
          "8402:  s.InsecureSsl = &v",
          "8403:  return s",
          "8407: func (s *ProjectSource) SetLocation(v string) *ProjectSource {",
          "8408:  s.Location = &v",
          "8409:  return s",
          "8413: func (s *ProjectSource) SetReportBuildStatus(v bool) *ProjectSource {",
          "8414:  s.ReportBuildStatus = &v",
          "8415:  return s",
          "8419: func (s *ProjectSource) SetSourceIdentifier(v string) *ProjectSource {",
          "8420:  s.SourceIdentifier = &v",
          "8421:  return s",
          "8425: func (s *ProjectSource) SetType(v string) *ProjectSource {",
          "8426:  s.Type = &v",
          "8427:  return s",
          "8431: type ProjectSourceVersion struct {",
          "8432:  _ struct{} `type:\"structure\"`",
          "8437:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\" required:\"true\"`",
          "8463:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\" required:\"true\"`",
          "8467: func (s ProjectSourceVersion) String() string {",
          "8472: func (s ProjectSourceVersion) GoString() string {",
          "8477: func (s *ProjectSourceVersion) Validate() error {",
          "8478:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSourceVersion\"}",
          "8479:  if s.SourceIdentifier == nil {",
          "8480:   invalidParams.Add(request.NewErrParamRequired(\"SourceIdentifier\"))",
          "8481:  }",
          "8482:  if s.SourceVersion == nil {",
          "8483:   invalidParams.Add(request.NewErrParamRequired(\"SourceVersion\"))",
          "8486:  if invalidParams.Len() > 0 {",
          "8487:   return invalidParams",
          "8493: func (s *ProjectSourceVersion) SetSourceIdentifier(v string) *ProjectSourceVersion {",
          "8494:  s.SourceIdentifier = &v",
          "8495:  return s",
          "8499: func (s *ProjectSourceVersion) SetSourceVersion(v string) *ProjectSourceVersion {",
          "8500:  s.SourceVersion = &v",
          "8501:  return s",
          "8504: type PutResourcePolicyInput struct {",
          "8513:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\" required:\"true\"`",
          "8519:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "8523: func (s PutResourcePolicyInput) String() string {",
          "8528: func (s PutResourcePolicyInput) GoString() string {",
          "8533: func (s *PutResourcePolicyInput) Validate() error {",
          "8534:  invalidParams := request.ErrInvalidParams{Context: \"PutResourcePolicyInput\"}",
          "8535:  if s.Policy == nil {",
          "8536:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "8537:  }",
          "8538:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "8539:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "8540:  }",
          "8541:  if s.ResourceArn == nil {",
          "8542:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8543:  }",
          "8544:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8545:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "[Added Lines]",
          "11234: func (s *ReportExportConfig) SetExportConfigType(v string) *ReportExportConfig {",
          "11235:  s.ExportConfigType = &v",
          "11240: func (s *ReportExportConfig) SetS3Destination(v *S3ReportExportConfig) *ReportExportConfig {",
          "11241:  s.S3Destination = v",
          "11247: type ReportFilter struct {",
          "11248:  _ struct{} `type:\"structure\"`",
          "11251:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "11255: func (s ReportFilter) String() string {",
          "11256:  return awsutil.Prettify(s)",
          "11260: func (s ReportFilter) GoString() string {",
          "11261:  return s.String()",
          "11265: func (s *ReportFilter) SetStatus(v string) *ReportFilter {",
          "11266:  s.Status = &v",
          "11274: type ReportGroup struct {",
          "11278:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "11281:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "11285:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "11288:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "11291:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "11297:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "11300:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "11304: func (s ReportGroup) String() string {",
          "11309: func (s ReportGroup) GoString() string {",
          "11314: func (s *ReportGroup) SetArn(v string) *ReportGroup {",
          "11315:  s.Arn = &v",
          "11320: func (s *ReportGroup) SetCreated(v time.Time) *ReportGroup {",
          "11321:  s.Created = &v",
          "11326: func (s *ReportGroup) SetExportConfig(v *ReportExportConfig) *ReportGroup {",
          "11327:  s.ExportConfig = v",
          "11332: func (s *ReportGroup) SetLastModified(v time.Time) *ReportGroup {",
          "11333:  s.LastModified = &v",
          "11338: func (s *ReportGroup) SetName(v string) *ReportGroup {",
          "11339:  s.Name = &v",
          "11344: func (s *ReportGroup) SetTags(v []*Tag) *ReportGroup {",
          "11345:  s.Tags = v",
          "11346:  return s",
          "11347: }",
          "11350: func (s *ReportGroup) SetType(v string) *ReportGroup {",
          "11351:  s.Type = &v",
          "11352:  return s",
          "11353: }",
          "11358: type ResolvedArtifact struct {",
          "11359:  _ struct{} `type:\"structure\"`",
          "11362:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "11365:  Location *string `locationName:\"location\" type:\"string\"`",
          "11368:  Type *string `locationName:\"type\" type:\"string\" enum:\"ArtifactsType\"`",
          "11372: func (s ResolvedArtifact) String() string {",
          "11377: func (s ResolvedArtifact) GoString() string {",
          "11382: func (s *ResolvedArtifact) SetIdentifier(v string) *ResolvedArtifact {",
          "11383:  s.Identifier = &v",
          "11384:  return s",
          "11388: func (s *ResolvedArtifact) SetLocation(v string) *ResolvedArtifact {",
          "11389:  s.Location = &v",
          "11394: func (s *ResolvedArtifact) SetType(v string) *ResolvedArtifact {",
          "11395:  s.Type = &v",
          "11401: type ResourceAlreadyExistsException struct {",
          "11402:  _            struct{}                  `type:\"structure\"`",
          "11403:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "11405:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "11409: func (s ResourceAlreadyExistsException) String() string {",
          "11410:  return awsutil.Prettify(s)",
          "11414: func (s ResourceAlreadyExistsException) GoString() string {",
          "11415:  return s.String()",
          "11418: func newErrorResourceAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "11419:  return &ResourceAlreadyExistsException{",
          "11420:   RespMetadata: v,",
          "11421:  }",
          "11425: func (s *ResourceAlreadyExistsException) Code() string {",
          "11426:  return \"ResourceAlreadyExistsException\"",
          "11430: func (s *ResourceAlreadyExistsException) Message() string {",
          "11431:  if s.Message_ != nil {",
          "11432:   return *s.Message_",
          "11433:  }",
          "11434:  return \"\"",
          "11438: func (s *ResourceAlreadyExistsException) OrigErr() error {",
          "11439:  return nil",
          "11442: func (s *ResourceAlreadyExistsException) Error() string {",
          "11443:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "11447: func (s *ResourceAlreadyExistsException) StatusCode() int {",
          "11448:  return s.RespMetadata.StatusCode",
          "11449: }",
          "11452: func (s *ResourceAlreadyExistsException) RequestID() string {",
          "11453:  return s.RespMetadata.RequestID",
          "11454: }",
          "11457: type ResourceNotFoundException struct {",
          "11458:  _            struct{}                  `type:\"structure\"`",
          "11459:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "11461:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "11465: func (s ResourceNotFoundException) String() string {",
          "11470: func (s ResourceNotFoundException) GoString() string {",
          "11474: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "11475:  return &ResourceNotFoundException{",
          "11476:   RespMetadata: v,",
          "11478: }",
          "11481: func (s *ResourceNotFoundException) Code() string {",
          "11482:  return \"ResourceNotFoundException\"",
          "11483: }",
          "11486: func (s *ResourceNotFoundException) Message() string {",
          "11487:  if s.Message_ != nil {",
          "11488:   return *s.Message_",
          "11490:  return \"\"",
          "11491: }",
          "11494: func (s *ResourceNotFoundException) OrigErr() error {",
          "11498: func (s *ResourceNotFoundException) Error() string {",
          "11499:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "11503: func (s *ResourceNotFoundException) StatusCode() int {",
          "11504:  return s.RespMetadata.StatusCode",
          "11508: func (s *ResourceNotFoundException) RequestID() string {",
          "11509:  return s.RespMetadata.RequestID",
          "11510: }",
          "11512: type RetryBuildBatchInput struct {",
          "11516:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "11523:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11526:  RetryType *string `locationName:\"retryType\" type:\"string\" enum:\"RetryBuildBatchType\"`",
          "11530: func (s RetryBuildBatchInput) String() string {",
          "11535: func (s RetryBuildBatchInput) GoString() string {",
          "11540: func (s *RetryBuildBatchInput) Validate() error {",
          "11541:  invalidParams := request.ErrInvalidParams{Context: \"RetryBuildBatchInput\"}",
          "11542:  if s.Id != nil && len(*s.Id) < 1 {",
          "11543:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "8551:  return nil",
          "8552: }",
          "8557:  return s",
          "8558: }",
          "8563:  return s",
          "8564: }",
          "8567:  _ struct{} `type:\"structure\"`",
          "8572: }",
          "8576:  return awsutil.Prettify(s)",
          "8577: }",
          "8581:  return s.String()",
          "8582: }",
          "8587:  return s",
          "8588: }",
          "8600:  _ struct{} `type:\"structure\"`",
          "8616: }",
          "8620:  return awsutil.Prettify(s)",
          "8621: }",
          "8625:  return s.String()",
          "8626: }",
          "8639:  }",
          "8641:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8555: func (s *PutResourcePolicyInput) SetPolicy(v string) *PutResourcePolicyInput {",
          "8556:  s.Policy = &v",
          "8561: func (s *PutResourcePolicyInput) SetResourceArn(v string) *PutResourcePolicyInput {",
          "8562:  s.ResourceArn = &v",
          "8566: type PutResourcePolicyOutput struct {",
          "8571:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\"`",
          "8575: func (s PutResourcePolicyOutput) String() string {",
          "8580: func (s PutResourcePolicyOutput) GoString() string {",
          "8585: func (s *PutResourcePolicyOutput) SetResourceArn(v string) *PutResourcePolicyOutput {",
          "8586:  s.ResourceArn = &v",
          "8599: type RegistryCredential struct {",
          "8609:  Credential *string `locationName:\"credential\" min:\"1\" type:\"string\" required:\"true\"`",
          "8615:  CredentialProvider *string `locationName:\"credentialProvider\" type:\"string\" required:\"true\" enum:\"CredentialProviderType\"`",
          "8619: func (s RegistryCredential) String() string {",
          "8624: func (s RegistryCredential) GoString() string {",
          "8629: func (s *RegistryCredential) Validate() error {",
          "8630:  invalidParams := request.ErrInvalidParams{Context: \"RegistryCredential\"}",
          "8631:  if s.Credential == nil {",
          "8632:   invalidParams.Add(request.NewErrParamRequired(\"Credential\"))",
          "8633:  }",
          "8634:  if s.Credential != nil && len(*s.Credential) < 1 {",
          "8635:   invalidParams.Add(request.NewErrParamMinLen(\"Credential\", 1))",
          "8636:  }",
          "8637:  if s.CredentialProvider == nil {",
          "8638:   invalidParams.Add(request.NewErrParamRequired(\"CredentialProvider\"))",
          "",
          "[Added Lines]",
          "11553: func (s *RetryBuildBatchInput) SetId(v string) *RetryBuildBatchInput {",
          "11554:  s.Id = &v",
          "11559: func (s *RetryBuildBatchInput) SetIdempotencyToken(v string) *RetryBuildBatchInput {",
          "11560:  s.IdempotencyToken = &v",
          "11565: func (s *RetryBuildBatchInput) SetRetryType(v string) *RetryBuildBatchInput {",
          "11566:  s.RetryType = &v",
          "11567:  return s",
          "11568: }",
          "11570: type RetryBuildBatchOutput struct {",
          "11574:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "11578: func (s RetryBuildBatchOutput) String() string {",
          "11583: func (s RetryBuildBatchOutput) GoString() string {",
          "11588: func (s *RetryBuildBatchOutput) SetBuildBatch(v *BuildBatch) *RetryBuildBatchOutput {",
          "11589:  s.BuildBatch = v",
          "11593: type RetryBuildInput struct {",
          "11597:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "11604:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11608: func (s RetryBuildInput) String() string {",
          "11613: func (s RetryBuildInput) GoString() string {",
          "11618: func (s *RetryBuildInput) Validate() error {",
          "11619:  invalidParams := request.ErrInvalidParams{Context: \"RetryBuildInput\"}",
          "11620:  if s.Id != nil && len(*s.Id) < 1 {",
          "11621:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "8644:  return nil",
          "8645: }",
          "8650:  return s",
          "8651: }",
          "8656:  return s",
          "8657: }",
          "8665:  _ struct{} `type:\"structure\"`",
          "8701: }",
          "8705:  return awsutil.Prettify(s)",
          "8706: }",
          "8710:  return s.String()",
          "8711: }",
          "8717: }",
          "8722:  return s",
          "8723: }",
          "8728:  return s",
          "8729: }",
          "8734:  return s",
          "8735: }",
          "8741: }",
          "8747: }",
          "8753: }",
          "8758:  return s",
          "8759: }",
          "8764:  return s",
          "8765: }",
          "8770:  return s",
          "8771: }",
          "8776:  return s",
          "8777: }",
          "8781:  _ struct{} `type:\"structure\"`",
          "8793: }",
          "8797:  return awsutil.Prettify(s)",
          "8798: }",
          "8802:  return s.String()",
          "8803: }",
          "8812:  }",
          "8814:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8648: func (s *RegistryCredential) SetCredential(v string) *RegistryCredential {",
          "8649:  s.Credential = &v",
          "8654: func (s *RegistryCredential) SetCredentialProvider(v string) *RegistryCredential {",
          "8655:  s.CredentialProvider = &v",
          "8664: type Report struct {",
          "8668:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8671:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "8674:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "8678:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "8681:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "8684:  Name *string `locationName:\"name\" type:\"string\"`",
          "8687:  ReportGroupArn *string `locationName:\"reportGroupArn\" min:\"1\" type:\"string\"`",
          "8690:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "8693:  TestSummary *TestReportSummary `locationName:\"testSummary\" type:\"structure\"`",
          "8697:  Truncated *bool `locationName:\"truncated\" type:\"boolean\"`",
          "8700:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "8704: func (s Report) String() string {",
          "8709: func (s Report) GoString() string {",
          "8714: func (s *Report) SetArn(v string) *Report {",
          "8715:  s.Arn = &v",
          "8716:  return s",
          "8720: func (s *Report) SetCreated(v time.Time) *Report {",
          "8721:  s.Created = &v",
          "8726: func (s *Report) SetExecutionId(v string) *Report {",
          "8727:  s.ExecutionId = &v",
          "8732: func (s *Report) SetExpired(v time.Time) *Report {",
          "8733:  s.Expired = &v",
          "8738: func (s *Report) SetExportConfig(v *ReportExportConfig) *Report {",
          "8739:  s.ExportConfig = v",
          "8740:  return s",
          "8744: func (s *Report) SetName(v string) *Report {",
          "8745:  s.Name = &v",
          "8746:  return s",
          "8750: func (s *Report) SetReportGroupArn(v string) *Report {",
          "8751:  s.ReportGroupArn = &v",
          "8752:  return s",
          "8756: func (s *Report) SetStatus(v string) *Report {",
          "8757:  s.Status = &v",
          "8762: func (s *Report) SetTestSummary(v *TestReportSummary) *Report {",
          "8763:  s.TestSummary = v",
          "8768: func (s *Report) SetTruncated(v bool) *Report {",
          "8769:  s.Truncated = &v",
          "8774: func (s *Report) SetType(v string) *Report {",
          "8775:  s.Type = &v",
          "8780: type ReportExportConfig struct {",
          "8788:  ExportConfigType *string `locationName:\"exportConfigType\" type:\"string\" enum:\"ReportExportConfigType\"`",
          "8792:  S3Destination *S3ReportExportConfig `locationName:\"s3Destination\" type:\"structure\"`",
          "8796: func (s ReportExportConfig) String() string {",
          "8801: func (s ReportExportConfig) GoString() string {",
          "8806: func (s *ReportExportConfig) Validate() error {",
          "8807:  invalidParams := request.ErrInvalidParams{Context: \"ReportExportConfig\"}",
          "8808:  if s.S3Destination != nil {",
          "8809:   if err := s.S3Destination.Validate(); err != nil {",
          "8810:    invalidParams.AddNested(\"S3Destination\", err.(request.ErrInvalidParams))",
          "8811:   }",
          "",
          "[Added Lines]",
          "11631: func (s *RetryBuildInput) SetId(v string) *RetryBuildInput {",
          "11632:  s.Id = &v",
          "11637: func (s *RetryBuildInput) SetIdempotencyToken(v string) *RetryBuildInput {",
          "11638:  s.IdempotencyToken = &v",
          "11642: type RetryBuildOutput struct {",
          "11646:  Build *Build `locationName:\"build\" type:\"structure\"`",
          "11647: }",
          "11650: func (s RetryBuildOutput) String() string {",
          "11651:  return awsutil.Prettify(s)",
          "11652: }",
          "11655: func (s RetryBuildOutput) GoString() string {",
          "11656:  return s.String()",
          "11657: }",
          "11660: func (s *RetryBuildOutput) SetBuild(v *Build) *RetryBuildOutput {",
          "11661:  s.Build = v",
          "11662:  return s",
          "11663: }",
          "11666: type S3LogsConfig struct {",
          "11667:  _ struct{} `type:\"structure\"`",
          "11671:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "11676:  Location *string `locationName:\"location\" type:\"string\"`",
          "11685:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "11689: func (s S3LogsConfig) String() string {",
          "11694: func (s S3LogsConfig) GoString() string {",
          "11699: func (s *S3LogsConfig) Validate() error {",
          "11700:  invalidParams := request.ErrInvalidParams{Context: \"S3LogsConfig\"}",
          "11701:  if s.Status == nil {",
          "11702:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "11703:  }",
          "11705:  if invalidParams.Len() > 0 {",
          "11706:   return invalidParams",
          "11707:  }",
          "11708:  return nil",
          "11712: func (s *S3LogsConfig) SetEncryptionDisabled(v bool) *S3LogsConfig {",
          "11713:  s.EncryptionDisabled = &v",
          "11718: func (s *S3LogsConfig) SetLocation(v string) *S3LogsConfig {",
          "11719:  s.Location = &v",
          "11724: func (s *S3LogsConfig) SetStatus(v string) *S3LogsConfig {",
          "11725:  s.Status = &v",
          "11730: type S3ReportExportConfig struct {",
          "11731:  _ struct{} `type:\"structure\"`",
          "11734:  Bucket *string `locationName:\"bucket\" min:\"1\" type:\"string\"`",
          "11737:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "11740:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "11749:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ReportPackagingType\"`",
          "11752:  Path *string `locationName:\"path\" type:\"string\"`",
          "11756: func (s S3ReportExportConfig) String() string {",
          "11757:  return awsutil.Prettify(s)",
          "11761: func (s S3ReportExportConfig) GoString() string {",
          "11762:  return s.String()",
          "11766: func (s *S3ReportExportConfig) Validate() error {",
          "11767:  invalidParams := request.ErrInvalidParams{Context: \"S3ReportExportConfig\"}",
          "11768:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "11769:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "11770:  }",
          "11771:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "11772:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "11773:  }",
          "11775:  if invalidParams.Len() > 0 {",
          "11776:   return invalidParams",
          "11777:  }",
          "11778:  return nil",
          "11779: }",
          "11782: func (s *S3ReportExportConfig) SetBucket(v string) *S3ReportExportConfig {",
          "11783:  s.Bucket = &v",
          "11788: func (s *S3ReportExportConfig) SetEncryptionDisabled(v bool) *S3ReportExportConfig {",
          "11789:  s.EncryptionDisabled = &v",
          "11794: func (s *S3ReportExportConfig) SetEncryptionKey(v string) *S3ReportExportConfig {",
          "11795:  s.EncryptionKey = &v",
          "11800: func (s *S3ReportExportConfig) SetPackaging(v string) *S3ReportExportConfig {",
          "11801:  s.Packaging = &v",
          "11802:  return s",
          "11803: }",
          "11806: func (s *S3ReportExportConfig) SetPath(v string) *S3ReportExportConfig {",
          "11807:  s.Path = &v",
          "11816: type SourceAuth struct {",
          "11820:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "11829:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceAuthType\"`",
          "11833: func (s SourceAuth) String() string {",
          "11838: func (s SourceAuth) GoString() string {",
          "11843: func (s *SourceAuth) Validate() error {",
          "11844:  invalidParams := request.ErrInvalidParams{Context: \"SourceAuth\"}",
          "11845:  if s.Type == nil {",
          "11846:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "8817:  return nil",
          "8818: }",
          "8829:  return s",
          "8830: }",
          "8854:  return s",
          "8855: }",
          "8862:  _ struct{} `type:\"structure\"`",
          "8865:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8888: }",
          "8892:  return awsutil.Prettify(s)",
          "8893: }",
          "8897:  return s.String()",
          "8898: }",
          "8902:  s.Arn = &v",
          "8903:  return s",
          "8904: }",
          "8909:  return s",
          "8910: }",
          "8915:  return s",
          "8916: }",
          "9076: }",
          "9080:  return awsutil.Prettify(s)",
          "9081: }",
          "9085:  return s.String()",
          "9086: }",
          "9093:  }",
          "9095:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8821: func (s *ReportExportConfig) SetExportConfigType(v string) *ReportExportConfig {",
          "8822:  s.ExportConfigType = &v",
          "8823:  return s",
          "8824: }",
          "8827: func (s *ReportExportConfig) SetS3Destination(v *S3ReportExportConfig) *ReportExportConfig {",
          "8828:  s.S3Destination = v",
          "8834: type ReportFilter struct {",
          "8835:  _ struct{} `type:\"structure\"`",
          "8838:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "8839: }",
          "8842: func (s ReportFilter) String() string {",
          "8843:  return awsutil.Prettify(s)",
          "8844: }",
          "8847: func (s ReportFilter) GoString() string {",
          "8848:  return s.String()",
          "8849: }",
          "8852: func (s *ReportFilter) SetStatus(v string) *ReportFilter {",
          "8853:  s.Status = &v",
          "8861: type ReportGroup struct {",
          "8868:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "8872:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "8875:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "8878:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "8884:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "8887:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "8891: func (s ReportGroup) String() string {",
          "8896: func (s ReportGroup) GoString() string {",
          "8901: func (s *ReportGroup) SetArn(v string) *ReportGroup {",
          "8907: func (s *ReportGroup) SetCreated(v time.Time) *ReportGroup {",
          "8908:  s.Created = &v",
          "8913: func (s *ReportGroup) SetExportConfig(v *ReportExportConfig) *ReportGroup {",
          "8914:  s.ExportConfig = v",
          "8919: func (s *ReportGroup) SetLastModified(v time.Time) *ReportGroup {",
          "8920:  s.LastModified = &v",
          "8921:  return s",
          "8922: }",
          "8925: func (s *ReportGroup) SetName(v string) *ReportGroup {",
          "8926:  s.Name = &v",
          "8927:  return s",
          "8928: }",
          "8931: func (s *ReportGroup) SetTags(v []*Tag) *ReportGroup {",
          "8932:  s.Tags = v",
          "8933:  return s",
          "8934: }",
          "8937: func (s *ReportGroup) SetType(v string) *ReportGroup {",
          "8938:  s.Type = &v",
          "8939:  return s",
          "8940: }",
          "8944: type ResourceAlreadyExistsException struct {",
          "8945:  _            struct{}                  `type:\"structure\"`",
          "8946:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8948:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8949: }",
          "8952: func (s ResourceAlreadyExistsException) String() string {",
          "8953:  return awsutil.Prettify(s)",
          "8954: }",
          "8957: func (s ResourceAlreadyExistsException) GoString() string {",
          "8958:  return s.String()",
          "8959: }",
          "8961: func newErrorResourceAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "8962:  return &ResourceAlreadyExistsException{",
          "8963:   RespMetadata: v,",
          "8964:  }",
          "8965: }",
          "8968: func (s *ResourceAlreadyExistsException) Code() string {",
          "8969:  return \"ResourceAlreadyExistsException\"",
          "8970: }",
          "8973: func (s *ResourceAlreadyExistsException) Message() string {",
          "8974:  if s.Message_ != nil {",
          "8975:   return *s.Message_",
          "8976:  }",
          "8977:  return \"\"",
          "8978: }",
          "8981: func (s *ResourceAlreadyExistsException) OrigErr() error {",
          "8982:  return nil",
          "8983: }",
          "8985: func (s *ResourceAlreadyExistsException) Error() string {",
          "8986:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8987: }",
          "8990: func (s *ResourceAlreadyExistsException) StatusCode() int {",
          "8991:  return s.RespMetadata.StatusCode",
          "8992: }",
          "8995: func (s *ResourceAlreadyExistsException) RequestID() string {",
          "8996:  return s.RespMetadata.RequestID",
          "8997: }",
          "9000: type ResourceNotFoundException struct {",
          "9001:  _            struct{}                  `type:\"structure\"`",
          "9002:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9004:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "9005: }",
          "9008: func (s ResourceNotFoundException) String() string {",
          "9009:  return awsutil.Prettify(s)",
          "9010: }",
          "9013: func (s ResourceNotFoundException) GoString() string {",
          "9014:  return s.String()",
          "9015: }",
          "9017: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "9018:  return &ResourceNotFoundException{",
          "9019:   RespMetadata: v,",
          "9020:  }",
          "9021: }",
          "9024: func (s *ResourceNotFoundException) Code() string {",
          "9025:  return \"ResourceNotFoundException\"",
          "9026: }",
          "9029: func (s *ResourceNotFoundException) Message() string {",
          "9030:  if s.Message_ != nil {",
          "9031:   return *s.Message_",
          "9032:  }",
          "9033:  return \"\"",
          "9034: }",
          "9037: func (s *ResourceNotFoundException) OrigErr() error {",
          "9038:  return nil",
          "9039: }",
          "9041: func (s *ResourceNotFoundException) Error() string {",
          "9042:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9043: }",
          "9046: func (s *ResourceNotFoundException) StatusCode() int {",
          "9047:  return s.RespMetadata.StatusCode",
          "9048: }",
          "9051: func (s *ResourceNotFoundException) RequestID() string {",
          "9052:  return s.RespMetadata.RequestID",
          "9053: }",
          "9056: type S3LogsConfig struct {",
          "9057:  _ struct{} `type:\"structure\"`",
          "9061:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9066:  Location *string `locationName:\"location\" type:\"string\"`",
          "9075:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "9079: func (s S3LogsConfig) String() string {",
          "9084: func (s S3LogsConfig) GoString() string {",
          "9089: func (s *S3LogsConfig) Validate() error {",
          "9090:  invalidParams := request.ErrInvalidParams{Context: \"S3LogsConfig\"}",
          "9091:  if s.Status == nil {",
          "9092:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "",
          "[Added Lines]",
          "11856: func (s *SourceAuth) SetResource(v string) *SourceAuth {",
          "11857:  s.Resource = &v",
          "11862: func (s *SourceAuth) SetType(v string) *SourceAuth {",
          "11863:  s.Type = &v",
          "11869: type SourceCredentialsInfo struct {",
          "11877:  AuthType *string `locationName:\"authType\" type:\"string\" enum:\"AuthType\"`",
          "11881:  ServerType *string `locationName:\"serverType\" type:\"string\" enum:\"ServerType\"`",
          "11885: func (s SourceCredentialsInfo) String() string {",
          "11890: func (s SourceCredentialsInfo) GoString() string {",
          "11895: func (s *SourceCredentialsInfo) SetArn(v string) *SourceCredentialsInfo {",
          "11901: func (s *SourceCredentialsInfo) SetAuthType(v string) *SourceCredentialsInfo {",
          "11902:  s.AuthType = &v",
          "11907: func (s *SourceCredentialsInfo) SetServerType(v string) *SourceCredentialsInfo {",
          "11908:  s.ServerType = &v",
          "11912: type StartBuildBatchInput struct {",
          "11913:  _ struct{} `type:\"structure\"`",
          "11917:  ArtifactsOverride *ProjectArtifacts `locationName:\"artifactsOverride\" type:\"structure\"`",
          "11921:  BuildBatchConfigOverride *ProjectBuildBatchConfig `locationName:\"buildBatchConfigOverride\" type:\"structure\"`",
          "11924:  BuildTimeoutInMinutesOverride *int64 `locationName:\"buildTimeoutInMinutesOverride\" min:\"5\" type:\"integer\"`",
          "11937:  BuildspecOverride *string `locationName:\"buildspecOverride\" type:\"string\"`",
          "11940:  CacheOverride *ProjectCache `locationName:\"cacheOverride\" type:\"structure\"`",
          "11944:  CertificateOverride *string `locationName:\"certificateOverride\" type:\"string\"`",
          "11948:  ComputeTypeOverride *string `locationName:\"computeTypeOverride\" type:\"string\" enum:\"ComputeType\"`",
          "11959:  EncryptionKeyOverride *string `locationName:\"encryptionKeyOverride\" min:\"1\" type:\"string\"`",
          "11963:  EnvironmentTypeOverride *string `locationName:\"environmentTypeOverride\" type:\"string\" enum:\"EnvironmentType\"`",
          "11967:  EnvironmentVariablesOverride []*EnvironmentVariable `locationName:\"environmentVariablesOverride\" type:\"list\"`",
          "11972:  GitCloneDepthOverride *int64 `locationName:\"gitCloneDepthOverride\" type:\"integer\"`",
          "11976:  GitSubmodulesConfigOverride *GitSubmodulesConfig `locationName:\"gitSubmodulesConfigOverride\" type:\"structure\"`",
          "11983:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11987:  ImageOverride *string `locationName:\"imageOverride\" min:\"1\" type:\"string\"`",
          "12004:  ImagePullCredentialsTypeOverride *string `locationName:\"imagePullCredentialsTypeOverride\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "12010:  InsecureSslOverride *bool `locationName:\"insecureSslOverride\" type:\"boolean\"`",
          "12014:  LogsConfigOverride *LogsConfig `locationName:\"logsConfigOverride\" type:\"structure\"`",
          "12017:  PrivilegedModeOverride *bool `locationName:\"privilegedModeOverride\" type:\"boolean\"`",
          "12022:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "12026:  QueuedTimeoutInMinutesOverride *int64 `locationName:\"queuedTimeoutInMinutesOverride\" min:\"5\" type:\"integer\"`",
          "12030:  RegistryCredentialOverride *RegistryCredential `locationName:\"registryCredentialOverride\" type:\"structure\"`",
          "12039:  ReportBuildBatchStatusOverride *bool `locationName:\"reportBuildBatchStatusOverride\" type:\"boolean\"`",
          "12043:  SecondaryArtifactsOverride []*ProjectArtifacts `locationName:\"secondaryArtifactsOverride\" type:\"list\"`",
          "12047:  SecondarySourcesOverride []*ProjectSource `locationName:\"secondarySourcesOverride\" type:\"list\"`",
          "12051:  SecondarySourcesVersionOverride []*ProjectSourceVersion `locationName:\"secondarySourcesVersionOverride\" type:\"list\"`",
          "12055:  ServiceRoleOverride *string `locationName:\"serviceRoleOverride\" min:\"1\" type:\"string\"`",
          "12060:  SourceAuthOverride *SourceAuth `locationName:\"sourceAuthOverride\" type:\"structure\"`",
          "12064:  SourceLocationOverride *string `locationName:\"sourceLocationOverride\" type:\"string\"`",
          "12068:  SourceTypeOverride *string `locationName:\"sourceTypeOverride\" type:\"string\" enum:\"SourceType\"`",
          "12103:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "12107: func (s StartBuildBatchInput) String() string {",
          "12112: func (s StartBuildBatchInput) GoString() string {",
          "12117: func (s *StartBuildBatchInput) Validate() error {",
          "12118:  invalidParams := request.ErrInvalidParams{Context: \"StartBuildBatchInput\"}",
          "12119:  if s.BuildTimeoutInMinutesOverride != nil && *s.BuildTimeoutInMinutesOverride < 5 {",
          "12120:   invalidParams.Add(request.NewErrParamMinValue(\"BuildTimeoutInMinutesOverride\", 5))",
          "12121:  }",
          "12122:  if s.EncryptionKeyOverride != nil && len(*s.EncryptionKeyOverride) < 1 {",
          "12123:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKeyOverride\", 1))",
          "12124:  }",
          "12125:  if s.ImageOverride != nil && len(*s.ImageOverride) < 1 {",
          "12126:   invalidParams.Add(request.NewErrParamMinLen(\"ImageOverride\", 1))",
          "12127:  }",
          "12128:  if s.ProjectName == nil {",
          "12129:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "12130:  }",
          "12131:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "12132:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "12133:  }",
          "12134:  if s.QueuedTimeoutInMinutesOverride != nil && *s.QueuedTimeoutInMinutesOverride < 5 {",
          "12135:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutesOverride\", 5))",
          "12136:  }",
          "12137:  if s.ServiceRoleOverride != nil && len(*s.ServiceRoleOverride) < 1 {",
          "12138:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRoleOverride\", 1))",
          "12139:  }",
          "12140:  if s.ArtifactsOverride != nil {",
          "12141:   if err := s.ArtifactsOverride.Validate(); err != nil {",
          "12142:    invalidParams.AddNested(\"ArtifactsOverride\", err.(request.ErrInvalidParams))",
          "12143:   }",
          "12144:  }",
          "12145:  if s.BuildBatchConfigOverride != nil {",
          "12146:   if err := s.BuildBatchConfigOverride.Validate(); err != nil {",
          "12147:    invalidParams.AddNested(\"BuildBatchConfigOverride\", err.(request.ErrInvalidParams))",
          "12148:   }",
          "12149:  }",
          "12150:  if s.CacheOverride != nil {",
          "12151:   if err := s.CacheOverride.Validate(); err != nil {",
          "12152:    invalidParams.AddNested(\"CacheOverride\", err.(request.ErrInvalidParams))",
          "12153:   }",
          "12154:  }",
          "12155:  if s.EnvironmentVariablesOverride != nil {",
          "12156:   for i, v := range s.EnvironmentVariablesOverride {",
          "12157:    if v == nil {",
          "12158:     continue",
          "12159:    }",
          "12160:    if err := v.Validate(); err != nil {",
          "12161:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariablesOverride\", i), err.(request.ErrInvalidParams))",
          "12162:    }",
          "12163:   }",
          "12164:  }",
          "12165:  if s.GitSubmodulesConfigOverride != nil {",
          "12166:   if err := s.GitSubmodulesConfigOverride.Validate(); err != nil {",
          "12167:    invalidParams.AddNested(\"GitSubmodulesConfigOverride\", err.(request.ErrInvalidParams))",
          "12168:   }",
          "12169:  }",
          "12170:  if s.LogsConfigOverride != nil {",
          "12171:   if err := s.LogsConfigOverride.Validate(); err != nil {",
          "12172:    invalidParams.AddNested(\"LogsConfigOverride\", err.(request.ErrInvalidParams))",
          "12173:   }",
          "12174:  }",
          "12175:  if s.RegistryCredentialOverride != nil {",
          "12176:   if err := s.RegistryCredentialOverride.Validate(); err != nil {",
          "12177:    invalidParams.AddNested(\"RegistryCredentialOverride\", err.(request.ErrInvalidParams))",
          "12178:   }",
          "12179:  }",
          "12180:  if s.SecondaryArtifactsOverride != nil {",
          "12181:   for i, v := range s.SecondaryArtifactsOverride {",
          "12182:    if v == nil {",
          "12183:     continue",
          "12184:    }",
          "12185:    if err := v.Validate(); err != nil {",
          "12186:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifactsOverride\", i), err.(request.ErrInvalidParams))",
          "12187:    }",
          "12188:   }",
          "12189:  }",
          "12190:  if s.SecondarySourcesOverride != nil {",
          "12191:   for i, v := range s.SecondarySourcesOverride {",
          "12192:    if v == nil {",
          "12193:     continue",
          "12194:    }",
          "12195:    if err := v.Validate(); err != nil {",
          "12196:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourcesOverride\", i), err.(request.ErrInvalidParams))",
          "12197:    }",
          "12198:   }",
          "12199:  }",
          "12200:  if s.SecondarySourcesVersionOverride != nil {",
          "12201:   for i, v := range s.SecondarySourcesVersionOverride {",
          "12202:    if v == nil {",
          "12203:     continue",
          "12204:    }",
          "12205:    if err := v.Validate(); err != nil {",
          "12206:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourcesVersionOverride\", i), err.(request.ErrInvalidParams))",
          "12207:    }",
          "12208:   }",
          "12209:  }",
          "12210:  if s.SourceAuthOverride != nil {",
          "12211:   if err := s.SourceAuthOverride.Validate(); err != nil {",
          "12212:    invalidParams.AddNested(\"SourceAuthOverride\", err.(request.ErrInvalidParams))",
          "12213:   }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "9098:  return nil",
          "9099: }",
          "9104:  return s",
          "9105: }",
          "9110:  return s",
          "9111: }",
          "9116:  return s",
          "9117: }",
          "9143: }",
          "9148: }",
          "9153: }",
          "9169: }",
          "9174:  return s",
          "9175: }",
          "9180:  return s",
          "9181: }",
          "9186:  return s",
          "9187: }",
          "9192:  return s",
          "9193: }",
          "9198:  return s",
          "9199: }",
          "9220: }",
          "9225: }",
          "9230: }",
          "9243: }",
          "9248:  return s",
          "9249: }",
          "9254:  return s",
          "9255: }",
          "9260:  _ struct{} `type:\"structure\"`",
          "9272: }",
          "9276:  return awsutil.Prettify(s)",
          "9277: }",
          "9281:  return s.String()",
          "9282: }",
          "9299:  return s",
          "9300: }",
          "",
          "[Removed Lines]",
          "9102: func (s *S3LogsConfig) SetEncryptionDisabled(v bool) *S3LogsConfig {",
          "9103:  s.EncryptionDisabled = &v",
          "9108: func (s *S3LogsConfig) SetLocation(v string) *S3LogsConfig {",
          "9109:  s.Location = &v",
          "9114: func (s *S3LogsConfig) SetStatus(v string) *S3LogsConfig {",
          "9115:  s.Status = &v",
          "9120: type S3ReportExportConfig struct {",
          "9121:  _ struct{} `type:\"structure\"`",
          "9124:  Bucket *string `locationName:\"bucket\" min:\"1\" type:\"string\"`",
          "9127:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9130:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "9139:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ReportPackagingType\"`",
          "9142:  Path *string `locationName:\"path\" type:\"string\"`",
          "9146: func (s S3ReportExportConfig) String() string {",
          "9147:  return awsutil.Prettify(s)",
          "9151: func (s S3ReportExportConfig) GoString() string {",
          "9152:  return s.String()",
          "9156: func (s *S3ReportExportConfig) Validate() error {",
          "9157:  invalidParams := request.ErrInvalidParams{Context: \"S3ReportExportConfig\"}",
          "9158:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "9159:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "9160:  }",
          "9161:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "9162:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "9163:  }",
          "9165:  if invalidParams.Len() > 0 {",
          "9166:   return invalidParams",
          "9167:  }",
          "9168:  return nil",
          "9172: func (s *S3ReportExportConfig) SetBucket(v string) *S3ReportExportConfig {",
          "9173:  s.Bucket = &v",
          "9178: func (s *S3ReportExportConfig) SetEncryptionDisabled(v bool) *S3ReportExportConfig {",
          "9179:  s.EncryptionDisabled = &v",
          "9184: func (s *S3ReportExportConfig) SetEncryptionKey(v string) *S3ReportExportConfig {",
          "9185:  s.EncryptionKey = &v",
          "9190: func (s *S3ReportExportConfig) SetPackaging(v string) *S3ReportExportConfig {",
          "9191:  s.Packaging = &v",
          "9196: func (s *S3ReportExportConfig) SetPath(v string) *S3ReportExportConfig {",
          "9197:  s.Path = &v",
          "9206: type SourceAuth struct {",
          "9207:  _ struct{} `type:\"structure\"`",
          "9210:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "9219:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceAuthType\"`",
          "9223: func (s SourceAuth) String() string {",
          "9224:  return awsutil.Prettify(s)",
          "9228: func (s SourceAuth) GoString() string {",
          "9229:  return s.String()",
          "9233: func (s *SourceAuth) Validate() error {",
          "9234:  invalidParams := request.ErrInvalidParams{Context: \"SourceAuth\"}",
          "9235:  if s.Type == nil {",
          "9236:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "9237:  }",
          "9239:  if invalidParams.Len() > 0 {",
          "9240:   return invalidParams",
          "9241:  }",
          "9242:  return nil",
          "9246: func (s *SourceAuth) SetResource(v string) *SourceAuth {",
          "9247:  s.Resource = &v",
          "9252: func (s *SourceAuth) SetType(v string) *SourceAuth {",
          "9253:  s.Type = &v",
          "9259: type SourceCredentialsInfo struct {",
          "9263:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "9267:  AuthType *string `locationName:\"authType\" type:\"string\" enum:\"AuthType\"`",
          "9271:  ServerType *string `locationName:\"serverType\" type:\"string\" enum:\"ServerType\"`",
          "9275: func (s SourceCredentialsInfo) String() string {",
          "9280: func (s SourceCredentialsInfo) GoString() string {",
          "9285: func (s *SourceCredentialsInfo) SetArn(v string) *SourceCredentialsInfo {",
          "9286:  s.Arn = &v",
          "9287:  return s",
          "9288: }",
          "9291: func (s *SourceCredentialsInfo) SetAuthType(v string) *SourceCredentialsInfo {",
          "9292:  s.AuthType = &v",
          "9293:  return s",
          "9294: }",
          "9297: func (s *SourceCredentialsInfo) SetServerType(v string) *SourceCredentialsInfo {",
          "9298:  s.ServerType = &v",
          "",
          "[Added Lines]",
          "12223: func (s *StartBuildBatchInput) SetArtifactsOverride(v *ProjectArtifacts) *StartBuildBatchInput {",
          "12224:  s.ArtifactsOverride = v",
          "12229: func (s *StartBuildBatchInput) SetBuildBatchConfigOverride(v *ProjectBuildBatchConfig) *StartBuildBatchInput {",
          "12230:  s.BuildBatchConfigOverride = v",
          "12235: func (s *StartBuildBatchInput) SetBuildTimeoutInMinutesOverride(v int64) *StartBuildBatchInput {",
          "12236:  s.BuildTimeoutInMinutesOverride = &v",
          "12241: func (s *StartBuildBatchInput) SetBuildspecOverride(v string) *StartBuildBatchInput {",
          "12242:  s.BuildspecOverride = &v",
          "12243:  return s",
          "12244: }",
          "12247: func (s *StartBuildBatchInput) SetCacheOverride(v *ProjectCache) *StartBuildBatchInput {",
          "12248:  s.CacheOverride = v",
          "12249:  return s",
          "12250: }",
          "12253: func (s *StartBuildBatchInput) SetCertificateOverride(v string) *StartBuildBatchInput {",
          "12254:  s.CertificateOverride = &v",
          "12255:  return s",
          "12256: }",
          "12259: func (s *StartBuildBatchInput) SetComputeTypeOverride(v string) *StartBuildBatchInput {",
          "12260:  s.ComputeTypeOverride = &v",
          "12261:  return s",
          "12262: }",
          "12265: func (s *StartBuildBatchInput) SetEncryptionKeyOverride(v string) *StartBuildBatchInput {",
          "12266:  s.EncryptionKeyOverride = &v",
          "12267:  return s",
          "12268: }",
          "12271: func (s *StartBuildBatchInput) SetEnvironmentTypeOverride(v string) *StartBuildBatchInput {",
          "12272:  s.EnvironmentTypeOverride = &v",
          "12273:  return s",
          "12277: func (s *StartBuildBatchInput) SetEnvironmentVariablesOverride(v []*EnvironmentVariable) *StartBuildBatchInput {",
          "12278:  s.EnvironmentVariablesOverride = v",
          "12279:  return s",
          "12280: }",
          "12283: func (s *StartBuildBatchInput) SetGitCloneDepthOverride(v int64) *StartBuildBatchInput {",
          "12284:  s.GitCloneDepthOverride = &v",
          "12285:  return s",
          "12286: }",
          "12289: func (s *StartBuildBatchInput) SetGitSubmodulesConfigOverride(v *GitSubmodulesConfig) *StartBuildBatchInput {",
          "12290:  s.GitSubmodulesConfigOverride = v",
          "12291:  return s",
          "12292: }",
          "12295: func (s *StartBuildBatchInput) SetIdempotencyToken(v string) *StartBuildBatchInput {",
          "12296:  s.IdempotencyToken = &v",
          "12297:  return s",
          "12301: func (s *StartBuildBatchInput) SetImageOverride(v string) *StartBuildBatchInput {",
          "12302:  s.ImageOverride = &v",
          "12303:  return s",
          "12307: func (s *StartBuildBatchInput) SetImagePullCredentialsTypeOverride(v string) *StartBuildBatchInput {",
          "12308:  s.ImagePullCredentialsTypeOverride = &v",
          "12309:  return s",
          "12310: }",
          "12313: func (s *StartBuildBatchInput) SetInsecureSslOverride(v bool) *StartBuildBatchInput {",
          "12314:  s.InsecureSslOverride = &v",
          "12315:  return s",
          "12319: func (s *StartBuildBatchInput) SetLogsConfigOverride(v *LogsConfig) *StartBuildBatchInput {",
          "12320:  s.LogsConfigOverride = v",
          "12325: func (s *StartBuildBatchInput) SetPrivilegedModeOverride(v bool) *StartBuildBatchInput {",
          "12326:  s.PrivilegedModeOverride = &v",
          "12331: func (s *StartBuildBatchInput) SetProjectName(v string) *StartBuildBatchInput {",
          "12332:  s.ProjectName = &v",
          "12337: func (s *StartBuildBatchInput) SetQueuedTimeoutInMinutesOverride(v int64) *StartBuildBatchInput {",
          "12338:  s.QueuedTimeoutInMinutesOverride = &v",
          "12343: func (s *StartBuildBatchInput) SetRegistryCredentialOverride(v *RegistryCredential) *StartBuildBatchInput {",
          "12344:  s.RegistryCredentialOverride = v",
          "12349: func (s *StartBuildBatchInput) SetReportBuildBatchStatusOverride(v bool) *StartBuildBatchInput {",
          "12350:  s.ReportBuildBatchStatusOverride = &v",
          "12351:  return s",
          "12352: }",
          "12355: func (s *StartBuildBatchInput) SetSecondaryArtifactsOverride(v []*ProjectArtifacts) *StartBuildBatchInput {",
          "12356:  s.SecondaryArtifactsOverride = v",
          "12357:  return s",
          "12358: }",
          "12361: func (s *StartBuildBatchInput) SetSecondarySourcesOverride(v []*ProjectSource) *StartBuildBatchInput {",
          "12362:  s.SecondarySourcesOverride = v",
          "12363:  return s",
          "12367: func (s *StartBuildBatchInput) SetSecondarySourcesVersionOverride(v []*ProjectSourceVersion) *StartBuildBatchInput {",
          "12368:  s.SecondarySourcesVersionOverride = v",
          "12369:  return s",
          "12373: func (s *StartBuildBatchInput) SetServiceRoleOverride(v string) *StartBuildBatchInput {",
          "12374:  s.ServiceRoleOverride = &v",
          "12375:  return s",
          "12379: func (s *StartBuildBatchInput) SetSourceAuthOverride(v *SourceAuth) *StartBuildBatchInput {",
          "12380:  s.SourceAuthOverride = v",
          "12381:  return s",
          "12382: }",
          "12385: func (s *StartBuildBatchInput) SetSourceLocationOverride(v string) *StartBuildBatchInput {",
          "12386:  s.SourceLocationOverride = &v",
          "12387:  return s",
          "12391: func (s *StartBuildBatchInput) SetSourceTypeOverride(v string) *StartBuildBatchInput {",
          "12392:  s.SourceTypeOverride = &v",
          "12397: func (s *StartBuildBatchInput) SetSourceVersion(v string) *StartBuildBatchInput {",
          "12398:  s.SourceVersion = &v",
          "12402: type StartBuildBatchOutput struct {",
          "12406:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "12410: func (s StartBuildBatchOutput) String() string {",
          "12415: func (s StartBuildBatchOutput) GoString() string {",
          "12420: func (s *StartBuildBatchOutput) SetBuildBatch(v *BuildBatch) *StartBuildBatchOutput {",
          "12421:  s.BuildBatch = v",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "9804:  return s",
          "9805: }",
          "9807: type StopBuildInput struct {",
          "9808:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12940: type StopBuildBatchInput struct {",
          "12941:  _ struct{} `type:\"structure\"`",
          "12946:  Id *string `locationName:\"id\" min:\"1\" type:\"string\" required:\"true\"`",
          "12947: }",
          "12950: func (s StopBuildBatchInput) String() string {",
          "12951:  return awsutil.Prettify(s)",
          "12952: }",
          "12955: func (s StopBuildBatchInput) GoString() string {",
          "12956:  return s.String()",
          "12957: }",
          "12960: func (s *StopBuildBatchInput) Validate() error {",
          "12961:  invalidParams := request.ErrInvalidParams{Context: \"StopBuildBatchInput\"}",
          "12962:  if s.Id == nil {",
          "12963:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "12964:  }",
          "12965:  if s.Id != nil && len(*s.Id) < 1 {",
          "12966:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "12967:  }",
          "12969:  if invalidParams.Len() > 0 {",
          "12970:   return invalidParams",
          "12971:  }",
          "12972:  return nil",
          "12973: }",
          "12976: func (s *StopBuildBatchInput) SetId(v string) *StopBuildBatchInput {",
          "12977:  s.Id = &v",
          "12978:  return s",
          "12979: }",
          "12981: type StopBuildBatchOutput struct {",
          "12982:  _ struct{} `type:\"structure\"`",
          "12985:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "12986: }",
          "12989: func (s StopBuildBatchOutput) String() string {",
          "12990:  return awsutil.Prettify(s)",
          "12991: }",
          "12994: func (s StopBuildBatchOutput) GoString() string {",
          "12995:  return s.String()",
          "12996: }",
          "12999: func (s *StopBuildBatchOutput) SetBuildBatch(v *BuildBatch) *StopBuildBatchOutput {",
          "13000:  s.BuildBatch = v",
          "13001:  return s",
          "13002: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "10095:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "10099:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13295:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "10230:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "10231:   }",
          "10232:  }",
          "10233:  if s.Cache != nil {",
          "10234:   if err := s.Cache.Validate(); err != nil {",
          "10235:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13433:  if s.BuildBatchConfig != nil {",
          "13434:   if err := s.BuildBatchConfig.Validate(); err != nil {",
          "13435:    invalidParams.AddNested(\"BuildBatchConfig\", err.(request.ErrInvalidParams))",
          "13436:   }",
          "13437:  }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "10314:  return s",
          "10315: }",
          "10318: func (s *UpdateProjectInput) SetCache(v *ProjectCache) *UpdateProjectInput {",
          "10319:  s.Cache = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13523: func (s *UpdateProjectInput) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *UpdateProjectInput {",
          "13524:  s.BuildBatchConfig = v",
          "13525:  return s",
          "13526: }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "10555:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13769:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "10602:  return s",
          "10603: }",
          "10606: func (s *UpdateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *UpdateWebhookInput {",
          "10607:  s.FilterGroups = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13820: func (s *UpdateWebhookInput) SetBuildType(v string) *UpdateWebhookInput {",
          "13821:  s.BuildType = &v",
          "13822:  return s",
          "13823: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "10713:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13936:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "10752:  return s",
          "10753: }",
          "10756: func (s *Webhook) SetFilterGroups(v [][]*WebhookFilter) *Webhook {",
          "10757:  s.FilterGroups = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13979: func (s *Webhook) SetBuildType(v string) *Webhook {",
          "13980:  s.BuildType = &v",
          "13981:  return s",
          "13982: }",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "10926:  AuthTypePersonalAccessToken = \"PERSONAL_ACCESS_TOKEN\"",
          "10927: )",
          "10929: const (",
          "10931:  BuildPhaseTypeSubmitted = \"SUBMITTED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14158: const (",
          "14160:  BuildBatchPhaseTypeSubmitted = \"SUBMITTED\"",
          "14163:  BuildBatchPhaseTypeDownloadBatchspec = \"DOWNLOAD_BATCHSPEC\"",
          "14166:  BuildBatchPhaseTypeInProgress = \"IN_PROGRESS\"",
          "14169:  BuildBatchPhaseTypeCombineArtifacts = \"COMBINE_ARTIFACTS\"",
          "14172:  BuildBatchPhaseTypeSucceeded = \"SUCCEEDED\"",
          "14175:  BuildBatchPhaseTypeFailed = \"FAILED\"",
          "14178:  BuildBatchPhaseTypeStopped = \"STOPPED\"",
          "14179: )",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "11108:  ProjectSortByTypeLastModifiedTime = \"LAST_MODIFIED_TIME\"",
          "11109: )",
          "11111: const (",
          "11113:  ReportExportConfigTypeS3 = \"S3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14363: const (",
          "14365:  ReportCodeCoverageSortByTypeLineCoveragePercentage = \"LINE_COVERAGE_PERCENTAGE\"",
          "14368:  ReportCodeCoverageSortByTypeFilePath = \"FILE_PATH\"",
          "14369: )",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "11155: const (",
          "11157:  ReportTypeTest = \"TEST\"",
          "11158: )",
          "11160: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14420:  ReportTypeCodeCoverage = \"CODE_COVERAGE\"",
          "14421: )",
          "14423: const (",
          "14425:  RetryBuildBatchTypeRetryAllBuilds = \"RETRY_ALL_BUILDS\"",
          "14428:  RetryBuildBatchTypeRetryFailedBuilds = \"RETRY_FAILED_BUILDS\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "11232:  StatusTypeStopped = \"STOPPED\"",
          "11233: )",
          "11235: const (",
          "11237:  WebhookFilterTypeEvent = \"EVENT\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14506: const (",
          "14508:  WebhookBuildTypeBuild = \"BUILD\"",
          "14511:  WebhookBuildTypeBuildBatch = \"BUILD_BATCH\"",
          "14512: )",
          "",
          "---------------"
        ],
        "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go": [
          "File: service/codebuild/codebuildiface/interface.go -> service/codebuild/codebuildiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  BatchDeleteBuildsWithContext(aws.Context, *codebuild.BatchDeleteBuildsInput, ...request.Option) (*codebuild.BatchDeleteBuildsOutput, error)",
          "65:  BatchDeleteBuildsRequest(*codebuild.BatchDeleteBuildsInput) (*request.Request, *codebuild.BatchDeleteBuildsOutput)",
          "67:  BatchGetBuilds(*codebuild.BatchGetBuildsInput) (*codebuild.BatchGetBuildsOutput, error)",
          "68:  BatchGetBuildsWithContext(aws.Context, *codebuild.BatchGetBuildsInput, ...request.Option) (*codebuild.BatchGetBuildsOutput, error)",
          "69:  BatchGetBuildsRequest(*codebuild.BatchGetBuildsInput) (*request.Request, *codebuild.BatchGetBuildsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  BatchGetBuildBatches(*codebuild.BatchGetBuildBatchesInput) (*codebuild.BatchGetBuildBatchesOutput, error)",
          "68:  BatchGetBuildBatchesWithContext(aws.Context, *codebuild.BatchGetBuildBatchesInput, ...request.Option) (*codebuild.BatchGetBuildBatchesOutput, error)",
          "69:  BatchGetBuildBatchesRequest(*codebuild.BatchGetBuildBatchesInput) (*request.Request, *codebuild.BatchGetBuildBatchesOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  CreateWebhookWithContext(aws.Context, *codebuild.CreateWebhookInput, ...request.Option) (*codebuild.CreateWebhookOutput, error)",
          "93:  CreateWebhookRequest(*codebuild.CreateWebhookInput) (*request.Request, *codebuild.CreateWebhookOutput)",
          "95:  DeleteProject(*codebuild.DeleteProjectInput) (*codebuild.DeleteProjectOutput, error)",
          "96:  DeleteProjectWithContext(aws.Context, *codebuild.DeleteProjectInput, ...request.Option) (*codebuild.DeleteProjectOutput, error)",
          "97:  DeleteProjectRequest(*codebuild.DeleteProjectInput) (*request.Request, *codebuild.DeleteProjectOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  DeleteBuildBatch(*codebuild.DeleteBuildBatchInput) (*codebuild.DeleteBuildBatchOutput, error)",
          "100:  DeleteBuildBatchWithContext(aws.Context, *codebuild.DeleteBuildBatchInput, ...request.Option) (*codebuild.DeleteBuildBatchOutput, error)",
          "101:  DeleteBuildBatchRequest(*codebuild.DeleteBuildBatchInput) (*request.Request, *codebuild.DeleteBuildBatchOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:  DeleteWebhookWithContext(aws.Context, *codebuild.DeleteWebhookInput, ...request.Option) (*codebuild.DeleteWebhookOutput, error)",
          "117:  DeleteWebhookRequest(*codebuild.DeleteWebhookInput) (*request.Request, *codebuild.DeleteWebhookOutput)",
          "119:  DescribeTestCases(*codebuild.DescribeTestCasesInput) (*codebuild.DescribeTestCasesOutput, error)",
          "120:  DescribeTestCasesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, ...request.Option) (*codebuild.DescribeTestCasesOutput, error)",
          "121:  DescribeTestCasesRequest(*codebuild.DescribeTestCasesInput) (*request.Request, *codebuild.DescribeTestCasesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:  DescribeCodeCoverages(*codebuild.DescribeCodeCoveragesInput) (*codebuild.DescribeCodeCoveragesOutput, error)",
          "128:  DescribeCodeCoveragesWithContext(aws.Context, *codebuild.DescribeCodeCoveragesInput, ...request.Option) (*codebuild.DescribeCodeCoveragesOutput, error)",
          "129:  DescribeCodeCoveragesRequest(*codebuild.DescribeCodeCoveragesInput) (*request.Request, *codebuild.DescribeCodeCoveragesOutput)",
          "131:  DescribeCodeCoveragesPages(*codebuild.DescribeCodeCoveragesInput, func(*codebuild.DescribeCodeCoveragesOutput, bool) bool) error",
          "132:  DescribeCodeCoveragesPagesWithContext(aws.Context, *codebuild.DescribeCodeCoveragesInput, func(*codebuild.DescribeCodeCoveragesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "135:  InvalidateProjectCacheWithContext(aws.Context, *codebuild.InvalidateProjectCacheInput, ...request.Option) (*codebuild.InvalidateProjectCacheOutput, error)",
          "136:  InvalidateProjectCacheRequest(*codebuild.InvalidateProjectCacheInput) (*request.Request, *codebuild.InvalidateProjectCacheOutput)",
          "138:  ListBuilds(*codebuild.ListBuildsInput) (*codebuild.ListBuildsOutput, error)",
          "139:  ListBuildsWithContext(aws.Context, *codebuild.ListBuildsInput, ...request.Option) (*codebuild.ListBuildsOutput, error)",
          "140:  ListBuildsRequest(*codebuild.ListBuildsInput) (*request.Request, *codebuild.ListBuildsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  ListBuildBatches(*codebuild.ListBuildBatchesInput) (*codebuild.ListBuildBatchesOutput, error)",
          "154:  ListBuildBatchesWithContext(aws.Context, *codebuild.ListBuildBatchesInput, ...request.Option) (*codebuild.ListBuildBatchesOutput, error)",
          "155:  ListBuildBatchesRequest(*codebuild.ListBuildBatchesInput) (*request.Request, *codebuild.ListBuildBatchesOutput)",
          "157:  ListBuildBatchesPages(*codebuild.ListBuildBatchesInput, func(*codebuild.ListBuildBatchesOutput, bool) bool) error",
          "158:  ListBuildBatchesPagesWithContext(aws.Context, *codebuild.ListBuildBatchesInput, func(*codebuild.ListBuildBatchesOutput, bool) bool, ...request.Option) error",
          "160:  ListBuildBatchesForProject(*codebuild.ListBuildBatchesForProjectInput) (*codebuild.ListBuildBatchesForProjectOutput, error)",
          "161:  ListBuildBatchesForProjectWithContext(aws.Context, *codebuild.ListBuildBatchesForProjectInput, ...request.Option) (*codebuild.ListBuildBatchesForProjectOutput, error)",
          "162:  ListBuildBatchesForProjectRequest(*codebuild.ListBuildBatchesForProjectInput) (*request.Request, *codebuild.ListBuildBatchesForProjectOutput)",
          "164:  ListBuildBatchesForProjectPages(*codebuild.ListBuildBatchesForProjectInput, func(*codebuild.ListBuildBatchesForProjectOutput, bool) bool) error",
          "165:  ListBuildBatchesForProjectPagesWithContext(aws.Context, *codebuild.ListBuildBatchesForProjectInput, func(*codebuild.ListBuildBatchesForProjectOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "203:  PutResourcePolicyWithContext(aws.Context, *codebuild.PutResourcePolicyInput, ...request.Option) (*codebuild.PutResourcePolicyOutput, error)",
          "204:  PutResourcePolicyRequest(*codebuild.PutResourcePolicyInput) (*request.Request, *codebuild.PutResourcePolicyOutput)",
          "206:  StartBuild(*codebuild.StartBuildInput) (*codebuild.StartBuildOutput, error)",
          "207:  StartBuildWithContext(aws.Context, *codebuild.StartBuildInput, ...request.Option) (*codebuild.StartBuildOutput, error)",
          "208:  StartBuildRequest(*codebuild.StartBuildInput) (*request.Request, *codebuild.StartBuildOutput)",
          "210:  StopBuild(*codebuild.StopBuildInput) (*codebuild.StopBuildOutput, error)",
          "211:  StopBuildWithContext(aws.Context, *codebuild.StopBuildInput, ...request.Option) (*codebuild.StopBuildOutput, error)",
          "212:  StopBuildRequest(*codebuild.StopBuildInput) (*request.Request, *codebuild.StopBuildOutput)",
          "214:  UpdateProject(*codebuild.UpdateProjectInput) (*codebuild.UpdateProjectOutput, error)",
          "215:  UpdateProjectWithContext(aws.Context, *codebuild.UpdateProjectInput, ...request.Option) (*codebuild.UpdateProjectOutput, error)",
          "216:  UpdateProjectRequest(*codebuild.UpdateProjectInput) (*request.Request, *codebuild.UpdateProjectOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:  RetryBuild(*codebuild.RetryBuildInput) (*codebuild.RetryBuildOutput, error)",
          "236:  RetryBuildWithContext(aws.Context, *codebuild.RetryBuildInput, ...request.Option) (*codebuild.RetryBuildOutput, error)",
          "237:  RetryBuildRequest(*codebuild.RetryBuildInput) (*request.Request, *codebuild.RetryBuildOutput)",
          "239:  RetryBuildBatch(*codebuild.RetryBuildBatchInput) (*codebuild.RetryBuildBatchOutput, error)",
          "240:  RetryBuildBatchWithContext(aws.Context, *codebuild.RetryBuildBatchInput, ...request.Option) (*codebuild.RetryBuildBatchOutput, error)",
          "241:  RetryBuildBatchRequest(*codebuild.RetryBuildBatchInput) (*request.Request, *codebuild.RetryBuildBatchOutput)",
          "247:  StartBuildBatch(*codebuild.StartBuildBatchInput) (*codebuild.StartBuildBatchOutput, error)",
          "248:  StartBuildBatchWithContext(aws.Context, *codebuild.StartBuildBatchInput, ...request.Option) (*codebuild.StartBuildBatchOutput, error)",
          "249:  StartBuildBatchRequest(*codebuild.StartBuildBatchInput) (*request.Request, *codebuild.StartBuildBatchOutput)",
          "255:  StopBuildBatch(*codebuild.StopBuildBatchInput) (*codebuild.StopBuildBatchOutput, error)",
          "256:  StopBuildBatchWithContext(aws.Context, *codebuild.StopBuildBatchInput, ...request.Option) (*codebuild.StopBuildBatchOutput, error)",
          "257:  StopBuildBatchRequest(*codebuild.StopBuildBatchInput) (*request.Request, *codebuild.StopBuildBatchOutput)",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "112575:  CapacityReservationInstancePlatformLinuxwithSqlserverEnterprise = \"Linux with SQL Server Enterprise\"",
          "112576: )",
          "112578: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112578:  CapacityReservationInstancePlatformWindowsByol = \"Windows BYOL\"",
          "",
          "---------------"
        ],
        "service/guardduty/api.go||service/guardduty/api.go": [
          "File: service/guardduty/api.go -> service/guardduty/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2759:  return out, req.Send()",
          "2760: }",
          "2762: const opInviteMembers = \"InviteMembers\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2772: const opGetUsageStatistics = \"GetUsageStatistics\"",
          "2798: func (c *GuardDuty) GetUsageStatisticsRequest(input *GetUsageStatisticsInput) (req *request.Request, output *GetUsageStatisticsOutput) {",
          "2799:  op := &request.Operation{",
          "2800:   Name:       opGetUsageStatistics,",
          "2801:   HTTPMethod: \"POST\",",
          "2802:   HTTPPath:   \"/detector/{detectorId}/usage/statistics\",",
          "2803:   Paginator: &request.Paginator{",
          "2804:    InputTokens:     []string{\"NextToken\"},",
          "2805:    OutputTokens:    []string{\"NextToken\"},",
          "2806:    LimitToken:      \"MaxResults\",",
          "2807:    TruncationToken: \"\",",
          "2808:   },",
          "2809:  }",
          "2811:  if input == nil {",
          "2812:   input = &GetUsageStatisticsInput{}",
          "2813:  }",
          "2815:  output = &GetUsageStatisticsOutput{}",
          "2816:  req = c.newRequest(op, input, output)",
          "2817:  return",
          "2818: }",
          "2844: func (c *GuardDuty) GetUsageStatistics(input *GetUsageStatisticsInput) (*GetUsageStatisticsOutput, error) {",
          "2845:  req, out := c.GetUsageStatisticsRequest(input)",
          "2846:  return out, req.Send()",
          "2847: }",
          "2858: func (c *GuardDuty) GetUsageStatisticsWithContext(ctx aws.Context, input *GetUsageStatisticsInput, opts ...request.Option) (*GetUsageStatisticsOutput, error) {",
          "2859:  req, out := c.GetUsageStatisticsRequest(input)",
          "2860:  req.SetContext(ctx)",
          "2861:  req.ApplyOptions(opts...)",
          "2862:  return out, req.Send()",
          "2863: }",
          "2882: func (c *GuardDuty) GetUsageStatisticsPages(input *GetUsageStatisticsInput, fn func(*GetUsageStatisticsOutput, bool) bool) error {",
          "2883:  return c.GetUsageStatisticsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2884: }",
          "2893: func (c *GuardDuty) GetUsageStatisticsPagesWithContext(ctx aws.Context, input *GetUsageStatisticsInput, fn func(*GetUsageStatisticsOutput, bool) bool, opts ...request.Option) error {",
          "2894:  p := request.Pagination{",
          "2895:   NewRequest: func() (*request.Request, error) {",
          "2896:    var inCpy *GetUsageStatisticsInput",
          "2897:    if input != nil {",
          "2898:     tmp := *input",
          "2899:     inCpy = &tmp",
          "2900:    }",
          "2901:    req, _ := c.GetUsageStatisticsRequest(inCpy)",
          "2902:    req.SetContext(ctx)",
          "2903:    req.ApplyOptions(opts...)",
          "2904:    return req, nil",
          "2905:   },",
          "2906:  }",
          "2908:  for p.Next() {",
          "2909:   if !fn(p.Page().(*GetUsageStatisticsOutput), !p.HasNextPage()) {",
          "2910:    break",
          "2911:   }",
          "2912:  }",
          "2914:  return p.Err()",
          "2915: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9727:  return s",
          "9728: }",
          "9731: type IamInstanceProfile struct {",
          "9732:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9885: type GetUsageStatisticsInput struct {",
          "9886:  _ struct{} `type:\"structure\"`",
          "9892:  DetectorId *string `location:\"uri\" locationName:\"detectorId\" min:\"1\" type:\"string\" required:\"true\"`",
          "9895:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9901:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9905:  Unit *string `locationName:\"unit\" type:\"string\"`",
          "9910:  UsageCriteria *UsageCriteria `locationName:\"usageCriteria\" type:\"structure\" required:\"true\"`",
          "9915:  UsageStatisticType *string `locationName:\"usageStatisticsType\" type:\"string\" required:\"true\" enum:\"UsageStatisticType\"`",
          "9916: }",
          "9919: func (s GetUsageStatisticsInput) String() string {",
          "9920:  return awsutil.Prettify(s)",
          "9921: }",
          "9924: func (s GetUsageStatisticsInput) GoString() string {",
          "9925:  return s.String()",
          "9926: }",
          "9929: func (s *GetUsageStatisticsInput) Validate() error {",
          "9930:  invalidParams := request.ErrInvalidParams{Context: \"GetUsageStatisticsInput\"}",
          "9931:  if s.DetectorId == nil {",
          "9932:   invalidParams.Add(request.NewErrParamRequired(\"DetectorId\"))",
          "9933:  }",
          "9934:  if s.DetectorId != nil && len(*s.DetectorId) < 1 {",
          "9935:   invalidParams.Add(request.NewErrParamMinLen(\"DetectorId\", 1))",
          "9936:  }",
          "9937:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9938:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9939:  }",
          "9940:  if s.UsageCriteria == nil {",
          "9941:   invalidParams.Add(request.NewErrParamRequired(\"UsageCriteria\"))",
          "9942:  }",
          "9943:  if s.UsageStatisticType == nil {",
          "9944:   invalidParams.Add(request.NewErrParamRequired(\"UsageStatisticType\"))",
          "9945:  }",
          "9946:  if s.UsageCriteria != nil {",
          "9947:   if err := s.UsageCriteria.Validate(); err != nil {",
          "9948:    invalidParams.AddNested(\"UsageCriteria\", err.(request.ErrInvalidParams))",
          "9949:   }",
          "9950:  }",
          "9952:  if invalidParams.Len() > 0 {",
          "9953:   return invalidParams",
          "9954:  }",
          "9955:  return nil",
          "9956: }",
          "9959: func (s *GetUsageStatisticsInput) SetDetectorId(v string) *GetUsageStatisticsInput {",
          "9960:  s.DetectorId = &v",
          "9961:  return s",
          "9962: }",
          "9965: func (s *GetUsageStatisticsInput) SetMaxResults(v int64) *GetUsageStatisticsInput {",
          "9966:  s.MaxResults = &v",
          "9967:  return s",
          "9968: }",
          "9971: func (s *GetUsageStatisticsInput) SetNextToken(v string) *GetUsageStatisticsInput {",
          "9972:  s.NextToken = &v",
          "9973:  return s",
          "9974: }",
          "9977: func (s *GetUsageStatisticsInput) SetUnit(v string) *GetUsageStatisticsInput {",
          "9978:  s.Unit = &v",
          "9979:  return s",
          "9980: }",
          "9983: func (s *GetUsageStatisticsInput) SetUsageCriteria(v *UsageCriteria) *GetUsageStatisticsInput {",
          "9984:  s.UsageCriteria = v",
          "9985:  return s",
          "9986: }",
          "9989: func (s *GetUsageStatisticsInput) SetUsageStatisticType(v string) *GetUsageStatisticsInput {",
          "9990:  s.UsageStatisticType = &v",
          "9991:  return s",
          "9992: }",
          "9994: type GetUsageStatisticsOutput struct {",
          "9995:  _ struct{} `type:\"structure\"`",
          "9999:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "10003:  UsageStatistics *UsageStatistics `locationName:\"usageStatistics\" type:\"structure\"`",
          "10004: }",
          "10007: func (s GetUsageStatisticsOutput) String() string {",
          "10008:  return awsutil.Prettify(s)",
          "10009: }",
          "10012: func (s GetUsageStatisticsOutput) GoString() string {",
          "10013:  return s.String()",
          "10014: }",
          "10017: func (s *GetUsageStatisticsOutput) SetNextToken(v string) *GetUsageStatisticsOutput {",
          "10018:  s.NextToken = &v",
          "10019:  return s",
          "10020: }",
          "10023: func (s *GetUsageStatisticsOutput) SetUsageStatistics(v *UsageStatistics) *GetUsageStatisticsOutput {",
          "10024:  s.UsageStatistics = v",
          "10025:  return s",
          "10026: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12790:  return s",
          "12791: }",
          "12793: type UnarchiveFindingsInput struct {",
          "12794:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13086: type Total struct {",
          "13087:  _ struct{} `type:\"structure\"`",
          "13090:  Amount *string `locationName:\"amount\" type:\"string\"`",
          "13093:  Unit *string `locationName:\"unit\" type:\"string\"`",
          "13094: }",
          "13097: func (s Total) String() string {",
          "13098:  return awsutil.Prettify(s)",
          "13099: }",
          "13102: func (s Total) GoString() string {",
          "13103:  return s.String()",
          "13104: }",
          "13107: func (s *Total) SetAmount(v string) *Total {",
          "13108:  s.Amount = &v",
          "13109:  return s",
          "13110: }",
          "13113: func (s *Total) SetUnit(v string) *Total {",
          "13114:  s.Unit = &v",
          "13115:  return s",
          "13116: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13752:  return s.String()",
          "13753: }",
          "13755: const (",
          "13757:  AdminStatusEnabled = \"ENABLED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14082: type UsageAccountResult struct {",
          "14083:  _ struct{} `type:\"structure\"`",
          "14086:  AccountId *string `locationName:\"accountId\" min:\"12\" type:\"string\"`",
          "14089:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14090: }",
          "14093: func (s UsageAccountResult) String() string {",
          "14094:  return awsutil.Prettify(s)",
          "14095: }",
          "14098: func (s UsageAccountResult) GoString() string {",
          "14099:  return s.String()",
          "14100: }",
          "14103: func (s *UsageAccountResult) SetAccountId(v string) *UsageAccountResult {",
          "14104:  s.AccountId = &v",
          "14105:  return s",
          "14106: }",
          "14109: func (s *UsageAccountResult) SetTotal(v *Total) *UsageAccountResult {",
          "14110:  s.Total = v",
          "14111:  return s",
          "14112: }",
          "14115: type UsageCriteria struct {",
          "14116:  _ struct{} `type:\"structure\"`",
          "14119:  AccountIds []*string `locationName:\"accountIds\" min:\"1\" type:\"list\"`",
          "14124:  DataSources []*string `locationName:\"dataSources\" type:\"list\" required:\"true\"`",
          "14128:  Resources []*string `locationName:\"resources\" type:\"list\"`",
          "14129: }",
          "14132: func (s UsageCriteria) String() string {",
          "14133:  return awsutil.Prettify(s)",
          "14134: }",
          "14137: func (s UsageCriteria) GoString() string {",
          "14138:  return s.String()",
          "14139: }",
          "14142: func (s *UsageCriteria) Validate() error {",
          "14143:  invalidParams := request.ErrInvalidParams{Context: \"UsageCriteria\"}",
          "14144:  if s.AccountIds != nil && len(s.AccountIds) < 1 {",
          "14145:   invalidParams.Add(request.NewErrParamMinLen(\"AccountIds\", 1))",
          "14146:  }",
          "14147:  if s.DataSources == nil {",
          "14148:   invalidParams.Add(request.NewErrParamRequired(\"DataSources\"))",
          "14149:  }",
          "14151:  if invalidParams.Len() > 0 {",
          "14152:   return invalidParams",
          "14153:  }",
          "14154:  return nil",
          "14155: }",
          "14158: func (s *UsageCriteria) SetAccountIds(v []*string) *UsageCriteria {",
          "14159:  s.AccountIds = v",
          "14160:  return s",
          "14161: }",
          "14164: func (s *UsageCriteria) SetDataSources(v []*string) *UsageCriteria {",
          "14165:  s.DataSources = v",
          "14166:  return s",
          "14167: }",
          "14170: func (s *UsageCriteria) SetResources(v []*string) *UsageCriteria {",
          "14171:  s.Resources = v",
          "14172:  return s",
          "14173: }",
          "14176: type UsageDataSourceResult struct {",
          "14177:  _ struct{} `type:\"structure\"`",
          "14180:  DataSource *string `locationName:\"dataSource\" type:\"string\" enum:\"DataSource\"`",
          "14183:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14184: }",
          "14187: func (s UsageDataSourceResult) String() string {",
          "14188:  return awsutil.Prettify(s)",
          "14189: }",
          "14192: func (s UsageDataSourceResult) GoString() string {",
          "14193:  return s.String()",
          "14194: }",
          "14197: func (s *UsageDataSourceResult) SetDataSource(v string) *UsageDataSourceResult {",
          "14198:  s.DataSource = &v",
          "14199:  return s",
          "14200: }",
          "14203: func (s *UsageDataSourceResult) SetTotal(v *Total) *UsageDataSourceResult {",
          "14204:  s.Total = v",
          "14205:  return s",
          "14206: }",
          "14209: type UsageResourceResult struct {",
          "14210:  _ struct{} `type:\"structure\"`",
          "14213:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "14216:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14217: }",
          "14220: func (s UsageResourceResult) String() string {",
          "14221:  return awsutil.Prettify(s)",
          "14222: }",
          "14225: func (s UsageResourceResult) GoString() string {",
          "14226:  return s.String()",
          "14227: }",
          "14230: func (s *UsageResourceResult) SetResource(v string) *UsageResourceResult {",
          "14231:  s.Resource = &v",
          "14232:  return s",
          "14233: }",
          "14236: func (s *UsageResourceResult) SetTotal(v *Total) *UsageResourceResult {",
          "14237:  s.Total = v",
          "14238:  return s",
          "14239: }",
          "14243: type UsageStatistics struct {",
          "14244:  _ struct{} `type:\"structure\"`",
          "14247:  SumByAccount []*UsageAccountResult `locationName:\"sumByAccount\" type:\"list\"`",
          "14250:  SumByDataSource []*UsageDataSourceResult `locationName:\"sumByDataSource\" type:\"list\"`",
          "14253:  SumByResource []*UsageResourceResult `locationName:\"sumByResource\" type:\"list\"`",
          "14257:  TopResources []*UsageResourceResult `locationName:\"topResources\" type:\"list\"`",
          "14258: }",
          "14261: func (s UsageStatistics) String() string {",
          "14262:  return awsutil.Prettify(s)",
          "14263: }",
          "14266: func (s UsageStatistics) GoString() string {",
          "14267:  return s.String()",
          "14268: }",
          "14271: func (s *UsageStatistics) SetSumByAccount(v []*UsageAccountResult) *UsageStatistics {",
          "14272:  s.SumByAccount = v",
          "14273:  return s",
          "14274: }",
          "14277: func (s *UsageStatistics) SetSumByDataSource(v []*UsageDataSourceResult) *UsageStatistics {",
          "14278:  s.SumByDataSource = v",
          "14279:  return s",
          "14280: }",
          "14283: func (s *UsageStatistics) SetSumByResource(v []*UsageResourceResult) *UsageStatistics {",
          "14284:  s.SumByResource = v",
          "14285:  return s",
          "14286: }",
          "14289: func (s *UsageStatistics) SetTopResources(v []*UsageResourceResult) *UsageStatistics {",
          "14290:  s.TopResources = v",
          "14291:  return s",
          "14292: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "13760:  AdminStatusDisableInProgress = \"DISABLE_IN_PROGRESS\"",
          "13761: )",
          "13763: const (",
          "13765:  DataSourceStatusEnabled = \"ENABLED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14302: const (",
          "14304:  DataSourceFlowLogs = \"FLOW_LOGS\"",
          "14307:  DataSourceCloudTrail = \"CLOUD_TRAIL\"",
          "14310:  DataSourceDnsLogs = \"DNS_LOGS\"",
          "14313:  DataSourceS3Logs = \"S3_LOGS\"",
          "14314: )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "13921:  ThreatIntelSetStatusDeleted = \"DELETED\"",
          "13922: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14477: const (",
          "14479:  UsageStatisticTypeSumByAccount = \"SUM_BY_ACCOUNT\"",
          "14482:  UsageStatisticTypeSumByDataSource = \"SUM_BY_DATA_SOURCE\"",
          "14485:  UsageStatisticTypeSumByResource = \"SUM_BY_RESOURCE\"",
          "14488:  UsageStatisticTypeTopResources = \"TOP_RESOURCES\"",
          "14489: )",
          "",
          "---------------"
        ],
        "service/guardduty/guarddutyiface/interface.go||service/guardduty/guarddutyiface/interface.go": [
          "File: service/guardduty/guarddutyiface/interface.go -> service/guardduty/guarddutyiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  GetThreatIntelSetWithContext(aws.Context, *guardduty.GetThreatIntelSetInput, ...request.Option) (*guardduty.GetThreatIntelSetOutput, error)",
          "193:  GetThreatIntelSetRequest(*guardduty.GetThreatIntelSetInput) (*request.Request, *guardduty.GetThreatIntelSetOutput)",
          "195:  InviteMembers(*guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error)",
          "196:  InviteMembersWithContext(aws.Context, *guardduty.InviteMembersInput, ...request.Option) (*guardduty.InviteMembersOutput, error)",
          "197:  InviteMembersRequest(*guardduty.InviteMembersInput) (*request.Request, *guardduty.InviteMembersOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:  GetUsageStatistics(*guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error)",
          "196:  GetUsageStatisticsWithContext(aws.Context, *guardduty.GetUsageStatisticsInput, ...request.Option) (*guardduty.GetUsageStatisticsOutput, error)",
          "197:  GetUsageStatisticsRequest(*guardduty.GetUsageStatisticsInput) (*request.Request, *guardduty.GetUsageStatisticsOutput)",
          "199:  GetUsageStatisticsPages(*guardduty.GetUsageStatisticsInput, func(*guardduty.GetUsageStatisticsOutput, bool) bool) error",
          "200:  GetUsageStatisticsPagesWithContext(aws.Context, *guardduty.GetUsageStatisticsInput, func(*guardduty.GetUsageStatisticsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/kafka/api.go||service/kafka/api.go": [
          "File: service/kafka/api.go -> service/kafka/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1826:  return out, req.Send()",
          "1827: }",
          "1829: const opTagResource = \"TagResource\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1829: const opRebootBroker = \"RebootBroker\"",
          "1855: func (c *Kafka) RebootBrokerRequest(input *RebootBrokerInput) (req *request.Request, output *RebootBrokerOutput) {",
          "1856:  op := &request.Operation{",
          "1857:   Name:       opRebootBroker,",
          "1858:   HTTPMethod: \"PUT\",",
          "1859:   HTTPPath:   \"/v1/clusters/{clusterArn}/reboot-broker\",",
          "1860:  }",
          "1862:  if input == nil {",
          "1863:   input = &RebootBrokerInput{}",
          "1864:  }",
          "1866:  output = &RebootBrokerOutput{}",
          "1867:  req = c.newRequest(op, input, output)",
          "1868:  return",
          "1869: }",
          "1905: func (c *Kafka) RebootBroker(input *RebootBrokerInput) (*RebootBrokerOutput, error) {",
          "1906:  req, out := c.RebootBrokerRequest(input)",
          "1907:  return out, req.Send()",
          "1908: }",
          "1919: func (c *Kafka) RebootBrokerWithContext(ctx aws.Context, input *RebootBrokerInput, opts ...request.Option) (*RebootBrokerOutput, error) {",
          "1920:  req, out := c.RebootBrokerRequest(input)",
          "1921:  req.SetContext(ctx)",
          "1922:  req.ApplyOptions(opts...)",
          "1923:  return out, req.Send()",
          "1924: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5960:  return s",
          "5961: }",
          "5964: type S3 struct {",
          "5965:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6061: type RebootBrokerInput struct {",
          "6062:  _ struct{} `type:\"structure\"`",
          "6067:  BrokerIds []*string `locationName:\"brokerIds\" type:\"list\" required:\"true\"`",
          "6070:  ClusterArn *string `location:\"uri\" locationName:\"clusterArn\" type:\"string\" required:\"true\"`",
          "6071: }",
          "6074: func (s RebootBrokerInput) String() string {",
          "6075:  return awsutil.Prettify(s)",
          "6076: }",
          "6079: func (s RebootBrokerInput) GoString() string {",
          "6080:  return s.String()",
          "6081: }",
          "6084: func (s *RebootBrokerInput) Validate() error {",
          "6085:  invalidParams := request.ErrInvalidParams{Context: \"RebootBrokerInput\"}",
          "6086:  if s.BrokerIds == nil {",
          "6087:   invalidParams.Add(request.NewErrParamRequired(\"BrokerIds\"))",
          "6088:  }",
          "6089:  if s.ClusterArn == nil {",
          "6090:   invalidParams.Add(request.NewErrParamRequired(\"ClusterArn\"))",
          "6091:  }",
          "6092:  if s.ClusterArn != nil && len(*s.ClusterArn) < 1 {",
          "6093:   invalidParams.Add(request.NewErrParamMinLen(\"ClusterArn\", 1))",
          "6094:  }",
          "6096:  if invalidParams.Len() > 0 {",
          "6097:   return invalidParams",
          "6098:  }",
          "6099:  return nil",
          "6100: }",
          "6103: func (s *RebootBrokerInput) SetBrokerIds(v []*string) *RebootBrokerInput {",
          "6104:  s.BrokerIds = v",
          "6105:  return s",
          "6106: }",
          "6109: func (s *RebootBrokerInput) SetClusterArn(v string) *RebootBrokerInput {",
          "6110:  s.ClusterArn = &v",
          "6111:  return s",
          "6112: }",
          "6115: type RebootBrokerOutput struct {",
          "6116:  _ struct{} `type:\"structure\"`",
          "6119:  ClusterArn *string `locationName:\"clusterArn\" type:\"string\"`",
          "6122:  ClusterOperationArn *string `locationName:\"clusterOperationArn\" type:\"string\"`",
          "6123: }",
          "6126: func (s RebootBrokerOutput) String() string {",
          "6127:  return awsutil.Prettify(s)",
          "6128: }",
          "6131: func (s RebootBrokerOutput) GoString() string {",
          "6132:  return s.String()",
          "6133: }",
          "6136: func (s *RebootBrokerOutput) SetClusterArn(v string) *RebootBrokerOutput {",
          "6137:  s.ClusterArn = &v",
          "6138:  return s",
          "6139: }",
          "6142: func (s *RebootBrokerOutput) SetClusterOperationArn(v string) *RebootBrokerOutput {",
          "6143:  s.ClusterOperationArn = &v",
          "6144:  return s",
          "6145: }",
          "",
          "---------------"
        ],
        "service/kafka/kafkaiface/interface.go||service/kafka/kafkaiface/interface.go": [
          "File: service/kafka/kafkaiface/interface.go -> service/kafka/kafkaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  ListTagsForResourceWithContext(aws.Context, *kafka.ListTagsForResourceInput, ...request.Option) (*kafka.ListTagsForResourceOutput, error)",
          "143:  ListTagsForResourceRequest(*kafka.ListTagsForResourceInput) (*request.Request, *kafka.ListTagsForResourceOutput)",
          "145:  TagResource(*kafka.TagResourceInput) (*kafka.TagResourceOutput, error)",
          "146:  TagResourceWithContext(aws.Context, *kafka.TagResourceInput, ...request.Option) (*kafka.TagResourceOutput, error)",
          "147:  TagResourceRequest(*kafka.TagResourceInput) (*request.Request, *kafka.TagResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  RebootBroker(*kafka.RebootBrokerInput) (*kafka.RebootBrokerOutput, error)",
          "146:  RebootBrokerWithContext(aws.Context, *kafka.RebootBrokerInput, ...request.Option) (*kafka.RebootBrokerOutput, error)",
          "147:  RebootBrokerRequest(*kafka.RebootBrokerInput) (*request.Request, *kafka.RebootBrokerOutput)",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go"
        ],
        "service/resourcegroups/api.go||service/resourcegroups/api.go": [
          "File: service/resourcegroups/api.go -> service/resourcegroups/api.go"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12203:  PathId *string `min:\"1\" type:\"string\"`",
          "12214: }",
          "",
          "[Removed Lines]",
          "12208:  ProductId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "12213:  ProvisioningArtifactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "12210:  PathName *string `min:\"1\" type:\"string\"`",
          "12214:  ProductId *string `min:\"1\" type:\"string\"`",
          "12217:  ProductName *string `type:\"string\"`",
          "12221:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "12225:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12229:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "12230:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "12231:  }",
          "12234:  }",
          "12235:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "12236:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "12237:  }",
          "12241:  if s.ProvisioningArtifactId != nil && len(*s.ProvisioningArtifactId) < 1 {",
          "12242:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisioningArtifactId\", 1))",
          "12243:  }",
          "",
          "[Removed Lines]",
          "12232:  if s.ProductId == nil {",
          "12233:   invalidParams.Add(request.NewErrParamRequired(\"ProductId\"))",
          "12238:  if s.ProvisioningArtifactId == nil {",
          "12239:   invalidParams.Add(request.NewErrParamRequired(\"ProvisioningArtifactId\"))",
          "12240:  }",
          "",
          "[Added Lines]",
          "12244:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "12245:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12260:  return s",
          "12261: }",
          "12264: func (s *DescribeProvisioningParametersInput) SetProductId(v string) *DescribeProvisioningParametersInput {",
          "12265:  s.ProductId = &v",
          "12266:  return s",
          "12267: }",
          "12270: func (s *DescribeProvisioningParametersInput) SetProvisioningArtifactId(v string) *DescribeProvisioningParametersInput {",
          "12271:  s.ProvisioningArtifactId = &v",
          "12272:  return s",
          "12273: }",
          "12275: type DescribeProvisioningParametersOutput struct {",
          "12276:  _ struct{} `type:\"structure\"`",
          "12279:  ConstraintSummaries []*ConstraintSummary `type:\"list\"`",
          "12282:  ProvisioningArtifactParameters []*ProvisioningArtifactParameter `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12273: func (s *DescribeProvisioningParametersInput) SetPathName(v string) *DescribeProvisioningParametersInput {",
          "12274:  s.PathName = &v",
          "12275:  return s",
          "12276: }",
          "12285: func (s *DescribeProvisioningParametersInput) SetProductName(v string) *DescribeProvisioningParametersInput {",
          "12286:  s.ProductName = &v",
          "12287:  return s",
          "12288: }",
          "12297: func (s *DescribeProvisioningParametersInput) SetProvisioningArtifactName(v string) *DescribeProvisioningParametersInput {",
          "12298:  s.ProvisioningArtifactName = &v",
          "12299:  return s",
          "12300: }",
          "12309:  ProvisioningArtifactOutputs []*ProvisioningArtifactOutput `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12309:  return s",
          "12310: }",
          "12313: func (s *DescribeProvisioningParametersOutput) SetProvisioningArtifactParameters(v []*ProvisioningArtifactParameter) *DescribeProvisioningParametersOutput {",
          "12314:  s.ProvisioningArtifactParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12343: func (s *DescribeProvisioningParametersOutput) SetProvisioningArtifactOutputs(v []*ProvisioningArtifactOutput) *DescribeProvisioningParametersOutput {",
          "12344:  s.ProvisioningArtifactOutputs = v",
          "12345:  return s",
          "12346: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16287:  PathId *string `min:\"1\" type:\"string\"`",
          "16295:  ProvisionToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "",
          "[Removed Lines]",
          "16292:  ProductId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "16327:  PathName *string `min:\"1\" type:\"string\"`",
          "16330:  ProductId *string `min:\"1\" type:\"string\"`",
          "16333:  ProductName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16301:  ProvisionedProductName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "16306:  ProvisioningArtifactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "16346:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "16350:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16333:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "16334:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "16335:  }",
          "16338:  }",
          "16339:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "16340:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "",
          "[Removed Lines]",
          "16336:  if s.ProductId == nil {",
          "16337:   invalidParams.Add(request.NewErrParamRequired(\"ProductId\"))",
          "",
          "[Added Lines]",
          "16380:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "16381:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16348:  if s.ProvisionedProductName != nil && len(*s.ProvisionedProductName) < 1 {",
          "16349:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductName\", 1))",
          "16350:  }",
          "16354:  if s.ProvisioningArtifactId != nil && len(*s.ProvisioningArtifactId) < 1 {",
          "16355:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisioningArtifactId\", 1))",
          "16356:  }",
          "",
          "[Removed Lines]",
          "16351:  if s.ProvisioningArtifactId == nil {",
          "16352:   invalidParams.Add(request.NewErrParamRequired(\"ProvisioningArtifactId\"))",
          "16353:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "16404:  return s",
          "16405: }",
          "16408: func (s *ProvisionProductInput) SetProductId(v string) *ProvisionProductInput {",
          "16409:  s.ProductId = &v",
          "16410:  return s",
          "16411: }",
          "16414: func (s *ProvisionProductInput) SetProvisionToken(v string) *ProvisionProductInput {",
          "16415:  s.ProvisionToken = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16449: func (s *ProvisionProductInput) SetPathName(v string) *ProvisionProductInput {",
          "16450:  s.PathName = &v",
          "16451:  return s",
          "16452: }",
          "16461: func (s *ProvisionProductInput) SetProductName(v string) *ProvisionProductInput {",
          "16462:  s.ProductName = &v",
          "16463:  return s",
          "16464: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "16428:  return s",
          "16429: }",
          "16432: func (s *ProvisionProductInput) SetProvisioningParameters(v []*ProvisioningParameter) *ProvisionProductInput {",
          "16433:  s.ProvisioningParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16485: func (s *ProvisionProductInput) SetProvisioningArtifactName(v string) *ProvisionProductInput {",
          "16486:  s.ProvisioningArtifactName = &v",
          "16487:  return s",
          "16488: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "17150:  return s",
          "17151: }",
          "17154: type ProvisioningArtifactParameter struct {",
          "17155:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17213: type ProvisioningArtifactOutput struct {",
          "17214:  _ struct{} `type:\"structure\"`",
          "17217:  Description *string `type:\"string\"`",
          "17220:  Key *string `min:\"1\" type:\"string\"`",
          "17221: }",
          "17224: func (s ProvisioningArtifactOutput) String() string {",
          "17225:  return awsutil.Prettify(s)",
          "17226: }",
          "17229: func (s ProvisioningArtifactOutput) GoString() string {",
          "17230:  return s.String()",
          "17231: }",
          "17234: func (s *ProvisioningArtifactOutput) SetDescription(v string) *ProvisioningArtifactOutput {",
          "17235:  s.Description = &v",
          "17236:  return s",
          "17237: }",
          "17240: func (s *ProvisioningArtifactOutput) SetKey(v string) *ProvisioningArtifactOutput {",
          "17241:  s.Key = &v",
          "17242:  return s",
          "17243: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "19953:  AcceptLanguage *string `type:\"string\"`",
          "19957:  PathId *string `min:\"1\" type:\"string\"`",
          "19960:  ProductId *string `min:\"1\" type:\"string\"`",
          "19964:  ProvisionedProductId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20053:  PathName *string `min:\"1\" type:\"string\"`",
          "20059:  ProductName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "19971:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "19974:  ProvisioningParameters []*UpdateProvisioningParameter `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20074:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "20001:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "20002:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "20003:  }",
          "20004:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "20005:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "20006:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20107:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "20108:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "20109:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "20060:  return s",
          "20061: }",
          "20064: func (s *UpdateProvisionedProductInput) SetProductId(v string) *UpdateProvisionedProductInput {",
          "20065:  s.ProductId = &v",
          "20066:  return s",
          "20067: }",
          "20070: func (s *UpdateProvisionedProductInput) SetProvisionedProductId(v string) *UpdateProvisionedProductInput {",
          "20071:  s.ProvisionedProductId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20170: func (s *UpdateProvisionedProductInput) SetPathName(v string) *UpdateProvisionedProductInput {",
          "20171:  s.PathName = &v",
          "20172:  return s",
          "20173: }",
          "20182: func (s *UpdateProvisionedProductInput) SetProductName(v string) *UpdateProvisionedProductInput {",
          "20183:  s.ProductName = &v",
          "20184:  return s",
          "20185: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "20084:  return s",
          "20085: }",
          "20088: func (s *UpdateProvisionedProductInput) SetProvisioningParameters(v []*UpdateProvisioningParameter) *UpdateProvisionedProductInput {",
          "20089:  s.ProvisioningParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20206: func (s *UpdateProvisionedProductInput) SetProvisioningArtifactName(v string) *UpdateProvisionedProductInput {",
          "20207:  s.ProvisioningArtifactName = &v",
          "20208:  return s",
          "20209: }",
          "",
          "---------------"
        ],
        "service/sesv2/api.go||service/sesv2/api.go": [
          "File: service/sesv2/api.go -> service/sesv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:  return out, req.Send()",
          "212: }",
          "214: const opCreateDedicatedIpPool = \"CreateDedicatedIpPool\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: const opCreateCustomVerificationEmailTemplate = \"CreateCustomVerificationEmailTemplate\"",
          "240: func (c *SESV2) CreateCustomVerificationEmailTemplateRequest(input *CreateCustomVerificationEmailTemplateInput) (req *request.Request, output *CreateCustomVerificationEmailTemplateOutput) {",
          "241:  op := &request.Operation{",
          "242:   Name:       opCreateCustomVerificationEmailTemplate,",
          "243:   HTTPMethod: \"POST\",",
          "244:   HTTPPath:   \"/v2/email/custom-verification-email-templates\",",
          "245:  }",
          "247:  if input == nil {",
          "248:   input = &CreateCustomVerificationEmailTemplateInput{}",
          "249:  }",
          "251:  output = &CreateCustomVerificationEmailTemplateOutput{}",
          "252:  req = c.newRequest(op, input, output)",
          "253:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "254:  return",
          "255: }",
          "291: func (c *SESV2) CreateCustomVerificationEmailTemplate(input *CreateCustomVerificationEmailTemplateInput) (*CreateCustomVerificationEmailTemplateOutput, error) {",
          "292:  req, out := c.CreateCustomVerificationEmailTemplateRequest(input)",
          "293:  return out, req.Send()",
          "294: }",
          "305: func (c *SESV2) CreateCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *CreateCustomVerificationEmailTemplateInput, opts ...request.Option) (*CreateCustomVerificationEmailTemplateOutput, error) {",
          "306:  req, out := c.CreateCustomVerificationEmailTemplateRequest(input)",
          "307:  req.SetContext(ctx)",
          "308:  req.ApplyOptions(opts...)",
          "309:  return out, req.Send()",
          "310: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "533:  return out, req.Send()",
          "534: }",
          "536: const opDeleteConfigurationSet = \"DeleteConfigurationSet\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634: const opCreateEmailIdentityPolicy = \"CreateEmailIdentityPolicy\"",
          "660: func (c *SESV2) CreateEmailIdentityPolicyRequest(input *CreateEmailIdentityPolicyInput) (req *request.Request, output *CreateEmailIdentityPolicyOutput) {",
          "661:  op := &request.Operation{",
          "662:   Name:       opCreateEmailIdentityPolicy,",
          "663:   HTTPMethod: \"POST\",",
          "664:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "665:  }",
          "667:  if input == nil {",
          "668:   input = &CreateEmailIdentityPolicyInput{}",
          "669:  }",
          "671:  output = &CreateEmailIdentityPolicyOutput{}",
          "672:  req = c.newRequest(op, input, output)",
          "673:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "674:  return",
          "675: }",
          "715: func (c *SESV2) CreateEmailIdentityPolicy(input *CreateEmailIdentityPolicyInput) (*CreateEmailIdentityPolicyOutput, error) {",
          "716:  req, out := c.CreateEmailIdentityPolicyRequest(input)",
          "717:  return out, req.Send()",
          "718: }",
          "729: func (c *SESV2) CreateEmailIdentityPolicyWithContext(ctx aws.Context, input *CreateEmailIdentityPolicyInput, opts ...request.Option) (*CreateEmailIdentityPolicyOutput, error) {",
          "730:  req, out := c.CreateEmailIdentityPolicyRequest(input)",
          "731:  req.SetContext(ctx)",
          "732:  req.ApplyOptions(opts...)",
          "733:  return out, req.Send()",
          "734: }",
          "736: const opCreateEmailTemplate = \"CreateEmailTemplate\"",
          "762: func (c *SESV2) CreateEmailTemplateRequest(input *CreateEmailTemplateInput) (req *request.Request, output *CreateEmailTemplateOutput) {",
          "763:  op := &request.Operation{",
          "764:   Name:       opCreateEmailTemplate,",
          "765:   HTTPMethod: \"POST\",",
          "766:   HTTPPath:   \"/v2/email/templates\",",
          "767:  }",
          "769:  if input == nil {",
          "770:   input = &CreateEmailTemplateInput{}",
          "771:  }",
          "773:  output = &CreateEmailTemplateOutput{}",
          "774:  req = c.newRequest(op, input, output)",
          "775:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "776:  return",
          "777: }",
          "808: func (c *SESV2) CreateEmailTemplate(input *CreateEmailTemplateInput) (*CreateEmailTemplateOutput, error) {",
          "809:  req, out := c.CreateEmailTemplateRequest(input)",
          "810:  return out, req.Send()",
          "811: }",
          "822: func (c *SESV2) CreateEmailTemplateWithContext(ctx aws.Context, input *CreateEmailTemplateInput, opts ...request.Option) (*CreateEmailTemplateOutput, error) {",
          "823:  req, out := c.CreateEmailTemplateRequest(input)",
          "824:  req.SetContext(ctx)",
          "825:  req.ApplyOptions(opts...)",
          "826:  return out, req.Send()",
          "827: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "720:  return out, req.Send()",
          "721: }",
          "750:  op := &request.Operation{",
          "752:   HTTPMethod: \"DELETE\",",
          "754:  }",
          "756:  if input == nil {",
          "758:  }",
          "761:  req = c.newRequest(op, input, output)",
          "762:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "763:  return",
          "764: }",
          "",
          "[Removed Lines]",
          "723: const opDeleteDedicatedIpPool = \"DeleteDedicatedIpPool\"",
          "749: func (c *SESV2) DeleteDedicatedIpPoolRequest(input *DeleteDedicatedIpPoolInput) (req *request.Request, output *DeleteDedicatedIpPoolOutput) {",
          "751:   Name:       opDeleteDedicatedIpPool,",
          "753:   HTTPPath:   \"/v2/email/dedicated-ip-pools/{PoolName}\",",
          "757:   input = &DeleteDedicatedIpPoolInput{}",
          "760:  output = &DeleteDedicatedIpPoolOutput{}",
          "",
          "[Added Lines]",
          "1016: const opDeleteCustomVerificationEmailTemplate = \"DeleteCustomVerificationEmailTemplate\"",
          "1042: func (c *SESV2) DeleteCustomVerificationEmailTemplateRequest(input *DeleteCustomVerificationEmailTemplateInput) (req *request.Request, output *DeleteCustomVerificationEmailTemplateOutput) {",
          "1044:   Name:       opDeleteCustomVerificationEmailTemplate,",
          "1046:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "1050:   input = &DeleteCustomVerificationEmailTemplateInput{}",
          "1053:  output = &DeleteCustomVerificationEmailTemplateOutput{}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "793:  return out, req.Send()",
          "794: }",
          "807:  req.SetContext(ctx)",
          "808:  req.ApplyOptions(opts...)",
          "809:  return out, req.Send()",
          "810: }",
          "839:  op := &request.Operation{",
          "840:   Name:       opDeleteEmailIdentity,",
          "841:   HTTPMethod: \"DELETE\",",
          "",
          "[Removed Lines]",
          "791: func (c *SESV2) DeleteDedicatedIpPool(input *DeleteDedicatedIpPoolInput) (*DeleteDedicatedIpPoolOutput, error) {",
          "792:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "805: func (c *SESV2) DeleteDedicatedIpPoolWithContext(ctx aws.Context, input *DeleteDedicatedIpPoolInput, opts ...request.Option) (*DeleteDedicatedIpPoolOutput, error) {",
          "806:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "812: const opDeleteEmailIdentity = \"DeleteEmailIdentity\"",
          "838: func (c *SESV2) DeleteEmailIdentityRequest(input *DeleteEmailIdentityInput) (req *request.Request, output *DeleteEmailIdentityOutput) {",
          "",
          "[Added Lines]",
          "1087: func (c *SESV2) DeleteCustomVerificationEmailTemplate(input *DeleteCustomVerificationEmailTemplateInput) (*DeleteCustomVerificationEmailTemplateOutput, error) {",
          "1088:  req, out := c.DeleteCustomVerificationEmailTemplateRequest(input)",
          "1101: func (c *SESV2) DeleteCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *DeleteCustomVerificationEmailTemplateInput, opts ...request.Option) (*DeleteCustomVerificationEmailTemplateOutput, error) {",
          "1102:  req, out := c.DeleteCustomVerificationEmailTemplateRequest(input)",
          "1108: const opDeleteDedicatedIpPool = \"DeleteDedicatedIpPool\"",
          "1134: func (c *SESV2) DeleteDedicatedIpPoolRequest(input *DeleteDedicatedIpPoolInput) (req *request.Request, output *DeleteDedicatedIpPoolOutput) {",
          "1135:  op := &request.Operation{",
          "1136:   Name:       opDeleteDedicatedIpPool,",
          "1137:   HTTPMethod: \"DELETE\",",
          "1138:   HTTPPath:   \"/v2/email/dedicated-ip-pools/{PoolName}\",",
          "1139:  }",
          "1141:  if input == nil {",
          "1142:   input = &DeleteDedicatedIpPoolInput{}",
          "1143:  }",
          "1145:  output = &DeleteDedicatedIpPoolOutput{}",
          "1146:  req = c.newRequest(op, input, output)",
          "1147:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1148:  return",
          "1149: }",
          "1176: func (c *SESV2) DeleteDedicatedIpPool(input *DeleteDedicatedIpPoolInput) (*DeleteDedicatedIpPoolOutput, error) {",
          "1177:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "1178:  return out, req.Send()",
          "1179: }",
          "1190: func (c *SESV2) DeleteDedicatedIpPoolWithContext(ctx aws.Context, input *DeleteDedicatedIpPoolInput, opts ...request.Option) (*DeleteDedicatedIpPoolOutput, error) {",
          "1191:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "1192:  req.SetContext(ctx)",
          "1193:  req.ApplyOptions(opts...)",
          "1194:  return out, req.Send()",
          "1195: }",
          "1197: const opDeleteEmailIdentity = \"DeleteEmailIdentity\"",
          "1223: func (c *SESV2) DeleteEmailIdentityRequest(input *DeleteEmailIdentityInput) (req *request.Request, output *DeleteEmailIdentityOutput) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "899:  return out, req.Send()",
          "900: }",
          "902: const opDeleteSuppressedDestination = \"DeleteSuppressedDestination\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1287: const opDeleteEmailIdentityPolicy = \"DeleteEmailIdentityPolicy\"",
          "1313: func (c *SESV2) DeleteEmailIdentityPolicyRequest(input *DeleteEmailIdentityPolicyInput) (req *request.Request, output *DeleteEmailIdentityPolicyOutput) {",
          "1314:  op := &request.Operation{",
          "1315:   Name:       opDeleteEmailIdentityPolicy,",
          "1316:   HTTPMethod: \"DELETE\",",
          "1317:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "1318:  }",
          "1320:  if input == nil {",
          "1321:   input = &DeleteEmailIdentityPolicyInput{}",
          "1322:  }",
          "1324:  output = &DeleteEmailIdentityPolicyOutput{}",
          "1325:  req = c.newRequest(op, input, output)",
          "1326:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1327:  return",
          "1328: }",
          "1363: func (c *SESV2) DeleteEmailIdentityPolicy(input *DeleteEmailIdentityPolicyInput) (*DeleteEmailIdentityPolicyOutput, error) {",
          "1364:  req, out := c.DeleteEmailIdentityPolicyRequest(input)",
          "1365:  return out, req.Send()",
          "1366: }",
          "1377: func (c *SESV2) DeleteEmailIdentityPolicyWithContext(ctx aws.Context, input *DeleteEmailIdentityPolicyInput, opts ...request.Option) (*DeleteEmailIdentityPolicyOutput, error) {",
          "1378:  req, out := c.DeleteEmailIdentityPolicyRequest(input)",
          "1379:  req.SetContext(ctx)",
          "1380:  req.ApplyOptions(opts...)",
          "1381:  return out, req.Send()",
          "1382: }",
          "1384: const opDeleteEmailTemplate = \"DeleteEmailTemplate\"",
          "1410: func (c *SESV2) DeleteEmailTemplateRequest(input *DeleteEmailTemplateInput) (req *request.Request, output *DeleteEmailTemplateOutput) {",
          "1411:  op := &request.Operation{",
          "1412:   Name:       opDeleteEmailTemplate,",
          "1413:   HTTPMethod: \"DELETE\",",
          "1414:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "1415:  }",
          "1417:  if input == nil {",
          "1418:   input = &DeleteEmailTemplateInput{}",
          "1419:  }",
          "1421:  output = &DeleteEmailTemplateOutput{}",
          "1422:  req = c.newRequest(op, input, output)",
          "1423:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1424:  return",
          "1425: }",
          "1451: func (c *SESV2) DeleteEmailTemplate(input *DeleteEmailTemplateInput) (*DeleteEmailTemplateOutput, error) {",
          "1452:  req, out := c.DeleteEmailTemplateRequest(input)",
          "1453:  return out, req.Send()",
          "1454: }",
          "1465: func (c *SESV2) DeleteEmailTemplateWithContext(ctx aws.Context, input *DeleteEmailTemplateInput, opts ...request.Option) (*DeleteEmailTemplateOutput, error) {",
          "1466:  req, out := c.DeleteEmailTemplateRequest(input)",
          "1467:  req.SetContext(ctx)",
          "1468:  req.ApplyOptions(opts...)",
          "1469:  return out, req.Send()",
          "1470: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1339:  return out, req.Send()",
          "1340: }",
          "1369:  op := &request.Operation{",
          "1371:   HTTPMethod: \"GET\",",
          "1373:  }",
          "1375:  if input == nil {",
          "1377:  }",
          "1380:  req = c.newRequest(op, input, output)",
          "1381:  return",
          "1382: }",
          "1410:  return out, req.Send()",
          "1411: }",
          "1424:  req.SetContext(ctx)",
          "1425:  req.ApplyOptions(opts...)",
          "1426:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "1342: const opGetDedicatedIp = \"GetDedicatedIp\"",
          "1368: func (c *SESV2) GetDedicatedIpRequest(input *GetDedicatedIpInput) (req *request.Request, output *GetDedicatedIpOutput) {",
          "1370:   Name:       opGetDedicatedIp,",
          "1372:   HTTPPath:   \"/v2/email/dedicated-ips/{IP}\",",
          "1376:   input = &GetDedicatedIpInput{}",
          "1379:  output = &GetDedicatedIpOutput{}",
          "1408: func (c *SESV2) GetDedicatedIp(input *GetDedicatedIpInput) (*GetDedicatedIpOutput, error) {",
          "1409:  req, out := c.GetDedicatedIpRequest(input)",
          "1422: func (c *SESV2) GetDedicatedIpWithContext(ctx aws.Context, input *GetDedicatedIpInput, opts ...request.Option) (*GetDedicatedIpOutput, error) {",
          "1423:  req, out := c.GetDedicatedIpRequest(input)",
          "",
          "[Added Lines]",
          "1912: const opGetCustomVerificationEmailTemplate = \"GetCustomVerificationEmailTemplate\"",
          "1938: func (c *SESV2) GetCustomVerificationEmailTemplateRequest(input *GetCustomVerificationEmailTemplateInput) (req *request.Request, output *GetCustomVerificationEmailTemplateOutput) {",
          "1940:   Name:       opGetCustomVerificationEmailTemplate,",
          "1942:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "1946:   input = &GetCustomVerificationEmailTemplateInput{}",
          "1949:  output = &GetCustomVerificationEmailTemplateOutput{}",
          "1983: func (c *SESV2) GetCustomVerificationEmailTemplate(input *GetCustomVerificationEmailTemplateInput) (*GetCustomVerificationEmailTemplateOutput, error) {",
          "1984:  req, out := c.GetCustomVerificationEmailTemplateRequest(input)",
          "1997: func (c *SESV2) GetCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *GetCustomVerificationEmailTemplateInput, opts ...request.Option) (*GetCustomVerificationEmailTemplateOutput, error) {",
          "1998:  req, out := c.GetCustomVerificationEmailTemplateRequest(input)",
          "1999:  req.SetContext(ctx)",
          "2000:  req.ApplyOptions(opts...)",
          "2001:  return out, req.Send()",
          "2002: }",
          "2004: const opGetDedicatedIp = \"GetDedicatedIp\"",
          "2030: func (c *SESV2) GetDedicatedIpRequest(input *GetDedicatedIpInput) (req *request.Request, output *GetDedicatedIpOutput) {",
          "2031:  op := &request.Operation{",
          "2032:   Name:       opGetDedicatedIp,",
          "2033:   HTTPMethod: \"GET\",",
          "2034:   HTTPPath:   \"/v2/email/dedicated-ips/{IP}\",",
          "2035:  }",
          "2037:  if input == nil {",
          "2038:   input = &GetDedicatedIpInput{}",
          "2039:  }",
          "2041:  output = &GetDedicatedIpOutput{}",
          "2042:  req = c.newRequest(op, input, output)",
          "2043:  return",
          "2044: }",
          "2070: func (c *SESV2) GetDedicatedIp(input *GetDedicatedIpInput) (*GetDedicatedIpOutput, error) {",
          "2071:  req, out := c.GetDedicatedIpRequest(input)",
          "2072:  return out, req.Send()",
          "2073: }",
          "2084: func (c *SESV2) GetDedicatedIpWithContext(ctx aws.Context, input *GetDedicatedIpInput, opts ...request.Option) (*GetDedicatedIpOutput, error) {",
          "2085:  req, out := c.GetDedicatedIpRequest(input)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2008:  return out, req.Send()",
          "2009: }",
          "2011: const opGetSuppressedDestination = \"GetSuppressedDestination\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2673: const opGetEmailIdentityPolicies = \"GetEmailIdentityPolicies\"",
          "2699: func (c *SESV2) GetEmailIdentityPoliciesRequest(input *GetEmailIdentityPoliciesInput) (req *request.Request, output *GetEmailIdentityPoliciesOutput) {",
          "2700:  op := &request.Operation{",
          "2701:   Name:       opGetEmailIdentityPolicies,",
          "2702:   HTTPMethod: \"GET\",",
          "2703:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies\",",
          "2704:  }",
          "2706:  if input == nil {",
          "2707:   input = &GetEmailIdentityPoliciesInput{}",
          "2708:  }",
          "2710:  output = &GetEmailIdentityPoliciesOutput{}",
          "2711:  req = c.newRequest(op, input, output)",
          "2712:  return",
          "2713: }",
          "2749: func (c *SESV2) GetEmailIdentityPolicies(input *GetEmailIdentityPoliciesInput) (*GetEmailIdentityPoliciesOutput, error) {",
          "2750:  req, out := c.GetEmailIdentityPoliciesRequest(input)",
          "2751:  return out, req.Send()",
          "2752: }",
          "2763: func (c *SESV2) GetEmailIdentityPoliciesWithContext(ctx aws.Context, input *GetEmailIdentityPoliciesInput, opts ...request.Option) (*GetEmailIdentityPoliciesOutput, error) {",
          "2764:  req, out := c.GetEmailIdentityPoliciesRequest(input)",
          "2765:  req.SetContext(ctx)",
          "2766:  req.ApplyOptions(opts...)",
          "2767:  return out, req.Send()",
          "2768: }",
          "2770: const opGetEmailTemplate = \"GetEmailTemplate\"",
          "2796: func (c *SESV2) GetEmailTemplateRequest(input *GetEmailTemplateInput) (req *request.Request, output *GetEmailTemplateOutput) {",
          "2797:  op := &request.Operation{",
          "2798:   Name:       opGetEmailTemplate,",
          "2799:   HTTPMethod: \"GET\",",
          "2800:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "2801:  }",
          "2803:  if input == nil {",
          "2804:   input = &GetEmailTemplateInput{}",
          "2805:  }",
          "2807:  output = &GetEmailTemplateOutput{}",
          "2808:  req = c.newRequest(op, input, output)",
          "2809:  return",
          "2810: }",
          "2837: func (c *SESV2) GetEmailTemplate(input *GetEmailTemplateInput) (*GetEmailTemplateOutput, error) {",
          "2838:  req, out := c.GetEmailTemplateRequest(input)",
          "2839:  return out, req.Send()",
          "2840: }",
          "2851: func (c *SESV2) GetEmailTemplateWithContext(ctx aws.Context, input *GetEmailTemplateInput, opts ...request.Option) (*GetEmailTemplateOutput, error) {",
          "2852:  req, out := c.GetEmailTemplateRequest(input)",
          "2853:  req.SetContext(ctx)",
          "2854:  req.ApplyOptions(opts...)",
          "2855:  return out, req.Send()",
          "2856: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2241:  return p.Err()",
          "2242: }",
          "2271:  op := &request.Operation{",
          "2273:   HTTPMethod: \"GET\",",
          "2275:   Paginator: &request.Paginator{",
          "2276:    InputTokens:     []string{\"NextToken\"},",
          "2277:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "2244: const opListDedicatedIpPools = \"ListDedicatedIpPools\"",
          "2270: func (c *SESV2) ListDedicatedIpPoolsRequest(input *ListDedicatedIpPoolsInput) (req *request.Request, output *ListDedicatedIpPoolsOutput) {",
          "2272:   Name:       opListDedicatedIpPools,",
          "2274:   HTTPPath:   \"/v2/email/dedicated-ip-pools\",",
          "",
          "[Added Lines]",
          "3091: const opListCustomVerificationEmailTemplates = \"ListCustomVerificationEmailTemplates\"",
          "3117: func (c *SESV2) ListCustomVerificationEmailTemplatesRequest(input *ListCustomVerificationEmailTemplatesInput) (req *request.Request, output *ListCustomVerificationEmailTemplatesOutput) {",
          "3119:   Name:       opListCustomVerificationEmailTemplates,",
          "3121:   HTTPPath:   \"/v2/email/custom-verification-email-templates\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2281:  }",
          "2283:  if input == nil {",
          "2285:  }",
          "2288:  req = c.newRequest(op, input, output)",
          "2289:  return",
          "2290: }",
          "",
          "[Removed Lines]",
          "2284:   input = &ListDedicatedIpPoolsInput{}",
          "2287:  output = &ListDedicatedIpPoolsOutput{}",
          "",
          "[Added Lines]",
          "3131:   input = &ListCustomVerificationEmailTemplatesInput{}",
          "3134:  output = &ListCustomVerificationEmailTemplatesOutput{}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2314:  return out, req.Send()",
          "2315: }",
          "2328:  req.SetContext(ctx)",
          "2329:  req.ApplyOptions(opts...)",
          "2330:  return out, req.Send()",
          "2331: }",
          "2352: }",
          "2362:  p := request.Pagination{",
          "2363:   NewRequest: func() (*request.Request, error) {",
          "2365:    if input != nil {",
          "2366:     tmp := *input",
          "2367:     inCpy = &tmp",
          "2368:    }",
          "2370:    req.SetContext(ctx)",
          "2371:    req.ApplyOptions(opts...)",
          "2372:    return req, nil",
          "",
          "[Removed Lines]",
          "2312: func (c *SESV2) ListDedicatedIpPools(input *ListDedicatedIpPoolsInput) (*ListDedicatedIpPoolsOutput, error) {",
          "2313:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "2326: func (c *SESV2) ListDedicatedIpPoolsWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, opts ...request.Option) (*ListDedicatedIpPoolsOutput, error) {",
          "2327:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "2350: func (c *SESV2) ListDedicatedIpPoolsPages(input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool) error {",
          "2351:  return c.ListDedicatedIpPoolsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2361: func (c *SESV2) ListDedicatedIpPoolsPagesWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool, opts ...request.Option) error {",
          "2364:    var inCpy *ListDedicatedIpPoolsInput",
          "2369:    req, _ := c.ListDedicatedIpPoolsRequest(inCpy)",
          "",
          "[Added Lines]",
          "3165: func (c *SESV2) ListCustomVerificationEmailTemplates(input *ListCustomVerificationEmailTemplatesInput) (*ListCustomVerificationEmailTemplatesOutput, error) {",
          "3166:  req, out := c.ListCustomVerificationEmailTemplatesRequest(input)",
          "3179: func (c *SESV2) ListCustomVerificationEmailTemplatesWithContext(ctx aws.Context, input *ListCustomVerificationEmailTemplatesInput, opts ...request.Option) (*ListCustomVerificationEmailTemplatesOutput, error) {",
          "3180:  req, out := c.ListCustomVerificationEmailTemplatesRequest(input)",
          "3203: func (c *SESV2) ListCustomVerificationEmailTemplatesPages(input *ListCustomVerificationEmailTemplatesInput, fn func(*ListCustomVerificationEmailTemplatesOutput, bool) bool) error {",
          "3204:  return c.ListCustomVerificationEmailTemplatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3214: func (c *SESV2) ListCustomVerificationEmailTemplatesPagesWithContext(ctx aws.Context, input *ListCustomVerificationEmailTemplatesInput, fn func(*ListCustomVerificationEmailTemplatesOutput, bool) bool, opts ...request.Option) error {",
          "3217:    var inCpy *ListCustomVerificationEmailTemplatesInput",
          "3222:    req, _ := c.ListCustomVerificationEmailTemplatesRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2374:  }",
          "2376:  for p.Next() {",
          "2378:    break",
          "2379:   }",
          "2380:  }",
          "",
          "[Removed Lines]",
          "2377:   if !fn(p.Page().(*ListDedicatedIpPoolsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "3230:   if !fn(p.Page().(*ListCustomVerificationEmailTemplatesOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2382:  return p.Err()",
          "2383: }",
          "",
          "[Removed Lines]",
          "2385: const opListDeliverabilityTestReports = \"ListDeliverabilityTestReports\"",
          "",
          "[Added Lines]",
          "3238: const opListDedicatedIpPools = \"ListDedicatedIpPools\"",
          "3264: func (c *SESV2) ListDedicatedIpPoolsRequest(input *ListDedicatedIpPoolsInput) (req *request.Request, output *ListDedicatedIpPoolsOutput) {",
          "3265:  op := &request.Operation{",
          "3266:   Name:       opListDedicatedIpPools,",
          "3267:   HTTPMethod: \"GET\",",
          "3268:   HTTPPath:   \"/v2/email/dedicated-ip-pools\",",
          "3269:   Paginator: &request.Paginator{",
          "3270:    InputTokens:     []string{\"NextToken\"},",
          "3271:    OutputTokens:    []string{\"NextToken\"},",
          "3272:    LimitToken:      \"PageSize\",",
          "3273:    TruncationToken: \"\",",
          "3274:   },",
          "3275:  }",
          "3277:  if input == nil {",
          "3278:   input = &ListDedicatedIpPoolsInput{}",
          "3279:  }",
          "3281:  output = &ListDedicatedIpPoolsOutput{}",
          "3282:  req = c.newRequest(op, input, output)",
          "3283:  return",
          "3284: }",
          "3306: func (c *SESV2) ListDedicatedIpPools(input *ListDedicatedIpPoolsInput) (*ListDedicatedIpPoolsOutput, error) {",
          "3307:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "3308:  return out, req.Send()",
          "3309: }",
          "3320: func (c *SESV2) ListDedicatedIpPoolsWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, opts ...request.Option) (*ListDedicatedIpPoolsOutput, error) {",
          "3321:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "3322:  req.SetContext(ctx)",
          "3323:  req.ApplyOptions(opts...)",
          "3324:  return out, req.Send()",
          "3325: }",
          "3344: func (c *SESV2) ListDedicatedIpPoolsPages(input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool) error {",
          "3345:  return c.ListDedicatedIpPoolsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3346: }",
          "3355: func (c *SESV2) ListDedicatedIpPoolsPagesWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool, opts ...request.Option) error {",
          "3356:  p := request.Pagination{",
          "3357:   NewRequest: func() (*request.Request, error) {",
          "3358:    var inCpy *ListDedicatedIpPoolsInput",
          "3359:    if input != nil {",
          "3360:     tmp := *input",
          "3361:     inCpy = &tmp",
          "3362:    }",
          "3363:    req, _ := c.ListDedicatedIpPoolsRequest(inCpy)",
          "3364:    req.SetContext(ctx)",
          "3365:    req.ApplyOptions(opts...)",
          "3366:    return req, nil",
          "3367:   },",
          "3368:  }",
          "3370:  for p.Next() {",
          "3371:   if !fn(p.Page().(*ListDedicatedIpPoolsOutput), !p.HasNextPage()) {",
          "3372:    break",
          "3373:   }",
          "3374:  }",
          "3376:  return p.Err()",
          "3377: }",
          "3379: const opListDeliverabilityTestReports = \"ListDeliverabilityTestReports\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2817:  return p.Err()",
          "2818: }",
          "2820: const opListSuppressedDestinations = \"ListSuppressedDestinations\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3814: const opListEmailTemplates = \"ListEmailTemplates\"",
          "3840: func (c *SESV2) ListEmailTemplatesRequest(input *ListEmailTemplatesInput) (req *request.Request, output *ListEmailTemplatesOutput) {",
          "3841:  op := &request.Operation{",
          "3842:   Name:       opListEmailTemplates,",
          "3843:   HTTPMethod: \"GET\",",
          "3844:   HTTPPath:   \"/v2/email/templates\",",
          "3845:   Paginator: &request.Paginator{",
          "3846:    InputTokens:     []string{\"NextToken\"},",
          "3847:    OutputTokens:    []string{\"NextToken\"},",
          "3848:    LimitToken:      \"PageSize\",",
          "3849:    TruncationToken: \"\",",
          "3850:   },",
          "3851:  }",
          "3853:  if input == nil {",
          "3854:   input = &ListEmailTemplatesInput{}",
          "3855:  }",
          "3857:  output = &ListEmailTemplatesOutput{}",
          "3858:  req = c.newRequest(op, input, output)",
          "3859:  return",
          "3860: }",
          "3884: func (c *SESV2) ListEmailTemplates(input *ListEmailTemplatesInput) (*ListEmailTemplatesOutput, error) {",
          "3885:  req, out := c.ListEmailTemplatesRequest(input)",
          "3886:  return out, req.Send()",
          "3887: }",
          "3898: func (c *SESV2) ListEmailTemplatesWithContext(ctx aws.Context, input *ListEmailTemplatesInput, opts ...request.Option) (*ListEmailTemplatesOutput, error) {",
          "3899:  req, out := c.ListEmailTemplatesRequest(input)",
          "3900:  req.SetContext(ctx)",
          "3901:  req.ApplyOptions(opts...)",
          "3902:  return out, req.Send()",
          "3903: }",
          "3922: func (c *SESV2) ListEmailTemplatesPages(input *ListEmailTemplatesInput, fn func(*ListEmailTemplatesOutput, bool) bool) error {",
          "3923:  return c.ListEmailTemplatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3924: }",
          "3933: func (c *SESV2) ListEmailTemplatesPagesWithContext(ctx aws.Context, input *ListEmailTemplatesInput, fn func(*ListEmailTemplatesOutput, bool) bool, opts ...request.Option) error {",
          "3934:  p := request.Pagination{",
          "3935:   NewRequest: func() (*request.Request, error) {",
          "3936:    var inCpy *ListEmailTemplatesInput",
          "3937:    if input != nil {",
          "3938:     tmp := *input",
          "3939:     inCpy = &tmp",
          "3940:    }",
          "3941:    req, _ := c.ListEmailTemplatesRequest(inCpy)",
          "3942:    req.SetContext(ctx)",
          "3943:    req.ApplyOptions(opts...)",
          "3944:    return req, nil",
          "3945:   },",
          "3946:  }",
          "3948:  for p.Next() {",
          "3949:   if !fn(p.Page().(*ListEmailTemplatesOutput), !p.HasNextPage()) {",
          "3950:    break",
          "3951:   }",
          "3952:  }",
          "3954:  return p.Err()",
          "3955: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3134:  return out, req.Send()",
          "3135: }",
          "3163: func (c *SESV2) PutAccountSendingAttributesRequest(input *PutAccountSendingAttributesInput) (req *request.Request, output *PutAccountSendingAttributesOutput) {",
          "3164:  op := &request.Operation{",
          "3165:   Name:       opPutAccountSendingAttributes,",
          "",
          "[Removed Lines]",
          "3137: const opPutAccountSendingAttributes = \"PutAccountSendingAttributes\"",
          "",
          "[Added Lines]",
          "4274: const opPutAccountDetails = \"PutAccountDetails\"",
          "4300: func (c *SESV2) PutAccountDetailsRequest(input *PutAccountDetailsInput) (req *request.Request, output *PutAccountDetailsOutput) {",
          "4301:  op := &request.Operation{",
          "4302:   Name:       opPutAccountDetails,",
          "4303:   HTTPMethod: \"POST\",",
          "4304:   HTTPPath:   \"/v2/email/account/details\",",
          "4305:  }",
          "4307:  if input == nil {",
          "4308:   input = &PutAccountDetailsInput{}",
          "4309:  }",
          "4311:  output = &PutAccountDetailsOutput{}",
          "4312:  req = c.newRequest(op, input, output)",
          "4313:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4314:  return",
          "4315: }",
          "4339: func (c *SESV2) PutAccountDetails(input *PutAccountDetailsInput) (*PutAccountDetailsOutput, error) {",
          "4340:  req, out := c.PutAccountDetailsRequest(input)",
          "4341:  return out, req.Send()",
          "4342: }",
          "4353: func (c *SESV2) PutAccountDetailsWithContext(ctx aws.Context, input *PutAccountDetailsInput, opts ...request.Option) (*PutAccountDetailsOutput, error) {",
          "4354:  req, out := c.PutAccountDetailsRequest(input)",
          "4355:  req.SetContext(ctx)",
          "4356:  req.ApplyOptions(opts...)",
          "4357:  return out, req.Send()",
          "4358: }",
          "4360: const opPutAccountSendingAttributes = \"PutAccountSendingAttributes\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4461:  return out, req.Send()",
          "4462: }",
          "4464: const opSendEmail = \"SendEmail\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5687: const opSendBulkEmail = \"SendBulkEmail\"",
          "5713: func (c *SESV2) SendBulkEmailRequest(input *SendBulkEmailInput) (req *request.Request, output *SendBulkEmailOutput) {",
          "5714:  op := &request.Operation{",
          "5715:   Name:       opSendBulkEmail,",
          "5716:   HTTPMethod: \"POST\",",
          "5717:   HTTPPath:   \"/v2/email/outbound-bulk-emails\",",
          "5718:  }",
          "5720:  if input == nil {",
          "5721:   input = &SendBulkEmailInput{}",
          "5722:  }",
          "5724:  output = &SendBulkEmailOutput{}",
          "5725:  req = c.newRequest(op, input, output)",
          "5726:  return",
          "5727: }",
          "5768: func (c *SESV2) SendBulkEmail(input *SendBulkEmailInput) (*SendBulkEmailOutput, error) {",
          "5769:  req, out := c.SendBulkEmailRequest(input)",
          "5770:  return out, req.Send()",
          "5771: }",
          "5782: func (c *SESV2) SendBulkEmailWithContext(ctx aws.Context, input *SendBulkEmailInput, opts ...request.Option) (*SendBulkEmailOutput, error) {",
          "5783:  req, out := c.SendBulkEmailRequest(input)",
          "5784:  req.SetContext(ctx)",
          "5785:  req.ApplyOptions(opts...)",
          "5786:  return out, req.Send()",
          "5787: }",
          "5789: const opSendCustomVerificationEmail = \"SendCustomVerificationEmail\"",
          "5815: func (c *SESV2) SendCustomVerificationEmailRequest(input *SendCustomVerificationEmailInput) (req *request.Request, output *SendCustomVerificationEmailOutput) {",
          "5816:  op := &request.Operation{",
          "5817:   Name:       opSendCustomVerificationEmail,",
          "5818:   HTTPMethod: \"POST\",",
          "5819:   HTTPPath:   \"/v2/email/outbound-custom-verification-emails\",",
          "5820:  }",
          "5822:  if input == nil {",
          "5823:   input = &SendCustomVerificationEmailInput{}",
          "5824:  }",
          "5826:  output = &SendCustomVerificationEmailOutput{}",
          "5827:  req = c.newRequest(op, input, output)",
          "5828:  return",
          "5829: }",
          "5876: func (c *SESV2) SendCustomVerificationEmail(input *SendCustomVerificationEmailInput) (*SendCustomVerificationEmailOutput, error) {",
          "5877:  req, out := c.SendCustomVerificationEmailRequest(input)",
          "5878:  return out, req.Send()",
          "5879: }",
          "5890: func (c *SESV2) SendCustomVerificationEmailWithContext(ctx aws.Context, input *SendCustomVerificationEmailInput, opts ...request.Option) (*SendCustomVerificationEmailOutput, error) {",
          "5891:  req, out := c.SendCustomVerificationEmailRequest(input)",
          "5892:  req.SetContext(ctx)",
          "5893:  req.ApplyOptions(opts...)",
          "5894:  return out, req.Send()",
          "5895: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4671:  return out, req.Send()",
          "4672: }",
          "4701:  op := &request.Operation{",
          "4705:  }",
          "4707:  if input == nil {",
          "4709:  }",
          "4712:  req = c.newRequest(op, input, output)",
          "4714:  return",
          "4715: }",
          "4743:  req, out := c.UntagResourceRequest(input)",
          "4744:  return out, req.Send()",
          "4745: }",
          "",
          "[Removed Lines]",
          "4674: const opUntagResource = \"UntagResource\"",
          "4700: func (c *SESV2) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "4702:   Name:       opUntagResource,",
          "4703:   HTTPMethod: \"DELETE\",",
          "4704:   HTTPPath:   \"/v2/email/tags\",",
          "4708:   input = &UntagResourceInput{}",
          "4711:  output = &UntagResourceOutput{}",
          "4713:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4742: func (c *SESV2) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "",
          "[Added Lines]",
          "6111: const opTestRenderEmailTemplate = \"TestRenderEmailTemplate\"",
          "6137: func (c *SESV2) TestRenderEmailTemplateRequest(input *TestRenderEmailTemplateInput) (req *request.Request, output *TestRenderEmailTemplateOutput) {",
          "6139:   Name:       opTestRenderEmailTemplate,",
          "6140:   HTTPMethod: \"POST\",",
          "6141:   HTTPPath:   \"/v2/email/templates/{TemplateName}/render\",",
          "6145:   input = &TestRenderEmailTemplateInput{}",
          "6148:  output = &TestRenderEmailTemplateOutput{}",
          "6178: func (c *SESV2) TestRenderEmailTemplate(input *TestRenderEmailTemplateInput) (*TestRenderEmailTemplateOutput, error) {",
          "6179:  req, out := c.TestRenderEmailTemplateRequest(input)",
          "6180:  return out, req.Send()",
          "6181: }",
          "6192: func (c *SESV2) TestRenderEmailTemplateWithContext(ctx aws.Context, input *TestRenderEmailTemplateInput, opts ...request.Option) (*TestRenderEmailTemplateOutput, error) {",
          "6193:  req, out := c.TestRenderEmailTemplateRequest(input)",
          "6194:  req.SetContext(ctx)",
          "6195:  req.ApplyOptions(opts...)",
          "6196:  return out, req.Send()",
          "6197: }",
          "6199: const opUntagResource = \"UntagResource\"",
          "6225: func (c *SESV2) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "6226:  op := &request.Operation{",
          "6227:   Name:       opUntagResource,",
          "6228:   HTTPMethod: \"DELETE\",",
          "6229:   HTTPPath:   \"/v2/email/tags\",",
          "6230:  }",
          "6232:  if input == nil {",
          "6233:   input = &UntagResourceInput{}",
          "6234:  }",
          "6236:  output = &UntagResourceOutput{}",
          "6237:  req = c.newRequest(op, input, output)",
          "6238:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6239:  return",
          "6240: }",
          "6267: func (c *SESV2) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4852:  return out, req.Send()",
          "4853: }",
          "4872: }",
          "4878: }",
          "4883: }",
          "4905: }",
          "4910: }",
          "4918: }",
          "4927:  return s.String()",
          "4928: }",
          "",
          "[Removed Lines]",
          "4857: type AccountSuspendedException struct {",
          "4858:  _            struct{}                  `type:\"structure\"`",
          "4859:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4861:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4862: }",
          "4865: func (s AccountSuspendedException) String() string {",
          "4866:  return awsutil.Prettify(s)",
          "4867: }",
          "4870: func (s AccountSuspendedException) GoString() string {",
          "4871:  return s.String()",
          "4874: func newErrorAccountSuspendedException(v protocol.ResponseMetadata) error {",
          "4875:  return &AccountSuspendedException{",
          "4876:   RespMetadata: v,",
          "4877:  }",
          "4881: func (s *AccountSuspendedException) Code() string {",
          "4882:  return \"AccountSuspendedException\"",
          "4886: func (s *AccountSuspendedException) Message() string {",
          "4887:  if s.Message_ != nil {",
          "4888:   return *s.Message_",
          "4889:  }",
          "4890:  return \"\"",
          "4891: }",
          "4894: func (s *AccountSuspendedException) OrigErr() error {",
          "4895:  return nil",
          "4896: }",
          "4898: func (s *AccountSuspendedException) Error() string {",
          "4899:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4900: }",
          "4903: func (s *AccountSuspendedException) StatusCode() int {",
          "4904:  return s.RespMetadata.StatusCode",
          "4908: func (s *AccountSuspendedException) RequestID() string {",
          "4909:  return s.RespMetadata.RequestID",
          "4913: type AlreadyExistsException struct {",
          "4914:  _            struct{}                  `type:\"structure\"`",
          "4915:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4917:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4921: func (s AlreadyExistsException) String() string {",
          "4922:  return awsutil.Prettify(s)",
          "4923: }",
          "4926: func (s AlreadyExistsException) GoString() string {",
          "",
          "[Added Lines]",
          "6380: const opUpdateCustomVerificationEmailTemplate = \"UpdateCustomVerificationEmailTemplate\"",
          "6406: func (c *SESV2) UpdateCustomVerificationEmailTemplateRequest(input *UpdateCustomVerificationEmailTemplateInput) (req *request.Request, output *UpdateCustomVerificationEmailTemplateOutput) {",
          "6407:  op := &request.Operation{",
          "6408:   Name:       opUpdateCustomVerificationEmailTemplate,",
          "6409:   HTTPMethod: \"PUT\",",
          "6410:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "6411:  }",
          "6413:  if input == nil {",
          "6414:   input = &UpdateCustomVerificationEmailTemplateInput{}",
          "6415:  }",
          "6417:  output = &UpdateCustomVerificationEmailTemplateOutput{}",
          "6418:  req = c.newRequest(op, input, output)",
          "6419:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6420:  return",
          "6451: func (c *SESV2) UpdateCustomVerificationEmailTemplate(input *UpdateCustomVerificationEmailTemplateInput) (*UpdateCustomVerificationEmailTemplateOutput, error) {",
          "6452:  req, out := c.UpdateCustomVerificationEmailTemplateRequest(input)",
          "6453:  return out, req.Send()",
          "6465: func (c *SESV2) UpdateCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *UpdateCustomVerificationEmailTemplateInput, opts ...request.Option) (*UpdateCustomVerificationEmailTemplateOutput, error) {",
          "6466:  req, out := c.UpdateCustomVerificationEmailTemplateRequest(input)",
          "6467:  req.SetContext(ctx)",
          "6468:  req.ApplyOptions(opts...)",
          "6469:  return out, req.Send()",
          "6472: const opUpdateEmailIdentityPolicy = \"UpdateEmailIdentityPolicy\"",
          "6498: func (c *SESV2) UpdateEmailIdentityPolicyRequest(input *UpdateEmailIdentityPolicyInput) (req *request.Request, output *UpdateEmailIdentityPolicyOutput) {",
          "6499:  op := &request.Operation{",
          "6500:   Name:       opUpdateEmailIdentityPolicy,",
          "6501:   HTTPMethod: \"PUT\",",
          "6502:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "6503:  }",
          "6505:  if input == nil {",
          "6506:   input = &UpdateEmailIdentityPolicyInput{}",
          "6507:  }",
          "6509:  output = &UpdateEmailIdentityPolicyOutput{}",
          "6510:  req = c.newRequest(op, input, output)",
          "6511:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6512:  return",
          "6548: func (c *SESV2) UpdateEmailIdentityPolicy(input *UpdateEmailIdentityPolicyInput) (*UpdateEmailIdentityPolicyOutput, error) {",
          "6549:  req, out := c.UpdateEmailIdentityPolicyRequest(input)",
          "6550:  return out, req.Send()",
          "6562: func (c *SESV2) UpdateEmailIdentityPolicyWithContext(ctx aws.Context, input *UpdateEmailIdentityPolicyInput, opts ...request.Option) (*UpdateEmailIdentityPolicyOutput, error) {",
          "6563:  req, out := c.UpdateEmailIdentityPolicyRequest(input)",
          "6564:  req.SetContext(ctx)",
          "6565:  req.ApplyOptions(opts...)",
          "6566:  return out, req.Send()",
          "6569: const opUpdateEmailTemplate = \"UpdateEmailTemplate\"",
          "6595: func (c *SESV2) UpdateEmailTemplateRequest(input *UpdateEmailTemplateInput) (req *request.Request, output *UpdateEmailTemplateOutput) {",
          "6596:  op := &request.Operation{",
          "6597:   Name:       opUpdateEmailTemplate,",
          "6598:   HTTPMethod: \"PUT\",",
          "6599:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "6600:  }",
          "6602:  if input == nil {",
          "6603:   input = &UpdateEmailTemplateInput{}",
          "6604:  }",
          "6606:  output = &UpdateEmailTemplateOutput{}",
          "6607:  req = c.newRequest(op, input, output)",
          "6608:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6609:  return",
          "6610: }",
          "6638: func (c *SESV2) UpdateEmailTemplate(input *UpdateEmailTemplateInput) (*UpdateEmailTemplateOutput, error) {",
          "6639:  req, out := c.UpdateEmailTemplateRequest(input)",
          "6640:  return out, req.Send()",
          "6641: }",
          "6652: func (c *SESV2) UpdateEmailTemplateWithContext(ctx aws.Context, input *UpdateEmailTemplateInput, opts ...request.Option) (*UpdateEmailTemplateOutput, error) {",
          "6653:  req, out := c.UpdateEmailTemplateRequest(input)",
          "6654:  req.SetContext(ctx)",
          "6655:  req.ApplyOptions(opts...)",
          "6656:  return out, req.Send()",
          "6657: }",
          "6660: type AccountDetails struct {",
          "6661:  _ struct{} `type:\"structure\"`",
          "6665:  AdditionalContactEmailAddresses []*string `min:\"1\" type:\"list\" sensitive:\"true\"`",
          "6669:  ContactLanguage *string `type:\"string\" enum:\"ContactLanguage\"`",
          "6679:  MailType *string `type:\"string\" enum:\"MailType\"`",
          "6682:  ReviewDetails *ReviewDetails `type:\"structure\"`",
          "6685:  UseCaseDescription *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "6689:  WebsiteURL *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "6690: }",
          "6693: func (s AccountDetails) String() string {",
          "6694:  return awsutil.Prettify(s)",
          "6695: }",
          "6698: func (s AccountDetails) GoString() string {",
          "6699:  return s.String()",
          "6700: }",
          "6703: func (s *AccountDetails) SetAdditionalContactEmailAddresses(v []*string) *AccountDetails {",
          "6704:  s.AdditionalContactEmailAddresses = v",
          "6705:  return s",
          "6706: }",
          "6709: func (s *AccountDetails) SetContactLanguage(v string) *AccountDetails {",
          "6710:  s.ContactLanguage = &v",
          "6711:  return s",
          "6712: }",
          "6715: func (s *AccountDetails) SetMailType(v string) *AccountDetails {",
          "6716:  s.MailType = &v",
          "6717:  return s",
          "6718: }",
          "6721: func (s *AccountDetails) SetReviewDetails(v *ReviewDetails) *AccountDetails {",
          "6722:  s.ReviewDetails = v",
          "6723:  return s",
          "6724: }",
          "6727: func (s *AccountDetails) SetUseCaseDescription(v string) *AccountDetails {",
          "6728:  s.UseCaseDescription = &v",
          "6729:  return s",
          "6730: }",
          "6733: func (s *AccountDetails) SetWebsiteURL(v string) *AccountDetails {",
          "6734:  s.WebsiteURL = &v",
          "6735:  return s",
          "6736: }",
          "6740: type AccountSuspendedException struct {",
          "6741:  _            struct{}                  `type:\"structure\"`",
          "6742:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6744:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6745: }",
          "6748: func (s AccountSuspendedException) String() string {",
          "6749:  return awsutil.Prettify(s)",
          "6750: }",
          "6753: func (s AccountSuspendedException) GoString() string {",
          "6754:  return s.String()",
          "6755: }",
          "6757: func newErrorAccountSuspendedException(v protocol.ResponseMetadata) error {",
          "6758:  return &AccountSuspendedException{",
          "6759:   RespMetadata: v,",
          "6760:  }",
          "6761: }",
          "6764: func (s *AccountSuspendedException) Code() string {",
          "6765:  return \"AccountSuspendedException\"",
          "6766: }",
          "6769: func (s *AccountSuspendedException) Message() string {",
          "6770:  if s.Message_ != nil {",
          "6771:   return *s.Message_",
          "6772:  }",
          "6773:  return \"\"",
          "6774: }",
          "6777: func (s *AccountSuspendedException) OrigErr() error {",
          "6778:  return nil",
          "6779: }",
          "6781: func (s *AccountSuspendedException) Error() string {",
          "6782:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6783: }",
          "6786: func (s *AccountSuspendedException) StatusCode() int {",
          "6787:  return s.RespMetadata.StatusCode",
          "6788: }",
          "6791: func (s *AccountSuspendedException) RequestID() string {",
          "6792:  return s.RespMetadata.RequestID",
          "6793: }",
          "6796: type AlreadyExistsException struct {",
          "6797:  _            struct{}                  `type:\"structure\"`",
          "6798:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6800:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6801: }",
          "6804: func (s AlreadyExistsException) String() string {",
          "6805:  return awsutil.Prettify(s)",
          "6806: }",
          "6809: func (s AlreadyExistsException) GoString() string {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5122:  return s",
          "5123: }",
          "5129:  _ struct{} `type:\"structure\"`",
          "5136: }",
          "5140:  return awsutil.Prettify(s)",
          "5141: }",
          "5145:  return s.String()",
          "5146: }",
          "5162:   }",
          "5163:  }",
          "",
          "[Removed Lines]",
          "5128: type CloudWatchDestination struct {",
          "5135:  DimensionConfigurations []*CloudWatchDimensionConfiguration `type:\"list\" required:\"true\"`",
          "5139: func (s CloudWatchDestination) String() string {",
          "5144: func (s CloudWatchDestination) GoString() string {",
          "5149: func (s *CloudWatchDestination) Validate() error {",
          "5150:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDestination\"}",
          "5151:  if s.DimensionConfigurations == nil {",
          "5152:   invalidParams.Add(request.NewErrParamRequired(\"DimensionConfigurations\"))",
          "5153:  }",
          "5154:  if s.DimensionConfigurations != nil {",
          "5155:   for i, v := range s.DimensionConfigurations {",
          "5156:    if v == nil {",
          "5157:     continue",
          "5158:    }",
          "5159:    if err := v.Validate(); err != nil {",
          "5160:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DimensionConfigurations\", i), err.(request.ErrInvalidParams))",
          "5161:    }",
          "",
          "[Added Lines]",
          "7010: type BulkEmailContent struct {",
          "7014:  Template *Template `type:\"structure\"`",
          "7018: func (s BulkEmailContent) String() string {",
          "7023: func (s BulkEmailContent) GoString() string {",
          "7028: func (s *BulkEmailContent) Validate() error {",
          "7029:  invalidParams := request.ErrInvalidParams{Context: \"BulkEmailContent\"}",
          "7030:  if s.Template != nil {",
          "7031:   if err := s.Template.Validate(); err != nil {",
          "7032:    invalidParams.AddNested(\"Template\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5168:  return nil",
          "5169: }",
          "5174:  return s",
          "5175: }",
          "5180:  _ struct{} `type:\"structure\"`",
          "5213: }",
          "5217:  return awsutil.Prettify(s)",
          "5218: }",
          "5222:  return s.String()",
          "5223: }",
          "5233:  }",
          "5236:  }",
          "5238:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5172: func (s *CloudWatchDestination) SetDimensionConfigurations(v []*CloudWatchDimensionConfiguration) *CloudWatchDestination {",
          "5173:  s.DimensionConfigurations = v",
          "5179: type CloudWatchDimensionConfiguration struct {",
          "5192:  DefaultDimensionValue *string `type:\"string\" required:\"true\"`",
          "5203:  DimensionName *string `type:\"string\" required:\"true\"`",
          "5212:  DimensionValueSource *string `type:\"string\" required:\"true\" enum:\"DimensionValueSource\"`",
          "5216: func (s CloudWatchDimensionConfiguration) String() string {",
          "5221: func (s CloudWatchDimensionConfiguration) GoString() string {",
          "5226: func (s *CloudWatchDimensionConfiguration) Validate() error {",
          "5227:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDimensionConfiguration\"}",
          "5228:  if s.DefaultDimensionValue == nil {",
          "5229:   invalidParams.Add(request.NewErrParamRequired(\"DefaultDimensionValue\"))",
          "5230:  }",
          "5231:  if s.DimensionName == nil {",
          "5232:   invalidParams.Add(request.NewErrParamRequired(\"DimensionName\"))",
          "5234:  if s.DimensionValueSource == nil {",
          "5235:   invalidParams.Add(request.NewErrParamRequired(\"DimensionValueSource\"))",
          "",
          "[Added Lines]",
          "7043: func (s *BulkEmailContent) SetTemplate(v *Template) *BulkEmailContent {",
          "7044:  s.Template = v",
          "7048: type BulkEmailEntry struct {",
          "7063:  Destination *Destination `type:\"structure\" required:\"true\"`",
          "7066:  ReplacementEmailContent *ReplacementEmailContent `type:\"structure\"`",
          "7071:  ReplacementTags []*MessageTag `type:\"list\"`",
          "7075: func (s BulkEmailEntry) String() string {",
          "7080: func (s BulkEmailEntry) GoString() string {",
          "7085: func (s *BulkEmailEntry) Validate() error {",
          "7086:  invalidParams := request.ErrInvalidParams{Context: \"BulkEmailEntry\"}",
          "7087:  if s.Destination == nil {",
          "7088:   invalidParams.Add(request.NewErrParamRequired(\"Destination\"))",
          "7090:  if s.ReplacementTags != nil {",
          "7091:   for i, v := range s.ReplacementTags {",
          "7092:    if v == nil {",
          "7093:     continue",
          "7094:    }",
          "7095:    if err := v.Validate(); err != nil {",
          "7096:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ReplacementTags\", i), err.(request.ErrInvalidParams))",
          "7097:    }",
          "7098:   }",
          "7099:  }",
          "7101:  if invalidParams.Len() > 0 {",
          "7102:   return invalidParams",
          "7103:  }",
          "7104:  return nil",
          "7105: }",
          "7108: func (s *BulkEmailEntry) SetDestination(v *Destination) *BulkEmailEntry {",
          "7109:  s.Destination = v",
          "7110:  return s",
          "7111: }",
          "7114: func (s *BulkEmailEntry) SetReplacementEmailContent(v *ReplacementEmailContent) *BulkEmailEntry {",
          "7115:  s.ReplacementEmailContent = v",
          "7116:  return s",
          "7117: }",
          "7120: func (s *BulkEmailEntry) SetReplacementTags(v []*MessageTag) *BulkEmailEntry {",
          "7121:  s.ReplacementTags = v",
          "7122:  return s",
          "7123: }",
          "7126: type BulkEmailEntryResult struct {",
          "7127:  _ struct{} `type:\"structure\"`",
          "7131:  Error *string `type:\"string\"`",
          "7134:  MessageId *string `type:\"string\"`",
          "7182:  Status *string `type:\"string\" enum:\"BulkEmailStatus\"`",
          "7183: }",
          "7186: func (s BulkEmailEntryResult) String() string {",
          "7187:  return awsutil.Prettify(s)",
          "7188: }",
          "7191: func (s BulkEmailEntryResult) GoString() string {",
          "7192:  return s.String()",
          "7193: }",
          "7196: func (s *BulkEmailEntryResult) SetError(v string) *BulkEmailEntryResult {",
          "7197:  s.Error = &v",
          "7198:  return s",
          "7199: }",
          "7202: func (s *BulkEmailEntryResult) SetMessageId(v string) *BulkEmailEntryResult {",
          "7203:  s.MessageId = &v",
          "7204:  return s",
          "7205: }",
          "7208: func (s *BulkEmailEntryResult) SetStatus(v string) *BulkEmailEntryResult {",
          "7209:  s.Status = &v",
          "7210:  return s",
          "7211: }",
          "7216: type CloudWatchDestination struct {",
          "7217:  _ struct{} `type:\"structure\"`",
          "7223:  DimensionConfigurations []*CloudWatchDimensionConfiguration `type:\"list\" required:\"true\"`",
          "7224: }",
          "7227: func (s CloudWatchDestination) String() string {",
          "7228:  return awsutil.Prettify(s)",
          "7229: }",
          "7232: func (s CloudWatchDestination) GoString() string {",
          "7233:  return s.String()",
          "7234: }",
          "7237: func (s *CloudWatchDestination) Validate() error {",
          "7238:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDestination\"}",
          "7239:  if s.DimensionConfigurations == nil {",
          "7240:   invalidParams.Add(request.NewErrParamRequired(\"DimensionConfigurations\"))",
          "7241:  }",
          "7242:  if s.DimensionConfigurations != nil {",
          "7243:   for i, v := range s.DimensionConfigurations {",
          "7244:    if v == nil {",
          "7245:     continue",
          "7246:    }",
          "7247:    if err := v.Validate(); err != nil {",
          "7248:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DimensionConfigurations\", i), err.(request.ErrInvalidParams))",
          "7249:    }",
          "7250:   }",
          "7251:  }",
          "7253:  if invalidParams.Len() > 0 {",
          "7254:   return invalidParams",
          "7255:  }",
          "7256:  return nil",
          "7257: }",
          "7260: func (s *CloudWatchDestination) SetDimensionConfigurations(v []*CloudWatchDimensionConfiguration) *CloudWatchDestination {",
          "7261:  s.DimensionConfigurations = v",
          "7262:  return s",
          "7263: }",
          "7267: type CloudWatchDimensionConfiguration struct {",
          "7268:  _ struct{} `type:\"structure\"`",
          "7280:  DefaultDimensionValue *string `type:\"string\" required:\"true\"`",
          "7291:  DimensionName *string `type:\"string\" required:\"true\"`",
          "7300:  DimensionValueSource *string `type:\"string\" required:\"true\" enum:\"DimensionValueSource\"`",
          "7301: }",
          "7304: func (s CloudWatchDimensionConfiguration) String() string {",
          "7305:  return awsutil.Prettify(s)",
          "7306: }",
          "7309: func (s CloudWatchDimensionConfiguration) GoString() string {",
          "7310:  return s.String()",
          "7311: }",
          "7314: func (s *CloudWatchDimensionConfiguration) Validate() error {",
          "7315:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDimensionConfiguration\"}",
          "7316:  if s.DefaultDimensionValue == nil {",
          "7317:   invalidParams.Add(request.NewErrParamRequired(\"DefaultDimensionValue\"))",
          "7318:  }",
          "7319:  if s.DimensionName == nil {",
          "7320:   invalidParams.Add(request.NewErrParamRequired(\"DimensionName\"))",
          "7321:  }",
          "7322:  if s.DimensionValueSource == nil {",
          "7323:   invalidParams.Add(request.NewErrParamRequired(\"DimensionValueSource\"))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5315:  return s.RespMetadata.RequestID",
          "5316: }",
          "5320: type Content struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7407: type ConflictException struct {",
          "7408:  _            struct{}                  `type:\"structure\"`",
          "7409:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7411:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7412: }",
          "7415: func (s ConflictException) String() string {",
          "7416:  return awsutil.Prettify(s)",
          "7417: }",
          "7420: func (s ConflictException) GoString() string {",
          "7421:  return s.String()",
          "7422: }",
          "7424: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "7425:  return &ConflictException{",
          "7426:   RespMetadata: v,",
          "7427:  }",
          "7428: }",
          "7431: func (s *ConflictException) Code() string {",
          "7432:  return \"ConflictException\"",
          "7433: }",
          "7436: func (s *ConflictException) Message() string {",
          "7437:  if s.Message_ != nil {",
          "7438:   return *s.Message_",
          "7439:  }",
          "7440:  return \"\"",
          "7441: }",
          "7444: func (s *ConflictException) OrigErr() error {",
          "7445:  return nil",
          "7446: }",
          "7448: func (s *ConflictException) Error() string {",
          "7449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7450: }",
          "7453: func (s *ConflictException) StatusCode() int {",
          "7454:  return s.RespMetadata.StatusCode",
          "7455: }",
          "7458: func (s *ConflictException) RequestID() string {",
          "7459:  return s.RespMetadata.RequestID",
          "7460: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5589:  return s.String()",
          "5590: }",
          "5594:  _ struct{} `type:\"structure\"`",
          "5604: }",
          "5608:  return awsutil.Prettify(s)",
          "5609: }",
          "5613:  return s.String()",
          "5614: }",
          "5621:  }",
          "5631:  }",
          "5633:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5593: type CreateDedicatedIpPoolInput struct {",
          "5599:  PoolName *string `type:\"string\" required:\"true\"`",
          "5603:  Tags []*Tag `type:\"list\"`",
          "5607: func (s CreateDedicatedIpPoolInput) String() string {",
          "5612: func (s CreateDedicatedIpPoolInput) GoString() string {",
          "5617: func (s *CreateDedicatedIpPoolInput) Validate() error {",
          "5618:  invalidParams := request.ErrInvalidParams{Context: \"CreateDedicatedIpPoolInput\"}",
          "5619:  if s.PoolName == nil {",
          "5620:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "5622:  if s.Tags != nil {",
          "5623:   for i, v := range s.Tags {",
          "5624:    if v == nil {",
          "5625:     continue",
          "5626:    }",
          "5627:    if err := v.Validate(); err != nil {",
          "5628:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "5629:    }",
          "5630:   }",
          "",
          "[Added Lines]",
          "7737: type CreateCustomVerificationEmailTemplateInput struct {",
          "7744:  FailureRedirectionURL *string `type:\"string\" required:\"true\"`",
          "7749:  FromEmailAddress *string `type:\"string\" required:\"true\"`",
          "7755:  SuccessRedirectionURL *string `type:\"string\" required:\"true\"`",
          "7764:  TemplateContent *string `type:\"string\" required:\"true\"`",
          "7769:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7774:  TemplateSubject *string `type:\"string\" required:\"true\"`",
          "7778: func (s CreateCustomVerificationEmailTemplateInput) String() string {",
          "7783: func (s CreateCustomVerificationEmailTemplateInput) GoString() string {",
          "7788: func (s *CreateCustomVerificationEmailTemplateInput) Validate() error {",
          "7789:  invalidParams := request.ErrInvalidParams{Context: \"CreateCustomVerificationEmailTemplateInput\"}",
          "7790:  if s.FailureRedirectionURL == nil {",
          "7791:   invalidParams.Add(request.NewErrParamRequired(\"FailureRedirectionURL\"))",
          "7793:  if s.FromEmailAddress == nil {",
          "7794:   invalidParams.Add(request.NewErrParamRequired(\"FromEmailAddress\"))",
          "7795:  }",
          "7796:  if s.SuccessRedirectionURL == nil {",
          "7797:   invalidParams.Add(request.NewErrParamRequired(\"SuccessRedirectionURL\"))",
          "7798:  }",
          "7799:  if s.TemplateContent == nil {",
          "7800:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "7801:  }",
          "7802:  if s.TemplateName == nil {",
          "7803:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "7804:  }",
          "7805:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "7806:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "7807:  }",
          "7808:  if s.TemplateSubject == nil {",
          "7809:   invalidParams.Add(request.NewErrParamRequired(\"TemplateSubject\"))",
          "7810:  }",
          "7812:  if invalidParams.Len() > 0 {",
          "7813:   return invalidParams",
          "7814:  }",
          "7815:  return nil",
          "7816: }",
          "7819: func (s *CreateCustomVerificationEmailTemplateInput) SetFailureRedirectionURL(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7820:  s.FailureRedirectionURL = &v",
          "7821:  return s",
          "7822: }",
          "7825: func (s *CreateCustomVerificationEmailTemplateInput) SetFromEmailAddress(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7826:  s.FromEmailAddress = &v",
          "7827:  return s",
          "7828: }",
          "7831: func (s *CreateCustomVerificationEmailTemplateInput) SetSuccessRedirectionURL(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7832:  s.SuccessRedirectionURL = &v",
          "7833:  return s",
          "7834: }",
          "7837: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateContent(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7838:  s.TemplateContent = &v",
          "7839:  return s",
          "7840: }",
          "7843: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateName(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7844:  s.TemplateName = &v",
          "7845:  return s",
          "7846: }",
          "7849: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateSubject(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7850:  s.TemplateSubject = &v",
          "7851:  return s",
          "7852: }",
          "7856: type CreateCustomVerificationEmailTemplateOutput struct {",
          "7857:  _ struct{} `type:\"structure\"`",
          "7858: }",
          "7861: func (s CreateCustomVerificationEmailTemplateOutput) String() string {",
          "7862:  return awsutil.Prettify(s)",
          "7863: }",
          "7866: func (s CreateCustomVerificationEmailTemplateOutput) GoString() string {",
          "7867:  return s.String()",
          "7868: }",
          "7871: type CreateDedicatedIpPoolInput struct {",
          "7872:  _ struct{} `type:\"structure\"`",
          "7877:  PoolName *string `type:\"string\" required:\"true\"`",
          "7881:  Tags []*Tag `type:\"list\"`",
          "7882: }",
          "7885: func (s CreateDedicatedIpPoolInput) String() string {",
          "7886:  return awsutil.Prettify(s)",
          "7887: }",
          "7890: func (s CreateDedicatedIpPoolInput) GoString() string {",
          "7891:  return s.String()",
          "7892: }",
          "7895: func (s *CreateDedicatedIpPoolInput) Validate() error {",
          "7896:  invalidParams := request.ErrInvalidParams{Context: \"CreateDedicatedIpPoolInput\"}",
          "7897:  if s.PoolName == nil {",
          "7898:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "7899:  }",
          "7900:  if s.Tags != nil {",
          "7901:   for i, v := range s.Tags {",
          "7902:    if v == nil {",
          "7903:     continue",
          "7904:    }",
          "7905:    if err := v.Validate(); err != nil {",
          "7906:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "7907:    }",
          "7908:   }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "5822:  EmailIdentity *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "8100:  EmailIdentity *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5842:  if s.EmailIdentity == nil {",
          "5843:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "5844:  }",
          "5845:  if s.DkimSigningAttributes != nil {",
          "5846:   if err := s.DkimSigningAttributes.Validate(); err != nil {",
          "5847:    invalidParams.AddNested(\"DkimSigningAttributes\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8123:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8124:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8125:  }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5929:  return s",
          "5930: }",
          "5934: type DailyVolume struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8217: type CreateEmailIdentityPolicyInput struct {",
          "8218:  _ struct{} `type:\"structure\"`",
          "8223:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8231:  Policy *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8239:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8240: }",
          "8243: func (s CreateEmailIdentityPolicyInput) String() string {",
          "8244:  return awsutil.Prettify(s)",
          "8245: }",
          "8248: func (s CreateEmailIdentityPolicyInput) GoString() string {",
          "8249:  return s.String()",
          "8250: }",
          "8253: func (s *CreateEmailIdentityPolicyInput) Validate() error {",
          "8254:  invalidParams := request.ErrInvalidParams{Context: \"CreateEmailIdentityPolicyInput\"}",
          "8255:  if s.EmailIdentity == nil {",
          "8256:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "8257:  }",
          "8258:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8259:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8260:  }",
          "8261:  if s.Policy == nil {",
          "8262:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "8263:  }",
          "8264:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "8265:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "8266:  }",
          "8267:  if s.PolicyName == nil {",
          "8268:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "8269:  }",
          "8270:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "8271:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "8272:  }",
          "8274:  if invalidParams.Len() > 0 {",
          "8275:   return invalidParams",
          "8276:  }",
          "8277:  return nil",
          "8278: }",
          "8281: func (s *CreateEmailIdentityPolicyInput) SetEmailIdentity(v string) *CreateEmailIdentityPolicyInput {",
          "8282:  s.EmailIdentity = &v",
          "8283:  return s",
          "8284: }",
          "8287: func (s *CreateEmailIdentityPolicyInput) SetPolicy(v string) *CreateEmailIdentityPolicyInput {",
          "8288:  s.Policy = &v",
          "8289:  return s",
          "8290: }",
          "8293: func (s *CreateEmailIdentityPolicyInput) SetPolicyName(v string) *CreateEmailIdentityPolicyInput {",
          "8294:  s.PolicyName = &v",
          "8295:  return s",
          "8296: }",
          "8300: type CreateEmailIdentityPolicyOutput struct {",
          "8301:  _ struct{} `type:\"structure\"`",
          "8302: }",
          "8305: func (s CreateEmailIdentityPolicyOutput) String() string {",
          "8306:  return awsutil.Prettify(s)",
          "8307: }",
          "8310: func (s CreateEmailIdentityPolicyOutput) GoString() string {",
          "8311:  return s.String()",
          "8312: }",
          "8316: type CreateEmailTemplateInput struct {",
          "8317:  _ struct{} `type:\"structure\"`",
          "8323:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "8328:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8329: }",
          "8332: func (s CreateEmailTemplateInput) String() string {",
          "8333:  return awsutil.Prettify(s)",
          "8334: }",
          "8337: func (s CreateEmailTemplateInput) GoString() string {",
          "8338:  return s.String()",
          "8339: }",
          "8342: func (s *CreateEmailTemplateInput) Validate() error {",
          "8343:  invalidParams := request.ErrInvalidParams{Context: \"CreateEmailTemplateInput\"}",
          "8344:  if s.TemplateContent == nil {",
          "8345:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "8346:  }",
          "8347:  if s.TemplateName == nil {",
          "8348:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8349:  }",
          "8350:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8351:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "8352:  }",
          "8354:  if invalidParams.Len() > 0 {",
          "8355:   return invalidParams",
          "8356:  }",
          "8357:  return nil",
          "8358: }",
          "8361: func (s *CreateEmailTemplateInput) SetTemplateContent(v *EmailTemplateContent) *CreateEmailTemplateInput {",
          "8362:  s.TemplateContent = v",
          "8363:  return s",
          "8364: }",
          "8367: func (s *CreateEmailTemplateInput) SetTemplateName(v string) *CreateEmailTemplateInput {",
          "8368:  s.TemplateName = &v",
          "8369:  return s",
          "8370: }",
          "8374: type CreateEmailTemplateOutput struct {",
          "8375:  _ struct{} `type:\"structure\"`",
          "8376: }",
          "8379: func (s CreateEmailTemplateOutput) String() string {",
          "8380:  return awsutil.Prettify(s)",
          "8381: }",
          "8384: func (s CreateEmailTemplateOutput) GoString() string {",
          "8385:  return s.String()",
          "8386: }",
          "8389: type CustomVerificationEmailTemplateMetadata struct {",
          "8390:  _ struct{} `type:\"structure\"`",
          "8394:  FailureRedirectionURL *string `type:\"string\"`",
          "8397:  FromEmailAddress *string `type:\"string\"`",
          "8401:  SuccessRedirectionURL *string `type:\"string\"`",
          "8404:  TemplateName *string `min:\"1\" type:\"string\"`",
          "8407:  TemplateSubject *string `type:\"string\"`",
          "8408: }",
          "8411: func (s CustomVerificationEmailTemplateMetadata) String() string {",
          "8412:  return awsutil.Prettify(s)",
          "8413: }",
          "8416: func (s CustomVerificationEmailTemplateMetadata) GoString() string {",
          "8417:  return s.String()",
          "8418: }",
          "8421: func (s *CustomVerificationEmailTemplateMetadata) SetFailureRedirectionURL(v string) *CustomVerificationEmailTemplateMetadata {",
          "8422:  s.FailureRedirectionURL = &v",
          "8423:  return s",
          "8424: }",
          "8427: func (s *CustomVerificationEmailTemplateMetadata) SetFromEmailAddress(v string) *CustomVerificationEmailTemplateMetadata {",
          "8428:  s.FromEmailAddress = &v",
          "8429:  return s",
          "8430: }",
          "8433: func (s *CustomVerificationEmailTemplateMetadata) SetSuccessRedirectionURL(v string) *CustomVerificationEmailTemplateMetadata {",
          "8434:  s.SuccessRedirectionURL = &v",
          "8435:  return s",
          "8436: }",
          "8439: func (s *CustomVerificationEmailTemplateMetadata) SetTemplateName(v string) *CustomVerificationEmailTemplateMetadata {",
          "8440:  s.TemplateName = &v",
          "8441:  return s",
          "8442: }",
          "8445: func (s *CustomVerificationEmailTemplateMetadata) SetTemplateSubject(v string) *CustomVerificationEmailTemplateMetadata {",
          "8446:  s.TemplateSubject = &v",
          "8447:  return s",
          "8448: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6179:  return s.String()",
          "6180: }",
          "6184:  _ struct{} `type:\"structure\"`",
          "6190: }",
          "6194:  return awsutil.Prettify(s)",
          "6195: }",
          "6199:  return s.String()",
          "6200: }",
          "6207:  }",
          "6210:  }",
          "6212:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6183: type DeleteDedicatedIpPoolInput struct {",
          "6189:  PoolName *string `location:\"uri\" locationName:\"PoolName\" type:\"string\" required:\"true\"`",
          "6193: func (s DeleteDedicatedIpPoolInput) String() string {",
          "6198: func (s DeleteDedicatedIpPoolInput) GoString() string {",
          "6203: func (s *DeleteDedicatedIpPoolInput) Validate() error {",
          "6204:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDedicatedIpPoolInput\"}",
          "6205:  if s.PoolName == nil {",
          "6206:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "6208:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "6209:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "",
          "[Added Lines]",
          "8701: type DeleteCustomVerificationEmailTemplateInput struct {",
          "8707:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8711: func (s DeleteCustomVerificationEmailTemplateInput) String() string {",
          "8716: func (s DeleteCustomVerificationEmailTemplateInput) GoString() string {",
          "8721: func (s *DeleteCustomVerificationEmailTemplateInput) Validate() error {",
          "8722:  invalidParams := request.ErrInvalidParams{Context: \"DeleteCustomVerificationEmailTemplateInput\"}",
          "8723:  if s.TemplateName == nil {",
          "8724:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8726:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8727:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6215:  return nil",
          "6216: }",
          "6221:  return s",
          "6222: }",
          "6227:  _ struct{} `type:\"structure\"`",
          "6228: }",
          "6232:  return awsutil.Prettify(s)",
          "6233: }",
          "6237:  return s.String()",
          "6238: }",
          "6245:  _ struct{} `type:\"structure\"`",
          "6251: }",
          "6255:  return awsutil.Prettify(s)",
          "6256: }",
          "6260:  return s.String()",
          "6261: }",
          "",
          "[Removed Lines]",
          "6219: func (s *DeleteDedicatedIpPoolInput) SetPoolName(v string) *DeleteDedicatedIpPoolInput {",
          "6220:  s.PoolName = &v",
          "6226: type DeleteDedicatedIpPoolOutput struct {",
          "6231: func (s DeleteDedicatedIpPoolOutput) String() string {",
          "6236: func (s DeleteDedicatedIpPoolOutput) GoString() string {",
          "6244: type DeleteEmailIdentityInput struct {",
          "6250:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "6254: func (s DeleteEmailIdentityInput) String() string {",
          "6259: func (s DeleteEmailIdentityInput) GoString() string {",
          "",
          "[Added Lines]",
          "8737: func (s *DeleteCustomVerificationEmailTemplateInput) SetTemplateName(v string) *DeleteCustomVerificationEmailTemplateInput {",
          "8738:  s.TemplateName = &v",
          "8744: type DeleteCustomVerificationEmailTemplateOutput struct {",
          "8749: func (s DeleteCustomVerificationEmailTemplateOutput) String() string {",
          "8754: func (s DeleteCustomVerificationEmailTemplateOutput) GoString() string {",
          "8759: type DeleteDedicatedIpPoolInput struct {",
          "8765:  PoolName *string `location:\"uri\" locationName:\"PoolName\" type:\"string\" required:\"true\"`",
          "8769: func (s DeleteDedicatedIpPoolInput) String() string {",
          "8774: func (s DeleteDedicatedIpPoolInput) GoString() string {",
          "8775:  return s.String()",
          "8776: }",
          "8779: func (s *DeleteDedicatedIpPoolInput) Validate() error {",
          "8780:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDedicatedIpPoolInput\"}",
          "8781:  if s.PoolName == nil {",
          "8782:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "8783:  }",
          "8784:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "8785:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "8786:  }",
          "8788:  if invalidParams.Len() > 0 {",
          "8789:   return invalidParams",
          "8790:  }",
          "8791:  return nil",
          "8792: }",
          "8795: func (s *DeleteDedicatedIpPoolInput) SetPoolName(v string) *DeleteDedicatedIpPoolInput {",
          "8796:  s.PoolName = &v",
          "8797:  return s",
          "8798: }",
          "8802: type DeleteDedicatedIpPoolOutput struct {",
          "8803:  _ struct{} `type:\"structure\"`",
          "8804: }",
          "8807: func (s DeleteDedicatedIpPoolOutput) String() string {",
          "8808:  return awsutil.Prettify(s)",
          "8809: }",
          "8812: func (s DeleteDedicatedIpPoolOutput) GoString() string {",
          "8813:  return s.String()",
          "8814: }",
          "8820: type DeleteEmailIdentityInput struct {",
          "8821:  _ struct{} `type:\"structure\"`",
          "8826:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8827: }",
          "8830: func (s DeleteEmailIdentityInput) String() string {",
          "8831:  return awsutil.Prettify(s)",
          "8832: }",
          "8835: func (s DeleteEmailIdentityInput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6298:  return s.String()",
          "6299: }",
          "6302: type DeleteSuppressedDestinationInput struct {",
          "6303:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8881: type DeleteEmailIdentityPolicyInput struct {",
          "8882:  _ struct{} `type:\"structure\"`",
          "8887:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8895:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8896: }",
          "8899: func (s DeleteEmailIdentityPolicyInput) String() string {",
          "8900:  return awsutil.Prettify(s)",
          "8901: }",
          "8904: func (s DeleteEmailIdentityPolicyInput) GoString() string {",
          "8905:  return s.String()",
          "8906: }",
          "8909: func (s *DeleteEmailIdentityPolicyInput) Validate() error {",
          "8910:  invalidParams := request.ErrInvalidParams{Context: \"DeleteEmailIdentityPolicyInput\"}",
          "8911:  if s.EmailIdentity == nil {",
          "8912:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "8913:  }",
          "8914:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8915:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8916:  }",
          "8917:  if s.PolicyName == nil {",
          "8918:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "8919:  }",
          "8920:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "8921:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "8922:  }",
          "8924:  if invalidParams.Len() > 0 {",
          "8925:   return invalidParams",
          "8926:  }",
          "8927:  return nil",
          "8928: }",
          "8931: func (s *DeleteEmailIdentityPolicyInput) SetEmailIdentity(v string) *DeleteEmailIdentityPolicyInput {",
          "8932:  s.EmailIdentity = &v",
          "8933:  return s",
          "8934: }",
          "8937: func (s *DeleteEmailIdentityPolicyInput) SetPolicyName(v string) *DeleteEmailIdentityPolicyInput {",
          "8938:  s.PolicyName = &v",
          "8939:  return s",
          "8940: }",
          "8944: type DeleteEmailIdentityPolicyOutput struct {",
          "8945:  _ struct{} `type:\"structure\"`",
          "8946: }",
          "8949: func (s DeleteEmailIdentityPolicyOutput) String() string {",
          "8950:  return awsutil.Prettify(s)",
          "8951: }",
          "8954: func (s DeleteEmailIdentityPolicyOutput) GoString() string {",
          "8955:  return s.String()",
          "8956: }",
          "8960: type DeleteEmailTemplateInput struct {",
          "8961:  _ struct{} `type:\"structure\"`",
          "8966:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8967: }",
          "8970: func (s DeleteEmailTemplateInput) String() string {",
          "8971:  return awsutil.Prettify(s)",
          "8972: }",
          "8975: func (s DeleteEmailTemplateInput) GoString() string {",
          "8976:  return s.String()",
          "8977: }",
          "8980: func (s *DeleteEmailTemplateInput) Validate() error {",
          "8981:  invalidParams := request.ErrInvalidParams{Context: \"DeleteEmailTemplateInput\"}",
          "8982:  if s.TemplateName == nil {",
          "8983:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8984:  }",
          "8985:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8986:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "8987:  }",
          "8989:  if invalidParams.Len() > 0 {",
          "8990:   return invalidParams",
          "8991:  }",
          "8992:  return nil",
          "8993: }",
          "8996: func (s *DeleteEmailTemplateInput) SetTemplateName(v string) *DeleteEmailTemplateInput {",
          "8997:  s.TemplateName = &v",
          "8998:  return s",
          "8999: }",
          "9003: type DeleteEmailTemplateOutput struct {",
          "9004:  _ struct{} `type:\"structure\"`",
          "9005: }",
          "9008: func (s DeleteEmailTemplateOutput) String() string {",
          "9009:  return awsutil.Prettify(s)",
          "9010: }",
          "9013: func (s DeleteEmailTemplateOutput) GoString() string {",
          "9014:  return s.String()",
          "9015: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "6704:  FirstSeenDateTime *time.Time `type:\"timestamp\"`",
          "",
          "[Removed Lines]",
          "6707:  FromAddress *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "9423:  FromAddress *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "7011:    invalidParams.AddNested(\"Simple\", err.(request.ErrInvalidParams))",
          "7012:   }",
          "7013:  }",
          "7015:  if invalidParams.Len() > 0 {",
          "7016:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9730:  if s.Template != nil {",
          "9731:   if err := s.Template.Validate(); err != nil {",
          "9732:    invalidParams.AddNested(\"Template\", err.(request.ErrInvalidParams))",
          "9733:   }",
          "9734:  }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "7036:  return s",
          "7037: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9762: type EmailTemplateContent struct {",
          "9763:  _ struct{} `type:\"structure\"`",
          "9766:  Html *string `type:\"string\"`",
          "9769:  Subject *string `type:\"string\"`",
          "9773:  Text *string `type:\"string\"`",
          "9774: }",
          "9777: func (s EmailTemplateContent) String() string {",
          "9778:  return awsutil.Prettify(s)",
          "9779: }",
          "9782: func (s EmailTemplateContent) GoString() string {",
          "9783:  return s.String()",
          "9784: }",
          "9787: func (s *EmailTemplateContent) SetHtml(v string) *EmailTemplateContent {",
          "9788:  s.Html = &v",
          "9789:  return s",
          "9790: }",
          "9793: func (s *EmailTemplateContent) SetSubject(v string) *EmailTemplateContent {",
          "9794:  s.Subject = &v",
          "9795:  return s",
          "9796: }",
          "9799: func (s *EmailTemplateContent) SetText(v string) *EmailTemplateContent {",
          "9800:  s.Text = &v",
          "9801:  return s",
          "9802: }",
          "9805: type EmailTemplateMetadata struct {",
          "9806:  _ struct{} `type:\"structure\"`",
          "9809:  CreatedTimestamp *time.Time `type:\"timestamp\"`",
          "9812:  TemplateName *string `min:\"1\" type:\"string\"`",
          "9813: }",
          "9816: func (s EmailTemplateMetadata) String() string {",
          "9817:  return awsutil.Prettify(s)",
          "9818: }",
          "9821: func (s EmailTemplateMetadata) GoString() string {",
          "9822:  return s.String()",
          "9823: }",
          "9826: func (s *EmailTemplateMetadata) SetCreatedTimestamp(v time.Time) *EmailTemplateMetadata {",
          "9827:  s.CreatedTimestamp = &v",
          "9828:  return s",
          "9829: }",
          "9832: func (s *EmailTemplateMetadata) SetTemplateName(v string) *EmailTemplateMetadata {",
          "9833:  s.TemplateName = &v",
          "9834:  return s",
          "9835: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "7273:  DedicatedIpAutoWarmupEnabled *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10074:  Details *AccountDetails `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "7332:  return s",
          "7333: }",
          "7336: func (s *GetAccountOutput) SetEnforcementStatus(v string) *GetAccountOutput {",
          "7337:  s.EnforcementStatus = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10137: func (s *GetAccountOutput) SetDetails(v *AccountDetails) *GetAccountOutput {",
          "10138:  s.Details = v",
          "10139:  return s",
          "10140: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "7626:  return s",
          "7627: }",
          "7631:  _ struct{} `type:\"structure\"`",
          "7639: }",
          "7643:  return awsutil.Prettify(s)",
          "7644: }",
          "7648:  return s.String()",
          "7649: }",
          "7656:  }",
          "7659:  }",
          "7661:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "7630: type GetDedicatedIpInput struct {",
          "7638:  Ip *string `location:\"uri\" locationName:\"IP\" type:\"string\" required:\"true\"`",
          "7642: func (s GetDedicatedIpInput) String() string {",
          "7647: func (s GetDedicatedIpInput) GoString() string {",
          "7652: func (s *GetDedicatedIpInput) Validate() error {",
          "7653:  invalidParams := request.ErrInvalidParams{Context: \"GetDedicatedIpInput\"}",
          "7654:  if s.Ip == nil {",
          "7655:   invalidParams.Add(request.NewErrParamRequired(\"Ip\"))",
          "7657:  if s.Ip != nil && len(*s.Ip) < 1 {",
          "7658:   invalidParams.Add(request.NewErrParamMinLen(\"Ip\", 1))",
          "",
          "[Added Lines]",
          "10437: type GetCustomVerificationEmailTemplateInput struct {",
          "10443:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "10447: func (s GetCustomVerificationEmailTemplateInput) String() string {",
          "10452: func (s GetCustomVerificationEmailTemplateInput) GoString() string {",
          "10457: func (s *GetCustomVerificationEmailTemplateInput) Validate() error {",
          "10458:  invalidParams := request.ErrInvalidParams{Context: \"GetCustomVerificationEmailTemplateInput\"}",
          "10459:  if s.TemplateName == nil {",
          "10460:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "10462:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "10463:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "7664:  return nil",
          "7665: }",
          "7670:  return s",
          "7671: }",
          "7675:  _ struct{} `type:\"structure\"`",
          "7679: }",
          "7683:  return awsutil.Prettify(s)",
          "7684: }",
          "7688:  return s.String()",
          "7689: }",
          "7694:  return s",
          "7695: }",
          "7712:  PoolName *string `location:\"querystring\" locationName:\"PoolName\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "7668: func (s *GetDedicatedIpInput) SetIp(v string) *GetDedicatedIpInput {",
          "7669:  s.Ip = &v",
          "7674: type GetDedicatedIpOutput struct {",
          "7678:  DedicatedIp *DedicatedIp `type:\"structure\"`",
          "7682: func (s GetDedicatedIpOutput) String() string {",
          "7687: func (s GetDedicatedIpOutput) GoString() string {",
          "7692: func (s *GetDedicatedIpOutput) SetDedicatedIp(v *DedicatedIp) *GetDedicatedIpOutput {",
          "7693:  s.DedicatedIp = v",
          "7698: type GetDedicatedIpsInput struct {",
          "7699:  _ struct{} `type:\"structure\"`",
          "7703:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "7709:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "10473: func (s *GetCustomVerificationEmailTemplateInput) SetTemplateName(v string) *GetCustomVerificationEmailTemplateInput {",
          "10474:  s.TemplateName = &v",
          "10479: type GetCustomVerificationEmailTemplateOutput struct {",
          "10484:  FailureRedirectionURL *string `type:\"string\"`",
          "10487:  FromEmailAddress *string `type:\"string\"`",
          "10491:  SuccessRedirectionURL *string `type:\"string\"`",
          "10494:  TemplateContent *string `type:\"string\"`",
          "10497:  TemplateName *string `min:\"1\" type:\"string\"`",
          "10500:  TemplateSubject *string `type:\"string\"`",
          "10504: func (s GetCustomVerificationEmailTemplateOutput) String() string {",
          "10509: func (s GetCustomVerificationEmailTemplateOutput) GoString() string {",
          "10514: func (s *GetCustomVerificationEmailTemplateOutput) SetFailureRedirectionURL(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10515:  s.FailureRedirectionURL = &v",
          "10520: func (s *GetCustomVerificationEmailTemplateOutput) SetFromEmailAddress(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10521:  s.FromEmailAddress = &v",
          "10522:  return s",
          "10523: }",
          "10526: func (s *GetCustomVerificationEmailTemplateOutput) SetSuccessRedirectionURL(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10527:  s.SuccessRedirectionURL = &v",
          "10528:  return s",
          "10529: }",
          "10532: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateContent(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10533:  s.TemplateContent = &v",
          "10534:  return s",
          "10535: }",
          "10538: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateName(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10539:  s.TemplateName = &v",
          "10540:  return s",
          "10541: }",
          "10544: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateSubject(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10545:  s.TemplateSubject = &v",
          "10546:  return s",
          "10547: }",
          "10550: type GetDedicatedIpInput struct {",
          "10551:  _ struct{} `type:\"structure\"`",
          "10558:  Ip *string `location:\"uri\" locationName:\"IP\" type:\"string\" required:\"true\"`",
          "10559: }",
          "10562: func (s GetDedicatedIpInput) String() string {",
          "10563:  return awsutil.Prettify(s)",
          "10564: }",
          "10567: func (s GetDedicatedIpInput) GoString() string {",
          "10568:  return s.String()",
          "10569: }",
          "10572: func (s *GetDedicatedIpInput) Validate() error {",
          "10573:  invalidParams := request.ErrInvalidParams{Context: \"GetDedicatedIpInput\"}",
          "10574:  if s.Ip == nil {",
          "10575:   invalidParams.Add(request.NewErrParamRequired(\"Ip\"))",
          "10576:  }",
          "10577:  if s.Ip != nil && len(*s.Ip) < 1 {",
          "10578:   invalidParams.Add(request.NewErrParamMinLen(\"Ip\", 1))",
          "10579:  }",
          "10581:  if invalidParams.Len() > 0 {",
          "10582:   return invalidParams",
          "10583:  }",
          "10584:  return nil",
          "10585: }",
          "10588: func (s *GetDedicatedIpInput) SetIp(v string) *GetDedicatedIpInput {",
          "10589:  s.Ip = &v",
          "10590:  return s",
          "10591: }",
          "10594: type GetDedicatedIpOutput struct {",
          "10595:  _ struct{} `type:\"structure\"`",
          "10598:  DedicatedIp *DedicatedIp `type:\"structure\"`",
          "10599: }",
          "10602: func (s GetDedicatedIpOutput) String() string {",
          "10603:  return awsutil.Prettify(s)",
          "10604: }",
          "10607: func (s GetDedicatedIpOutput) GoString() string {",
          "10608:  return s.String()",
          "10609: }",
          "10612: func (s *GetDedicatedIpOutput) SetDedicatedIp(v *DedicatedIp) *GetDedicatedIpOutput {",
          "10613:  s.DedicatedIp = v",
          "10614:  return s",
          "10615: }",
          "10618: type GetDedicatedIpsInput struct {",
          "10619:  _ struct{} `type:\"structure\"`",
          "10623:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "10629:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "8068:  Domain *string `location:\"uri\" locationName:\"Domain\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "10988:  Domain *string `location:\"uri\" locationName:\"Domain\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "8184: }",
          "",
          "[Removed Lines]",
          "8183:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "11103:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "8242:  MailFromAttributes *MailFromAttributes `type:\"structure\"`",
          "8246:  Tags []*Tag `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11165:  Policies map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "8285:  return s",
          "8286: }",
          "8289: func (s *GetEmailIdentityOutput) SetTags(v []*Tag) *GetEmailIdentityOutput {",
          "8290:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11212: func (s *GetEmailIdentityOutput) SetPolicies(v map[string]*string) *GetEmailIdentityOutput {",
          "11213:  s.Policies = v",
          "11214:  return s",
          "11215: }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "8297:  return s",
          "8298: }",
          "8302: type GetSuppressedDestinationInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11230: type GetEmailIdentityPoliciesInput struct {",
          "11231:  _ struct{} `type:\"structure\"`",
          "11236:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "11237: }",
          "11240: func (s GetEmailIdentityPoliciesInput) String() string {",
          "11241:  return awsutil.Prettify(s)",
          "11242: }",
          "11245: func (s GetEmailIdentityPoliciesInput) GoString() string {",
          "11246:  return s.String()",
          "11247: }",
          "11250: func (s *GetEmailIdentityPoliciesInput) Validate() error {",
          "11251:  invalidParams := request.ErrInvalidParams{Context: \"GetEmailIdentityPoliciesInput\"}",
          "11252:  if s.EmailIdentity == nil {",
          "11253:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "11254:  }",
          "11255:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "11256:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "11257:  }",
          "11259:  if invalidParams.Len() > 0 {",
          "11260:   return invalidParams",
          "11261:  }",
          "11262:  return nil",
          "11263: }",
          "11266: func (s *GetEmailIdentityPoliciesInput) SetEmailIdentity(v string) *GetEmailIdentityPoliciesInput {",
          "11267:  s.EmailIdentity = &v",
          "11268:  return s",
          "11269: }",
          "11272: type GetEmailIdentityPoliciesOutput struct {",
          "11273:  _ struct{} `type:\"structure\"`",
          "11276:  Policies map[string]*string `type:\"map\"`",
          "11277: }",
          "11280: func (s GetEmailIdentityPoliciesOutput) String() string {",
          "11281:  return awsutil.Prettify(s)",
          "11282: }",
          "11285: func (s GetEmailIdentityPoliciesOutput) GoString() string {",
          "11286:  return s.String()",
          "11287: }",
          "11290: func (s *GetEmailIdentityPoliciesOutput) SetPolicies(v map[string]*string) *GetEmailIdentityPoliciesOutput {",
          "11291:  s.Policies = v",
          "11292:  return s",
          "11293: }",
          "11297: type GetEmailTemplateInput struct {",
          "11298:  _ struct{} `type:\"structure\"`",
          "11303:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "11304: }",
          "11307: func (s GetEmailTemplateInput) String() string {",
          "11308:  return awsutil.Prettify(s)",
          "11309: }",
          "11312: func (s GetEmailTemplateInput) GoString() string {",
          "11313:  return s.String()",
          "11314: }",
          "11317: func (s *GetEmailTemplateInput) Validate() error {",
          "11318:  invalidParams := request.ErrInvalidParams{Context: \"GetEmailTemplateInput\"}",
          "11319:  if s.TemplateName == nil {",
          "11320:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "11321:  }",
          "11322:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "11323:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "11324:  }",
          "11326:  if invalidParams.Len() > 0 {",
          "11327:   return invalidParams",
          "11328:  }",
          "11329:  return nil",
          "11330: }",
          "11333: func (s *GetEmailTemplateInput) SetTemplateName(v string) *GetEmailTemplateInput {",
          "11334:  s.TemplateName = &v",
          "11335:  return s",
          "11336: }",
          "11339: type GetEmailTemplateOutput struct {",
          "11340:  _ struct{} `type:\"structure\"`",
          "11346:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "11351:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11352: }",
          "11355: func (s GetEmailTemplateOutput) String() string {",
          "11356:  return awsutil.Prettify(s)",
          "11357: }",
          "11360: func (s GetEmailTemplateOutput) GoString() string {",
          "11361:  return s.String()",
          "11362: }",
          "11365: func (s *GetEmailTemplateOutput) SetTemplateContent(v *EmailTemplateContent) *GetEmailTemplateOutput {",
          "11366:  s.TemplateContent = v",
          "11367:  return s",
          "11368: }",
          "11371: func (s *GetEmailTemplateOutput) SetTemplateName(v string) *GetEmailTemplateOutput {",
          "11372:  s.TemplateName = &v",
          "11373:  return s",
          "11374: }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "8371:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "8374:  IdentityName *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "11450:  IdentityName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "8732:  return s",
          "8733: }",
          "8736: type ListDedicatedIpPoolsInput struct {",
          "8737:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11813: type ListCustomVerificationEmailTemplatesInput struct {",
          "11814:  _ struct{} `type:\"structure\"`",
          "11818:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "11826:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "11827: }",
          "11830: func (s ListCustomVerificationEmailTemplatesInput) String() string {",
          "11831:  return awsutil.Prettify(s)",
          "11832: }",
          "11835: func (s ListCustomVerificationEmailTemplatesInput) GoString() string {",
          "11836:  return s.String()",
          "11837: }",
          "11840: func (s *ListCustomVerificationEmailTemplatesInput) SetNextToken(v string) *ListCustomVerificationEmailTemplatesInput {",
          "11841:  s.NextToken = &v",
          "11842:  return s",
          "11843: }",
          "11846: func (s *ListCustomVerificationEmailTemplatesInput) SetPageSize(v int64) *ListCustomVerificationEmailTemplatesInput {",
          "11847:  s.PageSize = &v",
          "11848:  return s",
          "11849: }",
          "11852: type ListCustomVerificationEmailTemplatesOutput struct {",
          "11853:  _ struct{} `type:\"structure\"`",
          "11856:  CustomVerificationEmailTemplates []*CustomVerificationEmailTemplateMetadata `type:\"list\"`",
          "11861:  NextToken *string `type:\"string\"`",
          "11862: }",
          "11865: func (s ListCustomVerificationEmailTemplatesOutput) String() string {",
          "11866:  return awsutil.Prettify(s)",
          "11867: }",
          "11870: func (s ListCustomVerificationEmailTemplatesOutput) GoString() string {",
          "11871:  return s.String()",
          "11872: }",
          "11875: func (s *ListCustomVerificationEmailTemplatesOutput) SetCustomVerificationEmailTemplates(v []*CustomVerificationEmailTemplateMetadata) *ListCustomVerificationEmailTemplatesOutput {",
          "11876:  s.CustomVerificationEmailTemplates = v",
          "11877:  return s",
          "11878: }",
          "11881: func (s *ListCustomVerificationEmailTemplatesOutput) SetNextToken(v string) *ListCustomVerificationEmailTemplatesOutput {",
          "11882:  s.NextToken = &v",
          "11883:  return s",
          "11884: }",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "9103:  return s",
          "9104: }",
          "9109:  _ struct{} `type:\"structure\"`",
          "9118:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "9124:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "9108: type ListSuppressedDestinationsInput struct {",
          "9114:  EndDate *time.Time `location:\"querystring\" locationName:\"EndDate\" type:\"timestamp\"`",
          "",
          "[Added Lines]",
          "12260: type ListEmailTemplatesInput struct {",
          "12273:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "12274: }",
          "12277: func (s ListEmailTemplatesInput) String() string {",
          "12278:  return awsutil.Prettify(s)",
          "12279: }",
          "12282: func (s ListEmailTemplatesInput) GoString() string {",
          "12283:  return s.String()",
          "12284: }",
          "12287: func (s *ListEmailTemplatesInput) SetNextToken(v string) *ListEmailTemplatesInput {",
          "12288:  s.NextToken = &v",
          "12289:  return s",
          "12290: }",
          "12293: func (s *ListEmailTemplatesInput) SetPageSize(v int64) *ListEmailTemplatesInput {",
          "12294:  s.PageSize = &v",
          "12295:  return s",
          "12296: }",
          "12299: type ListEmailTemplatesOutput struct {",
          "12300:  _ struct{} `type:\"structure\"`",
          "12305:  NextToken *string `type:\"string\"`",
          "12309:  TemplatesMetadata []*EmailTemplateMetadata `type:\"list\"`",
          "12310: }",
          "12313: func (s ListEmailTemplatesOutput) String() string {",
          "12314:  return awsutil.Prettify(s)",
          "12315: }",
          "12318: func (s ListEmailTemplatesOutput) GoString() string {",
          "12319:  return s.String()",
          "12320: }",
          "12323: func (s *ListEmailTemplatesOutput) SetNextToken(v string) *ListEmailTemplatesOutput {",
          "12324:  s.NextToken = &v",
          "12325:  return s",
          "12326: }",
          "12329: func (s *ListEmailTemplatesOutput) SetTemplatesMetadata(v []*EmailTemplateMetadata) *ListEmailTemplatesOutput {",
          "12330:  s.TemplatesMetadata = v",
          "12331:  return s",
          "12332: }",
          "12336: type ListSuppressedDestinationsInput struct {",
          "12337:  _ struct{} `type:\"structure\"`",
          "12342:  EndDate *time.Time `location:\"querystring\" locationName:\"EndDate\" type:\"timestamp\"`",
          "12346:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "9823:  return s.String()",
          "9824: }",
          "9827: type PutAccountSendingAttributesInput struct {",
          "9828:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13055: type PutAccountDetailsInput struct {",
          "13056:  _ struct{} `type:\"structure\"`",
          "13060:  AdditionalContactEmailAddresses []*string `min:\"1\" type:\"list\" sensitive:\"true\"`",
          "13063:  ContactLanguage *string `type:\"string\" enum:\"ContactLanguage\"`",
          "13068:  MailType *string `type:\"string\" required:\"true\" enum:\"MailType\"`",
          "13083:  ProductionAccessEnabled *bool `type:\"boolean\"`",
          "13088:  UseCaseDescription *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "13094:  WebsiteURL *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "13095: }",
          "13098: func (s PutAccountDetailsInput) String() string {",
          "13099:  return awsutil.Prettify(s)",
          "13100: }",
          "13103: func (s PutAccountDetailsInput) GoString() string {",
          "13104:  return s.String()",
          "13105: }",
          "13108: func (s *PutAccountDetailsInput) Validate() error {",
          "13109:  invalidParams := request.ErrInvalidParams{Context: \"PutAccountDetailsInput\"}",
          "13110:  if s.AdditionalContactEmailAddresses != nil && len(s.AdditionalContactEmailAddresses) < 1 {",
          "13111:   invalidParams.Add(request.NewErrParamMinLen(\"AdditionalContactEmailAddresses\", 1))",
          "13112:  }",
          "13113:  if s.MailType == nil {",
          "13114:   invalidParams.Add(request.NewErrParamRequired(\"MailType\"))",
          "13115:  }",
          "13116:  if s.UseCaseDescription == nil {",
          "13117:   invalidParams.Add(request.NewErrParamRequired(\"UseCaseDescription\"))",
          "13118:  }",
          "13119:  if s.UseCaseDescription != nil && len(*s.UseCaseDescription) < 1 {",
          "13120:   invalidParams.Add(request.NewErrParamMinLen(\"UseCaseDescription\", 1))",
          "13121:  }",
          "13122:  if s.WebsiteURL == nil {",
          "13123:   invalidParams.Add(request.NewErrParamRequired(\"WebsiteURL\"))",
          "13124:  }",
          "13125:  if s.WebsiteURL != nil && len(*s.WebsiteURL) < 1 {",
          "13126:   invalidParams.Add(request.NewErrParamMinLen(\"WebsiteURL\", 1))",
          "13127:  }",
          "13129:  if invalidParams.Len() > 0 {",
          "13130:   return invalidParams",
          "13131:  }",
          "13132:  return nil",
          "13133: }",
          "13136: func (s *PutAccountDetailsInput) SetAdditionalContactEmailAddresses(v []*string) *PutAccountDetailsInput {",
          "13137:  s.AdditionalContactEmailAddresses = v",
          "13138:  return s",
          "13139: }",
          "13142: func (s *PutAccountDetailsInput) SetContactLanguage(v string) *PutAccountDetailsInput {",
          "13143:  s.ContactLanguage = &v",
          "13144:  return s",
          "13145: }",
          "13148: func (s *PutAccountDetailsInput) SetMailType(v string) *PutAccountDetailsInput {",
          "13149:  s.MailType = &v",
          "13150:  return s",
          "13151: }",
          "13154: func (s *PutAccountDetailsInput) SetProductionAccessEnabled(v bool) *PutAccountDetailsInput {",
          "13155:  s.ProductionAccessEnabled = &v",
          "13156:  return s",
          "13157: }",
          "13160: func (s *PutAccountDetailsInput) SetUseCaseDescription(v string) *PutAccountDetailsInput {",
          "13161:  s.UseCaseDescription = &v",
          "13162:  return s",
          "13163: }",
          "13166: func (s *PutAccountDetailsInput) SetWebsiteURL(v string) *PutAccountDetailsInput {",
          "13167:  s.WebsiteURL = &v",
          "13168:  return s",
          "13169: }",
          "13173: type PutAccountDetailsOutput struct {",
          "13174:  _ struct{} `type:\"structure\"`",
          "13175: }",
          "13178: func (s PutAccountDetailsOutput) String() string {",
          "13179:  return awsutil.Prettify(s)",
          "13180: }",
          "13183: func (s PutAccountDetailsOutput) GoString() string {",
          "13184:  return s.String()",
          "13185: }",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10518:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "13879:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10589:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "13950:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "10756: }",
          "",
          "[Removed Lines]",
          "10755:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14116:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10830:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14191:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "10911:  EmailAddress *string `type:\"string\" required:\"true\"`",
          "10918: }",
          "10923: }",
          "10928: }",
          "10944: }",
          "10949:  return s",
          "10950: }",
          "10955:  return s",
          "10956: }",
          "10961:  _ struct{} `type:\"structure\"`",
          "10962: }",
          "10966:  return awsutil.Prettify(s)",
          "10967: }",
          "10971:  return s.String()",
          "10972: }",
          "10976:  _ struct{} `type:\"structure\"`",
          "11002: }",
          "11006:  return awsutil.Prettify(s)",
          "11007: }",
          "11011:  return s.String()",
          "11012: }",
          "11019:  }",
          "11021:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "10917:  Reason *string `type:\"string\" required:\"true\" enum:\"SuppressionListReason\"`",
          "10921: func (s PutSuppressedDestinationInput) String() string {",
          "10922:  return awsutil.Prettify(s)",
          "10926: func (s PutSuppressedDestinationInput) GoString() string {",
          "10927:  return s.String()",
          "10931: func (s *PutSuppressedDestinationInput) Validate() error {",
          "10932:  invalidParams := request.ErrInvalidParams{Context: \"PutSuppressedDestinationInput\"}",
          "10933:  if s.EmailAddress == nil {",
          "10934:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "10935:  }",
          "10936:  if s.Reason == nil {",
          "10937:   invalidParams.Add(request.NewErrParamRequired(\"Reason\"))",
          "10938:  }",
          "10940:  if invalidParams.Len() > 0 {",
          "10941:   return invalidParams",
          "10942:  }",
          "10943:  return nil",
          "10947: func (s *PutSuppressedDestinationInput) SetEmailAddress(v string) *PutSuppressedDestinationInput {",
          "10948:  s.EmailAddress = &v",
          "10953: func (s *PutSuppressedDestinationInput) SetReason(v string) *PutSuppressedDestinationInput {",
          "10954:  s.Reason = &v",
          "10960: type PutSuppressedDestinationOutput struct {",
          "10965: func (s PutSuppressedDestinationOutput) String() string {",
          "10970: func (s PutSuppressedDestinationOutput) GoString() string {",
          "10975: type RawMessage struct {",
          "11001:  Data []byte `type:\"blob\" required:\"true\"`",
          "11005: func (s RawMessage) String() string {",
          "11010: func (s RawMessage) GoString() string {",
          "11015: func (s *RawMessage) Validate() error {",
          "11016:  invalidParams := request.ErrInvalidParams{Context: \"RawMessage\"}",
          "11017:  if s.Data == nil {",
          "11018:   invalidParams.Add(request.NewErrParamRequired(\"Data\"))",
          "",
          "[Added Lines]",
          "14278:  Reason *string `type:\"string\" required:\"true\" enum:\"SuppressionListReason\"`",
          "14279: }",
          "14282: func (s PutSuppressedDestinationInput) String() string {",
          "14283:  return awsutil.Prettify(s)",
          "14284: }",
          "14287: func (s PutSuppressedDestinationInput) GoString() string {",
          "14288:  return s.String()",
          "14289: }",
          "14292: func (s *PutSuppressedDestinationInput) Validate() error {",
          "14293:  invalidParams := request.ErrInvalidParams{Context: \"PutSuppressedDestinationInput\"}",
          "14294:  if s.EmailAddress == nil {",
          "14295:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "14296:  }",
          "14297:  if s.Reason == nil {",
          "14298:   invalidParams.Add(request.NewErrParamRequired(\"Reason\"))",
          "14299:  }",
          "14301:  if invalidParams.Len() > 0 {",
          "14302:   return invalidParams",
          "14303:  }",
          "14304:  return nil",
          "14305: }",
          "14308: func (s *PutSuppressedDestinationInput) SetEmailAddress(v string) *PutSuppressedDestinationInput {",
          "14309:  s.EmailAddress = &v",
          "14310:  return s",
          "14311: }",
          "14314: func (s *PutSuppressedDestinationInput) SetReason(v string) *PutSuppressedDestinationInput {",
          "14315:  s.Reason = &v",
          "14316:  return s",
          "14317: }",
          "14321: type PutSuppressedDestinationOutput struct {",
          "14322:  _ struct{} `type:\"structure\"`",
          "14323: }",
          "14326: func (s PutSuppressedDestinationOutput) String() string {",
          "14327:  return awsutil.Prettify(s)",
          "14328: }",
          "14331: func (s PutSuppressedDestinationOutput) GoString() string {",
          "14332:  return s.String()",
          "14333: }",
          "14336: type RawMessage struct {",
          "14337:  _ struct{} `type:\"structure\"`",
          "14362:  Data []byte `type:\"blob\" required:\"true\"`",
          "14363: }",
          "14366: func (s RawMessage) String() string {",
          "14367:  return awsutil.Prettify(s)",
          "14368: }",
          "14371: func (s RawMessage) GoString() string {",
          "14372:  return s.String()",
          "14373: }",
          "14376: func (s *RawMessage) Validate() error {",
          "14377:  invalidParams := request.ErrInvalidParams{Context: \"RawMessage\"}",
          "14378:  if s.Data == nil {",
          "14379:   invalidParams.Add(request.NewErrParamRequired(\"Data\"))",
          "14380:  }",
          "14382:  if invalidParams.Len() > 0 {",
          "14383:   return invalidParams",
          "14384:  }",
          "14385:  return nil",
          "14386: }",
          "14389: func (s *RawMessage) SetData(v []byte) *RawMessage {",
          "14390:  s.Data = v",
          "14391:  return s",
          "14392: }",
          "14396: type ReplacementEmailContent struct {",
          "14397:  _ struct{} `type:\"structure\"`",
          "14400:  ReplacementTemplate *ReplacementTemplate `type:\"structure\"`",
          "14401: }",
          "14404: func (s ReplacementEmailContent) String() string {",
          "14405:  return awsutil.Prettify(s)",
          "14406: }",
          "14409: func (s ReplacementEmailContent) GoString() string {",
          "14410:  return s.String()",
          "14411: }",
          "14414: func (s *ReplacementEmailContent) SetReplacementTemplate(v *ReplacementTemplate) *ReplacementEmailContent {",
          "14415:  s.ReplacementTemplate = v",
          "14416:  return s",
          "14417: }",
          "14421: type ReplacementTemplate struct {",
          "14422:  _ struct{} `type:\"structure\"`",
          "14427:  ReplacementTemplateData *string `type:\"string\"`",
          "14428: }",
          "14431: func (s ReplacementTemplate) String() string {",
          "14432:  return awsutil.Prettify(s)",
          "14433: }",
          "14436: func (s ReplacementTemplate) GoString() string {",
          "14437:  return s.String()",
          "14438: }",
          "14441: func (s *ReplacementTemplate) SetReplacementTemplateData(v string) *ReplacementTemplate {",
          "14442:  s.ReplacementTemplateData = &v",
          "14443:  return s",
          "14444: }",
          "14448: type ReputationOptions struct {",
          "14449:  _ struct{} `type:\"structure\"`",
          "14454:  LastFreshStart *time.Time `type:\"timestamp\"`",
          "14459:  ReputationMetricsEnabled *bool `type:\"boolean\"`",
          "14460: }",
          "14463: func (s ReputationOptions) String() string {",
          "14464:  return awsutil.Prettify(s)",
          "14465: }",
          "14468: func (s ReputationOptions) GoString() string {",
          "14469:  return s.String()",
          "14470: }",
          "14473: func (s *ReputationOptions) SetLastFreshStart(v time.Time) *ReputationOptions {",
          "14474:  s.LastFreshStart = &v",
          "14475:  return s",
          "14476: }",
          "14479: func (s *ReputationOptions) SetReputationMetricsEnabled(v bool) *ReputationOptions {",
          "14480:  s.ReputationMetricsEnabled = &v",
          "14481:  return s",
          "14482: }",
          "14485: type ReviewDetails struct {",
          "14486:  _ struct{} `type:\"structure\"`",
          "14489:  CaseId *string `type:\"string\"`",
          "14505:  Status *string `type:\"string\" enum:\"ReviewStatus\"`",
          "14506: }",
          "14509: func (s ReviewDetails) String() string {",
          "14510:  return awsutil.Prettify(s)",
          "14511: }",
          "14514: func (s ReviewDetails) GoString() string {",
          "14515:  return s.String()",
          "14516: }",
          "14519: func (s *ReviewDetails) SetCaseId(v string) *ReviewDetails {",
          "14520:  s.CaseId = &v",
          "14521:  return s",
          "14522: }",
          "14525: func (s *ReviewDetails) SetStatus(v string) *ReviewDetails {",
          "14526:  s.Status = &v",
          "14527:  return s",
          "14528: }",
          "14532: type SendBulkEmailInput struct {",
          "14533:  _ struct{} `type:\"structure\"`",
          "14538:  BulkEmailEntries []*BulkEmailEntry `type:\"list\" required:\"true\"`",
          "14541:  ConfigurationSetName *string `type:\"string\"`",
          "14547:  DefaultContent *BulkEmailContent `type:\"structure\" required:\"true\"`",
          "14552:  DefaultEmailTags []*MessageTag `type:\"list\"`",
          "14555:  FeedbackForwardingEmailAddress *string `type:\"string\"`",
          "14570:  FeedbackForwardingEmailAddressIdentityArn *string `type:\"string\"`",
          "14574:  FromEmailAddress *string `type:\"string\"`",
          "14587:  FromEmailAddressIdentityArn *string `type:\"string\"`",
          "14591:  ReplyToAddresses []*string `type:\"list\"`",
          "14592: }",
          "14595: func (s SendBulkEmailInput) String() string {",
          "14596:  return awsutil.Prettify(s)",
          "14597: }",
          "14600: func (s SendBulkEmailInput) GoString() string {",
          "14601:  return s.String()",
          "14602: }",
          "14605: func (s *SendBulkEmailInput) Validate() error {",
          "14606:  invalidParams := request.ErrInvalidParams{Context: \"SendBulkEmailInput\"}",
          "14607:  if s.BulkEmailEntries == nil {",
          "14608:   invalidParams.Add(request.NewErrParamRequired(\"BulkEmailEntries\"))",
          "14609:  }",
          "14610:  if s.DefaultContent == nil {",
          "14611:   invalidParams.Add(request.NewErrParamRequired(\"DefaultContent\"))",
          "14612:  }",
          "14613:  if s.BulkEmailEntries != nil {",
          "14614:   for i, v := range s.BulkEmailEntries {",
          "14615:    if v == nil {",
          "14616:     continue",
          "14617:    }",
          "14618:    if err := v.Validate(); err != nil {",
          "14619:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"BulkEmailEntries\", i), err.(request.ErrInvalidParams))",
          "14620:    }",
          "14621:   }",
          "14622:  }",
          "14623:  if s.DefaultContent != nil {",
          "14624:   if err := s.DefaultContent.Validate(); err != nil {",
          "14625:    invalidParams.AddNested(\"DefaultContent\", err.(request.ErrInvalidParams))",
          "14626:   }",
          "14627:  }",
          "14628:  if s.DefaultEmailTags != nil {",
          "14629:   for i, v := range s.DefaultEmailTags {",
          "14630:    if v == nil {",
          "14631:     continue",
          "14632:    }",
          "14633:    if err := v.Validate(); err != nil {",
          "14634:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DefaultEmailTags\", i), err.(request.ErrInvalidParams))",
          "14635:    }",
          "14636:   }",
          "14637:  }",
          "14639:  if invalidParams.Len() > 0 {",
          "14640:   return invalidParams",
          "14641:  }",
          "14642:  return nil",
          "14643: }",
          "14646: func (s *SendBulkEmailInput) SetBulkEmailEntries(v []*BulkEmailEntry) *SendBulkEmailInput {",
          "14647:  s.BulkEmailEntries = v",
          "14648:  return s",
          "14649: }",
          "14652: func (s *SendBulkEmailInput) SetConfigurationSetName(v string) *SendBulkEmailInput {",
          "14653:  s.ConfigurationSetName = &v",
          "14654:  return s",
          "14655: }",
          "14658: func (s *SendBulkEmailInput) SetDefaultContent(v *BulkEmailContent) *SendBulkEmailInput {",
          "14659:  s.DefaultContent = v",
          "14660:  return s",
          "14664: func (s *SendBulkEmailInput) SetDefaultEmailTags(v []*MessageTag) *SendBulkEmailInput {",
          "14665:  s.DefaultEmailTags = v",
          "14666:  return s",
          "14670: func (s *SendBulkEmailInput) SetFeedbackForwardingEmailAddress(v string) *SendBulkEmailInput {",
          "14671:  s.FeedbackForwardingEmailAddress = &v",
          "14672:  return s",
          "14676: func (s *SendBulkEmailInput) SetFeedbackForwardingEmailAddressIdentityArn(v string) *SendBulkEmailInput {",
          "14677:  s.FeedbackForwardingEmailAddressIdentityArn = &v",
          "14678:  return s",
          "14679: }",
          "14682: func (s *SendBulkEmailInput) SetFromEmailAddress(v string) *SendBulkEmailInput {",
          "14683:  s.FromEmailAddress = &v",
          "14684:  return s",
          "14688: func (s *SendBulkEmailInput) SetFromEmailAddressIdentityArn(v string) *SendBulkEmailInput {",
          "14689:  s.FromEmailAddressIdentityArn = &v",
          "14694: func (s *SendBulkEmailInput) SetReplyToAddresses(v []*string) *SendBulkEmailInput {",
          "14695:  s.ReplyToAddresses = v",
          "14700: type SendBulkEmailOutput struct {",
          "14706:  BulkEmailEntryResults []*BulkEmailEntryResult `type:\"list\" required:\"true\"`",
          "14710: func (s SendBulkEmailOutput) String() string {",
          "14715: func (s SendBulkEmailOutput) GoString() string {",
          "14720: func (s *SendBulkEmailOutput) SetBulkEmailEntryResults(v []*BulkEmailEntryResult) *SendBulkEmailOutput {",
          "14721:  s.BulkEmailEntryResults = v",
          "14722:  return s",
          "14723: }",
          "14726: type SendCustomVerificationEmailInput struct {",
          "14730:  ConfigurationSetName *string `type:\"string\"`",
          "14735:  EmailAddress *string `type:\"string\" required:\"true\"`",
          "14741:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "14745: func (s SendCustomVerificationEmailInput) String() string {",
          "14750: func (s SendCustomVerificationEmailInput) GoString() string {",
          "14755: func (s *SendCustomVerificationEmailInput) Validate() error {",
          "14756:  invalidParams := request.ErrInvalidParams{Context: \"SendCustomVerificationEmailInput\"}",
          "14757:  if s.EmailAddress == nil {",
          "14758:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "14759:  }",
          "14760:  if s.TemplateName == nil {",
          "14761:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "14762:  }",
          "14763:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "14764:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "11024:  return nil",
          "11025: }",
          "11030:  return s",
          "11031: }",
          "11047: }",
          "11051:  return awsutil.Prettify(s)",
          "11052: }",
          "11056:  return s.String()",
          "11057: }",
          "11068:  return s",
          "11069: }",
          "11072: type SendEmailInput struct {",
          "11073:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "11028: func (s *RawMessage) SetData(v []byte) *RawMessage {",
          "11029:  s.Data = v",
          "11035: type ReputationOptions struct {",
          "11036:  _ struct{} `type:\"structure\"`",
          "11041:  LastFreshStart *time.Time `type:\"timestamp\"`",
          "11046:  ReputationMetricsEnabled *bool `type:\"boolean\"`",
          "11050: func (s ReputationOptions) String() string {",
          "11055: func (s ReputationOptions) GoString() string {",
          "11060: func (s *ReputationOptions) SetLastFreshStart(v time.Time) *ReputationOptions {",
          "11061:  s.LastFreshStart = &v",
          "11062:  return s",
          "11063: }",
          "11066: func (s *ReputationOptions) SetReputationMetricsEnabled(v bool) *ReputationOptions {",
          "11067:  s.ReputationMetricsEnabled = &v",
          "",
          "[Added Lines]",
          "14774: func (s *SendCustomVerificationEmailInput) SetConfigurationSetName(v string) *SendCustomVerificationEmailInput {",
          "14775:  s.ConfigurationSetName = &v",
          "14780: func (s *SendCustomVerificationEmailInput) SetEmailAddress(v string) *SendCustomVerificationEmailInput {",
          "14781:  s.EmailAddress = &v",
          "14782:  return s",
          "14783: }",
          "14786: func (s *SendCustomVerificationEmailInput) SetTemplateName(v string) *SendCustomVerificationEmailInput {",
          "14787:  s.TemplateName = &v",
          "14788:  return s",
          "14789: }",
          "14792: type SendCustomVerificationEmailOutput struct {",
          "14793:  _ struct{} `type:\"structure\"`",
          "14797:  MessageId *string `type:\"string\"`",
          "14801: func (s SendCustomVerificationEmailOutput) String() string {",
          "14806: func (s SendCustomVerificationEmailOutput) GoString() string {",
          "14811: func (s *SendCustomVerificationEmailOutput) SetMessageId(v string) *SendCustomVerificationEmailOutput {",
          "14812:  s.MessageId = &v",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "11076:  ConfigurationSetName *string `type:\"string\"`",
          "11082:  Content *EmailContent `type:\"structure\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "11087:  Destination *Destination `type:\"structure\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14831:  Destination *Destination `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "11095:  FeedbackForwardingEmailAddress *string `type:\"string\"`",
          "11099:  FromEmailAddress *string `type:\"string\"`",
          "11103:  ReplyToAddresses []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14854:  FeedbackForwardingEmailAddressIdentityArn *string `type:\"string\"`",
          "14874:  FromEmailAddressIdentityArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "11119:  if s.Content == nil {",
          "11120:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "11121:  }",
          "11125:  if s.Content != nil {",
          "11126:   if err := s.Content.Validate(); err != nil {",
          "11127:    invalidParams.AddNested(\"Content\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "11122:  if s.Destination == nil {",
          "11123:   invalidParams.Add(request.NewErrParamRequired(\"Destination\"))",
          "11124:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "11174:  return s",
          "11175: }",
          "11178: func (s *SendEmailInput) SetFromEmailAddress(v string) *SendEmailInput {",
          "11179:  s.FromEmailAddress = &v",
          "11180:  return s",
          "11181: }",
          "11184: func (s *SendEmailInput) SetReplyToAddresses(v []*string) *SendEmailInput {",
          "11185:  s.ReplyToAddresses = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14950: func (s *SendEmailInput) SetFeedbackForwardingEmailAddressIdentityArn(v string) *SendEmailInput {",
          "14951:  s.FeedbackForwardingEmailAddressIdentityArn = &v",
          "14952:  return s",
          "14953: }",
          "14962: func (s *SendEmailInput) SetFromEmailAddressIdentityArn(v string) *SendEmailInput {",
          "14963:  s.FromEmailAddressIdentityArn = &v",
          "14964:  return s",
          "14965: }",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "11740:  return nil",
          "11741: }",
          "11746:  return s",
          "11747: }",
          "11752:  return s",
          "11753: }",
          "11774:  _ struct{} `type:\"structure\"`",
          "11784: }",
          "11788:  return awsutil.Prettify(s)",
          "11789: }",
          "11793:  return s.String()",
          "11794: }",
          "11805:  return s",
          "11806: }",
          "",
          "[Removed Lines]",
          "11744: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "11745:  s.ResourceArn = &v",
          "11750: func (s *TagResourceInput) SetTags(v []*Tag) *TagResourceInput {",
          "11751:  s.Tags = v",
          "11755: type TagResourceOutput struct {",
          "11756:  _ struct{} `type:\"structure\"`",
          "11757: }",
          "11760: func (s TagResourceOutput) String() string {",
          "11761:  return awsutil.Prettify(s)",
          "11762: }",
          "11765: func (s TagResourceOutput) GoString() string {",
          "11766:  return s.String()",
          "11767: }",
          "11773: type Template struct {",
          "11777:  TemplateArn *string `type:\"string\"`",
          "11783:  TemplateData *string `type:\"string\"`",
          "11787: func (s Template) String() string {",
          "11792: func (s Template) GoString() string {",
          "11797: func (s *Template) SetTemplateArn(v string) *Template {",
          "11798:  s.TemplateArn = &v",
          "11799:  return s",
          "11800: }",
          "11803: func (s *Template) SetTemplateData(v string) *Template {",
          "11804:  s.TemplateData = &v",
          "",
          "[Added Lines]",
          "15528: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "15529:  s.ResourceArn = &v",
          "15530:  return s",
          "15531: }",
          "15534: func (s *TagResourceInput) SetTags(v []*Tag) *TagResourceInput {",
          "15535:  s.Tags = v",
          "15536:  return s",
          "15537: }",
          "15539: type TagResourceOutput struct {",
          "15540:  _ struct{} `type:\"structure\"`",
          "15541: }",
          "15544: func (s TagResourceOutput) String() string {",
          "15545:  return awsutil.Prettify(s)",
          "15546: }",
          "15549: func (s TagResourceOutput) GoString() string {",
          "15550:  return s.String()",
          "15551: }",
          "15557: type Template struct {",
          "15558:  _ struct{} `type:\"structure\"`",
          "15561:  TemplateArn *string `type:\"string\"`",
          "15567:  TemplateData *string `type:\"string\"`",
          "15571:  TemplateName *string `min:\"1\" type:\"string\"`",
          "15572: }",
          "15575: func (s Template) String() string {",
          "15576:  return awsutil.Prettify(s)",
          "15577: }",
          "15580: func (s Template) GoString() string {",
          "15581:  return s.String()",
          "15582: }",
          "15585: func (s *Template) Validate() error {",
          "15586:  invalidParams := request.ErrInvalidParams{Context: \"Template\"}",
          "15587:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "15588:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "15589:  }",
          "15591:  if invalidParams.Len() > 0 {",
          "15592:   return invalidParams",
          "15593:  }",
          "15594:  return nil",
          "15595: }",
          "15598: func (s *Template) SetTemplateArn(v string) *Template {",
          "15599:  s.TemplateArn = &v",
          "15600:  return s",
          "15601: }",
          "15604: func (s *Template) SetTemplateData(v string) *Template {",
          "15605:  s.TemplateData = &v",
          "15606:  return s",
          "15607: }",
          "15610: func (s *Template) SetTemplateName(v string) *Template {",
          "15611:  s.TemplateName = &v",
          "15612:  return s",
          "15613: }",
          "15617: type TestRenderEmailTemplateInput struct {",
          "15618:  _ struct{} `type:\"structure\"`",
          "15625:  TemplateData *string `type:\"string\" required:\"true\"`",
          "15630:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "15631: }",
          "15634: func (s TestRenderEmailTemplateInput) String() string {",
          "15635:  return awsutil.Prettify(s)",
          "15636: }",
          "15639: func (s TestRenderEmailTemplateInput) GoString() string {",
          "15640:  return s.String()",
          "15641: }",
          "15644: func (s *TestRenderEmailTemplateInput) Validate() error {",
          "15645:  invalidParams := request.ErrInvalidParams{Context: \"TestRenderEmailTemplateInput\"}",
          "15646:  if s.TemplateData == nil {",
          "15647:   invalidParams.Add(request.NewErrParamRequired(\"TemplateData\"))",
          "15648:  }",
          "15649:  if s.TemplateName == nil {",
          "15650:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "15651:  }",
          "15652:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "15653:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "15654:  }",
          "15656:  if invalidParams.Len() > 0 {",
          "15657:   return invalidParams",
          "15658:  }",
          "15659:  return nil",
          "15660: }",
          "15663: func (s *TestRenderEmailTemplateInput) SetTemplateData(v string) *TestRenderEmailTemplateInput {",
          "15664:  s.TemplateData = &v",
          "15669: func (s *TestRenderEmailTemplateInput) SetTemplateName(v string) *TestRenderEmailTemplateInput {",
          "15670:  s.TemplateName = &v",
          "15675: type TestRenderEmailTemplateOutput struct {",
          "15682:  RenderedTemplate *string `type:\"string\" required:\"true\"`",
          "15686: func (s TestRenderEmailTemplateOutput) String() string {",
          "15691: func (s TestRenderEmailTemplateOutput) GoString() string {",
          "15696: func (s *TestRenderEmailTemplateOutput) SetRenderedTemplate(v string) *TestRenderEmailTemplateOutput {",
          "15697:  s.RenderedTemplate = &v",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "12076:  return s.String()",
          "12077: }",
          "12081: type VolumeStatistics struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15973: type UpdateCustomVerificationEmailTemplateInput struct {",
          "15974:  _ struct{} `type:\"structure\"`",
          "15980:  FailureRedirectionURL *string `type:\"string\" required:\"true\"`",
          "15985:  FromEmailAddress *string `type:\"string\" required:\"true\"`",
          "15991:  SuccessRedirectionURL *string `type:\"string\" required:\"true\"`",
          "16000:  TemplateContent *string `type:\"string\" required:\"true\"`",
          "16005:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16010:  TemplateSubject *string `type:\"string\" required:\"true\"`",
          "16011: }",
          "16014: func (s UpdateCustomVerificationEmailTemplateInput) String() string {",
          "16015:  return awsutil.Prettify(s)",
          "16016: }",
          "16019: func (s UpdateCustomVerificationEmailTemplateInput) GoString() string {",
          "16020:  return s.String()",
          "16021: }",
          "16024: func (s *UpdateCustomVerificationEmailTemplateInput) Validate() error {",
          "16025:  invalidParams := request.ErrInvalidParams{Context: \"UpdateCustomVerificationEmailTemplateInput\"}",
          "16026:  if s.FailureRedirectionURL == nil {",
          "16027:   invalidParams.Add(request.NewErrParamRequired(\"FailureRedirectionURL\"))",
          "16028:  }",
          "16029:  if s.FromEmailAddress == nil {",
          "16030:   invalidParams.Add(request.NewErrParamRequired(\"FromEmailAddress\"))",
          "16031:  }",
          "16032:  if s.SuccessRedirectionURL == nil {",
          "16033:   invalidParams.Add(request.NewErrParamRequired(\"SuccessRedirectionURL\"))",
          "16034:  }",
          "16035:  if s.TemplateContent == nil {",
          "16036:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "16037:  }",
          "16038:  if s.TemplateName == nil {",
          "16039:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "16040:  }",
          "16041:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "16042:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "16043:  }",
          "16044:  if s.TemplateSubject == nil {",
          "16045:   invalidParams.Add(request.NewErrParamRequired(\"TemplateSubject\"))",
          "16046:  }",
          "16048:  if invalidParams.Len() > 0 {",
          "16049:   return invalidParams",
          "16050:  }",
          "16051:  return nil",
          "16052: }",
          "16055: func (s *UpdateCustomVerificationEmailTemplateInput) SetFailureRedirectionURL(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16056:  s.FailureRedirectionURL = &v",
          "16057:  return s",
          "16058: }",
          "16061: func (s *UpdateCustomVerificationEmailTemplateInput) SetFromEmailAddress(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16062:  s.FromEmailAddress = &v",
          "16063:  return s",
          "16064: }",
          "16067: func (s *UpdateCustomVerificationEmailTemplateInput) SetSuccessRedirectionURL(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16068:  s.SuccessRedirectionURL = &v",
          "16069:  return s",
          "16070: }",
          "16073: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateContent(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16074:  s.TemplateContent = &v",
          "16075:  return s",
          "16076: }",
          "16079: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateName(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16080:  s.TemplateName = &v",
          "16081:  return s",
          "16082: }",
          "16085: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateSubject(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16086:  s.TemplateSubject = &v",
          "16087:  return s",
          "16088: }",
          "16092: type UpdateCustomVerificationEmailTemplateOutput struct {",
          "16093:  _ struct{} `type:\"structure\"`",
          "16094: }",
          "16097: func (s UpdateCustomVerificationEmailTemplateOutput) String() string {",
          "16098:  return awsutil.Prettify(s)",
          "16099: }",
          "16102: func (s UpdateCustomVerificationEmailTemplateOutput) GoString() string {",
          "16103:  return s.String()",
          "16104: }",
          "16110: type UpdateEmailIdentityPolicyInput struct {",
          "16111:  _ struct{} `type:\"structure\"`",
          "16116:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "16124:  Policy *string `min:\"1\" type:\"string\" required:\"true\"`",
          "16132:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16133: }",
          "16136: func (s UpdateEmailIdentityPolicyInput) String() string {",
          "16137:  return awsutil.Prettify(s)",
          "16138: }",
          "16141: func (s UpdateEmailIdentityPolicyInput) GoString() string {",
          "16142:  return s.String()",
          "16143: }",
          "16146: func (s *UpdateEmailIdentityPolicyInput) Validate() error {",
          "16147:  invalidParams := request.ErrInvalidParams{Context: \"UpdateEmailIdentityPolicyInput\"}",
          "16148:  if s.EmailIdentity == nil {",
          "16149:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "16150:  }",
          "16151:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "16152:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "16153:  }",
          "16154:  if s.Policy == nil {",
          "16155:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "16156:  }",
          "16157:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "16158:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "16159:  }",
          "16160:  if s.PolicyName == nil {",
          "16161:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "16162:  }",
          "16163:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "16164:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "16165:  }",
          "16167:  if invalidParams.Len() > 0 {",
          "16168:   return invalidParams",
          "16169:  }",
          "16170:  return nil",
          "16171: }",
          "16174: func (s *UpdateEmailIdentityPolicyInput) SetEmailIdentity(v string) *UpdateEmailIdentityPolicyInput {",
          "16175:  s.EmailIdentity = &v",
          "16176:  return s",
          "16177: }",
          "16180: func (s *UpdateEmailIdentityPolicyInput) SetPolicy(v string) *UpdateEmailIdentityPolicyInput {",
          "16181:  s.Policy = &v",
          "16182:  return s",
          "16183: }",
          "16186: func (s *UpdateEmailIdentityPolicyInput) SetPolicyName(v string) *UpdateEmailIdentityPolicyInput {",
          "16187:  s.PolicyName = &v",
          "16188:  return s",
          "16189: }",
          "16193: type UpdateEmailIdentityPolicyOutput struct {",
          "16194:  _ struct{} `type:\"structure\"`",
          "16195: }",
          "16198: func (s UpdateEmailIdentityPolicyOutput) String() string {",
          "16199:  return awsutil.Prettify(s)",
          "16200: }",
          "16203: func (s UpdateEmailIdentityPolicyOutput) GoString() string {",
          "16204:  return s.String()",
          "16205: }",
          "16209: type UpdateEmailTemplateInput struct {",
          "16210:  _ struct{} `type:\"structure\"`",
          "16216:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "16221:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16222: }",
          "16225: func (s UpdateEmailTemplateInput) String() string {",
          "16226:  return awsutil.Prettify(s)",
          "16227: }",
          "16230: func (s UpdateEmailTemplateInput) GoString() string {",
          "16231:  return s.String()",
          "16232: }",
          "16235: func (s *UpdateEmailTemplateInput) Validate() error {",
          "16236:  invalidParams := request.ErrInvalidParams{Context: \"UpdateEmailTemplateInput\"}",
          "16237:  if s.TemplateContent == nil {",
          "16238:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "16239:  }",
          "16240:  if s.TemplateName == nil {",
          "16241:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "16242:  }",
          "16243:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "16244:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "16245:  }",
          "16247:  if invalidParams.Len() > 0 {",
          "16248:   return invalidParams",
          "16249:  }",
          "16250:  return nil",
          "16251: }",
          "16254: func (s *UpdateEmailTemplateInput) SetTemplateContent(v *EmailTemplateContent) *UpdateEmailTemplateInput {",
          "16255:  s.TemplateContent = v",
          "16256:  return s",
          "16257: }",
          "16260: func (s *UpdateEmailTemplateInput) SetTemplateName(v string) *UpdateEmailTemplateInput {",
          "16261:  s.TemplateName = &v",
          "16262:  return s",
          "16263: }",
          "16267: type UpdateEmailTemplateOutput struct {",
          "16268:  _ struct{} `type:\"structure\"`",
          "16269: }",
          "16272: func (s UpdateEmailTemplateOutput) String() string {",
          "16273:  return awsutil.Prettify(s)",
          "16274: }",
          "16277: func (s UpdateEmailTemplateOutput) GoString() string {",
          "16278:  return s.String()",
          "16279: }",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "12147:  BehaviorOnMxFailureRejectMessage = \"REJECT_MESSAGE\"",
          "12148: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16352: const (",
          "16354:  BulkEmailStatusSuccess = \"SUCCESS\"",
          "16357:  BulkEmailStatusMessageRejected = \"MESSAGE_REJECTED\"",
          "16360:  BulkEmailStatusMailFromDomainNotVerified = \"MAIL_FROM_DOMAIN_NOT_VERIFIED\"",
          "16363:  BulkEmailStatusConfigurationSetNotFound = \"CONFIGURATION_SET_NOT_FOUND\"",
          "16366:  BulkEmailStatusTemplateNotFound = \"TEMPLATE_NOT_FOUND\"",
          "16369:  BulkEmailStatusAccountSuspended = \"ACCOUNT_SUSPENDED\"",
          "16372:  BulkEmailStatusAccountThrottled = \"ACCOUNT_THROTTLED\"",
          "16375:  BulkEmailStatusAccountDailyQuotaExceeded = \"ACCOUNT_DAILY_QUOTA_EXCEEDED\"",
          "16378:  BulkEmailStatusInvalidSendingPoolName = \"INVALID_SENDING_POOL_NAME\"",
          "16381:  BulkEmailStatusAccountSendingPaused = \"ACCOUNT_SENDING_PAUSED\"",
          "16384:  BulkEmailStatusConfigurationSetSendingPaused = \"CONFIGURATION_SET_SENDING_PAUSED\"",
          "16387:  BulkEmailStatusInvalidParameter = \"INVALID_PARAMETER\"",
          "16390:  BulkEmailStatusTransientFailure = \"TRANSIENT_FAILURE\"",
          "16393:  BulkEmailStatusFailed = \"FAILED\"",
          "16394: )",
          "16396: const (",
          "16398:  ContactLanguageEn = \"EN\"",
          "16401:  ContactLanguageJa = \"JA\"",
          "16402: )",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "12305:  MailFromDomainStatusTemporaryFailure = \"TEMPORARY_FAILURE\"",
          "12306: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16562: const (",
          "16564:  MailTypeMarketing = \"MARKETING\"",
          "16567:  MailTypeTransactional = \"TRANSACTIONAL\"",
          "16568: )",
          "16570: const (",
          "16572:  ReviewStatusPending = \"PENDING\"",
          "16575:  ReviewStatusFailed = \"FAILED\"",
          "16578:  ReviewStatusGranted = \"GRANTED\"",
          "16581:  ReviewStatusDenied = \"DENIED\"",
          "16582: )",
          "",
          "---------------"
        ],
        "service/sesv2/errors.go||service/sesv2/errors.go": [
          "File: service/sesv2/errors.go -> service/sesv2/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  ErrCodeConcurrentModificationException = \"ConcurrentModificationException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  \"AlreadyExistsException\":             newErrorAlreadyExistsException,",
          "83:  \"BadRequestException\":                newErrorBadRequestException,",
          "84:  \"ConcurrentModificationException\":    newErrorConcurrentModificationException,",
          "85:  \"InvalidNextTokenException\":          newErrorInvalidNextTokenException,",
          "86:  \"LimitExceededException\":             newErrorLimitExceededException,",
          "87:  \"MailFromDomainNotVerifiedException\": newErrorMailFromDomainNotVerifiedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  \"ConflictException\":                  newErrorConflictException,",
          "",
          "---------------"
        ],
        "service/sesv2/sesv2iface/interface.go||service/sesv2/sesv2iface/interface.go": [
          "File: service/sesv2/sesv2iface/interface.go -> service/sesv2/sesv2iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:  CreateConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.CreateConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.CreateConfigurationSetEventDestinationOutput, error)",
          "69:  CreateConfigurationSetEventDestinationRequest(*sesv2.CreateConfigurationSetEventDestinationInput) (*request.Request, *sesv2.CreateConfigurationSetEventDestinationOutput)",
          "71:  CreateDedicatedIpPool(*sesv2.CreateDedicatedIpPoolInput) (*sesv2.CreateDedicatedIpPoolOutput, error)",
          "72:  CreateDedicatedIpPoolWithContext(aws.Context, *sesv2.CreateDedicatedIpPoolInput, ...request.Option) (*sesv2.CreateDedicatedIpPoolOutput, error)",
          "73:  CreateDedicatedIpPoolRequest(*sesv2.CreateDedicatedIpPoolInput) (*request.Request, *sesv2.CreateDedicatedIpPoolOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:  CreateCustomVerificationEmailTemplate(*sesv2.CreateCustomVerificationEmailTemplateInput) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error)",
          "72:  CreateCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.CreateCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error)",
          "73:  CreateCustomVerificationEmailTemplateRequest(*sesv2.CreateCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.CreateCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:  CreateEmailIdentityWithContext(aws.Context, *sesv2.CreateEmailIdentityInput, ...request.Option) (*sesv2.CreateEmailIdentityOutput, error)",
          "81:  CreateEmailIdentityRequest(*sesv2.CreateEmailIdentityInput) (*request.Request, *sesv2.CreateEmailIdentityOutput)",
          "83:  DeleteConfigurationSet(*sesv2.DeleteConfigurationSetInput) (*sesv2.DeleteConfigurationSetOutput, error)",
          "84:  DeleteConfigurationSetWithContext(aws.Context, *sesv2.DeleteConfigurationSetInput, ...request.Option) (*sesv2.DeleteConfigurationSetOutput, error)",
          "85:  DeleteConfigurationSetRequest(*sesv2.DeleteConfigurationSetInput) (*request.Request, *sesv2.DeleteConfigurationSetOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  CreateEmailIdentityPolicy(*sesv2.CreateEmailIdentityPolicyInput) (*sesv2.CreateEmailIdentityPolicyOutput, error)",
          "88:  CreateEmailIdentityPolicyWithContext(aws.Context, *sesv2.CreateEmailIdentityPolicyInput, ...request.Option) (*sesv2.CreateEmailIdentityPolicyOutput, error)",
          "89:  CreateEmailIdentityPolicyRequest(*sesv2.CreateEmailIdentityPolicyInput) (*request.Request, *sesv2.CreateEmailIdentityPolicyOutput)",
          "91:  CreateEmailTemplate(*sesv2.CreateEmailTemplateInput) (*sesv2.CreateEmailTemplateOutput, error)",
          "92:  CreateEmailTemplateWithContext(aws.Context, *sesv2.CreateEmailTemplateInput, ...request.Option) (*sesv2.CreateEmailTemplateOutput, error)",
          "93:  CreateEmailTemplateRequest(*sesv2.CreateEmailTemplateInput) (*request.Request, *sesv2.CreateEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:  DeleteConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.DeleteConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error)",
          "89:  DeleteConfigurationSetEventDestinationRequest(*sesv2.DeleteConfigurationSetEventDestinationInput) (*request.Request, *sesv2.DeleteConfigurationSetEventDestinationOutput)",
          "91:  DeleteDedicatedIpPool(*sesv2.DeleteDedicatedIpPoolInput) (*sesv2.DeleteDedicatedIpPoolOutput, error)",
          "92:  DeleteDedicatedIpPoolWithContext(aws.Context, *sesv2.DeleteDedicatedIpPoolInput, ...request.Option) (*sesv2.DeleteDedicatedIpPoolOutput, error)",
          "93:  DeleteDedicatedIpPoolRequest(*sesv2.DeleteDedicatedIpPoolInput) (*request.Request, *sesv2.DeleteDedicatedIpPoolOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DeleteCustomVerificationEmailTemplate(*sesv2.DeleteCustomVerificationEmailTemplateInput) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error)",
          "104:  DeleteCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.DeleteCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error)",
          "105:  DeleteCustomVerificationEmailTemplateRequest(*sesv2.DeleteCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.DeleteCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96:  DeleteEmailIdentityWithContext(aws.Context, *sesv2.DeleteEmailIdentityInput, ...request.Option) (*sesv2.DeleteEmailIdentityOutput, error)",
          "97:  DeleteEmailIdentityRequest(*sesv2.DeleteEmailIdentityInput) (*request.Request, *sesv2.DeleteEmailIdentityOutput)",
          "99:  DeleteSuppressedDestination(*sesv2.DeleteSuppressedDestinationInput) (*sesv2.DeleteSuppressedDestinationOutput, error)",
          "100:  DeleteSuppressedDestinationWithContext(aws.Context, *sesv2.DeleteSuppressedDestinationInput, ...request.Option) (*sesv2.DeleteSuppressedDestinationOutput, error)",
          "101:  DeleteSuppressedDestinationRequest(*sesv2.DeleteSuppressedDestinationInput) (*request.Request, *sesv2.DeleteSuppressedDestinationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:  DeleteEmailIdentityPolicy(*sesv2.DeleteEmailIdentityPolicyInput) (*sesv2.DeleteEmailIdentityPolicyOutput, error)",
          "116:  DeleteEmailIdentityPolicyWithContext(aws.Context, *sesv2.DeleteEmailIdentityPolicyInput, ...request.Option) (*sesv2.DeleteEmailIdentityPolicyOutput, error)",
          "117:  DeleteEmailIdentityPolicyRequest(*sesv2.DeleteEmailIdentityPolicyInput) (*request.Request, *sesv2.DeleteEmailIdentityPolicyOutput)",
          "119:  DeleteEmailTemplate(*sesv2.DeleteEmailTemplateInput) (*sesv2.DeleteEmailTemplateOutput, error)",
          "120:  DeleteEmailTemplateWithContext(aws.Context, *sesv2.DeleteEmailTemplateInput, ...request.Option) (*sesv2.DeleteEmailTemplateOutput, error)",
          "121:  DeleteEmailTemplateRequest(*sesv2.DeleteEmailTemplateInput) (*request.Request, *sesv2.DeleteEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:  GetConfigurationSetEventDestinationsWithContext(aws.Context, *sesv2.GetConfigurationSetEventDestinationsInput, ...request.Option) (*sesv2.GetConfigurationSetEventDestinationsOutput, error)",
          "117:  GetConfigurationSetEventDestinationsRequest(*sesv2.GetConfigurationSetEventDestinationsInput) (*request.Request, *sesv2.GetConfigurationSetEventDestinationsOutput)",
          "119:  GetDedicatedIp(*sesv2.GetDedicatedIpInput) (*sesv2.GetDedicatedIpOutput, error)",
          "120:  GetDedicatedIpWithContext(aws.Context, *sesv2.GetDedicatedIpInput, ...request.Option) (*sesv2.GetDedicatedIpOutput, error)",
          "121:  GetDedicatedIpRequest(*sesv2.GetDedicatedIpInput) (*request.Request, *sesv2.GetDedicatedIpOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:  GetCustomVerificationEmailTemplate(*sesv2.GetCustomVerificationEmailTemplateInput) (*sesv2.GetCustomVerificationEmailTemplateOutput, error)",
          "144:  GetCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.GetCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.GetCustomVerificationEmailTemplateOutput, error)",
          "145:  GetCustomVerificationEmailTemplateRequest(*sesv2.GetCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.GetCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "147:  GetEmailIdentityWithContext(aws.Context, *sesv2.GetEmailIdentityInput, ...request.Option) (*sesv2.GetEmailIdentityOutput, error)",
          "148:  GetEmailIdentityRequest(*sesv2.GetEmailIdentityInput) (*request.Request, *sesv2.GetEmailIdentityOutput)",
          "150:  GetSuppressedDestination(*sesv2.GetSuppressedDestinationInput) (*sesv2.GetSuppressedDestinationOutput, error)",
          "151:  GetSuppressedDestinationWithContext(aws.Context, *sesv2.GetSuppressedDestinationInput, ...request.Option) (*sesv2.GetSuppressedDestinationOutput, error)",
          "152:  GetSuppressedDestinationRequest(*sesv2.GetSuppressedDestinationInput) (*request.Request, *sesv2.GetSuppressedDestinationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:  GetEmailIdentityPolicies(*sesv2.GetEmailIdentityPoliciesInput) (*sesv2.GetEmailIdentityPoliciesOutput, error)",
          "179:  GetEmailIdentityPoliciesWithContext(aws.Context, *sesv2.GetEmailIdentityPoliciesInput, ...request.Option) (*sesv2.GetEmailIdentityPoliciesOutput, error)",
          "180:  GetEmailIdentityPoliciesRequest(*sesv2.GetEmailIdentityPoliciesInput) (*request.Request, *sesv2.GetEmailIdentityPoliciesOutput)",
          "182:  GetEmailTemplate(*sesv2.GetEmailTemplateInput) (*sesv2.GetEmailTemplateOutput, error)",
          "183:  GetEmailTemplateWithContext(aws.Context, *sesv2.GetEmailTemplateInput, ...request.Option) (*sesv2.GetEmailTemplateOutput, error)",
          "184:  GetEmailTemplateRequest(*sesv2.GetEmailTemplateInput) (*request.Request, *sesv2.GetEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "158:  ListConfigurationSetsPages(*sesv2.ListConfigurationSetsInput, func(*sesv2.ListConfigurationSetsOutput, bool) bool) error",
          "159:  ListConfigurationSetsPagesWithContext(aws.Context, *sesv2.ListConfigurationSetsInput, func(*sesv2.ListConfigurationSetsOutput, bool) bool, ...request.Option) error",
          "161:  ListDedicatedIpPools(*sesv2.ListDedicatedIpPoolsInput) (*sesv2.ListDedicatedIpPoolsOutput, error)",
          "162:  ListDedicatedIpPoolsWithContext(aws.Context, *sesv2.ListDedicatedIpPoolsInput, ...request.Option) (*sesv2.ListDedicatedIpPoolsOutput, error)",
          "163:  ListDedicatedIpPoolsRequest(*sesv2.ListDedicatedIpPoolsInput) (*request.Request, *sesv2.ListDedicatedIpPoolsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197:  ListCustomVerificationEmailTemplates(*sesv2.ListCustomVerificationEmailTemplatesInput) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error)",
          "198:  ListCustomVerificationEmailTemplatesWithContext(aws.Context, *sesv2.ListCustomVerificationEmailTemplatesInput, ...request.Option) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error)",
          "199:  ListCustomVerificationEmailTemplatesRequest(*sesv2.ListCustomVerificationEmailTemplatesInput) (*request.Request, *sesv2.ListCustomVerificationEmailTemplatesOutput)",
          "201:  ListCustomVerificationEmailTemplatesPages(*sesv2.ListCustomVerificationEmailTemplatesInput, func(*sesv2.ListCustomVerificationEmailTemplatesOutput, bool) bool) error",
          "202:  ListCustomVerificationEmailTemplatesPagesWithContext(aws.Context, *sesv2.ListCustomVerificationEmailTemplatesInput, func(*sesv2.ListCustomVerificationEmailTemplatesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "186:  ListEmailIdentitiesPages(*sesv2.ListEmailIdentitiesInput, func(*sesv2.ListEmailIdentitiesOutput, bool) bool) error",
          "187:  ListEmailIdentitiesPagesWithContext(aws.Context, *sesv2.ListEmailIdentitiesInput, func(*sesv2.ListEmailIdentitiesOutput, bool) bool, ...request.Option) error",
          "189:  ListSuppressedDestinations(*sesv2.ListSuppressedDestinationsInput) (*sesv2.ListSuppressedDestinationsOutput, error)",
          "190:  ListSuppressedDestinationsWithContext(aws.Context, *sesv2.ListSuppressedDestinationsInput, ...request.Option) (*sesv2.ListSuppressedDestinationsOutput, error)",
          "191:  ListSuppressedDestinationsRequest(*sesv2.ListSuppressedDestinationsInput) (*request.Request, *sesv2.ListSuppressedDestinationsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:  ListEmailTemplates(*sesv2.ListEmailTemplatesInput) (*sesv2.ListEmailTemplatesOutput, error)",
          "233:  ListEmailTemplatesWithContext(aws.Context, *sesv2.ListEmailTemplatesInput, ...request.Option) (*sesv2.ListEmailTemplatesOutput, error)",
          "234:  ListEmailTemplatesRequest(*sesv2.ListEmailTemplatesInput) (*request.Request, *sesv2.ListEmailTemplatesOutput)",
          "236:  ListEmailTemplatesPages(*sesv2.ListEmailTemplatesInput, func(*sesv2.ListEmailTemplatesOutput, bool) bool) error",
          "237:  ListEmailTemplatesPagesWithContext(aws.Context, *sesv2.ListEmailTemplatesInput, func(*sesv2.ListEmailTemplatesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "201:  PutAccountDedicatedIpWarmupAttributesWithContext(aws.Context, *sesv2.PutAccountDedicatedIpWarmupAttributesInput, ...request.Option) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error)",
          "202:  PutAccountDedicatedIpWarmupAttributesRequest(*sesv2.PutAccountDedicatedIpWarmupAttributesInput) (*request.Request, *sesv2.PutAccountDedicatedIpWarmupAttributesOutput)",
          "204:  PutAccountSendingAttributes(*sesv2.PutAccountSendingAttributesInput) (*sesv2.PutAccountSendingAttributesOutput, error)",
          "205:  PutAccountSendingAttributesWithContext(aws.Context, *sesv2.PutAccountSendingAttributesInput, ...request.Option) (*sesv2.PutAccountSendingAttributesOutput, error)",
          "206:  PutAccountSendingAttributesRequest(*sesv2.PutAccountSendingAttributesInput) (*request.Request, *sesv2.PutAccountSendingAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:  PutAccountDetails(*sesv2.PutAccountDetailsInput) (*sesv2.PutAccountDetailsOutput, error)",
          "255:  PutAccountDetailsWithContext(aws.Context, *sesv2.PutAccountDetailsInput, ...request.Option) (*sesv2.PutAccountDetailsOutput, error)",
          "256:  PutAccountDetailsRequest(*sesv2.PutAccountDetailsInput) (*request.Request, *sesv2.PutAccountDetailsOutput)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "261:  PutSuppressedDestinationWithContext(aws.Context, *sesv2.PutSuppressedDestinationInput, ...request.Option) (*sesv2.PutSuppressedDestinationOutput, error)",
          "262:  PutSuppressedDestinationRequest(*sesv2.PutSuppressedDestinationInput) (*request.Request, *sesv2.PutSuppressedDestinationOutput)",
          "264:  SendEmail(*sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error)",
          "265:  SendEmailWithContext(aws.Context, *sesv2.SendEmailInput, ...request.Option) (*sesv2.SendEmailOutput, error)",
          "266:  SendEmailRequest(*sesv2.SendEmailInput) (*request.Request, *sesv2.SendEmailOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:  SendBulkEmail(*sesv2.SendBulkEmailInput) (*sesv2.SendBulkEmailOutput, error)",
          "319:  SendBulkEmailWithContext(aws.Context, *sesv2.SendBulkEmailInput, ...request.Option) (*sesv2.SendBulkEmailOutput, error)",
          "320:  SendBulkEmailRequest(*sesv2.SendBulkEmailInput) (*request.Request, *sesv2.SendBulkEmailOutput)",
          "322:  SendCustomVerificationEmail(*sesv2.SendCustomVerificationEmailInput) (*sesv2.SendCustomVerificationEmailOutput, error)",
          "323:  SendCustomVerificationEmailWithContext(aws.Context, *sesv2.SendCustomVerificationEmailInput, ...request.Option) (*sesv2.SendCustomVerificationEmailOutput, error)",
          "324:  SendCustomVerificationEmailRequest(*sesv2.SendCustomVerificationEmailInput) (*request.Request, *sesv2.SendCustomVerificationEmailOutput)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "269:  TagResourceWithContext(aws.Context, *sesv2.TagResourceInput, ...request.Option) (*sesv2.TagResourceOutput, error)",
          "270:  TagResourceRequest(*sesv2.TagResourceInput) (*request.Request, *sesv2.TagResourceOutput)",
          "272:  UntagResource(*sesv2.UntagResourceInput) (*sesv2.UntagResourceOutput, error)",
          "273:  UntagResourceWithContext(aws.Context, *sesv2.UntagResourceInput, ...request.Option) (*sesv2.UntagResourceOutput, error)",
          "274:  UntagResourceRequest(*sesv2.UntagResourceInput) (*request.Request, *sesv2.UntagResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:  TestRenderEmailTemplate(*sesv2.TestRenderEmailTemplateInput) (*sesv2.TestRenderEmailTemplateOutput, error)",
          "335:  TestRenderEmailTemplateWithContext(aws.Context, *sesv2.TestRenderEmailTemplateInput, ...request.Option) (*sesv2.TestRenderEmailTemplateOutput, error)",
          "336:  TestRenderEmailTemplateRequest(*sesv2.TestRenderEmailTemplateInput) (*request.Request, *sesv2.TestRenderEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "276:  UpdateConfigurationSetEventDestination(*sesv2.UpdateConfigurationSetEventDestinationInput) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error)",
          "277:  UpdateConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.UpdateConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error)",
          "278:  UpdateConfigurationSetEventDestinationRequest(*sesv2.UpdateConfigurationSetEventDestinationInput) (*request.Request, *sesv2.UpdateConfigurationSetEventDestinationOutput)",
          "279: }",
          "281: var _ SESV2API = (*sesv2.SESV2)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:  UpdateCustomVerificationEmailTemplate(*sesv2.UpdateCustomVerificationEmailTemplateInput) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error)",
          "347:  UpdateCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.UpdateCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error)",
          "348:  UpdateCustomVerificationEmailTemplateRequest(*sesv2.UpdateCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.UpdateCustomVerificationEmailTemplateOutput)",
          "350:  UpdateEmailIdentityPolicy(*sesv2.UpdateEmailIdentityPolicyInput) (*sesv2.UpdateEmailIdentityPolicyOutput, error)",
          "351:  UpdateEmailIdentityPolicyWithContext(aws.Context, *sesv2.UpdateEmailIdentityPolicyInput, ...request.Option) (*sesv2.UpdateEmailIdentityPolicyOutput, error)",
          "352:  UpdateEmailIdentityPolicyRequest(*sesv2.UpdateEmailIdentityPolicyInput) (*request.Request, *sesv2.UpdateEmailIdentityPolicyOutput)",
          "354:  UpdateEmailTemplate(*sesv2.UpdateEmailTemplateInput) (*sesv2.UpdateEmailTemplateOutput, error)",
          "355:  UpdateEmailTemplateWithContext(aws.Context, *sesv2.UpdateEmailTemplateInput, ...request.Option) (*sesv2.UpdateEmailTemplateOutput, error)",
          "356:  UpdateEmailTemplateRequest(*sesv2.UpdateEmailTemplateInput) (*request.Request, *sesv2.UpdateEmailTemplateOutput)",
          "",
          "---------------"
        ]
      }
    }
  ]
}