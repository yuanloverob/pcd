{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6326ec7421bd5855391e69ec1828335ac04048b8",
      "candidate_info": {
        "commit_hash": "6326ec7421bd5855391e69ec1828335ac04048b8",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6326ec7421bd5855391e69ec1828335ac04048b8",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890471 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java||pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java||pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java -> pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1959:                 {",
          "1960:                     builder = new StringBuilder(strLength * 2);",
          "1961:                 }",
          "",
          "[Removed Lines]",
          "1962:                 builder.append(word.substring(p, q));",
          "",
          "[Added Lines]",
          "1962:                 builder.append(word, p, q);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1983:         }",
          "1984:         else",
          "1985:         {",
          "1987:             return handleDirection(builder.toString());",
          "1988:         }",
          "1989:     }",
          "",
          "[Removed Lines]",
          "1986:             builder.append(word.substring(p, q));",
          "",
          "[Added Lines]",
          "1986:             builder.append(word, p, q);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de6ac6674752c74d5bd184e1c6b041f32039b8b1",
      "candidate_info": {
        "commit_hash": "de6ac6674752c74d5bd184e1c6b041f32039b8b1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/de6ac6674752c74d5bd184e1c6b041f32039b8b1",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java",
          "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java"
        ],
        "message": "PDFBOX-5090: strict mode with overflow detection is limited to CMaps within PDFs\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886056 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java",
          "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java||fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java -> fontbox/src/main/java/org/apache/fontbox/cmap/CMapParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     private final byte[] tokenParserByteBuffer = new byte[512];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     private boolean strictMode = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:     {",
          "49:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     public CMapParser(boolean strictMode)",
          "59:     {",
          "60:         this.strictMode = strictMode;",
          "61:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:         try",
          "86:         {",
          "87:             input = getExternalCMap(name);",
          "88:             return parse(input);",
          "89:         }",
          "90:         finally",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:             strictMode = false;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:                 {",
          "329:                     int mappedCID = createIntFromBytes(startCode);",
          "330:                     result.addCIDMapping(mappedCode++, mappedCID);",
          "332:                 }",
          "333:             }",
          "334:         }",
          "",
          "[Removed Lines]",
          "331:                     increment(startCode);",
          "",
          "[Added Lines]",
          "345:                     increment(startCode, startCode.length - 1, false);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "413:                     }",
          "414:                     else",
          "415:                     {",
          "420:                     }",
          "421:                 }",
          "422:             }",
          "",
          "[Removed Lines]",
          "417:                         int values = Math.min(end - start,",
          "418:                                 255 - (tokenBytes[tokenBytes.length - 1] & 0xFF)) + 1;",
          "419:                         addMappingFrombfrange(result, startCode, values, tokenBytes);",
          "",
          "[Added Lines]",
          "430:                         addMappingFrombfrange(result, startCode, end - start + 1, tokenBytes);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "429:         {",
          "430:             String value = createStringFromBytes(tokenBytes);",
          "431:             cmap.addCharMapping(startCode, value);",
          "433:         }",
          "434:     }",
          "",
          "[Removed Lines]",
          "432:             increment(startCode);",
          "",
          "[Added Lines]",
          "443:             increment(startCode, startCode.length - 1, false);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "440:         {",
          "441:             String value = createStringFromBytes(tokenBytes);",
          "442:             cmap.addCharMapping(startCode, value);",
          "445:         }",
          "446:     }",
          "",
          "[Removed Lines]",
          "443:             increment(startCode);",
          "444:             increment(tokenBytes);",
          "",
          "[Added Lines]",
          "454:             increment(startCode, startCode.length - 1, false);",
          "455:             if (!increment(tokenBytes, tokenBytes.length - 1, strictMode))",
          "456:             {",
          "458:                 break;",
          "459:             }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "712:         }",
          "713:     }",
          "721:     {",
          "722:         if (position > 0 && (data[position] & 0xFF) == 255)",
          "723:         {",
          "724:             data[position] = 0;",
          "726:         }",
          "727:         else",
          "728:         {",
          "729:             data[position] = (byte) (data[position] + 1);",
          "730:         }",
          "731:     }",
          "733:     private int createIntFromBytes(byte[] bytes)",
          "",
          "[Removed Lines]",
          "715:     private void increment(byte[] data)",
          "716:     {",
          "717:         increment(data, data.length - 1);",
          "718:     }",
          "720:     private void increment(byte[] data, int position)",
          "725:             increment(data, position - 1);",
          "",
          "[Added Lines]",
          "730:     private boolean increment(byte[] data, int position, boolean useStrictMode)",
          "736:             if (useStrictMode)",
          "737:             {",
          "738:                 return false;",
          "739:             }",
          "741:             increment(data, position - 1, useStrictMode);",
          "747:         return true;",
          "",
          "---------------"
        ],
        "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java||fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java": [
          "File: fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java -> fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:         assertEquals(\"bytes 02 32 from bfrange <0232> <0432> <0041>\", \"A\", cMap.toUnicode(0x232));",
          "154:         assertNotNull(cMap.toUnicode(0x2F0));",
          "157:     }",
          "159: }",
          "",
          "[Removed Lines]",
          "155:         assertNull(cMap.toUnicode(0x2F1));",
          "",
          "[Added Lines]",
          "155:         assertNotNull(cMap.toUnicode(0x2F1));",
          "158:         cMap = new CMapParser(true)",
          "159:                 .parse(new File(\"src/test/resources/cmap\", \"CMapMalformedbfrange2\"));",
          "161:         assertNotNull(cMap.toUnicode(0x2F0));",
          "162:         assertNull(cMap.toUnicode(0x2F1));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f7a92544f52f6cc1b2076a8e681b68792d10d19",
      "candidate_info": {
        "commit_hash": "2f7a92544f52f6cc1b2076a8e681b68792d10d19",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2f7a92544f52f6cc1b2076a8e681b68792d10d19",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java",
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java"
        ],
        "message": "PDFBOX-5232: skip identical target to avoid endless loop, as suggested by Michael Klink in SO 68213927; add test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891232 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java",
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:       public void cloneMerge( final COSObjectable base, COSObjectable target) throws IOException",
          "167:       {",
          "169:           {",
          "170:               return;",
          "171:           }",
          "",
          "[Removed Lines]",
          "168:           if( base == null )",
          "",
          "[Added Lines]",
          "168:           if (base == null || base == target)",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java -> pdfbox/src/test/java/org/apache/pdfbox/multipdf/TestLayerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:             PDOptionalContentProperties ocgs = catalog.getOCProperties();",
          "102:             PDOptionalContentGroup overlay = ocgs.getGroup(\"overlay\");",
          "103:             assertEquals(ocg.getName(), overlay.getName());",
          "104:         }",
          "105:         finally",
          "106:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:             new LayerUtility(doc).importPageAsForm(doc, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea3db8d0257380a2ed86d460865d3acf0e5b855c",
      "candidate_info": {
        "commit_hash": "ea3db8d0257380a2ed86d460865d3acf0e5b855c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ea3db8d0257380a2ed86d460865d3acf0e5b855c",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size and simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887583 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1554:             page.setStructParents(page.getStructParents() + structParentOffset);",
          "1555:         }",
          "1556:         List<PDAnnotation> annots = page.getAnnotations();",
          "1558:         for (PDAnnotation annot : annots)",
          "1559:         {",
          "1560:             if (annot.getStructParent() >= 0)",
          "",
          "[Removed Lines]",
          "1557:         List<PDAnnotation> newannots = new ArrayList<PDAnnotation>();",
          "",
          "[Added Lines]",
          "1557:         List<PDAnnotation> newannots = new ArrayList<PDAnnotation>(annots.size());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc37dd0b97e1a6aa348efb9c67924b50c9d54a29",
      "candidate_info": {
        "commit_hash": "bc37dd0b97e1a6aa348efb9c67924b50c9d54a29",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/bc37dd0b97e1a6aa348efb9c67924b50c9d54a29",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java"
        ],
        "message": "PDFBOX-4892: make inner class static, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887896 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/validation/CertInformationCollector.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "409:     {",
          "410:         private X509Certificate certificate;",
          "411:         private String signatureHash;",
          "",
          "[Removed Lines]",
          "408:     public class CertSignatureInformation",
          "",
          "[Added Lines]",
          "408:     public static class CertSignatureInformation",
          "",
          "---------------"
        ]
      }
    }
  ]
}