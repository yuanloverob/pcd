{
  "cve_id": "CVE-2022-0355",
  "cve_desc": "Improper Removal of Sensitive Information Before Storage or Transfer in NPM simple-get prior to 4.0.1.\n\n",
  "repo": "feross/simple-get",
  "patch_hash": "e4af095e06cd69a9235013e8507e220a79b9684f",
  "patch_info": {
    "commit_hash": "e4af095e06cd69a9235013e8507e220a79b9684f",
    "repo": "feross/simple-get",
    "commit_url": "https://github.com/feross/simple-get/commit/e4af095e06cd69a9235013e8507e220a79b9684f",
    "files": [
      "index.js"
    ],
    "message": "Merge pull request #73 from ranjit-git/master",
    "before_after_code_files": [
      "index.js||index.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   if (opts.json) opts.headers.accept = 'application/json'",
      "45:   if (opts.method) opts.method = opts.method.toUpperCase()",
      "47:   const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls",
      "48:   const req = protocol.request(opts, res => {",
      "49:     if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   const originalHost = opts.hostname // hostname before potential redirect",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51:       delete opts.headers.host // Discard `host` header on redirect (see #32)",
      "52:       res.resume() // Discard response",
      "54:       if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {",
      "55:         opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)",
      "56:         delete opts.headers['content-length']; delete opts.headers['content-type']",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55:       const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api",
      "57:       if (redirectHost !== null && redirectHost !== originalHost) {",
      "58:         delete opts.headers.cookie",
      "59:         delete opts.headers.authorization",
      "60:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e21f5eae1141244e14806b412bde0a8c46e1903",
      "candidate_info": {
        "commit_hash": "6e21f5eae1141244e14806b412bde0a8c46e1903",
        "repo": "feross/simple-get",
        "commit_url": "https://github.com/feross/simple-get/commit/6e21f5eae1141244e14806b412bde0a8c46e1903",
        "files": [
          "index.js"
        ],
        "message": "code style",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/feross/simple-get/pull/73"
        ],
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     opts.headers['content-type'] = 'application/x-www-form-urlencoded'",
          "35:   }",
          "39:   if (body) {",
          "40:     if (!opts.method) opts.method = 'POST'",
          "41:     if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)",
          "",
          "[Removed Lines]",
          "37:   const ohost = opts.hostname",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:   if (opts.json) opts.headers.accept = 'application/json'",
          "47:   if (opts.method) opts.method = opts.method.toUpperCase()",
          "49:   const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls",
          "50:   const req = protocol.request(opts, res => {",
          "51:     if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   const originalHost = opts.hostname // hostname before potential redirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:       delete opts.headers.host // Discard `host` header on redirect (see #32)",
          "54:       res.resume() // Discard response",
          "59:         delete opts.headers.cookie",
          "60:         delete opts.headers.authorization",
          "61:       }",
          "",
          "[Removed Lines]",
          "56:       const rhost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api",
          "58:       if (rhost !== null && rhost !== ohost) {",
          "",
          "[Added Lines]",
          "55:       const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api",
          "57:       if (redirectHost !== null && redirectHost !== originalHost) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e4468a2cf391f808193fdd79c9d2dee7298c2a8",
      "candidate_info": {
        "commit_hash": "6e4468a2cf391f808193fdd79c9d2dee7298c2a8",
        "repo": "feross/simple-get",
        "commit_url": "https://github.com/feross/simple-get/commit/6e4468a2cf391f808193fdd79c9d2dee7298c2a8",
        "files": [
          "index.js"
        ],
        "message": "Bug fix: thirdparty site cookie leak\n\nbug report https://www.huntr.dev/bounties/42c79c23-6646-46c4-871d-219c0d4b4e31/",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/feross/simple-get/pull/73"
        ],
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const querystring = require('querystring')",
          "10: const url = require('url')",
          "12: const isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'",
          "14: function simpleGet (opts, cb) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: var flag=false",
          "13: var original_host;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     opts.headers['content-type'] = 'application/x-www-form-urlencoded'",
          "35:   }",
          "37:   if (body) {",
          "38:     if (!opts.method) opts.method = 'POST'",
          "39:     if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   if (!flag){",
          "42:    original_host=opts.hostname",
          "44:   flag=true",
          "45:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:       delete opts.headers.host // Discard `host` header on redirect (see #32)",
          "52:       res.resume() // Discard response",
          "54:       if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {",
          "55:         opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)",
          "56:         delete opts.headers['content-length']; delete opts.headers['content-type']",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:        var redirect_host=url.parse(opts.url).hostname //getting redirected hostname",
          "66:       if(redirect_host !== null && redirect_host !== original_host){",
          "67:          delete opts.headers.cookie;",
          "68:          delete opts.headers.authorization;",
          "69:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "489f74342f76f4985acd57fe07324d4e51777858",
      "candidate_info": {
        "commit_hash": "489f74342f76f4985acd57fe07324d4e51777858",
        "repo": "feross/simple-get",
        "commit_url": "https://github.com/feross/simple-get/commit/489f74342f76f4985acd57fe07324d4e51777858",
        "files": [
          "index.js"
        ],
        "message": "Bug fix: Thirdparty cookie leak",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/feross/simple-get/pull/73"
        ],
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const querystring = require('querystring')",
          "10: const url = require('url')",
          "15: const isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'",
          "17: function simpleGet (opts, cb) {",
          "",
          "[Removed Lines]",
          "12: var flag=false",
          "13: var original_host;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     opts.headers['content-type'] = 'application/x-www-form-urlencoded'",
          "38:   }",
          "47:   if (body) {",
          "48:     if (!opts.method) opts.method = 'POST'",
          "49:     if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)",
          "",
          "[Removed Lines]",
          "41:   if (!flag){",
          "42:    original_host=opts.hostname",
          "44:   flag=true",
          "45:   }",
          "",
          "[Added Lines]",
          "37:   const ohost = opts.hostname",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:       delete opts.headers.host // Discard `host` header on redirect (see #32)",
          "62:       res.resume() // Discard response",
          "71:       if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {",
          "72:         opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)",
          "73:         delete opts.headers['content-length']; delete opts.headers['content-type']",
          "",
          "[Removed Lines]",
          "64:        var redirect_host=url.parse(opts.url).hostname //getting redirected hostname",
          "66:       if(redirect_host !== null && redirect_host !== original_host){",
          "67:          delete opts.headers.cookie;",
          "68:          delete opts.headers.authorization;",
          "69:         }",
          "",
          "[Added Lines]",
          "56:       const rhost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api",
          "58:       if (rhost !== null && rhost !== ohost) {",
          "59:         delete opts.headers.cookie",
          "60:         delete opts.headers.authorization",
          "61:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6eb82c090e30e7146fa5e9ae7212ca16b24b08b4",
      "candidate_info": {
        "commit_hash": "6eb82c090e30e7146fa5e9ae7212ca16b24b08b4",
        "repo": "feross/simple-get",
        "commit_url": "https://github.com/feross/simple-get/commit/6eb82c090e30e7146fa5e9ae7212ca16b24b08b4",
        "files": [
          "index.js"
        ],
        "message": "Bug fix: Thirdparty cookie leak",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   if (opts.json) opts.headers.accept = 'application/json'",
          "44:   if (opts.method) opts.method = opts.method.toUpperCase()",
          "46:   const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls",
          "47:   const req = protocol.request(opts, res => {",
          "48:     if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:   const originalHost = opts.hostname // hostname before potential redirect",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:       delete opts.headers.host // Discard `host` header on redirect (see #32)",
          "51:       res.resume() // Discard response",
          "53:       if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {",
          "54:         opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)",
          "55:         delete opts.headers['content-length']; delete opts.headers['content-type']",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:       const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api",
          "56:       if (redirectHost !== null && redirectHost !== originalHost) {",
          "57:         delete opts.headers.cookie",
          "58:         delete opts.headers.authorization",
          "59:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}