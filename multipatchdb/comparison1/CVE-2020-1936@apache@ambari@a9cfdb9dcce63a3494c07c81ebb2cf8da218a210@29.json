{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "347c61a71bcab605b1c05f7f95e5704ac27527f9",
      "candidate_info": {
        "commit_hash": "347c61a71bcab605b1c05f7f95e5704ac27527f9",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/347c61a71bcab605b1c05f7f95e5704ac27527f9",
        "files": [
          "ambari-agent/src/main/package/dependencies.properties",
          "ambari-agent/src/test/python/resource_management/TestRepositoryResource.py",
          "ambari-common/src/main/python/ambari_commons/resources/os_family.json",
          "ambari-common/src/main/python/resource_management/libraries/providers/repository.py",
          "ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "ambari-server/src/main/resources/version_definition.xsd"
        ],
        "message": "AMBARI-24782. Introduce support for Ubuntu 18 LTS (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/package/dependencies.properties||ambari-agent/src/main/package/dependencies.properties",
          "ambari-agent/src/test/python/resource_management/TestRepositoryResource.py||ambari-agent/src/test/python/resource_management/TestRepositoryResource.py",
          "ambari-common/src/main/python/resource_management/libraries/providers/repository.py||ambari-common/src/main/python/resource_management/libraries/providers/repository.py",
          "ambari-common/src/main/python/resource_management/libraries/script/script.py||ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "ambari-server/src/main/resources/version_definition.xsd||ambari-server/src/main/resources/version_definition.xsd"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/package/dependencies.properties||ambari-agent/src/main/package/dependencies.properties": [
          "File: ambari-agent/src/main/package/dependencies.properties -> ambari-agent/src/main/package/dependencies.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: # however should be encouraged manually in pom.xml.",
          "31: rpm.dependency.list=openssl,\\nRequires: rpm-python,\\nRequires: zlib,\\nRequires: python >= 2.6",
          "",
          "[Removed Lines]",
          "32: deb.dependency.list=openssl, zlibc, python (>= 2.6)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-agent/src/test/python/resource_management/TestRepositoryResource.py||ambari-agent/src/test/python/resource_management/TestRepositoryResource.py": [
          "File: ambari-agent/src/test/python/resource_management/TestRepositoryResource.py -> ambari-agent/src/test/python/resource_management/TestRepositoryResource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:     @patch.object(OSCheck, \"is_suse_family\")",
          "189:     @patch.object(OSCheck, \"is_ubuntu_family\")",
          "190:     @patch.object(OSCheck, \"is_redhat_family\")",
          "192:     @patch.object(tempfile, \"NamedTemporaryFile\")",
          "193:     @patch(\"resource_management.libraries.providers.repository.Execute\")",
          "194:     @patch(\"resource_management.libraries.providers.repository.File\")",
          "",
          "[Removed Lines]",
          "191:     @patch(\"resource_management.libraries.providers.repository.checked_call\")",
          "",
          "[Added Lines]",
          "191:     @patch(\"resource_management.libraries.providers.repository.call\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:     @patch.object(System, \"os_release_name\", new='precise')",
          "198:     @patch.object(System, \"os_family\", new='ubuntu')",
          "199:     def test_create_repo_ubuntu_repo_exists(self, file_mock, execute_mock,",
          "201:       is_redhat_family.return_value = False",
          "202:       is_ubuntu_family.return_value = True",
          "203:       is_suse_family.return_value = False",
          "204:       tempfile_mock.return_value = MagicMock(spec=file)",
          "205:       tempfile_mock.return_value.__enter__.return_value.name = \"/tmp/1.txt\"",
          "208:       with Environment('/') as env:",
          "209:         with patch.object(repository, \"__file__\", new='/ambari/test/repo/dummy/path/file'):",
          "",
          "[Removed Lines]",
          "200:                                             tempfile_mock, checked_call_mock, is_redhat_family, is_ubuntu_family, is_suse_family):",
          "206:       checked_call_mock.return_value = 0, \"The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 123ABCD\"",
          "",
          "[Added Lines]",
          "200:                                             tempfile_mock, call_mock, is_redhat_family, is_ubuntu_family, is_suse_family):",
          "206:       call_mock.return_value = 0, \"The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 123ABCD\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "228:       #'apt-get update -qq -o Dir::Etc::sourcelist=\"sources.list.d/HDP.list\" -o APT::Get::List-Cleanup=\"0\"')",
          "229:       execute_command_item = execute_mock.call_args_list[0][0][0]",
          "232:       self.assertEqual(execute_command_item, ('apt-key', 'adv', '--recv-keys', '--keyserver', 'keyserver.ubuntu.com', '123ABCD'))",
          "235:     @patch.object(tempfile, \"NamedTemporaryFile\")",
          "236:     @patch(\"resource_management.libraries.providers.repository.Execute\")",
          "237:     @patch(\"resource_management.libraries.providers.repository.File\")",
          "",
          "[Removed Lines]",
          "231:       self.assertEqual(checked_call_mock.call_args_list[0][0][0], ['apt-get', 'update', '-qq', '-o', 'Dir::Etc::sourcelist=sources.list.d/HDP.list', '-o', 'Dir::Etc::sourceparts=-', '-o', 'APT::Get::List-Cleanup=0'])",
          "234:     @patch(\"resource_management.libraries.providers.repository.checked_call\")",
          "",
          "[Added Lines]",
          "231:       self.assertEqual(call_mock.call_args_list[0][0][0], ['apt-get', 'update', '-qq', '-o', 'Dir::Etc::sourcelist=sources.list.d/HDP.list', '-o', 'Dir::Etc::sourceparts=-', '-o', 'APT::Get::List-Cleanup=0'])",
          "234:     @patch(\"resource_management.libraries.providers.repository.call\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "240:     @patch.object(System, \"os_release_name\", new='precise')",
          "241:     @patch.object(System, \"os_family\", new='ubuntu')",
          "242:     def test_create_repo_ubuntu_gpg_key_wrong_output(self, file_mock, execute_mock,",
          "244:       \"\"\"",
          "245:       Checks that GPG key is extracted from output without \\r sign",
          "246:       \"\"\"",
          "247:       tempfile_mock.return_value = MagicMock(spec=file)",
          "248:       tempfile_mock.return_value.__enter__.return_value.name = \"/tmp/1.txt\"",
          "251:       with Environment('/') as env:",
          "252:         with patch.object(repository, \"__file__\", new='/ambari/test/repo/dummy/path/file'):",
          "",
          "[Removed Lines]",
          "243:                                             tempfile_mock, checked_call_mock):",
          "249:       checked_call_mock.return_value = 0, \"The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 123ABCD\\r\\n\"",
          "",
          "[Added Lines]",
          "243:                                             tempfile_mock, call_mock):",
          "249:       call_mock.return_value = 0, \"The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 123ABCD\\r\\n\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "270:       self.assertEqual(copy_item1, \"call('/etc/apt/sources.list.d/HDP.list', content=StaticFile('/tmp/1.txt'))\")",
          "271:       execute_command_item = execute_mock.call_args_list[0][0][0]",
          "274:       self.assertEqual(execute_command_item, ('apt-key', 'adv', '--recv-keys', '--keyserver', 'keyserver.ubuntu.com', '123ABCD'))",
          "276:     @patch.object(tempfile, \"NamedTemporaryFile\")",
          "",
          "[Removed Lines]",
          "273:       self.assertEqual(checked_call_mock.call_args_list[0][0][0], ['apt-get', 'update', '-qq', '-o', 'Dir::Etc::sourcelist=sources.list.d/HDP.list', '-o', 'Dir::Etc::sourceparts=-', '-o', 'APT::Get::List-Cleanup=0'])",
          "",
          "[Added Lines]",
          "273:       self.assertEqual(call_mock.call_args_list[0][0][0], ['apt-get', 'update', '-qq', '-o', 'Dir::Etc::sourcelist=sources.list.d/HDP.list', '-o', 'Dir::Etc::sourceparts=-', '-o', 'APT::Get::List-Cleanup=0'])",
          "",
          "---------------"
        ],
        "ambari-common/src/main/python/resource_management/libraries/providers/repository.py||ambari-common/src/main/python/resource_management/libraries/providers/repository.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/providers/repository.py -> ambari-common/src/main/python/resource_management/libraries/providers/repository.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: from resource_management.core.source import StaticFile",
          "32: from resource_management.libraries.functions.format import format",
          "33: from resource_management.core.environment import Environment",
          "35: from resource_management.core import sudo",
          "36: from resource_management.core.logger import Logger",
          "37: import re",
          "39: REPO_TEMPLATE_FOLDER = 'data'",
          "",
          "[Removed Lines]",
          "34: from resource_management.core.shell import checked_call",
          "",
          "[Added Lines]",
          "34: from resource_management.core.shell import checked_call, call",
          "37: from resource_management.core.exceptions import ExecutionFailed",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:                content = StaticFile(tmpf.name)",
          "120:           )",
          "133:             )",
          "135:   def action_remove(self):",
          "136:     repo_file_name = format(\"{repo_file_name}.list\", repo_file_name=self.resource.repo_file_name)",
          "",
          "[Removed Lines]",
          "122:           update_cmd_formatted = [format(x) for x in self.update_cmd]",
          "123:           # this is time expensive",
          "124:           retcode, out = checked_call(update_cmd_formatted, sudo=True, quiet=False)",
          "126:           # add public keys for new repos",
          "127:           missing_pkeys = set(re.findall(self.missing_pkey_regex, out))",
          "128:           for pkey in missing_pkeys:",
          "129:             Execute(self.app_pkey_cmd_prefix + (pkey,),",
          "130:                     timeout = 15, # in case we are on the host w/o internet (using localrepo), we should ignore hanging",
          "131:                     ignore_failures = True,",
          "132:                     sudo = True,",
          "",
          "[Added Lines]",
          "123:           try:",
          "124:             self.update(repo_file_path)",
          "125:           except:",
          "126:             # remove created file or else ambari will consider that update was successful and skip repository operations",
          "127:             File(repo_file_path,",
          "128:                  action = \"delete\",",
          "130:             raise",
          "132:   def update(self, repo_file_path):",
          "133:     repo_file_name = os.path.basename(repo_file_path)",
          "134:     update_cmd_formatted = [format(x) for x in self.update_cmd]",
          "136:     update_failed_exception = None",
          "138:     try:",
          "139:       # this is time expensive",
          "140:       retcode, out = call(update_cmd_formatted, sudo=True, quiet=False)",
          "141:     except ExecutionFailed as ex:",
          "142:       out = ex.out",
          "143:       update_failed_exception = ex",
          "145:     # add public keys for new repos",
          "146:     missing_pkeys = set(re.findall(self.missing_pkey_regex, out))",
          "148:     # failed but NOT due to missing pubkey",
          "149:     if update_failed_exception and not missing_pkeys:",
          "150:       raise update_failed_exception",
          "152:     for pkey in missing_pkeys:",
          "153:       # add public keys for new repos",
          "154:       Execute(self.app_pkey_cmd_prefix + (pkey,),",
          "155:               timeout = 15, # in case we are on the host w/o internet (using localrepo), we should ignore hanging",
          "156:               ignore_failures = True,",
          "157:               sudo = True,",
          "158:       )",
          "",
          "---------------"
        ],
        "ambari-common/src/main/python/resource_management/libraries/script/script.py||ambari-common/src/main/python/resource_management/libraries/script/script.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/script/script.py -> ambari-common/src/main/python/resource_management/libraries/script/script.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:       ex.pre_raise()",
          "359:       raise",
          "360:     finally:",
          "364:   def get_version(self, env):",
          "365:     pass",
          "",
          "[Removed Lines]",
          "361:       if self.should_expose_component_version(self.command_name):",
          "362:         self.save_component_version_to_structured_out(self.command_name)",
          "",
          "[Added Lines]",
          "361:       try:",
          "362:         if self.should_expose_component_version(self.command_name):",
          "363:           self.save_component_version_to_structured_out(self.command_name)",
          "364:       except:",
          "365:         Logger.exception(\"Reporting component version failed\")",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/version_definition.xsd||ambari-server/src/main/resources/version_definition.xsd": [
          "File: ambari-server/src/main/resources/version_definition.xsd -> ambari-server/src/main/resources/version_definition.xsd",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:       <xs:enumeration value=\"ubuntu12\" />",
          "61:       <xs:enumeration value=\"ubuntu14\" />",
          "62:       <xs:enumeration value=\"ubuntu16\" />",
          "63:       <xs:enumeration value=\"suse11\" />",
          "64:       <xs:enumeration value=\"suse12\" />",
          "65:       <xs:enumeration value=\"amazonlinux2\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:       <xs:enumeration value=\"ubuntu18\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f31174b07b504b988c301c641331486d00bddfb8",
      "candidate_info": {
        "commit_hash": "f31174b07b504b988c301c641331486d00bddfb8",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/f31174b07b504b988c301c641331486d00bddfb8",
        "files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js"
        ],
        "message": "AMBARI-25275 - Changes in Yarn Capacity Scheduler is requesting for restart of Resource Manager (#2972)",
        "before_after_code_files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js -> contrib/views/capacity-scheduler/src/main/resources/ui/app/controllers/queues.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:   hasDeletedQueues: Em.computed.alias('store.hasDeletedQueues'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274:   doesNotHaveDeletedQueues: Em.computed.not('store.hasDeletedQueues'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "334:   needSave: cmp.any('needRestart', 'needRefresh'),",
          "",
          "[Added Lines]",
          "339:   needRestartOrRefresh: cmp.any('needRestart', 'needRefresh'),",
          "345:   needSave: cmp.and('needRestartOrRefresh', 'doesNotHaveDeletedQueues'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8eba8492cf74371f586e57cc01686630ee6800c5",
      "candidate_info": {
        "commit_hash": "8eba8492cf74371f586e57cc01686630ee6800c5",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8eba8492cf74371f586e57cc01686630ee6800c5",
        "files": [
          "ambari-web/app/mixins/common/serverValidator.js",
          "ambari-web/app/styles/application.less",
          "ambari-web/app/styles/bootstrap_overrides.less",
          "ambari-web/app/utils/ajax/ajax.js",
          "ambari-web/app/utils/config.js"
        ],
        "message": "AMBARI-24524 Unable to validate password complexity for properties rangertagsync_user_password, rangerusersync_user_password",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/serverValidator.js||ambari-web/app/mixins/common/serverValidator.js",
          "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less",
          "ambari-web/app/styles/bootstrap_overrides.less||ambari-web/app/styles/bootstrap_overrides.less",
          "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js",
          "ambari-web/app/utils/config.js||ambari-web/app/utils/config.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/serverValidator.js||ambari-web/app/mixins/common/serverValidator.js": [
          "File: ambari-web/app/mixins/common/serverValidator.js -> ambari-web/app/mixins/common/serverValidator.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:       name: 'config.validations',",
          "198:       sender: this,",
          "199:       data: validationData,",
          "202:     });",
          "203:   },",
          "",
          "[Removed Lines]",
          "200:       success: 'validationSuccess',",
          "201:       error: 'validationError'",
          "",
          "[Added Lines]",
          "200:       success: 'validationSuccess'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "374:     var parsed = this.parseValidation(data);",
          "375:     this.set('configErrorList', this.collectAllIssues(parsed.configErrorsMap, parsed.generalErrors));",
          "376:   },",
          "380:   valueObserver: function () {",
          "381:     var self = this;",
          "382:     if (this.get('isInstallWizard') && this.get('currentTabName') === 'all-configurations') {",
          "",
          "[Removed Lines]",
          "378:   validationError: Em.K,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less": [
          "File: ambari-web/app/styles/application.less -> ambari-web/app/styles/application.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "2214:           }",
          "2215:           .property-description {",
          "2216:             font-size: 0.9em;",
          "2217:           }",
          "2218:           .big-checkbox {",
          "2219:             text-align: center;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2217:             white-space: pre-line;",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/bootstrap_overrides.less||ambari-web/app/styles/bootstrap_overrides.less": [
          "File: ambari-web/app/styles/bootstrap_overrides.less -> ambari-web/app/styles/bootstrap_overrides.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   }",
          "31: }",
          "40: .alert {",
          "41:   & > ul, ol {",
          "42:     padding-left: inherit;",
          "",
          "[Removed Lines]",
          "33: .popover {",
          "34:   word-wrap: break-word;",
          "35:   small {",
          "36:     font-size: 1.3rem;",
          "37:   }",
          "38: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140: }",
          "142: .popover {",
          "143:   z-index: 10000;",
          "144:   width: 350px;",
          "145:   .popover-inner {",
          "146:     word-wrap: break-word;",
          "147:   }",
          "148: }",
          "150: .text-tooltip {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:   word-wrap: break-word;",
          "142:   .popover-content {",
          "143:     white-space: pre-line;",
          "144:   }",
          "145:   small {",
          "146:     font-size: 1.3rem;",
          "147:   }",
          "",
          "---------------"
        ],
        "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js": [
          "File: ambari-web/app/utils/ajax/ajax.js -> ambari-web/app/utils/ajax/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "3449:   statuses: ['500', '401', '407', '413'],",
          "",
          "[Added Lines]",
          "3449:   statuses: [500, 401, 407, 413],",
          "",
          "---------------"
        ],
        "ambari-web/app/utils/config.js||ambari-web/app/utils/config.js": [
          "File: ambari-web/app/utils/config.js -> ambari-web/app/utils/config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:     var additionalDescription = Em.I18n.t('services.service.config.password.additionalDescription');",
          "476:     if ('password' === displayType) {",
          "477:       if (description && !description.contains(additionalDescription)) {",
          "479:       } else {",
          "480:         return additionalDescription;",
          "481:       }",
          "",
          "[Removed Lines]",
          "478:         return description + '<br />' + additionalDescription;",
          "",
          "[Added Lines]",
          "478:         return description + '\\n' + additionalDescription;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad99d9138719138cd82295e0c00f5aad4e1ce610",
      "candidate_info": {
        "commit_hash": "ad99d9138719138cd82295e0c00f5aad4e1ce610",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ad99d9138719138cd82295e0c00f5aad4e1ce610",
        "files": [
          "ambari-web/app/views/wizard/step2_view.js"
        ],
        "message": "AMBARI-25396 cross-site scripting vulnerability on Ambari hosts",
        "before_after_code_files": [
          "ambari-web/app/views/wizard/step2_view.js||ambari-web/app/views/wizard/step2_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/views/wizard/step2_view.js||ambari-web/app/views/wizard/step2_view.js": [
          "File: ambari-web/app/views/wizard/step2_view.js -> ambari-web/app/views/wizard/step2_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         return function (e) {",
          "40:           var fileNameArray = $(\"#file\").val().toString().split(\"\\\\\");",
          "41:           var selectedFileName = fileNameArray[fileNameArray.length -1];",
          "44:           self.get(\"controller\").setSshKey(e.target.result);",
          "45:         };",
          "46:       })(file);",
          "",
          "[Removed Lines]",
          "42:           $('#selectedFileName').html(selectedFileName);",
          "43:           $('#sshKey').html(e.target.result);",
          "",
          "[Added Lines]",
          "42:           $('#selectedFileName').text(selectedFileName);",
          "43:           $('#sshKey').text(e.target.result);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "990496261fcd42ff4c123535b5a2aaf6d8c584b0",
      "candidate_info": {
        "commit_hash": "990496261fcd42ff4c123535b5a2aaf6d8c584b0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/990496261fcd42ff4c123535b5a2aaf6d8c584b0",
        "files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py",
          "ambari-server/src/main/resources/stacks/HDP/2.0.6/configuration/cluster-env.xml"
        ],
        "message": "AMBARI-24548. Allow skipping Hive Metastore schema creation for sysprepped cluster (#2218)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "348: def create_metastore_schema():",
          "349:   import params",
          "351:   create_schema_cmd = format(\"export HIVE_CONF_DIR={hive_server_conf_dir} ; \"",
          "352:                              \"{hive_schematool_bin}/schematool -initSchema \"",
          "353:                              \"-dbType {hive_metastore_db_type} \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:   if params.sysprep_skip_hive_schema_create:",
          "352:     Logger.info(\"Skipping creation of Hive Metastore schema as host is sys prepped\")",
          "353:     return",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: else:",
          "27:   from params_linux import *",
          "29: sysprep_skip_copy_tarballs_hdfs = get_sysprep_skip_copy_tarballs_hdfs()",
          "30: retryAble = default(\"/commandParams/command_retry_enabled\", False)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: host_sys_prepped = default(\"/ambariLevelParams/host_sys_prepped\", False)",
          "30: sysprep_skip_hive_schema_create = host_sys_prepped and default(\"/configurations/cluster-env/sysprep_skip_hive_schema_create\", False)",
          "",
          "---------------"
        ]
      }
    }
  ]
}