{
  "cve_id": "CVE-2021-26544",
  "cve_desc": "Livy server version 0.7.0-incubating (only) is vulnerable to a cross site scripting issue in the session name. A malicious user could use this flaw to access logs and results of other users' sessions and run jobs with their privileges. This issue is fixed in Livy 0.7.1-incubating.",
  "repo": "apache/incubator-livy",
  "patch_hash": "4d8a912699683b973eee76d4e91447d769a0cb0d",
  "patch_info": {
    "commit_hash": "4d8a912699683b973eee76d4e91447d769a0cb0d",
    "repo": "apache/incubator-livy",
    "commit_url": "https://github.com/apache/incubator-livy/commit/4d8a912699683b973eee76d4e91447d769a0cb0d",
    "files": [
      "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
    ],
    "message": "Add html escape to session name\n\n## What changes were proposed in this pull request?\n\nThe PR adds HTML escaping to session names.\n\n## How was this patch tested?\n\nManual test.\n\nAuthor: Marco Gaido <mgaido@apache.org>\n\nCloses #302 from mgaido91/escape_html.",
    "before_after_code_files": [
      "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
    ]
  },
  "patch_diff": {
    "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js": [
      "File: server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js -> server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: function loadSessionsTable(sessions) {",
      "19:   $.each(sessions, function(index, session) {",
      "20:     $(\"#interactive-sessions .sessions-table-body\").append(",
      "21:       \"<tr>\" +",
      "22:         tdWrap(uiLink(\"session/\" + session.id, session.id)) +",
      "23:         tdWrap(appIdLink(session)) +",
      "25:         tdWrap(session.owner) +",
      "26:         tdWrap(session.proxyUser) +",
      "27:         tdWrap(session.kind) +",
      "",
      "[Removed Lines]",
      "24:         tdWrap(session.name) +",
      "",
      "[Added Lines]",
      "18: function escapeHtml(unescapedText) {",
      "19:   return $(\"<div>\").text(unescapedText).html()",
      "20: }",
      "28:         tdWrap(escapeHtml(session.name)) +",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "38:       \"<tr>\" +",
      "39:         tdWrap(session.id) +",
      "40:         tdWrap(appIdLink(session)) +",
      "42:         tdWrap(session.owner) +",
      "43:         tdWrap(session.proxyUser) +",
      "44:         tdWrap(session.state) +",
      "",
      "[Removed Lines]",
      "41:         tdWrap(session.name) +",
      "",
      "[Added Lines]",
      "45:         tdWrap(escapeHtml(session.name)) +",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "79:       $(\"#all-sessions\").append('<h4>No Sessions or Batches have been created yet.</h4>');",
      "80:     }",
      "81:   });",
      "",
      "[Removed Lines]",
      "82: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9f1ba47a2f0d8accc435b133b42c3a76aa9ac846",
      "candidate_info": {
        "commit_hash": "9f1ba47a2f0d8accc435b133b42c3a76aa9ac846",
        "repo": "apache/incubator-livy",
        "commit_url": "https://github.com/apache/incubator-livy/commit/9f1ba47a2f0d8accc435b133b42c3a76aa9ac846",
        "files": [
          "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
        ],
        "message": "Add html escape to session name\n\n## What changes were proposed in this pull request?\n\nThe PR adds HTML escaping to session names.\n\n## How was this patch tested?\n\nManual test.\n\nAuthor: Marco Gaido <mgaido@apache.org>\n\nCloses #302 from mgaido91/escape_html.",
        "before_after_code_files": [
          "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
          ],
          "candidate": [
            "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js"
          ]
        }
      },
      "candidate_diff": {
        "server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js||server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js": [
          "File: server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js -> server/src/main/resources/org/apache/livy/server/ui/static/js/all-sessions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: function loadSessionsTable(sessions) {",
          "19:   $.each(sessions, function(index, session) {",
          "20:     $(\"#interactive-sessions .sessions-table-body\").append(",
          "21:       \"<tr>\" +",
          "22:         tdWrap(uiLink(\"session/\" + session.id, session.id)) +",
          "23:         tdWrap(appIdLink(session)) +",
          "25:         tdWrap(session.owner) +",
          "26:         tdWrap(session.proxyUser) +",
          "27:         tdWrap(session.kind) +",
          "",
          "[Removed Lines]",
          "24:         tdWrap(session.name) +",
          "",
          "[Added Lines]",
          "18: function escapeHtml(unescapedText) {",
          "19:   return $(\"<div>\").text(unescapedText).html()",
          "20: }",
          "28:         tdWrap(escapeHtml(session.name)) +",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:       \"<tr>\" +",
          "39:         tdWrap(session.id) +",
          "40:         tdWrap(appIdLink(session)) +",
          "42:         tdWrap(session.owner) +",
          "43:         tdWrap(session.proxyUser) +",
          "44:         tdWrap(session.state) +",
          "",
          "[Removed Lines]",
          "41:         tdWrap(session.name) +",
          "",
          "[Added Lines]",
          "45:         tdWrap(escapeHtml(session.name)) +",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:       $(\"#all-sessions\").append('<h4>No Sessions or Batches have been created yet.</h4>');",
          "80:     }",
          "81:   });",
          "",
          "[Removed Lines]",
          "82: });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}