{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fcc93935bea314457591b5b0e4ee7a227fbfea95",
      "candidate_info": {
        "commit_hash": "fcc93935bea314457591b5b0e4ee7a227fbfea95",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fcc93935bea314457591b5b0e4ee7a227fbfea95",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.3+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052003.03;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.3+ (Build: 20191129)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052003.04;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.3+ (Build: 20191205)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f968cd44e8ee5d54b1bc56823040ff770dbf18af",
      "candidate_info": {
        "commit_hash": "f968cd44e8ee5d54b1bc56823040ff770dbf18af",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/f968cd44e8ee5d54b1bc56823040ff770dbf18af",
        "files": [
          "version.php"
        ],
        "message": "Moodle release 3.8",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "36: $branch   = '38';                       // This version's branch.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019111500.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "35: $release  = '3.8rc1 (Build: 20191115)'; // Human-friendly version name",
          "37: $maturity = MATURITY_RC;             // This version's maturity level.",
          "",
          "[Added Lines]",
          "32: $version  = 2019111800.00;              // 20191118      = branching date YYYYMMDD - do not modify!",
          "35: $release  = '3.8 (Build: 20191118)'; // Human-friendly version name",
          "37: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f7565c121c296f62acddd96982a0b4778708068",
      "candidate_info": {
        "commit_hash": "1f7565c121c296f62acddd96982a0b4778708068",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1f7565c121c296f62acddd96982a0b4778708068",
        "files": [
          "auth/classes/external.php",
          "auth/tests/external_test.php",
          "lib/db/services.php",
          "version.php"
        ],
        "message": "MDL-61622 auth: New WS is_age_digital_consent_verification_enabled",
        "before_after_code_files": [
          "auth/classes/external.php||auth/classes/external.php",
          "auth/tests/external_test.php||auth/tests/external_test.php",
          "lib/db/services.php||lib/db/services.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "auth/classes/external.php||auth/classes/external.php": [
          "File: auth/classes/external.php -> auth/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:             )",
          "288:         );",
          "289:     }",
          "290: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297:     public static function is_age_digital_consent_verification_enabled_parameters() {",
          "298:         return new external_function_parameters(array());",
          "299:     }",
          "308:     public static function is_age_digital_consent_verification_enabled() {",
          "309:         global $PAGE;",
          "311:         $context = context_system::instance();",
          "312:         $PAGE->set_context($context);",
          "314:         $status = false;",
          "316:         if (\\core_auth\\digital_consent::is_age_digital_consent_verification_enabled()) {",
          "317:             $status = true;",
          "318:         }",
          "320:         return array(",
          "321:             'status' => $status",
          "322:         );",
          "323:     }",
          "331:     public static function is_age_digital_consent_verification_enabled_returns() {",
          "332:         return new external_single_structure(",
          "333:             array(",
          "334:                 'status' => new external_value(PARAM_BOOL, 'True if digital consent verification is enabled,",
          "335:                     false otherwise.')",
          "336:             )",
          "337:         );",
          "338:     }",
          "",
          "---------------"
        ],
        "auth/tests/external_test.php||auth/tests/external_test.php": [
          "File: auth/tests/external_test.php -> auth/tests/external_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:         $this->expectExceptionMessage(get_string('invalidconfirmdata', 'error'));",
          "90:         $result = core_auth_external::confirm_user($username, 'zzZZzz');",
          "91:     }",
          "92: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:     public function test_age_digital_consent_verification_is_not_enabled() {",
          "97:         global $CFG;",
          "99:         $CFG->agedigitalconsentverification = 0;",
          "100:         $result = core_auth_external::is_age_digital_consent_verification_enabled();",
          "101:         $result = external_api::clean_returnvalue(",
          "102:             core_auth_external::is_age_digital_consent_verification_enabled_returns(), $result);",
          "103:         $this->assertFalse($result['status']);",
          "104:     }",
          "109:     public function test_age_digital_consent_verification_is_enabled() {",
          "110:         global $CFG;",
          "112:         $CFG->agedigitalconsentverification = 1;",
          "113:         $result = core_auth_external::is_age_digital_consent_verification_enabled();",
          "114:         $result = external_api::clean_returnvalue(",
          "115:             core_auth_external::is_age_digital_consent_verification_enabled_returns(), $result);",
          "116:         $this->assertTrue($result['status']);",
          "117:     }",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         'methodname'  => 'is_minor',",
          "56:         'description' => 'Requests a check if a user is a digital minor.',",
          "57:         'type'        => 'read',",
          "58:         'loginrequired' => false,",
          "59:     ),",
          "60:     'core_badges_get_user_badges' => array(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:         'ajax'          => true,",
          "59:         'loginrequired' => false,",
          "60:     ),",
          "61:     'core_auth_is_age_digital_consent_verification_enabled' => array(",
          "62:         'classname'   => 'core_auth_external',",
          "63:         'methodname'  => 'is_age_digital_consent_verification_enabled',",
          "64:         'description' => 'Checks if age digital consent verification is enabled.',",
          "65:         'type'        => 'read',",
          "66:         'ajax'          => true,",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018030800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018030800.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "020bad738aaabd38c0277b105171f21d1c1caad9",
      "candidate_info": {
        "commit_hash": "020bad738aaabd38c0277b105171f21d1c1caad9",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/020bad738aaabd38c0277b105171f21d1c1caad9",
        "files": [
          "admin/settings/subsystems.php",
          "backup/util/checks/backup_check.class.php",
          "backup/util/checks/restore_check.class.php",
          "course/lib.php",
          "course/publish/backup.php",
          "course/publish/forms.php",
          "course/publish/hubselector.php",
          "course/publish/index.php",
          "course/publish/lib.php",
          "course/publish/metadata.php",
          "course/tests/courselib_test.php",
          "course/tests/externallib_test.php",
          "lang/en/hub.php",
          "lang/en/role.php",
          "lib/db/access.php",
          "lib/db/upgrade.php",
          "lib/navigationlib.php",
          "version.php"
        ],
        "message": "MDL-66072 core: Remove course sharing and related capabilities",
        "before_after_code_files": [
          "admin/settings/subsystems.php||admin/settings/subsystems.php",
          "backup/util/checks/backup_check.class.php||backup/util/checks/backup_check.class.php",
          "backup/util/checks/restore_check.class.php||backup/util/checks/restore_check.class.php",
          "course/lib.php||course/lib.php",
          "course/publish/backup.php||course/publish/backup.php",
          "course/publish/forms.php||course/publish/forms.php",
          "course/publish/hubselector.php||course/publish/hubselector.php",
          "course/publish/index.php||course/publish/index.php",
          "course/publish/lib.php||course/publish/lib.php",
          "course/publish/metadata.php||course/publish/metadata.php",
          "course/tests/courselib_test.php||course/tests/courselib_test.php",
          "course/tests/externallib_test.php||course/tests/externallib_test.php",
          "lang/en/hub.php||lang/en/hub.php",
          "lang/en/role.php||lang/en/role.php",
          "lib/db/access.php||lib/db/access.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "lib/navigationlib.php||lib/navigationlib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ],
          "candidate": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/subsystems.php||admin/settings/subsystems.php": [
          "File: admin/settings/subsystems.php -> admin/settings/subsystems.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     $optionalsubsystems->add(new admin_setting_configcheckbox('allowstealth', new lang_string('allowstealthmodules'),",
          "50:         new lang_string('allowstealthmodules_help'), 0, 1, 0));",
          "54: }",
          "",
          "[Removed Lines]",
          "52:     $optionalsubsystems->add(new admin_setting_configcheckbox('enablecoursepublishing',",
          "53:         new lang_string('enablecoursepublishing', 'hub'), new lang_string('enablecoursepublishing_help', 'hub'), 0));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backup/util/checks/backup_check.class.php||backup/util/checks/backup_check.class.php": [
          "File: backup/util/checks/backup_check.class.php -> backup/util/checks/backup_check.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:         switch ($mode) {",
          "140:             case backup::MODE_IMPORT:",
          "141:                 if (!has_capability('moodle/backup:backuptargetimport', $coursectx, $userid)) {",
          "142:                     $a = new stdclass();",
          "",
          "[Removed Lines]",
          "131:             case backup::MODE_HUB:",
          "132:                 if (!has_capability('moodle/backup:backuptargethub', $coursectx, $userid)) {",
          "133:                     $a = new stdclass();",
          "134:                     $a->userid = $userid;",
          "135:                     $a->courseid = $courseid;",
          "136:                     $a->capability = 'moodle/backup:backuptargethub';",
          "137:                     throw new backup_controller_exception('backup_user_missing_capability', $a);",
          "138:                 }",
          "139:                 break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backup/util/checks/restore_check.class.php||backup/util/checks/restore_check.class.php": [
          "File: backup/util/checks/restore_check.class.php -> backup/util/checks/restore_check.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         switch ($mode) {",
          "102:             case backup::MODE_IMPORT:",
          "103:                 if (!has_capability('moodle/restore:restoretargetimport', $coursectx, $userid)) {",
          "104:                     $a = new stdclass();",
          "",
          "[Removed Lines]",
          "93:             case backup::MODE_HUB:",
          "94:                 if (!has_capability('moodle/restore:restoretargethub', $coursectx, $userid)) {",
          "95:                     $a = new stdclass();",
          "96:                     $a->userid = $userid;",
          "97:                     $a->courseid = $courseid;",
          "98:                     $a->capability = 'moodle/restore:restoretargethub';",
          "99:                     throw new restore_controller_exception('restore_user_missing_capability', $a);",
          "100:                 }",
          "101:                 break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/lib.php||course/lib.php": [
          "File: course/lib.php -> course/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4045:         $options->outcomes = !empty($CFG->enableoutcomes) && has_capability('moodle/course:update', $context);",
          "4046:         $options->badges = !empty($CFG->enablebadges);",
          "4047:         $options->import = has_capability('moodle/restore:restoretargetimport', $context);",
          "4049:         $options->reset = has_capability('moodle/course:reset', $context);",
          "4050:         $options->roles = has_capability('moodle/role:switchroles', $context);",
          "4051:     } else {",
          "",
          "[Removed Lines]",
          "4048:         $options->publish = !empty($CFG->enablecoursepublishing) && has_capability('moodle/course:publish', $context);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/backup.php||course/publish/backup.php": [
          "File: course/publish/backup.php -> course/publish/backup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/forms.php||course/publish/forms.php": [
          "File: course/publish/forms.php -> course/publish/forms.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/hubselector.php||course/publish/hubselector.php": [
          "File: course/publish/hubselector.php -> course/publish/hubselector.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/index.php||course/publish/index.php": [
          "File: course/publish/index.php -> course/publish/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/lib.php||course/publish/lib.php": [
          "File: course/publish/lib.php -> course/publish/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/publish/metadata.php||course/publish/metadata.php": [
          "File: course/publish/metadata.php -> course/publish/metadata.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/tests/courselib_test.php||course/tests/courselib_test.php": [
          "File: course/tests/courselib_test.php -> course/tests/courselib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3307:         $this->assertFalse($adminoptions->outcomes);",
          "3308:         $this->assertTrue($adminoptions->badges);",
          "3309:         $this->assertTrue($adminoptions->import);",
          "3311:         $this->assertTrue($adminoptions->reset);",
          "3312:         $this->assertTrue($adminoptions->roles);",
          "3313:     }",
          "",
          "[Removed Lines]",
          "3310:         $this->assertFalse($adminoptions->publish);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3339:         $this->assertFalse($adminoptions->outcomes);",
          "3340:         $this->assertTrue($adminoptions->badges);",
          "3341:         $this->assertFalse($adminoptions->import);",
          "3343:         $this->assertFalse($adminoptions->reset);",
          "3344:         $this->assertFalse($adminoptions->roles);",
          "",
          "[Removed Lines]",
          "3342:         $this->assertFalse($adminoptions->publish);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/tests/externallib_test.php||course/tests/externallib_test.php": [
          "File: course/tests/externallib_test.php -> course/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2296:                 $this->assertFalse($adminoptions->outcomes);",
          "2297:                 $this->assertFalse($adminoptions->badges);",
          "2298:                 $this->assertFalse($adminoptions->import);",
          "2300:                 $this->assertFalse($adminoptions->reset);",
          "2301:                 $this->assertFalse($adminoptions->roles);",
          "2302:                 $this->assertFalse($adminoptions->editcompletion);",
          "2303:             } else {",
          "2305:                 $this->assertFalse($adminoptions->update);",
          "2306:                 $this->assertFalse($adminoptions->filters);",
          "2307:                 $this->assertFalse($adminoptions->reports);",
          "",
          "[Removed Lines]",
          "2299:                 $this->assertFalse($adminoptions->publish);",
          "2304:                 $this->assertCount(15, $course['options']);",
          "",
          "[Added Lines]",
          "2303:                 $this->assertCount(14, $course['options']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2313:                 $this->assertFalse($adminoptions->outcomes);",
          "2314:                 $this->assertTrue($adminoptions->badges);",
          "2315:                 $this->assertFalse($adminoptions->import);",
          "2317:                 $this->assertFalse($adminoptions->reset);",
          "2318:                 $this->assertFalse($adminoptions->roles);",
          "2319:                 $this->assertFalse($adminoptions->editcompletion);",
          "",
          "[Removed Lines]",
          "2316:                 $this->assertFalse($adminoptions->publish);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lang/en/hub.php||lang/en/hub.php": [
          "File: lang/en/hub.php -> lang/en/hub.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: $string['eduleveltertiary'] = 'Tertiary';",
          "76: $string['emailalert'] = 'Email notifications';",
          "77: $string['emailalert_help'] = 'If this is enabled the hub administrator will send you emails about security issues and other important news.';",
          "80: $string['enrollable'] = 'Enrollable';",
          "81: $string['errorbadimageheightwidth'] = 'The image should have a maximum size of {$a->width} X {$a->height}';",
          "82: $string['errorcourseinfo'] = 'An error occurred when retrieving course metadata from {$a}. Please try again to retrieve the course metadata by reloading this page later. Otherwise you can decide to continue the registration process with the following default metadata. ';",
          "",
          "[Removed Lines]",
          "78: $string['enablecoursepublishing'] = \"Course sharing on Moodle.net\";",
          "79: $string['enablecoursepublishing_help'] = \"Moodle.net is our community site for sharing courses and content with other Moodle users worldwide. A course may be shared for others to enrol in (requires email-based self-registration on the site and self enrolment in the course) or as a backup file for others to download.\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lang/en/role.php||lang/en/role.php": [
          "File: lang/en/role.php -> lang/en/role.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: $string['backup:backupsection'] = 'Backup sections';",
          "70: $string['backup:configure'] = 'Configure backup options';",
          "71: $string['backup:downloadfile'] = 'Download files from backup areas';",
          "73: $string['backup:backuptargetimport'] = 'Backup for import';",
          "74: $string['backup:userinfo'] = 'Backup user data';",
          "75: $string['badges:awardbadge'] = 'Award badge to a user';",
          "",
          "[Removed Lines]",
          "72: $string['backup:backuptargethub'] = 'Backup for publishing on Moodle.net';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "181: $string['course:markcomplete'] = 'Mark users as complete in course completion';",
          "182: $string['course:movesections'] = 'Move sections';",
          "183: $string['course:overridecompletion'] = 'Override activity completion status';",
          "185: $string['course:renameroles'] = 'Rename roles';",
          "186: $string['course:request'] = 'Request new courses';",
          "187: $string['course:reset'] = 'Reset course';",
          "",
          "[Removed Lines]",
          "184: $string['course:publish'] = 'Publish a course';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "363: $string['restore:restoreactivity'] = 'Restore activities';",
          "364: $string['restore:restoresection'] = 'Restore sections';",
          "365: $string['restore:restorecourse'] = 'Restore courses';",
          "367: $string['restore:restoretargetimport'] = 'Restore from files targeted as import';",
          "368: $string['restore:rolldates'] = 'Allowed to roll activity configuration dates on restore';",
          "369: $string['restore:uploadfile'] = 'Upload files to backup areas';",
          "",
          "[Removed Lines]",
          "366: $string['restore:restoretargethub'] = 'Restore courses downloaded from Moodle.net';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/db/access.php||lib/db/access.php": [
          "File: lib/db/access.php -> lib/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:         'clonepermissionsfrom' =>  'moodle/backup:backupcourse'",
          "182:     ),",
          "198:     'moodle/backup:backuptargetimport' => array(",
          "200:         'riskbitmask' => RISK_SPAM | RISK_PERSONAL | RISK_XSS,",
          "",
          "[Removed Lines]",
          "184:     'moodle/backup:backuptargethub' => array(",
          "186:         'riskbitmask' => RISK_SPAM | RISK_PERSONAL | RISK_XSS,",
          "188:         'captype' => 'write',",
          "189:         'contextlevel' => CONTEXT_COURSE,",
          "190:         'archetypes' => array(",
          "191:             'editingteacher' => CAP_ALLOW,",
          "192:             'manager' => CAP_ALLOW",
          "193:         ),",
          "195:         'clonepermissionsfrom' =>  'moodle/backup:backupcourse'",
          "196:     ),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "311:         ),",
          "312:     ),",
          "328:     'moodle/restore:restoretargetimport' => array(",
          "330:         'riskbitmask' => RISK_SPAM | RISK_PERSONAL | RISK_XSS,",
          "",
          "[Removed Lines]",
          "314:     'moodle/restore:restoretargethub' => array(",
          "316:         'riskbitmask' => RISK_SPAM | RISK_PERSONAL | RISK_XSS,",
          "318:         'captype' => 'write',",
          "319:         'contextlevel' => CONTEXT_COURSE,",
          "320:         'archetypes' => array(",
          "321:             'editingteacher' => CAP_ALLOW,",
          "322:             'manager' => CAP_ALLOW",
          "323:         ),",
          "325:         'clonepermissionsfrom' =>  'moodle/restore:restorecourse'",
          "326:     ),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1987:             'editingteacher' => CAP_ALLOW,",
          "1988:             'manager' => CAP_ALLOW",
          "1989:         )",
          "1999:     ),",
          "2000:     'moodle/course:markcomplete' => array(",
          "2001:         'captype' => 'write',",
          "",
          "[Removed Lines]",
          "1990:     ),",
          "1991:      'moodle/course:publish' => array(",
          "1993:         'captype' => 'write',",
          "1994:         'riskbitmask' => RISK_SPAM | RISK_PERSONAL,",
          "1995:         'contextlevel' => CONTEXT_SYSTEM,",
          "1996:         'archetypes' => array(",
          "1997:             'manager' => CAP_ALLOW",
          "1998:         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3513:         upgrade_main_savepoint(true, 2019082400.01);",
          "3514:     }",
          "3516:     return true;",
          "3517: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3516:     if ($oldversion < 2019083000.02) {",
          "3518:         unset_config('enablecoursepublishing');",
          "3519:         upgrade_main_savepoint(true, 2019083000.02);",
          "3520:     }",
          "",
          "---------------"
        ],
        "lib/navigationlib.php||lib/navigationlib.php": [
          "File: lib/navigationlib.php -> lib/navigationlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4530:             $coursenode->add(get_string('import'), $url, self::TYPE_SETTING, null, 'import', new pix_icon('i/import', ''));",
          "4531:         }",
          "4541:         if ($adminoptions->reset) {",
          "4542:             $url = new moodle_url('/course/reset.php', array('id'=>$course->id));",
          "",
          "[Removed Lines]",
          "4534:         if ($adminoptions->publish) {",
          "4535:             $url = new moodle_url('/course/publish/index.php', array('id'=>$course->id));",
          "4536:             $coursenode->add(get_string('publish', 'core_hub'), $url, self::TYPE_SETTING, null, 'publish',",
          "4537:                 new pix_icon('i/publish', ''));",
          "4538:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019083000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019083000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e044c3debe0ed1fe3ae25117ca6120dc67416628",
      "candidate_info": {
        "commit_hash": "e044c3debe0ed1fe3ae25117ca6120dc67416628",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e044c3debe0ed1fe3ae25117ca6120dc67416628",
        "files": [
          "admin/settings/server.php",
          "lang/en/admin.php",
          "lib/classes/task/logmanager.php",
          "lib/moodlelib.php",
          "version.php"
        ],
        "message": "MDL-66570 admin: Add setting to hide captured cron log output",
        "before_after_code_files": [
          "admin/settings/server.php||admin/settings/server.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lib/classes/task/logmanager.php||lib/classes/task/logmanager.php",
          "lib/moodlelib.php||lib/moodlelib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/server.php||admin/settings/server.php": [
          "File: admin/settings/server.php -> admin/settings/server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:         ]",
          "272:     )",
          "273: );",
          "275: if (\\core\\task\\logmanager::uses_standard_settings()) {",
          "276:     $temp->add(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274: $temp->add(",
          "275:     new admin_setting_configcheckbox(",
          "276:         'task_logtostdout',",
          "277:         new lang_string('task_logtostdout', 'admin'),",
          "278:         new lang_string('task_logtostdout_desc', 'admin'),",
          "279:         1",
          "280:     )",
          "281: );",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1213: $string['task_logretention_desc'] = 'The maximum period that logs should be kept for. This setting interacts with the \\'Retain runs\\' setting: whichever is reached first will apply';",
          "1214: $string['task_logretainruns'] = 'Retain runs';",
          "1215: $string['task_logretainruns_desc'] = 'The number of runs of each task to retain. This setting interacts with the \\'Retention period\\' setting: whichever is reached first will apply.';",
          "1216: $string['task_type:adhoc'] = 'Ad hoc';",
          "1217: $string['task_type:scheduled'] = 'Scheduled';",
          "1218: $string['task_result:failed'] = 'Fail';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1216: $string['task_logtostdout'] = 'Display log output';",
          "1217: $string['task_logtostdout_desc'] = 'When jobs are running and the output is captured, whether the captured output should also be displayed as the task runs.';",
          "",
          "---------------"
        ],
        "lib/classes/task/logmanager.php||lib/classes/task/logmanager.php": [
          "File: lib/classes/task/logmanager.php -> lib/classes/task/logmanager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     protected static $oblevel = null;",
          "84:     public static function start_logging(task_base $task) {",
          "87:         if (!self::should_log()) {",
          "88:             return;",
          "",
          "[Removed Lines]",
          "85:         global $DB;",
          "",
          "[Added Lines]",
          "82:     protected static $outputloggedcontent = true;",
          "90:         global $CFG, $DB;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:             self::$oblevel = null;",
          "130:         }",
          "133:         ob_start([\\core\\task\\logmanager::class, 'add_line'], self::CHUNKSIZE);",
          "134:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:         self::$outputloggedcontent = !empty($CFG->task_logtostdout);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:             fwrite(self::$fh, $log);",
          "337:         }",
          "340:     }",
          "341: }",
          "",
          "[Removed Lines]",
          "339:         return $log;",
          "",
          "[Added Lines]",
          "346:         if (self::$outputloggedcontent) {",
          "347:             return $log;",
          "348:         } else {",
          "349:             return '';",
          "350:         }",
          "",
          "---------------"
        ],
        "lib/moodlelib.php||lib/moodlelib.php": [
          "File: lib/moodlelib.php -> lib/moodlelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9090:         $fn($string, $eol);",
          "9091:         return;",
          "9092:     } else if (defined('STDOUT') && !PHPUNIT_TEST && !defined('BEHAT_TEST')) {",
          "9098:     } else {",
          "9099:         echo $string . $eol;",
          "9100:     }",
          "",
          "[Removed Lines]",
          "9093:         fwrite(STDOUT, $string.$eol);",
          "9097:         \\core\\task\\logmanager::add_line(\"{$string}{$eol}\");",
          "",
          "[Added Lines]",
          "9095:         if ($output = \\core\\task\\logmanager::add_line(\"{$string}{$eol}\")) {",
          "9096:             fwrite(STDOUT, $output);",
          "9097:         }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019091300.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019091700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    }
  ]
}