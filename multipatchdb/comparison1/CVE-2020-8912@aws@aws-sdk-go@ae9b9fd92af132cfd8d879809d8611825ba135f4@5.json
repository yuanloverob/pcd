{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "662385f2878df266eb80077fd5554c17534b3864",
      "candidate_info": {
        "commit_hash": "662385f2878df266eb80077fd5554c17534b3864",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/662385f2878df266eb80077fd5554c17534b3864",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/mediaconvert/2017-08-29/api-2.json",
          "models/apis/mediaconvert/2017-08-29/docs-2.json",
          "models/apis/meteringmarketplace/2016-01-14/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/sesv2/2019-09-27/api-2.json",
          "models/apis/sesv2/2019-09-27/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/apis/support/2013-04-15/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go",
          "service/rds/api.go",
          "service/route53/api.go",
          "service/route53/route53iface/interface.go",
          "service/sesv2/api.go",
          "service/ssm/api.go",
          "service/support/api.go",
          "service/support/doc.go"
        ],
        "message": "Release v1.32.5 (2020-06-18) ===\n\n### Service Client Updates\n* `service/mediaconvert`: Updates service API and documentation\n  * AWS Elemental MediaConvert SDK has added support for NexGuard FileMarker SDK, which allows NexGuard partners to watermark proprietary content in mezzanine and OTT streaming contexts.\n* `service/meteringmarketplace`: Updates service documentation\n  * Documentation updates for meteringmarketplace\n* `service/rds`: Updates service API and documentation\n  * Adding support for global write forwarding on secondary clusters in an Aurora global database.\n* `service/route53`: Updates service API and documentation\n  * Added a new ListHostedZonesByVPC API for customers to list all the private hosted zones that a specified VPC is associated with.\n* `service/sesv2`: Updates service API and documentation\n* `service/ssm`: Updates service API and documentation\n  * Added offset support for specifying the number of days to wait after the date and time specified by a CRON expression before running the maintenance window.\n* `service/support`: Updates service documentation\n  * Documentation updates for support",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/marketplacemetering/api.go||service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go||service/mediaconvert/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/sesv2/api.go||service/sesv2/api.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/support/api.go||service/support/api.go",
          "service/support/doc.go||service/support/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5000:   \"servicecatalog\": service{",
          "5002:    Endpoints: endpoints{",
          "5003:     \"ap-east-1\":      endpoint{},",
          "5004:     \"ap-northeast-1\": endpoint{},",
          "5005:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5003:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5009:     \"ca-central-1\":   endpoint{},",
          "5010:     \"eu-central-1\":   endpoint{},",
          "5011:     \"eu-north-1\":     endpoint{},",
          "5012:     \"eu-west-1\":      endpoint{},",
          "5013:     \"eu-west-2\":      endpoint{},",
          "5014:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8946:     \"us-isob-east-1\": endpoint{},",
          "8947:    },",
          "8948:   },",
          "8949:   \"license-manager\": service{",
          "8951:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8949:    },",
          "8950:   },",
          "8951:   \"lambda\": service{",
          "8953:    Endpoints: endpoints{",
          "8954:     \"us-isob-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.32.4\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.32.5\"",
          "",
          "---------------"
        ],
        "service/marketplacemetering/api.go||service/marketplacemetering/api.go": [
          "File: service/marketplacemetering/api.go -> service/marketplacemetering/api.go"
        ],
        "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go": [
          "File: service/marketplacemetering/errors.go -> service/marketplacemetering/errors.go"
        ],
        "service/mediaconvert/api.go||service/mediaconvert/api.go": [
          "File: service/mediaconvert/api.go -> service/mediaconvert/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14988:  return s",
          "14989: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15027: type NexGuardFileMarkerSettings struct {",
          "15028:  _ struct{} `type:\"structure\"`",
          "15034:  License *string `locationName:\"license\" min:\"1\" type:\"string\"`",
          "15047:  Payload *int64 `locationName:\"payload\" type:\"integer\"`",
          "15052:  Preset *string `locationName:\"preset\" min:\"1\" type:\"string\"`",
          "15057:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"WatermarkingStrength\"`",
          "15058: }",
          "15061: func (s NexGuardFileMarkerSettings) String() string {",
          "15062:  return awsutil.Prettify(s)",
          "15063: }",
          "15066: func (s NexGuardFileMarkerSettings) GoString() string {",
          "15067:  return s.String()",
          "15068: }",
          "15071: func (s *NexGuardFileMarkerSettings) Validate() error {",
          "15072:  invalidParams := request.ErrInvalidParams{Context: \"NexGuardFileMarkerSettings\"}",
          "15073:  if s.License != nil && len(*s.License) < 1 {",
          "15074:   invalidParams.Add(request.NewErrParamMinLen(\"License\", 1))",
          "15075:  }",
          "15076:  if s.Preset != nil && len(*s.Preset) < 1 {",
          "15077:   invalidParams.Add(request.NewErrParamMinLen(\"Preset\", 1))",
          "15078:  }",
          "15080:  if invalidParams.Len() > 0 {",
          "15081:   return invalidParams",
          "15082:  }",
          "15083:  return nil",
          "15084: }",
          "15087: func (s *NexGuardFileMarkerSettings) SetLicense(v string) *NexGuardFileMarkerSettings {",
          "15088:  s.License = &v",
          "15089:  return s",
          "15090: }",
          "15093: func (s *NexGuardFileMarkerSettings) SetPayload(v int64) *NexGuardFileMarkerSettings {",
          "15094:  s.Payload = &v",
          "15095:  return s",
          "15096: }",
          "15099: func (s *NexGuardFileMarkerSettings) SetPreset(v string) *NexGuardFileMarkerSettings {",
          "15100:  s.Preset = &v",
          "15101:  return s",
          "15102: }",
          "15105: func (s *NexGuardFileMarkerSettings) SetStrength(v string) *NexGuardFileMarkerSettings {",
          "15106:  s.Strength = &v",
          "15107:  return s",
          "15108: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15832:  return s",
          "15833: }",
          "15837: type Preset struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15957: type PartnerWatermarking struct {",
          "15958:  _ struct{} `type:\"structure\"`",
          "15963:  NexguardFileMarkerSettings *NexGuardFileMarkerSettings `locationName:\"nexguardFileMarkerSettings\" type:\"structure\"`",
          "15964: }",
          "15967: func (s PartnerWatermarking) String() string {",
          "15968:  return awsutil.Prettify(s)",
          "15969: }",
          "15972: func (s PartnerWatermarking) GoString() string {",
          "15973:  return s.String()",
          "15974: }",
          "15977: func (s *PartnerWatermarking) Validate() error {",
          "15978:  invalidParams := request.ErrInvalidParams{Context: \"PartnerWatermarking\"}",
          "15979:  if s.NexguardFileMarkerSettings != nil {",
          "15980:   if err := s.NexguardFileMarkerSettings.Validate(); err != nil {",
          "15981:    invalidParams.AddNested(\"NexguardFileMarkerSettings\", err.(request.ErrInvalidParams))",
          "15982:   }",
          "15983:  }",
          "15985:  if invalidParams.Len() > 0 {",
          "15986:   return invalidParams",
          "15987:  }",
          "15988:  return nil",
          "15989: }",
          "15992: func (s *PartnerWatermarking) SetNexguardFileMarkerSettings(v *NexGuardFileMarkerSettings) *PartnerWatermarking {",
          "15993:  s.NexguardFileMarkerSettings = v",
          "15994:  return s",
          "15995: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "18438:  NoiseReducer *NoiseReducer `locationName:\"noiseReducer\" type:\"structure\"`",
          "18442:  TimecodeBurnin *TimecodeBurnin `locationName:\"timecodeBurnin\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18616:  PartnerWatermarking *PartnerWatermarking `locationName:\"partnerWatermarking\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "18470:    invalidParams.AddNested(\"NoiseReducer\", err.(request.ErrInvalidParams))",
          "18471:   }",
          "18472:  }",
          "18473:  if s.TimecodeBurnin != nil {",
          "18474:   if err := s.TimecodeBurnin.Validate(); err != nil {",
          "18475:    invalidParams.AddNested(\"TimecodeBurnin\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18651:  if s.PartnerWatermarking != nil {",
          "18652:   if err := s.PartnerWatermarking.Validate(); err != nil {",
          "18653:    invalidParams.AddNested(\"PartnerWatermarking\", err.(request.ErrInvalidParams))",
          "18654:   }",
          "18655:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "18512:  return s",
          "18513: }",
          "18516: func (s *VideoPreprocessor) SetTimecodeBurnin(v *TimecodeBurnin) *VideoPreprocessor {",
          "18517:  s.TimecodeBurnin = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18699: func (s *VideoPreprocessor) SetPartnerWatermarking(v *PartnerWatermarking) *VideoPreprocessor {",
          "18700:  s.PartnerWatermarking = v",
          "18701:  return s",
          "18702: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "23822:  Vp9RateControlModeVbr = \"VBR\"",
          "23823: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24023: const (",
          "24025:  WatermarkingStrengthLightest = \"LIGHTEST\"",
          "24028:  WatermarkingStrengthLighter = \"LIGHTER\"",
          "24031:  WatermarkingStrengthDefault = \"DEFAULT\"",
          "24034:  WatermarkingStrengthStronger = \"STRONGER\"",
          "24037:  WatermarkingStrengthStrongest = \"STRONGEST\"",
          "24038: )",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16580:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16593:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16911:  return s",
          "16912: }",
          "16915: func (s *CreateDBClusterInput) SetEnableHttpEndpoint(v bool) *CreateDBClusterInput {",
          "16916:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16928: func (s *CreateDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *CreateDBClusterInput {",
          "16929:  s.EnableGlobalWriteForwarding = &v",
          "16930:  return s",
          "16931: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20135:  EngineVersion *string `type:\"string\"`",
          "20138:  HostedZoneId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174:  GlobalWriteForwardingRequested *bool `type:\"boolean\"`",
          "20178:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "20432:  return s",
          "20433: }",
          "20436: func (s *DBCluster) SetHostedZoneId(v string) *DBCluster {",
          "20437:  s.HostedZoneId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20479: func (s *DBCluster) SetGlobalWriteForwardingRequested(v bool) *DBCluster {",
          "20480:  s.GlobalWriteForwardingRequested = &v",
          "20481:  return s",
          "20482: }",
          "20485: func (s *DBCluster) SetGlobalWriteForwardingStatus(v string) *DBCluster {",
          "20486:  s.GlobalWriteForwardingStatus = &v",
          "20487:  return s",
          "20488: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "30859:  DBClusterArn *string `type:\"string\"`",
          "30863:  IsWriter *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30926:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "30883:  return s",
          "30884: }",
          "30887: func (s *GlobalClusterMember) SetIsWriter(v bool) *GlobalClusterMember {",
          "30888:  s.IsWriter = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30954: func (s *GlobalClusterMember) SetGlobalWriteForwardingStatus(v string) *GlobalClusterMember {",
          "30955:  s.GlobalWriteForwardingStatus = &v",
          "30956:  return s",
          "30957: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "31879:  DomainIAMRoleName *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31961:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "32093:  return s",
          "32094: }",
          "32097: func (s *ModifyDBClusterInput) SetEnableHttpEndpoint(v bool) *ModifyDBClusterInput {",
          "32098:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32179: func (s *ModifyDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *ModifyDBClusterInput {",
          "32180:  s.EnableGlobalWriteForwarding = &v",
          "32181:  return s",
          "32182: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "41537:  TargetTypeTrackedCluster = \"TRACKED_CLUSTER\"",
          "41538: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41667: const (",
          "41669:  WriteForwardingStatusEnabled = \"enabled\"",
          "41672:  WriteForwardingStatusDisabled = \"disabled\"",
          "41675:  WriteForwardingStatusEnabling = \"enabling\"",
          "41678:  WriteForwardingStatusDisabling = \"disabling\"",
          "41681:  WriteForwardingStatusUnknown = \"unknown\"",
          "41682: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4304:  return out, req.Send()",
          "4305: }",
          "4307: const opListQueryLoggingConfigs = \"ListQueryLoggingConfigs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4316: const opListHostedZonesByVPC = \"ListHostedZonesByVPC\"",
          "4342: func (c *Route53) ListHostedZonesByVPCRequest(input *ListHostedZonesByVPCInput) (req *request.Request, output *ListHostedZonesByVPCOutput) {",
          "4343:  op := &request.Operation{",
          "4344:   Name:       opListHostedZonesByVPC,",
          "4345:   HTTPMethod: \"GET\",",
          "4346:   HTTPPath:   \"/2013-04-01/hostedzonesbyvpc\",",
          "4347:  }",
          "4349:  if input == nil {",
          "4350:   input = &ListHostedZonesByVPCInput{}",
          "4351:  }",
          "4353:  output = &ListHostedZonesByVPCOutput{}",
          "4354:  req = c.newRequest(op, input, output)",
          "4355:  return",
          "4356: }",
          "4388: func (c *Route53) ListHostedZonesByVPC(input *ListHostedZonesByVPCInput) (*ListHostedZonesByVPCOutput, error) {",
          "4389:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4390:  return out, req.Send()",
          "4391: }",
          "4402: func (c *Route53) ListHostedZonesByVPCWithContext(ctx aws.Context, input *ListHostedZonesByVPCInput, opts ...request.Option) (*ListHostedZonesByVPCOutput, error) {",
          "4403:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4404:  req.SetContext(ctx)",
          "4405:  req.ApplyOptions(opts...)",
          "4406:  return out, req.Send()",
          "4407: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10783:  return s",
          "10784: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10891: type HostedZoneOwner struct {",
          "10892:  _ struct{} `type:\"structure\"`",
          "10899:  OwningAccount *string `type:\"string\"`",
          "10906:  OwningService *string `type:\"string\"`",
          "10907: }",
          "10910: func (s HostedZoneOwner) String() string {",
          "10911:  return awsutil.Prettify(s)",
          "10912: }",
          "10915: func (s HostedZoneOwner) GoString() string {",
          "10916:  return s.String()",
          "10917: }",
          "10920: func (s *HostedZoneOwner) SetOwningAccount(v string) *HostedZoneOwner {",
          "10921:  s.OwningAccount = &v",
          "10922:  return s",
          "10923: }",
          "10926: func (s *HostedZoneOwner) SetOwningService(v string) *HostedZoneOwner {",
          "10927:  s.OwningService = &v",
          "10928:  return s",
          "10929: }",
          "10936: type HostedZoneSummary struct {",
          "10937:  _ struct{} `type:\"structure\"`",
          "10943:  HostedZoneId *string `type:\"string\" required:\"true\"`",
          "10948:  Name *string `type:\"string\" required:\"true\"`",
          "10954:  Owner *HostedZoneOwner `type:\"structure\" required:\"true\"`",
          "10955: }",
          "10958: func (s HostedZoneSummary) String() string {",
          "10959:  return awsutil.Prettify(s)",
          "10960: }",
          "10963: func (s HostedZoneSummary) GoString() string {",
          "10964:  return s.String()",
          "10965: }",
          "10968: func (s *HostedZoneSummary) SetHostedZoneId(v string) *HostedZoneSummary {",
          "10969:  s.HostedZoneId = &v",
          "10970:  return s",
          "10971: }",
          "10974: func (s *HostedZoneSummary) SetName(v string) *HostedZoneSummary {",
          "10975:  s.Name = &v",
          "10976:  return s",
          "10977: }",
          "10980: func (s *HostedZoneSummary) SetOwner(v *HostedZoneOwner) *HostedZoneSummary {",
          "10981:  s.Owner = v",
          "10982:  return s",
          "10983: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11285:  return s",
          "11286: }",
          "11290: type ListHostedZonesInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11489: type ListHostedZonesByVPCInput struct {",
          "11490:  _ struct{} `locationName:\"ListHostedZonesByVPCRequest\" type:\"structure\"`",
          "11497:  MaxItems *string `location:\"querystring\" locationName:\"maxitems\" type:\"string\"`",
          "11508:  NextToken *string `location:\"querystring\" locationName:\"nexttoken\" type:\"string\"`",
          "11513:  VPCId *string `location:\"querystring\" locationName:\"vpcid\" type:\"string\" required:\"true\"`",
          "11519:  VPCRegion *string `location:\"querystring\" locationName:\"vpcregion\" min:\"1\" type:\"string\" required:\"true\" enum:\"VPCRegion\"`",
          "11520: }",
          "11523: func (s ListHostedZonesByVPCInput) String() string {",
          "11524:  return awsutil.Prettify(s)",
          "11525: }",
          "11528: func (s ListHostedZonesByVPCInput) GoString() string {",
          "11529:  return s.String()",
          "11530: }",
          "11533: func (s *ListHostedZonesByVPCInput) Validate() error {",
          "11534:  invalidParams := request.ErrInvalidParams{Context: \"ListHostedZonesByVPCInput\"}",
          "11535:  if s.VPCId == nil {",
          "11536:   invalidParams.Add(request.NewErrParamRequired(\"VPCId\"))",
          "11537:  }",
          "11538:  if s.VPCRegion == nil {",
          "11539:   invalidParams.Add(request.NewErrParamRequired(\"VPCRegion\"))",
          "11540:  }",
          "11541:  if s.VPCRegion != nil && len(*s.VPCRegion) < 1 {",
          "11542:   invalidParams.Add(request.NewErrParamMinLen(\"VPCRegion\", 1))",
          "11543:  }",
          "11545:  if invalidParams.Len() > 0 {",
          "11546:   return invalidParams",
          "11547:  }",
          "11548:  return nil",
          "11549: }",
          "11552: func (s *ListHostedZonesByVPCInput) SetMaxItems(v string) *ListHostedZonesByVPCInput {",
          "11553:  s.MaxItems = &v",
          "11554:  return s",
          "11555: }",
          "11558: func (s *ListHostedZonesByVPCInput) SetNextToken(v string) *ListHostedZonesByVPCInput {",
          "11559:  s.NextToken = &v",
          "11560:  return s",
          "11561: }",
          "11564: func (s *ListHostedZonesByVPCInput) SetVPCId(v string) *ListHostedZonesByVPCInput {",
          "11565:  s.VPCId = &v",
          "11566:  return s",
          "11567: }",
          "11570: func (s *ListHostedZonesByVPCInput) SetVPCRegion(v string) *ListHostedZonesByVPCInput {",
          "11571:  s.VPCRegion = &v",
          "11572:  return s",
          "11573: }",
          "11575: type ListHostedZonesByVPCOutput struct {",
          "11576:  _ struct{} `type:\"structure\"`",
          "11584:  HostedZoneSummaries []*HostedZoneSummary `locationNameList:\"HostedZoneSummary\" type:\"list\" required:\"true\"`",
          "11590:  MaxItems *string `type:\"string\" required:\"true\"`",
          "11594:  NextToken *string `type:\"string\"`",
          "11595: }",
          "11598: func (s ListHostedZonesByVPCOutput) String() string {",
          "11599:  return awsutil.Prettify(s)",
          "11600: }",
          "11603: func (s ListHostedZonesByVPCOutput) GoString() string {",
          "11604:  return s.String()",
          "11605: }",
          "11608: func (s *ListHostedZonesByVPCOutput) SetHostedZoneSummaries(v []*HostedZoneSummary) *ListHostedZonesByVPCOutput {",
          "11609:  s.HostedZoneSummaries = v",
          "11610:  return s",
          "11611: }",
          "11614: func (s *ListHostedZonesByVPCOutput) SetMaxItems(v string) *ListHostedZonesByVPCOutput {",
          "11615:  s.MaxItems = &v",
          "11616:  return s",
          "11617: }",
          "11620: func (s *ListHostedZonesByVPCOutput) SetNextToken(v string) *ListHostedZonesByVPCOutput {",
          "11621:  s.NextToken = &v",
          "11622:  return s",
          "11623: }",
          "",
          "---------------"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:  ListHostedZonesByNameWithContext(aws.Context, *route53.ListHostedZonesByNameInput, ...request.Option) (*route53.ListHostedZonesByNameOutput, error)",
          "227:  ListHostedZonesByNameRequest(*route53.ListHostedZonesByNameInput) (*request.Request, *route53.ListHostedZonesByNameOutput)",
          "229:  ListQueryLoggingConfigs(*route53.ListQueryLoggingConfigsInput) (*route53.ListQueryLoggingConfigsOutput, error)",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:  ListHostedZonesByVPC(*route53.ListHostedZonesByVPCInput) (*route53.ListHostedZonesByVPCOutput, error)",
          "230:  ListHostedZonesByVPCWithContext(aws.Context, *route53.ListHostedZonesByVPCInput, ...request.Option) (*route53.ListHostedZonesByVPCOutput, error)",
          "231:  ListHostedZonesByVPCRequest(*route53.ListHostedZonesByVPCInput) (*request.Request, *route53.ListHostedZonesByVPCOutput)",
          "",
          "---------------"
        ],
        "service/sesv2/api.go||service/sesv2/api.go": [
          "File: service/sesv2/api.go -> service/sesv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12260:  EventTypeRenderingFailure = \"RENDERING_FAILURE\"",
          "12261: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12263:  EventTypeDeliveryDelay = \"DELIVERY_DELAY\"",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17137:  Schedule *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17154:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17207:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "17208:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "17209:  }",
          "17210:  if s.Tags != nil {",
          "17211:   for i, v := range s.Tags {",
          "17212:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17227:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "17228:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "17229:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17272:  return s",
          "17273: }",
          "17276: func (s *CreateMaintenanceWindowInput) SetScheduleTimezone(v string) *CreateMaintenanceWindowInput {",
          "17277:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17296: func (s *CreateMaintenanceWindowInput) SetScheduleOffset(v int64) *CreateMaintenanceWindowInput {",
          "17297:  s.ScheduleOffset = &v",
          "17298:  return s",
          "17299: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "25639:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25669:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "25729:  return s",
          "25730: }",
          "25733: func (s *GetMaintenanceWindowOutput) SetScheduleTimezone(v string) *GetMaintenanceWindowOutput {",
          "25734:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25763: func (s *GetMaintenanceWindowOutput) SetScheduleOffset(v int64) *GetMaintenanceWindowOutput {",
          "25764:  s.ScheduleOffset = &v",
          "25765:  return s",
          "25766: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "33642:  Schedule *string `min:\"1\" type:\"string\"`",
          "33646:  ScheduleTimezone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33682:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "33711:  return s",
          "33712: }",
          "33715: func (s *MaintenanceWindowIdentity) SetScheduleTimezone(v string) *MaintenanceWindowIdentity {",
          "33716:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33755: func (s *MaintenanceWindowIdentity) SetScheduleOffset(v int64) *MaintenanceWindowIdentity {",
          "33756:  s.ScheduleOffset = &v",
          "33757:  return s",
          "33758: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "43528:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43591:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "43570:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "43571:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "43572:  }",
          "43573:  if s.WindowId == nil {",
          "43574:   invalidParams.Add(request.NewErrParamRequired(\"WindowId\"))",
          "43575:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43636:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "43637:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "43638:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "43637:  return s",
          "43638: }",
          "43641: func (s *UpdateMaintenanceWindowInput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowInput {",
          "43642:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43707: func (s *UpdateMaintenanceWindowInput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowInput {",
          "43708:  s.ScheduleOffset = &v",
          "43709:  return s",
          "43710: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "43687:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43763:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "43759:  return s",
          "43760: }",
          "43763: func (s *UpdateMaintenanceWindowOutput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowOutput {",
          "43764:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43839: func (s *UpdateMaintenanceWindowOutput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowOutput {",
          "43840:  s.ScheduleOffset = &v",
          "43841:  return s",
          "43842: }",
          "",
          "---------------"
        ],
        "service/support/api.go||service/support/api.go": [
          "File: service/support/api.go -> service/support/api.go"
        ],
        "service/support/doc.go||service/support/doc.go": [
          "File: service/support/doc.go -> service/support/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "533662cdfefcf595d426bb25511e2bf39b62fca5",
      "candidate_info": {
        "commit_hash": "533662cdfefcf595d426bb25511e2bf39b62fca5",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/533662cdfefcf595d426bb25511e2bf39b62fca5",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/backup/2018-11-15/docs-2.json",
          "models/apis/cloudfront/2020-05-31/api-2.json",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/sqs/2012-11-05/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/backup/api.go",
          "service/cloudfront/api.go",
          "service/cloudfront/cloudfrontiface/interface.go",
          "service/cloudfront/errors.go",
          "service/ec2/api.go",
          "service/sqs/api.go",
          "service/sqs/doc.go"
        ],
        "message": "Release v1.34.14 (2020-08-31) ===\n\n### Service Client Updates\n* `service/backup`: Updates service documentation\n* `service/cloudfront`: Updates service API and documentation\n  * CloudFront now supports real-time logging for CloudFront distributions. CloudFront real-time logs are more detailed, configurable, and are available in real time.\n* `service/ec2`: Updates service API and documentation\n  * Amazon EC2 and Spot Fleet now support modification of launch template configs for a running fleet enabling instance type, instance weight, AZ, and AMI updates without losing the current fleet ID.\n* `service/sqs`: Updates service documentation\n  * Documentation updates for SQS.\n\n### SDK Bugs\n* `aws/ec2metadata`: Add support for EC2 IMDS endpoint from environment variable ([#3504](https://github.com/aws/aws-sdk-go/pull/3504))\n  * Adds support for specifying a custom EC2 IMDS endpoint from the environment variable, `AWS_EC2_METADATA_SERVICE_ENDPOINT`.\n  * The `aws/session#Options` struct also has a new field, `EC2IMDSEndpoint`. This field can be used to configure the custom endpoint of the EC2 IMDS client. The option only applies to EC2 IMDS clients created after the Session with `EC2IMDSEndpoint` is specified.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/backup/api.go||service/backup/api.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/cloudfront/cloudfrontiface/interface.go||service/cloudfront/cloudfrontiface/interface.go",
          "service/cloudfront/errors.go||service/cloudfront/errors.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/sqs/api.go||service/sqs/api.go",
          "service/sqs/doc.go||service/sqs/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:     Protocols: []string{\"https\"},",
          "293:    },",
          "294:    Endpoints: endpoints{",
          "295:     \"ap-east-1\":      endpoint{},",
          "296:     \"ap-northeast-1\": endpoint{},",
          "297:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:     \"ca-central-1\":   endpoint{},",
          "302:     \"eu-central-1\":   endpoint{},",
          "303:     \"eu-north-1\":     endpoint{},",
          "304:     \"eu-west-1\":      endpoint{},",
          "305:     \"eu-west-2\":      endpoint{},",
          "306:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3718:     \"ap-northeast-2\": endpoint{},",
          "3719:     \"ap-southeast-1\": endpoint{},",
          "3720:     \"eu-west-1\":      endpoint{},",
          "3722:     \"us-east-1\":      endpoint{},",
          "3723:    },",
          "3724:   },",
          "",
          "[Removed Lines]",
          "3721:     \"eu-west-2\":      endpoint{},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7899:    Endpoints: endpoints{",
          "7900:     \"fips-us-gov-east-1\": endpoint{",
          "7902:      CredentialScope: credentialScope{",
          "7903:       Region: \"us-gov-east-1\",",
          "7904:      },",
          "7905:     },",
          "7906:     \"fips-us-gov-west-1\": endpoint{",
          "7908:      CredentialScope: credentialScope{",
          "7909:       Region: \"us-gov-west-1\",",
          "7910:      },",
          "",
          "[Removed Lines]",
          "7901:      Hostname: \"elasticloadbalancing-fips.us-gov-east-1.amazonaws.com\",",
          "7907:      Hostname: \"elasticloadbalancing-fips.us-gov-west-1.amazonaws.com\",",
          "",
          "[Added Lines]",
          "7902:      Hostname: \"elasticloadbalancing.us-gov-east-1.amazonaws.com\",",
          "7908:      Hostname: \"elasticloadbalancing.us-gov-west-1.amazonaws.com\",",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.14\"",
          "",
          "---------------"
        ],
        "service/backup/api.go||service/backup/api.go": [
          "File: service/backup/api.go -> service/backup/api.go"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1368:  return out, req.Send()",
          "1369: }",
          "1371: const opCreateStreamingDistribution = \"CreateStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1371: const opCreateRealtimeLogConfig = \"CreateRealtimeLogConfig2020_05_31\"",
          "1397: func (c *CloudFront) CreateRealtimeLogConfigRequest(input *CreateRealtimeLogConfigInput) (req *request.Request, output *CreateRealtimeLogConfigOutput) {",
          "1398:  op := &request.Operation{",
          "1399:   Name:       opCreateRealtimeLogConfig,",
          "1400:   HTTPMethod: \"POST\",",
          "1401:   HTTPPath:   \"/2020-05-31/realtime-log-config\",",
          "1402:  }",
          "1404:  if input == nil {",
          "1405:   input = &CreateRealtimeLogConfigInput{}",
          "1406:  }",
          "1408:  output = &CreateRealtimeLogConfigOutput{}",
          "1409:  req = c.newRequest(op, input, output)",
          "1410:  return",
          "1411: }",
          "1446: func (c *CloudFront) CreateRealtimeLogConfig(input *CreateRealtimeLogConfigInput) (*CreateRealtimeLogConfigOutput, error) {",
          "1447:  req, out := c.CreateRealtimeLogConfigRequest(input)",
          "1448:  return out, req.Send()",
          "1449: }",
          "1460: func (c *CloudFront) CreateRealtimeLogConfigWithContext(ctx aws.Context, input *CreateRealtimeLogConfigInput, opts ...request.Option) (*CreateRealtimeLogConfigOutput, error) {",
          "1461:  req, out := c.CreateRealtimeLogConfigRequest(input)",
          "1462:  req.SetContext(ctx)",
          "1463:  req.ApplyOptions(opts...)",
          "1464:  return out, req.Send()",
          "1465: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2388:  return out, req.Send()",
          "2389: }",
          "2391: const opDeleteStreamingDistribution = \"DeleteStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2487: const opDeleteRealtimeLogConfig = \"DeleteRealtimeLogConfig2020_05_31\"",
          "2513: func (c *CloudFront) DeleteRealtimeLogConfigRequest(input *DeleteRealtimeLogConfigInput) (req *request.Request, output *DeleteRealtimeLogConfigOutput) {",
          "2514:  op := &request.Operation{",
          "2515:   Name:       opDeleteRealtimeLogConfig,",
          "2516:   HTTPMethod: \"POST\",",
          "2517:   HTTPPath:   \"/2020-05-31/delete-realtime-log-config/\",",
          "2518:  }",
          "2520:  if input == nil {",
          "2521:   input = &DeleteRealtimeLogConfigInput{}",
          "2522:  }",
          "2524:  output = &DeleteRealtimeLogConfigOutput{}",
          "2525:  req = c.newRequest(op, input, output)",
          "2526:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2527:  return",
          "2528: }",
          "2562: func (c *CloudFront) DeleteRealtimeLogConfig(input *DeleteRealtimeLogConfigInput) (*DeleteRealtimeLogConfigOutput, error) {",
          "2563:  req, out := c.DeleteRealtimeLogConfigRequest(input)",
          "2564:  return out, req.Send()",
          "2565: }",
          "2576: func (c *CloudFront) DeleteRealtimeLogConfigWithContext(ctx aws.Context, input *DeleteRealtimeLogConfigInput, opts ...request.Option) (*DeleteRealtimeLogConfigOutput, error) {",
          "2577:  req, out := c.DeleteRealtimeLogConfigRequest(input)",
          "2578:  req.SetContext(ctx)",
          "2579:  req.ApplyOptions(opts...)",
          "2580:  return out, req.Send()",
          "2581: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3865:  return out, req.Send()",
          "3866: }",
          "3868: const opGetStreamingDistribution = \"GetStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4060: const opGetRealtimeLogConfig = \"GetRealtimeLogConfig2020_05_31\"",
          "4086: func (c *CloudFront) GetRealtimeLogConfigRequest(input *GetRealtimeLogConfigInput) (req *request.Request, output *GetRealtimeLogConfigOutput) {",
          "4087:  op := &request.Operation{",
          "4088:   Name:       opGetRealtimeLogConfig,",
          "4089:   HTTPMethod: \"POST\",",
          "4090:   HTTPPath:   \"/2020-05-31/get-realtime-log-config/\",",
          "4091:  }",
          "4093:  if input == nil {",
          "4094:   input = &GetRealtimeLogConfigInput{}",
          "4095:  }",
          "4097:  output = &GetRealtimeLogConfigOutput{}",
          "4098:  req = c.newRequest(op, input, output)",
          "4099:  return",
          "4100: }",
          "4126: func (c *CloudFront) GetRealtimeLogConfig(input *GetRealtimeLogConfigInput) (*GetRealtimeLogConfigOutput, error) {",
          "4127:  req, out := c.GetRealtimeLogConfigRequest(input)",
          "4128:  return out, req.Send()",
          "4129: }",
          "4140: func (c *CloudFront) GetRealtimeLogConfigWithContext(ctx aws.Context, input *GetRealtimeLogConfigInput, opts ...request.Option) (*GetRealtimeLogConfigOutput, error) {",
          "4141:  req, out := c.GetRealtimeLogConfigRequest(input)",
          "4142:  req.SetContext(ctx)",
          "4143:  req.ApplyOptions(opts...)",
          "4144:  return out, req.Send()",
          "4145: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4582:  return out, req.Send()",
          "4583: }",
          "4585: const opListDistributionsByWebACLId = \"ListDistributionsByWebACLId2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4864: const opListDistributionsByRealtimeLogConfig = \"ListDistributionsByRealtimeLogConfig2020_05_31\"",
          "4890: func (c *CloudFront) ListDistributionsByRealtimeLogConfigRequest(input *ListDistributionsByRealtimeLogConfigInput) (req *request.Request, output *ListDistributionsByRealtimeLogConfigOutput) {",
          "4891:  op := &request.Operation{",
          "4892:   Name:       opListDistributionsByRealtimeLogConfig,",
          "4893:   HTTPMethod: \"POST\",",
          "4894:   HTTPPath:   \"/2020-05-31/distributionsByRealtimeLogConfig/\",",
          "4895:  }",
          "4897:  if input == nil {",
          "4898:   input = &ListDistributionsByRealtimeLogConfigInput{}",
          "4899:  }",
          "4901:  output = &ListDistributionsByRealtimeLogConfigOutput{}",
          "4902:  req = c.newRequest(op, input, output)",
          "4903:  return",
          "4904: }",
          "4934: func (c *CloudFront) ListDistributionsByRealtimeLogConfig(input *ListDistributionsByRealtimeLogConfigInput) (*ListDistributionsByRealtimeLogConfigOutput, error) {",
          "4935:  req, out := c.ListDistributionsByRealtimeLogConfigRequest(input)",
          "4936:  return out, req.Send()",
          "4937: }",
          "4948: func (c *CloudFront) ListDistributionsByRealtimeLogConfigWithContext(ctx aws.Context, input *ListDistributionsByRealtimeLogConfigInput, opts ...request.Option) (*ListDistributionsByRealtimeLogConfigOutput, error) {",
          "4949:  req, out := c.ListDistributionsByRealtimeLogConfigRequest(input)",
          "4950:  req.SetContext(ctx)",
          "4951:  req.ApplyOptions(opts...)",
          "4952:  return out, req.Send()",
          "4953: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5143:  return out, req.Send()",
          "5144: }",
          "5146: const opListStreamingDistributions = \"ListStreamingDistributions2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5516: const opListRealtimeLogConfigs = \"ListRealtimeLogConfigs2020_05_31\"",
          "5542: func (c *CloudFront) ListRealtimeLogConfigsRequest(input *ListRealtimeLogConfigsInput) (req *request.Request, output *ListRealtimeLogConfigsOutput) {",
          "5543:  op := &request.Operation{",
          "5544:   Name:       opListRealtimeLogConfigs,",
          "5545:   HTTPMethod: \"GET\",",
          "5546:   HTTPPath:   \"/2020-05-31/realtime-log-config\",",
          "5547:  }",
          "5549:  if input == nil {",
          "5550:   input = &ListRealtimeLogConfigsInput{}",
          "5551:  }",
          "5553:  output = &ListRealtimeLogConfigsOutput{}",
          "5554:  req = c.newRequest(op, input, output)",
          "5555:  return",
          "5556: }",
          "5575: func (c *CloudFront) ListRealtimeLogConfigs(input *ListRealtimeLogConfigsInput) (*ListRealtimeLogConfigsOutput, error) {",
          "5576:  req, out := c.ListRealtimeLogConfigsRequest(input)",
          "5577:  return out, req.Send()",
          "5578: }",
          "5589: func (c *CloudFront) ListRealtimeLogConfigsWithContext(ctx aws.Context, input *ListRealtimeLogConfigsInput, opts ...request.Option) (*ListRealtimeLogConfigsOutput, error) {",
          "5590:  req, out := c.ListRealtimeLogConfigsRequest(input)",
          "5591:  req.SetContext(ctx)",
          "5592:  req.ApplyOptions(opts...)",
          "5593:  return out, req.Send()",
          "5594: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6472:  op := &request.Operation{",
          "6474:   HTTPMethod: \"PUT\",",
          "6476:  }",
          "6478:  if input == nil {",
          "6480:  }",
          "6483:  req = c.newRequest(op, input, output)",
          "6484:  return",
          "6485: }",
          "6525:  return out, req.Send()",
          "6526: }",
          "6539:  req.SetContext(ctx)",
          "6540:  req.ApplyOptions(opts...)",
          "6541:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "6471: func (c *CloudFront) UpdatePublicKeyRequest(input *UpdatePublicKeyInput) (req *request.Request, output *UpdatePublicKeyOutput) {",
          "6473:   Name:       opUpdatePublicKey,",
          "6475:   HTTPPath:   \"/2020-05-31/public-key/{Id}/config\",",
          "6479:   input = &UpdatePublicKeyInput{}",
          "6482:  output = &UpdatePublicKeyOutput{}",
          "6523: func (c *CloudFront) UpdatePublicKey(input *UpdatePublicKeyInput) (*UpdatePublicKeyOutput, error) {",
          "6524:  req, out := c.UpdatePublicKeyRequest(input)",
          "6537: func (c *CloudFront) UpdatePublicKeyWithContext(ctx aws.Context, input *UpdatePublicKeyInput, opts ...request.Option) (*UpdatePublicKeyOutput, error) {",
          "6538:  req, out := c.UpdatePublicKeyRequest(input)",
          "",
          "[Added Lines]",
          "6921: func (c *CloudFront) UpdatePublicKeyRequest(input *UpdatePublicKeyInput) (req *request.Request, output *UpdatePublicKeyOutput) {",
          "6922:  op := &request.Operation{",
          "6923:   Name:       opUpdatePublicKey,",
          "6924:   HTTPMethod: \"PUT\",",
          "6925:   HTTPPath:   \"/2020-05-31/public-key/{Id}/config\",",
          "6926:  }",
          "6928:  if input == nil {",
          "6929:   input = &UpdatePublicKeyInput{}",
          "6930:  }",
          "6932:  output = &UpdatePublicKeyOutput{}",
          "6933:  req = c.newRequest(op, input, output)",
          "6934:  return",
          "6935: }",
          "6973: func (c *CloudFront) UpdatePublicKey(input *UpdatePublicKeyInput) (*UpdatePublicKeyOutput, error) {",
          "6974:  req, out := c.UpdatePublicKeyRequest(input)",
          "6975:  return out, req.Send()",
          "6976: }",
          "6987: func (c *CloudFront) UpdatePublicKeyWithContext(ctx aws.Context, input *UpdatePublicKeyInput, opts ...request.Option) (*UpdatePublicKeyOutput, error) {",
          "6988:  req, out := c.UpdatePublicKeyRequest(input)",
          "6989:  req.SetContext(ctx)",
          "6990:  req.ApplyOptions(opts...)",
          "6991:  return out, req.Send()",
          "6992: }",
          "6994: const opUpdateRealtimeLogConfig = \"UpdateRealtimeLogConfig2020_05_31\"",
          "7020: func (c *CloudFront) UpdateRealtimeLogConfigRequest(input *UpdateRealtimeLogConfigInput) (req *request.Request, output *UpdateRealtimeLogConfigOutput) {",
          "7022:   Name:       opUpdateRealtimeLogConfig,",
          "7024:   HTTPPath:   \"/2020-05-31/realtime-log-config/\",",
          "7028:   input = &UpdateRealtimeLogConfigInput{}",
          "7031:  output = &UpdateRealtimeLogConfigOutput{}",
          "7070: func (c *CloudFront) UpdateRealtimeLogConfig(input *UpdateRealtimeLogConfigInput) (*UpdateRealtimeLogConfigOutput, error) {",
          "7071:  req, out := c.UpdateRealtimeLogConfigRequest(input)",
          "7084: func (c *CloudFront) UpdateRealtimeLogConfigWithContext(ctx aws.Context, input *UpdateRealtimeLogConfigInput, opts ...request.Option) (*UpdateRealtimeLogConfigOutput, error) {",
          "7085:  req, out := c.UpdateRealtimeLogConfigRequest(input)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7090:  PathPattern *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7643:  RealtimeLogConfigArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7270:  return s",
          "7271: }",
          "7274: func (s *CacheBehavior) SetSmoothStreaming(v bool) *CacheBehavior {",
          "7275:  s.SmoothStreaming = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7827: func (s *CacheBehavior) SetRealtimeLogConfigArn(v string) *CacheBehavior {",
          "7828:  s.RealtimeLogConfigArn = &v",
          "7829:  return s",
          "7830: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "9127:  return s",
          "9128: }",
          "9131: type CreateStreamingDistributionInput struct {",
          "9132:  _ struct{} `locationName:\"CreateStreamingDistributionRequest\" type:\"structure\" payload:\"StreamingDistributionConfig\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9689: type CreateRealtimeLogConfigInput struct {",
          "9690:  _ struct{} `locationName:\"CreateRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "9696:  EndPoints []*EndPoint `type:\"list\" required:\"true\"`",
          "9705:  Fields []*string `locationNameList:\"Field\" type:\"list\" required:\"true\"`",
          "9710:  Name *string `type:\"string\" required:\"true\"`",
          "9717:  SamplingRate *int64 `type:\"long\" required:\"true\"`",
          "9718: }",
          "9721: func (s CreateRealtimeLogConfigInput) String() string {",
          "9722:  return awsutil.Prettify(s)",
          "9723: }",
          "9726: func (s CreateRealtimeLogConfigInput) GoString() string {",
          "9727:  return s.String()",
          "9728: }",
          "9731: func (s *CreateRealtimeLogConfigInput) Validate() error {",
          "9732:  invalidParams := request.ErrInvalidParams{Context: \"CreateRealtimeLogConfigInput\"}",
          "9733:  if s.EndPoints == nil {",
          "9734:   invalidParams.Add(request.NewErrParamRequired(\"EndPoints\"))",
          "9735:  }",
          "9736:  if s.Fields == nil {",
          "9737:   invalidParams.Add(request.NewErrParamRequired(\"Fields\"))",
          "9738:  }",
          "9739:  if s.Name == nil {",
          "9740:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "9741:  }",
          "9742:  if s.SamplingRate == nil {",
          "9743:   invalidParams.Add(request.NewErrParamRequired(\"SamplingRate\"))",
          "9744:  }",
          "9745:  if s.EndPoints != nil {",
          "9746:   for i, v := range s.EndPoints {",
          "9747:    if v == nil {",
          "9748:     continue",
          "9749:    }",
          "9750:    if err := v.Validate(); err != nil {",
          "9751:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EndPoints\", i), err.(request.ErrInvalidParams))",
          "9752:    }",
          "9753:   }",
          "9754:  }",
          "9756:  if invalidParams.Len() > 0 {",
          "9757:   return invalidParams",
          "9758:  }",
          "9759:  return nil",
          "9760: }",
          "9763: func (s *CreateRealtimeLogConfigInput) SetEndPoints(v []*EndPoint) *CreateRealtimeLogConfigInput {",
          "9764:  s.EndPoints = v",
          "9765:  return s",
          "9766: }",
          "9769: func (s *CreateRealtimeLogConfigInput) SetFields(v []*string) *CreateRealtimeLogConfigInput {",
          "9770:  s.Fields = v",
          "9771:  return s",
          "9772: }",
          "9775: func (s *CreateRealtimeLogConfigInput) SetName(v string) *CreateRealtimeLogConfigInput {",
          "9776:  s.Name = &v",
          "9777:  return s",
          "9778: }",
          "9781: func (s *CreateRealtimeLogConfigInput) SetSamplingRate(v int64) *CreateRealtimeLogConfigInput {",
          "9782:  s.SamplingRate = &v",
          "9783:  return s",
          "9784: }",
          "9786: type CreateRealtimeLogConfigOutput struct {",
          "9787:  _ struct{} `type:\"structure\"`",
          "9790:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "9791: }",
          "9794: func (s CreateRealtimeLogConfigOutput) String() string {",
          "9795:  return awsutil.Prettify(s)",
          "9796: }",
          "9799: func (s CreateRealtimeLogConfigOutput) GoString() string {",
          "9800:  return s.String()",
          "9801: }",
          "9804: func (s *CreateRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *CreateRealtimeLogConfigOutput {",
          "9805:  s.RealtimeLogConfig = v",
          "9806:  return s",
          "9807: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "9806:  OriginRequestPolicyId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10491:  RealtimeLogConfigArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9977:  return s",
          "9978: }",
          "9981: func (s *DefaultCacheBehavior) SetSmoothStreaming(v bool) *DefaultCacheBehavior {",
          "9982:  s.SmoothStreaming = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10666: func (s *DefaultCacheBehavior) SetRealtimeLogConfigArn(v string) *DefaultCacheBehavior {",
          "10667:  s.RealtimeLogConfigArn = &v",
          "10668:  return s",
          "10669: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10551:  return s.String()",
          "10552: }",
          "10555: type DeleteStreamingDistributionInput struct {",
          "10556:  _ struct{} `locationName:\"DeleteStreamingDistributionRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11245: type DeleteRealtimeLogConfigInput struct {",
          "11246:  _ struct{} `locationName:\"DeleteRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "11249:  ARN *string `type:\"string\"`",
          "11252:  Name *string `type:\"string\"`",
          "11253: }",
          "11256: func (s DeleteRealtimeLogConfigInput) String() string {",
          "11257:  return awsutil.Prettify(s)",
          "11258: }",
          "11261: func (s DeleteRealtimeLogConfigInput) GoString() string {",
          "11262:  return s.String()",
          "11263: }",
          "11266: func (s *DeleteRealtimeLogConfigInput) SetARN(v string) *DeleteRealtimeLogConfigInput {",
          "11267:  s.ARN = &v",
          "11268:  return s",
          "11269: }",
          "11272: func (s *DeleteRealtimeLogConfigInput) SetName(v string) *DeleteRealtimeLogConfigInput {",
          "11273:  s.Name = &v",
          "11274:  return s",
          "11275: }",
          "11277: type DeleteRealtimeLogConfigOutput struct {",
          "11278:  _ struct{} `type:\"structure\"`",
          "11279: }",
          "11282: func (s DeleteRealtimeLogConfigOutput) String() string {",
          "11283:  return awsutil.Prettify(s)",
          "11284: }",
          "11287: func (s DeleteRealtimeLogConfigOutput) GoString() string {",
          "11288:  return s.String()",
          "11289: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11730:  return s",
          "11731: }",
          "11735: type FieldLevelEncryption struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12472: type EndPoint struct {",
          "12473:  _ struct{} `type:\"structure\"`",
          "12477:  KinesisStreamConfig *KinesisStreamConfig `type:\"structure\"`",
          "12483:  StreamType *string `type:\"string\" required:\"true\"`",
          "12484: }",
          "12487: func (s EndPoint) String() string {",
          "12488:  return awsutil.Prettify(s)",
          "12489: }",
          "12492: func (s EndPoint) GoString() string {",
          "12493:  return s.String()",
          "12494: }",
          "12497: func (s *EndPoint) Validate() error {",
          "12498:  invalidParams := request.ErrInvalidParams{Context: \"EndPoint\"}",
          "12499:  if s.StreamType == nil {",
          "12500:   invalidParams.Add(request.NewErrParamRequired(\"StreamType\"))",
          "12501:  }",
          "12502:  if s.KinesisStreamConfig != nil {",
          "12503:   if err := s.KinesisStreamConfig.Validate(); err != nil {",
          "12504:    invalidParams.AddNested(\"KinesisStreamConfig\", err.(request.ErrInvalidParams))",
          "12505:   }",
          "12506:  }",
          "12508:  if invalidParams.Len() > 0 {",
          "12509:   return invalidParams",
          "12510:  }",
          "12511:  return nil",
          "12512: }",
          "12515: func (s *EndPoint) SetKinesisStreamConfig(v *KinesisStreamConfig) *EndPoint {",
          "12516:  s.KinesisStreamConfig = v",
          "12517:  return s",
          "12518: }",
          "12521: func (s *EndPoint) SetStreamType(v string) *EndPoint {",
          "12522:  s.StreamType = &v",
          "12523:  return s",
          "12524: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "13761:  return s",
          "13762: }",
          "13765: type GetStreamingDistributionConfigInput struct {",
          "13766:  _ struct{} `locationName:\"GetStreamingDistributionConfigRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14557: type GetRealtimeLogConfigInput struct {",
          "14558:  _ struct{} `locationName:\"GetRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "14561:  ARN *string `type:\"string\"`",
          "14564:  Name *string `type:\"string\"`",
          "14565: }",
          "14568: func (s GetRealtimeLogConfigInput) String() string {",
          "14569:  return awsutil.Prettify(s)",
          "14570: }",
          "14573: func (s GetRealtimeLogConfigInput) GoString() string {",
          "14574:  return s.String()",
          "14575: }",
          "14578: func (s *GetRealtimeLogConfigInput) SetARN(v string) *GetRealtimeLogConfigInput {",
          "14579:  s.ARN = &v",
          "14580:  return s",
          "14581: }",
          "14584: func (s *GetRealtimeLogConfigInput) SetName(v string) *GetRealtimeLogConfigInput {",
          "14585:  s.Name = &v",
          "14586:  return s",
          "14587: }",
          "14589: type GetRealtimeLogConfigOutput struct {",
          "14590:  _ struct{} `type:\"structure\"`",
          "14593:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "14594: }",
          "14597: func (s GetRealtimeLogConfigOutput) String() string {",
          "14598:  return awsutil.Prettify(s)",
          "14599: }",
          "14602: func (s GetRealtimeLogConfigOutput) GoString() string {",
          "14603:  return s.String()",
          "14604: }",
          "14607: func (s *GetRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *GetRealtimeLogConfigOutput {",
          "14608:  s.RealtimeLogConfig = v",
          "14609:  return s",
          "14610: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "14272:  return s",
          "14273: }",
          "14276: type LambdaFunctionAssociation struct {",
          "14277:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15125: type KinesisStreamConfig struct {",
          "15126:  _ struct{} `type:\"structure\"`",
          "15137:  RoleARN *string `type:\"string\" required:\"true\"`",
          "15143:  StreamARN *string `type:\"string\" required:\"true\"`",
          "15144: }",
          "15147: func (s KinesisStreamConfig) String() string {",
          "15148:  return awsutil.Prettify(s)",
          "15149: }",
          "15152: func (s KinesisStreamConfig) GoString() string {",
          "15153:  return s.String()",
          "15154: }",
          "15157: func (s *KinesisStreamConfig) Validate() error {",
          "15158:  invalidParams := request.ErrInvalidParams{Context: \"KinesisStreamConfig\"}",
          "15159:  if s.RoleARN == nil {",
          "15160:   invalidParams.Add(request.NewErrParamRequired(\"RoleARN\"))",
          "15161:  }",
          "15162:  if s.StreamARN == nil {",
          "15163:   invalidParams.Add(request.NewErrParamRequired(\"StreamARN\"))",
          "15164:  }",
          "15166:  if invalidParams.Len() > 0 {",
          "15167:   return invalidParams",
          "15168:  }",
          "15169:  return nil",
          "15170: }",
          "15173: func (s *KinesisStreamConfig) SetRoleARN(v string) *KinesisStreamConfig {",
          "15174:  s.RoleARN = &v",
          "15175:  return s",
          "15176: }",
          "15179: func (s *KinesisStreamConfig) SetStreamARN(v string) *KinesisStreamConfig {",
          "15180:  s.StreamARN = &v",
          "15181:  return s",
          "15182: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "14730:  return s",
          "14731: }",
          "14735: type ListDistributionsByWebACLIdInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15642: type ListDistributionsByRealtimeLogConfigInput struct {",
          "15643:  _ struct{} `locationName:\"ListDistributionsByRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "15649:  Marker *string `type:\"string\"`",
          "15652:  MaxItems *int64 `type:\"integer\"`",
          "15656:  RealtimeLogConfigArn *string `type:\"string\"`",
          "15660:  RealtimeLogConfigName *string `type:\"string\"`",
          "15661: }",
          "15664: func (s ListDistributionsByRealtimeLogConfigInput) String() string {",
          "15665:  return awsutil.Prettify(s)",
          "15666: }",
          "15669: func (s ListDistributionsByRealtimeLogConfigInput) GoString() string {",
          "15670:  return s.String()",
          "15671: }",
          "15674: func (s *ListDistributionsByRealtimeLogConfigInput) SetMarker(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15675:  s.Marker = &v",
          "15676:  return s",
          "15677: }",
          "15680: func (s *ListDistributionsByRealtimeLogConfigInput) SetMaxItems(v int64) *ListDistributionsByRealtimeLogConfigInput {",
          "15681:  s.MaxItems = &v",
          "15682:  return s",
          "15683: }",
          "15686: func (s *ListDistributionsByRealtimeLogConfigInput) SetRealtimeLogConfigArn(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15687:  s.RealtimeLogConfigArn = &v",
          "15688:  return s",
          "15689: }",
          "15692: func (s *ListDistributionsByRealtimeLogConfigInput) SetRealtimeLogConfigName(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15693:  s.RealtimeLogConfigName = &v",
          "15694:  return s",
          "15695: }",
          "15697: type ListDistributionsByRealtimeLogConfigOutput struct {",
          "15698:  _ struct{} `type:\"structure\" payload:\"DistributionList\"`",
          "15701:  DistributionList *DistributionList `type:\"structure\"`",
          "15702: }",
          "15705: func (s ListDistributionsByRealtimeLogConfigOutput) String() string {",
          "15706:  return awsutil.Prettify(s)",
          "15707: }",
          "15710: func (s ListDistributionsByRealtimeLogConfigOutput) GoString() string {",
          "15711:  return s.String()",
          "15712: }",
          "15715: func (s *ListDistributionsByRealtimeLogConfigOutput) SetDistributionList(v *DistributionList) *ListDistributionsByRealtimeLogConfigOutput {",
          "15716:  s.DistributionList = v",
          "15717:  return s",
          "15718: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "15230:  return s",
          "15231: }",
          "15234: type ListStreamingDistributionsInput struct {",
          "15235:  _ struct{} `locationName:\"ListStreamingDistributionsRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16220: type ListRealtimeLogConfigsInput struct {",
          "16221:  _ struct{} `locationName:\"ListRealtimeLogConfigsRequest\" type:\"structure\"`",
          "16228:  Marker *string `location:\"querystring\" locationName:\"Marker\" type:\"string\"`",
          "16231:  MaxItems *int64 `location:\"querystring\" locationName:\"MaxItems\" type:\"integer\"`",
          "16232: }",
          "16235: func (s ListRealtimeLogConfigsInput) String() string {",
          "16236:  return awsutil.Prettify(s)",
          "16237: }",
          "16240: func (s ListRealtimeLogConfigsInput) GoString() string {",
          "16241:  return s.String()",
          "16242: }",
          "16245: func (s *ListRealtimeLogConfigsInput) SetMarker(v string) *ListRealtimeLogConfigsInput {",
          "16246:  s.Marker = &v",
          "16247:  return s",
          "16248: }",
          "16251: func (s *ListRealtimeLogConfigsInput) SetMaxItems(v int64) *ListRealtimeLogConfigsInput {",
          "16252:  s.MaxItems = &v",
          "16253:  return s",
          "16254: }",
          "16256: type ListRealtimeLogConfigsOutput struct {",
          "16257:  _ struct{} `type:\"structure\" payload:\"RealtimeLogConfigs\"`",
          "16260:  RealtimeLogConfigs *RealtimeLogConfigs `type:\"structure\"`",
          "16261: }",
          "16264: func (s ListRealtimeLogConfigsOutput) String() string {",
          "16265:  return awsutil.Prettify(s)",
          "16266: }",
          "16269: func (s ListRealtimeLogConfigsOutput) GoString() string {",
          "16270:  return s.String()",
          "16271: }",
          "16274: func (s *ListRealtimeLogConfigsOutput) SetRealtimeLogConfigs(v *RealtimeLogConfigs) *ListRealtimeLogConfigsOutput {",
          "16275:  s.RealtimeLogConfigs = v",
          "16276:  return s",
          "16277: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "17608:  return s",
          "17609: }",
          "17612: type RealtimeMetricsSubscriptionConfig struct {",
          "17613:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18658: type RealtimeLogConfig struct {",
          "18659:  _ struct{} `type:\"structure\"`",
          "18664:  ARN *string `type:\"string\" required:\"true\"`",
          "18670:  EndPoints []*EndPoint `type:\"list\" required:\"true\"`",
          "18681:  Fields []*string `locationNameList:\"Field\" type:\"list\" required:\"true\"`",
          "18686:  Name *string `type:\"string\" required:\"true\"`",
          "18693:  SamplingRate *int64 `type:\"long\" required:\"true\"`",
          "18694: }",
          "18697: func (s RealtimeLogConfig) String() string {",
          "18698:  return awsutil.Prettify(s)",
          "18699: }",
          "18702: func (s RealtimeLogConfig) GoString() string {",
          "18703:  return s.String()",
          "18704: }",
          "18707: func (s *RealtimeLogConfig) SetARN(v string) *RealtimeLogConfig {",
          "18708:  s.ARN = &v",
          "18709:  return s",
          "18710: }",
          "18713: func (s *RealtimeLogConfig) SetEndPoints(v []*EndPoint) *RealtimeLogConfig {",
          "18714:  s.EndPoints = v",
          "18715:  return s",
          "18716: }",
          "18719: func (s *RealtimeLogConfig) SetFields(v []*string) *RealtimeLogConfig {",
          "18720:  s.Fields = v",
          "18721:  return s",
          "18722: }",
          "18725: func (s *RealtimeLogConfig) SetName(v string) *RealtimeLogConfig {",
          "18726:  s.Name = &v",
          "18727:  return s",
          "18728: }",
          "18731: func (s *RealtimeLogConfig) SetSamplingRate(v int64) *RealtimeLogConfig {",
          "18732:  s.SamplingRate = &v",
          "18733:  return s",
          "18734: }",
          "18737: type RealtimeLogConfigs struct {",
          "18738:  _ struct{} `type:\"structure\"`",
          "18744:  IsTruncated *bool `type:\"boolean\" required:\"true\"`",
          "18747:  Items []*RealtimeLogConfig `type:\"list\"`",
          "18754:  Marker *string `type:\"string\" required:\"true\"`",
          "18759:  MaxItems *int64 `type:\"integer\" required:\"true\"`",
          "18765:  NextMarker *string `type:\"string\"`",
          "18766: }",
          "18769: func (s RealtimeLogConfigs) String() string {",
          "18770:  return awsutil.Prettify(s)",
          "18771: }",
          "18774: func (s RealtimeLogConfigs) GoString() string {",
          "18775:  return s.String()",
          "18776: }",
          "18779: func (s *RealtimeLogConfigs) SetIsTruncated(v bool) *RealtimeLogConfigs {",
          "18780:  s.IsTruncated = &v",
          "18781:  return s",
          "18782: }",
          "18785: func (s *RealtimeLogConfigs) SetItems(v []*RealtimeLogConfig) *RealtimeLogConfigs {",
          "18786:  s.Items = v",
          "18787:  return s",
          "18788: }",
          "18791: func (s *RealtimeLogConfigs) SetMarker(v string) *RealtimeLogConfigs {",
          "18792:  s.Marker = &v",
          "18793:  return s",
          "18794: }",
          "18797: func (s *RealtimeLogConfigs) SetMaxItems(v int64) *RealtimeLogConfigs {",
          "18798:  s.MaxItems = &v",
          "18799:  return s",
          "18800: }",
          "18803: func (s *RealtimeLogConfigs) SetNextMarker(v string) *RealtimeLogConfigs {",
          "18804:  s.NextMarker = &v",
          "18805:  return s",
          "18806: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "19639:  return s",
          "19640: }",
          "19643: type UpdateStreamingDistributionInput struct {",
          "19644:  _ struct{} `locationName:\"UpdateStreamingDistributionRequest\" type:\"structure\" payload:\"StreamingDistributionConfig\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20839: type UpdateRealtimeLogConfigInput struct {",
          "20840:  _ struct{} `locationName:\"UpdateRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "20843:  ARN *string `type:\"string\"`",
          "20847:  EndPoints []*EndPoint `type:\"list\"`",
          "20854:  Fields []*string `locationNameList:\"Field\" type:\"list\"`",
          "20857:  Name *string `type:\"string\"`",
          "20862:  SamplingRate *int64 `type:\"long\"`",
          "20863: }",
          "20866: func (s UpdateRealtimeLogConfigInput) String() string {",
          "20867:  return awsutil.Prettify(s)",
          "20868: }",
          "20871: func (s UpdateRealtimeLogConfigInput) GoString() string {",
          "20872:  return s.String()",
          "20873: }",
          "20876: func (s *UpdateRealtimeLogConfigInput) Validate() error {",
          "20877:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRealtimeLogConfigInput\"}",
          "20878:  if s.EndPoints != nil {",
          "20879:   for i, v := range s.EndPoints {",
          "20880:    if v == nil {",
          "20881:     continue",
          "20882:    }",
          "20883:    if err := v.Validate(); err != nil {",
          "20884:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EndPoints\", i), err.(request.ErrInvalidParams))",
          "20885:    }",
          "20886:   }",
          "20887:  }",
          "20889:  if invalidParams.Len() > 0 {",
          "20890:   return invalidParams",
          "20891:  }",
          "20892:  return nil",
          "20893: }",
          "20896: func (s *UpdateRealtimeLogConfigInput) SetARN(v string) *UpdateRealtimeLogConfigInput {",
          "20897:  s.ARN = &v",
          "20898:  return s",
          "20899: }",
          "20902: func (s *UpdateRealtimeLogConfigInput) SetEndPoints(v []*EndPoint) *UpdateRealtimeLogConfigInput {",
          "20903:  s.EndPoints = v",
          "20904:  return s",
          "20905: }",
          "20908: func (s *UpdateRealtimeLogConfigInput) SetFields(v []*string) *UpdateRealtimeLogConfigInput {",
          "20909:  s.Fields = v",
          "20910:  return s",
          "20911: }",
          "20914: func (s *UpdateRealtimeLogConfigInput) SetName(v string) *UpdateRealtimeLogConfigInput {",
          "20915:  s.Name = &v",
          "20916:  return s",
          "20917: }",
          "20920: func (s *UpdateRealtimeLogConfigInput) SetSamplingRate(v int64) *UpdateRealtimeLogConfigInput {",
          "20921:  s.SamplingRate = &v",
          "20922:  return s",
          "20923: }",
          "20925: type UpdateRealtimeLogConfigOutput struct {",
          "20926:  _ struct{} `type:\"structure\"`",
          "20929:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "20930: }",
          "20933: func (s UpdateRealtimeLogConfigOutput) String() string {",
          "20934:  return awsutil.Prettify(s)",
          "20935: }",
          "20938: func (s UpdateRealtimeLogConfigOutput) GoString() string {",
          "20939:  return s.String()",
          "20940: }",
          "20943: func (s *UpdateRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *UpdateRealtimeLogConfigOutput {",
          "20944:  s.RealtimeLogConfig = v",
          "20945:  return s",
          "20946: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "20356:  SSLSupportMethodVip = \"vip\"",
          "20357: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21670:  SSLSupportMethodStaticIp = \"static-ip\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "20361:  return []string{",
          "20362:   SSLSupportMethodSniOnly,",
          "20363:   SSLSupportMethodVip,",
          "20364:  }",
          "20365: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21678:   SSLSupportMethodStaticIp,",
          "",
          "---------------"
        ],
        "service/cloudfront/cloudfrontiface/interface.go||service/cloudfront/cloudfrontiface/interface.go": [
          "File: service/cloudfront/cloudfrontiface/interface.go -> service/cloudfront/cloudfrontiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:  CreatePublicKeyWithContext(aws.Context, *cloudfront.CreatePublicKeyInput, ...request.Option) (*cloudfront.CreatePublicKeyOutput, error)",
          "101:  CreatePublicKeyRequest(*cloudfront.CreatePublicKeyInput) (*request.Request, *cloudfront.CreatePublicKeyOutput)",
          "103:  CreateStreamingDistribution(*cloudfront.CreateStreamingDistributionInput) (*cloudfront.CreateStreamingDistributionOutput, error)",
          "104:  CreateStreamingDistributionWithContext(aws.Context, *cloudfront.CreateStreamingDistributionInput, ...request.Option) (*cloudfront.CreateStreamingDistributionOutput, error)",
          "105:  CreateStreamingDistributionRequest(*cloudfront.CreateStreamingDistributionInput) (*request.Request, *cloudfront.CreateStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  CreateRealtimeLogConfig(*cloudfront.CreateRealtimeLogConfigInput) (*cloudfront.CreateRealtimeLogConfigOutput, error)",
          "104:  CreateRealtimeLogConfigWithContext(aws.Context, *cloudfront.CreateRealtimeLogConfigInput, ...request.Option) (*cloudfront.CreateRealtimeLogConfigOutput, error)",
          "105:  CreateRealtimeLogConfigRequest(*cloudfront.CreateRealtimeLogConfigInput) (*request.Request, *cloudfront.CreateRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:  DeletePublicKeyWithContext(aws.Context, *cloudfront.DeletePublicKeyInput, ...request.Option) (*cloudfront.DeletePublicKeyOutput, error)",
          "141:  DeletePublicKeyRequest(*cloudfront.DeletePublicKeyInput) (*request.Request, *cloudfront.DeletePublicKeyOutput)",
          "143:  DeleteStreamingDistribution(*cloudfront.DeleteStreamingDistributionInput) (*cloudfront.DeleteStreamingDistributionOutput, error)",
          "144:  DeleteStreamingDistributionWithContext(aws.Context, *cloudfront.DeleteStreamingDistributionInput, ...request.Option) (*cloudfront.DeleteStreamingDistributionOutput, error)",
          "145:  DeleteStreamingDistributionRequest(*cloudfront.DeleteStreamingDistributionInput) (*request.Request, *cloudfront.DeleteStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  DeleteRealtimeLogConfig(*cloudfront.DeleteRealtimeLogConfigInput) (*cloudfront.DeleteRealtimeLogConfigOutput, error)",
          "148:  DeleteRealtimeLogConfigWithContext(aws.Context, *cloudfront.DeleteRealtimeLogConfigInput, ...request.Option) (*cloudfront.DeleteRealtimeLogConfigOutput, error)",
          "149:  DeleteRealtimeLogConfigRequest(*cloudfront.DeleteRealtimeLogConfigInput) (*request.Request, *cloudfront.DeleteRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:  GetPublicKeyConfigWithContext(aws.Context, *cloudfront.GetPublicKeyConfigInput, ...request.Option) (*cloudfront.GetPublicKeyConfigOutput, error)",
          "209:  GetPublicKeyConfigRequest(*cloudfront.GetPublicKeyConfigInput) (*request.Request, *cloudfront.GetPublicKeyConfigOutput)",
          "211:  GetStreamingDistribution(*cloudfront.GetStreamingDistributionInput) (*cloudfront.GetStreamingDistributionOutput, error)",
          "212:  GetStreamingDistributionWithContext(aws.Context, *cloudfront.GetStreamingDistributionInput, ...request.Option) (*cloudfront.GetStreamingDistributionOutput, error)",
          "213:  GetStreamingDistributionRequest(*cloudfront.GetStreamingDistributionInput) (*request.Request, *cloudfront.GetStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219:  GetRealtimeLogConfig(*cloudfront.GetRealtimeLogConfigInput) (*cloudfront.GetRealtimeLogConfigOutput, error)",
          "220:  GetRealtimeLogConfigWithContext(aws.Context, *cloudfront.GetRealtimeLogConfigInput, ...request.Option) (*cloudfront.GetRealtimeLogConfigOutput, error)",
          "221:  GetRealtimeLogConfigRequest(*cloudfront.GetRealtimeLogConfigInput) (*request.Request, *cloudfront.GetRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:  ListDistributionsByOriginRequestPolicyIdWithContext(aws.Context, *cloudfront.ListDistributionsByOriginRequestPolicyIdInput, ...request.Option) (*cloudfront.ListDistributionsByOriginRequestPolicyIdOutput, error)",
          "243:  ListDistributionsByOriginRequestPolicyIdRequest(*cloudfront.ListDistributionsByOriginRequestPolicyIdInput) (*request.Request, *cloudfront.ListDistributionsByOriginRequestPolicyIdOutput)",
          "245:  ListDistributionsByWebACLId(*cloudfront.ListDistributionsByWebACLIdInput) (*cloudfront.ListDistributionsByWebACLIdOutput, error)",
          "246:  ListDistributionsByWebACLIdWithContext(aws.Context, *cloudfront.ListDistributionsByWebACLIdInput, ...request.Option) (*cloudfront.ListDistributionsByWebACLIdOutput, error)",
          "247:  ListDistributionsByWebACLIdRequest(*cloudfront.ListDistributionsByWebACLIdInput) (*request.Request, *cloudfront.ListDistributionsByWebACLIdOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:  ListDistributionsByRealtimeLogConfig(*cloudfront.ListDistributionsByRealtimeLogConfigInput) (*cloudfront.ListDistributionsByRealtimeLogConfigOutput, error)",
          "258:  ListDistributionsByRealtimeLogConfigWithContext(aws.Context, *cloudfront.ListDistributionsByRealtimeLogConfigInput, ...request.Option) (*cloudfront.ListDistributionsByRealtimeLogConfigOutput, error)",
          "259:  ListDistributionsByRealtimeLogConfigRequest(*cloudfront.ListDistributionsByRealtimeLogConfigInput) (*request.Request, *cloudfront.ListDistributionsByRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "269:  ListPublicKeysWithContext(aws.Context, *cloudfront.ListPublicKeysInput, ...request.Option) (*cloudfront.ListPublicKeysOutput, error)",
          "270:  ListPublicKeysRequest(*cloudfront.ListPublicKeysInput) (*request.Request, *cloudfront.ListPublicKeysOutput)",
          "272:  ListStreamingDistributions(*cloudfront.ListStreamingDistributionsInput) (*cloudfront.ListStreamingDistributionsOutput, error)",
          "273:  ListStreamingDistributionsWithContext(aws.Context, *cloudfront.ListStreamingDistributionsInput, ...request.Option) (*cloudfront.ListStreamingDistributionsOutput, error)",
          "274:  ListStreamingDistributionsRequest(*cloudfront.ListStreamingDistributionsInput) (*request.Request, *cloudfront.ListStreamingDistributionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:  ListRealtimeLogConfigs(*cloudfront.ListRealtimeLogConfigsInput) (*cloudfront.ListRealtimeLogConfigsOutput, error)",
          "289:  ListRealtimeLogConfigsWithContext(aws.Context, *cloudfront.ListRealtimeLogConfigsInput, ...request.Option) (*cloudfront.ListRealtimeLogConfigsOutput, error)",
          "290:  ListRealtimeLogConfigsRequest(*cloudfront.ListRealtimeLogConfigsInput) (*request.Request, *cloudfront.ListRealtimeLogConfigsOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "316:  UpdatePublicKeyWithContext(aws.Context, *cloudfront.UpdatePublicKeyInput, ...request.Option) (*cloudfront.UpdatePublicKeyOutput, error)",
          "317:  UpdatePublicKeyRequest(*cloudfront.UpdatePublicKeyInput) (*request.Request, *cloudfront.UpdatePublicKeyOutput)",
          "319:  UpdateStreamingDistribution(*cloudfront.UpdateStreamingDistributionInput) (*cloudfront.UpdateStreamingDistributionOutput, error)",
          "320:  UpdateStreamingDistributionWithContext(aws.Context, *cloudfront.UpdateStreamingDistributionInput, ...request.Option) (*cloudfront.UpdateStreamingDistributionOutput, error)",
          "321:  UpdateStreamingDistributionRequest(*cloudfront.UpdateStreamingDistributionInput) (*request.Request, *cloudfront.UpdateStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339:  UpdateRealtimeLogConfig(*cloudfront.UpdateRealtimeLogConfigInput) (*cloudfront.UpdateRealtimeLogConfigOutput, error)",
          "340:  UpdateRealtimeLogConfigWithContext(aws.Context, *cloudfront.UpdateRealtimeLogConfigInput, ...request.Option) (*cloudfront.UpdateRealtimeLogConfigOutput, error)",
          "341:  UpdateRealtimeLogConfigRequest(*cloudfront.UpdateRealtimeLogConfigInput) (*request.Request, *cloudfront.UpdateRealtimeLogConfigOutput)",
          "",
          "---------------"
        ],
        "service/cloudfront/errors.go||service/cloudfront/errors.go": [
          "File: service/cloudfront/errors.go -> service/cloudfront/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:  ErrCodeNoSuchPublicKey = \"NoSuchPublicKey\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:  ErrCodeNoSuchRealtimeLogConfig = \"NoSuchRealtimeLogConfig\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "388:  ErrCodeQueryArgProfileEmpty = \"QueryArgProfileEmpty\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:  ErrCodeRealtimeLogConfigAlreadyExists = \"RealtimeLogConfigAlreadyExists\"",
          "408:  ErrCodeRealtimeLogConfigInUse = \"RealtimeLogConfigInUse\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:  ErrCodeTooManyQueryStringsInOriginRequestPolicy = \"TooManyQueryStringsInOriginRequestPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:  ErrCodeTooManyRealtimeLogConfigs = \"TooManyRealtimeLogConfigs\"",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "89527:  FleetId *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89530:  LaunchTemplateConfigs []*FleetLaunchTemplateConfigRequest `locationName:\"LaunchTemplateConfig\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89551:  if s.TargetCapacitySpecification == nil {",
          "89552:   invalidParams.Add(request.NewErrParamRequired(\"TargetCapacitySpecification\"))",
          "89553:  }",
          "89554:  if s.TargetCapacitySpecification != nil {",
          "89555:   if err := s.TargetCapacitySpecification.Validate(); err != nil {",
          "89556:    invalidParams.AddNested(\"TargetCapacitySpecification\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89557:  if s.LaunchTemplateConfigs != nil {",
          "89558:   for i, v := range s.LaunchTemplateConfigs {",
          "89559:    if v == nil {",
          "89560:     continue",
          "89561:    }",
          "89562:    if err := v.Validate(); err != nil {",
          "89563:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"LaunchTemplateConfigs\", i), err.(request.ErrInvalidParams))",
          "89564:    }",
          "89565:   }",
          "89566:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89581:  return s",
          "89582: }",
          "89585: func (s *ModifyFleetInput) SetTargetCapacitySpecification(v *TargetCapacitySpecificationRequest) *ModifyFleetInput {",
          "89586:  s.TargetCapacitySpecification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89598: func (s *ModifyFleetInput) SetLaunchTemplateConfigs(v []*FleetLaunchTemplateConfigRequest) *ModifyFleetInput {",
          "89599:  s.LaunchTemplateConfigs = v",
          "89600:  return s",
          "89601: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91497:  ExcessCapacityTerminationPolicy *string `locationName:\"excessCapacityTerminationPolicy\" type:\"string\" enum:\"ExcessCapacityTerminationPolicy\"`",
          "91500:  OnDemandTargetCapacity *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91522:  LaunchTemplateConfigs []*LaunchTemplateConfig `locationName:\"LaunchTemplateConfig\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "91524:  if s.SpotFleetRequestId == nil {",
          "91525:   invalidParams.Add(request.NewErrParamRequired(\"SpotFleetRequestId\"))",
          "91526:  }",
          "91528:  if invalidParams.Len() > 0 {",
          "91529:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91552:  if s.LaunchTemplateConfigs != nil {",
          "91553:   for i, v := range s.LaunchTemplateConfigs {",
          "91554:    if v == nil {",
          "91555:     continue",
          "91556:    }",
          "91557:    if err := v.Validate(); err != nil {",
          "91558:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"LaunchTemplateConfigs\", i), err.(request.ErrInvalidParams))",
          "91559:    }",
          "91560:   }",
          "91561:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "91537:  return s",
          "91538: }",
          "91541: func (s *ModifySpotFleetRequestInput) SetOnDemandTargetCapacity(v int64) *ModifySpotFleetRequestInput {",
          "91542:  s.OnDemandTargetCapacity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91576: func (s *ModifySpotFleetRequestInput) SetLaunchTemplateConfigs(v []*LaunchTemplateConfig) *ModifySpotFleetRequestInput {",
          "91577:  s.LaunchTemplateConfigs = v",
          "91578:  return s",
          "91579: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "118890:  ResourceTypeDhcpOptions = \"dhcp-options\"",
          "118893:  ResourceTypeElasticIp = \"elastic-ip\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118934:  ResourceTypeEgressOnlyInternetGateway = \"egress-only-internet-gateway\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "119014:   ResourceTypeCustomerGateway,",
          "119015:   ResourceTypeDedicatedHost,",
          "119016:   ResourceTypeDhcpOptions,",
          "119017:   ResourceTypeElasticIp,",
          "119018:   ResourceTypeElasticGpu,",
          "119019:   ResourceTypeExportImageTask,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119061:   ResourceTypeEgressOnlyInternetGateway,",
          "",
          "---------------"
        ],
        "service/sqs/api.go||service/sqs/api.go": [
          "File: service/sqs/api.go -> service/sqs/api.go"
        ],
        "service/sqs/doc.go||service/sqs/doc.go": [
          "File: service/sqs/doc.go -> service/sqs/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "b13361ce154ff05471ad4ef50c795c84d5caf447",
      "candidate_info": {
        "commit_hash": "b13361ce154ff05471ad4ef50c795c84d5caf447",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/b13361ce154ff05471ad4ef50c795c84d5caf447",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/ivs/2020-07-14/examples-1.json",
          "models/apis/ivs/2020-07-14/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/errors.go",
          "service/ivs/ivsiface/interface.go",
          "service/ivs/service.go"
        ],
        "message": "Release v1.33.6 (2020-07-15) ===\n\n### Service Client Updates\n* `service/ivs`: Adds new service\n\n### SDK Enhancements\n* `service/s3/s3crypto`: Allow envelope unmarshal to accept JSON numbers for tag length [(#3422)](https://github.com/aws/aws-sdk-go/pull/3422)",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/errors.go||service/ivs/errors.go",
          "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go",
          "service/ivs/service.go||service/ivs/service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "662:    Endpoints: endpoints{",
          "663:     \"ap-northeast-1\": endpoint{},",
          "664:     \"ap-northeast-2\": endpoint{},",
          "665:     \"ap-southeast-1\": endpoint{},",
          "666:     \"ap-southeast-2\": endpoint{},",
          "667:     \"eu-central-1\":   endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "665:     \"ap-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2587:     Protocols: []string{\"https\"},",
          "2588:    },",
          "2589:    Endpoints: endpoints{",
          "2590:     \"ap-northeast-1\": endpoint{},",
          "2591:     \"ap-northeast-2\": endpoint{},",
          "2592:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2591:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2688:       Region: \"us-west-2\",",
          "2689:      },",
          "2690:     },",
          "2696:    },",
          "2697:   },",
          "2698:   \"forecast\": service{",
          "",
          "[Removed Lines]",
          "2691:     \"sa-east-1\": endpoint{},",
          "2692:     \"us-east-1\": endpoint{},",
          "2693:     \"us-east-2\": endpoint{},",
          "2694:     \"us-west-1\": endpoint{},",
          "2695:     \"us-west-2\": endpoint{},",
          "",
          "[Added Lines]",
          "2693:     \"me-south-1\": endpoint{},",
          "2694:     \"sa-east-1\":  endpoint{},",
          "2695:     \"us-east-1\":  endpoint{},",
          "2696:     \"us-east-2\":  endpoint{},",
          "2697:     \"us-west-1\":  endpoint{},",
          "2698:     \"us-west-2\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3787:     \"eu-west-1\":      endpoint{},",
          "3788:     \"eu-west-2\":      endpoint{},",
          "3789:     \"us-east-1\":      endpoint{},",
          "3803:    },",
          "3804:   },",
          "3805:   \"monitoring\": service{",
          "",
          "[Removed Lines]",
          "3790:     \"us-east-1-fips\": endpoint{",
          "3791:      Hostname: \"models-fips.lex.us-east-1.amazonaws.com\",",
          "3792:      CredentialScope: credentialScope{",
          "3793:       Region: \"us-east-1\",",
          "3794:      },",
          "3795:     },",
          "3796:     \"us-west-2\": endpoint{},",
          "3797:     \"us-west-2-fips\": endpoint{",
          "3798:      Hostname: \"models-fips.lex.us-west-2.amazonaws.com\",",
          "3799:      CredentialScope: credentialScope{",
          "3800:       Region: \"us-west-2\",",
          "3801:      },",
          "3802:     },",
          "",
          "[Added Lines]",
          "3793:     \"us-west-2\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3997:       Region: \"us-east-2\",",
          "3998:      },",
          "3999:     },",
          "4000:     \"us-west-2\": endpoint{",
          "4001:      Hostname: \"rds.us-west-2.amazonaws.com\",",
          "4002:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3991:     \"us-west-1\": endpoint{",
          "3992:      Hostname: \"rds.us-west-1.amazonaws.com\",",
          "3993:      CredentialScope: credentialScope{",
          "3994:       Region: \"us-west-1\",",
          "3995:      },",
          "3996:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4603:     Protocols: []string{\"https\"},",
          "4604:    },",
          "4605:    Endpoints: endpoints{",
          "4606:     \"ap-east-1\":      endpoint{},",
          "4607:     \"ap-northeast-1\": endpoint{},",
          "4608:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4603:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4612:     \"ca-central-1\":   endpoint{},",
          "4613:     \"eu-central-1\":   endpoint{},",
          "4614:     \"eu-north-1\":     endpoint{},",
          "4615:     \"eu-west-1\":      endpoint{},",
          "4616:     \"eu-west-2\":      endpoint{},",
          "4617:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4613:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6418:     },",
          "6419:    },",
          "6420:   },",
          "6421:   \"cloudformation\": service{",
          "6423:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6420:   \"ce\": service{",
          "6421:    PartitionEndpoint: \"aws-cn-global\",",
          "6422:    IsRegionalized:    boxedFalse,",
          "6424:    Endpoints: endpoints{",
          "6425:     \"aws-cn-global\": endpoint{",
          "6426:      Hostname: \"ce.cn-northwest-1.amazonaws.com.cn\",",
          "6427:      CredentialScope: credentialScope{",
          "6428:       Region: \"cn-northwest-1\",",
          "6429:      },",
          "6430:     },",
          "6431:    },",
          "6432:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.5\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.6\"",
          "",
          "---------------"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package ivs",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "14: )",
          "16: const opBatchGetChannel = \"BatchGetChannel\"",
          "42: func (c *IVS) BatchGetChannelRequest(input *BatchGetChannelInput) (req *request.Request, output *BatchGetChannelOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opBatchGetChannel,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/BatchGetChannel\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &BatchGetChannelInput{}",
          "51:  }",
          "53:  output = &BatchGetChannelOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "69: func (c *IVS) BatchGetChannel(input *BatchGetChannelInput) (*BatchGetChannelOutput, error) {",
          "70:  req, out := c.BatchGetChannelRequest(input)",
          "71:  return out, req.Send()",
          "72: }",
          "83: func (c *IVS) BatchGetChannelWithContext(ctx aws.Context, input *BatchGetChannelInput, opts ...request.Option) (*BatchGetChannelOutput, error) {",
          "84:  req, out := c.BatchGetChannelRequest(input)",
          "85:  req.SetContext(ctx)",
          "86:  req.ApplyOptions(opts...)",
          "87:  return out, req.Send()",
          "88: }",
          "90: const opBatchGetStreamKey = \"BatchGetStreamKey\"",
          "116: func (c *IVS) BatchGetStreamKeyRequest(input *BatchGetStreamKeyInput) (req *request.Request, output *BatchGetStreamKeyOutput) {",
          "117:  op := &request.Operation{",
          "118:   Name:       opBatchGetStreamKey,",
          "119:   HTTPMethod: \"POST\",",
          "120:   HTTPPath:   \"/BatchGetStreamKey\",",
          "121:  }",
          "123:  if input == nil {",
          "124:   input = &BatchGetStreamKeyInput{}",
          "125:  }",
          "127:  output = &BatchGetStreamKeyOutput{}",
          "128:  req = c.newRequest(op, input, output)",
          "129:  return",
          "130: }",
          "143: func (c *IVS) BatchGetStreamKey(input *BatchGetStreamKeyInput) (*BatchGetStreamKeyOutput, error) {",
          "144:  req, out := c.BatchGetStreamKeyRequest(input)",
          "145:  return out, req.Send()",
          "146: }",
          "157: func (c *IVS) BatchGetStreamKeyWithContext(ctx aws.Context, input *BatchGetStreamKeyInput, opts ...request.Option) (*BatchGetStreamKeyOutput, error) {",
          "158:  req, out := c.BatchGetStreamKeyRequest(input)",
          "159:  req.SetContext(ctx)",
          "160:  req.ApplyOptions(opts...)",
          "161:  return out, req.Send()",
          "162: }",
          "164: const opCreateChannel = \"CreateChannel\"",
          "190: func (c *IVS) CreateChannelRequest(input *CreateChannelInput) (req *request.Request, output *CreateChannelOutput) {",
          "191:  op := &request.Operation{",
          "192:   Name:       opCreateChannel,",
          "193:   HTTPMethod: \"POST\",",
          "194:   HTTPPath:   \"/CreateChannel\",",
          "195:  }",
          "197:  if input == nil {",
          "198:   input = &CreateChannelInput{}",
          "199:  }",
          "201:  output = &CreateChannelOutput{}",
          "202:  req = c.newRequest(op, input, output)",
          "203:  return",
          "204: }",
          "225: func (c *IVS) CreateChannel(input *CreateChannelInput) (*CreateChannelOutput, error) {",
          "226:  req, out := c.CreateChannelRequest(input)",
          "227:  return out, req.Send()",
          "228: }",
          "239: func (c *IVS) CreateChannelWithContext(ctx aws.Context, input *CreateChannelInput, opts ...request.Option) (*CreateChannelOutput, error) {",
          "240:  req, out := c.CreateChannelRequest(input)",
          "241:  req.SetContext(ctx)",
          "242:  req.ApplyOptions(opts...)",
          "243:  return out, req.Send()",
          "244: }",
          "246: const opCreateStreamKey = \"CreateStreamKey\"",
          "272: func (c *IVS) CreateStreamKeyRequest(input *CreateStreamKeyInput) (req *request.Request, output *CreateStreamKeyOutput) {",
          "273:  op := &request.Operation{",
          "274:   Name:       opCreateStreamKey,",
          "275:   HTTPMethod: \"POST\",",
          "276:   HTTPPath:   \"/CreateStreamKey\",",
          "277:  }",
          "279:  if input == nil {",
          "280:   input = &CreateStreamKeyInput{}",
          "281:  }",
          "283:  output = &CreateStreamKeyOutput{}",
          "284:  req = c.newRequest(op, input, output)",
          "285:  return",
          "286: }",
          "315: func (c *IVS) CreateStreamKey(input *CreateStreamKeyInput) (*CreateStreamKeyOutput, error) {",
          "316:  req, out := c.CreateStreamKeyRequest(input)",
          "317:  return out, req.Send()",
          "318: }",
          "329: func (c *IVS) CreateStreamKeyWithContext(ctx aws.Context, input *CreateStreamKeyInput, opts ...request.Option) (*CreateStreamKeyOutput, error) {",
          "330:  req, out := c.CreateStreamKeyRequest(input)",
          "331:  req.SetContext(ctx)",
          "332:  req.ApplyOptions(opts...)",
          "333:  return out, req.Send()",
          "334: }",
          "336: const opDeleteChannel = \"DeleteChannel\"",
          "362: func (c *IVS) DeleteChannelRequest(input *DeleteChannelInput) (req *request.Request, output *DeleteChannelOutput) {",
          "363:  op := &request.Operation{",
          "364:   Name:       opDeleteChannel,",
          "365:   HTTPMethod: \"POST\",",
          "366:   HTTPPath:   \"/DeleteChannel\",",
          "367:  }",
          "369:  if input == nil {",
          "370:   input = &DeleteChannelInput{}",
          "371:  }",
          "373:  output = &DeleteChannelOutput{}",
          "374:  req = c.newRequest(op, input, output)",
          "375:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "376:  return",
          "377: }",
          "400: func (c *IVS) DeleteChannel(input *DeleteChannelInput) (*DeleteChannelOutput, error) {",
          "401:  req, out := c.DeleteChannelRequest(input)",
          "402:  return out, req.Send()",
          "403: }",
          "414: func (c *IVS) DeleteChannelWithContext(ctx aws.Context, input *DeleteChannelInput, opts ...request.Option) (*DeleteChannelOutput, error) {",
          "415:  req, out := c.DeleteChannelRequest(input)",
          "416:  req.SetContext(ctx)",
          "417:  req.ApplyOptions(opts...)",
          "418:  return out, req.Send()",
          "419: }",
          "421: const opDeleteStreamKey = \"DeleteStreamKey\"",
          "447: func (c *IVS) DeleteStreamKeyRequest(input *DeleteStreamKeyInput) (req *request.Request, output *DeleteStreamKeyOutput) {",
          "448:  op := &request.Operation{",
          "449:   Name:       opDeleteStreamKey,",
          "450:   HTTPMethod: \"POST\",",
          "451:   HTTPPath:   \"/DeleteStreamKey\",",
          "452:  }",
          "454:  if input == nil {",
          "455:   input = &DeleteStreamKeyInput{}",
          "456:  }",
          "458:  output = &DeleteStreamKeyOutput{}",
          "459:  req = c.newRequest(op, input, output)",
          "460:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "461:  return",
          "462: }",
          "484: func (c *IVS) DeleteStreamKey(input *DeleteStreamKeyInput) (*DeleteStreamKeyOutput, error) {",
          "485:  req, out := c.DeleteStreamKeyRequest(input)",
          "486:  return out, req.Send()",
          "487: }",
          "498: func (c *IVS) DeleteStreamKeyWithContext(ctx aws.Context, input *DeleteStreamKeyInput, opts ...request.Option) (*DeleteStreamKeyOutput, error) {",
          "499:  req, out := c.DeleteStreamKeyRequest(input)",
          "500:  req.SetContext(ctx)",
          "501:  req.ApplyOptions(opts...)",
          "502:  return out, req.Send()",
          "503: }",
          "505: const opGetChannel = \"GetChannel\"",
          "531: func (c *IVS) GetChannelRequest(input *GetChannelInput) (req *request.Request, output *GetChannelOutput) {",
          "532:  op := &request.Operation{",
          "533:   Name:       opGetChannel,",
          "534:   HTTPMethod: \"POST\",",
          "535:   HTTPPath:   \"/GetChannel\",",
          "536:  }",
          "538:  if input == nil {",
          "539:   input = &GetChannelInput{}",
          "540:  }",
          "542:  output = &GetChannelOutput{}",
          "543:  req = c.newRequest(op, input, output)",
          "544:  return",
          "545: }",
          "566: func (c *IVS) GetChannel(input *GetChannelInput) (*GetChannelOutput, error) {",
          "567:  req, out := c.GetChannelRequest(input)",
          "568:  return out, req.Send()",
          "569: }",
          "580: func (c *IVS) GetChannelWithContext(ctx aws.Context, input *GetChannelInput, opts ...request.Option) (*GetChannelOutput, error) {",
          "581:  req, out := c.GetChannelRequest(input)",
          "582:  req.SetContext(ctx)",
          "583:  req.ApplyOptions(opts...)",
          "584:  return out, req.Send()",
          "585: }",
          "587: const opGetStream = \"GetStream\"",
          "613: func (c *IVS) GetStreamRequest(input *GetStreamInput) (req *request.Request, output *GetStreamOutput) {",
          "614:  op := &request.Operation{",
          "615:   Name:       opGetStream,",
          "616:   HTTPMethod: \"POST\",",
          "617:   HTTPPath:   \"/GetStream\",",
          "618:  }",
          "620:  if input == nil {",
          "621:   input = &GetStreamInput{}",
          "622:  }",
          "624:  output = &GetStreamOutput{}",
          "625:  req = c.newRequest(op, input, output)",
          "626:  return",
          "627: }",
          "650: func (c *IVS) GetStream(input *GetStreamInput) (*GetStreamOutput, error) {",
          "651:  req, out := c.GetStreamRequest(input)",
          "652:  return out, req.Send()",
          "653: }",
          "664: func (c *IVS) GetStreamWithContext(ctx aws.Context, input *GetStreamInput, opts ...request.Option) (*GetStreamOutput, error) {",
          "665:  req, out := c.GetStreamRequest(input)",
          "666:  req.SetContext(ctx)",
          "667:  req.ApplyOptions(opts...)",
          "668:  return out, req.Send()",
          "669: }",
          "671: const opGetStreamKey = \"GetStreamKey\"",
          "697: func (c *IVS) GetStreamKeyRequest(input *GetStreamKeyInput) (req *request.Request, output *GetStreamKeyOutput) {",
          "698:  op := &request.Operation{",
          "699:   Name:       opGetStreamKey,",
          "700:   HTTPMethod: \"POST\",",
          "701:   HTTPPath:   \"/GetStreamKey\",",
          "702:  }",
          "704:  if input == nil {",
          "705:   input = &GetStreamKeyInput{}",
          "706:  }",
          "708:  output = &GetStreamKeyOutput{}",
          "709:  req = c.newRequest(op, input, output)",
          "710:  return",
          "711: }",
          "732: func (c *IVS) GetStreamKey(input *GetStreamKeyInput) (*GetStreamKeyOutput, error) {",
          "733:  req, out := c.GetStreamKeyRequest(input)",
          "734:  return out, req.Send()",
          "735: }",
          "746: func (c *IVS) GetStreamKeyWithContext(ctx aws.Context, input *GetStreamKeyInput, opts ...request.Option) (*GetStreamKeyOutput, error) {",
          "747:  req, out := c.GetStreamKeyRequest(input)",
          "748:  req.SetContext(ctx)",
          "749:  req.ApplyOptions(opts...)",
          "750:  return out, req.Send()",
          "751: }",
          "753: const opListChannels = \"ListChannels\"",
          "779: func (c *IVS) ListChannelsRequest(input *ListChannelsInput) (req *request.Request, output *ListChannelsOutput) {",
          "780:  op := &request.Operation{",
          "781:   Name:       opListChannels,",
          "782:   HTTPMethod: \"POST\",",
          "783:   HTTPPath:   \"/ListChannels\",",
          "784:   Paginator: &request.Paginator{",
          "785:    InputTokens:     []string{\"nextToken\"},",
          "786:    OutputTokens:    []string{\"nextToken\"},",
          "787:    LimitToken:      \"maxResults\",",
          "788:    TruncationToken: \"\",",
          "789:   },",
          "790:  }",
          "792:  if input == nil {",
          "793:   input = &ListChannelsInput{}",
          "794:  }",
          "796:  output = &ListChannelsOutput{}",
          "797:  req = c.newRequest(op, input, output)",
          "798:  return",
          "799: }",
          "819: func (c *IVS) ListChannels(input *ListChannelsInput) (*ListChannelsOutput, error) {",
          "820:  req, out := c.ListChannelsRequest(input)",
          "821:  return out, req.Send()",
          "822: }",
          "833: func (c *IVS) ListChannelsWithContext(ctx aws.Context, input *ListChannelsInput, opts ...request.Option) (*ListChannelsOutput, error) {",
          "834:  req, out := c.ListChannelsRequest(input)",
          "835:  req.SetContext(ctx)",
          "836:  req.ApplyOptions(opts...)",
          "837:  return out, req.Send()",
          "838: }",
          "857: func (c *IVS) ListChannelsPages(input *ListChannelsInput, fn func(*ListChannelsOutput, bool) bool) error {",
          "858:  return c.ListChannelsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "859: }",
          "868: func (c *IVS) ListChannelsPagesWithContext(ctx aws.Context, input *ListChannelsInput, fn func(*ListChannelsOutput, bool) bool, opts ...request.Option) error {",
          "869:  p := request.Pagination{",
          "870:   NewRequest: func() (*request.Request, error) {",
          "871:    var inCpy *ListChannelsInput",
          "872:    if input != nil {",
          "873:     tmp := *input",
          "874:     inCpy = &tmp",
          "875:    }",
          "876:    req, _ := c.ListChannelsRequest(inCpy)",
          "877:    req.SetContext(ctx)",
          "878:    req.ApplyOptions(opts...)",
          "879:    return req, nil",
          "880:   },",
          "881:  }",
          "883:  for p.Next() {",
          "884:   if !fn(p.Page().(*ListChannelsOutput), !p.HasNextPage()) {",
          "885:    break",
          "886:   }",
          "887:  }",
          "889:  return p.Err()",
          "890: }",
          "892: const opListStreamKeys = \"ListStreamKeys\"",
          "918: func (c *IVS) ListStreamKeysRequest(input *ListStreamKeysInput) (req *request.Request, output *ListStreamKeysOutput) {",
          "919:  op := &request.Operation{",
          "920:   Name:       opListStreamKeys,",
          "921:   HTTPMethod: \"POST\",",
          "922:   HTTPPath:   \"/ListStreamKeys\",",
          "923:   Paginator: &request.Paginator{",
          "924:    InputTokens:     []string{\"nextToken\"},",
          "925:    OutputTokens:    []string{\"nextToken\"},",
          "926:    LimitToken:      \"maxResults\",",
          "927:    TruncationToken: \"\",",
          "928:   },",
          "929:  }",
          "931:  if input == nil {",
          "932:   input = &ListStreamKeysInput{}",
          "933:  }",
          "935:  output = &ListStreamKeysOutput{}",
          "936:  req = c.newRequest(op, input, output)",
          "937:  return",
          "938: }",
          "960: func (c *IVS) ListStreamKeys(input *ListStreamKeysInput) (*ListStreamKeysOutput, error) {",
          "961:  req, out := c.ListStreamKeysRequest(input)",
          "962:  return out, req.Send()",
          "963: }",
          "974: func (c *IVS) ListStreamKeysWithContext(ctx aws.Context, input *ListStreamKeysInput, opts ...request.Option) (*ListStreamKeysOutput, error) {",
          "975:  req, out := c.ListStreamKeysRequest(input)",
          "976:  req.SetContext(ctx)",
          "977:  req.ApplyOptions(opts...)",
          "978:  return out, req.Send()",
          "979: }",
          "998: func (c *IVS) ListStreamKeysPages(input *ListStreamKeysInput, fn func(*ListStreamKeysOutput, bool) bool) error {",
          "999:  return c.ListStreamKeysPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1000: }",
          "1009: func (c *IVS) ListStreamKeysPagesWithContext(ctx aws.Context, input *ListStreamKeysInput, fn func(*ListStreamKeysOutput, bool) bool, opts ...request.Option) error {",
          "1010:  p := request.Pagination{",
          "1011:   NewRequest: func() (*request.Request, error) {",
          "1012:    var inCpy *ListStreamKeysInput",
          "1013:    if input != nil {",
          "1014:     tmp := *input",
          "1015:     inCpy = &tmp",
          "1016:    }",
          "1017:    req, _ := c.ListStreamKeysRequest(inCpy)",
          "1018:    req.SetContext(ctx)",
          "1019:    req.ApplyOptions(opts...)",
          "1020:    return req, nil",
          "1021:   },",
          "1022:  }",
          "1024:  for p.Next() {",
          "1025:   if !fn(p.Page().(*ListStreamKeysOutput), !p.HasNextPage()) {",
          "1026:    break",
          "1027:   }",
          "1028:  }",
          "1030:  return p.Err()",
          "1031: }",
          "1033: const opListStreams = \"ListStreams\"",
          "1059: func (c *IVS) ListStreamsRequest(input *ListStreamsInput) (req *request.Request, output *ListStreamsOutput) {",
          "1060:  op := &request.Operation{",
          "1061:   Name:       opListStreams,",
          "1062:   HTTPMethod: \"POST\",",
          "1063:   HTTPPath:   \"/ListStreams\",",
          "1064:   Paginator: &request.Paginator{",
          "1065:    InputTokens:     []string{\"nextToken\"},",
          "1066:    OutputTokens:    []string{\"nextToken\"},",
          "1067:    LimitToken:      \"maxResults\",",
          "1068:    TruncationToken: \"\",",
          "1069:   },",
          "1070:  }",
          "1072:  if input == nil {",
          "1073:   input = &ListStreamsInput{}",
          "1074:  }",
          "1076:  output = &ListStreamsOutput{}",
          "1077:  req = c.newRequest(op, input, output)",
          "1078:  return",
          "1079: }",
          "1096: func (c *IVS) ListStreams(input *ListStreamsInput) (*ListStreamsOutput, error) {",
          "1097:  req, out := c.ListStreamsRequest(input)",
          "1098:  return out, req.Send()",
          "1099: }",
          "1110: func (c *IVS) ListStreamsWithContext(ctx aws.Context, input *ListStreamsInput, opts ...request.Option) (*ListStreamsOutput, error) {",
          "1111:  req, out := c.ListStreamsRequest(input)",
          "1112:  req.SetContext(ctx)",
          "1113:  req.ApplyOptions(opts...)",
          "1114:  return out, req.Send()",
          "1115: }",
          "1134: func (c *IVS) ListStreamsPages(input *ListStreamsInput, fn func(*ListStreamsOutput, bool) bool) error {",
          "1135:  return c.ListStreamsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1136: }",
          "1145: func (c *IVS) ListStreamsPagesWithContext(ctx aws.Context, input *ListStreamsInput, fn func(*ListStreamsOutput, bool) bool, opts ...request.Option) error {",
          "1146:  p := request.Pagination{",
          "1147:   NewRequest: func() (*request.Request, error) {",
          "1148:    var inCpy *ListStreamsInput",
          "1149:    if input != nil {",
          "1150:     tmp := *input",
          "1151:     inCpy = &tmp",
          "1152:    }",
          "1153:    req, _ := c.ListStreamsRequest(inCpy)",
          "1154:    req.SetContext(ctx)",
          "1155:    req.ApplyOptions(opts...)",
          "1156:    return req, nil",
          "1157:   },",
          "1158:  }",
          "1160:  for p.Next() {",
          "1161:   if !fn(p.Page().(*ListStreamsOutput), !p.HasNextPage()) {",
          "1162:    break",
          "1163:   }",
          "1164:  }",
          "1166:  return p.Err()",
          "1167: }",
          "1169: const opListTagsForResource = \"ListTagsForResource\"",
          "1195: func (c *IVS) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1196:  op := &request.Operation{",
          "1197:   Name:       opListTagsForResource,",
          "1198:   HTTPMethod: \"GET\",",
          "1199:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1200:   Paginator: &request.Paginator{",
          "1201:    InputTokens:     []string{\"nextToken\"},",
          "1202:    OutputTokens:    []string{\"nextToken\"},",
          "1203:    LimitToken:      \"maxResults\",",
          "1204:    TruncationToken: \"\",",
          "1205:   },",
          "1206:  }",
          "1208:  if input == nil {",
          "1209:   input = &ListTagsForResourceInput{}",
          "1210:  }",
          "1212:  output = &ListTagsForResourceOutput{}",
          "1213:  req = c.newRequest(op, input, output)",
          "1214:  return",
          "1215: }",
          "1236: func (c *IVS) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1237:  req, out := c.ListTagsForResourceRequest(input)",
          "1238:  return out, req.Send()",
          "1239: }",
          "1250: func (c *IVS) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1251:  req, out := c.ListTagsForResourceRequest(input)",
          "1252:  req.SetContext(ctx)",
          "1253:  req.ApplyOptions(opts...)",
          "1254:  return out, req.Send()",
          "1255: }",
          "1274: func (c *IVS) ListTagsForResourcePages(input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool) error {",
          "1275:  return c.ListTagsForResourcePagesWithContext(aws.BackgroundContext(), input, fn)",
          "1276: }",
          "1285: func (c *IVS) ListTagsForResourcePagesWithContext(ctx aws.Context, input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool, opts ...request.Option) error {",
          "1286:  p := request.Pagination{",
          "1287:   NewRequest: func() (*request.Request, error) {",
          "1288:    var inCpy *ListTagsForResourceInput",
          "1289:    if input != nil {",
          "1290:     tmp := *input",
          "1291:     inCpy = &tmp",
          "1292:    }",
          "1293:    req, _ := c.ListTagsForResourceRequest(inCpy)",
          "1294:    req.SetContext(ctx)",
          "1295:    req.ApplyOptions(opts...)",
          "1296:    return req, nil",
          "1297:   },",
          "1298:  }",
          "1300:  for p.Next() {",
          "1301:   if !fn(p.Page().(*ListTagsForResourceOutput), !p.HasNextPage()) {",
          "1302:    break",
          "1303:   }",
          "1304:  }",
          "1306:  return p.Err()",
          "1307: }",
          "1309: const opPutMetadata = \"PutMetadata\"",
          "1335: func (c *IVS) PutMetadataRequest(input *PutMetadataInput) (req *request.Request, output *PutMetadataOutput) {",
          "1336:  op := &request.Operation{",
          "1337:   Name:       opPutMetadata,",
          "1338:   HTTPMethod: \"POST\",",
          "1339:   HTTPPath:   \"/PutMetadata\",",
          "1340:  }",
          "1342:  if input == nil {",
          "1343:   input = &PutMetadataInput{}",
          "1344:  }",
          "1346:  output = &PutMetadataOutput{}",
          "1347:  req = c.newRequest(op, input, output)",
          "1348:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1349:  return",
          "1350: }",
          "1376: func (c *IVS) PutMetadata(input *PutMetadataInput) (*PutMetadataOutput, error) {",
          "1377:  req, out := c.PutMetadataRequest(input)",
          "1378:  return out, req.Send()",
          "1379: }",
          "1390: func (c *IVS) PutMetadataWithContext(ctx aws.Context, input *PutMetadataInput, opts ...request.Option) (*PutMetadataOutput, error) {",
          "1391:  req, out := c.PutMetadataRequest(input)",
          "1392:  req.SetContext(ctx)",
          "1393:  req.ApplyOptions(opts...)",
          "1394:  return out, req.Send()",
          "1395: }",
          "1397: const opStopStream = \"StopStream\"",
          "1423: func (c *IVS) StopStreamRequest(input *StopStreamInput) (req *request.Request, output *StopStreamOutput) {",
          "1424:  op := &request.Operation{",
          "1425:   Name:       opStopStream,",
          "1426:   HTTPMethod: \"POST\",",
          "1427:   HTTPPath:   \"/StopStream\",",
          "1428:  }",
          "1430:  if input == nil {",
          "1431:   input = &StopStreamInput{}",
          "1432:  }",
          "1434:  output = &StopStreamOutput{}",
          "1435:  req = c.newRequest(op, input, output)",
          "1436:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1437:  return",
          "1438: }",
          "1469: func (c *IVS) StopStream(input *StopStreamInput) (*StopStreamOutput, error) {",
          "1470:  req, out := c.StopStreamRequest(input)",
          "1471:  return out, req.Send()",
          "1472: }",
          "1483: func (c *IVS) StopStreamWithContext(ctx aws.Context, input *StopStreamInput, opts ...request.Option) (*StopStreamOutput, error) {",
          "1484:  req, out := c.StopStreamRequest(input)",
          "1485:  req.SetContext(ctx)",
          "1486:  req.ApplyOptions(opts...)",
          "1487:  return out, req.Send()",
          "1488: }",
          "1490: const opTagResource = \"TagResource\"",
          "1516: func (c *IVS) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "1517:  op := &request.Operation{",
          "1518:   Name:       opTagResource,",
          "1519:   HTTPMethod: \"POST\",",
          "1520:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1521:  }",
          "1523:  if input == nil {",
          "1524:   input = &TagResourceInput{}",
          "1525:  }",
          "1527:  output = &TagResourceOutput{}",
          "1528:  req = c.newRequest(op, input, output)",
          "1529:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1530:  return",
          "1531: }",
          "1552: func (c *IVS) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "1553:  req, out := c.TagResourceRequest(input)",
          "1554:  return out, req.Send()",
          "1555: }",
          "1566: func (c *IVS) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "1567:  req, out := c.TagResourceRequest(input)",
          "1568:  req.SetContext(ctx)",
          "1569:  req.ApplyOptions(opts...)",
          "1570:  return out, req.Send()",
          "1571: }",
          "1573: const opUntagResource = \"UntagResource\"",
          "1599: func (c *IVS) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "1600:  op := &request.Operation{",
          "1601:   Name:       opUntagResource,",
          "1602:   HTTPMethod: \"DELETE\",",
          "1603:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1604:  }",
          "1606:  if input == nil {",
          "1607:   input = &UntagResourceInput{}",
          "1608:  }",
          "1610:  output = &UntagResourceOutput{}",
          "1611:  req = c.newRequest(op, input, output)",
          "1612:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1613:  return",
          "1614: }",
          "1635: func (c *IVS) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "1636:  req, out := c.UntagResourceRequest(input)",
          "1637:  return out, req.Send()",
          "1638: }",
          "1649: func (c *IVS) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "1650:  req, out := c.UntagResourceRequest(input)",
          "1651:  req.SetContext(ctx)",
          "1652:  req.ApplyOptions(opts...)",
          "1653:  return out, req.Send()",
          "1654: }",
          "1656: const opUpdateChannel = \"UpdateChannel\"",
          "1682: func (c *IVS) UpdateChannelRequest(input *UpdateChannelInput) (req *request.Request, output *UpdateChannelOutput) {",
          "1683:  op := &request.Operation{",
          "1684:   Name:       opUpdateChannel,",
          "1685:   HTTPMethod: \"POST\",",
          "1686:   HTTPPath:   \"/UpdateChannel\",",
          "1687:  }",
          "1689:  if input == nil {",
          "1690:   input = &UpdateChannelInput{}",
          "1691:  }",
          "1693:  output = &UpdateChannelOutput{}",
          "1694:  req = c.newRequest(op, input, output)",
          "1695:  return",
          "1696: }",
          "1721: func (c *IVS) UpdateChannel(input *UpdateChannelInput) (*UpdateChannelOutput, error) {",
          "1722:  req, out := c.UpdateChannelRequest(input)",
          "1723:  return out, req.Send()",
          "1724: }",
          "1735: func (c *IVS) UpdateChannelWithContext(ctx aws.Context, input *UpdateChannelInput, opts ...request.Option) (*UpdateChannelOutput, error) {",
          "1736:  req, out := c.UpdateChannelRequest(input)",
          "1737:  req.SetContext(ctx)",
          "1738:  req.ApplyOptions(opts...)",
          "1739:  return out, req.Send()",
          "1740: }",
          "1742: type AccessDeniedException struct {",
          "1743:  _            struct{}                  `type:\"structure\"`",
          "1744:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "1747:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "1749:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "1750: }",
          "1753: func (s AccessDeniedException) String() string {",
          "1754:  return awsutil.Prettify(s)",
          "1755: }",
          "1758: func (s AccessDeniedException) GoString() string {",
          "1759:  return s.String()",
          "1760: }",
          "1762: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "1763:  return &AccessDeniedException{",
          "1764:   RespMetadata: v,",
          "1765:  }",
          "1766: }",
          "1769: func (s *AccessDeniedException) Code() string {",
          "1770:  return \"AccessDeniedException\"",
          "1771: }",
          "1774: func (s *AccessDeniedException) Message() string {",
          "1775:  if s.Message_ != nil {",
          "1776:   return *s.Message_",
          "1777:  }",
          "1778:  return \"\"",
          "1779: }",
          "1782: func (s *AccessDeniedException) OrigErr() error {",
          "1783:  return nil",
          "1784: }",
          "1786: func (s *AccessDeniedException) Error() string {",
          "1787:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "1788: }",
          "1791: func (s *AccessDeniedException) StatusCode() int {",
          "1792:  return s.RespMetadata.StatusCode",
          "1793: }",
          "1796: func (s *AccessDeniedException) RequestID() string {",
          "1797:  return s.RespMetadata.RequestID",
          "1798: }",
          "1801: type BatchError struct {",
          "1802:  _ struct{} `type:\"structure\"`",
          "1805:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "1808:  Code *string `locationName:\"code\" type:\"string\"`",
          "1811:  Message *string `locationName:\"message\" type:\"string\"`",
          "1812: }",
          "1815: func (s BatchError) String() string {",
          "1816:  return awsutil.Prettify(s)",
          "1817: }",
          "1820: func (s BatchError) GoString() string {",
          "1821:  return s.String()",
          "1822: }",
          "1825: func (s *BatchError) SetArn(v string) *BatchError {",
          "1826:  s.Arn = &v",
          "1827:  return s",
          "1828: }",
          "1831: func (s *BatchError) SetCode(v string) *BatchError {",
          "1832:  s.Code = &v",
          "1833:  return s",
          "1834: }",
          "1837: func (s *BatchError) SetMessage(v string) *BatchError {",
          "1838:  s.Message = &v",
          "1839:  return s",
          "1840: }",
          "1842: type BatchGetChannelInput struct {",
          "1843:  _ struct{} `type:\"structure\"`",
          "1848:  Arns []*string `locationName:\"arns\" min:\"1\" type:\"list\" required:\"true\"`",
          "1849: }",
          "1852: func (s BatchGetChannelInput) String() string {",
          "1853:  return awsutil.Prettify(s)",
          "1854: }",
          "1857: func (s BatchGetChannelInput) GoString() string {",
          "1858:  return s.String()",
          "1859: }",
          "1862: func (s *BatchGetChannelInput) Validate() error {",
          "1863:  invalidParams := request.ErrInvalidParams{Context: \"BatchGetChannelInput\"}",
          "1864:  if s.Arns == nil {",
          "1865:   invalidParams.Add(request.NewErrParamRequired(\"Arns\"))",
          "1866:  }",
          "1867:  if s.Arns != nil && len(s.Arns) < 1 {",
          "1868:   invalidParams.Add(request.NewErrParamMinLen(\"Arns\", 1))",
          "1869:  }",
          "1871:  if invalidParams.Len() > 0 {",
          "1872:   return invalidParams",
          "1873:  }",
          "1874:  return nil",
          "1875: }",
          "1878: func (s *BatchGetChannelInput) SetArns(v []*string) *BatchGetChannelInput {",
          "1879:  s.Arns = v",
          "1880:  return s",
          "1881: }",
          "1883: type BatchGetChannelOutput struct {",
          "1884:  _ struct{} `type:\"structure\"`",
          "1886:  Channels []*Channel `locationName:\"channels\" type:\"list\"`",
          "1889:  Errors []*BatchError `locationName:\"errors\" type:\"list\"`",
          "1890: }",
          "1893: func (s BatchGetChannelOutput) String() string {",
          "1894:  return awsutil.Prettify(s)",
          "1895: }",
          "1898: func (s BatchGetChannelOutput) GoString() string {",
          "1899:  return s.String()",
          "1900: }",
          "1903: func (s *BatchGetChannelOutput) SetChannels(v []*Channel) *BatchGetChannelOutput {",
          "1904:  s.Channels = v",
          "1905:  return s",
          "1906: }",
          "1909: func (s *BatchGetChannelOutput) SetErrors(v []*BatchError) *BatchGetChannelOutput {",
          "1910:  s.Errors = v",
          "1911:  return s",
          "1912: }",
          "1914: type BatchGetStreamKeyInput struct {",
          "1915:  _ struct{} `type:\"structure\"`",
          "1920:  Arns []*string `locationName:\"arns\" min:\"1\" type:\"list\" required:\"true\"`",
          "1921: }",
          "1924: func (s BatchGetStreamKeyInput) String() string {",
          "1925:  return awsutil.Prettify(s)",
          "1926: }",
          "1929: func (s BatchGetStreamKeyInput) GoString() string {",
          "1930:  return s.String()",
          "1931: }",
          "1934: func (s *BatchGetStreamKeyInput) Validate() error {",
          "1935:  invalidParams := request.ErrInvalidParams{Context: \"BatchGetStreamKeyInput\"}",
          "1936:  if s.Arns == nil {",
          "1937:   invalidParams.Add(request.NewErrParamRequired(\"Arns\"))",
          "1938:  }",
          "1939:  if s.Arns != nil && len(s.Arns) < 1 {",
          "1940:   invalidParams.Add(request.NewErrParamMinLen(\"Arns\", 1))",
          "1941:  }",
          "1943:  if invalidParams.Len() > 0 {",
          "1944:   return invalidParams",
          "1945:  }",
          "1946:  return nil",
          "1947: }",
          "1950: func (s *BatchGetStreamKeyInput) SetArns(v []*string) *BatchGetStreamKeyInput {",
          "1951:  s.Arns = v",
          "1952:  return s",
          "1953: }",
          "1955: type BatchGetStreamKeyOutput struct {",
          "1956:  _ struct{} `type:\"structure\"`",
          "1958:  Errors []*BatchError `locationName:\"errors\" type:\"list\"`",
          "1960:  StreamKeys []*StreamKey `locationName:\"streamKeys\" type:\"list\"`",
          "1961: }",
          "1964: func (s BatchGetStreamKeyOutput) String() string {",
          "1965:  return awsutil.Prettify(s)",
          "1966: }",
          "1969: func (s BatchGetStreamKeyOutput) GoString() string {",
          "1970:  return s.String()",
          "1971: }",
          "1974: func (s *BatchGetStreamKeyOutput) SetErrors(v []*BatchError) *BatchGetStreamKeyOutput {",
          "1975:  s.Errors = v",
          "1976:  return s",
          "1977: }",
          "1980: func (s *BatchGetStreamKeyOutput) SetStreamKeys(v []*StreamKey) *BatchGetStreamKeyOutput {",
          "1981:  s.StreamKeys = v",
          "1982:  return s",
          "1983: }",
          "1986: type Channel struct {",
          "1987:  _ struct{} `type:\"structure\"`",
          "1990:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "1994:  IngestEndpoint *string `locationName:\"ingestEndpoint\" type:\"string\"`",
          "1997:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "2000:  Name *string `locationName:\"name\" type:\"string\"`",
          "2003:  PlaybackUrl *string `locationName:\"playbackUrl\" type:\"string\"`",
          "2006:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "2013:  Type *string `locationName:\"type\" type:\"string\" enum:\"ChannelType\"`",
          "2014: }",
          "2017: func (s Channel) String() string {",
          "2018:  return awsutil.Prettify(s)",
          "2019: }",
          "2022: func (s Channel) GoString() string {",
          "2023:  return s.String()",
          "2024: }",
          "2027: func (s *Channel) SetArn(v string) *Channel {",
          "2028:  s.Arn = &v",
          "2029:  return s",
          "2030: }",
          "2033: func (s *Channel) SetIngestEndpoint(v string) *Channel {",
          "2034:  s.IngestEndpoint = &v",
          "2035:  return s",
          "2036: }",
          "2039: func (s *Channel) SetLatencyMode(v string) *Channel {",
          "2040:  s.LatencyMode = &v",
          "2041:  return s",
          "2042: }",
          "2045: func (s *Channel) SetName(v string) *Channel {",
          "2046:  s.Name = &v",
          "2047:  return s",
          "2048: }",
          "2051: func (s *Channel) SetPlaybackUrl(v string) *Channel {",
          "2052:  s.PlaybackUrl = &v",
          "2053:  return s",
          "2054: }",
          "2057: func (s *Channel) SetTags(v map[string]*string) *Channel {",
          "2058:  s.Tags = v",
          "2059:  return s",
          "2060: }",
          "2063: func (s *Channel) SetType(v string) *Channel {",
          "2064:  s.Type = &v",
          "2065:  return s",
          "2066: }",
          "2068: type ChannelNotBroadcasting struct {",
          "2069:  _            struct{}                  `type:\"structure\"`",
          "2070:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2073:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "2075:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2076: }",
          "2079: func (s ChannelNotBroadcasting) String() string {",
          "2080:  return awsutil.Prettify(s)",
          "2081: }",
          "2084: func (s ChannelNotBroadcasting) GoString() string {",
          "2085:  return s.String()",
          "2086: }",
          "2088: func newErrorChannelNotBroadcasting(v protocol.ResponseMetadata) error {",
          "2089:  return &ChannelNotBroadcasting{",
          "2090:   RespMetadata: v,",
          "2091:  }",
          "2092: }",
          "2095: func (s *ChannelNotBroadcasting) Code() string {",
          "2096:  return \"ChannelNotBroadcasting\"",
          "2097: }",
          "2100: func (s *ChannelNotBroadcasting) Message() string {",
          "2101:  if s.Message_ != nil {",
          "2102:   return *s.Message_",
          "2103:  }",
          "2104:  return \"\"",
          "2105: }",
          "2108: func (s *ChannelNotBroadcasting) OrigErr() error {",
          "2109:  return nil",
          "2110: }",
          "2112: func (s *ChannelNotBroadcasting) Error() string {",
          "2113:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2114: }",
          "2117: func (s *ChannelNotBroadcasting) StatusCode() int {",
          "2118:  return s.RespMetadata.StatusCode",
          "2119: }",
          "2122: func (s *ChannelNotBroadcasting) RequestID() string {",
          "2123:  return s.RespMetadata.RequestID",
          "2124: }",
          "2127: type ChannelSummary struct {",
          "2128:  _ struct{} `type:\"structure\"`",
          "2131:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2134:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "2137:  Name *string `locationName:\"name\" type:\"string\"`",
          "2140:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "2141: }",
          "2144: func (s ChannelSummary) String() string {",
          "2145:  return awsutil.Prettify(s)",
          "2146: }",
          "2149: func (s ChannelSummary) GoString() string {",
          "2150:  return s.String()",
          "2151: }",
          "2154: func (s *ChannelSummary) SetArn(v string) *ChannelSummary {",
          "2155:  s.Arn = &v",
          "2156:  return s",
          "2157: }",
          "2160: func (s *ChannelSummary) SetLatencyMode(v string) *ChannelSummary {",
          "2161:  s.LatencyMode = &v",
          "2162:  return s",
          "2163: }",
          "2166: func (s *ChannelSummary) SetName(v string) *ChannelSummary {",
          "2167:  s.Name = &v",
          "2168:  return s",
          "2169: }",
          "2172: func (s *ChannelSummary) SetTags(v map[string]*string) *ChannelSummary {",
          "2173:  s.Tags = v",
          "2174:  return s",
          "2175: }",
          "2177: type ConflictException struct {",
          "2178:  _            struct{}                  `type:\"structure\"`",
          "2179:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2182:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "2184:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2185: }",
          "2188: func (s ConflictException) String() string {",
          "2189:  return awsutil.Prettify(s)",
          "2190: }",
          "2193: func (s ConflictException) GoString() string {",
          "2194:  return s.String()",
          "2195: }",
          "2197: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2198:  return &ConflictException{",
          "2199:   RespMetadata: v,",
          "2200:  }",
          "2201: }",
          "2204: func (s *ConflictException) Code() string {",
          "2205:  return \"ConflictException\"",
          "2206: }",
          "2209: func (s *ConflictException) Message() string {",
          "2210:  if s.Message_ != nil {",
          "2211:   return *s.Message_",
          "2212:  }",
          "2213:  return \"\"",
          "2214: }",
          "2217: func (s *ConflictException) OrigErr() error {",
          "2218:  return nil",
          "2219: }",
          "2221: func (s *ConflictException) Error() string {",
          "2222:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2223: }",
          "2226: func (s *ConflictException) StatusCode() int {",
          "2227:  return s.RespMetadata.StatusCode",
          "2228: }",
          "2231: func (s *ConflictException) RequestID() string {",
          "2232:  return s.RespMetadata.RequestID",
          "2233: }",
          "2235: type CreateChannelInput struct {",
          "2236:  _ struct{} `type:\"structure\"`",
          "2239:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "2242:  Name *string `locationName:\"name\" type:\"string\"`",
          "2245:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "2252:  Type *string `locationName:\"type\" type:\"string\" enum:\"ChannelType\"`",
          "2253: }",
          "2256: func (s CreateChannelInput) String() string {",
          "2257:  return awsutil.Prettify(s)",
          "2258: }",
          "2261: func (s CreateChannelInput) GoString() string {",
          "2262:  return s.String()",
          "2263: }",
          "2266: func (s *CreateChannelInput) SetLatencyMode(v string) *CreateChannelInput {",
          "2267:  s.LatencyMode = &v",
          "2268:  return s",
          "2269: }",
          "2272: func (s *CreateChannelInput) SetName(v string) *CreateChannelInput {",
          "2273:  s.Name = &v",
          "2274:  return s",
          "2275: }",
          "2278: func (s *CreateChannelInput) SetTags(v map[string]*string) *CreateChannelInput {",
          "2279:  s.Tags = v",
          "2280:  return s",
          "2281: }",
          "2284: func (s *CreateChannelInput) SetType(v string) *CreateChannelInput {",
          "2285:  s.Type = &v",
          "2286:  return s",
          "2287: }",
          "2289: type CreateChannelOutput struct {",
          "2290:  _ struct{} `type:\"structure\"`",
          "2293:  Channel *Channel `locationName:\"channel\" type:\"structure\"`",
          "2296:  StreamKey *StreamKey `locationName:\"streamKey\" type:\"structure\"`",
          "2297: }",
          "2300: func (s CreateChannelOutput) String() string {",
          "2301:  return awsutil.Prettify(s)",
          "2302: }",
          "2305: func (s CreateChannelOutput) GoString() string {",
          "2306:  return s.String()",
          "2307: }",
          "2310: func (s *CreateChannelOutput) SetChannel(v *Channel) *CreateChannelOutput {",
          "2311:  s.Channel = v",
          "2312:  return s",
          "2313: }",
          "2316: func (s *CreateChannelOutput) SetStreamKey(v *StreamKey) *CreateChannelOutput {",
          "2317:  s.StreamKey = v",
          "2318:  return s",
          "2319: }",
          "2321: type CreateStreamKeyInput struct {",
          "2322:  _ struct{} `type:\"structure\"`",
          "2327:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2330:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "2331: }",
          "2334: func (s CreateStreamKeyInput) String() string {",
          "2335:  return awsutil.Prettify(s)",
          "2336: }",
          "2339: func (s CreateStreamKeyInput) GoString() string {",
          "2340:  return s.String()",
          "2341: }",
          "2344: func (s *CreateStreamKeyInput) Validate() error {",
          "2345:  invalidParams := request.ErrInvalidParams{Context: \"CreateStreamKeyInput\"}",
          "2346:  if s.ChannelArn == nil {",
          "2347:   invalidParams.Add(request.NewErrParamRequired(\"ChannelArn\"))",
          "2348:  }",
          "2349:  if s.ChannelArn != nil && len(*s.ChannelArn) < 1 {",
          "2350:   invalidParams.Add(request.NewErrParamMinLen(\"ChannelArn\", 1))",
          "2351:  }",
          "2353:  if invalidParams.Len() > 0 {",
          "2354:   return invalidParams",
          "2355:  }",
          "2356:  return nil",
          "2357: }",
          "2360: func (s *CreateStreamKeyInput) SetChannelArn(v string) *CreateStreamKeyInput {",
          "2361:  s.ChannelArn = &v",
          "2362:  return s",
          "2363: }",
          "2366: func (s *CreateStreamKeyInput) SetTags(v map[string]*string) *CreateStreamKeyInput {",
          "2367:  s.Tags = v",
          "2368:  return s",
          "2369: }",
          "2371: type CreateStreamKeyOutput struct {",
          "2372:  _ struct{} `type:\"structure\"`",
          "2375:  StreamKey *StreamKey `locationName:\"streamKey\" type:\"structure\"`",
          "2376: }",
          "2379: func (s CreateStreamKeyOutput) String() string {",
          "2380:  return awsutil.Prettify(s)",
          "2381: }",
          "2384: func (s CreateStreamKeyOutput) GoString() string {",
          "2385:  return s.String()",
          "2386: }",
          "2389: func (s *CreateStreamKeyOutput) SetStreamKey(v *StreamKey) *CreateStreamKeyOutput {",
          "2390:  s.StreamKey = v",
          "2391:  return s",
          "2392: }",
          "2394: type DeleteChannelInput struct {",
          "2395:  _ struct{} `type:\"structure\"`",
          "2400:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2401: }",
          "2404: func (s DeleteChannelInput) String() string {",
          "2405:  return awsutil.Prettify(s)",
          "2406: }",
          "2409: func (s DeleteChannelInput) GoString() string {",
          "2410:  return s.String()",
          "2411: }",
          "2414: func (s *DeleteChannelInput) Validate() error {",
          "2415:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "2416:  if s.Arn == nil {",
          "2417:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2418:  }",
          "2419:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2420:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2421:  }",
          "2423:  if invalidParams.Len() > 0 {",
          "2424:   return invalidParams",
          "2425:  }",
          "2426:  return nil",
          "2427: }",
          "2430: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2431:  s.Arn = &v",
          "2432:  return s",
          "2433: }",
          "2435: type DeleteChannelOutput struct {",
          "2436:  _ struct{} `type:\"structure\"`",
          "2437: }",
          "2440: func (s DeleteChannelOutput) String() string {",
          "2441:  return awsutil.Prettify(s)",
          "2442: }",
          "2445: func (s DeleteChannelOutput) GoString() string {",
          "2446:  return s.String()",
          "2447: }",
          "2449: type DeleteStreamKeyInput struct {",
          "2450:  _ struct{} `type:\"structure\"`",
          "2455:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2456: }",
          "2459: func (s DeleteStreamKeyInput) String() string {",
          "2460:  return awsutil.Prettify(s)",
          "2461: }",
          "2464: func (s DeleteStreamKeyInput) GoString() string {",
          "2465:  return s.String()",
          "2466: }",
          "2469: func (s *DeleteStreamKeyInput) Validate() error {",
          "2470:  invalidParams := request.ErrInvalidParams{Context: \"DeleteStreamKeyInput\"}",
          "2471:  if s.Arn == nil {",
          "2472:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2473:  }",
          "2474:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2475:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2476:  }",
          "2478:  if invalidParams.Len() > 0 {",
          "2479:   return invalidParams",
          "2480:  }",
          "2481:  return nil",
          "2482: }",
          "2485: func (s *DeleteStreamKeyInput) SetArn(v string) *DeleteStreamKeyInput {",
          "2486:  s.Arn = &v",
          "2487:  return s",
          "2488: }",
          "2490: type DeleteStreamKeyOutput struct {",
          "2491:  _ struct{} `type:\"structure\"`",
          "2492: }",
          "2495: func (s DeleteStreamKeyOutput) String() string {",
          "2496:  return awsutil.Prettify(s)",
          "2497: }",
          "2500: func (s DeleteStreamKeyOutput) GoString() string {",
          "2501:  return s.String()",
          "2502: }",
          "2504: type GetChannelInput struct {",
          "2505:  _ struct{} `type:\"structure\"`",
          "2510:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2511: }",
          "2514: func (s GetChannelInput) String() string {",
          "2515:  return awsutil.Prettify(s)",
          "2516: }",
          "2519: func (s GetChannelInput) GoString() string {",
          "2520:  return s.String()",
          "2521: }",
          "2524: func (s *GetChannelInput) Validate() error {",
          "2525:  invalidParams := request.ErrInvalidParams{Context: \"GetChannelInput\"}",
          "2526:  if s.Arn == nil {",
          "2527:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2528:  }",
          "2529:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2530:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2531:  }",
          "2533:  if invalidParams.Len() > 0 {",
          "2534:   return invalidParams",
          "2535:  }",
          "2536:  return nil",
          "2537: }",
          "2540: func (s *GetChannelInput) SetArn(v string) *GetChannelInput {",
          "2541:  s.Arn = &v",
          "2542:  return s",
          "2543: }",
          "2545: type GetChannelOutput struct {",
          "2546:  _ struct{} `type:\"structure\"`",
          "2549:  Channel *Channel `locationName:\"channel\" type:\"structure\"`",
          "2550: }",
          "2553: func (s GetChannelOutput) String() string {",
          "2554:  return awsutil.Prettify(s)",
          "2555: }",
          "2558: func (s GetChannelOutput) GoString() string {",
          "2559:  return s.String()",
          "2560: }",
          "2563: func (s *GetChannelOutput) SetChannel(v *Channel) *GetChannelOutput {",
          "2564:  s.Channel = v",
          "2565:  return s",
          "2566: }",
          "2568: type GetStreamInput struct {",
          "2569:  _ struct{} `type:\"structure\"`",
          "2574:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2575: }",
          "2578: func (s GetStreamInput) String() string {",
          "2579:  return awsutil.Prettify(s)",
          "2580: }",
          "2583: func (s GetStreamInput) GoString() string {",
          "2584:  return s.String()",
          "2585: }",
          "2588: func (s *GetStreamInput) Validate() error {",
          "2589:  invalidParams := request.ErrInvalidParams{Context: \"GetStreamInput\"}",
          "2590:  if s.ChannelArn == nil {",
          "2591:   invalidParams.Add(request.NewErrParamRequired(\"ChannelArn\"))",
          "2592:  }",
          "2593:  if s.ChannelArn != nil && len(*s.ChannelArn) < 1 {",
          "2594:   invalidParams.Add(request.NewErrParamMinLen(\"ChannelArn\", 1))",
          "2595:  }",
          "2597:  if invalidParams.Len() > 0 {",
          "2598:   return invalidParams",
          "2599:  }",
          "2600:  return nil",
          "2601: }",
          "2604: func (s *GetStreamInput) SetChannelArn(v string) *GetStreamInput {",
          "2605:  s.ChannelArn = &v",
          "2606:  return s",
          "2607: }",
          "2609: type GetStreamKeyInput struct {",
          "2610:  _ struct{} `type:\"structure\"`",
          "2615:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2616: }",
          "2619: func (s GetStreamKeyInput) String() string {",
          "2620:  return awsutil.Prettify(s)",
          "2621: }",
          "2624: func (s GetStreamKeyInput) GoString() string {",
          "2625:  return s.String()",
          "2626: }",
          "2629: func (s *GetStreamKeyInput) Validate() error {",
          "2630:  invalidParams := request.ErrInvalidParams{Context: \"GetStreamKeyInput\"}",
          "2631:  if s.Arn == nil {",
          "2632:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2633:  }",
          "2634:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2635:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2636:  }",
          "2638:  if invalidParams.Len() > 0 {",
          "2639:   return invalidParams",
          "2640:  }",
          "2641:  return nil",
          "2642: }",
          "2645: func (s *GetStreamKeyInput) SetArn(v string) *GetStreamKeyInput {",
          "2646:  s.Arn = &v",
          "2647:  return s",
          "2648: }",
          "2650: type GetStreamKeyOutput struct {",
          "2651:  _ struct{} `type:\"structure\"`",
          "2654:  StreamKey *StreamKey `locationName:\"streamKey\" type:\"structure\"`",
          "2655: }",
          "2658: func (s GetStreamKeyOutput) String() string {",
          "2659:  return awsutil.Prettify(s)",
          "2660: }",
          "2663: func (s GetStreamKeyOutput) GoString() string {",
          "2664:  return s.String()",
          "2665: }",
          "2668: func (s *GetStreamKeyOutput) SetStreamKey(v *StreamKey) *GetStreamKeyOutput {",
          "2669:  s.StreamKey = v",
          "2670:  return s",
          "2671: }",
          "2673: type GetStreamOutput struct {",
          "2674:  _ struct{} `type:\"structure\"`",
          "2677:  Stream *Stream `locationName:\"stream\" type:\"structure\"`",
          "2678: }",
          "2681: func (s GetStreamOutput) String() string {",
          "2682:  return awsutil.Prettify(s)",
          "2683: }",
          "2686: func (s GetStreamOutput) GoString() string {",
          "2687:  return s.String()",
          "2688: }",
          "2691: func (s *GetStreamOutput) SetStream(v *Stream) *GetStreamOutput {",
          "2692:  s.Stream = v",
          "2693:  return s",
          "2694: }",
          "2696: type InternalServerException struct {",
          "2697:  _            struct{}                  `type:\"structure\"`",
          "2698:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2701:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "2703:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2704: }",
          "2707: func (s InternalServerException) String() string {",
          "2708:  return awsutil.Prettify(s)",
          "2709: }",
          "2712: func (s InternalServerException) GoString() string {",
          "2713:  return s.String()",
          "2714: }",
          "2716: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "2717:  return &InternalServerException{",
          "2718:   RespMetadata: v,",
          "2719:  }",
          "2720: }",
          "2723: func (s *InternalServerException) Code() string {",
          "2724:  return \"InternalServerException\"",
          "2725: }",
          "2728: func (s *InternalServerException) Message() string {",
          "2729:  if s.Message_ != nil {",
          "2730:   return *s.Message_",
          "2731:  }",
          "2732:  return \"\"",
          "2733: }",
          "2736: func (s *InternalServerException) OrigErr() error {",
          "2737:  return nil",
          "2738: }",
          "2740: func (s *InternalServerException) Error() string {",
          "2741:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2742: }",
          "2745: func (s *InternalServerException) StatusCode() int {",
          "2746:  return s.RespMetadata.StatusCode",
          "2747: }",
          "2750: func (s *InternalServerException) RequestID() string {",
          "2751:  return s.RespMetadata.RequestID",
          "2752: }",
          "2754: type ListChannelsInput struct {",
          "2755:  _ struct{} `type:\"structure\"`",
          "2758:  FilterByName *string `locationName:\"filterByName\" type:\"string\"`",
          "2761:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "2765:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2766: }",
          "2769: func (s ListChannelsInput) String() string {",
          "2770:  return awsutil.Prettify(s)",
          "2771: }",
          "2774: func (s ListChannelsInput) GoString() string {",
          "2775:  return s.String()",
          "2776: }",
          "2779: func (s *ListChannelsInput) Validate() error {",
          "2780:  invalidParams := request.ErrInvalidParams{Context: \"ListChannelsInput\"}",
          "2781:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2782:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2783:  }",
          "2785:  if invalidParams.Len() > 0 {",
          "2786:   return invalidParams",
          "2787:  }",
          "2788:  return nil",
          "2789: }",
          "2792: func (s *ListChannelsInput) SetFilterByName(v string) *ListChannelsInput {",
          "2793:  s.FilterByName = &v",
          "2794:  return s",
          "2795: }",
          "2798: func (s *ListChannelsInput) SetMaxResults(v int64) *ListChannelsInput {",
          "2799:  s.MaxResults = &v",
          "2800:  return s",
          "2801: }",
          "2804: func (s *ListChannelsInput) SetNextToken(v string) *ListChannelsInput {",
          "2805:  s.NextToken = &v",
          "2806:  return s",
          "2807: }",
          "2809: type ListChannelsOutput struct {",
          "2810:  _ struct{} `type:\"structure\"`",
          "2815:  Channels []*ChannelSummary `locationName:\"channels\" type:\"list\" required:\"true\"`",
          "2819:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2820: }",
          "2823: func (s ListChannelsOutput) String() string {",
          "2824:  return awsutil.Prettify(s)",
          "2825: }",
          "2828: func (s ListChannelsOutput) GoString() string {",
          "2829:  return s.String()",
          "2830: }",
          "2833: func (s *ListChannelsOutput) SetChannels(v []*ChannelSummary) *ListChannelsOutput {",
          "2834:  s.Channels = v",
          "2835:  return s",
          "2836: }",
          "2839: func (s *ListChannelsOutput) SetNextToken(v string) *ListChannelsOutput {",
          "2840:  s.NextToken = &v",
          "2841:  return s",
          "2842: }",
          "2844: type ListStreamKeysInput struct {",
          "2845:  _ struct{} `type:\"structure\"`",
          "2850:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2853:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "2857:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2858: }",
          "2861: func (s ListStreamKeysInput) String() string {",
          "2862:  return awsutil.Prettify(s)",
          "2863: }",
          "2866: func (s ListStreamKeysInput) GoString() string {",
          "2867:  return s.String()",
          "2868: }",
          "2871: func (s *ListStreamKeysInput) Validate() error {",
          "2872:  invalidParams := request.ErrInvalidParams{Context: \"ListStreamKeysInput\"}",
          "2873:  if s.ChannelArn == nil {",
          "2874:   invalidParams.Add(request.NewErrParamRequired(\"ChannelArn\"))",
          "2875:  }",
          "2876:  if s.ChannelArn != nil && len(*s.ChannelArn) < 1 {",
          "2877:   invalidParams.Add(request.NewErrParamMinLen(\"ChannelArn\", 1))",
          "2878:  }",
          "2879:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2880:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2881:  }",
          "2883:  if invalidParams.Len() > 0 {",
          "2884:   return invalidParams",
          "2885:  }",
          "2886:  return nil",
          "2887: }",
          "2890: func (s *ListStreamKeysInput) SetChannelArn(v string) *ListStreamKeysInput {",
          "2891:  s.ChannelArn = &v",
          "2892:  return s",
          "2893: }",
          "2896: func (s *ListStreamKeysInput) SetMaxResults(v int64) *ListStreamKeysInput {",
          "2897:  s.MaxResults = &v",
          "2898:  return s",
          "2899: }",
          "2902: func (s *ListStreamKeysInput) SetNextToken(v string) *ListStreamKeysInput {",
          "2903:  s.NextToken = &v",
          "2904:  return s",
          "2905: }",
          "2907: type ListStreamKeysOutput struct {",
          "2908:  _ struct{} `type:\"structure\"`",
          "2912:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2917:  StreamKeys []*StreamKeySummary `locationName:\"streamKeys\" type:\"list\" required:\"true\"`",
          "2918: }",
          "2921: func (s ListStreamKeysOutput) String() string {",
          "2922:  return awsutil.Prettify(s)",
          "2923: }",
          "2926: func (s ListStreamKeysOutput) GoString() string {",
          "2927:  return s.String()",
          "2928: }",
          "2931: func (s *ListStreamKeysOutput) SetNextToken(v string) *ListStreamKeysOutput {",
          "2932:  s.NextToken = &v",
          "2933:  return s",
          "2934: }",
          "2937: func (s *ListStreamKeysOutput) SetStreamKeys(v []*StreamKeySummary) *ListStreamKeysOutput {",
          "2938:  s.StreamKeys = v",
          "2939:  return s",
          "2940: }",
          "2942: type ListStreamsInput struct {",
          "2943:  _ struct{} `type:\"structure\"`",
          "2946:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "2950:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2951: }",
          "2954: func (s ListStreamsInput) String() string {",
          "2955:  return awsutil.Prettify(s)",
          "2956: }",
          "2959: func (s ListStreamsInput) GoString() string {",
          "2960:  return s.String()",
          "2961: }",
          "2964: func (s *ListStreamsInput) Validate() error {",
          "2965:  invalidParams := request.ErrInvalidParams{Context: \"ListStreamsInput\"}",
          "2966:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "2967:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "2968:  }",
          "2970:  if invalidParams.Len() > 0 {",
          "2971:   return invalidParams",
          "2972:  }",
          "2973:  return nil",
          "2974: }",
          "2977: func (s *ListStreamsInput) SetMaxResults(v int64) *ListStreamsInput {",
          "2978:  s.MaxResults = &v",
          "2979:  return s",
          "2980: }",
          "2983: func (s *ListStreamsInput) SetNextToken(v string) *ListStreamsInput {",
          "2984:  s.NextToken = &v",
          "2985:  return s",
          "2986: }",
          "2988: type ListStreamsOutput struct {",
          "2989:  _ struct{} `type:\"structure\"`",
          "2993:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "2998:  Streams []*StreamSummary `locationName:\"streams\" type:\"list\" required:\"true\"`",
          "2999: }",
          "3002: func (s ListStreamsOutput) String() string {",
          "3003:  return awsutil.Prettify(s)",
          "3004: }",
          "3007: func (s ListStreamsOutput) GoString() string {",
          "3008:  return s.String()",
          "3009: }",
          "3012: func (s *ListStreamsOutput) SetNextToken(v string) *ListStreamsOutput {",
          "3013:  s.NextToken = &v",
          "3014:  return s",
          "3015: }",
          "3018: func (s *ListStreamsOutput) SetStreams(v []*StreamSummary) *ListStreamsOutput {",
          "3019:  s.Streams = v",
          "3020:  return s",
          "3021: }",
          "3023: type ListTagsForResourceInput struct {",
          "3024:  _ struct{} `type:\"structure\"`",
          "3027:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "3031:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3036:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3037: }",
          "3040: func (s ListTagsForResourceInput) String() string {",
          "3041:  return awsutil.Prettify(s)",
          "3042: }",
          "3045: func (s ListTagsForResourceInput) GoString() string {",
          "3046:  return s.String()",
          "3047: }",
          "3050: func (s *ListTagsForResourceInput) Validate() error {",
          "3051:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "3052:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "3053:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "3054:  }",
          "3055:  if s.ResourceArn == nil {",
          "3056:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "3057:  }",
          "3058:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "3059:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "3060:  }",
          "3062:  if invalidParams.Len() > 0 {",
          "3063:   return invalidParams",
          "3064:  }",
          "3065:  return nil",
          "3066: }",
          "3069: func (s *ListTagsForResourceInput) SetMaxResults(v int64) *ListTagsForResourceInput {",
          "3070:  s.MaxResults = &v",
          "3071:  return s",
          "3072: }",
          "3075: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "3076:  s.NextToken = &v",
          "3077:  return s",
          "3078: }",
          "3081: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "3082:  s.ResourceArn = &v",
          "3083:  return s",
          "3084: }",
          "3086: type ListTagsForResourceOutput struct {",
          "3087:  _ struct{} `type:\"structure\"`",
          "3091:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3094:  Tags map[string]*string `locationName:\"tags\" type:\"map\" required:\"true\"`",
          "3095: }",
          "3098: func (s ListTagsForResourceOutput) String() string {",
          "3099:  return awsutil.Prettify(s)",
          "3100: }",
          "3103: func (s ListTagsForResourceOutput) GoString() string {",
          "3104:  return s.String()",
          "3105: }",
          "3108: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "3109:  s.NextToken = &v",
          "3110:  return s",
          "3111: }",
          "3114: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "3115:  s.Tags = v",
          "3116:  return s",
          "3117: }",
          "3119: type PutMetadataInput struct {",
          "3120:  _ struct{} `type:\"structure\"`",
          "3126:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3131:  Metadata *string `locationName:\"metadata\" type:\"string\" required:\"true\"`",
          "3132: }",
          "3135: func (s PutMetadataInput) String() string {",
          "3136:  return awsutil.Prettify(s)",
          "3137: }",
          "3140: func (s PutMetadataInput) GoString() string {",
          "3141:  return s.String()",
          "3142: }",
          "3145: func (s *PutMetadataInput) Validate() error {",
          "3146:  invalidParams := request.ErrInvalidParams{Context: \"PutMetadataInput\"}",
          "3147:  if s.ChannelArn == nil {",
          "3148:   invalidParams.Add(request.NewErrParamRequired(\"ChannelArn\"))",
          "3149:  }",
          "3150:  if s.ChannelArn != nil && len(*s.ChannelArn) < 1 {",
          "3151:   invalidParams.Add(request.NewErrParamMinLen(\"ChannelArn\", 1))",
          "3152:  }",
          "3153:  if s.Metadata == nil {",
          "3154:   invalidParams.Add(request.NewErrParamRequired(\"Metadata\"))",
          "3155:  }",
          "3157:  if invalidParams.Len() > 0 {",
          "3158:   return invalidParams",
          "3159:  }",
          "3160:  return nil",
          "3161: }",
          "3164: func (s *PutMetadataInput) SetChannelArn(v string) *PutMetadataInput {",
          "3165:  s.ChannelArn = &v",
          "3166:  return s",
          "3167: }",
          "3170: func (s *PutMetadataInput) SetMetadata(v string) *PutMetadataInput {",
          "3171:  s.Metadata = &v",
          "3172:  return s",
          "3173: }",
          "3175: type PutMetadataOutput struct {",
          "3176:  _ struct{} `type:\"structure\"`",
          "3177: }",
          "3180: func (s PutMetadataOutput) String() string {",
          "3181:  return awsutil.Prettify(s)",
          "3182: }",
          "3185: func (s PutMetadataOutput) GoString() string {",
          "3186:  return s.String()",
          "3187: }",
          "3189: type ResourceNotFoundException struct {",
          "3190:  _            struct{}                  `type:\"structure\"`",
          "3191:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3194:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3196:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3197: }",
          "3200: func (s ResourceNotFoundException) String() string {",
          "3201:  return awsutil.Prettify(s)",
          "3202: }",
          "3205: func (s ResourceNotFoundException) GoString() string {",
          "3206:  return s.String()",
          "3207: }",
          "3209: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "3210:  return &ResourceNotFoundException{",
          "3211:   RespMetadata: v,",
          "3212:  }",
          "3213: }",
          "3216: func (s *ResourceNotFoundException) Code() string {",
          "3217:  return \"ResourceNotFoundException\"",
          "3218: }",
          "3221: func (s *ResourceNotFoundException) Message() string {",
          "3222:  if s.Message_ != nil {",
          "3223:   return *s.Message_",
          "3224:  }",
          "3225:  return \"\"",
          "3226: }",
          "3229: func (s *ResourceNotFoundException) OrigErr() error {",
          "3230:  return nil",
          "3231: }",
          "3233: func (s *ResourceNotFoundException) Error() string {",
          "3234:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3235: }",
          "3238: func (s *ResourceNotFoundException) StatusCode() int {",
          "3239:  return s.RespMetadata.StatusCode",
          "3240: }",
          "3243: func (s *ResourceNotFoundException) RequestID() string {",
          "3244:  return s.RespMetadata.RequestID",
          "3245: }",
          "3247: type ServiceQuotaExceededException struct {",
          "3248:  _            struct{}                  `type:\"structure\"`",
          "3249:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3252:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3254:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3255: }",
          "3258: func (s ServiceQuotaExceededException) String() string {",
          "3259:  return awsutil.Prettify(s)",
          "3260: }",
          "3263: func (s ServiceQuotaExceededException) GoString() string {",
          "3264:  return s.String()",
          "3265: }",
          "3267: func newErrorServiceQuotaExceededException(v protocol.ResponseMetadata) error {",
          "3268:  return &ServiceQuotaExceededException{",
          "3269:   RespMetadata: v,",
          "3270:  }",
          "3271: }",
          "3274: func (s *ServiceQuotaExceededException) Code() string {",
          "3275:  return \"ServiceQuotaExceededException\"",
          "3276: }",
          "3279: func (s *ServiceQuotaExceededException) Message() string {",
          "3280:  if s.Message_ != nil {",
          "3281:   return *s.Message_",
          "3282:  }",
          "3283:  return \"\"",
          "3284: }",
          "3287: func (s *ServiceQuotaExceededException) OrigErr() error {",
          "3288:  return nil",
          "3289: }",
          "3291: func (s *ServiceQuotaExceededException) Error() string {",
          "3292:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3293: }",
          "3296: func (s *ServiceQuotaExceededException) StatusCode() int {",
          "3297:  return s.RespMetadata.StatusCode",
          "3298: }",
          "3301: func (s *ServiceQuotaExceededException) RequestID() string {",
          "3302:  return s.RespMetadata.RequestID",
          "3303: }",
          "3305: type StopStreamInput struct {",
          "3306:  _ struct{} `type:\"structure\"`",
          "3311:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3312: }",
          "3315: func (s StopStreamInput) String() string {",
          "3316:  return awsutil.Prettify(s)",
          "3317: }",
          "3320: func (s StopStreamInput) GoString() string {",
          "3321:  return s.String()",
          "3322: }",
          "3325: func (s *StopStreamInput) Validate() error {",
          "3326:  invalidParams := request.ErrInvalidParams{Context: \"StopStreamInput\"}",
          "3327:  if s.ChannelArn == nil {",
          "3328:   invalidParams.Add(request.NewErrParamRequired(\"ChannelArn\"))",
          "3329:  }",
          "3330:  if s.ChannelArn != nil && len(*s.ChannelArn) < 1 {",
          "3331:   invalidParams.Add(request.NewErrParamMinLen(\"ChannelArn\", 1))",
          "3332:  }",
          "3334:  if invalidParams.Len() > 0 {",
          "3335:   return invalidParams",
          "3336:  }",
          "3337:  return nil",
          "3338: }",
          "3341: func (s *StopStreamInput) SetChannelArn(v string) *StopStreamInput {",
          "3342:  s.ChannelArn = &v",
          "3343:  return s",
          "3344: }",
          "3346: type StopStreamOutput struct {",
          "3347:  _ struct{} `type:\"structure\"`",
          "3348: }",
          "3351: func (s StopStreamOutput) String() string {",
          "3352:  return awsutil.Prettify(s)",
          "3353: }",
          "3356: func (s StopStreamOutput) GoString() string {",
          "3357:  return s.String()",
          "3358: }",
          "3361: type Stream struct {",
          "3362:  _ struct{} `type:\"structure\"`",
          "3365:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\"`",
          "3368:  Health *string `locationName:\"health\" type:\"string\" enum:\"StreamHealth\"`",
          "3372:  PlaybackUrl *string `locationName:\"playbackUrl\" type:\"string\"`",
          "3375:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "3378:  State *string `locationName:\"state\" type:\"string\" enum:\"StreamState\"`",
          "3381:  ViewerCount *int64 `locationName:\"viewerCount\" type:\"long\"`",
          "3382: }",
          "3385: func (s Stream) String() string {",
          "3386:  return awsutil.Prettify(s)",
          "3387: }",
          "3390: func (s Stream) GoString() string {",
          "3391:  return s.String()",
          "3392: }",
          "3395: func (s *Stream) SetChannelArn(v string) *Stream {",
          "3396:  s.ChannelArn = &v",
          "3397:  return s",
          "3398: }",
          "3401: func (s *Stream) SetHealth(v string) *Stream {",
          "3402:  s.Health = &v",
          "3403:  return s",
          "3404: }",
          "3407: func (s *Stream) SetPlaybackUrl(v string) *Stream {",
          "3408:  s.PlaybackUrl = &v",
          "3409:  return s",
          "3410: }",
          "3413: func (s *Stream) SetStartTime(v time.Time) *Stream {",
          "3414:  s.StartTime = &v",
          "3415:  return s",
          "3416: }",
          "3419: func (s *Stream) SetState(v string) *Stream {",
          "3420:  s.State = &v",
          "3421:  return s",
          "3422: }",
          "3425: func (s *Stream) SetViewerCount(v int64) *Stream {",
          "3426:  s.ViewerCount = &v",
          "3427:  return s",
          "3428: }",
          "3431: type StreamKey struct {",
          "3432:  _ struct{} `type:\"structure\"`",
          "3435:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3438:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\"`",
          "3441:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3444:  Value *string `locationName:\"value\" type:\"string\"`",
          "3445: }",
          "3448: func (s StreamKey) String() string {",
          "3449:  return awsutil.Prettify(s)",
          "3450: }",
          "3453: func (s StreamKey) GoString() string {",
          "3454:  return s.String()",
          "3455: }",
          "3458: func (s *StreamKey) SetArn(v string) *StreamKey {",
          "3459:  s.Arn = &v",
          "3460:  return s",
          "3461: }",
          "3464: func (s *StreamKey) SetChannelArn(v string) *StreamKey {",
          "3465:  s.ChannelArn = &v",
          "3466:  return s",
          "3467: }",
          "3470: func (s *StreamKey) SetTags(v map[string]*string) *StreamKey {",
          "3471:  s.Tags = v",
          "3472:  return s",
          "3473: }",
          "3476: func (s *StreamKey) SetValue(v string) *StreamKey {",
          "3477:  s.Value = &v",
          "3478:  return s",
          "3479: }",
          "3482: type StreamKeySummary struct {",
          "3483:  _ struct{} `type:\"structure\"`",
          "3486:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3489:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\"`",
          "3492:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3493: }",
          "3496: func (s StreamKeySummary) String() string {",
          "3497:  return awsutil.Prettify(s)",
          "3498: }",
          "3501: func (s StreamKeySummary) GoString() string {",
          "3502:  return s.String()",
          "3503: }",
          "3506: func (s *StreamKeySummary) SetArn(v string) *StreamKeySummary {",
          "3507:  s.Arn = &v",
          "3508:  return s",
          "3509: }",
          "3512: func (s *StreamKeySummary) SetChannelArn(v string) *StreamKeySummary {",
          "3513:  s.ChannelArn = &v",
          "3514:  return s",
          "3515: }",
          "3518: func (s *StreamKeySummary) SetTags(v map[string]*string) *StreamKeySummary {",
          "3519:  s.Tags = v",
          "3520:  return s",
          "3521: }",
          "3524: type StreamSummary struct {",
          "3525:  _ struct{} `type:\"structure\"`",
          "3528:  ChannelArn *string `locationName:\"channelArn\" min:\"1\" type:\"string\"`",
          "3531:  Health *string `locationName:\"health\" type:\"string\" enum:\"StreamHealth\"`",
          "3534:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "3537:  State *string `locationName:\"state\" type:\"string\" enum:\"StreamState\"`",
          "3540:  ViewerCount *int64 `locationName:\"viewerCount\" type:\"long\"`",
          "3541: }",
          "3544: func (s StreamSummary) String() string {",
          "3545:  return awsutil.Prettify(s)",
          "3546: }",
          "3549: func (s StreamSummary) GoString() string {",
          "3550:  return s.String()",
          "3551: }",
          "3554: func (s *StreamSummary) SetChannelArn(v string) *StreamSummary {",
          "3555:  s.ChannelArn = &v",
          "3556:  return s",
          "3557: }",
          "3560: func (s *StreamSummary) SetHealth(v string) *StreamSummary {",
          "3561:  s.Health = &v",
          "3562:  return s",
          "3563: }",
          "3566: func (s *StreamSummary) SetStartTime(v time.Time) *StreamSummary {",
          "3567:  s.StartTime = &v",
          "3568:  return s",
          "3569: }",
          "3572: func (s *StreamSummary) SetState(v string) *StreamSummary {",
          "3573:  s.State = &v",
          "3574:  return s",
          "3575: }",
          "3578: func (s *StreamSummary) SetViewerCount(v int64) *StreamSummary {",
          "3579:  s.ViewerCount = &v",
          "3580:  return s",
          "3581: }",
          "3583: type StreamUnavailable struct {",
          "3584:  _            struct{}                  `type:\"structure\"`",
          "3585:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3588:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3590:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3591: }",
          "3594: func (s StreamUnavailable) String() string {",
          "3595:  return awsutil.Prettify(s)",
          "3596: }",
          "3599: func (s StreamUnavailable) GoString() string {",
          "3600:  return s.String()",
          "3601: }",
          "3603: func newErrorStreamUnavailable(v protocol.ResponseMetadata) error {",
          "3604:  return &StreamUnavailable{",
          "3605:   RespMetadata: v,",
          "3606:  }",
          "3607: }",
          "3610: func (s *StreamUnavailable) Code() string {",
          "3611:  return \"StreamUnavailable\"",
          "3612: }",
          "3615: func (s *StreamUnavailable) Message() string {",
          "3616:  if s.Message_ != nil {",
          "3617:   return *s.Message_",
          "3618:  }",
          "3619:  return \"\"",
          "3620: }",
          "3623: func (s *StreamUnavailable) OrigErr() error {",
          "3624:  return nil",
          "3625: }",
          "3627: func (s *StreamUnavailable) Error() string {",
          "3628:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3629: }",
          "3632: func (s *StreamUnavailable) StatusCode() int {",
          "3633:  return s.RespMetadata.StatusCode",
          "3634: }",
          "3637: func (s *StreamUnavailable) RequestID() string {",
          "3638:  return s.RespMetadata.RequestID",
          "3639: }",
          "3641: type TagResourceInput struct {",
          "3642:  _ struct{} `type:\"structure\"`",
          "3647:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3652:  Tags map[string]*string `locationName:\"tags\" type:\"map\" required:\"true\"`",
          "3653: }",
          "3656: func (s TagResourceInput) String() string {",
          "3657:  return awsutil.Prettify(s)",
          "3658: }",
          "3661: func (s TagResourceInput) GoString() string {",
          "3662:  return s.String()",
          "3663: }",
          "3666: func (s *TagResourceInput) Validate() error {",
          "3667:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "3668:  if s.ResourceArn == nil {",
          "3669:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "3670:  }",
          "3671:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "3672:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "3673:  }",
          "3674:  if s.Tags == nil {",
          "3675:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "3676:  }",
          "3678:  if invalidParams.Len() > 0 {",
          "3679:   return invalidParams",
          "3680:  }",
          "3681:  return nil",
          "3682: }",
          "3685: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "3686:  s.ResourceArn = &v",
          "3687:  return s",
          "3688: }",
          "3691: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "3692:  s.Tags = v",
          "3693:  return s",
          "3694: }",
          "3696: type TagResourceOutput struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3698: }",
          "3701: func (s TagResourceOutput) String() string {",
          "3702:  return awsutil.Prettify(s)",
          "3703: }",
          "3706: func (s TagResourceOutput) GoString() string {",
          "3707:  return s.String()",
          "3708: }",
          "3710: type ThrottlingException struct {",
          "3711:  _            struct{}                  `type:\"structure\"`",
          "3712:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3715:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3717:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3718: }",
          "3721: func (s ThrottlingException) String() string {",
          "3722:  return awsutil.Prettify(s)",
          "3723: }",
          "3726: func (s ThrottlingException) GoString() string {",
          "3727:  return s.String()",
          "3728: }",
          "3730: func newErrorThrottlingException(v protocol.ResponseMetadata) error {",
          "3731:  return &ThrottlingException{",
          "3732:   RespMetadata: v,",
          "3733:  }",
          "3734: }",
          "3737: func (s *ThrottlingException) Code() string {",
          "3738:  return \"ThrottlingException\"",
          "3739: }",
          "3742: func (s *ThrottlingException) Message() string {",
          "3743:  if s.Message_ != nil {",
          "3744:   return *s.Message_",
          "3745:  }",
          "3746:  return \"\"",
          "3747: }",
          "3750: func (s *ThrottlingException) OrigErr() error {",
          "3751:  return nil",
          "3752: }",
          "3754: func (s *ThrottlingException) Error() string {",
          "3755:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3756: }",
          "3759: func (s *ThrottlingException) StatusCode() int {",
          "3760:  return s.RespMetadata.StatusCode",
          "3761: }",
          "3764: func (s *ThrottlingException) RequestID() string {",
          "3765:  return s.RespMetadata.RequestID",
          "3766: }",
          "3768: type UntagResourceInput struct {",
          "3769:  _ struct{} `type:\"structure\"`",
          "3774:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3779:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "3780: }",
          "3783: func (s UntagResourceInput) String() string {",
          "3784:  return awsutil.Prettify(s)",
          "3785: }",
          "3788: func (s UntagResourceInput) GoString() string {",
          "3789:  return s.String()",
          "3790: }",
          "3793: func (s *UntagResourceInput) Validate() error {",
          "3794:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "3795:  if s.ResourceArn == nil {",
          "3796:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "3797:  }",
          "3798:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "3799:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "3800:  }",
          "3801:  if s.TagKeys == nil {",
          "3802:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "3803:  }",
          "3805:  if invalidParams.Len() > 0 {",
          "3806:   return invalidParams",
          "3807:  }",
          "3808:  return nil",
          "3809: }",
          "3812: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "3813:  s.ResourceArn = &v",
          "3814:  return s",
          "3815: }",
          "3818: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "3819:  s.TagKeys = v",
          "3820:  return s",
          "3821: }",
          "3823: type UntagResourceOutput struct {",
          "3824:  _ struct{} `type:\"structure\"`",
          "3825: }",
          "3828: func (s UntagResourceOutput) String() string {",
          "3829:  return awsutil.Prettify(s)",
          "3830: }",
          "3833: func (s UntagResourceOutput) GoString() string {",
          "3834:  return s.String()",
          "3835: }",
          "3837: type UpdateChannelInput struct {",
          "3838:  _ struct{} `type:\"structure\"`",
          "3843:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3846:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "3849:  Name *string `locationName:\"name\" type:\"string\"`",
          "3856:  Type *string `locationName:\"type\" type:\"string\" enum:\"ChannelType\"`",
          "3857: }",
          "3860: func (s UpdateChannelInput) String() string {",
          "3861:  return awsutil.Prettify(s)",
          "3862: }",
          "3865: func (s UpdateChannelInput) GoString() string {",
          "3866:  return s.String()",
          "3867: }",
          "3870: func (s *UpdateChannelInput) Validate() error {",
          "3871:  invalidParams := request.ErrInvalidParams{Context: \"UpdateChannelInput\"}",
          "3872:  if s.Arn == nil {",
          "3873:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "3874:  }",
          "3875:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "3876:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "3877:  }",
          "3879:  if invalidParams.Len() > 0 {",
          "3880:   return invalidParams",
          "3881:  }",
          "3882:  return nil",
          "3883: }",
          "3886: func (s *UpdateChannelInput) SetArn(v string) *UpdateChannelInput {",
          "3887:  s.Arn = &v",
          "3888:  return s",
          "3889: }",
          "3892: func (s *UpdateChannelInput) SetLatencyMode(v string) *UpdateChannelInput {",
          "3893:  s.LatencyMode = &v",
          "3894:  return s",
          "3895: }",
          "3898: func (s *UpdateChannelInput) SetName(v string) *UpdateChannelInput {",
          "3899:  s.Name = &v",
          "3900:  return s",
          "3901: }",
          "3904: func (s *UpdateChannelInput) SetType(v string) *UpdateChannelInput {",
          "3905:  s.Type = &v",
          "3906:  return s",
          "3907: }",
          "3909: type UpdateChannelOutput struct {",
          "3910:  _ struct{} `type:\"structure\"`",
          "3913:  Channel *Channel `locationName:\"channel\" type:\"structure\"`",
          "3914: }",
          "3917: func (s UpdateChannelOutput) String() string {",
          "3918:  return awsutil.Prettify(s)",
          "3919: }",
          "3922: func (s UpdateChannelOutput) GoString() string {",
          "3923:  return s.String()",
          "3924: }",
          "3927: func (s *UpdateChannelOutput) SetChannel(v *Channel) *UpdateChannelOutput {",
          "3928:  s.Channel = v",
          "3929:  return s",
          "3930: }",
          "3932: type ValidationException struct {",
          "3933:  _            struct{}                  `type:\"structure\"`",
          "3934:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3937:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3939:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3940: }",
          "3943: func (s ValidationException) String() string {",
          "3944:  return awsutil.Prettify(s)",
          "3945: }",
          "3948: func (s ValidationException) GoString() string {",
          "3949:  return s.String()",
          "3950: }",
          "3952: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "3953:  return &ValidationException{",
          "3954:   RespMetadata: v,",
          "3955:  }",
          "3956: }",
          "3959: func (s *ValidationException) Code() string {",
          "3960:  return \"ValidationException\"",
          "3961: }",
          "3964: func (s *ValidationException) Message() string {",
          "3965:  if s.Message_ != nil {",
          "3966:   return *s.Message_",
          "3967:  }",
          "3968:  return \"\"",
          "3969: }",
          "3972: func (s *ValidationException) OrigErr() error {",
          "3973:  return nil",
          "3974: }",
          "3976: func (s *ValidationException) Error() string {",
          "3977:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3978: }",
          "3981: func (s *ValidationException) StatusCode() int {",
          "3982:  return s.RespMetadata.StatusCode",
          "3983: }",
          "3986: func (s *ValidationException) RequestID() string {",
          "3987:  return s.RespMetadata.RequestID",
          "3988: }",
          "3990: const (",
          "3992:  ChannelLatencyModeNormal = \"NORMAL\"",
          "3995:  ChannelLatencyModeLow = \"LOW\"",
          "3996: )",
          "3998: const (",
          "4000:  ChannelTypeBasic = \"BASIC\"",
          "4003:  ChannelTypeStandard = \"STANDARD\"",
          "4004: )",
          "4006: const (",
          "4008:  StreamHealthHealthy = \"HEALTHY\"",
          "4011:  StreamHealthStarving = \"STARVING\"",
          "4014:  StreamHealthUnknown = \"UNKNOWN\"",
          "4015: )",
          "4017: const (",
          "4019:  StreamStateLive = \"LIVE\"",
          "4022:  StreamStateOffline = \"OFFLINE\"",
          "4023: )",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: package ivs",
          "",
          "---------------"
        ],
        "service/ivs/errors.go||service/ivs/errors.go": [
          "File: service/ivs/errors.go -> service/ivs/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package ivs",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "13:  ErrCodeAccessDeniedException = \"AccessDeniedException\"",
          "17:  ErrCodeChannelNotBroadcasting = \"ChannelNotBroadcasting\"",
          "21:  ErrCodeConflictException = \"ConflictException\"",
          "25:  ErrCodeInternalServerException = \"InternalServerException\"",
          "29:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "33:  ErrCodeServiceQuotaExceededException = \"ServiceQuotaExceededException\"",
          "37:  ErrCodeStreamUnavailable = \"StreamUnavailable\"",
          "41:  ErrCodeThrottlingException = \"ThrottlingException\"",
          "45:  ErrCodeValidationException = \"ValidationException\"",
          "46: )",
          "48: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "49:  \"AccessDeniedException\":         newErrorAccessDeniedException,",
          "50:  \"ChannelNotBroadcasting\":        newErrorChannelNotBroadcasting,",
          "51:  \"ConflictException\":             newErrorConflictException,",
          "52:  \"InternalServerException\":       newErrorInternalServerException,",
          "53:  \"ResourceNotFoundException\":     newErrorResourceNotFoundException,",
          "54:  \"ServiceQuotaExceededException\": newErrorServiceQuotaExceededException,",
          "55:  \"StreamUnavailable\":             newErrorStreamUnavailable,",
          "56:  \"ThrottlingException\":           newErrorThrottlingException,",
          "57:  \"ValidationException\":           newErrorValidationException,",
          "58: }",
          "",
          "---------------"
        ],
        "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go": [
          "File: service/ivs/ivsiface/interface.go -> service/ivs/ivsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package ivsiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/ivs\"",
          "15: )",
          "62: type IVSAPI interface {",
          "63:  BatchGetChannel(*ivs.BatchGetChannelInput) (*ivs.BatchGetChannelOutput, error)",
          "64:  BatchGetChannelWithContext(aws.Context, *ivs.BatchGetChannelInput, ...request.Option) (*ivs.BatchGetChannelOutput, error)",
          "65:  BatchGetChannelRequest(*ivs.BatchGetChannelInput) (*request.Request, *ivs.BatchGetChannelOutput)",
          "67:  BatchGetStreamKey(*ivs.BatchGetStreamKeyInput) (*ivs.BatchGetStreamKeyOutput, error)",
          "68:  BatchGetStreamKeyWithContext(aws.Context, *ivs.BatchGetStreamKeyInput, ...request.Option) (*ivs.BatchGetStreamKeyOutput, error)",
          "69:  BatchGetStreamKeyRequest(*ivs.BatchGetStreamKeyInput) (*request.Request, *ivs.BatchGetStreamKeyOutput)",
          "71:  CreateChannel(*ivs.CreateChannelInput) (*ivs.CreateChannelOutput, error)",
          "72:  CreateChannelWithContext(aws.Context, *ivs.CreateChannelInput, ...request.Option) (*ivs.CreateChannelOutput, error)",
          "73:  CreateChannelRequest(*ivs.CreateChannelInput) (*request.Request, *ivs.CreateChannelOutput)",
          "75:  CreateStreamKey(*ivs.CreateStreamKeyInput) (*ivs.CreateStreamKeyOutput, error)",
          "76:  CreateStreamKeyWithContext(aws.Context, *ivs.CreateStreamKeyInput, ...request.Option) (*ivs.CreateStreamKeyOutput, error)",
          "77:  CreateStreamKeyRequest(*ivs.CreateStreamKeyInput) (*request.Request, *ivs.CreateStreamKeyOutput)",
          "79:  DeleteChannel(*ivs.DeleteChannelInput) (*ivs.DeleteChannelOutput, error)",
          "80:  DeleteChannelWithContext(aws.Context, *ivs.DeleteChannelInput, ...request.Option) (*ivs.DeleteChannelOutput, error)",
          "81:  DeleteChannelRequest(*ivs.DeleteChannelInput) (*request.Request, *ivs.DeleteChannelOutput)",
          "83:  DeleteStreamKey(*ivs.DeleteStreamKeyInput) (*ivs.DeleteStreamKeyOutput, error)",
          "84:  DeleteStreamKeyWithContext(aws.Context, *ivs.DeleteStreamKeyInput, ...request.Option) (*ivs.DeleteStreamKeyOutput, error)",
          "85:  DeleteStreamKeyRequest(*ivs.DeleteStreamKeyInput) (*request.Request, *ivs.DeleteStreamKeyOutput)",
          "87:  GetChannel(*ivs.GetChannelInput) (*ivs.GetChannelOutput, error)",
          "88:  GetChannelWithContext(aws.Context, *ivs.GetChannelInput, ...request.Option) (*ivs.GetChannelOutput, error)",
          "89:  GetChannelRequest(*ivs.GetChannelInput) (*request.Request, *ivs.GetChannelOutput)",
          "91:  GetStream(*ivs.GetStreamInput) (*ivs.GetStreamOutput, error)",
          "92:  GetStreamWithContext(aws.Context, *ivs.GetStreamInput, ...request.Option) (*ivs.GetStreamOutput, error)",
          "93:  GetStreamRequest(*ivs.GetStreamInput) (*request.Request, *ivs.GetStreamOutput)",
          "95:  GetStreamKey(*ivs.GetStreamKeyInput) (*ivs.GetStreamKeyOutput, error)",
          "96:  GetStreamKeyWithContext(aws.Context, *ivs.GetStreamKeyInput, ...request.Option) (*ivs.GetStreamKeyOutput, error)",
          "97:  GetStreamKeyRequest(*ivs.GetStreamKeyInput) (*request.Request, *ivs.GetStreamKeyOutput)",
          "99:  ListChannels(*ivs.ListChannelsInput) (*ivs.ListChannelsOutput, error)",
          "100:  ListChannelsWithContext(aws.Context, *ivs.ListChannelsInput, ...request.Option) (*ivs.ListChannelsOutput, error)",
          "101:  ListChannelsRequest(*ivs.ListChannelsInput) (*request.Request, *ivs.ListChannelsOutput)",
          "103:  ListChannelsPages(*ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool) error",
          "104:  ListChannelsPagesWithContext(aws.Context, *ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool, ...request.Option) error",
          "106:  ListStreamKeys(*ivs.ListStreamKeysInput) (*ivs.ListStreamKeysOutput, error)",
          "107:  ListStreamKeysWithContext(aws.Context, *ivs.ListStreamKeysInput, ...request.Option) (*ivs.ListStreamKeysOutput, error)",
          "108:  ListStreamKeysRequest(*ivs.ListStreamKeysInput) (*request.Request, *ivs.ListStreamKeysOutput)",
          "110:  ListStreamKeysPages(*ivs.ListStreamKeysInput, func(*ivs.ListStreamKeysOutput, bool) bool) error",
          "111:  ListStreamKeysPagesWithContext(aws.Context, *ivs.ListStreamKeysInput, func(*ivs.ListStreamKeysOutput, bool) bool, ...request.Option) error",
          "113:  ListStreams(*ivs.ListStreamsInput) (*ivs.ListStreamsOutput, error)",
          "114:  ListStreamsWithContext(aws.Context, *ivs.ListStreamsInput, ...request.Option) (*ivs.ListStreamsOutput, error)",
          "115:  ListStreamsRequest(*ivs.ListStreamsInput) (*request.Request, *ivs.ListStreamsOutput)",
          "117:  ListStreamsPages(*ivs.ListStreamsInput, func(*ivs.ListStreamsOutput, bool) bool) error",
          "118:  ListStreamsPagesWithContext(aws.Context, *ivs.ListStreamsInput, func(*ivs.ListStreamsOutput, bool) bool, ...request.Option) error",
          "120:  ListTagsForResource(*ivs.ListTagsForResourceInput) (*ivs.ListTagsForResourceOutput, error)",
          "121:  ListTagsForResourceWithContext(aws.Context, *ivs.ListTagsForResourceInput, ...request.Option) (*ivs.ListTagsForResourceOutput, error)",
          "122:  ListTagsForResourceRequest(*ivs.ListTagsForResourceInput) (*request.Request, *ivs.ListTagsForResourceOutput)",
          "124:  ListTagsForResourcePages(*ivs.ListTagsForResourceInput, func(*ivs.ListTagsForResourceOutput, bool) bool) error",
          "125:  ListTagsForResourcePagesWithContext(aws.Context, *ivs.ListTagsForResourceInput, func(*ivs.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "127:  PutMetadata(*ivs.PutMetadataInput) (*ivs.PutMetadataOutput, error)",
          "128:  PutMetadataWithContext(aws.Context, *ivs.PutMetadataInput, ...request.Option) (*ivs.PutMetadataOutput, error)",
          "129:  PutMetadataRequest(*ivs.PutMetadataInput) (*request.Request, *ivs.PutMetadataOutput)",
          "131:  StopStream(*ivs.StopStreamInput) (*ivs.StopStreamOutput, error)",
          "132:  StopStreamWithContext(aws.Context, *ivs.StopStreamInput, ...request.Option) (*ivs.StopStreamOutput, error)",
          "133:  StopStreamRequest(*ivs.StopStreamInput) (*request.Request, *ivs.StopStreamOutput)",
          "135:  TagResource(*ivs.TagResourceInput) (*ivs.TagResourceOutput, error)",
          "136:  TagResourceWithContext(aws.Context, *ivs.TagResourceInput, ...request.Option) (*ivs.TagResourceOutput, error)",
          "137:  TagResourceRequest(*ivs.TagResourceInput) (*request.Request, *ivs.TagResourceOutput)",
          "139:  UntagResource(*ivs.UntagResourceInput) (*ivs.UntagResourceOutput, error)",
          "140:  UntagResourceWithContext(aws.Context, *ivs.UntagResourceInput, ...request.Option) (*ivs.UntagResourceOutput, error)",
          "141:  UntagResourceRequest(*ivs.UntagResourceInput) (*request.Request, *ivs.UntagResourceOutput)",
          "143:  UpdateChannel(*ivs.UpdateChannelInput) (*ivs.UpdateChannelOutput, error)",
          "144:  UpdateChannelWithContext(aws.Context, *ivs.UpdateChannelInput, ...request.Option) (*ivs.UpdateChannelOutput, error)",
          "145:  UpdateChannelRequest(*ivs.UpdateChannelInput) (*request.Request, *ivs.UpdateChannelOutput)",
          "146: }",
          "148: var _ IVSAPI = (*ivs.IVS)(nil)",
          "",
          "---------------"
        ],
        "service/ivs/service.go||service/ivs/service.go": [
          "File: service/ivs/service.go -> service/ivs/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package ivs",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "13: )",
          "21: type IVS struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"ivs\"       // Name of service.",
          "34:  EndpointsID = ServiceName // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"ivs\"       // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *IVS {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"ivs\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *IVS {",
          "60:  svc := &IVS{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2020-07-14\",",
          "71:    },",
          "72:    handlers,",
          "73:   ),",
          "74:  }",
          "77:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "78:  svc.Handlers.Build.PushBackNamed(restjson.BuildHandler)",
          "79:  svc.Handlers.Unmarshal.PushBackNamed(restjson.UnmarshalHandler)",
          "80:  svc.Handlers.UnmarshalMeta.PushBackNamed(restjson.UnmarshalMetaHandler)",
          "81:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "82:   protocol.NewUnmarshalErrorHandler(restjson.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "83:  )",
          "86:  if initClient != nil {",
          "87:   initClient(svc.Client)",
          "88:  }",
          "90:  return svc",
          "91: }",
          "95: func (c *IVS) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "96:  req := c.NewRequest(op, params, data)",
          "99:  if initRequest != nil {",
          "100:   initRequest(req)",
          "101:  }",
          "103:  return req",
          "104: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
      "candidate_info": {
        "commit_hash": "0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/doc.go",
          "service/elasticache/api.go"
        ],
        "message": "Release v1.33.1 (2020-07-02) (#3407)\n\nRelease v1.33.1 (2020-07-02)\n===\n\n### Service Client Updates\n* `service/connect`: Updates service documentation\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/doc.go||service/connect/doc.go",
          "service/elasticache/api.go||service/elasticache/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:     \"ap-south-1\":     endpoint{},",
          "685:     \"ap-southeast-1\": endpoint{},",
          "686:     \"ap-southeast-2\": endpoint{},",
          "687:     \"eu-central-1\":   endpoint{},",
          "688:     \"eu-west-1\":      endpoint{},",
          "689:     \"eu-west-2\":      endpoint{},",
          "690:     \"us-east-1\":      endpoint{},",
          "691:     \"us-east-2\":      endpoint{},",
          "692:     \"us-west-2\":      endpoint{},",
          "693:    },",
          "694:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:     \"ca-central-1\":   endpoint{},",
          "689:     \"eu-north-1\":     endpoint{},",
          "692:     \"eu-west-3\":      endpoint{},",
          "693:     \"sa-east-1\":      endpoint{},",
          "696:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4280:   \"ram\": service{",
          "4282:    Endpoints: endpoints{",
          "4283:     \"ap-east-1\":      endpoint{},",
          "4284:     \"ap-northeast-1\": endpoint{},",
          "4285:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4288:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4289:     \"ca-central-1\":   endpoint{},",
          "4290:     \"eu-central-1\":   endpoint{},",
          "4291:     \"eu-north-1\":     endpoint{},",
          "4292:     \"eu-west-1\":      endpoint{},",
          "4293:     \"eu-west-2\":      endpoint{},",
          "4294:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4298:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.0\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.1\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go"
        ],
        "service/connect/doc.go||service/connect/doc.go": [
          "File: service/connect/doc.go -> service/connect/doc.go"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ]
      }
    },
    {
      "candidate_hash": "df821b14ab982657900b1986db282156f3652836",
      "candidate_info": {
        "commit_hash": "df821b14ab982657900b1986db282156f3652836",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/df821b14ab982657900b1986db282156f3652836",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/databrew/2017-07-25/api-2.json",
          "models/apis/databrew/2017-07-25/docs-2.json",
          "models/apis/iot/2015-05-28/docs-2.json",
          "models/apis/managedblockchain/2018-09-24/api-2.json",
          "models/apis/managedblockchain/2018-09-24/docs-2.json",
          "models/apis/monitoring/2010-08-01/api-2.json",
          "models/apis/monitoring/2010-08-01/docs-2.json",
          "models/apis/robomaker/2018-06-29/api-2.json",
          "models/apis/robomaker/2018-06-29/docs-2.json",
          "models/apis/wellarchitected/2020-03-31/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/cloudwatch/api.go",
          "service/gluedatabrew/api.go",
          "service/iot/api.go",
          "service/managedblockchain/api.go",
          "service/managedblockchain/doc.go",
          "service/managedblockchain/errors.go",
          "service/managedblockchain/managedblockchainiface/interface.go",
          "service/robomaker/api.go",
          "service/wellarchitected/api.go",
          "service/wellarchitected/doc.go"
        ],
        "message": "Release v1.37.0 (2021-01-28) ===\n\n### Service Client Updates\n* `service/databrew`: Updates service API and documentation\n* `service/iot`: Updates service documentation\n  * Documentation updates for IoT DeleteOTAUpdate API\n* `service/managedblockchain`: Updates service API and documentation\n* `service/monitoring`: Updates service API and documentation\n  * Update to SDK to support label time zones in CloudWatch GetMetricData\n* `service/robomaker`: Updates service API and documentation\n* `service/wellarchitected`: Updates service documentation\n\n### SDK Features\n* `aws/credentials/ssocreds`: Add support for AWS Single Sign-On (SSO) Credential Provider ([#3755](https://github.com/aws/aws-sdk-go/pull/3755))\n* `aws/session`: Support has been added to resolve shared configuration profiles that are configured for AWS Single Sign-On (SSO) ([#3755](https://github.com/aws/aws-sdk-go/pull/3755))",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/cloudwatch/api.go||service/cloudwatch/api.go",
          "service/gluedatabrew/api.go||service/gluedatabrew/api.go",
          "service/iot/api.go||service/iot/api.go",
          "service/managedblockchain/api.go||service/managedblockchain/api.go",
          "service/managedblockchain/doc.go||service/managedblockchain/doc.go",
          "service/managedblockchain/errors.go||service/managedblockchain/errors.go",
          "service/managedblockchain/managedblockchainiface/interface.go||service/managedblockchain/managedblockchainiface/interface.go",
          "service/robomaker/api.go||service/robomaker/api.go",
          "service/wellarchitected/api.go||service/wellarchitected/api.go",
          "service/wellarchitected/doc.go||service/wellarchitected/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1438:     \"ca-central-1\":   endpoint{},",
          "1439:     \"eu-central-1\":   endpoint{},",
          "1440:     \"eu-north-1\":     endpoint{},",
          "1441:     \"eu-west-1\":      endpoint{},",
          "1442:     \"eu-west-2\":      endpoint{},",
          "1443:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1441:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3078:   \"fsx\": service{",
          "3080:    Endpoints: endpoints{",
          "3081:     \"ap-east-1\":      endpoint{},",
          "3082:     \"ap-northeast-1\": endpoint{},",
          "3083:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3082:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3087:     \"ca-central-1\":   endpoint{},",
          "3088:     \"eu-central-1\":   endpoint{},",
          "3089:     \"eu-north-1\":     endpoint{},",
          "3090:     \"eu-west-1\":      endpoint{},",
          "3091:     \"eu-west-2\":      endpoint{},",
          "3092:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3092:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3120:       Region: \"us-west-2\",",
          "3121:      },",
          "3122:     },",
          "3128:    },",
          "3129:   },",
          "3130:   \"gamelift\": service{",
          "",
          "[Removed Lines]",
          "3123:     \"sa-east-1\": endpoint{},",
          "3124:     \"us-east-1\": endpoint{},",
          "3125:     \"us-east-2\": endpoint{},",
          "3126:     \"us-west-1\": endpoint{},",
          "3127:     \"us-west-2\": endpoint{},",
          "",
          "[Added Lines]",
          "3126:     \"me-south-1\": endpoint{},",
          "3127:     \"sa-east-1\":  endpoint{},",
          "3128:     \"us-east-1\":  endpoint{},",
          "3129:     \"us-east-2\":  endpoint{},",
          "3130:     \"us-west-1\":  endpoint{},",
          "3131:     \"us-west-2\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3784:   \"lakeformation\": service{",
          "3786:    Endpoints: endpoints{",
          "3787:     \"ap-northeast-1\": endpoint{},",
          "3788:     \"ap-northeast-2\": endpoint{},",
          "3789:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3791:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9963:     },",
          "9964:    },",
          "9965:   },",
          "9966:   \"states\": service{",
          "9968:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9971:   \"ssm\": service{",
          "9973:    Endpoints: endpoints{",
          "9974:     \"us-iso-east-1\": endpoint{},",
          "9975:    },",
          "9976:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.36.33\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.37.0\"",
          "",
          "---------------"
        ],
        "service/cloudwatch/api.go||service/cloudwatch/api.go": [
          "File: service/cloudwatch/api.go -> service/cloudwatch/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5363:  EndTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "5367:  MaxDatapoints *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5368:  LabelOptions *LabelOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5463:  return s",
          "5464: }",
          "5467: func (s *GetMetricDataInput) SetMaxDatapoints(v int64) *GetMetricDataInput {",
          "5468:  s.MaxDatapoints = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: func (s *GetMetricDataInput) SetLabelOptions(v *LabelOptions) *GetMetricDataInput {",
          "5473:  s.LabelOptions = v",
          "5474:  return s",
          "5475: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6182:  return s",
          "6183: }",
          "6185: type ListDashboardsInput struct {",
          "6186:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6203: type LabelOptions struct {",
          "6204:  _ struct{} `type:\"structure\"`",
          "6211:  Timezone *string `type:\"string\"`",
          "6212: }",
          "6215: func (s LabelOptions) String() string {",
          "6216:  return awsutil.Prettify(s)",
          "6217: }",
          "6220: func (s LabelOptions) GoString() string {",
          "6221:  return s.String()",
          "6222: }",
          "6225: func (s *LabelOptions) SetTimezone(v string) *LabelOptions {",
          "6226:  s.Timezone = &v",
          "6227:  return s",
          "6228: }",
          "",
          "---------------"
        ],
        "service/gluedatabrew/api.go||service/gluedatabrew/api.go": [
          "File: service/gluedatabrew/api.go -> service/gluedatabrew/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4737:  return s",
          "4738: }",
          "4742: type DataCatalogInputDefinition struct {",
          "4743:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4838: type CsvOptions struct {",
          "4839:  _ struct{} `type:\"structure\"`",
          "4842:  Delimiter *string `min:\"1\" type:\"string\"`",
          "4843: }",
          "4846: func (s CsvOptions) String() string {",
          "4847:  return awsutil.Prettify(s)",
          "4848: }",
          "4851: func (s CsvOptions) GoString() string {",
          "4852:  return s.String()",
          "4853: }",
          "4856: func (s *CsvOptions) Validate() error {",
          "4857:  invalidParams := request.ErrInvalidParams{Context: \"CsvOptions\"}",
          "4858:  if s.Delimiter != nil && len(*s.Delimiter) < 1 {",
          "4859:   invalidParams.Add(request.NewErrParamMinLen(\"Delimiter\", 1))",
          "4860:  }",
          "4862:  if invalidParams.Len() > 0 {",
          "4863:   return invalidParams",
          "4864:  }",
          "4865:  return nil",
          "4866: }",
          "4869: func (s *CsvOptions) SetDelimiter(v string) *CsvOptions {",
          "4870:  s.Delimiter = &v",
          "4871:  return s",
          "4872: }",
          "4875: type CsvOutputOptions struct {",
          "4876:  _ struct{} `type:\"structure\"`",
          "4879:  Delimiter *string `min:\"1\" type:\"string\"`",
          "4880: }",
          "4883: func (s CsvOutputOptions) String() string {",
          "4884:  return awsutil.Prettify(s)",
          "4885: }",
          "4888: func (s CsvOutputOptions) GoString() string {",
          "4889:  return s.String()",
          "4890: }",
          "4893: func (s *CsvOutputOptions) Validate() error {",
          "4894:  invalidParams := request.ErrInvalidParams{Context: \"CsvOutputOptions\"}",
          "4895:  if s.Delimiter != nil && len(*s.Delimiter) < 1 {",
          "4896:   invalidParams.Add(request.NewErrParamMinLen(\"Delimiter\", 1))",
          "4897:  }",
          "4899:  if invalidParams.Len() > 0 {",
          "4900:   return invalidParams",
          "4901:  }",
          "4902:  return nil",
          "4903: }",
          "4906: func (s *CsvOutputOptions) SetDelimiter(v string) *CsvOutputOptions {",
          "4907:  s.Delimiter = &v",
          "4908:  return s",
          "4909: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6267:  return s",
          "6268: }",
          "6271: type FormatOptions struct {",
          "6272:  _ struct{} `type:\"structure\"`",
          "6275:  Excel *ExcelOptions `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6447:  Csv *CsvOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6292: func (s *FormatOptions) Validate() error {",
          "6293:  invalidParams := request.ErrInvalidParams{Context: \"FormatOptions\"}",
          "6294:  if s.Excel != nil {",
          "6295:   if err := s.Excel.Validate(); err != nil {",
          "6296:    invalidParams.AddNested(\"Excel\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6469:  if s.Csv != nil {",
          "6470:   if err := s.Csv.Validate(); err != nil {",
          "6471:    invalidParams.AddNested(\"Csv\", err.(request.ErrInvalidParams))",
          "6472:   }",
          "6473:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6303:  return nil",
          "6304: }",
          "6307: func (s *FormatOptions) SetExcel(v *ExcelOptions) *FormatOptions {",
          "6308:  s.Excel = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6487: func (s *FormatOptions) SetCsv(v *CsvOptions) *FormatOptions {",
          "6488:  s.Csv = v",
          "6489:  return s",
          "6490: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7557:  Format *string `type:\"string\" enum:\"OutputFormat\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7740:  FormatOptions *OutputFormatOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7585:  if s.Location == nil {",
          "7586:   invalidParams.Add(request.NewErrParamRequired(\"Location\"))",
          "7587:  }",
          "7588:  if s.Location != nil {",
          "7589:   if err := s.Location.Validate(); err != nil {",
          "7590:    invalidParams.AddNested(\"Location\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7771:  if s.FormatOptions != nil {",
          "7772:   if err := s.FormatOptions.Validate(); err != nil {",
          "7773:    invalidParams.AddNested(\"FormatOptions\", err.(request.ErrInvalidParams))",
          "7774:   }",
          "7775:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7609:  return s",
          "7610: }",
          "7613: func (s *Output) SetLocation(v *S3Location) *Output {",
          "7614:  s.Location = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7801: func (s *Output) SetFormatOptions(v *OutputFormatOptions) *Output {",
          "7802:  s.FormatOptions = v",
          "7803:  return s",
          "7804: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7627:  return s",
          "7628: }",
          "7631: type Project struct {",
          "7632:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7825: type OutputFormatOptions struct {",
          "7826:  _ struct{} `type:\"structure\"`",
          "7829:  Csv *CsvOutputOptions `type:\"structure\"`",
          "7830: }",
          "7833: func (s OutputFormatOptions) String() string {",
          "7834:  return awsutil.Prettify(s)",
          "7835: }",
          "7838: func (s OutputFormatOptions) GoString() string {",
          "7839:  return s.String()",
          "7840: }",
          "7843: func (s *OutputFormatOptions) Validate() error {",
          "7844:  invalidParams := request.ErrInvalidParams{Context: \"OutputFormatOptions\"}",
          "7845:  if s.Csv != nil {",
          "7846:   if err := s.Csv.Validate(); err != nil {",
          "7847:    invalidParams.AddNested(\"Csv\", err.(request.ErrInvalidParams))",
          "7848:   }",
          "7849:  }",
          "7851:  if invalidParams.Len() > 0 {",
          "7852:   return invalidParams",
          "7853:  }",
          "7854:  return nil",
          "7855: }",
          "7858: func (s *OutputFormatOptions) SetCsv(v *CsvOutputOptions) *OutputFormatOptions {",
          "7859:  s.Csv = v",
          "7860:  return s",
          "7861: }",
          "",
          "---------------"
        ],
        "service/iot/api.go||service/iot/api.go": [
          "File: service/iot/api.go -> service/iot/api.go"
        ],
        "service/managedblockchain/api.go||service/managedblockchain/api.go": [
          "File: service/managedblockchain/api.go -> service/managedblockchain/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1986:  return p.Err()",
          "1987: }",
          "1989: const opRejectInvitation = \"RejectInvitation\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1999: const opListTagsForResource = \"ListTagsForResource\"",
          "2025: func (c *ManagedBlockchain) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "2026:  op := &request.Operation{",
          "2027:   Name:       opListTagsForResource,",
          "2028:   HTTPMethod: \"GET\",",
          "2029:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2030:  }",
          "2032:  if input == nil {",
          "2033:   input = &ListTagsForResourceInput{}",
          "2034:  }",
          "2036:  output = &ListTagsForResourceOutput{}",
          "2037:  req = c.newRequest(op, input, output)",
          "2038:  return",
          "2039: }",
          "2076: func (c *ManagedBlockchain) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2077:  req, out := c.ListTagsForResourceRequest(input)",
          "2078:  return out, req.Send()",
          "2079: }",
          "2090: func (c *ManagedBlockchain) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2091:  req, out := c.ListTagsForResourceRequest(input)",
          "2092:  req.SetContext(ctx)",
          "2093:  req.ApplyOptions(opts...)",
          "2094:  return out, req.Send()",
          "2095: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2090:  return out, req.Send()",
          "2091: }",
          "2093: const opUpdateMember = \"UpdateMember\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2201: const opTagResource = \"TagResource\"",
          "2227: func (c *ManagedBlockchain) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "2228:  op := &request.Operation{",
          "2229:   Name:       opTagResource,",
          "2230:   HTTPMethod: \"POST\",",
          "2231:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2232:  }",
          "2234:  if input == nil {",
          "2235:   input = &TagResourceInput{}",
          "2236:  }",
          "2238:  output = &TagResourceOutput{}",
          "2239:  req = c.newRequest(op, input, output)",
          "2240:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2241:  return",
          "2242: }",
          "2287: func (c *ManagedBlockchain) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "2288:  req, out := c.TagResourceRequest(input)",
          "2289:  return out, req.Send()",
          "2290: }",
          "2301: func (c *ManagedBlockchain) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "2302:  req, out := c.TagResourceRequest(input)",
          "2303:  req.SetContext(ctx)",
          "2304:  req.ApplyOptions(opts...)",
          "2305:  return out, req.Send()",
          "2306: }",
          "2308: const opUntagResource = \"UntagResource\"",
          "2334: func (c *ManagedBlockchain) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "2335:  op := &request.Operation{",
          "2336:   Name:       opUntagResource,",
          "2337:   HTTPMethod: \"DELETE\",",
          "2338:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2339:  }",
          "2341:  if input == nil {",
          "2342:   input = &UntagResourceInput{}",
          "2343:  }",
          "2345:  output = &UntagResourceOutput{}",
          "2346:  req = c.newRequest(op, input, output)",
          "2347:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2348:  return",
          "2349: }",
          "2385: func (c *ManagedBlockchain) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "2386:  req, out := c.UntagResourceRequest(input)",
          "2387:  return out, req.Send()",
          "2388: }",
          "2399: func (c *ManagedBlockchain) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "2400:  req, out := c.UntagResourceRequest(input)",
          "2401:  req.SetContext(ctx)",
          "2402:  req.ApplyOptions(opts...)",
          "2403:  return out, req.Send()",
          "2404: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2674:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2998:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2780:  return s",
          "2781: }",
          "2784: func (s *CreateNetworkInput) SetVotingPolicy(v *VotingPolicy) *CreateNetworkInput {",
          "2785:  s.VotingPolicy = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3108: func (s *CreateNetworkInput) SetTags(v map[string]*string) *CreateNetworkInput {",
          "3109:  s.Tags = v",
          "3110:  return s",
          "3111: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2852:  NodeConfiguration *NodeConfiguration `type:\"structure\" required:\"true\"`",
          "2853: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3193:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2916:  return s",
          "2917: }",
          "2919: type CreateNodeOutput struct {",
          "2920:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3261: func (s *CreateNodeInput) SetTags(v map[string]*string) *CreateNodeInput {",
          "3262:  s.Tags = v",
          "3263:  return s",
          "3264: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2973:  NetworkId *string `location:\"uri\" locationName:\"networkId\" min:\"1\" type:\"string\" required:\"true\"`",
          "2974: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3333:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3046:  return s",
          "3047: }",
          "3049: type CreateProposalOutput struct {",
          "3050:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3410: func (s *CreateProposalInput) SetTags(v map[string]*string) *CreateProposalInput {",
          "3411:  s.Tags = v",
          "3412:  return s",
          "3413: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3731: type Invitation struct {",
          "3732:  _ struct{} `type:\"structure\"`",
          "3735:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4103:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3774:  return s.String()",
          "3775: }",
          "3778: func (s *Invitation) SetCreationDate(v time.Time) *Invitation {",
          "3779:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4149: func (s *Invitation) SetArn(v string) *Invitation {",
          "4150:  s.Arn = &v",
          "4151:  return s",
          "4152: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4481:  return s",
          "4482: }",
          "4485: type LogConfiguration struct {",
          "4486:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4861: type ListTagsForResourceInput struct {",
          "4862:  _ struct{} `type:\"structure\"`",
          "4869:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "4870: }",
          "4873: func (s ListTagsForResourceInput) String() string {",
          "4874:  return awsutil.Prettify(s)",
          "4875: }",
          "4878: func (s ListTagsForResourceInput) GoString() string {",
          "4879:  return s.String()",
          "4880: }",
          "4883: func (s *ListTagsForResourceInput) Validate() error {",
          "4884:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "4885:  if s.ResourceArn == nil {",
          "4886:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "4887:  }",
          "4888:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "4889:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "4890:  }",
          "4892:  if invalidParams.Len() > 0 {",
          "4893:   return invalidParams",
          "4894:  }",
          "4895:  return nil",
          "4896: }",
          "4899: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "4900:  s.ResourceArn = &v",
          "4901:  return s",
          "4902: }",
          "4904: type ListTagsForResourceOutput struct {",
          "4905:  _ struct{} `type:\"structure\"`",
          "4908:  Tags map[string]*string `type:\"map\"`",
          "4909: }",
          "4912: func (s ListTagsForResourceOutput) String() string {",
          "4913:  return awsutil.Prettify(s)",
          "4914: }",
          "4917: func (s ListTagsForResourceOutput) GoString() string {",
          "4918:  return s.String()",
          "4919: }",
          "4922: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "4923:  s.Tags = v",
          "4924:  return s",
          "4925: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4535: type Member struct {",
          "4536:  _ struct{} `type:\"structure\"`",
          "4539:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4984:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4578:  Status *string `type:\"string\" enum:\"MemberStatus\"`",
          "4579: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5031:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4588:  return s.String()",
          "4589: }",
          "4592: func (s *Member) SetCreationDate(v time.Time) *Member {",
          "4593:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5045: func (s *Member) SetArn(v string) *Member {",
          "5046:  s.Arn = &v",
          "5047:  return s",
          "5048: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4636:  return s",
          "4637: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5099: func (s *Member) SetTags(v map[string]*string) *Member {",
          "5100:  s.Tags = v",
          "5101:  return s",
          "5102: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4660:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4661: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5133:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4718:  return s",
          "4719: }",
          "4723: type MemberFabricAttributes struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5195: func (s *MemberConfiguration) SetTags(v map[string]*string) *MemberConfiguration {",
          "5196:  s.Tags = v",
          "5197:  return s",
          "5198: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4942: type MemberSummary struct {",
          "4943:  _ struct{} `type:\"structure\"`",
          "4946:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5427:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4989:  return s.String()",
          "4990: }",
          "4993: func (s *MemberSummary) SetCreationDate(v time.Time) *MemberSummary {",
          "4994:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5477: func (s *MemberSummary) SetArn(v string) *MemberSummary {",
          "5478:  s.Arn = &v",
          "5479:  return s",
          "5480: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5029: type Network struct {",
          "5030:  _ struct{} `type:\"structure\"`",
          "5033:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5525:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5054:  Status *string `type:\"string\" enum:\"NetworkStatus\"`",
          "5057:  VotingPolicy *VotingPolicy `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5557:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5072:  return s.String()",
          "5073: }",
          "5076: func (s *Network) SetCreationDate(v time.Time) *Network {",
          "5077:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5579: func (s *Network) SetArn(v string) *Network {",
          "5580:  s.Arn = &v",
          "5581:  return s",
          "5582: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5120:  return s",
          "5121: }",
          "5124: func (s *Network) SetVotingPolicy(v *VotingPolicy) *Network {",
          "5125:  s.VotingPolicy = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5633: func (s *Network) SetTags(v map[string]*string) *Network {",
          "5634:  s.Tags = v",
          "5635:  return s",
          "5636: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5318: type NetworkSummary struct {",
          "5319:  _ struct{} `type:\"structure\"`",
          "5322:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5841:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5350:  return s.String()",
          "5351: }",
          "5354: func (s *NetworkSummary) SetCreationDate(v time.Time) *NetworkSummary {",
          "5355:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5876: func (s *NetworkSummary) SetArn(v string) *NetworkSummary {",
          "5877:  s.Arn = &v",
          "5878:  return s",
          "5879: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5396: type Node struct {",
          "5397:  _ struct{} `type:\"structure\"`",
          "5400:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5930:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5432:  Status *string `type:\"string\" enum:\"NodeStatus\"`",
          "5433: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5974:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5442:  return s.String()",
          "5443: }",
          "5446: func (s *Node) SetAvailabilityZone(v string) *Node {",
          "5447:  s.AvailabilityZone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5988: func (s *Node) SetArn(v string) *Node {",
          "5989:  s.Arn = &v",
          "5990:  return s",
          "5991: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5502:  return s",
          "5503: }",
          "5506: type NodeConfiguration struct {",
          "5507:  _ struct{} `type:\"structure\"`",
          "5510:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6054: func (s *Node) SetTags(v map[string]*string) *Node {",
          "6055:  s.Tags = v",
          "6056:  return s",
          "6057: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "5755: type NodeSummary struct {",
          "5756:  _ struct{} `type:\"structure\"`",
          "5759:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6318:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "5781:  return s.String()",
          "5782: }",
          "5785: func (s *NodeSummary) SetAvailabilityZone(v string) *NodeSummary {",
          "5786:  s.AvailabilityZone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6347: func (s *NodeSummary) SetArn(v string) *NodeSummary {",
          "6348:  s.Arn = &v",
          "6349:  return s",
          "6350: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5821:  Actions *ProposalActions `type:\"structure\"`",
          "5824:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6394:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "5875:  Status *string `type:\"string\" enum:\"ProposalStatus\"`",
          "5878:  YesVoteCount *int64 `type:\"integer\"`",
          "5879: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6456:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "5894:  return s",
          "5895: }",
          "5898: func (s *Proposal) SetCreationDate(v time.Time) *Proposal {",
          "5899:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6479: func (s *Proposal) SetArn(v string) *Proposal {",
          "6480:  s.Arn = &v",
          "6481:  return s",
          "6482: }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "5954:  return s",
          "5955: }",
          "5958: func (s *Proposal) SetYesVoteCount(v int64) *Proposal {",
          "5959:  s.YesVoteCount = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6545: func (s *Proposal) SetTags(v map[string]*string) *Proposal {",
          "6546:  s.Tags = v",
          "6547:  return s",
          "6548: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6034: type ProposalSummary struct {",
          "6035:  _ struct{} `type:\"structure\"`",
          "6038:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6633:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "6087:  return s.String()",
          "6088: }",
          "6091: func (s *ProposalSummary) SetCreationDate(v time.Time) *ProposalSummary {",
          "6092:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6689: func (s *ProposalSummary) SetArn(v string) *ProposalSummary {",
          "6690:  s.Arn = &v",
          "6691:  return s",
          "6692: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "6344:  return s.RespMetadata.RequestID",
          "6345: }",
          "6349: type ResourceNotFoundException struct {",
          "6350:  _            struct{}                  `type:\"structure\"`",
          "6351:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6353:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6354: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6961:  ResourceName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "6388: }",
          "6390: func (s *ResourceNotFoundException) Error() string {",
          "6392: }",
          "",
          "[Removed Lines]",
          "6391:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "",
          "[Added Lines]",
          "6999:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "6458:  return s.RespMetadata.RequestID",
          "6459: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7069: type TagResourceInput struct {",
          "7070:  _ struct{} `type:\"structure\"`",
          "7077:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7084:  Tags map[string]*string `type:\"map\" required:\"true\"`",
          "7085: }",
          "7088: func (s TagResourceInput) String() string {",
          "7089:  return awsutil.Prettify(s)",
          "7090: }",
          "7093: func (s TagResourceInput) GoString() string {",
          "7094:  return s.String()",
          "7095: }",
          "7098: func (s *TagResourceInput) Validate() error {",
          "7099:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "7100:  if s.ResourceArn == nil {",
          "7101:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7102:  }",
          "7103:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7104:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7105:  }",
          "7106:  if s.Tags == nil {",
          "7107:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "7108:  }",
          "7110:  if invalidParams.Len() > 0 {",
          "7111:   return invalidParams",
          "7112:  }",
          "7113:  return nil",
          "7114: }",
          "7117: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "7118:  s.ResourceArn = &v",
          "7119:  return s",
          "7120: }",
          "7123: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "7124:  s.Tags = v",
          "7125:  return s",
          "7126: }",
          "7128: type TagResourceOutput struct {",
          "7129:  _ struct{} `type:\"structure\"`",
          "7130: }",
          "7133: func (s TagResourceOutput) String() string {",
          "7134:  return awsutil.Prettify(s)",
          "7135: }",
          "7138: func (s TagResourceOutput) GoString() string {",
          "7139:  return s.String()",
          "7140: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "6517:  return s.RespMetadata.RequestID",
          "6518: }",
          "6520: type UpdateMemberInput struct {",
          "6521:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7201: type TooManyTagsException struct {",
          "7202:  _            struct{}                  `type:\"structure\"`",
          "7203:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7205:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "7207:  ResourceName *string `min:\"1\" type:\"string\"`",
          "7208: }",
          "7211: func (s TooManyTagsException) String() string {",
          "7212:  return awsutil.Prettify(s)",
          "7213: }",
          "7216: func (s TooManyTagsException) GoString() string {",
          "7217:  return s.String()",
          "7218: }",
          "7220: func newErrorTooManyTagsException(v protocol.ResponseMetadata) error {",
          "7221:  return &TooManyTagsException{",
          "7222:   RespMetadata: v,",
          "7223:  }",
          "7224: }",
          "7227: func (s *TooManyTagsException) Code() string {",
          "7228:  return \"TooManyTagsException\"",
          "7229: }",
          "7232: func (s *TooManyTagsException) Message() string {",
          "7233:  if s.Message_ != nil {",
          "7234:   return *s.Message_",
          "7235:  }",
          "7236:  return \"\"",
          "7237: }",
          "7240: func (s *TooManyTagsException) OrigErr() error {",
          "7241:  return nil",
          "7242: }",
          "7244: func (s *TooManyTagsException) Error() string {",
          "7245:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "7246: }",
          "7249: func (s *TooManyTagsException) StatusCode() int {",
          "7250:  return s.RespMetadata.StatusCode",
          "7251: }",
          "7254: func (s *TooManyTagsException) RequestID() string {",
          "7255:  return s.RespMetadata.RequestID",
          "7256: }",
          "7258: type UntagResourceInput struct {",
          "7259:  _ struct{} `type:\"structure\"`",
          "7266:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7271:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "7272: }",
          "7275: func (s UntagResourceInput) String() string {",
          "7276:  return awsutil.Prettify(s)",
          "7277: }",
          "7280: func (s UntagResourceInput) GoString() string {",
          "7281:  return s.String()",
          "7282: }",
          "7285: func (s *UntagResourceInput) Validate() error {",
          "7286:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "7287:  if s.ResourceArn == nil {",
          "7288:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7289:  }",
          "7290:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7291:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7292:  }",
          "7293:  if s.TagKeys == nil {",
          "7294:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "7295:  }",
          "7297:  if invalidParams.Len() > 0 {",
          "7298:   return invalidParams",
          "7299:  }",
          "7300:  return nil",
          "7301: }",
          "7304: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "7305:  s.ResourceArn = &v",
          "7306:  return s",
          "7307: }",
          "7310: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "7311:  s.TagKeys = v",
          "7312:  return s",
          "7313: }",
          "7315: type UntagResourceOutput struct {",
          "7316:  _ struct{} `type:\"structure\"`",
          "7317: }",
          "7320: func (s UntagResourceOutput) String() string {",
          "7321:  return awsutil.Prettify(s)",
          "7322: }",
          "7325: func (s UntagResourceOutput) GoString() string {",
          "7326:  return s.String()",
          "7327: }",
          "",
          "---------------"
        ],
        "service/managedblockchain/doc.go||service/managedblockchain/doc.go": [
          "File: service/managedblockchain/doc.go -> service/managedblockchain/doc.go"
        ],
        "service/managedblockchain/errors.go||service/managedblockchain/errors.go": [
          "File: service/managedblockchain/errors.go -> service/managedblockchain/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  ErrCodeThrottlingException = \"ThrottlingException\"",
          "71: )",
          "73: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:  \"ResourceNotFoundException\":      newErrorResourceNotFoundException,",
          "81:  \"ResourceNotReadyException\":      newErrorResourceNotReadyException,",
          "82:  \"ThrottlingException\":            newErrorThrottlingException,",
          "83: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  \"TooManyTagsException\":           newErrorTooManyTagsException,",
          "",
          "---------------"
        ],
        "service/managedblockchain/managedblockchainiface/interface.go||service/managedblockchain/managedblockchainiface/interface.go": [
          "File: service/managedblockchain/managedblockchainiface/interface.go -> service/managedblockchain/managedblockchainiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  ListProposalsPages(*managedblockchain.ListProposalsInput, func(*managedblockchain.ListProposalsOutput, bool) bool) error",
          "143:  ListProposalsPagesWithContext(aws.Context, *managedblockchain.ListProposalsInput, func(*managedblockchain.ListProposalsOutput, bool) bool, ...request.Option) error",
          "145:  RejectInvitation(*managedblockchain.RejectInvitationInput) (*managedblockchain.RejectInvitationOutput, error)",
          "146:  RejectInvitationWithContext(aws.Context, *managedblockchain.RejectInvitationInput, ...request.Option) (*managedblockchain.RejectInvitationOutput, error)",
          "147:  RejectInvitationRequest(*managedblockchain.RejectInvitationInput) (*request.Request, *managedblockchain.RejectInvitationOutput)",
          "149:  UpdateMember(*managedblockchain.UpdateMemberInput) (*managedblockchain.UpdateMemberOutput, error)",
          "150:  UpdateMemberWithContext(aws.Context, *managedblockchain.UpdateMemberInput, ...request.Option) (*managedblockchain.UpdateMemberOutput, error)",
          "151:  UpdateMemberRequest(*managedblockchain.UpdateMemberInput) (*request.Request, *managedblockchain.UpdateMemberOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  ListTagsForResource(*managedblockchain.ListTagsForResourceInput) (*managedblockchain.ListTagsForResourceOutput, error)",
          "146:  ListTagsForResourceWithContext(aws.Context, *managedblockchain.ListTagsForResourceInput, ...request.Option) (*managedblockchain.ListTagsForResourceOutput, error)",
          "147:  ListTagsForResourceRequest(*managedblockchain.ListTagsForResourceInput) (*request.Request, *managedblockchain.ListTagsForResourceOutput)",
          "153:  TagResource(*managedblockchain.TagResourceInput) (*managedblockchain.TagResourceOutput, error)",
          "154:  TagResourceWithContext(aws.Context, *managedblockchain.TagResourceInput, ...request.Option) (*managedblockchain.TagResourceOutput, error)",
          "155:  TagResourceRequest(*managedblockchain.TagResourceInput) (*request.Request, *managedblockchain.TagResourceOutput)",
          "157:  UntagResource(*managedblockchain.UntagResourceInput) (*managedblockchain.UntagResourceOutput, error)",
          "158:  UntagResourceWithContext(aws.Context, *managedblockchain.UntagResourceInput, ...request.Option) (*managedblockchain.UntagResourceOutput, error)",
          "159:  UntagResourceRequest(*managedblockchain.UntagResourceInput) (*request.Request, *managedblockchain.UntagResourceOutput)",
          "",
          "---------------"
        ],
        "service/robomaker/api.go||service/robomaker/api.go": [
          "File: service/robomaker/api.go -> service/robomaker/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14155:  LaunchConfig *LaunchConfig `locationName:\"launchConfig\" type:\"structure\" required:\"true\"`",
          "14156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14158:  UploadConfigurations []*UploadConfiguration `locationName:\"uploadConfigurations\" type:\"list\"`",
          "14165:  UseDefaultUploadConfigurations *bool `locationName:\"useDefaultUploadConfigurations\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14185:    invalidParams.AddNested(\"LaunchConfig\", err.(request.ErrInvalidParams))",
          "14186:   }",
          "14187:  }",
          "14189:  if invalidParams.Len() > 0 {",
          "14190:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14198:  if s.UploadConfigurations != nil {",
          "14199:   for i, v := range s.UploadConfigurations {",
          "14200:    if v == nil {",
          "14201:     continue",
          "14202:    }",
          "14203:    if err := v.Validate(); err != nil {",
          "14204:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"UploadConfigurations\", i), err.(request.ErrInvalidParams))",
          "14205:    }",
          "14206:   }",
          "14207:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "14210:  return s",
          "14211: }",
          "14214: type RobotApplicationSummary struct {",
          "14215:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14234: func (s *RobotApplicationConfig) SetUploadConfigurations(v []*UploadConfiguration) *RobotApplicationConfig {",
          "14235:  s.UploadConfigurations = v",
          "14236:  return s",
          "14237: }",
          "14240: func (s *RobotApplicationConfig) SetUseDefaultUploadConfigurations(v bool) *RobotApplicationConfig {",
          "14241:  s.UseDefaultUploadConfigurations = &v",
          "14242:  return s",
          "14243: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "14557:  LaunchConfig *LaunchConfig `locationName:\"launchConfig\" type:\"structure\" required:\"true\"`",
          "14560:  WorldConfigs []*WorldConfig `locationName:\"worldConfigs\" type:\"list\"`",
          "14561: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14592:  UploadConfigurations []*UploadConfiguration `locationName:\"uploadConfigurations\" type:\"list\"`",
          "14599:  UseDefaultUploadConfigurations *bool `locationName:\"useDefaultUploadConfigurations\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14590:    invalidParams.AddNested(\"LaunchConfig\", err.(request.ErrInvalidParams))",
          "14591:   }",
          "14592:  }",
          "14593:  if s.WorldConfigs != nil {",
          "14594:   for i, v := range s.WorldConfigs {",
          "14595:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14635:  if s.UploadConfigurations != nil {",
          "14636:   for i, v := range s.UploadConfigurations {",
          "14637:    if v == nil {",
          "14638:     continue",
          "14639:    }",
          "14640:    if err := v.Validate(); err != nil {",
          "14641:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"UploadConfigurations\", i), err.(request.ErrInvalidParams))",
          "14642:    }",
          "14643:   }",
          "14644:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "14625:  return s",
          "14626: }",
          "14629: func (s *SimulationApplicationConfig) SetWorldConfigs(v []*WorldConfig) *SimulationApplicationConfig {",
          "14630:  s.WorldConfigs = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14681: func (s *SimulationApplicationConfig) SetUploadConfigurations(v []*UploadConfiguration) *SimulationApplicationConfig {",
          "14682:  s.UploadConfigurations = v",
          "14683:  return s",
          "14684: }",
          "14687: func (s *SimulationApplicationConfig) SetUseDefaultUploadConfigurations(v bool) *SimulationApplicationConfig {",
          "14688:  s.UseDefaultUploadConfigurations = &v",
          "14689:  return s",
          "14690: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16748:  return s",
          "16749: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16818: type UploadConfiguration struct {",
          "16819:  _ struct{} `type:\"structure\"`",
          "16828:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "16836:  Path *string `locationName:\"path\" min:\"1\" type:\"string\" required:\"true\"`",
          "16856:  UploadBehavior *string `locationName:\"uploadBehavior\" type:\"string\" required:\"true\" enum:\"UploadBehavior\"`",
          "16857: }",
          "16860: func (s UploadConfiguration) String() string {",
          "16861:  return awsutil.Prettify(s)",
          "16862: }",
          "16865: func (s UploadConfiguration) GoString() string {",
          "16866:  return s.String()",
          "16867: }",
          "16870: func (s *UploadConfiguration) Validate() error {",
          "16871:  invalidParams := request.ErrInvalidParams{Context: \"UploadConfiguration\"}",
          "16872:  if s.Name == nil {",
          "16873:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "16874:  }",
          "16875:  if s.Name != nil && len(*s.Name) < 1 {",
          "16876:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "16877:  }",
          "16878:  if s.Path == nil {",
          "16879:   invalidParams.Add(request.NewErrParamRequired(\"Path\"))",
          "16880:  }",
          "16881:  if s.Path != nil && len(*s.Path) < 1 {",
          "16882:   invalidParams.Add(request.NewErrParamMinLen(\"Path\", 1))",
          "16883:  }",
          "16884:  if s.UploadBehavior == nil {",
          "16885:   invalidParams.Add(request.NewErrParamRequired(\"UploadBehavior\"))",
          "16886:  }",
          "16888:  if invalidParams.Len() > 0 {",
          "16889:   return invalidParams",
          "16890:  }",
          "16891:  return nil",
          "16892: }",
          "16895: func (s *UploadConfiguration) SetName(v string) *UploadConfiguration {",
          "16896:  s.Name = &v",
          "16897:  return s",
          "16898: }",
          "16901: func (s *UploadConfiguration) SetPath(v string) *UploadConfiguration {",
          "16902:  s.Path = &v",
          "16903:  return s",
          "16904: }",
          "16907: func (s *UploadConfiguration) SetUploadBehavior(v string) *UploadConfiguration {",
          "16908:  s.UploadBehavior = &v",
          "16909:  return s",
          "16910: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17655:  SimulationJobErrorCodeWrongRegionSimulationApplication = \"WrongRegionSimulationApplication\"",
          "17656: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17819:  SimulationJobErrorCodeUploadContentMismatchError = \"UploadContentMismatchError\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "17685:   SimulationJobErrorCodeWrongRegionS3output,",
          "17686:   SimulationJobErrorCodeWrongRegionRobotApplication,",
          "17687:   SimulationJobErrorCodeWrongRegionSimulationApplication,",
          "17688:  }",
          "17689: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17852:   SimulationJobErrorCodeUploadContentMismatchError,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "17752:  }",
          "17753: }",
          "17755: const (",
          "17757:  WorldExportJobErrorCodeInternalServiceError = \"InternalServiceError\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17920: const (",
          "17922:  UploadBehaviorUploadOnTerminate = \"UPLOAD_ON_TERMINATE\"",
          "17925:  UploadBehaviorUploadRollingAutoRemove = \"UPLOAD_ROLLING_AUTO_REMOVE\"",
          "17926: )",
          "17929: func UploadBehavior_Values() []string {",
          "17930:  return []string{",
          "17931:   UploadBehaviorUploadOnTerminate,",
          "17932:   UploadBehaviorUploadRollingAutoRemove,",
          "17933:  }",
          "17934: }",
          "",
          "---------------"
        ],
        "service/wellarchitected/api.go||service/wellarchitected/api.go": [
          "File: service/wellarchitected/api.go -> service/wellarchitected/api.go"
        ],
        "service/wellarchitected/doc.go||service/wellarchitected/doc.go": [
          "File: service/wellarchitected/doc.go -> service/wellarchitected/doc.go"
        ]
      }
    }
  ]
}