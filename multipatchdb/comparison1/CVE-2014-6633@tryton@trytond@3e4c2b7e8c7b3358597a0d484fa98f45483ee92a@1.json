{
  "cve_id": "CVE-2014-6633",
  "cve_desc": "The safe_eval function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the collection.domain in the webdav module or (2) the formula field in the price_list module.",
  "repo": "tryton/trytond",
  "patch_hash": "3e4c2b7e8c7b3358597a0d484fa98f45483ee92a",
  "patch_info": {
    "commit_hash": "3e4c2b7e8c7b3358597a0d484fa98f45483ee92a",
    "repo": "tryton/trytond",
    "commit_url": "https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a",
    "files": [
      "CHANGELOG",
      "trytond/tests/test_tools.py",
      "trytond/tools/misc.py"
    ],
    "message": "Prevent double underscore in safe_eval\n\nCVE-2014-6633\nissue4155\nreview5601002",
    "before_after_code_files": [
      "trytond/tests/test_tools.py||trytond/tests/test_tools.py",
      "trytond/tools/misc.py||trytond/tools/misc.py"
    ]
  },
  "patch_diff": {
    "trytond/tests/test_tools.py||trytond/tests/test_tools.py": [
      "File: trytond/tests/test_tools.py -> trytond/tests/test_tools.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "65:     def test0061safe_eval_getattr(self):",
      "66:         'Attempt to get arround direct attr access'",
      "69:     def test0062safe_eval_func_globals(self):",
      "70:         'Attempt to access global enviroment where fun was defined'",
      "",
      "[Removed Lines]",
      "67:         self.assertRaises(NameError, safe_eval, \"getattr(int, '__abs__')\")",
      "",
      "[Added Lines]",
      "67:         self.assertRaises(NameError, safe_eval, \"getattr(int, 'real')\")",
      "",
      "---------------"
    ],
    "trytond/tools/misc.py||trytond/tools/misc.py": [
      "File: trytond/tools/misc.py -> trytond/tools/misc.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "371: def safe_eval(source, data=None):",
      "375:     comp = _compile_source(source)",
      "376:     return eval(comp, {'__builtins__': {",
      "",
      "[Removed Lines]",
      "372:     if '__subclasses__' in source:",
      "373:         raise ValueError('__subclasses__ not allowed')",
      "",
      "[Added Lines]",
      "372:     if '__' in source:",
      "373:         raise ValueError('Double underscores not allowed')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "92838f6da258ad9f7344c5eb1d10951decc115a5",
      "candidate_info": {
        "commit_hash": "92838f6da258ad9f7344c5eb1d10951decc115a5",
        "repo": "tryton/trytond",
        "commit_url": "https://github.com/tryton/trytond/commit/92838f6da258ad9f7344c5eb1d10951decc115a5",
        "files": [
          "CHANGELOG",
          "trytond/tests/test_tools.py",
          "trytond/tools/misc.py"
        ],
        "message": "Prevent double underscore in safe_eval\n\nCVE-2014-6633\nissue4155\nreview5601002\n(grafted from 3db7377f9429ac4419721e86fc46c8e2b2f341f2)\n\n--HG--\nbranch : 3.0",
        "before_after_code_files": [
          "trytond/tests/test_tools.py||trytond/tests/test_tools.py",
          "trytond/tools/misc.py||trytond/tools/misc.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "trytond/tests/test_tools.py||trytond/tests/test_tools.py",
            "trytond/tools/misc.py||trytond/tools/misc.py"
          ],
          "candidate": [
            "trytond/tests/test_tools.py||trytond/tests/test_tools.py",
            "trytond/tools/misc.py||trytond/tools/misc.py"
          ]
        }
      },
      "candidate_diff": {
        "trytond/tests/test_tools.py||trytond/tests/test_tools.py": [
          "File: trytond/tests/test_tools.py -> trytond/tests/test_tools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         self.assertRaises(Exception, safe_eval, \"open('test.txt', 'w')\")",
          "84:     def test0061safe_eval_getattr(self):",
          "90:     def test0062safe_eval_func_globals(self):",
          "91:         '''",
          "",
          "[Removed Lines]",
          "85:         '''",
          "86:         Attempt to get arround direct attr access.",
          "87:         '''",
          "88:         self.assertRaises(Exception, safe_eval, \"getattr(int, '__abs__')\")",
          "",
          "[Added Lines]",
          "85:         'Attempt to get arround direct attr access'",
          "86:         self.assertRaises(NameError, safe_eval, \"getattr(int, 'real')\")",
          "",
          "---------------"
        ],
        "trytond/tools/misc.py||trytond/tools/misc.py": [
          "File: trytond/tools/misc.py -> trytond/tools/misc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "398: def safe_eval(source, data=None):",
          "402:     comp = _compile_source(source)",
          "403:     return eval(comp, {'__builtins__': {",
          "",
          "[Removed Lines]",
          "399:     if '__subclasses__' in source:",
          "400:         raise ValueError('__subclasses__ not allowed')",
          "",
          "[Added Lines]",
          "399:     if '__' in source:",
          "400:         raise ValueError('Double underscores not allowed')",
          "",
          "---------------"
        ]
      }
    }
  ]
}