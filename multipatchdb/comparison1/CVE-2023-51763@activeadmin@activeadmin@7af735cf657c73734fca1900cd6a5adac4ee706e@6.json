{
  "cve_id": "CVE-2023-51763",
  "cve_desc": "csv_builder.rb in ActiveAdmin (aka Active Admin) before 3.2.0 allows CSV injection.",
  "repo": "activeadmin/activeadmin",
  "patch_hash": "7af735cf657c73734fca1900cd6a5adac4ee706e",
  "patch_info": {
    "commit_hash": "7af735cf657c73734fca1900cd6a5adac4ee706e",
    "repo": "activeadmin/activeadmin",
    "commit_url": "https://github.com/activeadmin/activeadmin/commit/7af735cf657c73734fca1900cd6a5adac4ee706e",
    "files": [
      "lib/active_admin/csv_builder.rb",
      "spec/unit/csv_builder_spec.rb"
    ],
    "message": "Backport to 3-0 stable branch protect against CSV Injection (#8161) (#8167)\n\nprotect against CSV Injection\n\nRead more here https://owasp.org/www-community/attacks/CSV_Injection",
    "before_after_code_files": [
      "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb",
      "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb"
    ]
  },
  "patch_diff": {
    "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb": [
      "File: lib/active_admin/csv_builder.rb -> lib/active_admin/csv_builder.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:       csv << bom if bom",
      "53:       if column_names",
      "55:       end",
      "57:       controller.send(:in_paginated_batches) do |resource|",
      "",
      "[Removed Lines]",
      "54:         csv << CSV.generate_line(columns.map { |c| encode c.name, options }, **csv_options)",
      "",
      "[Added Lines]",
      "54:         csv << CSV.generate_line(columns.map { |c| sanitize(encode(c.name, options)) }, **csv_options)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71:     def build_row(resource, columns, options)",
      "72:       columns.map do |column|",
      "74:       end",
      "75:     end",
      "",
      "[Removed Lines]",
      "73:         encode call_method_or_proc_on(resource, column.data), options",
      "",
      "[Added Lines]",
      "73:         sanitize(encode(call_method_or_proc_on(resource, column.data), options))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "86:       end",
      "87:     end",
      "89:     def method_missing(method, *args, &block)",
      "90:       if @view_context.respond_to? method",
      "91:         @view_context.public_send method, *args, &block",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "89:     def sanitize(content)",
      "90:       Sanitizer.sanitize(content)",
      "91:     end",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "120:       @column_transitive_options ||= @options.slice(*COLUMN_TRANSITIVE_OPTIONS)",
      "121:     end",
      "122:   end",
      "123: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "128:   # Prevents CSV Injection according to https://owasp.org/www-community/attacks/CSV_Injection",
      "129:   module Sanitizer",
      "130:     extend self",
      "132:     ATTACK_CHARACTERS = [\"=\", \"+\", \"-\", \"@\", \"\\t\", \"\\r\"].freeze",
      "134:     def sanitize(value)",
      "135:       return \"'#{value}\" if require_sanitization?(value)",
      "137:       value",
      "138:     end",
      "140:     def require_sanitization?(value)",
      "141:       value.is_a?(String) && value.starts_with?(*ATTACK_CHARACTERS)",
      "142:     end",
      "143:   end",
      "",
      "---------------"
    ],
    "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb": [
      "File: spec/unit/csv_builder_spec.rb -> spec/unit/csv_builder_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "277:       end",
      "278:     end",
      "279:   end",
      "280: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "281:   context \"csv injection\" do",
      "282:     let(:dummy_controller) do",
      "283:       class DummyController",
      "284:         def in_paginated_batches(&block)",
      "285:           Post.all.each(&block)",
      "286:         end",
      "288:         def view_context",
      "289:           MethodOrProcHelper",
      "290:         end",
      "291:       end",
      "292:       DummyController.new",
      "293:     end",
      "295:     let(:builder) do",
      "296:       ActiveAdmin::CSVBuilder.new do",
      "297:         column(:id)",
      "298:         column(:title)",
      "299:       end",
      "300:     end",
      "302:     [\"=\", \"+\", \"-\", \"@\", \"\\t\", \"\\r\"].each do |char|",
      "303:       it \"prepends a single quote when column starts with a #{char} character\" do",
      "304:         attack = \"#{char}1+2\"",
      "306:         escaped_attack = \"'#{attack}\"",
      "307:         escaped_attack = \"\\\"#{escaped_attack}\\\"\" if char == \"\\r\"",
      "309:         post = Post.create!(title: attack)",
      "310:         receiver = []",
      "311:         builder.build dummy_controller, receiver",
      "312:         line = receiver.last",
      "313:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
      "314:       end",
      "316:       it \"accounts for the field separator when character #{char} is used to inject a formula\" do",
      "317:         attack = \"#{char}1+2'\\\" ;,#{char}1+2\"",
      "318:         escaped_attack = \"\\\"'#{attack.gsub('\"', '\"\"')}\\\"\"",
      "320:         post = Post.create!(title: attack)",
      "321:         receiver = []",
      "322:         builder.build dummy_controller, receiver",
      "323:         line = receiver.last",
      "324:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
      "325:       end",
      "326:     end",
      "327:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d52a2202617f265ca1ffaf0ea61260186a6a62e0",
      "candidate_info": {
        "commit_hash": "d52a2202617f265ca1ffaf0ea61260186a6a62e0",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/d52a2202617f265ca1ffaf0ea61260186a6a62e0",
        "files": [
          "CHANGELOG.md",
          "Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb",
          "package.json"
        ],
        "message": "Get ready for 3.2.3 release (#8417)",
        "before_after_code_files": [
          "Gemfile.lock||Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb||lib/active_admin/version.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Gemfile.lock||Gemfile.lock": [
          "File: Gemfile.lock -> Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: .",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.2)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.3)",
          "",
          "---------------"
        ],
        "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock": [
          "File: gemfiles/rails_61/Gemfile.lock -> gemfiles/rails_61/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.2)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.3)",
          "",
          "---------------"
        ],
        "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock": [
          "File: gemfiles/rails_70/Gemfile.lock -> gemfiles/rails_70/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.2)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.3)",
          "",
          "---------------"
        ],
        "lib/active_admin/version.rb||lib/active_admin/version.rb": [
          "File: lib/active_admin/version.rb -> lib/active_admin/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "2: module ActiveAdmin",
          "4: end",
          "",
          "[Removed Lines]",
          "3:   VERSION = \"3.2.2\"",
          "",
          "[Added Lines]",
          "3:   VERSION = \"3.2.3\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4777babf8c4db258da11e5cc9711d2d965151572",
      "candidate_info": {
        "commit_hash": "4777babf8c4db258da11e5cc9711d2d965151572",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/4777babf8c4db258da11e5cc9711d2d965151572",
        "files": [
          "spec/support/rails_template.rb"
        ],
        "message": "3.x: Fix strftime month directive (#8410)\n\nFix strftime month directive\n\n`%M` is minute of the hour, and Rails 7.2 is guarding against invalid\ntimestamps before executing migrations by default\n\nThis commit uses the correct zero-padded month directive `%m`\n\nFix #8368\n\nRef: https://ruby-doc.org/stdlib-3.1.0/libdoc/date/rdoc/DateTime.html#method-i-strftime",
        "before_after_code_files": [
          "spec/support/rails_template.rb||spec/support/rails_template.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spec/support/rails_template.rb||spec/support/rails_template.rb": [
          "File: spec/support/rails_template.rb -> spec/support/rails_template.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: create_file \"app/assets/javascripts/some-random-js.js\"",
          "6: create_file \"app/assets/images/a/favicon.ico\"",
          "10: template File.expand_path(\"templates/migrations/create_posts.tt\", __dir__), \"db/migrate/#{initial_timestamp}_create_posts.rb\"",
          "",
          "[Removed Lines]",
          "8: initial_timestamp = Time.now.strftime(\"%Y%M%d%H%M%S\").to_i",
          "",
          "[Added Lines]",
          "8: initial_timestamp = Time.now.strftime(\"%Y%m%d%H%M%S\").to_i",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37726f43fcb30476f36777d5ff5b5817443aa7c7",
      "candidate_info": {
        "commit_hash": "37726f43fcb30476f36777d5ff5b5817443aa7c7",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/37726f43fcb30476f36777d5ff5b5817443aa7c7",
        "files": [
          "CHANGELOG.md",
          "Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb",
          "package.json",
          "tasks/changelog.rb"
        ],
        "message": "Get ready for 3.2.0 release (#8168)",
        "before_after_code_files": [
          "Gemfile.lock||Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb||lib/active_admin/version.rb",
          "tasks/changelog.rb||tasks/changelog.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Gemfile.lock||Gemfile.lock": [
          "File: Gemfile.lock -> Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: PATH",
          "12:   remote: .",
          "13:   specs:",
          "15:       arbre (~> 1.2, >= 1.2.1)",
          "16:       formtastic (>= 3.1)",
          "17:       formtastic_i18n (>= 0.4)",
          "",
          "[Removed Lines]",
          "14:     activeadmin (3.1.0)",
          "",
          "[Added Lines]",
          "14:     activeadmin (3.2.0)",
          "",
          "---------------"
        ],
        "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock": [
          "File: gemfiles/rails_61/Gemfile.lock -> gemfiles/rails_61/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       formtastic (>= 3.1)",
          "7:       formtastic_i18n (>= 0.4)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.1.0)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.0)",
          "",
          "---------------"
        ],
        "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock": [
          "File: gemfiles/rails_70/Gemfile.lock -> gemfiles/rails_70/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       formtastic (>= 3.1)",
          "7:       formtastic_i18n (>= 0.4)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.1.0)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.0)",
          "",
          "---------------"
        ],
        "lib/active_admin/version.rb||lib/active_admin/version.rb": [
          "File: lib/active_admin/version.rb -> lib/active_admin/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "2: module ActiveAdmin",
          "4: end",
          "",
          "[Removed Lines]",
          "3:   VERSION = \"3.1.0\"",
          "",
          "[Added Lines]",
          "3:   VERSION = \"3.2.0\"",
          "",
          "---------------"
        ],
        "tasks/changelog.rb||tasks/changelog.rb": [
          "File: tasks/changelog.rb -> tasks/changelog.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   end",
          "108:   def merged_pr_ids_since(date)",
          "110:     commits.map do |_sha, message|",
          "111:       match = /Merge pull request #(\\d+)/.match(message)",
          "112:       match ||= /\\(#(\\d+)\\)$/.match(message)",
          "",
          "[Removed Lines]",
          "109:     commits = `git log --oneline origin/master --since '#{date}'`.split(\"\\n\").map { |l| l.split(/\\s/, 2) }",
          "",
          "[Added Lines]",
          "109:     commits = `git log --oneline origin/3-0-stable --since '#{date}'`.split(\"\\n\").map { |l| l.split(/\\s/, 2) }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "171cfad03c33eeaa9ff2ce98bd4433a80b92fe62",
      "candidate_info": {
        "commit_hash": "171cfad03c33eeaa9ff2ce98bd4433a80b92fe62",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/171cfad03c33eeaa9ff2ce98bd4433a80b92fe62",
        "files": [
          "lib/active_admin/filters/forms.rb"
        ],
        "message": "Backport to 3-0 stable branch support citext column type in string filter (#8089) (#8165)\n\nAdd support for citext column types\n\nCo-authored-by: Francesco Belladonna <francesco@fc5.me>",
        "before_after_code_files": [
          "lib/active_admin/filters/forms.rb||lib/active_admin/filters/forms.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/active_admin/filters/forms.rb||lib/active_admin/filters/forms.rb": [
          "File: lib/active_admin/filters/forms.rb -> lib/active_admin/filters/forms.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:           case column.type",
          "32:           when :date, :datetime",
          "33:             :date_range",
          "35:             :string",
          "36:           when :integer, :float, :decimal",
          "37:             :numeric",
          "",
          "[Removed Lines]",
          "34:           when :string, :text",
          "",
          "[Added Lines]",
          "34:           when :string, :text, :citext",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "697be2b183491beadc8f0b7d8b5bfb44f2387909",
      "candidate_info": {
        "commit_hash": "697be2b183491beadc8f0b7d8b5bfb44f2387909",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/697be2b183491beadc8f0b7d8b5bfb44f2387909",
        "files": [
          "lib/active_admin/csv_builder.rb",
          "spec/unit/csv_builder_spec.rb"
        ],
        "message": "Protect against CSV Injection (#8161)\n\nprotect against CSV Injection\n\nRead more here https://owasp.org/www-community/attacks/CSV_Injection",
        "before_after_code_files": [
          "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb",
          "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb",
            "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb"
          ],
          "candidate": [
            "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb",
            "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb": [
          "File: lib/active_admin/csv_builder.rb -> lib/active_admin/csv_builder.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:       csv << bom if bom",
          "53:       if column_names",
          "55:       end",
          "57:       controller.send(:in_paginated_batches) do |resource|",
          "",
          "[Removed Lines]",
          "54:         csv << CSV.generate_line(columns.map { |c| encode c.name, options }, **csv_options)",
          "",
          "[Added Lines]",
          "54:         csv << CSV.generate_line(columns.map { |c| sanitize(encode(c.name, options)) }, **csv_options)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     def build_row(resource, columns, options)",
          "72:       columns.map do |column|",
          "74:       end",
          "75:     end",
          "",
          "[Removed Lines]",
          "73:         encode call_method_or_proc_on(resource, column.data), options",
          "",
          "[Added Lines]",
          "73:         sanitize(encode(call_method_or_proc_on(resource, column.data), options))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:       end",
          "87:     end",
          "89:     def method_missing(method, *args, &block)",
          "90:       if @view_context.respond_to? method",
          "91:         @view_context.public_send method, *args, &block",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:     def sanitize(content)",
          "90:       Sanitizer.sanitize(content)",
          "91:     end",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "120:       @column_transitive_options ||= @options.slice(*COLUMN_TRANSITIVE_OPTIONS)",
          "121:     end",
          "122:   end",
          "123: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:   # Prevents CSV Injection according to https://owasp.org/www-community/attacks/CSV_Injection",
          "129:   module Sanitizer",
          "130:     extend self",
          "132:     ATTACK_CHARACTERS = ['=', '+', '-', '@', \"\\t\", \"\\r\"].freeze",
          "134:     def sanitize(value)",
          "135:       return \"'#{value}\" if require_sanitization?(value)",
          "137:       value",
          "138:     end",
          "140:     def require_sanitization?(value)",
          "141:       value.is_a?(String) && value.starts_with?(*ATTACK_CHARACTERS)",
          "142:     end",
          "143:   end",
          "",
          "---------------"
        ],
        "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb": [
          "File: spec/unit/csv_builder_spec.rb -> spec/unit/csv_builder_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "277:       end",
          "278:     end",
          "279:   end",
          "280: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281:   context 'csv injection' do",
          "282:     let(:dummy_controller) do",
          "283:       class DummyController",
          "284:         def in_paginated_batches(&block)",
          "285:           Post.all.each(&block)",
          "286:         end",
          "288:         def view_context",
          "289:           MethodOrProcHelper",
          "290:         end",
          "291:       end",
          "292:       DummyController.new",
          "293:     end",
          "295:     let(:builder) do",
          "296:       ActiveAdmin::CSVBuilder.new do",
          "297:         column(:id)",
          "298:         column(:title)",
          "299:       end",
          "300:     end",
          "302:     ['=', '+', '-', '@', \"\\t\", \"\\r\"].each do |char|",
          "303:       it \"prepends a single quote when column starts with a #{char} character\" do",
          "304:         attack = \"#{char}1+2\"",
          "306:         escaped_attack = \"'#{attack}\"",
          "307:         escaped_attack = \"\\\"#{escaped_attack}\\\"\" if char == \"\\r\"",
          "309:         post = Post.create!(title: attack)",
          "310:         receiver = []",
          "311:         builder.build dummy_controller, receiver",
          "312:         line = receiver.last",
          "313:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
          "314:       end",
          "316:       it \"accounts for the field separator when character #{char} is used to inject a formula\" do",
          "317:         attack = \"#{char}1+2'\\\" ;,#{char}1+2\"",
          "318:         escaped_attack = \"\\\"'#{attack.gsub('\"', '\"\"')}\\\"\"",
          "320:         post = Post.create!(title: attack)",
          "321:         receiver = []",
          "322:         builder.build dummy_controller, receiver",
          "323:         line = receiver.last",
          "324:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
          "325:       end",
          "326:     end",
          "327:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}