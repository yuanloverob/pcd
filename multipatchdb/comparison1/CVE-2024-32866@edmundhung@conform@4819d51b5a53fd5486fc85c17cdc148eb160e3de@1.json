{
  "cve_id": "CVE-2024-32866",
  "cve_desc": "Conform, a type-safe form validation library, allows the parsing of nested objects in the form of `object.property`. Due to an improper implementation of this feature in versions prior to 1.1.1, an attacker can exploit the feature to trigger prototype pollution by passing a crafted input to `parseWith...` functions. Applications that use conform for server-side validation of form data or URL parameters are affected by this vulnerability. Version 1.1.1 contains a patch for the issue.\n",
  "repo": "edmundhung/conform",
  "patch_hash": "4819d51b5a53fd5486fc85c17cdc148eb160e3de",
  "patch_info": {
    "commit_hash": "4819d51b5a53fd5486fc85c17cdc148eb160e3de",
    "repo": "edmundhung/conform",
    "commit_url": "https://github.com/edmundhung/conform/commit/4819d51b5a53fd5486fc85c17cdc148eb160e3de",
    "files": [
      "packages/conform-dom/formdata.ts"
    ],
    "message": "Merge pull request from GHSA-624g-8qjg-8qxf",
    "before_after_code_files": [
      "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
    ]
  },
  "patch_diff": {
    "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts": [
      "File: packages/conform-dom/formdata.ts -> packages/conform-dom/formdata.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "38:  return name",
      "39:   .split(/\\.|(\\[\\d*\\])/)",
      "40:   .reduce<Array<string | number>>((result, segment) => {",
      "42:     if (segment.startsWith('[') && segment.endsWith(']')) {",
      "43:      const index = segment.slice(1, -1);",
      "",
      "[Removed Lines]",
      "41:    if (typeof segment !== 'undefined' && segment !== '') {",
      "",
      "[Added Lines]",
      "41:    if (",
      "42:     typeof segment !== 'undefined' &&",
      "43:     segment !== '' &&",
      "44:     segment !== '__proto__' &&",
      "45:     segment !== 'constructor' &&",
      "46:     segment !== 'prototype'",
      "47:    ) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "114:   const nextKey = paths[index + 1];",
      "115:   const newValue =",
      "116:    index != lastIndex",
      "118:     : valueFn(pointer[key]);",
      "120:   pointer[key] = newValue;",
      "",
      "[Removed Lines]",
      "117:     ? pointer[key] ?? (typeof nextKey === 'number' ? [] : {})",
      "",
      "[Added Lines]",
      "123:     ? Object.hasOwn(pointer, key)",
      "124:      ? pointer[key]",
      "125:      : typeof nextKey === 'number'",
      "126:      ? []",
      "127:      : {}",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "133:    break;",
      "134:   }",
      "136:   if (isPlainObject(pointer) && typeof path === 'string') {",
      "137:    pointer = pointer[path];",
      "138:   } else if (Array.isArray(pointer) && typeof path === 'number') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "146:   if (!Object.hasOwn(pointer, path)) {",
      "147:    return;",
      "148:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7d511081a01c4d92fbba9d1637846e925703e3fe",
      "candidate_info": {
        "commit_hash": "7d511081a01c4d92fbba9d1637846e925703e3fe",
        "repo": "edmundhung/conform",
        "commit_url": "https://github.com/edmundhung/conform/commit/7d511081a01c4d92fbba9d1637846e925703e3fe",
        "files": [
          "packages/conform-dom/formdata.ts"
        ],
        "message": "refactor: use Object.prototype.hasOwnProperty instead of Object.own",
        "before_after_code_files": [
          "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
          ],
          "candidate": [
            "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts": [
          "File: packages/conform-dom/formdata.ts -> packages/conform-dom/formdata.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   const nextKey = paths[index + 1];",
          "121:   const newValue =",
          "122:    index != lastIndex",
          "124:      ? pointer[key]",
          "125:      : typeof nextKey === 'number'",
          "126:      ? []",
          "",
          "[Removed Lines]",
          "123:     ? Object.hasOwn(pointer, key)",
          "",
          "[Added Lines]",
          "123:     ? Object.prototype.hasOwnProperty.call(pointer, key)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:    break;",
          "144:   }",
          "147:    return;",
          "148:   }",
          "",
          "[Removed Lines]",
          "146:   if (!Object.hasOwn(pointer, path)) {",
          "",
          "[Added Lines]",
          "146:   if (!Object.prototype.hasOwnProperty.call(pointer, path)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb604dd58b99e2d12716d901a23bfca724e741ef",
      "candidate_info": {
        "commit_hash": "cb604dd58b99e2d12716d901a23bfca724e741ef",
        "repo": "edmundhung/conform",
        "commit_url": "https://github.com/edmundhung/conform/commit/cb604dd58b99e2d12716d901a23bfca724e741ef",
        "files": [
          "packages/conform-dom/formdata.ts"
        ],
        "message": "fix: apply v1 patch for the prototype pollution vulnerability",
        "before_after_code_files": [
          "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
          ],
          "candidate": [
            "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/conform-dom/formdata.ts||packages/conform-dom/formdata.ts": [
          "File: packages/conform-dom/formdata.ts -> packages/conform-dom/formdata.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  return name",
          "34:   .split(/\\.|(\\[\\d*\\])/)",
          "35:   .reduce<Array<string | number>>((result, segment) => {",
          "37:     if (segment.startsWith('[') && segment.endsWith(']')) {",
          "38:      const index = segment.slice(1, -1);",
          "",
          "[Removed Lines]",
          "36:    if (typeof segment !== 'undefined' && segment !== '') {",
          "",
          "[Added Lines]",
          "36:    if (",
          "37:     typeof segment !== 'undefined' &&",
          "38:     segment !== '' &&",
          "39:     segment !== '__proto__' &&",
          "40:     segment !== 'constructor' &&",
          "41:     segment !== 'prototype'",
          "42:    ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:   const nextKey = paths[index + 1];",
          "88:   const newValue =",
          "89:    index != lastIndex",
          "91:     : valueFn(pointer[key]);",
          "93:   pointer[key] = newValue;",
          "",
          "[Removed Lines]",
          "90:     ? pointer[key] ?? (typeof nextKey === 'number' ? [] : {})",
          "",
          "[Added Lines]",
          "96:     ? Object.prototype.hasOwnProperty.call(pointer, key)",
          "97:      ? pointer[key]",
          "98:      : typeof nextKey === 'number'",
          "99:      ? []",
          "100:      : {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}