{
  "cve_id": "CVE-2019-15599",
  "cve_desc": "A Code Injection exists in tree-kill on Windows which allows a remote code execution when an attacker is able to control the input into the command.",
  "repo": "pkrumins/node-tree-kill",
  "patch_hash": "deee138a8cbc918463d8af5ce8c2bec33c3fd164",
  "patch_info": {
    "commit_hash": "deee138a8cbc918463d8af5ce8c2bec33c3fd164",
    "repo": "pkrumins/node-tree-kill",
    "commit_url": "https://github.com/pkrumins/node-tree-kill/commit/deee138a8cbc918463d8af5ce8c2bec33c3fd164",
    "files": [
      "index.js",
      "test/test.js"
    ],
    "message": "fix: handle sanitising better, add tests",
    "before_after_code_files": [
      "index.js||index.js",
      "test/test.js||test/test.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: var exec = childProcess.exec;",
      "7: module.exports = function (pid, signal, callback) {",
      "10:     }",
      "12:     var tree = {};",
      "13:     var pidsToProcess = {};",
      "14:     tree[pid] = [];",
      "15:     pidsToProcess[pid] = 1;",
      "22:     switch (process.platform) {",
      "23:     case 'win32':",
      "",
      "[Removed Lines]",
      "8:     if (typeof pid !== \"number\") {",
      "9:         throw new Error(\"pid must be a number\");",
      "17:     if (typeof signal === 'function' && callback === undefined) {",
      "18:       callback = signal;",
      "19:       signal = undefined;",
      "20:     }",
      "",
      "[Added Lines]",
      "8:     if (typeof signal === 'function' && callback === undefined) {",
      "9:         callback = signal;",
      "10:         signal = undefined;",
      "11:     }",
      "13:     pid = parseInt(pid);",
      "14:     if (Number.isNaN(pid)) {",
      "15:         if (callback) {",
      "16:             return callback(new Error(\"pid must be a number\"));",
      "17:         } else {",
      "18:             throw new Error(\"pid must be a number\");",
      "19:         }",
      "",
      "---------------"
    ],
    "test/test.js||test/test.js": [
      "File: test/test.js -> test/test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "31:             return done()",
      "32:         })",
      "33:     })",
      "34: })",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     it('should reject invalid pid', function(done){",
      "36:         var p = fork('./test/spin')",
      "37:         assert.ok(p.pid)",
      "39:         kill('rm -rf /dev/null', function(err) {",
      "40:             assert.ok(typeof err === 'object')",
      "41:             return done()",
      "42:         })",
      "43:     })",
      "45:     it('should reject invalid pids even if no callback', function(done){",
      "46:         var p = fork('./test/spin')",
      "47:         assert.ok(p.pid)",
      "49:         try {",
      "50:             kill('rm -rf /dev/null')",
      "51:             assert.fail('should have thrown')",
      "52:         } catch (err) {",
      "53:             assert.ok(typeof err === 'object')",
      "54:             return done();",
      "55:         }",
      "56:     })",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff73dbf144c4c2daa67799a50dfff59cd455c63c",
      "candidate_info": {
        "commit_hash": "ff73dbf144c4c2daa67799a50dfff59cd455c63c",
        "repo": "pkrumins/node-tree-kill",
        "commit_url": "https://github.com/pkrumins/node-tree-kill/commit/ff73dbf144c4c2daa67799a50dfff59cd455c63c",
        "files": [
          "index.js"
        ],
        "message": "fix: sanitise pid parameter (#31)\n\nThis patch adds a simple check to the process ID passed in, ensuring it\nis a number, and throwing an error otherwise. The aim is to fix the\nissue explained here:\n\n- https://hackerone.com/reports/701183\n- https://snyk.io/vuln/SNYK-JS-TREEKILL-536781\n\nFixes: #30",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: var exec = childProcess.exec;",
          "7: module.exports = function (pid, signal, callback) {",
          "8:     var tree = {};",
          "9:     var pidsToProcess = {};",
          "10:     tree[pid] = [];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:     if (typeof pid !== \"number\") {",
          "9:         throw new Error(\"pid must be a number\");",
          "10:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}