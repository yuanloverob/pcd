{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb678cd18b50f817b4d88fd2c1d31aea675c1728",
      "candidate_info": {
        "commit_hash": "eb678cd18b50f817b4d88fd2c1d31aea675c1728",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/eb678cd18b50f817b4d88fd2c1d31aea675c1728",
        "files": [
          "kylin-it/src/test/resources/query/sql_timestamp/query01.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query02.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query03.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query05.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query11.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query12.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query13.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query14.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query21.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query23.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query25.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql"
        ],
        "message": "KYLIN-4419 Refine IT sqls with adding order by\n\n(cherry picked from commit 67f347ba68093fb79b791b80ab959dd1921c8054)",
        "before_after_code_files": [
          "kylin-it/src/test/resources/query/sql_timestamp/query01.sql||kylin-it/src/test/resources/query/sql_timestamp/query01.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query02.sql||kylin-it/src/test/resources/query/sql_timestamp/query02.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query03.sql||kylin-it/src/test/resources/query/sql_timestamp/query03.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query05.sql||kylin-it/src/test/resources/query/sql_timestamp/query05.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query11.sql||kylin-it/src/test/resources/query/sql_timestamp/query11.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query12.sql||kylin-it/src/test/resources/query/sql_timestamp/query12.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query13.sql||kylin-it/src/test/resources/query/sql_timestamp/query13.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query14.sql||kylin-it/src/test/resources/query/sql_timestamp/query14.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query21.sql||kylin-it/src/test/resources/query/sql_timestamp/query21.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22.sql||kylin-it/src/test/resources/query/sql_timestamp/query22.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query23.sql||kylin-it/src/test/resources/query/sql_timestamp/query23.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query25.sql||kylin-it/src/test/resources/query/sql_timestamp/query25.sql",
          "kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-it/src/test/resources/query/sql_timestamp/query01.sql||kylin-it/src/test/resources/query/sql_timestamp/query01.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query01.sql -> kylin-it/src/test/resources/query/sql_timestamp/query01.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query02.sql||kylin-it/src/test/resources/query/sql_timestamp/query02.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query02.sql -> kylin-it/src/test/resources/query/sql_timestamp/query02.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query03.sql||kylin-it/src/test/resources/query/sql_timestamp/query03.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query03.sql -> kylin-it/src/test/resources/query/sql_timestamp/query03.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query05.sql||kylin-it/src/test/resources/query/sql_timestamp/query05.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query05.sql -> kylin-it/src/test/resources/query/sql_timestamp/query05.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query11.sql||kylin-it/src/test/resources/query/sql_timestamp/query11.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query11.sql -> kylin-it/src/test/resources/query/sql_timestamp/query11.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  FROM TEST_KYLIN_FACT",
          "20:  WHERE CAL_DT > cast(TIMESTAMPADD(Day, -15000, CURRENT_DATE) as DATE)",
          "21: GROUP BY CAL_DT",
          "22: ;{\"scanRowCount\":731,\"scanBytes\":215217,\"scanFiles\":1,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: ORDER BY CAL_DT",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query12.sql||kylin-it/src/test/resources/query/sql_timestamp/query12.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query12.sql -> kylin-it/src/test/resources/query/sql_timestamp/query12.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  FROM TEST_KYLIN_FACT",
          "20:  WHERE CAL_DT > cast(TIMESTAMPADD(Day, -2000, CURRENT_DATE) as DATE)",
          "21: GROUP BY CAL_DT",
          "22: ;{\"scanRowCount\":0,\"scanBytes\":215217,\"scanFiles\":1,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: ORDER BY CAL_DT",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query13.sql||kylin-it/src/test/resources/query/sql_timestamp/query13.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query13.sql -> kylin-it/src/test/resources/query/sql_timestamp/query13.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  FROM TEST_KYLIN_FACT",
          "20:  WHERE CAL_DT > cast(TIMESTAMPADD(Day, -0, CURRENT_TIMESTAMP) as DATE)",
          "21: GROUP BY CAL_DT",
          "22: ;{\"scanRowCount\":0,\"scanBytes\":215217,\"scanFiles\":1,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: ORDER BY CAL_DT",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query14.sql||kylin-it/src/test/resources/query/sql_timestamp/query14.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query14.sql -> kylin-it/src/test/resources/query/sql_timestamp/query14.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  FROM TEST_KYLIN_FACT",
          "20:  WHERE CAL_DT > cast(TIMESTAMPADD(Day, -15000, CURRENT_TIMESTAMP ) as DATE)",
          "21: GROUP BY CAL_DT",
          "22: ;{\"scanRowCount\":731,\"scanBytes\":215217,\"scanFiles\":1,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: ORDER BY CAL_DT",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query21.sql||kylin-it/src/test/resources/query/sql_timestamp/query21.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query21.sql -> kylin-it/src/test/resources/query/sql_timestamp/query21.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql -> kylin-it/src/test/resources/query/sql_timestamp/query21_a.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22.sql||kylin-it/src/test/resources/query/sql_timestamp/query22.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22_a.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22_b.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22_c.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22_d.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql||kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql -> kylin-it/src/test/resources/query/sql_timestamp/query22_e.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query23.sql||kylin-it/src/test/resources/query/sql_timestamp/query23.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query23.sql -> kylin-it/src/test/resources/query/sql_timestamp/query23.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql -> kylin-it/src/test/resources/query/sql_timestamp/query23_a.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query25.sql||kylin-it/src/test/resources/query/sql_timestamp/query25.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query25.sql -> kylin-it/src/test/resources/query/sql_timestamp/query25.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ],
        "kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql||kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql": [
          "File: kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql -> kylin-it/src/test/resources/query/sql_timestamp/query25_a.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  inner JOIN edw.test_sites as test_sites",
          "27:  ON test_kylin_fact.lstg_site_id = test_sites.site_id",
          "28:  GROUP BY test_kylin_fact.cal_dt",
          "29: ;{\"scanRowCount\":1462,\"scanBytes\":215217,\"scanFiles\":2,\"cuboidId\":262144}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ORDER BY test_kylin_fact.cal_dt",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c4caf114421cb407450e02f1e5fb12dff15a6f4",
      "candidate_info": {
        "commit_hash": "4c4caf114421cb407450e02f1e5fb12dff15a6f4",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/4c4caf114421cb407450e02f1e5fb12dff15a6f4",
        "files": [
          "webapp/app/js/model/cubeConfig.js",
          "webapp/app/partials/modelDesigner/conditions_settings.html"
        ],
        "message": "KYLIN-4495 Support custom date formats for partition date column\n\nSupport custom date formats for partition date column.\n\n(cherry picked from commit ca5255c58e4dfff023ee54764601fed2f51a81cd)",
        "before_after_code_files": [
          "webapp/app/js/model/cubeConfig.js||webapp/app/js/model/cubeConfig.js",
          "webapp/app/partials/modelDesigner/conditions_settings.html||webapp/app/partials/modelDesigner/conditions_settings.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "webapp/app/js/model/cubeConfig.js||webapp/app/js/model/cubeConfig.js": [
          "File: webapp/app/js/model/cubeConfig.js -> webapp/app/js/model/cubeConfig.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     'yyyyMMddHH',",
          "109:     'yyyyMMdd',",
          "112:   ],",
          "113:   partitionTimeFormatOpt:[",
          "114:     'HH:mm:ss',",
          "115:     'HH:mm',",
          "116:     'HH',",
          "118:   ],",
          "119:   rowKeyShardOptions:[",
          "120:     true,false",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:     'other'",
          "117:     'other'",
          "",
          "---------------"
        ],
        "webapp/app/partials/modelDesigner/conditions_settings.html||webapp/app/partials/modelDesigner/conditions_settings.html": [
          "File: webapp/app/partials/modelDesigner/conditions_settings.html -> webapp/app/partials/modelDesigner/conditions_settings.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:               <label class=\"control-label col-xs-12 col-sm-3 no-padding-right font-color-default\"><b>Date Format</b></label>",
          "112:               <div class=\"col-xs-12 col-sm-6\">",
          "113:                 <select chosen",
          "115:                         ng-if=\"state.mode=='edit'\"",
          "116:                         ng-model=\"partition_date.type\"",
          "117:                         ng-required=\"partition_date.type\"",
          "",
          "[Removed Lines]",
          "114:                         width=\"'98.5%'\"",
          "",
          "[Added Lines]",
          "114:                         width=\"'49%'\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:                         data-placement=\"\">",
          "122:                   <option value=\"\">--Select Date Format--</option>",
          "123:                 </select>",
          "125:                   class=\"form-control format-input\"",
          "127:                   ng-model=\"partition_date.format\"",
          "128:                   ng-required=\"partition_date.format\"",
          "129:                   ng-class=\"{ 'col-5': partition_date.type === 'other' }\"",
          "",
          "[Removed Lines]",
          "124:                 <input",
          "126:                   ng-if=\"partition_date.type === 'other'\"",
          "",
          "[Added Lines]",
          "124:                 <input width=\"'49%'\"",
          "126:                   ng-if=\"state.mode == 'edit' && partition_date.type === 'other'\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "172:               <label class=\"control-label col-xs-12 col-sm-3 no-padding-right font-color-default\"><b>Time Format</b></label>",
          "173:               <div class=\"col-xs-12 col-sm-6\">",
          "174:                 <select chosen",
          "176:                   ng-if=\"state.mode=='edit'\"",
          "177:                   ng-model=\"partition_time.type\"",
          "178:                   ng-required=\"partition_time.type\"",
          "",
          "[Removed Lines]",
          "175:                   width=\"'98.5%'\"",
          "",
          "[Added Lines]",
          "175:                   width=\"'49%'\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:                   data-placement=\"\">",
          "182:                   <option value=\"\">--Select Time Format--</option>",
          "183:                 </select>",
          "185:                   class=\"form-control format-input\"",
          "187:                   ng-model=\"partition_time.format\"",
          "188:                   ng-required=\"partition_time.format\"",
          "189:                   ng-class=\"{ 'col-5': partition_time.type === 'other' }\"",
          "",
          "[Removed Lines]",
          "184:                 <input",
          "186:                   ng-if=\"partition_time.type === 'other'\"",
          "",
          "[Added Lines]",
          "184:                 <input width=\"'49%'\"",
          "186:                   ng-if=\"state.mode == 'edit' && partition_time.type === 'other'\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50eb7be759a3532b39b67fe0f7963f33e97fbe83",
      "candidate_info": {
        "commit_hash": "50eb7be759a3532b39b67fe0f7963f33e97fbe83",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/50eb7be759a3532b39b67fe0f7963f33e97fbe83",
        "files": [
          "query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java"
        ],
        "message": "KYLIN-4879 add UT\n\n(cherry picked from commit 4c5f5fdd02c5b424b02b9496163a05820e1b97ca)",
        "before_after_code_files": [
          "query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java||query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java||query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java": [
          "File: query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java -> query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:             Assert.assertEquals(\"select count(*)\",",
          "352:                     QueryUtil.removeCommentInSql(\"select count(*) -- , --\\t --/ --\"));",
          "353:         }",
          "354:     }",
          "356:     @Test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "354:         {",
          "355:             Assert.assertEquals(\"select 1\\t''\", QueryUtil.removeCommentInSql(\"select 1\\t''/* comment */\"));",
          "356:         }",
          "357:         {",
          "358:             Assert.assertEquals(\"select ' \\t\\n,\\r/-'\", QueryUtil.removeCommentInSql(\"select ' \\t\\n,\\r/-'\"));",
          "359:         }",
          "360:         {",
          "361:             Assert.assertEquals(\"select ' \\t\\n,\\r/-'\", QueryUtil.removeCommentInSql(\"select ' \\t\\n,\\r/-'--comment\"));",
          "362:         }",
          "363:         {",
          "364:             Assert.assertEquals(\"select ' \\t\\n,\\r/-'\", QueryUtil.removeCommentInSql(\"select ' \\t\\n,\\r/-'/*comment*/\"));",
          "365:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc5f2951f1c0791d62afcd0c741e2e08d8cc958c",
      "candidate_info": {
        "commit_hash": "dc5f2951f1c0791d62afcd0c741e2e08d8cc958c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/dc5f2951f1c0791d62afcd0c741e2e08d8cc958c",
        "files": [
          ".github/workflows/maven.yml",
          "build/bin/system-cube.sh",
          "core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java",
          "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java",
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java",
          "webapp/app/js/services/cubes.js"
        ],
        "message": "Fix test case and fix system-cube.sh script\n\nRefine system cube desc to reduce cuboid number\n\nAdd queryExecutionMetricsMap shutdown\n\nChange Decimal datatype to Double datatype",
        "before_after_code_files": [
          "build/bin/system-cube.sh||build/bin/system-cube.sh",
          "core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java||core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java",
          "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java||core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java||server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java",
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java||tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java",
          "webapp/app/js/services/cubes.js||webapp/app/js/services/cubes.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/system-cube.sh||build/bin/system-cube.sh": [
          "File: build/bin/system-cube.sh -> build/bin/system-cube.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: KYLIN_ENV=`grep \"^kylin.env=\" $KYLIN_HOME/conf/kylin.properties | cut -d \"=\" -f 2`",
          "39: KYLIN_ENV=${KYLIN_ENV:-\"QA\"}",
          "44: SC_NAME_4=\"KYLIN_HIVE_METRICS_JOB_${KYLIN_ENV}\"",
          "45: SC_NAME_5=\"KYLIN_HIVE_METRICS_JOB_EXCEPTION_${KYLIN_ENV}\"",
          "",
          "[Removed Lines]",
          "41: SC_NAME_1=\"KYLIN_HIVE_METRICS_QUERY_${KYLIN_ENV}\"",
          "42: SC_NAME_2=\"KYLIN_HIVE_METRICS_QUERY_CUBE_${KYLIN_ENV}\"",
          "43: SC_NAME_3=\"KYLIN_HIVE_METRICS_QUERY_RPC_${KYLIN_ENV}\"",
          "",
          "[Added Lines]",
          "41: SC_NAME_1=\"KYLIN_HIVE_METRICS_QUERY_EXECUTION_${KYLIN_ENV}\"",
          "42: SC_NAME_2=\"KYLIN_HIVE_METRICS_QUERY_SPARK_JOB_${KYLIN_ENV}\"",
          "43: SC_NAME_3=\"KYLIN_HIVE_METRICS_QUERY_SPARK_STAGE_${KYLIN_ENV}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:  cat <<-EOF > ${SINK_TOOLS_FILE}",
          "75:  [",
          "77:     {",
          "78:        \"sink\": \"hive\",",
          "79:        \"storage_type\": 4,",
          "",
          "[Removed Lines]",
          "76:    [",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:          \"kylin.cube.max-building-segments\": \"1\"",
          "82:        }",
          "83:     }",
          "85:  ]",
          "86:  EOF",
          "87:   $KYLIN_HOME/bin/kylin.sh org.apache.kylin.tool.metrics.systemcube.SCCreator \\",
          "",
          "[Removed Lines]",
          "84:     ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:   hive_client_mode=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.client`",
          "93:   # Get Database",
          "96:   # 'create database' failed will not exit when donot have permission to create database;",
          "99:   if [ \"${hive_client_mode}\" == \"beeline\" ]",
          "100:   then",
          "",
          "[Removed Lines]",
          "94:   system_database=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.database-for-flat-table | tr [a-z] [A-Z]`",
          "97:   sed -i -e 's/CREATE DATABASE /#CREATE DATABASE /g' ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql",
          "",
          "[Added Lines]",
          "92:   system_database_tmp=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.metrics.prefix`",
          "93:   system_database=${system_database_tmp:-\"KYLIN\"}",
          "94:   system_database=`echo ${system_database} | tr [a-z] [A-Z]`",
          "97:   sed -i -e 's/CREATE DATABASE /-- CREATE DATABASE /g' ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "104:       hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\/\\)'`",
          "105:       if [ -z ${hive2_url} ]; then",
          "106:           hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\)'`",
          "108:       else",
          "110:       fi",
          "112:       beeline ${beeline_params} -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "113:   else",
          "114:       hive -e \"CREATE DATABASE IF NOT EXISTS \"$system_database",
          "116:   fi",
          "118:   $KYLIN_HOME/bin/metastore.sh restore ${OUTPUT_FORDER}",
          "",
          "[Removed Lines]",
          "107:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}/${sample_database}}",
          "109:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}${sample_database}}",
          "115:       hive --database $sample_database -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "",
          "[Added Lines]",
          "107:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}/${system_database}}",
          "109:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}${system_database}}",
          "115:       hive --database $system_database -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "",
          "---------------"
        ],
        "core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java||core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java": [
          "File: core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java -> core-metrics/src/main/java/org/apache/kylin/metrics/QuerySparkMetrics.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import org.apache.kylin.metrics.property.QuerySparkExecutionEnum;",
          "25: import org.apache.kylin.metrics.property.QuerySparkJobEnum;",
          "26: import org.apache.kylin.metrics.property.QuerySparkStageEnum;",
          "27: import org.apache.kylin.shaded.com.google.common.cache.Cache;",
          "28: import org.apache.kylin.shaded.com.google.common.cache.CacheBuilder;",
          "29: import org.apache.kylin.shaded.com.google.common.cache.RemovalListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import org.apache.kylin.shaded.com.google.common.annotations.VisibleForTesting;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:                 KylinConfig.getInstanceFromEnv().getKylinMetricsCacheExpireSeconds(), TimeUnit.SECONDS);",
          "90:     }",
          "93:     public static void init(RemovalListener removalListener) {",
          "94:         instance = new QuerySparkMetrics(removalListener);",
          "95:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:     private void shutdown() {",
          "94:         queryExecutionMetricsMap.invalidateAll();",
          "95:     }",
          "98:     @VisibleForTesting",
          "",
          "---------------"
        ],
        "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java||core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java": [
          "File: core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java -> core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/MetricsSystem.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.util.concurrent.ConcurrentHashMap;",
          "28: import org.apache.kylin.common.KylinConfig;",
          "29: import org.apache.kylin.metrics.lib.ActiveReservoir;",
          "30: import org.apache.kylin.metrics.lib.ActiveReservoirRecordFilter;",
          "31: import org.slf4j.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import org.apache.kylin.metrics.QuerySparkMetrics;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     }",
          "57:     public void shutdown() throws IOException {",
          "58:         for (ActiveReservoir entry : activeReservoirs.values()) {",
          "59:             entry.close();",
          "60:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         QuerySparkMetrics.getInstance().getQueryExecutionMetricsMap().invalidateAll();",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "896:         Map<Long, Long> hitFrequencyMap = null;",
          "897:         Map<Long, Long> queryMatchMap = null;",
          "899:             hitFrequencyMap = getTargetCuboidHitFrequency(cubeName);",
          "900:             queryMatchMap = cubeService.getCuboidQueryMatchCount(cubeName);",
          "901:         } catch (Exception e) {",
          "902:             logger.warn(\"Fail to query on system cube due to \" + e);",
          "905:         Set<Long> currentCuboidSet = cube.getCuboidScheduler().getAllCuboidIds();",
          "906:         return cubeService.getCuboidTreeResponse(cuboidScheduler, cuboidStatsMap, hitFrequencyMap, queryMatchMap,",
          "",
          "[Removed Lines]",
          "898:         try {",
          "903:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "912:     public CuboidTreeResponse getRecommendCuboids(@PathVariable String cubeName) throws IOException {",
          "913:         checkCubeExists(cubeName);",
          "914:         CubeInstance cube = cubeService.getCubeManager().getCube(cubeName);",
          "916:         if (recommendCuboidStatsMap == null || recommendCuboidStatsMap.isEmpty()) {",
          "917:             return new CuboidTreeResponse();",
          "918:         }",
          "",
          "[Removed Lines]",
          "915:         Map<Long, Long> recommendCuboidStatsMap = getRecommendCuboidList(cube);",
          "",
          "[Added Lines]",
          "918:         Map<Long, Long> recommendCuboidStatsMap = null;",
          "",
          "---------------"
        ],
        "server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java||server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java": [
          "File: server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java -> server-base/src/test/java/org/apache/kylin/rest/response/SQLResponseTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     @Test",
          "34:     public void testInterfaceConsistency() throws IOException {",
          "40:         SQLResponse sqlResponse = new SQLResponse(null, null, \"learn_cube\", 100, false, null, false, false);",
          "41:         String jsonStr = JsonUtil.writeValueAsString(sqlResponse);",
          "",
          "[Removed Lines]",
          "35:         String[] attrArray = new String[] { \"columnMetas\", \"results\", \"cube\", \"cuboidIds\", \"affectedRowCount\", \"isException\",",
          "36:                 \"exceptionMessage\", \"duration\", \"partial\", \"totalScanCount\", \"hitExceptionCache\", \"storageCacheUsed\",",
          "37:                 \"sparkPool\", \"pushDown\", \"traceUrl\", \"totalScanBytes\", \"totalScanFiles\",",
          "38:                 \"metadataTime\", \"totalSparkScanTime\" };",
          "",
          "[Added Lines]",
          "35:         String[] attrArray = new String[] { \"columnMetas\", \"results\", \"cube\", \"cuboidIds\",",
          "36:                 \"realizationTypes\", \"affectedRowCount\", \"isException\",",
          "37:                 \"exceptionMessage\", \"duration\", \"partial\", \"totalScanCount\", \"hitExceptionCache\",",
          "38:                 \"storageCacheUsed\", \"sparkPool\", \"pushDown\", \"traceUrl\", \"totalScanBytes\",",
          "39:                 \"totalScanFiles\", \"metadataTime\", \"totalSparkScanTime\" };",
          "",
          "---------------"
        ],
        "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java": [
          "File: server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java -> server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:         updateSparkMetrics(queryId1);",
          "204:         Assert.assertTrue(QuerySparkMetrics.getInstance().getQueryExecutionMetrics(queryId1) != null);",
          "225:         String queryId2 = \"2\";",
          "226:         generateSparkMetrics(queryId2);",
          "",
          "[Removed Lines]",
          "205:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "206:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "207:         Assert.assertEquals(0L, mBeanServer.getAttribute(objectName, \"QueryFailCount\"));",
          "208:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"CacheHitCount\"));",
          "210:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"ScanRowCountNumOps\"));",
          "211:         Assert.assertEquals(100.0, mBeanServer.getAttribute(objectName, \"ScanRowCountAvgTime\"));",
          "212:         Assert.assertEquals(100.0, mBeanServer.getAttribute(objectName, \"ScanRowCountMaxTime\"));",
          "213:         Assert.assertEquals(100.0, mBeanServer.getAttribute(objectName, \"ScanRowCountMinTime\"));",
          "215:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"ResultRowCountNumOps\"));",
          "216:         Assert.assertEquals(2.0, mBeanServer.getAttribute(objectName, \"ResultRowCountMaxTime\"));",
          "217:         Assert.assertEquals(2.0, mBeanServer.getAttribute(objectName, \"ResultRowCountAvgTime\"));",
          "218:         Assert.assertEquals(2.0, mBeanServer.getAttribute(objectName, \"ResultRowCountMinTime\"));",
          "220:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QueryLatencyNumOps\"));",
          "221:         Assert.assertEquals(10.0, mBeanServer.getAttribute(objectName, \"QueryLatencyMaxTime\"));",
          "222:         Assert.assertEquals(10.0, mBeanServer.getAttribute(objectName, \"QueryLatencyAvgTime\"));",
          "223:         Assert.assertEquals(10.0, mBeanServer.getAttribute(objectName, \"QueryLatencyMinTime\"));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:         Thread.sleep(5000);",
          "248:         Assert.assertTrue(QuerySparkMetrics.getInstance().getQueryExecutionMetrics(queryId2) == null);",
          "249:         Assert.assertEquals(2, sparkMetricsReportCnt.get());",
          "250:         System.clearProperty(\"kylin.server.query-metrics-enabled\");",
          "",
          "[Removed Lines]",
          "244:         Assert.assertEquals(2L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "245:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "246:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QueryFailCount\"));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java||tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java": [
          "File: tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java -> tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/CubeDescCreator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:         rowKeyDesc.setRowkeyColumns(rowKeyColDescs);",
          "135:         }",
          "137:         SelectRule selectRule = new SelectRule();",
          "142:         AggregationGroup aggGroup = new AggregationGroup();",
          "143:         aggGroup.setIncludes(refineColumnWithTable(tableName, dimensions));",
          "",
          "[Removed Lines]",
          "121:         String[][] hierarchy_dims = new String[4][];",
          "122:         hierarchy_dims[0] = getTimeHierarchy();",
          "123:         hierarchy_dims[1] = new String[3];",
          "124:         hierarchy_dims[1][0] = QuerySparkExecutionEnum.REALIZATION_TYPE.toString();",
          "125:         hierarchy_dims[1][1] = QuerySparkExecutionEnum.REALIZATION.toString();",
          "126:         hierarchy_dims[1][2] = QuerySparkExecutionEnum.CUBOID_IDS.toString();",
          "127:         hierarchy_dims[2] = new String[2];",
          "128:         hierarchy_dims[2][0] = QuerySparkExecutionEnum.START_TIME.toString();",
          "129:         hierarchy_dims[2][1] = QuerySparkExecutionEnum.END_TIME.toString();",
          "130:         hierarchy_dims[3] = new String[2];",
          "131:         hierarchy_dims[3][0] = QuerySparkExecutionEnum.SPARDER_NAME.toString();",
          "132:         hierarchy_dims[3][1] = RecordEvent.RecordReserveKeyEnum.HOST.toString();",
          "133:         for (int i = 0; i < hierarchy_dims.length; i++) {",
          "134:             hierarchy_dims[i] = refineColumnWithTable(tableName, hierarchy_dims[i]);",
          "138:         selectRule.mandatoryDims = new String[0];",
          "139:         selectRule.hierarchyDims = hierarchy_dims;",
          "140:         selectRule.jointDims = new String[0][0];",
          "",
          "[Added Lines]",
          "121:         String[][] hierarchyDims = new String[1][];",
          "122:         hierarchyDims[0] = getTimeHierarchy();",
          "123:         for (int i = 0; i < hierarchyDims.length; i++) {",
          "124:             hierarchyDims[i] = refineColumnWithTable(tableName, hierarchyDims[i]);",
          "127:         String[] mandatoryDims = new String[] {refineColumnWithTable(tableName,",
          "128:                 QuerySparkExecutionEnum.PROJECT.toString())};",
          "130:         String[][] jointDims = new String[5][];",
          "131:         jointDims[0] = new String[]{",
          "132:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_HOUR.toString()),",
          "133:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_MINUTE.toString())",
          "134:         };",
          "135:         jointDims[1] = new String[]{",
          "136:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.START_TIME.toString()),",
          "137:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.END_TIME.toString())",
          "138:         };",
          "139:         jointDims[2] = new String[]{",
          "140:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.REALIZATION_TYPE.toString()),",
          "141:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.REALIZATION.toString()),",
          "142:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.CUBOID_IDS.toString())",
          "143:         };",
          "144:         jointDims[3] = new String[]{",
          "145:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.SPARDER_NAME.toString()),",
          "146:                 refineColumnWithTable(tableName, RecordEvent.RecordReserveKeyEnum.HOST.toString()),",
          "147:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.EXCEPTION.toString()),",
          "148:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.TYPE.toString())",
          "149:         };",
          "150:         jointDims[4] = new String[]{",
          "151:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.USER.toString()),",
          "152:                 refineColumnWithTable(tableName, QuerySparkExecutionEnum.QUERY_ID.toString())",
          "153:         };",
          "156:         selectRule.mandatoryDims = mandatoryDims;",
          "157:         selectRule.hierarchyDims = hierarchyDims;",
          "158:         selectRule.jointDims = jointDims;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:         dimensions.remove(TimePropertyEnum.DAY_TIME.toString());",
          "160:         dimensions.remove(RecordEvent.RecordReserveKeyEnum.TIME.toString());",
          "161:         dimensions.remove(RecordEvent.RecordReserveKeyEnum.HOST.toString());",
          "164:         List<DimensionDesc> dimensionDescList = Lists.newArrayListWithExpectedSize(dimensions.size());",
          "165:         for (String dimensionName : dimensions) {",
          "",
          "[Removed Lines]",
          "162:         dimensions.remove(QuerySparkJobEnum.PROJECT.toString());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:         idx++;",
          "195:         rowKeyColDescs[idx] = getRowKeyColDesc(tableName, QuerySparkJobEnum.END_TIME.toString(), idx + 1);",
          "196:         idx++;",
          "197:         rowKeyColDescs[idx] = getRowKeyColDesc(tableName, QuerySparkJobEnum.IF_SUCCESS.toString(), idx + 1);",
          "198:         idx++;",
          "200:         RowKeyDesc rowKeyDesc = new RowKeyDesc();",
          "201:         rowKeyDesc.setRowkeyColumns(rowKeyColDescs);",
          "212:         }",
          "214:         SelectRule selectRule = new SelectRule();",
          "219:         AggregationGroup aggGroup = new AggregationGroup();",
          "220:         aggGroup.setIncludes(refineColumnWithTable(tableName, dimensions));",
          "",
          "[Removed Lines]",
          "203:         String[][] hierarchy_dims = new String[2][];",
          "204:         hierarchy_dims[0] = getTimeHierarchy();",
          "205:         hierarchy_dims[1] = new String[3];",
          "206:         hierarchy_dims[1][0] = QuerySparkJobEnum.QUERY_ID.toString();",
          "207:         hierarchy_dims[1][1] = QuerySparkJobEnum.EXECUTION_ID.toString();",
          "208:         hierarchy_dims[1][2] = QuerySparkJobEnum.JOB_ID.toString();",
          "210:         for (int i = 0; i < hierarchy_dims.length; i++) {",
          "211:             hierarchy_dims[i] = refineColumnWithTable(tableName, hierarchy_dims[i]);",
          "215:         selectRule.mandatoryDims = new String[0];",
          "216:         selectRule.hierarchyDims = hierarchy_dims;",
          "217:         selectRule.jointDims = new String[0][0];",
          "",
          "[Added Lines]",
          "214:         rowKeyColDescs[idx] = getRowKeyColDesc(tableName, QuerySparkJobEnum.PROJECT.toString(), idx + 1);",
          "215:         idx++;",
          "223:         String[][] hierarchyDims = new String[1][];",
          "224:         hierarchyDims[0] = getTimeHierarchy();",
          "225:         for (int i = 0; i < hierarchyDims.length; i++) {",
          "226:             hierarchyDims[i] = refineColumnWithTable(tableName, hierarchyDims[i]);",
          "229:         String[] mandatoryDims = new String[] {refineColumnWithTable(tableName,",
          "230:                 QuerySparkJobEnum.PROJECT.toString())};",
          "232:         String[][] jointDims = new String[3][];",
          "233:         jointDims[0] = new String[]{",
          "234:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_HOUR.toString()),",
          "235:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_MINUTE.toString())",
          "236:         };",
          "237:         jointDims[1] = new String[]{",
          "238:                 refineColumnWithTable(tableName, QuerySparkJobEnum.START_TIME.toString()),",
          "239:                 refineColumnWithTable(tableName, QuerySparkJobEnum.END_TIME.toString()),",
          "240:                 refineColumnWithTable(tableName, QuerySparkJobEnum.IF_SUCCESS.toString())",
          "241:         };",
          "242:         jointDims[2] = new String[]{",
          "243:                 refineColumnWithTable(tableName, QuerySparkJobEnum.QUERY_ID.toString()),",
          "244:                 refineColumnWithTable(tableName, QuerySparkJobEnum.EXECUTION_ID.toString()),",
          "245:                 refineColumnWithTable(tableName, QuerySparkJobEnum.JOB_ID.toString())",
          "246:         };",
          "249:         selectRule.mandatoryDims = mandatoryDims;",
          "250:         selectRule.hierarchyDims = hierarchyDims;",
          "251:         selectRule.jointDims = jointDims;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "284:         rowKeyDesc.setRowkeyColumns(rowKeyColDescs);",
          "296:         }",
          "298:         SelectRule selectRule = new SelectRule();",
          "303:         AggregationGroup aggGroup = new AggregationGroup();",
          "304:         aggGroup.setIncludes(refineColumnWithTable(tableName, dimensions));",
          "",
          "[Removed Lines]",
          "287:         String[][] hierarchy_dims = new String[2][];",
          "288:         hierarchy_dims[0] = getTimeHierarchy();",
          "289:         hierarchy_dims[1] = new String[4];",
          "290:         hierarchy_dims[1][0] = QuerySparkStageEnum.QUERY_ID.toString();",
          "291:         hierarchy_dims[1][1] = QuerySparkStageEnum.EXECUTION_ID.toString();",
          "292:         hierarchy_dims[1][2] = QuerySparkStageEnum.JOB_ID.toString();",
          "293:         hierarchy_dims[1][3] = QuerySparkStageEnum.STAGE_ID.toString();",
          "294:         for (int i = 0; i < hierarchy_dims.length; i++) {",
          "295:             hierarchy_dims[i] = refineColumnWithTable(tableName, hierarchy_dims[i]);",
          "299:         selectRule.mandatoryDims = new String[0];",
          "300:         selectRule.hierarchyDims = hierarchy_dims;",
          "301:         selectRule.jointDims = new String[0][0];",
          "",
          "[Added Lines]",
          "321:         String[][] hierarchyDims = new String[1][];",
          "322:         hierarchyDims[0] = getTimeHierarchy();",
          "323:         for (int i = 0; i < hierarchyDims.length; i++) {",
          "324:             hierarchyDims[i] = refineColumnWithTable(tableName, hierarchyDims[i]);",
          "327:         String[] mandatoryDims = new String[] {refineColumnWithTable(tableName,",
          "328:                 QuerySparkStageEnum.PROJECT.toString())};",
          "330:         String[][] jointDims = new String[4][];",
          "331:         jointDims[0] = new String[]{",
          "332:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_HOUR.toString()),",
          "333:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_MINUTE.toString())",
          "334:         };",
          "335:         jointDims[1] = new String[]{",
          "336:                 refineColumnWithTable(tableName, QuerySparkStageEnum.REALIZATION.toString()),",
          "337:                 refineColumnWithTable(tableName, QuerySparkStageEnum.CUBOID_ID.toString())",
          "338:         };",
          "339:         jointDims[2] = new String[]{",
          "340:                 refineColumnWithTable(tableName, RecordEvent.RecordReserveKeyEnum.HOST.toString()),",
          "341:                 refineColumnWithTable(tableName, QuerySparkStageEnum.IF_SUCCESS.toString())",
          "342:         };",
          "343:         jointDims[3] = new String[]{",
          "344:                 refineColumnWithTable(tableName, QuerySparkStageEnum.QUERY_ID.toString()),",
          "345:                 refineColumnWithTable(tableName, QuerySparkStageEnum.EXECUTION_ID.toString()),",
          "346:                 refineColumnWithTable(tableName, QuerySparkStageEnum.JOB_ID.toString()),",
          "347:                 refineColumnWithTable(tableName, QuerySparkStageEnum.STAGE_ID.toString())",
          "348:         };",
          "351:         selectRule.mandatoryDims = mandatoryDims;",
          "352:         selectRule.hierarchyDims = hierarchyDims;",
          "353:         selectRule.jointDims = jointDims;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "369:         rowKeyDesc.setRowkeyColumns(rowKeyColDescs);",
          "376:         }",
          "378:         SelectRule selectRule = new SelectRule();",
          "383:         AggregationGroup aggGroup = new AggregationGroup();",
          "384:         aggGroup.setIncludes(refineColumnWithTable(tableName, dimensions));",
          "",
          "[Removed Lines]",
          "372:         String[][] hierarchy_dims = new String[1][];",
          "373:         hierarchy_dims[0] = getTimeHierarchy();",
          "374:         for (int i = 0; i < hierarchy_dims.length; i++) {",
          "375:             hierarchy_dims[i] = refineColumnWithTable(tableName, hierarchy_dims[i]);",
          "379:         selectRule.mandatoryDims = new String[0];",
          "380:         selectRule.hierarchyDims = hierarchy_dims;",
          "381:         selectRule.jointDims = new String[0][0];",
          "",
          "[Added Lines]",
          "424:         String[][] hierarchyDims = new String[1][];",
          "425:         hierarchyDims[0] = getTimeHierarchy();",
          "426:         for (int i = 0; i < hierarchyDims.length; i++) {",
          "427:             hierarchyDims[i] = refineColumnWithTable(tableName, hierarchyDims[i]);",
          "430:         String[] mandatoryDims = new String[] {refineColumnWithTable(tableName,",
          "431:                 JobPropertyEnum.PROJECT.toString())};",
          "433:         String[][] jointDims = new String[3][];",
          "434:         jointDims[0] = new String[] {",
          "435:                 refineColumnWithTable(tableName, JobPropertyEnum.CUBE.toString()),",
          "436:                 refineColumnWithTable(tableName, JobPropertyEnum.ALGORITHM.toString())",
          "437:         };",
          "438:         jointDims[1] = new String[] {",
          "439:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_HOUR.toString()),",
          "440:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_MINUTE.toString())",
          "441:         };",
          "442:         jointDims[2] = new String[] {",
          "443:                 refineColumnWithTable(tableName, JobPropertyEnum.USER.toString()),",
          "444:                 refineColumnWithTable(tableName, JobPropertyEnum.TYPE.toString())",
          "445:         };",
          "448:         selectRule.mandatoryDims = mandatoryDims;",
          "449:         selectRule.hierarchyDims = hierarchyDims;",
          "450:         selectRule.jointDims = jointDims;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "433:         rowKeyDesc.setRowkeyColumns(rowKeyColDescs);",
          "440:         }",
          "442:         SelectRule selectRule = new SelectRule();",
          "447:         AggregationGroup aggGroup = new AggregationGroup();",
          "448:         aggGroup.setIncludes(refineColumnWithTable(tableName, dimensions));",
          "",
          "[Removed Lines]",
          "436:         String[][] hierarchy_dims = new String[1][];",
          "437:         hierarchy_dims[0] = getTimeHierarchy();",
          "438:         for (int i = 0; i < hierarchy_dims.length; i++) {",
          "439:             hierarchy_dims[i] = refineColumnWithTable(tableName, hierarchy_dims[i]);",
          "443:         selectRule.mandatoryDims = new String[0];",
          "444:         selectRule.hierarchyDims = hierarchy_dims;",
          "445:         selectRule.jointDims = new String[0][0];",
          "",
          "[Added Lines]",
          "505:         String[][] hierarchyDims = new String[1][];",
          "506:         hierarchyDims[0] = getTimeHierarchy();",
          "507:         for (int i = 0; i < hierarchyDims.length; i++) {",
          "508:             hierarchyDims[i] = refineColumnWithTable(tableName, hierarchyDims[i]);",
          "511:         String[] mandatoryDims = new String[] {refineColumnWithTable(tableName,",
          "512:                 JobPropertyEnum.PROJECT.toString())};",
          "514:         String[][] jointDims = new String[3][];",
          "515:         jointDims[0] = new String[] {",
          "516:                 refineColumnWithTable(tableName, JobPropertyEnum.CUBE.toString()),",
          "517:                 refineColumnWithTable(tableName, JobPropertyEnum.ALGORITHM.toString())",
          "518:         };",
          "519:         jointDims[1] = new String[] {",
          "520:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_HOUR.toString()),",
          "521:                 refineColumnWithTable(tableName, TimePropertyEnum.TIME_MINUTE.toString())",
          "522:         };",
          "523:         jointDims[2] = new String[] {",
          "524:                 refineColumnWithTable(tableName, JobPropertyEnum.USER.toString()),",
          "525:                 refineColumnWithTable(tableName, JobPropertyEnum.TYPE.toString())",
          "526:         };",
          "529:         selectRule.mandatoryDims = mandatoryDims;",
          "530:         selectRule.hierarchyDims = hierarchyDims;",
          "531:         selectRule.jointDims = jointDims;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "525:         return result;",
          "526:     }",
          "528:     public static String[] refineColumnWithTable(String tableName, List<String> columns) {",
          "529:         String[] dimensions = new String[columns.size()];",
          "530:         for (int i = 0; i < dimensions.length; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "614:     public static String refineColumnWithTable(String tableName, String column) {",
          "615:         return tableName.substring(tableName.lastIndexOf(\".\") + 1) + \".\" + column;",
          "616:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "599:         FunctionDesc function = new FunctionDesc();",
          "600:         function.setExpression(FunctionDesc.FUNC_SUM);",
          "601:         function.setParameter(parameterDesc);",
          "606:         MeasureDesc result = new MeasureDesc();",
          "607:         result.setName(column + \"_SUM\");",
          "",
          "[Removed Lines]",
          "602:         function.setReturnType(dataType.equals(HiveTableCreator.HiveTypeEnum.HDOUBLE.toString())",
          "603:                 ? HiveTableCreator.HiveTypeEnum.HDECIMAL.toString()",
          "604:                 : dataType);",
          "",
          "[Added Lines]",
          "692:         function.setReturnType(dataType);",
          "",
          "---------------"
        ],
        "webapp/app/js/services/cubes.js||webapp/app/js/services/cubes.js": [
          "File: webapp/app/js/services/cubes.js -> webapp/app/js/services/cubes.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         });",
          "34:       }",
          "35:     };",
          "37:     return cuboids;",
          "38:   };",
          "39:   return $resource(Config.service.url + 'cubes/:cubeId/:propName/:propValue/:action', {}, {",
          "",
          "[Removed Lines]",
          "36:     iterator(data.root, data.root.row_count);",
          "",
          "[Added Lines]",
          "36:     if (data.root) {",
          "37:       iterator(data.root, data.root.row_count);",
          "38:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee0f48b09de0652eb942bdee66116e14a5cc5aa7",
      "candidate_info": {
        "commit_hash": "ee0f48b09de0652eb942bdee66116e14a5cc5aa7",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/ee0f48b09de0652eb942bdee66116e14a5cc5aa7",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java",
          "core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java"
        ],
        "message": "KYLIN-4571 Add config kylin.metrics.event-time-zone for indicating RecordEventTimeDetail time zone\n\n(cherry picked from commit 53aeb7044e0a7c157458476e344c50d6413657c7)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java||core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java",
          "core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java||core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2330:         return Boolean.parseBoolean(getOptional(\"kylin.htrace.trace-every-query\", FALSE));",
          "2331:     }",
          "2333:     public boolean isKylinMetricsMonitorEnabled() {",
          "2334:         return Boolean.parseBoolean(getOptional(\"kylin.metrics.monitor-enabled\", FALSE));",
          "2335:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2333:     public String getKylinMetricsEventTimeZone() {",
          "2334:         return getOptional(\"kylin.metrics.event-time-zone\", getTimeZone()).toUpperCase(Locale.ROOT);",
          "2335:     }",
          "",
          "---------------"
        ],
        "core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java||core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java": [
          "File: core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java -> core-metrics/src/main/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetail.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.metrics.lib.impl;",
          "21: import java.text.SimpleDateFormat;",
          "22: import java.util.Calendar;",
          "23: import java.util.Locale;",
          "24: import java.util.TimeZone;",
          "28: public class RecordEventTimeDetail {",
          "29:     private static final TimeZone timeZone;",
          "30:     private static final ThreadLocal<SimpleDateFormat> dateFormatThreadLocal = new ThreadLocal<>();",
          "31:     private static final ThreadLocal<SimpleDateFormat> timeFormatThreadLocal = new ThreadLocal<>();",
          "33:     static {",
          "35:     }",
          "37:     public final String year_begin_date;",
          "38:     public final String month_begin_date;",
          "39:     public final String date;",
          "",
          "[Removed Lines]",
          "26: import org.apache.kylin.common.KylinConfig;",
          "34:         timeZone = TimeZone.getTimeZone(KylinConfig.getInstanceFromEnv().getTimeZone());",
          "",
          "[Added Lines]",
          "21: import org.apache.kylin.common.KylinConfig;",
          "34:         timeZone = TimeZone.getTimeZone(KylinConfig.getInstanceFromEnv().getKylinMetricsEventTimeZone());",
          "",
          "---------------"
        ],
        "core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java||core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java": [
          "File: core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java -> core-metrics/src/test/java/org/apache/kylin/metrics/lib/impl/RecordEventTimeDetailTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.kylin.metrics.lib.impl;",
          "21: import org.apache.kylin.common.util.LocalFileMetadataTestCase;",
          "22: import org.apache.kylin.common.util.StringUtil;",
          "23: import org.junit.AfterClass;",
          "24: import org.junit.Assert;",
          "25: import org.junit.BeforeClass;",
          "26: import org.junit.Test;",
          "28: public class RecordEventTimeDetailTest extends LocalFileMetadataTestCase {",
          "30:     private static String eventTimeZone;",
          "32:     @BeforeClass",
          "33:     public static void beforeClass() throws Exception {",
          "34:         staticCreateTestMetadata();",
          "35:         eventTimeZone = System.getProperty(\"kylin.metrics.event-time-zone\");",
          "36:         System.setProperty(\"kylin.metrics.event-time-zone\", \"GMT\");",
          "37:     }",
          "39:     @AfterClass",
          "40:     public static void afterClass() throws Exception {",
          "41:         staticCleanupTestMetadata();",
          "42:         if (!StringUtil.isEmpty(eventTimeZone)) {",
          "43:             System.setProperty(\"kylin.metrics.event-time-zone\", eventTimeZone);",
          "44:         }",
          "45:     }",
          "47:     @Test",
          "48:     public void testFormatted() {",
          "49:         RecordEventTimeDetail timeDetail = new RecordEventTimeDetail(200000000000L);",
          "51:         Assert.assertEquals(\"1976-01-01\", timeDetail.year_begin_date);",
          "52:         Assert.assertEquals(\"1976-05-01\", timeDetail.month_begin_date);",
          "53:         Assert.assertEquals(\"1976-05-02\", timeDetail.week_begin_date);",
          "54:         Assert.assertEquals(\"1976-05-03\", timeDetail.date);",
          "55:         Assert.assertEquals(\"19:33:20\", timeDetail.time);",
          "56:         Assert.assertEquals(19, timeDetail.hour);",
          "57:         Assert.assertEquals(33, timeDetail.minute);",
          "58:         Assert.assertEquals(20, timeDetail.second);",
          "59:     }",
          "60: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}