{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ee66e93a33e7e2714a017a119ebc369cf8afd93f",
      "candidate_info": {
        "commit_hash": "ee66e93a33e7e2714a017a119ebc369cf8afd93f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ee66e93a33e7e2714a017a119ebc369cf8afd93f",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java"
        ],
        "message": "PDFBOX-4892: avoid ClassCastException, as suggested by valerybokov; remove unneeded code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889553 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java -> preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:             {",
          "327:         try",
          "328:         {",
          "335:             if (destOutputProfile instanceof COSObject)",
          "336:             {",
          "",
          "[Removed Lines]",
          "329:             if (destOutputProfile == null)",
          "330:             {",
          "331:                 return;",
          "332:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:                 }",
          "350:             }",
          "353:             mapDestOutputProfile.put(new COSObjectKey((COSObject) destOutputProfile), true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:             else",
          "347:             {",
          "348:                 addValidationError(ctx, new ValidationError(ERROR_GRAPHIC_OUTPUT_INTENT_INVALID_ENTRY,",
          "349:                         \"OutputIntent object should be a reference: \" + destOutputProfile));",
          "350:                 return;",
          "351:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa4f85e6b1b5a50d9e753c6a3c475a11c94387ce",
      "candidate_info": {
        "commit_hash": "aa4f85e6b1b5a50d9e753c6a3c475a11c94387ce",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/aa4f85e6b1b5a50d9e753c6a3c475a11c94387ce",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-5157: refactor to extract LTV check\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888705 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "820:         AddValidationInformation addValidationInformation = new AddValidationInformation();",
          "821:         addValidationInformation.validateSignature(inFile, outFile);",
          "825:         PDSignature signature = doc.getLastSignatureDictionary();",
          "826:         byte[] contents = signature.getContents();",
          "",
          "[Removed Lines]",
          "823:         PDDocument doc = PDDocument.load(outFile);",
          "",
          "[Added Lines]",
          "823:         checkLTV(outFile);",
          "824:     }",
          "826:     private void checkLTV(File outFile)",
          "827:             throws IOException, GeneralSecurityException, OCSPException, OperatorCreationException,",
          "828:             CMSException",
          "829:     {",
          "830:         PDDocument doc = PDDocument.load(outFile);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "546f3629d11125a5540db1204efd289a3913b979",
      "candidate_info": {
        "commit_hash": "546f3629d11125a5540db1204efd289a3913b979",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/546f3629d11125a5540db1204efd289a3913b979",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-5100: only warn if IDTree there; update comment with correct file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886456 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:             }",
          "601:         }",
          "604:         {",
          "606:             destNames.getCOSObject().removeItem(COSName.ID_TREE);",
          "607:             LOG.warn(\"Removed /IDTree from /Names dictionary, doesn't belong there\");",
          "608:         }",
          "",
          "[Removed Lines]",
          "603:         if (destNames != null)",
          "",
          "[Added Lines]",
          "603:         if (destNames != null && destNames.getCOSObject().containsKey(COSName.ID_TREE))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "afe1801aa516effbe647a4add023d6ca359f02cd",
      "candidate_info": {
        "commit_hash": "afe1801aa516effbe647a4add023d6ca359f02cd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/afe1801aa516effbe647a4add023d6ca359f02cd",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java"
        ],
        "message": "PDFBOX-4892: remove unneeded code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891640 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java -> preflight/src/main/java/org/apache/pdfbox/preflight/font/SimpleFontValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:         if (!areFieldsPresent)",
          "106:         {",
          "111:             this.fontContainer.push(new ValidationError(ERROR_FONTS_DICTIONARY_INVALID,",
          "112:                     this.font.getName()",
          "113:                     + \": some required fields are missing from the Font dictionary: \" + missingFields + \".\"));",
          "",
          "[Removed Lines]",
          "107:             if (missingFields.endsWith(\", \"))",
          "108:             {",
          "109:                 missingFields = missingFields.substring(0, missingFields.length() - 2);",
          "110:             }",
          "",
          "[Added Lines]",
          "107:             missingFields = missingFields.substring(0, missingFields.length() - 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "845b090b4428ea3bea86c20a7bc11c90674f526d",
      "candidate_info": {
        "commit_hash": "845b090b4428ea3bea86c20a7bc11c90674f526d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/845b090b4428ea3bea86c20a7bc11c90674f526d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java"
        ],
        "message": "PDFBOX-5107: avoid ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886856 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "311:             COSArray filterArray = (COSArray)filters;",
          "312:             for (int i = 0; i < filterArray.size(); i++)",
          "313:             {",
          "316:             }",
          "317:         }",
          "318:         return filterList;",
          "",
          "[Removed Lines]",
          "314:                 COSName filterName = (COSName)filterArray.get(i);",
          "315:                 filterList.add(FilterFactory.INSTANCE.getFilter(filterName));",
          "",
          "[Added Lines]",
          "314:                 COSBase base = filterArray.get(i);",
          "315:                 if (!(base instanceof COSName))",
          "316:                 {",
          "317:                     throw new IOException(\"Forbidden type in filter array: \" +",
          "318:                             (base == null ? \"null\" : base.getClass().getName()));",
          "319:                 }",
          "320:                 filterList.add(FilterFactory.INSTANCE.getFilter((COSName) base));",
          "",
          "---------------"
        ]
      }
    }
  ]
}