{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8c2a72fa33ce7f2e116e4f529c44ca1aa7ed3e42",
      "candidate_info": {
        "commit_hash": "8c2a72fa33ce7f2e116e4f529c44ca1aa7ed3e42",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8c2a72fa33ce7f2e116e4f529c44ca1aa7ed3e42",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ],
        "message": "PDFBOX-5138: fix linux case sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887971 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public void testEmbeddedFiles() throws IOException",
          "43:     {",
          "44:         String outputFile = \"target/test-output/EmbeddedFile.pdf\";",
          "47:         new File(outputFile).delete();",
          "48:         new File(embeddedFile).delete();",
          "",
          "[Removed Lines]",
          "45:         String embeddedFile = \"target/test-output/test.txt\";",
          "",
          "[Added Lines]",
          "45:         String embeddedFile = \"target/test-output/Test.txt\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9f64c24f7a7c3d14f9d51ba2dd53cafe9189d10",
      "candidate_info": {
        "commit_hash": "f9f64c24f7a7c3d14f9d51ba2dd53cafe9189d10",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f9f64c24f7a7c3d14f9d51ba2dd53cafe9189d10",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java"
        ],
        "message": "PDFBOX-4892: use correct parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881253 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         RubberStampWithImage rubberStamp = new RubberStampWithImage();",
          "58:         rubberStamp.doIt(args);",
          "61:         BufferedImage bim2 = new PDFRenderer(doc2).renderImage(0);",
          "62:         Assert.assertFalse(compareImages(bim1, bim2));",
          "63:         PDAnnotationRubberStamp rubberStampAnnotation = (PDAnnotationRubberStamp) doc2.getPage(0).getAnnotations().get(0);",
          "",
          "[Removed Lines]",
          "60:         PDDocument doc2 = PDDocument.load(new File(documentFile));",
          "",
          "[Added Lines]",
          "60:         PDDocument doc2 = PDDocument.load(new File(outFile));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "213cc43bd68b9857b0300152b8aebc20ada5a820",
      "candidate_info": {
        "commit_hash": "213cc43bd68b9857b0300152b8aebc20ada5a820",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/213cc43bd68b9857b0300152b8aebc20ada5a820",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java"
        ],
        "message": "PDFBOX-4892: revert last commit, users need to know what went wrong, especially if they set up the proect badly (see thread by J. L. on dev list)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888095 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         {",
          "121:             String ttfName = \"/org/apache/pdfbox/resources/ttf/LiberationSans-Regular.ttf\";",
          "122:             InputStream resourceAsStream = FontMapper.class.getResourceAsStream(ttfName);",
          "123:             InputStream ttfStream = new BufferedInputStream(resourceAsStream);",
          "124:             TTFParser ttfParser = new TTFParser();",
          "125:             lastResortFont = ttfParser.parse(ttfStream);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:             if (resourceAsStream == null)",
          "124:             {",
          "125:                 throw new IOException(\"resource '\" + ttfName + \"' not found\");",
          "126:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e146af246ea1ccb9cbc9fce2ee546a2424a18d53",
      "candidate_info": {
        "commit_hash": "e146af246ea1ccb9cbc9fce2ee546a2424a18d53",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e146af246ea1ccb9cbc9fce2ee546a2424a18d53",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890488 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java||pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java||pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java -> pdfbox/src/main/java/org/apache/pdfbox/text/TextPosition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:         widths2[i + 1] = 0;",
          "684:         System.arraycopy(widths, i + 1, widths2, i + 2, widths.length - i - 1);",
          "686:         unicode = sb.toString();",
          "",
          "[Removed Lines]",
          "683:         sb.append(unicode.substring(i + 1, unicode.length()));",
          "",
          "[Added Lines]",
          "683:         sb.append(unicode.substring(i + 1));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a0a2220b3d1deb008af3e4a6908557ad9e79d31",
      "candidate_info": {
        "commit_hash": "8a0a2220b3d1deb008af3e4a6908557ad9e79d31",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8a0a2220b3d1deb008af3e4a6908557ad9e79d31",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by Stephan Schwiebert\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892134 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1679:             GeneralPath transformedBox = form.getBBox().transform(transform);",
          "1685:             Matrix m = new Matrix(xform);",
          "1686:             scaleX = Math.abs(m.getScalingFactorX());",
          "1687:             scaleY = Math.abs(m.getScalingFactorY());",
          "",
          "[Removed Lines]",
          "1682:             Area clip = (Area)getGraphicsState().getCurrentClippingPath().clone();",
          "1683:             clip.intersect(new Area(transformedBox));",
          "1684:             Rectangle2D clipRect = clip.getBounds2D();",
          "",
          "[Added Lines]",
          "1682:             Area transformed = new Area(transformedBox);",
          "1683:             transformed.intersect(getGraphicsState().getCurrentClippingPath());",
          "1684:             Rectangle2D clipRect = transformed.getBounds2D();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1704:             AffineTransform dpiTransform = AffineTransform.getScaleInstance(scaleX, scaleY);",
          "1707:             minX = (int) Math.floor(bounds.getMinX());",
          "1708:             minY = (int) Math.floor(bounds.getMinY());",
          "",
          "[Removed Lines]",
          "1705:             Rectangle2D bounds = dpiTransform.createTransformedShape(clip.getBounds2D()).getBounds2D();",
          "",
          "[Added Lines]",
          "1705:             Rectangle2D bounds = dpiTransform.createTransformedShape(clipRect).getBounds2D();",
          "",
          "---------------"
        ]
      }
    }
  ]
}