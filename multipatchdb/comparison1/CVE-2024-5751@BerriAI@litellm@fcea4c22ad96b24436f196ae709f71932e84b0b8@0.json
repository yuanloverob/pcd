{
  "cve_id": "CVE-2024-5751",
  "cve_desc": "BerriAI/litellm version v1.35.8 contains a vulnerability where an attacker can achieve remote code execution. The vulnerability exists in the `add_deployment` function, which decodes and decrypts environment variables from base64 and assigns them to `os.environ`. An attacker can exploit this by sending a malicious payload to the `/config/update` endpoint, which is then processed and executed by the server when the `get_secret` function is triggered. This requires the server to use Google KMS and a database to store a model.",
  "repo": "BerriAI/litellm",
  "patch_hash": "fcea4c22ad96b24436f196ae709f71932e84b0b8",
  "patch_info": {
    "commit_hash": "fcea4c22ad96b24436f196ae709f71932e84b0b8",
    "repo": "BerriAI/litellm",
    "commit_url": "https://github.com/BerriAI/litellm/commit/fcea4c22ad96b24436f196ae709f71932e84b0b8",
    "files": [
      "litellm/utils.py",
      ".pre-commit-config.yaml",
      "docs/my-website/package-lock.json",
      "docs/my-website/package.json",
      "docs/my-website/yarn.lock",
      "litellm/__init__.py",
      "litellm/integrations/lago.py",
      "litellm/integrations/langfuse.py",
      "litellm/litellm_core_utils/litellm_logging.py",
      "litellm/llms/bedrock.py",
      "litellm/model_prices_and_context_window_backup.json",
      "litellm/proxy/_experimental/out/404.html",
      "litellm/proxy/_experimental/out/model_hub.html",
      "litellm/proxy/_experimental/out/onboarding.html",
      "litellm/proxy/_super_secret_config.yaml",
      "litellm/proxy/management_endpoints/internal_user_endpoints.py",
      "litellm/proxy/proxy_server.py",
      "litellm/proxy/utils.py",
      "litellm/tests/test_alangfuse.py",
      "litellm/tests/test_blocked_user_list.py",
      "litellm/tests/test_key_generate_prisma.py",
      "litellm/tests/test_update_spend.py",
      "litellm/tests/test_utils.py",
      "litellm/utils.py",
      "model_prices_and_context_window.json",
      "pyproject.toml"
    ],
    "message": "Merge pull request #4228 from CodeVigilanteOfficial/fix_rce_eval\n\nUpdate utils.py (fix dangerous code)",
    "before_after_code_files": [
      "litellm/utils.py||litellm/utils.py"
    ]
  },
  "patch_diff": {
    "litellm/utils.py||litellm/utils.py": [
      "File: litellm/utils.py -> litellm/utils.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "7182:                     b64_flag = _is_base64(encrypted_secret)",
      "7183:                     if b64_flag == True:  # if passed in as encoded b64 string",
      "7184:                         encrypted_secret = base64.b64decode(encrypted_secret)",
      "7191:                         ciphertext = encrypted_secret",
      "7193:                     response = client.decrypt(",
      "7194:                         request={",
      "7195:                             \"name\": litellm._google_kms_resource_name,",
      "",
      "[Removed Lines]",
      "7185:                     if not isinstance(encrypted_secret, bytes):",
      "7186:                         # If it's not, assume it's a string and encode it to bytes",
      "7187:                         ciphertext = eval(",
      "7188:                             encrypted_secret.encode()",
      "7189:                         )  # assuming encrypted_secret is something like - b'\\n$\\x00D\\xac\\xb4/t)07\\xe5\\xf6..'",
      "7190:                     else:",
      "",
      "[Added Lines]",
      "7186:                     else:",
      "7187:                         raise ValueError(",
      "7188:                             f\"Google KMS requires the encrypted secret to be encoded in base64\"",
      "7189:                         )#fix for this vulnerability https://huntr.com/bounties/ae623c2f-b64b-4245-9ed4-f13a0a5824ce",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ef87a75f7709d0dc06d189a262c219ddf83d6123",
      "candidate_info": {
        "commit_hash": "ef87a75f7709d0dc06d189a262c219ddf83d6123",
        "repo": "BerriAI/litellm",
        "commit_url": "https://github.com/BerriAI/litellm/commit/ef87a75f7709d0dc06d189a262c219ddf83d6123",
        "files": [
          "litellm/utils.py"
        ],
        "message": "Update utils.py\n\nfix dangerous code for this vulnerability https://huntr.com/bounties/ae623c2f-b64b-4245-9ed4-f13a0a5824ce",
        "before_after_code_files": [
          "litellm/utils.py||litellm/utils.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/BerriAI/litellm/pull/4228"
        ],
        "olp_code_files": {
          "patch": [
            "litellm/utils.py||litellm/utils.py"
          ],
          "candidate": [
            "litellm/utils.py||litellm/utils.py"
          ]
        }
      },
      "candidate_diff": {
        "litellm/utils.py||litellm/utils.py": [
          "File: litellm/utils.py -> litellm/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7174:                     b64_flag = _is_base64(encrypted_secret)",
          "7175:                     if b64_flag == True:  # if passed in as encoded b64 string",
          "7176:                         encrypted_secret = base64.b64decode(encrypted_secret)",
          "7183:                         ciphertext = encrypted_secret",
          "7185:                     response = client.decrypt(",
          "7186:                         request={",
          "7187:                             \"name\": litellm._google_kms_resource_name,",
          "",
          "[Removed Lines]",
          "7177:                     if not isinstance(encrypted_secret, bytes):",
          "7178:                         # If it's not, assume it's a string and encode it to bytes",
          "7179:                         ciphertext = eval(",
          "7180:                             encrypted_secret.encode()",
          "7181:                         )  # assuming encrypted_secret is something like - b'\\n$\\x00D\\xac\\xb4/t)07\\xe5\\xf6..'",
          "7182:                     else:",
          "",
          "[Added Lines]",
          "7178:                     else:",
          "7179:                         raise ValueError(",
          "7180:                             f\"Google KMS requires the encrypted secret to be encoded in base64\"",
          "7181:                         )#fix for this vulnerability https://huntr.com/bounties/ae623c2f-b64b-4245-9ed4-f13a0a5824ce",
          "",
          "---------------"
        ]
      }
    }
  ]
}