{
  "cve_id": "CVE-2023-23940",
  "cve_desc": "OpenZeppelin Contracts for Cairo is a library for secure smart contract development written in Cairo for StarkNet, a decentralized ZK Rollup. `is_valid_eth_signature` is missing a call to `finalize_keccak` after calling `verify_eth_signature`. As a result, any contract using `is_valid_eth_signature` from the account library (such as the `EthAccount` preset) is vulnerable to a malicious sequencer. Specifically, the malicious sequencer would be able to bypass signature validation to impersonate an instance of these accounts. The issue has been patched in 0.6.1.\n",
  "repo": "OpenZeppelin/cairo-contracts",
  "patch_hash": "6d4cb750478fca2fd916f73297632f899aca9299",
  "patch_info": {
    "commit_hash": "6d4cb750478fca2fd916f73297632f899aca9299",
    "repo": "OpenZeppelin/cairo-contracts",
    "commit_url": "https://github.com/OpenZeppelin/cairo-contracts/commit/6d4cb750478fca2fd916f73297632f899aca9299",
    "files": [
      "src/openzeppelin/account/library.cairo"
    ],
    "message": "add finalize_keccak",
    "before_after_code_files": [
      "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo"
    ]
  },
  "patch_diff": {
    "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo": [
      "File: src/openzeppelin/account/library.cairo -> src/openzeppelin/account/library.cairo",
      "--- Hunk 1 ---",
      "[Context before]",
      "18:     get_contract_address,",
      "19:     get_tx_info",
      "20: )",
      "22: from openzeppelin.utils.constants.library import (",
      "23:     IACCOUNT_ID,",
      "24:     IERC165_ID,",
      "",
      "[Removed Lines]",
      "21: from starkware.cairo.common.cairo_secp.signature import verify_eth_signature_uint256",
      "",
      "[Added Lines]",
      "21: from starkware.cairo.common.cairo_secp.signature import (",
      "22:     finalize_keccak,",
      "23:     verify_eth_signature_uint256",
      "24: )",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "157:         let (high, low) = split_felt(hash);",
      "158:         let msg_hash: Uint256 = Uint256(low=low, high=high);",
      "162:         with keccak_ptr {",
      "163:             verify_eth_signature_uint256(",
      "164:                 msg_hash=msg_hash, r=sig_r, s=sig_s, v=sig_v, eth_address=_public_key",
      "165:             );",
      "166:         }",
      "168:         return (is_valid=TRUE);",
      "169:     }",
      "",
      "[Removed Lines]",
      "160:         let (local keccak_ptr: felt*) = alloc();",
      "",
      "[Added Lines]",
      "163:         let (keccak_ptr: felt*) = alloc();",
      "164:         local keccak_ptr_start: felt* = keccak_ptr;",
      "172:         finalize_keccak(keccak_ptr_start=keccak_ptr_start, keccak_ptr_end=keccak_ptr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d5c0b4199a178f1d26d46c8d34de5edd97a5940",
      "candidate_info": {
        "commit_hash": "8d5c0b4199a178f1d26d46c8d34de5edd97a5940",
        "repo": "OpenZeppelin/cairo-contracts",
        "commit_url": "https://github.com/OpenZeppelin/cairo-contracts/commit/8d5c0b4199a178f1d26d46c8d34de5edd97a5940",
        "files": [
          "src/openzeppelin/account/library.cairo"
        ],
        "message": "add finalize_keccak (#542)",
        "before_after_code_files": [
          "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenZeppelin/cairo-contracts/pull/542"
        ],
        "olp_code_files": {
          "patch": [
            "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo"
          ],
          "candidate": [
            "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo"
          ]
        }
      },
      "candidate_diff": {
        "src/openzeppelin/account/library.cairo||src/openzeppelin/account/library.cairo": [
          "File: src/openzeppelin/account/library.cairo -> src/openzeppelin/account/library.cairo",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     get_contract_address,",
          "19:     get_tx_info",
          "20: )",
          "22: from openzeppelin.utils.constants.library import (",
          "23:     IACCOUNT_ID,",
          "24:     IERC165_ID,",
          "",
          "[Removed Lines]",
          "21: from starkware.cairo.common.cairo_secp.signature import verify_eth_signature_uint256",
          "",
          "[Added Lines]",
          "21: from starkware.cairo.common.cairo_secp.signature import (",
          "22:     finalize_keccak,",
          "23:     verify_eth_signature_uint256",
          "24: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:         let (high, low) = split_felt(hash);",
          "158:         let msg_hash: Uint256 = Uint256(low=low, high=high);",
          "162:         with keccak_ptr {",
          "163:             verify_eth_signature_uint256(",
          "164:                 msg_hash=msg_hash, r=sig_r, s=sig_s, v=sig_v, eth_address=_public_key",
          "165:             );",
          "166:         }",
          "168:         return (is_valid=TRUE);",
          "169:     }",
          "",
          "[Removed Lines]",
          "160:         let (local keccak_ptr: felt*) = alloc();",
          "",
          "[Added Lines]",
          "163:         let (keccak_ptr: felt*) = alloc();",
          "164:         local keccak_ptr_start: felt* = keccak_ptr;",
          "172:         finalize_keccak(keccak_ptr_start=keccak_ptr_start, keccak_ptr_end=keccak_ptr);",
          "",
          "---------------"
        ]
      }
    }
  ]
}