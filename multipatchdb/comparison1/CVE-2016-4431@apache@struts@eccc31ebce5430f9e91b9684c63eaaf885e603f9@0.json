{
  "cve_id": "CVE-2016-4431",
  "cve_desc": "Apache Struts 2 2.3.20 through 2.3.28.1 allows remote attackers to bypass intended access restrictions and conduct redirection attacks by leveraging a default method.",
  "repo": "apache/struts",
  "patch_hash": "eccc31ebce5430f9e91b9684c63eaaf885e603f9",
  "patch_info": {
    "commit_hash": "eccc31ebce5430f9e91b9684c63eaaf885e603f9",
    "repo": "apache/struts",
    "commit_url": "https://github.com/apache/struts/commit/eccc31ebce5430f9e91b9684c63eaaf885e603f9",
    "files": [
      "xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
      "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
    ],
    "message": "Improves validation RegEx",
    "before_after_code_files": [
      "xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java||xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
      "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
    ]
  },
  "patch_diff": {
    "xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java||xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java": [
      "File: xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java -> xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "82:                     \"|((\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\\\\.){3}\" +",
      "83:                     \"(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\" +",
      "84:                     \")(:\\\\d+)?\" +",
      "86:                     \"(\\\\?([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)\" +",
      "87:                     \"?)?)?\" +",
      "88:                     \"(#([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)?\" +",
      "",
      "[Removed Lines]",
      "85:                     \")(((\\\\/+([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\" +",
      "",
      "[Added Lines]",
      "85:                     \")(((\\\\/{0,1}([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\" +",
      "",
      "---------------"
    ],
    "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java": [
      "File: xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "139:         assertFalse(pattern.matcher(\"\").matches());",
      "140:         assertFalse(pattern.matcher(\"   \").matches());",
      "141:         assertFalse(pattern.matcher(\"no url\").matches());",
      "143:         assertTrue(pattern.matcher(\"http://www.opensymphony.com\").matches());",
      "144:         assertTrue(pattern.matcher(\"https://www.opensymphony.com\").matches());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "142:   assertFalse(pattern.matcher(\"http://example.com////////////////////////////////////////////////////////////////////////////////////??\").matches());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54dff362f50a60084c9ff01ef59516686d26c9f1",
      "candidate_info": {
        "commit_hash": "54dff362f50a60084c9ff01ef59516686d26c9f1",
        "repo": "apache/struts",
        "commit_url": "https://github.com/apache/struts/commit/54dff362f50a60084c9ff01ef59516686d26c9f1",
        "files": [
          "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
        ],
        "message": "Adds additional example URLs to check if validation works properly",
        "before_after_code_files": [
          "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
          ],
          "candidate": [
            "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java": [
          "File: xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import com.opensymphony.xwork2.ActionContext;",
          "19: import com.opensymphony.xwork2.XWorkTestCase;",
          "21: import com.opensymphony.xwork2.util.ValueStack;",
          "22: import com.opensymphony.xwork2.validator.validators.URLValidator;",
          "",
          "[Removed Lines]",
          "20: import com.opensymphony.xwork2.util.URLUtil;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:  public void testValidUrlWithDefaultRegex() throws Exception {",
          "133:   URLValidator validator = new URLValidator();",
          "137:         assertFalse(pattern.matcher(\"myapp://test.com\").matches());",
          "138:         assertFalse(pattern.matcher(\"myap://test.com\").matches());",
          "139:         assertFalse(pattern.matcher(\"\").matches());",
          "140:         assertFalse(pattern.matcher(\"   \").matches());",
          "141:         assertFalse(pattern.matcher(\"no url\").matches());",
          "144:         assertTrue(pattern.matcher(\"http://www.opensymphony.com\").matches());",
          "145:         assertTrue(pattern.matcher(\"https://www.opensymphony.com\").matches());",
          "",
          "[Removed Lines]",
          "135:         Pattern pattern = Pattern.compile(validator.getUrlRegex());",
          "142:   assertFalse(pattern.matcher(\"http://example.com////////////////////////////////////////////////////////////////////////////////////??\").matches());",
          "",
          "[Added Lines]",
          "134:         Pattern pattern = Pattern.compile(validator.getUrlRegex(), Pattern.CASE_INSENSITIVE);",
          "141:         assertFalse(pattern.matcher(\"http://example.com////////////////////////////////////////////////////////////////////////////////////??\").matches());",
          "143:         assertTrue(pattern.matcher(\"http://www.legalspace.com/__media__/js/netsoltrademark.php?d=www.a-vos-travaux.fr%2Facheter-un-aspirateur-sans-sac-pas-cher%2F\").matches());",
          "144:         assertTrue(pattern.matcher(\"http://www.duadmin.isaev.Infoduadmin.Isaev.info/?a%5B%5D=%3Ca%20href%3Dhttp%3A%2F%2Fwww.aspert.fr%2Fun-seche-cheveux-lisseur-est-il-vraiment-utile%2F%3Eseche%20cheveux%20dyson%20test%3C%2Fa\").matches());",
          "145:         assertTrue(pattern.matcher(\"http://netsol-underconstruction-page-monitor-1.com/__media__/js/netsoltrademark.php?d=www.le-soutien-scolaire.fr%2Favis-et-test-comparatifs-des-robots-multifonctions%2F\").matches());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:   }",
          "183:   public String getTestingUrl5() {",
          "185:   }",
          "186:  }",
          "",
          "[Removed Lines]",
          "184:    return \"http://yahoo.com/articles?id=123\";",
          "",
          "[Added Lines]",
          "187:    return \"http://yahoo.com/articles?id=123\\n\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0fdca138feec2c2e94eb75ca1f8b76678b4d152",
      "candidate_info": {
        "commit_hash": "a0fdca138feec2c2e94eb75ca1f8b76678b4d152",
        "repo": "apache/struts",
        "commit_url": "https://github.com/apache/struts/commit/a0fdca138feec2c2e94eb75ca1f8b76678b4d152",
        "files": [
          "core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
          "core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
        ],
        "message": "Improves validation RegEx",
        "before_after_code_files": [
          "core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java||core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
          "core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java||core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java": [
          "File: core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java -> core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:                     \"|((\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\\\\.){3}\" +",
          "82:                     \"(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\" +",
          "83:                     \")(:\\\\d+)?\" +",
          "85:                     \"(\\\\?([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)\" +",
          "86:                     \"?)?)?\" +",
          "87:                     \"(#([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)?\" +",
          "",
          "[Removed Lines]",
          "84:                     \")(((\\\\/+([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\" +",
          "",
          "[Added Lines]",
          "84:                     \")(((\\\\/{0,1}([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\" +",
          "",
          "---------------"
        ],
        "core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java||core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java": [
          "File: core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java -> core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:         assertFalse(pattern.matcher(\"\").matches());",
          "139:         assertFalse(pattern.matcher(\"   \").matches());",
          "140:         assertFalse(pattern.matcher(\"no url\").matches());",
          "142:         assertTrue(pattern.matcher(\"http://www.opensymphony.com\").matches());",
          "143:         assertTrue(pattern.matcher(\"https://www.opensymphony.com\").matches());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:   assertFalse(pattern.matcher(\"http://example.com////////////////////////////////////////////////////////////////////////////////////??\").matches());",
          "",
          "---------------"
        ]
      }
    }
  ]
}