{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ce6956b6a4cd49a66d2b72e001767d515f062d10",
      "candidate_info": {
        "commit_hash": "ce6956b6a4cd49a66d2b72e001767d515f062d10",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ce6956b6a4cd49a66d2b72e001767d515f062d10",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5019: avoid IllegalArgumentException when miter limit is < 1\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883616 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "765:         }",
          "766:         int lineCap = Math.min(2, Math.max(0, state.getLineCap()));",
          "767:         int lineJoin = Math.min(2, Math.max(0, state.getLineJoin()));",
          "768:         return new BasicStroke(lineWidth, lineCap, lineJoin,",
          "770:     }",
          "772:     private float[] getDashArray(PDLineDashPattern dashPattern)",
          "",
          "[Removed Lines]",
          "769:                                state.getMiterLimit(), dashArray, phaseStart);",
          "",
          "[Added Lines]",
          "768:         float miterLimit = state.getMiterLimit();",
          "769:         if (miterLimit < 1)",
          "770:         {",
          "771:             LOG.warn(\"Miter limit must be >= 1, value \" + miterLimit + \" is ignored\");",
          "772:             miterLimit = 10;",
          "773:         }",
          "775:                                miterLimit, dashArray, phaseStart);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd23b6b2e0e8f003f433903ff280a3ba34b0d49e",
      "candidate_info": {
        "commit_hash": "cd23b6b2e0e8f003f433903ff280a3ba34b0d49e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cd23b6b2e0e8f003f433903ff280a3ba34b0d49e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java"
        ],
        "message": "PDFBOX-4892: avoid NPE, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887581 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:     public int[] getByteRange()",
          "298:     {",
          "300:         int[] ary = new int[byteRange.size()];",
          "301:         for (int i = 0; i<ary.length;++i)",
          "302:         {",
          "",
          "[Removed Lines]",
          "299:         COSArray byteRange = (COSArray)dictionary.getDictionaryObject(COSName.BYTERANGE);",
          "",
          "[Added Lines]",
          "299:         COSArray byteRange = dictionary.getCOSArray(COSName.BYTERANGE);",
          "300:         if (byteRange == null)",
          "301:         {",
          "302:             return new int[0];",
          "303:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16e6e093e75e08fd503f9c6a9d84c01be430be7d",
      "candidate_info": {
        "commit_hash": "16e6e093e75e08fd503f9c6a9d84c01be430be7d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/16e6e093e75e08fd503f9c6a9d84c01be430be7d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884774 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java||pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java||pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java -> pdfbox/src/main/java/org/apache/pdfbox/filter/Predictor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:         private final boolean predictorPerRow;",
          "273:         private int currentRowData = 0;",
          "",
          "[Removed Lines]",
          "271:         private byte[] currentRow, lastRow;",
          "",
          "[Added Lines]",
          "271:         private byte[] currentRow;",
          "272:         private byte[] lastRow;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a68432e7074c62c7a0812f91dfed2adbdaad7bb",
      "candidate_info": {
        "commit_hash": "2a68432e7074c62c7a0812f91dfed2adbdaad7bb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2a68432e7074c62c7a0812f91dfed2adbdaad7bb",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ],
        "message": "PDFBOX-5199: avoid possible memory leak\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890104 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:                 else",
          "273:                 {",
          "274:                     Filter filter = FilterFactory.INSTANCE.getFilter(nextFilter);",
          "277:                     is = new ByteArrayInputStream(os.toByteArray());",
          "278:                     os.reset();",
          "279:                 }",
          "",
          "[Removed Lines]",
          "275:                     filter.decode(is, os, stream, i);",
          "276:                     IOUtils.closeQuietly(is);",
          "",
          "[Added Lines]",
          "275:                     try",
          "276:                     {",
          "277:                         filter.decode(is, os, stream, i);",
          "278:                     }",
          "279:                     finally",
          "280:                     {",
          "281:                         IOUtils.closeQuietly(is);",
          "282:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23b6acd1215937af229a1d955fb2d2a9dc9c9498",
      "candidate_info": {
        "commit_hash": "23b6acd1215937af229a1d955fb2d2a9dc9c9498",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/23b6acd1215937af229a1d955fb2d2a9dc9c9498",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java"
        ],
        "message": "PDFBOX-4892: avoid NPE, use convenience method\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881798 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:             byte[] envelopedData = null;",
          "161:             if (array == null)",
          "162:             {",
          "164:             }",
          "165:             byte[][] recipientFieldsBytes = new byte[array.size()][];",
          "",
          "[Removed Lines]",
          "160:             COSArray array = (COSArray) encryption.getCOSObject().getItem(COSName.RECIPIENTS);",
          "163:                 array = (COSArray) defaultCryptFilterDictionary.getCOSObject().getItem(COSName.RECIPIENTS);",
          "",
          "[Added Lines]",
          "160:             COSArray array = encryption.getCOSObject().getCOSArray(COSName.RECIPIENTS);",
          "161:             if (array == null && defaultCryptFilterDictionary != null)",
          "162:             {",
          "163:                 array = defaultCryptFilterDictionary.getCOSObject().getCOSArray(COSName.RECIPIENTS);",
          "164:             }",
          "167:                 throw new IOException(\"/Recipients entry is missing in encryption dictionary\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}