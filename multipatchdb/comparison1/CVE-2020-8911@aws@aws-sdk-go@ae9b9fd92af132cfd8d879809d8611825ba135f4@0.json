{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
      "candidate_info": {
        "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/organizations/2016-11-28/api-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/apis/sms/2016-10-24/api-2.json",
          "models/apis/sms/2016-10-24/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/glue/api.go",
          "service/organizations/api.go",
          "service/s3/api.go",
          "service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go",
          "service/sms/api.go",
          "service/sms/doc.go",
          "service/sms/errors.go",
          "service/sms/smsiface/interface.go"
        ],
        "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/glue/api.go||service/glue/api.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/examples_test.go||service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/sms/api.go||service/sms/api.go",
          "service/sms/doc.go||service/sms/doc.go",
          "service/sms/errors.go||service/sms/errors.go",
          "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go",
            "service/organizations/api.go||service/organizations/api.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
            "service/sms/api.go||service/sms/api.go",
            "service/sms/doc.go||service/sms/doc.go",
            "service/sms/errors.go||service/sms/errors.go",
            "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go",
            "service/organizations/api.go||service/organizations/api.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
            "service/sms/api.go||service/sms/api.go",
            "service/sms/doc.go||service/sms/doc.go",
            "service/sms/errors.go||service/sms/errors.go",
            "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2084:     Protocols: []string{\"http\", \"https\"},",
          "2085:    },",
          "2086:    Endpoints: endpoints{",
          "2087:     \"ap-east-1\":      endpoint{},",
          "2088:     \"ap-northeast-1\": endpoint{},",
          "2089:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2087:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2093:     \"ca-central-1\":   endpoint{},",
          "2094:     \"eu-central-1\":   endpoint{},",
          "2095:     \"eu-north-1\":     endpoint{},",
          "2096:     \"eu-west-1\":      endpoint{},",
          "2097:     \"eu-west-2\":      endpoint{},",
          "2098:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3959:   \"neptune\": service{",
          "3961:    Endpoints: endpoints{",
          "3962:     \"ap-northeast-1\": endpoint{",
          "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
          "3964:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3964:     \"ap-east-1\": endpoint{",
          "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
          "3966:      CredentialScope: credentialScope{",
          "3967:       Region: \"ap-east-1\",",
          "3968:      },",
          "3969:     },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4031:       Region: \"me-south-1\",",
          "4032:      },",
          "4033:     },",
          "4034:     \"us-east-1\": endpoint{",
          "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
          "4036:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4042:     \"sa-east-1\": endpoint{",
          "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
          "4044:      CredentialScope: credentialScope{",
          "4045:       Region: \"sa-east-1\",",
          "4046:      },",
          "4047:     },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.21\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.0\"",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31277: type S3Target struct {",
          "31278:  _ struct{} `type:\"structure\"`",
          "31282:  Exclusions []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31285:  ConnectionName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31295:  return s.String()",
          "31296: }",
          "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
          "31300:  s.Exclusions = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
          "31307:  s.ConnectionName = &v",
          "31308:  return s",
          "31309: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37451:  ConnectionTypeKafka = \"KAFKA\"",
          "37452: )",
          "37454: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37467:  ConnectionTypeNetwork = \"NETWORK\"",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
          "22130: )",
          "22132: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
          "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:  fmt.Println(result)",
          "468: }",
          "474: func ExampleS3_DeleteObjectTagging_shared00() {",
          "475:  svc := s3.New(session.New())",
          "476:  input := &s3.DeleteObjectTaggingInput{",
          "480:  }",
          "482:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "477:   Bucket:    aws.String(\"examplebucket\"),",
          "478:   Key:       aws.String(\"HappyFace.jpg\"),",
          "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "[Added Lines]",
          "478:   Bucket: aws.String(\"examplebucket\"),",
          "479:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:  fmt.Println(result)",
          "498: }",
          "505: func ExampleS3_DeleteObjectTagging_shared01() {",
          "506:  svc := s3.New(session.New())",
          "507:  input := &s3.DeleteObjectTaggingInput{",
          "510:  }",
          "512:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "508:   Bucket: aws.String(\"examplebucket\"),",
          "509:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "507:   Bucket:    aws.String(\"examplebucket\"),",
          "508:   Key:       aws.String(\"HappyFace.jpg\"),",
          "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1197:  fmt.Println(result)",
          "1198: }",
          "1204: func ExampleS3_ListMultipartUploads_shared00() {",
          "1205:  svc := s3.New(session.New())",
          "1206:  input := &s3.ListMultipartUploadsInput{",
          "1211:  }",
          "1213:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1207:   Bucket:         aws.String(\"examplebucket\"),",
          "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1209:   MaxUploads:     aws.Int64(2),",
          "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "[Added Lines]",
          "1206:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1228:  fmt.Println(result)",
          "1229: }",
          "1234: func ExampleS3_ListMultipartUploads_shared01() {",
          "1235:  svc := s3.New(session.New())",
          "1236:  input := &s3.ListMultipartUploadsInput{",
          "1238:  }",
          "1240:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1237:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "[Added Lines]",
          "1234:   Bucket:         aws.String(\"examplebucket\"),",
          "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1236:   MaxUploads:     aws.Int64(2),",
          "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1804:  fmt.Println(result)",
          "1805: }",
          "1812: func ExampleS3_PutObject_shared00() {",
          "1813:  svc := s3.New(session.New())",
          "1814:  input := &s3.PutObjectInput{",
          "1820:  }",
          "1822:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1816:   Bucket:               aws.String(\"examplebucket\"),",
          "1817:   Key:                  aws.String(\"exampleobject\"),",
          "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1815:   Bucket: aws.String(\"examplebucket\"),",
          "1816:   Key:    aws.String(\"exampleobject\"),",
          "1817:   Metadata: map[string]*string{",
          "1818:    \"metadata1\": aws.String(\"value1\"),",
          "1819:    \"metadata2\": aws.String(\"value2\"),",
          "1820:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1837:  fmt.Println(result)",
          "1838: }",
          "1844: func ExampleS3_PutObject_shared01() {",
          "1845:  svc := s3.New(session.New())",
          "1846:  input := &s3.PutObjectInput{",
          "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1848:   Bucket: aws.String(\"examplebucket\"),",
          "1850:  }",
          "1852:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1849:   Key:    aws.String(\"objectkey\"),",
          "",
          "[Added Lines]",
          "1849:   ACL:    aws.String(\"authenticated-read\"),",
          "1852:   Key:    aws.String(\"exampleobject\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1867:  fmt.Println(result)",
          "1868: }",
          "1874: func ExampleS3_PutObject_shared02() {",
          "1875:  svc := s3.New(session.New())",
          "1876:  input := &s3.PutObjectInput{",
          "1881:  }",
          "1883:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1878:   Bucket:  aws.String(\"examplebucket\"),",
          "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1881:   Bucket: aws.String(\"examplebucket\"),",
          "1882:   Key:    aws.String(\"objectkey\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1898:  fmt.Println(result)",
          "1899: }",
          "1905: func ExampleS3_PutObject_shared03() {",
          "1906:  svc := s3.New(session.New())",
          "1907:  input := &s3.PutObjectInput{",
          "1913:  }",
          "1915:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1909:   Bucket:               aws.String(\"examplebucket\"),",
          "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1912:   Bucket: aws.String(\"examplebucket\"),",
          "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1930:  fmt.Println(result)",
          "1931: }",
          "1937: func ExampleS3_PutObject_shared04() {",
          "1938:  svc := s3.New(session.New())",
          "1939:  input := &s3.PutObjectInput{",
          "1947:  }",
          "1949:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1941:   Bucket: aws.String(\"examplebucket\"),",
          "1942:   Key:    aws.String(\"exampleobject\"),",
          "1943:   Metadata: map[string]*string{",
          "1944:    \"metadata1\": aws.String(\"value1\"),",
          "1945:    \"metadata2\": aws.String(\"value2\"),",
          "1946:   },",
          "",
          "[Added Lines]",
          "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1942:   Bucket:  aws.String(\"examplebucket\"),",
          "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1964:  fmt.Println(result)",
          "1965: }",
          "1972: func ExampleS3_PutObject_shared05() {",
          "1973:  svc := s3.New(session.New())",
          "1974:  input := &s3.PutObjectInput{",
          "1979:  }",
          "1981:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1975:   ACL:    aws.String(\"authenticated-read\"),",
          "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1977:   Bucket: aws.String(\"examplebucket\"),",
          "1978:   Key:    aws.String(\"exampleobject\"),",
          "",
          "[Added Lines]",
          "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1974:   Bucket:               aws.String(\"examplebucket\"),",
          "1975:   Key:                  aws.String(\"exampleobject\"),",
          "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1996:  fmt.Println(result)",
          "1997: }",
          "2004: func ExampleS3_PutObject_shared06() {",
          "2005:  svc := s3.New(session.New())",
          "2006:  input := &s3.PutObjectInput{",
          "2010:  }",
          "2012:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2008:   Bucket: aws.String(\"examplebucket\"),",
          "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2006:   Bucket:               aws.String(\"examplebucket\"),",
          "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2171:  fmt.Println(result)",
          "2172: }",
          "2178: func ExampleS3_UploadPartCopy_shared00() {",
          "2179:  svc := s3.New(session.New())",
          "2180:  input := &s3.UploadPartCopyInput{",
          "2186:  }",
          "2188:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2181:   Bucket:     aws.String(\"examplebucket\"),",
          "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   Key:        aws.String(\"examplelargeobject\"),",
          "2184:   PartNumber: aws.Int64(1),",
          "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2181:   Bucket:          aws.String(\"examplebucket\"),",
          "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2184:   Key:             aws.String(\"examplelargeobject\"),",
          "2185:   PartNumber:      aws.Int64(2),",
          "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2203:  fmt.Println(result)",
          "2204: }",
          "2210: func ExampleS3_UploadPartCopy_shared01() {",
          "2211:  svc := s3.New(session.New())",
          "2212:  input := &s3.UploadPartCopyInput{",
          "2219:  }",
          "2221:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2213:   Bucket:          aws.String(\"examplebucket\"),",
          "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2216:   Key:             aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber:      aws.Int64(2),",
          "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2214:   Bucket:     aws.String(\"examplebucket\"),",
          "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2216:   Key:        aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber: aws.Int64(1),",
          "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/sms/api.go||service/sms/api.go": [
          "File: service/sms/api.go -> service/sms/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:  return out, req.Send()",
          "494: }",
          "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
          "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
          "523:  op := &request.Operation{",
          "524:   Name:       opDeleteAppValidationConfiguration,",
          "525:   HTTPMethod: \"POST\",",
          "526:   HTTPPath:   \"/\",",
          "527:  }",
          "529:  if input == nil {",
          "530:   input = &DeleteAppValidationConfigurationInput{}",
          "531:  }",
          "533:  output = &DeleteAppValidationConfigurationOutput{}",
          "534:  req = c.newRequest(op, input, output)",
          "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "536:  return",
          "537: }",
          "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
          "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
          "570:  return out, req.Send()",
          "571: }",
          "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
          "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
          "584:  req.SetContext(ctx)",
          "585:  req.ApplyOptions(opts...)",
          "586:  return out, req.Send()",
          "587: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1235:  return out, req.Send()",
          "1236: }",
          "1238: const opGetConnectors = \"GetConnectors\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
          "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
          "1360:  op := &request.Operation{",
          "1361:   Name:       opGetAppValidationConfiguration,",
          "1362:   HTTPMethod: \"POST\",",
          "1363:   HTTPPath:   \"/\",",
          "1364:  }",
          "1366:  if input == nil {",
          "1367:   input = &GetAppValidationConfigurationInput{}",
          "1368:  }",
          "1370:  output = &GetAppValidationConfigurationOutput{}",
          "1371:  req = c.newRequest(op, input, output)",
          "1372:  return",
          "1373: }",
          "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
          "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
          "1406:  return out, req.Send()",
          "1407: }",
          "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
          "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
          "1420:  req.SetContext(ctx)",
          "1421:  req.ApplyOptions(opts...)",
          "1422:  return out, req.Send()",
          "1423: }",
          "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
          "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
          "1452:  op := &request.Operation{",
          "1453:   Name:       opGetAppValidationOutput,",
          "1454:   HTTPMethod: \"POST\",",
          "1455:   HTTPPath:   \"/\",",
          "1456:  }",
          "1458:  if input == nil {",
          "1459:   input = &GetAppValidationOutputInput{}",
          "1460:  }",
          "1462:  output = &GetAppValidationOutputOutput{}",
          "1463:  req = c.newRequest(op, input, output)",
          "1464:  return",
          "1465: }",
          "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
          "1497:  req, out := c.GetAppValidationOutputRequest(input)",
          "1498:  return out, req.Send()",
          "1499: }",
          "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
          "1511:  req, out := c.GetAppValidationOutputRequest(input)",
          "1512:  req.SetContext(ctx)",
          "1513:  req.ApplyOptions(opts...)",
          "1514:  return out, req.Send()",
          "1515: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1801:  return p.Err()",
          "1802: }",
          "1831:  op := &request.Operation{",
          "1833:   HTTPMethod: \"POST\",",
          "1834:   HTTPPath:   \"/\",",
          "1835:  }",
          "1837:  if input == nil {",
          "1839:  }",
          "1842:  req = c.newRequest(op, input, output)",
          "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1844:  return",
          "1845: }",
          "1882:  return out, req.Send()",
          "1883: }",
          "",
          "[Removed Lines]",
          "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
          "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
          "1832:   Name:       opImportServerCatalog,",
          "1838:   input = &ImportServerCatalogInput{}",
          "1841:  output = &ImportServerCatalogOutput{}",
          "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
          "1881:  req, out := c.ImportServerCatalogRequest(input)",
          "",
          "[Added Lines]",
          "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
          "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
          "2120:   Name:       opImportAppCatalog,",
          "2126:   input = &ImportAppCatalogInput{}",
          "2129:  output = &ImportAppCatalogOutput{}",
          "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
          "2165:  req, out := c.ImportAppCatalogRequest(input)",
          "2166:  return out, req.Send()",
          "2167: }",
          "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
          "2179:  req, out := c.ImportAppCatalogRequest(input)",
          "2180:  req.SetContext(ctx)",
          "2181:  req.ApplyOptions(opts...)",
          "2182:  return out, req.Send()",
          "2183: }",
          "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
          "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
          "2212:  op := &request.Operation{",
          "2213:   Name:       opImportServerCatalog,",
          "2214:   HTTPMethod: \"POST\",",
          "2215:   HTTPPath:   \"/\",",
          "2216:  }",
          "2218:  if input == nil {",
          "2219:   input = &ImportServerCatalogInput{}",
          "2220:  }",
          "2222:  output = &ImportServerCatalogOutput{}",
          "2223:  req = c.newRequest(op, input, output)",
          "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2225:  return",
          "2226: }",
          "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
          "2262:  req, out := c.ImportServerCatalogRequest(input)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2083:  return out, req.Send()",
          "2084: }",
          "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
          "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
          "2494:  op := &request.Operation{",
          "2495:   Name:       opNotifyAppValidationOutput,",
          "2496:   HTTPMethod: \"POST\",",
          "2497:   HTTPPath:   \"/\",",
          "2498:  }",
          "2500:  if input == nil {",
          "2501:   input = &NotifyAppValidationOutputInput{}",
          "2502:  }",
          "2504:  output = &NotifyAppValidationOutputOutput{}",
          "2505:  req = c.newRequest(op, input, output)",
          "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2507:  return",
          "2508: }",
          "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
          "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
          "2541:  return out, req.Send()",
          "2542: }",
          "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
          "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
          "2555:  req.SetContext(ctx)",
          "2556:  req.ApplyOptions(opts...)",
          "2557:  return out, req.Send()",
          "2558: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2269:  return out, req.Send()",
          "2270: }",
          "2272: const opStartAppReplication = \"StartAppReplication\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
          "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
          "2773:  op := &request.Operation{",
          "2774:   Name:       opPutAppValidationConfiguration,",
          "2775:   HTTPMethod: \"POST\",",
          "2776:   HTTPPath:   \"/\",",
          "2777:  }",
          "2779:  if input == nil {",
          "2780:   input = &PutAppValidationConfigurationInput{}",
          "2781:  }",
          "2783:  output = &PutAppValidationConfigurationOutput{}",
          "2784:  req = c.newRequest(op, input, output)",
          "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2786:  return",
          "2787: }",
          "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
          "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
          "2820:  return out, req.Send()",
          "2821: }",
          "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
          "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
          "2834:  req.SetContext(ctx)",
          "2835:  req.ApplyOptions(opts...)",
          "2836:  return out, req.Send()",
          "2837: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2362:  return out, req.Send()",
          "2363: }",
          "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
          "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
          "2960:  op := &request.Operation{",
          "2961:   Name:       opStartOnDemandAppReplication,",
          "2962:   HTTPMethod: \"POST\",",
          "2963:   HTTPPath:   \"/\",",
          "2964:  }",
          "2966:  if input == nil {",
          "2967:   input = &StartOnDemandAppReplicationInput{}",
          "2968:  }",
          "2970:  output = &StartOnDemandAppReplicationOutput{}",
          "2971:  req = c.newRequest(op, input, output)",
          "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2973:  return",
          "2974: }",
          "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
          "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
          "3007:  return out, req.Send()",
          "3008: }",
          "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
          "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
          "3021:  req.SetContext(ctx)",
          "3022:  req.ApplyOptions(opts...)",
          "3023:  return out, req.Send()",
          "3024: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2844: type AppSummary struct {",
          "2845:  _ struct{} `type:\"structure\"`",
          "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
          "2854:  Description *string `locationName:\"description\" type:\"string\"`",
          "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
          "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
          "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
          "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
          "2872:  Name *string `locationName:\"name\" type:\"string\"`",
          "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
          "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
          "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
          "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
          "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2921:  return s",
          "2922: }",
          "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
          "2926:  s.LastModified = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
          "3601:  s.ImportedAppId = &v",
          "3602:  return s",
          "3603: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2933:  return s",
          "2934: }",
          "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
          "2938:  s.LaunchDetails = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
          "3619:  s.LaunchConfigurationStatus = &v",
          "3620:  return s",
          "3621: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2957:  return s",
          "2958: }",
          "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
          "2962:  s.ReplicationStatus = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
          "3649:  s.ReplicationConfigurationStatus = &v",
          "3650:  return s",
          "3651: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2999:  return s",
          "3000: }",
          "3003: type Connector struct {",
          "3004:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3696: type AppValidationConfiguration struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
          "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
          "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "3710: }",
          "3713: func (s AppValidationConfiguration) String() string {",
          "3714:  return awsutil.Prettify(s)",
          "3715: }",
          "3718: func (s AppValidationConfiguration) GoString() string {",
          "3719:  return s.String()",
          "3720: }",
          "3723: func (s *AppValidationConfiguration) Validate() error {",
          "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
          "3725:  if s.Name != nil && len(*s.Name) < 1 {",
          "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "3727:  }",
          "3728:  if s.SsmValidationParameters != nil {",
          "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
          "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
          "3731:   }",
          "3732:  }",
          "3734:  if invalidParams.Len() > 0 {",
          "3735:   return invalidParams",
          "3736:  }",
          "3737:  return nil",
          "3738: }",
          "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
          "3742:  s.AppValidationStrategy = &v",
          "3743:  return s",
          "3744: }",
          "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
          "3748:  s.Name = &v",
          "3749:  return s",
          "3750: }",
          "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
          "3754:  s.SsmValidationParameters = v",
          "3755:  return s",
          "3756: }",
          "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
          "3760:  s.ValidationId = &v",
          "3761:  return s",
          "3762: }",
          "3765: type AppValidationOutput struct {",
          "3766:  _ struct{} `type:\"structure\"`",
          "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
          "3770: }",
          "3773: func (s AppValidationOutput) String() string {",
          "3774:  return awsutil.Prettify(s)",
          "3775: }",
          "3778: func (s AppValidationOutput) GoString() string {",
          "3779:  return s.String()",
          "3780: }",
          "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
          "3784:  s.SsmOutput = v",
          "3785:  return s",
          "3786: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3481:  return awsutil.Prettify(s)",
          "3482: }",
          "3487: }",
          "3491:  s.AppId = &v",
          "3492:  return s",
          "3493: }",
          "3496:  _ struct{} `type:\"structure\"`",
          "3497: }",
          "3501:  return awsutil.Prettify(s)",
          "3502: }",
          "3506:  return s.String()",
          "3507: }",
          "3509: type DeleteReplicationJobInput struct {",
          "3510:  _ struct{} `type:\"structure\"`",
          "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
          "3486:  return s.String()",
          "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
          "3495: type DeleteAppReplicationConfigurationOutput struct {",
          "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
          "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
          "",
          "[Added Lines]",
          "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
          "4273:  return s.String()",
          "4274: }",
          "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
          "4278:  s.AppId = &v",
          "4279:  return s",
          "4280: }",
          "4282: type DeleteAppReplicationConfigurationOutput struct {",
          "4283:  _ struct{} `type:\"structure\"`",
          "4284: }",
          "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
          "4288:  return awsutil.Prettify(s)",
          "4289: }",
          "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
          "4293:  return s.String()",
          "4294: }",
          "4296: type DeleteAppValidationConfigurationInput struct {",
          "4297:  _ struct{} `type:\"structure\"`",
          "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4303: }",
          "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
          "4307:  return awsutil.Prettify(s)",
          "4308: }",
          "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
          "4312:  return s.String()",
          "4313: }",
          "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
          "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
          "4318:  if s.AppId == nil {",
          "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4320:  }",
          "4322:  if invalidParams.Len() > 0 {",
          "4323:   return invalidParams",
          "4324:  }",
          "4325:  return nil",
          "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
          "4334: type DeleteAppValidationConfigurationOutput struct {",
          "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
          "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3638:  return s.String()",
          "3639: }",
          "3641: type GenerateChangeSetInput struct {",
          "3642:  _ struct{} `type:\"structure\"`",
          "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
          "3649: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4482: type DryRunOperationException struct {",
          "4483:  _            struct{}                  `type:\"structure\"`",
          "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4487: }",
          "4490: func (s DryRunOperationException) String() string {",
          "4491:  return awsutil.Prettify(s)",
          "4492: }",
          "4495: func (s DryRunOperationException) GoString() string {",
          "4496:  return s.String()",
          "4497: }",
          "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
          "4500:  return &DryRunOperationException{",
          "4501:   RespMetadata: v,",
          "4502:  }",
          "4503: }",
          "4506: func (s *DryRunOperationException) Code() string {",
          "4507:  return \"DryRunOperationException\"",
          "4508: }",
          "4511: func (s *DryRunOperationException) Message() string {",
          "4512:  if s.Message_ != nil {",
          "4513:   return *s.Message_",
          "4514:  }",
          "4515:  return \"\"",
          "4516: }",
          "4519: func (s *DryRunOperationException) OrigErr() error {",
          "4520:  return nil",
          "4521: }",
          "4523: func (s *DryRunOperationException) Error() string {",
          "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4525: }",
          "4528: func (s *DryRunOperationException) StatusCode() int {",
          "4529:  return s.RespMetadata.StatusCode",
          "4530: }",
          "4533: func (s *DryRunOperationException) RequestID() string {",
          "4534:  return s.RespMetadata.RequestID",
          "4535: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3797: type GetAppLaunchConfigurationOutput struct {",
          "3798:  _ struct{} `type:\"structure\"`",
          "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
          "3809: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3824:  return s",
          "3825: }",
          "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
          "3829:  s.RoleName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
          "4729:  s.AutoLaunch = &v",
          "4730:  return s",
          "4731: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3923:  return s",
          "3924: }",
          "3926: type GetConnectorsInput struct {",
          "3927:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4832: type GetAppValidationConfigurationInput struct {",
          "4833:  _ struct{} `type:\"structure\"`",
          "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4839: }",
          "4842: func (s GetAppValidationConfigurationInput) String() string {",
          "4843:  return awsutil.Prettify(s)",
          "4844: }",
          "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
          "4848:  return s.String()",
          "4849: }",
          "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
          "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
          "4854:  if s.AppId == nil {",
          "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4856:  }",
          "4858:  if invalidParams.Len() > 0 {",
          "4859:   return invalidParams",
          "4860:  }",
          "4861:  return nil",
          "4862: }",
          "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
          "4866:  s.AppId = &v",
          "4867:  return s",
          "4868: }",
          "4870: type GetAppValidationConfigurationOutput struct {",
          "4871:  _ struct{} `type:\"structure\"`",
          "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
          "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
          "4878: }",
          "4881: func (s GetAppValidationConfigurationOutput) String() string {",
          "4882:  return awsutil.Prettify(s)",
          "4883: }",
          "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
          "4887:  return s.String()",
          "4888: }",
          "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
          "4892:  s.AppValidationConfigurations = v",
          "4893:  return s",
          "4894: }",
          "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
          "4898:  s.ServerGroupValidationConfigurations = v",
          "4899:  return s",
          "4900: }",
          "4902: type GetAppValidationOutputInput struct {",
          "4903:  _ struct{} `type:\"structure\"`",
          "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4909: }",
          "4912: func (s GetAppValidationOutputInput) String() string {",
          "4913:  return awsutil.Prettify(s)",
          "4914: }",
          "4917: func (s GetAppValidationOutputInput) GoString() string {",
          "4918:  return s.String()",
          "4919: }",
          "4922: func (s *GetAppValidationOutputInput) Validate() error {",
          "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
          "4924:  if s.AppId == nil {",
          "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4926:  }",
          "4928:  if invalidParams.Len() > 0 {",
          "4929:   return invalidParams",
          "4930:  }",
          "4931:  return nil",
          "4932: }",
          "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
          "4936:  s.AppId = &v",
          "4937:  return s",
          "4938: }",
          "4940: type GetAppValidationOutputOutput struct {",
          "4941:  _ struct{} `type:\"structure\"`",
          "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
          "4945: }",
          "4948: func (s GetAppValidationOutputOutput) String() string {",
          "4949:  return awsutil.Prettify(s)",
          "4950: }",
          "4953: func (s GetAppValidationOutputOutput) GoString() string {",
          "4954:  return s.String()",
          "4955: }",
          "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
          "4959:  s.ValidationOutputList = v",
          "4960:  return s",
          "4961: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4260:  return s",
          "4261: }",
          "4263: type ImportServerCatalogInput struct {",
          "4264:  _ struct{} `type:\"structure\"`",
          "4265: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5300: type ImportAppCatalogInput struct {",
          "5301:  _ struct{} `type:\"structure\"`",
          "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "5308: }",
          "5311: func (s ImportAppCatalogInput) String() string {",
          "5312:  return awsutil.Prettify(s)",
          "5313: }",
          "5316: func (s ImportAppCatalogInput) GoString() string {",
          "5317:  return s.String()",
          "5318: }",
          "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
          "5322:  s.RoleName = &v",
          "5323:  return s",
          "5324: }",
          "5326: type ImportAppCatalogOutput struct {",
          "5327:  _ struct{} `type:\"structure\"`",
          "5328: }",
          "5331: func (s ImportAppCatalogOutput) String() string {",
          "5332:  return awsutil.Prettify(s)",
          "5333: }",
          "5336: func (s ImportAppCatalogOutput) GoString() string {",
          "5337:  return s.String()",
          "5338: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4615:  _            struct{}                  `type:\"structure\"`",
          "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4619: }",
          "4623:  return awsutil.Prettify(s)",
          "4624: }",
          "4628:  return s.String()",
          "4629: }",
          "4634:  }",
          "4640: }",
          "4648: }",
          "4653: }",
          "4657: }",
          "4662: }",
          "4667: }",
          "",
          "[Removed Lines]",
          "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4622: func (s NoConnectorsAvailableException) String() string {",
          "4627: func (s NoConnectorsAvailableException) GoString() string {",
          "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
          "4632:  return &NoConnectorsAvailableException{",
          "4633:   RespMetadata: v,",
          "4635: }",
          "4638: func (s *NoConnectorsAvailableException) Code() string {",
          "4639:  return \"NoConnectorsAvailableException\"",
          "4643: func (s *NoConnectorsAvailableException) Message() string {",
          "4644:  if s.Message_ != nil {",
          "4645:   return *s.Message_",
          "4646:  }",
          "4647:  return \"\"",
          "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
          "4652:  return nil",
          "4655: func (s *NoConnectorsAvailableException) Error() string {",
          "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
          "4661:  return s.RespMetadata.StatusCode",
          "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
          "4666:  return s.RespMetadata.RequestID",
          "",
          "[Added Lines]",
          "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5697: }",
          "5700: func (s NoConnectorsAvailableException) String() string {",
          "5701:  return awsutil.Prettify(s)",
          "5702: }",
          "5705: func (s NoConnectorsAvailableException) GoString() string {",
          "5706:  return s.String()",
          "5707: }",
          "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
          "5710:  return &NoConnectorsAvailableException{",
          "5711:   RespMetadata: v,",
          "5712:  }",
          "5713: }",
          "5716: func (s *NoConnectorsAvailableException) Code() string {",
          "5717:  return \"NoConnectorsAvailableException\"",
          "5718: }",
          "5721: func (s *NoConnectorsAvailableException) Message() string {",
          "5722:  if s.Message_ != nil {",
          "5723:   return *s.Message_",
          "5724:  }",
          "5725:  return \"\"",
          "5726: }",
          "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
          "5730:  return nil",
          "5731: }",
          "5733: func (s *NoConnectorsAvailableException) Error() string {",
          "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5735: }",
          "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
          "5739:  return s.RespMetadata.StatusCode",
          "5740: }",
          "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
          "5744:  return s.RespMetadata.RequestID",
          "5745: }",
          "5748: type NotificationContext struct {",
          "5749:  _ struct{} `type:\"structure\"`",
          "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
          "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
          "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "5759: }",
          "5762: func (s NotificationContext) String() string {",
          "5763:  return awsutil.Prettify(s)",
          "5764: }",
          "5767: func (s NotificationContext) GoString() string {",
          "5768:  return s.String()",
          "5769: }",
          "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
          "5773:  s.Status = &v",
          "5774:  return s",
          "5775: }",
          "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
          "5779:  s.StatusMessage = &v",
          "5780:  return s",
          "5781: }",
          "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
          "5785:  s.ValidationId = &v",
          "5786:  return s",
          "5787: }",
          "5789: type NotifyAppValidationOutputInput struct {",
          "5790:  _ struct{} `type:\"structure\"`",
          "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
          "5802: func (s NotifyAppValidationOutputInput) String() string {",
          "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
          "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
          "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
          "5814:  if s.AppId == nil {",
          "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "5818:  if invalidParams.Len() > 0 {",
          "5819:   return invalidParams",
          "5820:  }",
          "5821:  return nil",
          "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
          "5826:  s.AppId = &v",
          "5827:  return s",
          "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
          "5832:  s.NotificationContext = v",
          "5833:  return s",
          "5836: type NotifyAppValidationOutputOutput struct {",
          "5837:  _ struct{} `type:\"structure\"`",
          "5841: func (s NotifyAppValidationOutputOutput) String() string {",
          "5842:  return awsutil.Prettify(s)",
          "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
          "5847:  return s.String()",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4725: type PutAppLaunchConfigurationInput struct {",
          "4726:  _ struct{} `type:\"structure\"`",
          "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
          "4737: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4746:  return s.String()",
          "4747: }",
          "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
          "4751:  s.AppId = &v",
          "4752:  return s",
          "4753: }",
          "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
          "4757:  s.RoleName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
          "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
          "5937:  if s.ServerGroupLaunchConfigurations != nil {",
          "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
          "5939:    if v == nil {",
          "5940:     continue",
          "5941:    }",
          "5942:    if err := v.Validate(); err != nil {",
          "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
          "5944:    }",
          "5945:   }",
          "5946:  }",
          "5948:  if invalidParams.Len() > 0 {",
          "5949:   return invalidParams",
          "5950:  }",
          "5951:  return nil",
          "5952: }",
          "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
          "5962:  s.AutoLaunch = &v",
          "5963:  return s",
          "5964: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4824:  return s.String()",
          "4825: }",
          "4828: type ReplicationJob struct {",
          "4829:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6039: type PutAppValidationConfigurationInput struct {",
          "6040:  _ struct{} `type:\"structure\"`",
          "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
          "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
          "6052: }",
          "6055: func (s PutAppValidationConfigurationInput) String() string {",
          "6056:  return awsutil.Prettify(s)",
          "6057: }",
          "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
          "6061:  return s.String()",
          "6062: }",
          "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
          "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
          "6067:  if s.AppId == nil {",
          "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "6069:  }",
          "6070:  if s.AppValidationConfigurations != nil {",
          "6071:   for i, v := range s.AppValidationConfigurations {",
          "6072:    if v == nil {",
          "6073:     continue",
          "6074:    }",
          "6075:    if err := v.Validate(); err != nil {",
          "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "6077:    }",
          "6078:   }",
          "6079:  }",
          "6080:  if s.ServerGroupValidationConfigurations != nil {",
          "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
          "6082:    if v == nil {",
          "6083:     continue",
          "6084:    }",
          "6085:    if err := v.Validate(); err != nil {",
          "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "6087:    }",
          "6088:   }",
          "6089:  }",
          "6091:  if invalidParams.Len() > 0 {",
          "6092:   return invalidParams",
          "6093:  }",
          "6094:  return nil",
          "6095: }",
          "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
          "6099:  s.AppId = &v",
          "6100:  return s",
          "6101: }",
          "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
          "6105:  s.AppValidationConfigurations = v",
          "6106:  return s",
          "6107: }",
          "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
          "6111:  s.ServerGroupValidationConfigurations = v",
          "6112:  return s",
          "6113: }",
          "6115: type PutAppValidationConfigurationOutput struct {",
          "6116:  _ struct{} `type:\"structure\"`",
          "6117: }",
          "6120: func (s PutAppValidationConfigurationOutput) String() string {",
          "6121:  return awsutil.Prettify(s)",
          "6122: }",
          "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
          "6126:  return s.String()",
          "6127: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5344:  return s",
          "5345: }",
          "5348: type S3Location struct {",
          "5349:  _ struct{} `type:\"structure\"`",
          "5355:  Key *string `locationName:\"key\" type:\"string\"`",
          "5356: }",
          "",
          "[Removed Lines]",
          "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
          "",
          "[Added Lines]",
          "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5365:  return s.String()",
          "5366: }",
          "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
          "5370:  s.Bucket = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6670: func (s *S3Location) Validate() error {",
          "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
          "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
          "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
          "6674:  }",
          "6676:  if invalidParams.Len() > 0 {",
          "6677:   return invalidParams",
          "6678:  }",
          "6679:  return nil",
          "6680: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5377:  return s",
          "5378: }",
          "5381: type Server struct {",
          "5382:  _ struct{} `type:\"structure\"`",
          "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
          "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
          "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6695: type SSMOutput struct {",
          "6696:  _ struct{} `type:\"structure\"`",
          "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
          "6700: }",
          "6703: func (s SSMOutput) String() string {",
          "6704:  return awsutil.Prettify(s)",
          "6705: }",
          "6708: func (s SSMOutput) GoString() string {",
          "6709:  return s.String()",
          "6710: }",
          "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
          "6714:  s.S3Location = v",
          "6715:  return s",
          "6716: }",
          "6719: type SSMValidationParameters struct {",
          "6720:  _ struct{} `type:\"structure\"`",
          "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
          "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
          "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
          "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
          "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
          "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
          "6739: }",
          "6742: func (s SSMValidationParameters) String() string {",
          "6743:  return awsutil.Prettify(s)",
          "6744: }",
          "6747: func (s SSMValidationParameters) GoString() string {",
          "6748:  return s.String()",
          "6749: }",
          "6752: func (s *SSMValidationParameters) Validate() error {",
          "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
          "6754:  if s.Command != nil && len(*s.Command) < 1 {",
          "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
          "6756:  }",
          "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
          "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
          "6759:  }",
          "6760:  if s.Source != nil {",
          "6761:   if err := s.Source.Validate(); err != nil {",
          "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "6763:   }",
          "6764:  }",
          "6766:  if invalidParams.Len() > 0 {",
          "6767:   return invalidParams",
          "6768:  }",
          "6769:  return nil",
          "6770: }",
          "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
          "6774:  s.Command = &v",
          "6775:  return s",
          "6776: }",
          "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
          "6780:  s.ExecutionTimeoutSeconds = &v",
          "6781:  return s",
          "6782: }",
          "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
          "6786:  s.InstanceId = &v",
          "6787:  return s",
          "6788: }",
          "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
          "6792:  s.OutputS3BucketName = &v",
          "6793:  return s",
          "6794: }",
          "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
          "6798:  s.ScriptType = &v",
          "6799:  return s",
          "6800: }",
          "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
          "6804:  s.Source = v",
          "6805:  return s",
          "6806: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5559:  return s.String()",
          "5560: }",
          "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
          "5564:  s.LaunchOrder = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
          "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
          "6993:  if s.ServerLaunchConfigurations != nil {",
          "6994:   for i, v := range s.ServerLaunchConfigurations {",
          "6995:    if v == nil {",
          "6996:     continue",
          "6997:    }",
          "6998:    if err := v.Validate(); err != nil {",
          "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
          "7000:    }",
          "7001:   }",
          "7002:  }",
          "7004:  if invalidParams.Len() > 0 {",
          "7005:   return invalidParams",
          "7006:  }",
          "7007:  return nil",
          "7008: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5611:  return s",
          "5612: }",
          "5615: type ServerLaunchConfiguration struct {",
          "5616:  _ struct{} `type:\"structure\"`",
          "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
          "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
          "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
          "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
          "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
          "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
          "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
          "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
          "5644: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7062: type ServerGroupValidationConfiguration struct {",
          "7063:  _ struct{} `type:\"structure\"`",
          "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
          "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
          "7070: }",
          "7073: func (s ServerGroupValidationConfiguration) String() string {",
          "7074:  return awsutil.Prettify(s)",
          "7075: }",
          "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
          "7079:  return s.String()",
          "7080: }",
          "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
          "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
          "7085:  if s.ServerValidationConfigurations != nil {",
          "7086:   for i, v := range s.ServerValidationConfigurations {",
          "7087:    if v == nil {",
          "7088:     continue",
          "7089:    }",
          "7090:    if err := v.Validate(); err != nil {",
          "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "7092:    }",
          "7093:   }",
          "7094:  }",
          "7096:  if invalidParams.Len() > 0 {",
          "7097:   return invalidParams",
          "7098:  }",
          "7099:  return nil",
          "7100: }",
          "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
          "7104:  s.ServerGroupId = &v",
          "7105:  return s",
          "7106: }",
          "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
          "7110:  s.ServerValidationConfigurations = v",
          "7111:  return s",
          "7112: }",
          "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
          "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
          "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5653:  return s.String()",
          "5654: }",
          "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
          "5658:  s.AssociatePublicIpAddress = &v",
          "5659:  return s",
          "5660: }",
          "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
          "5664:  s.Ec2KeyName = &v",
          "5665:  return s",
          "5666: }",
          "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
          "5670:  s.InstanceType = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7168: func (s *ServerLaunchConfiguration) Validate() error {",
          "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
          "7170:  if s.ConfigureScript != nil {",
          "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
          "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
          "7173:   }",
          "7174:  }",
          "7175:  if s.UserData != nil {",
          "7176:   if err := s.UserData.Validate(); err != nil {",
          "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
          "7178:   }",
          "7179:  }",
          "7181:  if invalidParams.Len() > 0 {",
          "7182:   return invalidParams",
          "7183:  }",
          "7184:  return nil",
          "7185: }",
          "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
          "7195:  s.ConfigureScript = v",
          "7196:  return s",
          "7197: }",
          "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
          "7201:  s.ConfigureScriptType = &v",
          "7202:  return s",
          "7203: }",
          "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
          "7213:  s.IamInstanceProfileName = &v",
          "7214:  return s",
          "7215: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5830:  return s",
          "5831: }",
          "5833: type StartAppReplicationInput struct {",
          "5834:  _ struct{} `type:\"structure\"`",
          "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "5838: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7384: type ServerValidationConfiguration struct {",
          "7385:  _ struct{} `type:\"structure\"`",
          "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
          "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
          "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "7401: }",
          "7404: func (s ServerValidationConfiguration) String() string {",
          "7405:  return awsutil.Prettify(s)",
          "7406: }",
          "7409: func (s ServerValidationConfiguration) GoString() string {",
          "7410:  return s.String()",
          "7411: }",
          "7414: func (s *ServerValidationConfiguration) Validate() error {",
          "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
          "7416:  if s.Name != nil && len(*s.Name) < 1 {",
          "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7418:  }",
          "7419:  if s.UserDataValidationParameters != nil {",
          "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
          "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
          "7422:   }",
          "7423:  }",
          "7425:  if invalidParams.Len() > 0 {",
          "7426:   return invalidParams",
          "7427:  }",
          "7428:  return nil",
          "7429: }",
          "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
          "7433:  s.Name = &v",
          "7434:  return s",
          "7435: }",
          "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
          "7439:  s.Server = v",
          "7440:  return s",
          "7441: }",
          "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
          "7445:  s.ServerValidationStrategy = &v",
          "7446:  return s",
          "7447: }",
          "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
          "7451:  s.UserDataValidationParameters = v",
          "7452:  return s",
          "7453: }",
          "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
          "7457:  s.ValidationId = &v",
          "7458:  return s",
          "7459: }",
          "7462: type ServerValidationOutput struct {",
          "7463:  _ struct{} `type:\"structure\"`",
          "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "7467: }",
          "7470: func (s ServerValidationOutput) String() string {",
          "7471:  return awsutil.Prettify(s)",
          "7472: }",
          "7475: func (s ServerValidationOutput) GoString() string {",
          "7476:  return s.String()",
          "7477: }",
          "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
          "7481:  s.Server = v",
          "7482:  return s",
          "7483: }",
          "7486: type Source struct {",
          "7487:  _ struct{} `type:\"structure\"`",
          "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
          "7491: }",
          "7494: func (s Source) String() string {",
          "7495:  return awsutil.Prettify(s)",
          "7496: }",
          "7499: func (s Source) GoString() string {",
          "7500:  return s.String()",
          "7501: }",
          "7504: func (s *Source) Validate() error {",
          "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
          "7506:  if s.S3Location != nil {",
          "7507:   if err := s.S3Location.Validate(); err != nil {",
          "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
          "7509:   }",
          "7510:  }",
          "7512:  if invalidParams.Len() > 0 {",
          "7513:   return invalidParams",
          "7514:  }",
          "7515:  return nil",
          "7516: }",
          "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
          "7520:  s.S3Location = v",
          "7521:  return s",
          "7522: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5867:  return s.String()",
          "5868: }",
          "5870: type StartOnDemandReplicationRunInput struct {",
          "5871:  _ struct{} `type:\"structure\"`",
          "5874:  Description *string `locationName:\"description\" type:\"string\"`",
          "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7561: type StartOnDemandAppReplicationInput struct {",
          "7562:  _ struct{} `type:\"structure\"`",
          "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "7570:  Description *string `locationName:\"description\" type:\"string\"`",
          "7571: }",
          "7574: func (s StartOnDemandAppReplicationInput) String() string {",
          "7575:  return awsutil.Prettify(s)",
          "7576: }",
          "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
          "7580:  return s.String()",
          "7581: }",
          "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
          "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
          "7586:  if s.AppId == nil {",
          "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "7588:  }",
          "7590:  if invalidParams.Len() > 0 {",
          "7591:   return invalidParams",
          "7592:  }",
          "7593:  return nil",
          "7594: }",
          "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
          "7598:  s.AppId = &v",
          "7599:  return s",
          "7600: }",
          "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
          "7604:  s.Description = &v",
          "7605:  return s",
          "7606: }",
          "7608: type StartOnDemandAppReplicationOutput struct {",
          "7609:  _ struct{} `type:\"structure\"`",
          "7610: }",
          "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
          "7614:  return awsutil.Prettify(s)",
          "7615: }",
          "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
          "7619:  return s.String()",
          "7620: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "6424:  return s.String()",
          "6425: }",
          "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
          "6429:  s.S3Location = v",
          "6430:  return s",
          "6431: }",
          "6434: type VmServer struct {",
          "6435:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8180: func (s *UserData) Validate() error {",
          "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
          "8182:  if s.S3Location != nil {",
          "8183:   if err := s.S3Location.Validate(); err != nil {",
          "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
          "8185:   }",
          "8186:  }",
          "8188:  if invalidParams.Len() > 0 {",
          "8189:   return invalidParams",
          "8190:  }",
          "8191:  return nil",
          "8192: }",
          "8201: type UserDataValidationParameters struct {",
          "8202:  _ struct{} `type:\"structure\"`",
          "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
          "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
          "8209: }",
          "8212: func (s UserDataValidationParameters) String() string {",
          "8213:  return awsutil.Prettify(s)",
          "8214: }",
          "8217: func (s UserDataValidationParameters) GoString() string {",
          "8218:  return s.String()",
          "8219: }",
          "8222: func (s *UserDataValidationParameters) Validate() error {",
          "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
          "8224:  if s.Source != nil {",
          "8225:   if err := s.Source.Validate(); err != nil {",
          "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "8227:   }",
          "8228:  }",
          "8230:  if invalidParams.Len() > 0 {",
          "8231:   return invalidParams",
          "8232:  }",
          "8233:  return nil",
          "8234: }",
          "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
          "8238:  s.ScriptType = &v",
          "8239:  return s",
          "8240: }",
          "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
          "8244:  s.Source = v",
          "8245:  return s",
          "8246: }",
          "8249: type ValidationOutput struct {",
          "8250:  _ struct{} `type:\"structure\"`",
          "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
          "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
          "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
          "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
          "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
          "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "8272: }",
          "8275: func (s ValidationOutput) String() string {",
          "8276:  return awsutil.Prettify(s)",
          "8277: }",
          "8280: func (s ValidationOutput) GoString() string {",
          "8281:  return s.String()",
          "8282: }",
          "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
          "8286:  s.AppValidationOutput = v",
          "8287:  return s",
          "8288: }",
          "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
          "8292:  s.LatestValidationTime = &v",
          "8293:  return s",
          "8294: }",
          "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
          "8298:  s.Name = &v",
          "8299:  return s",
          "8300: }",
          "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
          "8304:  s.ServerValidationOutput = v",
          "8305:  return s",
          "8306: }",
          "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
          "8310:  s.Status = &v",
          "8311:  return s",
          "8312: }",
          "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
          "8316:  s.StatusMessage = &v",
          "8317:  return s",
          "8318: }",
          "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
          "8322:  s.ValidationId = &v",
          "8323:  return s",
          "8324: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6523:  return s",
          "6524: }",
          "6526: const (",
          "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8419: const (",
          "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
          "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
          "8425: )",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
          "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
          "6568: )",
          "6570: const (",
          "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8474: const (",
          "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
          "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
          "8480: )",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
          "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
          "6635: )",
          "6637: const (",
          "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8552: const (",
          "8554:  AppValidationStrategySsm = \"SSM\"",
          "8555: )",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
          "6649: )",
          "6651: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
          "6730: )",
          "6732: const (",
          "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8655: const (",
          "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
          "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
          "8661: )",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
          "6752: )",
          "6754: const (",
          "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8685: const (",
          "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
          "8688: )",
          "8690: const (",
          "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
          "8695:  ValidationStatusPending = \"PENDING\"",
          "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
          "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
          "8704:  ValidationStatusFailed = \"FAILED\"",
          "8705: )",
          "",
          "---------------"
        ],
        "service/sms/doc.go||service/sms/doc.go": [
          "File: service/sms/doc.go -> service/sms/doc.go"
        ],
        "service/sms/errors.go||service/sms/errors.go": [
          "File: service/sms/errors.go -> service/sms/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78: )",
          "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "81:  \"InternalError\":                        newErrorInternalError,",
          "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
          "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
          "",
          "---------------"
        ],
        "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
          "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
          "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
          "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
          "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
          "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
          "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
          "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
          "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
          "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
          "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
          "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
          "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
          "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
          "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
          "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
          "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
          "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
          "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
          "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
          "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
          "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
          "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
          "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
          "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
          "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
          "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
          "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
          "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
          "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
          "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
          "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
          "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
          "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
          "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
          "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
          "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
          "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
          "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
          "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
          "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9caaeed785b2f481b1c848e1e34322baec131ce4",
      "candidate_info": {
        "commit_hash": "9caaeed785b2f481b1c848e1e34322baec131ce4",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/9caaeed785b2f481b1c848e1e34322baec131ce4",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/appflow/2020-08-23/api-2.json",
          "models/apis/appflow/2020-08-23/docs-2.json",
          "models/apis/appflow/2020-08-23/examples-1.json",
          "models/apis/appflow/2020-08-23/paginators-1.json",
          "models/apis/route53resolver/2018-04-01/api-2.json",
          "models/apis/route53resolver/2018-04-01/docs-2.json",
          "models/apis/route53resolver/2018-04-01/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/appflow/api.go",
          "service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go",
          "service/appflow/errors.go",
          "service/appflow/service.go",
          "service/route53resolver/api.go",
          "service/route53resolver/doc.go",
          "service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go"
        ],
        "message": "Release v1.34.11 (2020-08-26) ===\n\n### Service Client Updates\n* `service/appflow`: Adds new service\n* `service/route53resolver`: Updates service API, documentation, and paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/appflow/api.go||service/appflow/api.go",
          "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go||service/appflow/doc.go",
          "service/appflow/errors.go||service/appflow/errors.go",
          "service/appflow/service.go||service/appflow/service.go",
          "service/route53resolver/api.go||service/route53resolver/api.go",
          "service/route53resolver/doc.go||service/route53resolver/doc.go",
          "service/route53resolver/errors.go||service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3305:     \"ca-central-1\":   endpoint{},",
          "3306:     \"eu-central-1\":   endpoint{},",
          "3307:     \"eu-north-1\":     endpoint{},",
          "3308:     \"eu-west-1\":      endpoint{},",
          "3309:     \"eu-west-2\":      endpoint{},",
          "3310:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3308:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8092:     },",
          "8093:    },",
          "8094:    Endpoints: endpoints{",
          "8095:     \"us-gov-west-1\": endpoint{},",
          "8096:    },",
          "8097:   },",
          "8098:   \"iotsecuredtunneling\": service{",
          "8100:    Endpoints: endpoints{",
          "8101:     \"us-gov-west-1\": endpoint{},",
          "8102:    },",
          "8103:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8096:     \"us-gov-east-1\": endpoint{},",
          "8103:     \"us-gov-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.10\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.11\"",
          "",
          "---------------"
        ],
        "service/appflow/api.go||service/appflow/api.go": [
          "File: service/appflow/api.go -> service/appflow/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "14: )",
          "16: const opCreateConnectorProfile = \"CreateConnectorProfile\"",
          "42: func (c *Appflow) CreateConnectorProfileRequest(input *CreateConnectorProfileInput) (req *request.Request, output *CreateConnectorProfileOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opCreateConnectorProfile,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/create-connector-profile\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &CreateConnectorProfileInput{}",
          "51:  }",
          "53:  output = &CreateConnectorProfileOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "93: func (c *Appflow) CreateConnectorProfile(input *CreateConnectorProfileInput) (*CreateConnectorProfileOutput, error) {",
          "94:  req, out := c.CreateConnectorProfileRequest(input)",
          "95:  return out, req.Send()",
          "96: }",
          "107: func (c *Appflow) CreateConnectorProfileWithContext(ctx aws.Context, input *CreateConnectorProfileInput, opts ...request.Option) (*CreateConnectorProfileOutput, error) {",
          "108:  req, out := c.CreateConnectorProfileRequest(input)",
          "109:  req.SetContext(ctx)",
          "110:  req.ApplyOptions(opts...)",
          "111:  return out, req.Send()",
          "112: }",
          "114: const opCreateFlow = \"CreateFlow\"",
          "140: func (c *Appflow) CreateFlowRequest(input *CreateFlowInput) (req *request.Request, output *CreateFlowOutput) {",
          "141:  op := &request.Operation{",
          "142:   Name:       opCreateFlow,",
          "143:   HTTPMethod: \"POST\",",
          "144:   HTTPPath:   \"/create-flow\",",
          "145:  }",
          "147:  if input == nil {",
          "148:   input = &CreateFlowInput{}",
          "149:  }",
          "151:  output = &CreateFlowOutput{}",
          "152:  req = c.newRequest(op, input, output)",
          "153:  return",
          "154: }",
          "199: func (c *Appflow) CreateFlow(input *CreateFlowInput) (*CreateFlowOutput, error) {",
          "200:  req, out := c.CreateFlowRequest(input)",
          "201:  return out, req.Send()",
          "202: }",
          "213: func (c *Appflow) CreateFlowWithContext(ctx aws.Context, input *CreateFlowInput, opts ...request.Option) (*CreateFlowOutput, error) {",
          "214:  req, out := c.CreateFlowRequest(input)",
          "215:  req.SetContext(ctx)",
          "216:  req.ApplyOptions(opts...)",
          "217:  return out, req.Send()",
          "218: }",
          "220: const opDeleteConnectorProfile = \"DeleteConnectorProfile\"",
          "246: func (c *Appflow) DeleteConnectorProfileRequest(input *DeleteConnectorProfileInput) (req *request.Request, output *DeleteConnectorProfileOutput) {",
          "247:  op := &request.Operation{",
          "248:   Name:       opDeleteConnectorProfile,",
          "249:   HTTPMethod: \"POST\",",
          "250:   HTTPPath:   \"/delete-connector-profile\",",
          "251:  }",
          "253:  if input == nil {",
          "254:   input = &DeleteConnectorProfileInput{}",
          "255:  }",
          "257:  output = &DeleteConnectorProfileOutput{}",
          "258:  req = c.newRequest(op, input, output)",
          "259:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "260:  return",
          "261: }",
          "289: func (c *Appflow) DeleteConnectorProfile(input *DeleteConnectorProfileInput) (*DeleteConnectorProfileOutput, error) {",
          "290:  req, out := c.DeleteConnectorProfileRequest(input)",
          "291:  return out, req.Send()",
          "292: }",
          "303: func (c *Appflow) DeleteConnectorProfileWithContext(ctx aws.Context, input *DeleteConnectorProfileInput, opts ...request.Option) (*DeleteConnectorProfileOutput, error) {",
          "304:  req, out := c.DeleteConnectorProfileRequest(input)",
          "305:  req.SetContext(ctx)",
          "306:  req.ApplyOptions(opts...)",
          "307:  return out, req.Send()",
          "308: }",
          "310: const opDeleteFlow = \"DeleteFlow\"",
          "336: func (c *Appflow) DeleteFlowRequest(input *DeleteFlowInput) (req *request.Request, output *DeleteFlowOutput) {",
          "337:  op := &request.Operation{",
          "338:   Name:       opDeleteFlow,",
          "339:   HTTPMethod: \"POST\",",
          "340:   HTTPPath:   \"/delete-flow\",",
          "341:  }",
          "343:  if input == nil {",
          "344:   input = &DeleteFlowInput{}",
          "345:  }",
          "347:  output = &DeleteFlowOutput{}",
          "348:  req = c.newRequest(op, input, output)",
          "349:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "350:  return",
          "351: }",
          "381: func (c *Appflow) DeleteFlow(input *DeleteFlowInput) (*DeleteFlowOutput, error) {",
          "382:  req, out := c.DeleteFlowRequest(input)",
          "383:  return out, req.Send()",
          "384: }",
          "395: func (c *Appflow) DeleteFlowWithContext(ctx aws.Context, input *DeleteFlowInput, opts ...request.Option) (*DeleteFlowOutput, error) {",
          "396:  req, out := c.DeleteFlowRequest(input)",
          "397:  req.SetContext(ctx)",
          "398:  req.ApplyOptions(opts...)",
          "399:  return out, req.Send()",
          "400: }",
          "402: const opDescribeConnectorEntity = \"DescribeConnectorEntity\"",
          "428: func (c *Appflow) DescribeConnectorEntityRequest(input *DescribeConnectorEntityInput) (req *request.Request, output *DescribeConnectorEntityOutput) {",
          "429:  op := &request.Operation{",
          "430:   Name:       opDescribeConnectorEntity,",
          "431:   HTTPMethod: \"POST\",",
          "432:   HTTPPath:   \"/describe-connector-entity\",",
          "433:  }",
          "435:  if input == nil {",
          "436:   input = &DescribeConnectorEntityInput{}",
          "437:  }",
          "439:  output = &DescribeConnectorEntityOutput{}",
          "440:  req = c.newRequest(op, input, output)",
          "441:  return",
          "442: }",
          "475: func (c *Appflow) DescribeConnectorEntity(input *DescribeConnectorEntityInput) (*DescribeConnectorEntityOutput, error) {",
          "476:  req, out := c.DescribeConnectorEntityRequest(input)",
          "477:  return out, req.Send()",
          "478: }",
          "489: func (c *Appflow) DescribeConnectorEntityWithContext(ctx aws.Context, input *DescribeConnectorEntityInput, opts ...request.Option) (*DescribeConnectorEntityOutput, error) {",
          "490:  req, out := c.DescribeConnectorEntityRequest(input)",
          "491:  req.SetContext(ctx)",
          "492:  req.ApplyOptions(opts...)",
          "493:  return out, req.Send()",
          "494: }",
          "496: const opDescribeConnectorProfiles = \"DescribeConnectorProfiles\"",
          "522: func (c *Appflow) DescribeConnectorProfilesRequest(input *DescribeConnectorProfilesInput) (req *request.Request, output *DescribeConnectorProfilesOutput) {",
          "523:  op := &request.Operation{",
          "524:   Name:       opDescribeConnectorProfiles,",
          "525:   HTTPMethod: \"POST\",",
          "526:   HTTPPath:   \"/describe-connector-profiles\",",
          "527:   Paginator: &request.Paginator{",
          "528:    InputTokens:     []string{\"nextToken\"},",
          "529:    OutputTokens:    []string{\"nextToken\"},",
          "530:    LimitToken:      \"maxResults\",",
          "531:    TruncationToken: \"\",",
          "532:   },",
          "533:  }",
          "535:  if input == nil {",
          "536:   input = &DescribeConnectorProfilesInput{}",
          "537:  }",
          "539:  output = &DescribeConnectorProfilesOutput{}",
          "540:  req = c.newRequest(op, input, output)",
          "541:  return",
          "542: }",
          "570: func (c *Appflow) DescribeConnectorProfiles(input *DescribeConnectorProfilesInput) (*DescribeConnectorProfilesOutput, error) {",
          "571:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "572:  return out, req.Send()",
          "573: }",
          "584: func (c *Appflow) DescribeConnectorProfilesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, opts ...request.Option) (*DescribeConnectorProfilesOutput, error) {",
          "585:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "586:  req.SetContext(ctx)",
          "587:  req.ApplyOptions(opts...)",
          "588:  return out, req.Send()",
          "589: }",
          "608: func (c *Appflow) DescribeConnectorProfilesPages(input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool) error {",
          "609:  return c.DescribeConnectorProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "610: }",
          "619: func (c *Appflow) DescribeConnectorProfilesPagesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool, opts ...request.Option) error {",
          "620:  p := request.Pagination{",
          "621:   NewRequest: func() (*request.Request, error) {",
          "622:    var inCpy *DescribeConnectorProfilesInput",
          "623:    if input != nil {",
          "624:     tmp := *input",
          "625:     inCpy = &tmp",
          "626:    }",
          "627:    req, _ := c.DescribeConnectorProfilesRequest(inCpy)",
          "628:    req.SetContext(ctx)",
          "629:    req.ApplyOptions(opts...)",
          "630:    return req, nil",
          "631:   },",
          "632:  }",
          "634:  for p.Next() {",
          "635:   if !fn(p.Page().(*DescribeConnectorProfilesOutput), !p.HasNextPage()) {",
          "636:    break",
          "637:   }",
          "638:  }",
          "640:  return p.Err()",
          "641: }",
          "643: const opDescribeConnectors = \"DescribeConnectors\"",
          "669: func (c *Appflow) DescribeConnectorsRequest(input *DescribeConnectorsInput) (req *request.Request, output *DescribeConnectorsOutput) {",
          "670:  op := &request.Operation{",
          "671:   Name:       opDescribeConnectors,",
          "672:   HTTPMethod: \"POST\",",
          "673:   HTTPPath:   \"/describe-connectors\",",
          "674:   Paginator: &request.Paginator{",
          "675:    InputTokens:     []string{\"nextToken\"},",
          "676:    OutputTokens:    []string{\"nextToken\"},",
          "677:    LimitToken:      \"\",",
          "678:    TruncationToken: \"\",",
          "679:   },",
          "680:  }",
          "682:  if input == nil {",
          "683:   input = &DescribeConnectorsInput{}",
          "684:  }",
          "686:  output = &DescribeConnectorsOutput{}",
          "687:  req = c.newRequest(op, input, output)",
          "688:  return",
          "689: }",
          "716: func (c *Appflow) DescribeConnectors(input *DescribeConnectorsInput) (*DescribeConnectorsOutput, error) {",
          "717:  req, out := c.DescribeConnectorsRequest(input)",
          "718:  return out, req.Send()",
          "719: }",
          "730: func (c *Appflow) DescribeConnectorsWithContext(ctx aws.Context, input *DescribeConnectorsInput, opts ...request.Option) (*DescribeConnectorsOutput, error) {",
          "731:  req, out := c.DescribeConnectorsRequest(input)",
          "732:  req.SetContext(ctx)",
          "733:  req.ApplyOptions(opts...)",
          "734:  return out, req.Send()",
          "735: }",
          "754: func (c *Appflow) DescribeConnectorsPages(input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool) error {",
          "755:  return c.DescribeConnectorsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "756: }",
          "765: func (c *Appflow) DescribeConnectorsPagesWithContext(ctx aws.Context, input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool, opts ...request.Option) error {",
          "766:  p := request.Pagination{",
          "767:   NewRequest: func() (*request.Request, error) {",
          "768:    var inCpy *DescribeConnectorsInput",
          "769:    if input != nil {",
          "770:     tmp := *input",
          "771:     inCpy = &tmp",
          "772:    }",
          "773:    req, _ := c.DescribeConnectorsRequest(inCpy)",
          "774:    req.SetContext(ctx)",
          "775:    req.ApplyOptions(opts...)",
          "776:    return req, nil",
          "777:   },",
          "778:  }",
          "780:  for p.Next() {",
          "781:   if !fn(p.Page().(*DescribeConnectorsOutput), !p.HasNextPage()) {",
          "782:    break",
          "783:   }",
          "784:  }",
          "786:  return p.Err()",
          "787: }",
          "789: const opDescribeFlow = \"DescribeFlow\"",
          "815: func (c *Appflow) DescribeFlowRequest(input *DescribeFlowInput) (req *request.Request, output *DescribeFlowOutput) {",
          "816:  op := &request.Operation{",
          "817:   Name:       opDescribeFlow,",
          "818:   HTTPMethod: \"POST\",",
          "819:   HTTPPath:   \"/describe-flow\",",
          "820:  }",
          "822:  if input == nil {",
          "823:   input = &DescribeFlowInput{}",
          "824:  }",
          "826:  output = &DescribeFlowOutput{}",
          "827:  req = c.newRequest(op, input, output)",
          "828:  return",
          "829: }",
          "852: func (c *Appflow) DescribeFlow(input *DescribeFlowInput) (*DescribeFlowOutput, error) {",
          "853:  req, out := c.DescribeFlowRequest(input)",
          "854:  return out, req.Send()",
          "855: }",
          "866: func (c *Appflow) DescribeFlowWithContext(ctx aws.Context, input *DescribeFlowInput, opts ...request.Option) (*DescribeFlowOutput, error) {",
          "867:  req, out := c.DescribeFlowRequest(input)",
          "868:  req.SetContext(ctx)",
          "869:  req.ApplyOptions(opts...)",
          "870:  return out, req.Send()",
          "871: }",
          "873: const opDescribeFlowExecutionRecords = \"DescribeFlowExecutionRecords\"",
          "899: func (c *Appflow) DescribeFlowExecutionRecordsRequest(input *DescribeFlowExecutionRecordsInput) (req *request.Request, output *DescribeFlowExecutionRecordsOutput) {",
          "900:  op := &request.Operation{",
          "901:   Name:       opDescribeFlowExecutionRecords,",
          "902:   HTTPMethod: \"POST\",",
          "903:   HTTPPath:   \"/describe-flow-execution-records\",",
          "904:   Paginator: &request.Paginator{",
          "905:    InputTokens:     []string{\"nextToken\"},",
          "906:    OutputTokens:    []string{\"nextToken\"},",
          "907:    LimitToken:      \"maxResults\",",
          "908:    TruncationToken: \"\",",
          "909:   },",
          "910:  }",
          "912:  if input == nil {",
          "913:   input = &DescribeFlowExecutionRecordsInput{}",
          "914:  }",
          "916:  output = &DescribeFlowExecutionRecordsOutput{}",
          "917:  req = c.newRequest(op, input, output)",
          "918:  return",
          "919: }",
          "945: func (c *Appflow) DescribeFlowExecutionRecords(input *DescribeFlowExecutionRecordsInput) (*DescribeFlowExecutionRecordsOutput, error) {",
          "946:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "947:  return out, req.Send()",
          "948: }",
          "959: func (c *Appflow) DescribeFlowExecutionRecordsWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, opts ...request.Option) (*DescribeFlowExecutionRecordsOutput, error) {",
          "960:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "961:  req.SetContext(ctx)",
          "962:  req.ApplyOptions(opts...)",
          "963:  return out, req.Send()",
          "964: }",
          "983: func (c *Appflow) DescribeFlowExecutionRecordsPages(input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool) error {",
          "984:  return c.DescribeFlowExecutionRecordsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "985: }",
          "994: func (c *Appflow) DescribeFlowExecutionRecordsPagesWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool, opts ...request.Option) error {",
          "995:  p := request.Pagination{",
          "996:   NewRequest: func() (*request.Request, error) {",
          "997:    var inCpy *DescribeFlowExecutionRecordsInput",
          "998:    if input != nil {",
          "999:     tmp := *input",
          "1000:     inCpy = &tmp",
          "1001:    }",
          "1002:    req, _ := c.DescribeFlowExecutionRecordsRequest(inCpy)",
          "1003:    req.SetContext(ctx)",
          "1004:    req.ApplyOptions(opts...)",
          "1005:    return req, nil",
          "1006:   },",
          "1007:  }",
          "1009:  for p.Next() {",
          "1010:   if !fn(p.Page().(*DescribeFlowExecutionRecordsOutput), !p.HasNextPage()) {",
          "1011:    break",
          "1012:   }",
          "1013:  }",
          "1015:  return p.Err()",
          "1016: }",
          "1018: const opListConnectorEntities = \"ListConnectorEntities\"",
          "1044: func (c *Appflow) ListConnectorEntitiesRequest(input *ListConnectorEntitiesInput) (req *request.Request, output *ListConnectorEntitiesOutput) {",
          "1045:  op := &request.Operation{",
          "1046:   Name:       opListConnectorEntities,",
          "1047:   HTTPMethod: \"POST\",",
          "1048:   HTTPPath:   \"/list-connector-entities\",",
          "1049:  }",
          "1051:  if input == nil {",
          "1052:   input = &ListConnectorEntitiesInput{}",
          "1053:  }",
          "1055:  output = &ListConnectorEntitiesOutput{}",
          "1056:  req = c.newRequest(op, input, output)",
          "1057:  return",
          "1058: }",
          "1092: func (c *Appflow) ListConnectorEntities(input *ListConnectorEntitiesInput) (*ListConnectorEntitiesOutput, error) {",
          "1093:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1094:  return out, req.Send()",
          "1095: }",
          "1106: func (c *Appflow) ListConnectorEntitiesWithContext(ctx aws.Context, input *ListConnectorEntitiesInput, opts ...request.Option) (*ListConnectorEntitiesOutput, error) {",
          "1107:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1108:  req.SetContext(ctx)",
          "1109:  req.ApplyOptions(opts...)",
          "1110:  return out, req.Send()",
          "1111: }",
          "1113: const opListFlows = \"ListFlows\"",
          "1139: func (c *Appflow) ListFlowsRequest(input *ListFlowsInput) (req *request.Request, output *ListFlowsOutput) {",
          "1140:  op := &request.Operation{",
          "1141:   Name:       opListFlows,",
          "1142:   HTTPMethod: \"POST\",",
          "1143:   HTTPPath:   \"/list-flows\",",
          "1144:   Paginator: &request.Paginator{",
          "1145:    InputTokens:     []string{\"nextToken\"},",
          "1146:    OutputTokens:    []string{\"nextToken\"},",
          "1147:    LimitToken:      \"maxResults\",",
          "1148:    TruncationToken: \"\",",
          "1149:   },",
          "1150:  }",
          "1152:  if input == nil {",
          "1153:   input = &ListFlowsInput{}",
          "1154:  }",
          "1156:  output = &ListFlowsOutput{}",
          "1157:  req = c.newRequest(op, input, output)",
          "1158:  return",
          "1159: }",
          "1181: func (c *Appflow) ListFlows(input *ListFlowsInput) (*ListFlowsOutput, error) {",
          "1182:  req, out := c.ListFlowsRequest(input)",
          "1183:  return out, req.Send()",
          "1184: }",
          "1195: func (c *Appflow) ListFlowsWithContext(ctx aws.Context, input *ListFlowsInput, opts ...request.Option) (*ListFlowsOutput, error) {",
          "1196:  req, out := c.ListFlowsRequest(input)",
          "1197:  req.SetContext(ctx)",
          "1198:  req.ApplyOptions(opts...)",
          "1199:  return out, req.Send()",
          "1200: }",
          "1219: func (c *Appflow) ListFlowsPages(input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool) error {",
          "1220:  return c.ListFlowsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1221: }",
          "1230: func (c *Appflow) ListFlowsPagesWithContext(ctx aws.Context, input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool, opts ...request.Option) error {",
          "1231:  p := request.Pagination{",
          "1232:   NewRequest: func() (*request.Request, error) {",
          "1233:    var inCpy *ListFlowsInput",
          "1234:    if input != nil {",
          "1235:     tmp := *input",
          "1236:     inCpy = &tmp",
          "1237:    }",
          "1238:    req, _ := c.ListFlowsRequest(inCpy)",
          "1239:    req.SetContext(ctx)",
          "1240:    req.ApplyOptions(opts...)",
          "1241:    return req, nil",
          "1242:   },",
          "1243:  }",
          "1245:  for p.Next() {",
          "1246:   if !fn(p.Page().(*ListFlowsOutput), !p.HasNextPage()) {",
          "1247:    break",
          "1248:   }",
          "1249:  }",
          "1251:  return p.Err()",
          "1252: }",
          "1254: const opListTagsForResource = \"ListTagsForResource\"",
          "1280: func (c *Appflow) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1281:  op := &request.Operation{",
          "1282:   Name:       opListTagsForResource,",
          "1283:   HTTPMethod: \"GET\",",
          "1284:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1285:  }",
          "1287:  if input == nil {",
          "1288:   input = &ListTagsForResourceInput{}",
          "1289:  }",
          "1291:  output = &ListTagsForResourceOutput{}",
          "1292:  req = c.newRequest(op, input, output)",
          "1293:  return",
          "1294: }",
          "1320: func (c *Appflow) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1321:  req, out := c.ListTagsForResourceRequest(input)",
          "1322:  return out, req.Send()",
          "1323: }",
          "1334: func (c *Appflow) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1335:  req, out := c.ListTagsForResourceRequest(input)",
          "1336:  req.SetContext(ctx)",
          "1337:  req.ApplyOptions(opts...)",
          "1338:  return out, req.Send()",
          "1339: }",
          "1341: const opStartFlow = \"StartFlow\"",
          "1367: func (c *Appflow) StartFlowRequest(input *StartFlowInput) (req *request.Request, output *StartFlowOutput) {",
          "1368:  op := &request.Operation{",
          "1369:   Name:       opStartFlow,",
          "1370:   HTTPMethod: \"POST\",",
          "1371:   HTTPPath:   \"/start-flow\",",
          "1372:  }",
          "1374:  if input == nil {",
          "1375:   input = &StartFlowInput{}",
          "1376:  }",
          "1378:  output = &StartFlowOutput{}",
          "1379:  req = c.newRequest(op, input, output)",
          "1380:  return",
          "1381: }",
          "1415: func (c *Appflow) StartFlow(input *StartFlowInput) (*StartFlowOutput, error) {",
          "1416:  req, out := c.StartFlowRequest(input)",
          "1417:  return out, req.Send()",
          "1418: }",
          "1429: func (c *Appflow) StartFlowWithContext(ctx aws.Context, input *StartFlowInput, opts ...request.Option) (*StartFlowOutput, error) {",
          "1430:  req, out := c.StartFlowRequest(input)",
          "1431:  req.SetContext(ctx)",
          "1432:  req.ApplyOptions(opts...)",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opStopFlow = \"StopFlow\"",
          "1462: func (c *Appflow) StopFlowRequest(input *StopFlowInput) (req *request.Request, output *StopFlowOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opStopFlow,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/stop-flow\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &StopFlowInput{}",
          "1471:  }",
          "1473:  output = &StopFlowOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1509: func (c *Appflow) StopFlow(input *StopFlowInput) (*StopFlowOutput, error) {",
          "1510:  req, out := c.StopFlowRequest(input)",
          "1511:  return out, req.Send()",
          "1512: }",
          "1523: func (c *Appflow) StopFlowWithContext(ctx aws.Context, input *StopFlowInput, opts ...request.Option) (*StopFlowOutput, error) {",
          "1524:  req, out := c.StopFlowRequest(input)",
          "1525:  req.SetContext(ctx)",
          "1526:  req.ApplyOptions(opts...)",
          "1527:  return out, req.Send()",
          "1528: }",
          "1530: const opTagResource = \"TagResource\"",
          "1556: func (c *Appflow) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "1557:  op := &request.Operation{",
          "1558:   Name:       opTagResource,",
          "1559:   HTTPMethod: \"POST\",",
          "1560:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1561:  }",
          "1563:  if input == nil {",
          "1564:   input = &TagResourceInput{}",
          "1565:  }",
          "1567:  output = &TagResourceOutput{}",
          "1568:  req = c.newRequest(op, input, output)",
          "1569:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1570:  return",
          "1571: }",
          "1597: func (c *Appflow) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "1598:  req, out := c.TagResourceRequest(input)",
          "1599:  return out, req.Send()",
          "1600: }",
          "1611: func (c *Appflow) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "1612:  req, out := c.TagResourceRequest(input)",
          "1613:  req.SetContext(ctx)",
          "1614:  req.ApplyOptions(opts...)",
          "1615:  return out, req.Send()",
          "1616: }",
          "1618: const opUntagResource = \"UntagResource\"",
          "1644: func (c *Appflow) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "1645:  op := &request.Operation{",
          "1646:   Name:       opUntagResource,",
          "1647:   HTTPMethod: \"DELETE\",",
          "1648:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1649:  }",
          "1651:  if input == nil {",
          "1652:   input = &UntagResourceInput{}",
          "1653:  }",
          "1655:  output = &UntagResourceOutput{}",
          "1656:  req = c.newRequest(op, input, output)",
          "1657:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1658:  return",
          "1659: }",
          "1685: func (c *Appflow) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "1686:  req, out := c.UntagResourceRequest(input)",
          "1687:  return out, req.Send()",
          "1688: }",
          "1699: func (c *Appflow) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "1700:  req, out := c.UntagResourceRequest(input)",
          "1701:  req.SetContext(ctx)",
          "1702:  req.ApplyOptions(opts...)",
          "1703:  return out, req.Send()",
          "1704: }",
          "1706: const opUpdateConnectorProfile = \"UpdateConnectorProfile\"",
          "1732: func (c *Appflow) UpdateConnectorProfileRequest(input *UpdateConnectorProfileInput) (req *request.Request, output *UpdateConnectorProfileOutput) {",
          "1733:  op := &request.Operation{",
          "1734:   Name:       opUpdateConnectorProfile,",
          "1735:   HTTPMethod: \"POST\",",
          "1736:   HTTPPath:   \"/update-connector-profile\",",
          "1737:  }",
          "1739:  if input == nil {",
          "1740:   input = &UpdateConnectorProfileInput{}",
          "1741:  }",
          "1743:  output = &UpdateConnectorProfileOutput{}",
          "1744:  req = c.newRequest(op, input, output)",
          "1745:  return",
          "1746: }",
          "1780: func (c *Appflow) UpdateConnectorProfile(input *UpdateConnectorProfileInput) (*UpdateConnectorProfileOutput, error) {",
          "1781:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1782:  return out, req.Send()",
          "1783: }",
          "1794: func (c *Appflow) UpdateConnectorProfileWithContext(ctx aws.Context, input *UpdateConnectorProfileInput, opts ...request.Option) (*UpdateConnectorProfileOutput, error) {",
          "1795:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1796:  req.SetContext(ctx)",
          "1797:  req.ApplyOptions(opts...)",
          "1798:  return out, req.Send()",
          "1799: }",
          "1801: const opUpdateFlow = \"UpdateFlow\"",
          "1827: func (c *Appflow) UpdateFlowRequest(input *UpdateFlowInput) (req *request.Request, output *UpdateFlowOutput) {",
          "1828:  op := &request.Operation{",
          "1829:   Name:       opUpdateFlow,",
          "1830:   HTTPMethod: \"POST\",",
          "1831:   HTTPPath:   \"/update-flow\",",
          "1832:  }",
          "1834:  if input == nil {",
          "1835:   input = &UpdateFlowInput{}",
          "1836:  }",
          "1838:  output = &UpdateFlowOutput{}",
          "1839:  req = c.newRequest(op, input, output)",
          "1840:  return",
          "1841: }",
          "1882: func (c *Appflow) UpdateFlow(input *UpdateFlowInput) (*UpdateFlowOutput, error) {",
          "1883:  req, out := c.UpdateFlowRequest(input)",
          "1884:  return out, req.Send()",
          "1885: }",
          "1896: func (c *Appflow) UpdateFlowWithContext(ctx aws.Context, input *UpdateFlowInput, opts ...request.Option) (*UpdateFlowOutput, error) {",
          "1897:  req, out := c.UpdateFlowRequest(input)",
          "1898:  req.SetContext(ctx)",
          "1899:  req.ApplyOptions(opts...)",
          "1900:  return out, req.Send()",
          "1901: }",
          "1905: type AggregationConfig struct {",
          "1906:  _ struct{} `type:\"structure\"`",
          "1910:  AggregationType *string `locationName:\"aggregationType\" type:\"string\" enum:\"AggregationType\"`",
          "1911: }",
          "1914: func (s AggregationConfig) String() string {",
          "1915:  return awsutil.Prettify(s)",
          "1916: }",
          "1919: func (s AggregationConfig) GoString() string {",
          "1920:  return s.String()",
          "1921: }",
          "1924: func (s *AggregationConfig) SetAggregationType(v string) *AggregationConfig {",
          "1925:  s.AggregationType = &v",
          "1926:  return s",
          "1927: }",
          "1930: type AmplitudeConnectorProfileCredentials struct {",
          "1931:  _ struct{} `type:\"structure\"`",
          "1937:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "1942:  SecretKey *string `locationName:\"secretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "1943: }",
          "1946: func (s AmplitudeConnectorProfileCredentials) String() string {",
          "1947:  return awsutil.Prettify(s)",
          "1948: }",
          "1951: func (s AmplitudeConnectorProfileCredentials) GoString() string {",
          "1952:  return s.String()",
          "1953: }",
          "1956: func (s *AmplitudeConnectorProfileCredentials) Validate() error {",
          "1957:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeConnectorProfileCredentials\"}",
          "1958:  if s.ApiKey == nil {",
          "1959:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "1960:  }",
          "1961:  if s.SecretKey == nil {",
          "1962:   invalidParams.Add(request.NewErrParamRequired(\"SecretKey\"))",
          "1963:  }",
          "1965:  if invalidParams.Len() > 0 {",
          "1966:   return invalidParams",
          "1967:  }",
          "1968:  return nil",
          "1969: }",
          "1972: func (s *AmplitudeConnectorProfileCredentials) SetApiKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1973:  s.ApiKey = &v",
          "1974:  return s",
          "1975: }",
          "1978: func (s *AmplitudeConnectorProfileCredentials) SetSecretKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1979:  s.SecretKey = &v",
          "1980:  return s",
          "1981: }",
          "1984: type AmplitudeConnectorProfileProperties struct {",
          "1985:  _ struct{} `type:\"structure\"`",
          "1986: }",
          "1989: func (s AmplitudeConnectorProfileProperties) String() string {",
          "1990:  return awsutil.Prettify(s)",
          "1991: }",
          "1994: func (s AmplitudeConnectorProfileProperties) GoString() string {",
          "1995:  return s.String()",
          "1996: }",
          "1999: type AmplitudeMetadata struct {",
          "2000:  _ struct{} `type:\"structure\"`",
          "2001: }",
          "2004: func (s AmplitudeMetadata) String() string {",
          "2005:  return awsutil.Prettify(s)",
          "2006: }",
          "2009: func (s AmplitudeMetadata) GoString() string {",
          "2010:  return s.String()",
          "2011: }",
          "2014: type AmplitudeSourceProperties struct {",
          "2015:  _ struct{} `type:\"structure\"`",
          "2020:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "2021: }",
          "2024: func (s AmplitudeSourceProperties) String() string {",
          "2025:  return awsutil.Prettify(s)",
          "2026: }",
          "2029: func (s AmplitudeSourceProperties) GoString() string {",
          "2030:  return s.String()",
          "2031: }",
          "2034: func (s *AmplitudeSourceProperties) Validate() error {",
          "2035:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeSourceProperties\"}",
          "2036:  if s.Object == nil {",
          "2037:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "2038:  }",
          "2040:  if invalidParams.Len() > 0 {",
          "2041:   return invalidParams",
          "2042:  }",
          "2043:  return nil",
          "2044: }",
          "2047: func (s *AmplitudeSourceProperties) SetObject(v string) *AmplitudeSourceProperties {",
          "2048:  s.Object = &v",
          "2049:  return s",
          "2050: }",
          "2055: type ConflictException struct {",
          "2056:  _            struct{}                  `type:\"structure\"`",
          "2057:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2059:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2060: }",
          "2063: func (s ConflictException) String() string {",
          "2064:  return awsutil.Prettify(s)",
          "2065: }",
          "2068: func (s ConflictException) GoString() string {",
          "2069:  return s.String()",
          "2070: }",
          "2072: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2073:  return &ConflictException{",
          "2074:   RespMetadata: v,",
          "2075:  }",
          "2076: }",
          "2079: func (s *ConflictException) Code() string {",
          "2080:  return \"ConflictException\"",
          "2081: }",
          "2084: func (s *ConflictException) Message() string {",
          "2085:  if s.Message_ != nil {",
          "2086:   return *s.Message_",
          "2087:  }",
          "2088:  return \"\"",
          "2089: }",
          "2092: func (s *ConflictException) OrigErr() error {",
          "2093:  return nil",
          "2094: }",
          "2096: func (s *ConflictException) Error() string {",
          "2097:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2098: }",
          "2101: func (s *ConflictException) StatusCode() int {",
          "2102:  return s.RespMetadata.StatusCode",
          "2103: }",
          "2106: func (s *ConflictException) RequestID() string {",
          "2107:  return s.RespMetadata.RequestID",
          "2108: }",
          "2111: type ConnectorAuthenticationException struct {",
          "2112:  _            struct{}                  `type:\"structure\"`",
          "2113:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2115:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2116: }",
          "2119: func (s ConnectorAuthenticationException) String() string {",
          "2120:  return awsutil.Prettify(s)",
          "2121: }",
          "2124: func (s ConnectorAuthenticationException) GoString() string {",
          "2125:  return s.String()",
          "2126: }",
          "2128: func newErrorConnectorAuthenticationException(v protocol.ResponseMetadata) error {",
          "2129:  return &ConnectorAuthenticationException{",
          "2130:   RespMetadata: v,",
          "2131:  }",
          "2132: }",
          "2135: func (s *ConnectorAuthenticationException) Code() string {",
          "2136:  return \"ConnectorAuthenticationException\"",
          "2137: }",
          "2140: func (s *ConnectorAuthenticationException) Message() string {",
          "2141:  if s.Message_ != nil {",
          "2142:   return *s.Message_",
          "2143:  }",
          "2144:  return \"\"",
          "2145: }",
          "2148: func (s *ConnectorAuthenticationException) OrigErr() error {",
          "2149:  return nil",
          "2150: }",
          "2152: func (s *ConnectorAuthenticationException) Error() string {",
          "2153:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2154: }",
          "2157: func (s *ConnectorAuthenticationException) StatusCode() int {",
          "2158:  return s.RespMetadata.StatusCode",
          "2159: }",
          "2162: func (s *ConnectorAuthenticationException) RequestID() string {",
          "2163:  return s.RespMetadata.RequestID",
          "2164: }",
          "2167: type ConnectorConfiguration struct {",
          "2168:  _ struct{} `type:\"structure\"`",
          "2171:  CanUseAsDestination *bool `locationName:\"canUseAsDestination\" type:\"boolean\"`",
          "2174:  CanUseAsSource *bool `locationName:\"canUseAsSource\" type:\"boolean\"`",
          "2178:  ConnectorMetadata *ConnectorMetadata `locationName:\"connectorMetadata\" type:\"structure\"`",
          "2181:  IsPrivateLinkEnabled *bool `locationName:\"isPrivateLinkEnabled\" type:\"boolean\"`",
          "2184:  IsPrivateLinkEndpointUrlRequired *bool `locationName:\"isPrivateLinkEndpointUrlRequired\" type:\"boolean\"`",
          "2187:  SupportedDestinationConnectors []*string `locationName:\"supportedDestinationConnectors\" type:\"list\"`",
          "2190:  SupportedSchedulingFrequencies []*string `locationName:\"supportedSchedulingFrequencies\" type:\"list\"`",
          "2193:  SupportedTriggerTypes []*string `locationName:\"supportedTriggerTypes\" type:\"list\"`",
          "2194: }",
          "2197: func (s ConnectorConfiguration) String() string {",
          "2198:  return awsutil.Prettify(s)",
          "2199: }",
          "2202: func (s ConnectorConfiguration) GoString() string {",
          "2203:  return s.String()",
          "2204: }",
          "2207: func (s *ConnectorConfiguration) SetCanUseAsDestination(v bool) *ConnectorConfiguration {",
          "2208:  s.CanUseAsDestination = &v",
          "2209:  return s",
          "2210: }",
          "2213: func (s *ConnectorConfiguration) SetCanUseAsSource(v bool) *ConnectorConfiguration {",
          "2214:  s.CanUseAsSource = &v",
          "2215:  return s",
          "2216: }",
          "2219: func (s *ConnectorConfiguration) SetConnectorMetadata(v *ConnectorMetadata) *ConnectorConfiguration {",
          "2220:  s.ConnectorMetadata = v",
          "2221:  return s",
          "2222: }",
          "2225: func (s *ConnectorConfiguration) SetIsPrivateLinkEnabled(v bool) *ConnectorConfiguration {",
          "2226:  s.IsPrivateLinkEnabled = &v",
          "2227:  return s",
          "2228: }",
          "2231: func (s *ConnectorConfiguration) SetIsPrivateLinkEndpointUrlRequired(v bool) *ConnectorConfiguration {",
          "2232:  s.IsPrivateLinkEndpointUrlRequired = &v",
          "2233:  return s",
          "2234: }",
          "2237: func (s *ConnectorConfiguration) SetSupportedDestinationConnectors(v []*string) *ConnectorConfiguration {",
          "2238:  s.SupportedDestinationConnectors = v",
          "2239:  return s",
          "2240: }",
          "2243: func (s *ConnectorConfiguration) SetSupportedSchedulingFrequencies(v []*string) *ConnectorConfiguration {",
          "2244:  s.SupportedSchedulingFrequencies = v",
          "2245:  return s",
          "2246: }",
          "2249: func (s *ConnectorConfiguration) SetSupportedTriggerTypes(v []*string) *ConnectorConfiguration {",
          "2250:  s.SupportedTriggerTypes = v",
          "2251:  return s",
          "2252: }",
          "2257: type ConnectorEntity struct {",
          "2258:  _ struct{} `type:\"structure\"`",
          "2265:  HasNestedEntities *bool `locationName:\"hasNestedEntities\" type:\"boolean\"`",
          "2268:  Label *string `locationName:\"label\" type:\"string\"`",
          "2273:  Name *string `locationName:\"name\" type:\"string\" required:\"true\"`",
          "2274: }",
          "2277: func (s ConnectorEntity) String() string {",
          "2278:  return awsutil.Prettify(s)",
          "2279: }",
          "2282: func (s ConnectorEntity) GoString() string {",
          "2283:  return s.String()",
          "2284: }",
          "2287: func (s *ConnectorEntity) SetHasNestedEntities(v bool) *ConnectorEntity {",
          "2288:  s.HasNestedEntities = &v",
          "2289:  return s",
          "2290: }",
          "2293: func (s *ConnectorEntity) SetLabel(v string) *ConnectorEntity {",
          "2294:  s.Label = &v",
          "2295:  return s",
          "2296: }",
          "2299: func (s *ConnectorEntity) SetName(v string) *ConnectorEntity {",
          "2300:  s.Name = &v",
          "2301:  return s",
          "2302: }",
          "2306: type ConnectorEntityField struct {",
          "2307:  _ struct{} `type:\"structure\"`",
          "2310:  Description *string `locationName:\"description\" type:\"string\"`",
          "2313:  DestinationProperties *DestinationFieldProperties `locationName:\"destinationProperties\" type:\"structure\"`",
          "2318:  Identifier *string `locationName:\"identifier\" type:\"string\" required:\"true\"`",
          "2321:  Label *string `locationName:\"label\" type:\"string\"`",
          "2325:  SourceProperties *SourceFieldProperties `locationName:\"sourceProperties\" type:\"structure\"`",
          "2329:  SupportedFieldTypeDetails *SupportedFieldTypeDetails `locationName:\"supportedFieldTypeDetails\" type:\"structure\"`",
          "2330: }",
          "2333: func (s ConnectorEntityField) String() string {",
          "2334:  return awsutil.Prettify(s)",
          "2335: }",
          "2338: func (s ConnectorEntityField) GoString() string {",
          "2339:  return s.String()",
          "2340: }",
          "2343: func (s *ConnectorEntityField) SetDescription(v string) *ConnectorEntityField {",
          "2344:  s.Description = &v",
          "2345:  return s",
          "2346: }",
          "2349: func (s *ConnectorEntityField) SetDestinationProperties(v *DestinationFieldProperties) *ConnectorEntityField {",
          "2350:  s.DestinationProperties = v",
          "2351:  return s",
          "2352: }",
          "2355: func (s *ConnectorEntityField) SetIdentifier(v string) *ConnectorEntityField {",
          "2356:  s.Identifier = &v",
          "2357:  return s",
          "2358: }",
          "2361: func (s *ConnectorEntityField) SetLabel(v string) *ConnectorEntityField {",
          "2362:  s.Label = &v",
          "2363:  return s",
          "2364: }",
          "2367: func (s *ConnectorEntityField) SetSourceProperties(v *SourceFieldProperties) *ConnectorEntityField {",
          "2368:  s.SourceProperties = v",
          "2369:  return s",
          "2370: }",
          "2373: func (s *ConnectorEntityField) SetSupportedFieldTypeDetails(v *SupportedFieldTypeDetails) *ConnectorEntityField {",
          "2374:  s.SupportedFieldTypeDetails = v",
          "2375:  return s",
          "2376: }",
          "2380: type ConnectorMetadata struct {",
          "2381:  _ struct{} `type:\"structure\"`",
          "2384:  Amplitude *AmplitudeMetadata `type:\"structure\"`",
          "2387:  Datadog *DatadogMetadata `type:\"structure\"`",
          "2390:  Dynatrace *DynatraceMetadata `type:\"structure\"`",
          "2393:  EventBridge *EventBridgeMetadata `type:\"structure\"`",
          "2396:  GoogleAnalytics *GoogleAnalyticsMetadata `type:\"structure\"`",
          "2399:  InforNexus *InforNexusMetadata `type:\"structure\"`",
          "2402:  Marketo *MarketoMetadata `type:\"structure\"`",
          "2405:  Redshift *RedshiftMetadata `type:\"structure\"`",
          "2408:  S3 *S3Metadata `type:\"structure\"`",
          "2411:  Salesforce *SalesforceMetadata `type:\"structure\"`",
          "2414:  ServiceNow *ServiceNowMetadata `type:\"structure\"`",
          "2417:  Singular *SingularMetadata `type:\"structure\"`",
          "2420:  Slack *SlackMetadata `type:\"structure\"`",
          "2423:  Snowflake *SnowflakeMetadata `type:\"structure\"`",
          "2426:  Trendmicro *TrendmicroMetadata `type:\"structure\"`",
          "2429:  Veeva *VeevaMetadata `type:\"structure\"`",
          "2432:  Zendesk *ZendeskMetadata `type:\"structure\"`",
          "2433: }",
          "2436: func (s ConnectorMetadata) String() string {",
          "2437:  return awsutil.Prettify(s)",
          "2438: }",
          "2441: func (s ConnectorMetadata) GoString() string {",
          "2442:  return s.String()",
          "2443: }",
          "2446: func (s *ConnectorMetadata) SetAmplitude(v *AmplitudeMetadata) *ConnectorMetadata {",
          "2447:  s.Amplitude = v",
          "2448:  return s",
          "2449: }",
          "2452: func (s *ConnectorMetadata) SetDatadog(v *DatadogMetadata) *ConnectorMetadata {",
          "2453:  s.Datadog = v",
          "2454:  return s",
          "2455: }",
          "2458: func (s *ConnectorMetadata) SetDynatrace(v *DynatraceMetadata) *ConnectorMetadata {",
          "2459:  s.Dynatrace = v",
          "2460:  return s",
          "2461: }",
          "2464: func (s *ConnectorMetadata) SetEventBridge(v *EventBridgeMetadata) *ConnectorMetadata {",
          "2465:  s.EventBridge = v",
          "2466:  return s",
          "2467: }",
          "2470: func (s *ConnectorMetadata) SetGoogleAnalytics(v *GoogleAnalyticsMetadata) *ConnectorMetadata {",
          "2471:  s.GoogleAnalytics = v",
          "2472:  return s",
          "2473: }",
          "2476: func (s *ConnectorMetadata) SetInforNexus(v *InforNexusMetadata) *ConnectorMetadata {",
          "2477:  s.InforNexus = v",
          "2478:  return s",
          "2479: }",
          "2482: func (s *ConnectorMetadata) SetMarketo(v *MarketoMetadata) *ConnectorMetadata {",
          "2483:  s.Marketo = v",
          "2484:  return s",
          "2485: }",
          "2488: func (s *ConnectorMetadata) SetRedshift(v *RedshiftMetadata) *ConnectorMetadata {",
          "2489:  s.Redshift = v",
          "2490:  return s",
          "2491: }",
          "2494: func (s *ConnectorMetadata) SetS3(v *S3Metadata) *ConnectorMetadata {",
          "2495:  s.S3 = v",
          "2496:  return s",
          "2497: }",
          "2500: func (s *ConnectorMetadata) SetSalesforce(v *SalesforceMetadata) *ConnectorMetadata {",
          "2501:  s.Salesforce = v",
          "2502:  return s",
          "2503: }",
          "2506: func (s *ConnectorMetadata) SetServiceNow(v *ServiceNowMetadata) *ConnectorMetadata {",
          "2507:  s.ServiceNow = v",
          "2508:  return s",
          "2509: }",
          "2512: func (s *ConnectorMetadata) SetSingular(v *SingularMetadata) *ConnectorMetadata {",
          "2513:  s.Singular = v",
          "2514:  return s",
          "2515: }",
          "2518: func (s *ConnectorMetadata) SetSlack(v *SlackMetadata) *ConnectorMetadata {",
          "2519:  s.Slack = v",
          "2520:  return s",
          "2521: }",
          "2524: func (s *ConnectorMetadata) SetSnowflake(v *SnowflakeMetadata) *ConnectorMetadata {",
          "2525:  s.Snowflake = v",
          "2526:  return s",
          "2527: }",
          "2530: func (s *ConnectorMetadata) SetTrendmicro(v *TrendmicroMetadata) *ConnectorMetadata {",
          "2531:  s.Trendmicro = v",
          "2532:  return s",
          "2533: }",
          "2536: func (s *ConnectorMetadata) SetVeeva(v *VeevaMetadata) *ConnectorMetadata {",
          "2537:  s.Veeva = v",
          "2538:  return s",
          "2539: }",
          "2542: func (s *ConnectorMetadata) SetZendesk(v *ZendeskMetadata) *ConnectorMetadata {",
          "2543:  s.Zendesk = v",
          "2544:  return s",
          "2545: }",
          "2549: type ConnectorOAuthRequest struct {",
          "2550:  _ struct{} `type:\"structure\"`",
          "2554:  AuthCode *string `locationName:\"authCode\" type:\"string\"`",
          "2558:  RedirectUri *string `locationName:\"redirectUri\" type:\"string\"`",
          "2559: }",
          "2562: func (s ConnectorOAuthRequest) String() string {",
          "2563:  return awsutil.Prettify(s)",
          "2564: }",
          "2567: func (s ConnectorOAuthRequest) GoString() string {",
          "2568:  return s.String()",
          "2569: }",
          "2572: func (s *ConnectorOAuthRequest) SetAuthCode(v string) *ConnectorOAuthRequest {",
          "2573:  s.AuthCode = &v",
          "2574:  return s",
          "2575: }",
          "2578: func (s *ConnectorOAuthRequest) SetRedirectUri(v string) *ConnectorOAuthRequest {",
          "2579:  s.RedirectUri = &v",
          "2580:  return s",
          "2581: }",
          "2584: type ConnectorOperator struct {",
          "2585:  _ struct{} `type:\"structure\"`",
          "2588:  Amplitude *string `type:\"string\" enum:\"AmplitudeConnectorOperator\"`",
          "2591:  Datadog *string `type:\"string\" enum:\"DatadogConnectorOperator\"`",
          "2594:  Dynatrace *string `type:\"string\" enum:\"DynatraceConnectorOperator\"`",
          "2597:  GoogleAnalytics *string `type:\"string\" enum:\"GoogleAnalyticsConnectorOperator\"`",
          "2600:  InforNexus *string `type:\"string\" enum:\"InforNexusConnectorOperator\"`",
          "2603:  Marketo *string `type:\"string\" enum:\"MarketoConnectorOperator\"`",
          "2606:  S3 *string `type:\"string\" enum:\"S3ConnectorOperator\"`",
          "2609:  Salesforce *string `type:\"string\" enum:\"SalesforceConnectorOperator\"`",
          "2612:  ServiceNow *string `type:\"string\" enum:\"ServiceNowConnectorOperator\"`",
          "2615:  Singular *string `type:\"string\" enum:\"SingularConnectorOperator\"`",
          "2618:  Slack *string `type:\"string\" enum:\"SlackConnectorOperator\"`",
          "2621:  Trendmicro *string `type:\"string\" enum:\"TrendmicroConnectorOperator\"`",
          "2624:  Veeva *string `type:\"string\" enum:\"VeevaConnectorOperator\"`",
          "2627:  Zendesk *string `type:\"string\" enum:\"ZendeskConnectorOperator\"`",
          "2628: }",
          "2631: func (s ConnectorOperator) String() string {",
          "2632:  return awsutil.Prettify(s)",
          "2633: }",
          "2636: func (s ConnectorOperator) GoString() string {",
          "2637:  return s.String()",
          "2638: }",
          "2641: func (s *ConnectorOperator) SetAmplitude(v string) *ConnectorOperator {",
          "2642:  s.Amplitude = &v",
          "2643:  return s",
          "2644: }",
          "2647: func (s *ConnectorOperator) SetDatadog(v string) *ConnectorOperator {",
          "2648:  s.Datadog = &v",
          "2649:  return s",
          "2650: }",
          "2653: func (s *ConnectorOperator) SetDynatrace(v string) *ConnectorOperator {",
          "2654:  s.Dynatrace = &v",
          "2655:  return s",
          "2656: }",
          "2659: func (s *ConnectorOperator) SetGoogleAnalytics(v string) *ConnectorOperator {",
          "2660:  s.GoogleAnalytics = &v",
          "2661:  return s",
          "2662: }",
          "2665: func (s *ConnectorOperator) SetInforNexus(v string) *ConnectorOperator {",
          "2666:  s.InforNexus = &v",
          "2667:  return s",
          "2668: }",
          "2671: func (s *ConnectorOperator) SetMarketo(v string) *ConnectorOperator {",
          "2672:  s.Marketo = &v",
          "2673:  return s",
          "2674: }",
          "2677: func (s *ConnectorOperator) SetS3(v string) *ConnectorOperator {",
          "2678:  s.S3 = &v",
          "2679:  return s",
          "2680: }",
          "2683: func (s *ConnectorOperator) SetSalesforce(v string) *ConnectorOperator {",
          "2684:  s.Salesforce = &v",
          "2685:  return s",
          "2686: }",
          "2689: func (s *ConnectorOperator) SetServiceNow(v string) *ConnectorOperator {",
          "2690:  s.ServiceNow = &v",
          "2691:  return s",
          "2692: }",
          "2695: func (s *ConnectorOperator) SetSingular(v string) *ConnectorOperator {",
          "2696:  s.Singular = &v",
          "2697:  return s",
          "2698: }",
          "2701: func (s *ConnectorOperator) SetSlack(v string) *ConnectorOperator {",
          "2702:  s.Slack = &v",
          "2703:  return s",
          "2704: }",
          "2707: func (s *ConnectorOperator) SetTrendmicro(v string) *ConnectorOperator {",
          "2708:  s.Trendmicro = &v",
          "2709:  return s",
          "2710: }",
          "2713: func (s *ConnectorOperator) SetVeeva(v string) *ConnectorOperator {",
          "2714:  s.Veeva = &v",
          "2715:  return s",
          "2716: }",
          "2719: func (s *ConnectorOperator) SetZendesk(v string) *ConnectorOperator {",
          "2720:  s.Zendesk = &v",
          "2721:  return s",
          "2722: }",
          "2729: type ConnectorProfile struct {",
          "2730:  _ struct{} `type:\"structure\"`",
          "2733:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" enum:\"ConnectionMode\"`",
          "2736:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "2740:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "2743:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\"`",
          "2746:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "2749:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "2752:  CredentialsArn *string `locationName:\"credentialsArn\" type:\"string\"`",
          "2755:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "2756: }",
          "2759: func (s ConnectorProfile) String() string {",
          "2760:  return awsutil.Prettify(s)",
          "2761: }",
          "2764: func (s ConnectorProfile) GoString() string {",
          "2765:  return s.String()",
          "2766: }",
          "2769: func (s *ConnectorProfile) SetConnectionMode(v string) *ConnectorProfile {",
          "2770:  s.ConnectionMode = &v",
          "2771:  return s",
          "2772: }",
          "2775: func (s *ConnectorProfile) SetConnectorProfileArn(v string) *ConnectorProfile {",
          "2776:  s.ConnectorProfileArn = &v",
          "2777:  return s",
          "2778: }",
          "2781: func (s *ConnectorProfile) SetConnectorProfileName(v string) *ConnectorProfile {",
          "2782:  s.ConnectorProfileName = &v",
          "2783:  return s",
          "2784: }",
          "2787: func (s *ConnectorProfile) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfile {",
          "2788:  s.ConnectorProfileProperties = v",
          "2789:  return s",
          "2790: }",
          "2793: func (s *ConnectorProfile) SetConnectorType(v string) *ConnectorProfile {",
          "2794:  s.ConnectorType = &v",
          "2795:  return s",
          "2796: }",
          "2799: func (s *ConnectorProfile) SetCreatedAt(v time.Time) *ConnectorProfile {",
          "2800:  s.CreatedAt = &v",
          "2801:  return s",
          "2802: }",
          "2805: func (s *ConnectorProfile) SetCredentialsArn(v string) *ConnectorProfile {",
          "2806:  s.CredentialsArn = &v",
          "2807:  return s",
          "2808: }",
          "2811: func (s *ConnectorProfile) SetLastUpdatedAt(v time.Time) *ConnectorProfile {",
          "2812:  s.LastUpdatedAt = &v",
          "2813:  return s",
          "2814: }",
          "2818: type ConnectorProfileConfig struct {",
          "2819:  _ struct{} `type:\"structure\"`",
          "2824:  ConnectorProfileCredentials *ConnectorProfileCredentials `locationName:\"connectorProfileCredentials\" type:\"structure\" required:\"true\"`",
          "2829:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\" required:\"true\"`",
          "2830: }",
          "2833: func (s ConnectorProfileConfig) String() string {",
          "2834:  return awsutil.Prettify(s)",
          "2835: }",
          "2838: func (s ConnectorProfileConfig) GoString() string {",
          "2839:  return s.String()",
          "2840: }",
          "2843: func (s *ConnectorProfileConfig) Validate() error {",
          "2844:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileConfig\"}",
          "2845:  if s.ConnectorProfileCredentials == nil {",
          "2846:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileCredentials\"))",
          "2847:  }",
          "2848:  if s.ConnectorProfileProperties == nil {",
          "2849:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileProperties\"))",
          "2850:  }",
          "2851:  if s.ConnectorProfileCredentials != nil {",
          "2852:   if err := s.ConnectorProfileCredentials.Validate(); err != nil {",
          "2853:    invalidParams.AddNested(\"ConnectorProfileCredentials\", err.(request.ErrInvalidParams))",
          "2854:   }",
          "2855:  }",
          "2856:  if s.ConnectorProfileProperties != nil {",
          "2857:   if err := s.ConnectorProfileProperties.Validate(); err != nil {",
          "2858:    invalidParams.AddNested(\"ConnectorProfileProperties\", err.(request.ErrInvalidParams))",
          "2859:   }",
          "2860:  }",
          "2862:  if invalidParams.Len() > 0 {",
          "2863:   return invalidParams",
          "2864:  }",
          "2865:  return nil",
          "2866: }",
          "2869: func (s *ConnectorProfileConfig) SetConnectorProfileCredentials(v *ConnectorProfileCredentials) *ConnectorProfileConfig {",
          "2870:  s.ConnectorProfileCredentials = v",
          "2871:  return s",
          "2872: }",
          "2875: func (s *ConnectorProfileConfig) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfileConfig {",
          "2876:  s.ConnectorProfileProperties = v",
          "2877:  return s",
          "2878: }",
          "2881: type ConnectorProfileCredentials struct {",
          "2882:  _ struct{} `type:\"structure\"`",
          "2885:  Amplitude *AmplitudeConnectorProfileCredentials `type:\"structure\"`",
          "2888:  Datadog *DatadogConnectorProfileCredentials `type:\"structure\"`",
          "2891:  Dynatrace *DynatraceConnectorProfileCredentials `type:\"structure\"`",
          "2894:  GoogleAnalytics *GoogleAnalyticsConnectorProfileCredentials `type:\"structure\"`",
          "2897:  InforNexus *InforNexusConnectorProfileCredentials `type:\"structure\"`",
          "2900:  Marketo *MarketoConnectorProfileCredentials `type:\"structure\"`",
          "2903:  Redshift *RedshiftConnectorProfileCredentials `type:\"structure\"`",
          "2906:  Salesforce *SalesforceConnectorProfileCredentials `type:\"structure\"`",
          "2909:  ServiceNow *ServiceNowConnectorProfileCredentials `type:\"structure\"`",
          "2912:  Singular *SingularConnectorProfileCredentials `type:\"structure\"`",
          "2915:  Slack *SlackConnectorProfileCredentials `type:\"structure\"`",
          "2918:  Snowflake *SnowflakeConnectorProfileCredentials `type:\"structure\"`",
          "2921:  Trendmicro *TrendmicroConnectorProfileCredentials `type:\"structure\"`",
          "2924:  Veeva *VeevaConnectorProfileCredentials `type:\"structure\"`",
          "2927:  Zendesk *ZendeskConnectorProfileCredentials `type:\"structure\"`",
          "2928: }",
          "2931: func (s ConnectorProfileCredentials) String() string {",
          "2932:  return awsutil.Prettify(s)",
          "2933: }",
          "2936: func (s ConnectorProfileCredentials) GoString() string {",
          "2937:  return s.String()",
          "2938: }",
          "2941: func (s *ConnectorProfileCredentials) Validate() error {",
          "2942:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileCredentials\"}",
          "2943:  if s.Amplitude != nil {",
          "2944:   if err := s.Amplitude.Validate(); err != nil {",
          "2945:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "2946:   }",
          "2947:  }",
          "2948:  if s.Datadog != nil {",
          "2949:   if err := s.Datadog.Validate(); err != nil {",
          "2950:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "2951:   }",
          "2952:  }",
          "2953:  if s.Dynatrace != nil {",
          "2954:   if err := s.Dynatrace.Validate(); err != nil {",
          "2955:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "2956:   }",
          "2957:  }",
          "2958:  if s.GoogleAnalytics != nil {",
          "2959:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "2960:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "2961:   }",
          "2962:  }",
          "2963:  if s.InforNexus != nil {",
          "2964:   if err := s.InforNexus.Validate(); err != nil {",
          "2965:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "2966:   }",
          "2967:  }",
          "2968:  if s.Marketo != nil {",
          "2969:   if err := s.Marketo.Validate(); err != nil {",
          "2970:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "2971:   }",
          "2972:  }",
          "2973:  if s.Redshift != nil {",
          "2974:   if err := s.Redshift.Validate(); err != nil {",
          "2975:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "2976:   }",
          "2977:  }",
          "2978:  if s.ServiceNow != nil {",
          "2979:   if err := s.ServiceNow.Validate(); err != nil {",
          "2980:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "2981:   }",
          "2982:  }",
          "2983:  if s.Singular != nil {",
          "2984:   if err := s.Singular.Validate(); err != nil {",
          "2985:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "2986:   }",
          "2987:  }",
          "2988:  if s.Slack != nil {",
          "2989:   if err := s.Slack.Validate(); err != nil {",
          "2990:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "2991:   }",
          "2992:  }",
          "2993:  if s.Snowflake != nil {",
          "2994:   if err := s.Snowflake.Validate(); err != nil {",
          "2995:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "2996:   }",
          "2997:  }",
          "2998:  if s.Trendmicro != nil {",
          "2999:   if err := s.Trendmicro.Validate(); err != nil {",
          "3000:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "3001:   }",
          "3002:  }",
          "3003:  if s.Veeva != nil {",
          "3004:   if err := s.Veeva.Validate(); err != nil {",
          "3005:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3006:   }",
          "3007:  }",
          "3008:  if s.Zendesk != nil {",
          "3009:   if err := s.Zendesk.Validate(); err != nil {",
          "3010:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3011:   }",
          "3012:  }",
          "3014:  if invalidParams.Len() > 0 {",
          "3015:   return invalidParams",
          "3016:  }",
          "3017:  return nil",
          "3018: }",
          "3021: func (s *ConnectorProfileCredentials) SetAmplitude(v *AmplitudeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3022:  s.Amplitude = v",
          "3023:  return s",
          "3024: }",
          "3027: func (s *ConnectorProfileCredentials) SetDatadog(v *DatadogConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3028:  s.Datadog = v",
          "3029:  return s",
          "3030: }",
          "3033: func (s *ConnectorProfileCredentials) SetDynatrace(v *DynatraceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3034:  s.Dynatrace = v",
          "3035:  return s",
          "3036: }",
          "3039: func (s *ConnectorProfileCredentials) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3040:  s.GoogleAnalytics = v",
          "3041:  return s",
          "3042: }",
          "3045: func (s *ConnectorProfileCredentials) SetInforNexus(v *InforNexusConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3046:  s.InforNexus = v",
          "3047:  return s",
          "3048: }",
          "3051: func (s *ConnectorProfileCredentials) SetMarketo(v *MarketoConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3052:  s.Marketo = v",
          "3053:  return s",
          "3054: }",
          "3057: func (s *ConnectorProfileCredentials) SetRedshift(v *RedshiftConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3058:  s.Redshift = v",
          "3059:  return s",
          "3060: }",
          "3063: func (s *ConnectorProfileCredentials) SetSalesforce(v *SalesforceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3064:  s.Salesforce = v",
          "3065:  return s",
          "3066: }",
          "3069: func (s *ConnectorProfileCredentials) SetServiceNow(v *ServiceNowConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3070:  s.ServiceNow = v",
          "3071:  return s",
          "3072: }",
          "3075: func (s *ConnectorProfileCredentials) SetSingular(v *SingularConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3076:  s.Singular = v",
          "3077:  return s",
          "3078: }",
          "3081: func (s *ConnectorProfileCredentials) SetSlack(v *SlackConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3082:  s.Slack = v",
          "3083:  return s",
          "3084: }",
          "3087: func (s *ConnectorProfileCredentials) SetSnowflake(v *SnowflakeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3088:  s.Snowflake = v",
          "3089:  return s",
          "3090: }",
          "3093: func (s *ConnectorProfileCredentials) SetTrendmicro(v *TrendmicroConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3094:  s.Trendmicro = v",
          "3095:  return s",
          "3096: }",
          "3099: func (s *ConnectorProfileCredentials) SetVeeva(v *VeevaConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3100:  s.Veeva = v",
          "3101:  return s",
          "3102: }",
          "3105: func (s *ConnectorProfileCredentials) SetZendesk(v *ZendeskConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3106:  s.Zendesk = v",
          "3107:  return s",
          "3108: }",
          "3111: type ConnectorProfileProperties struct {",
          "3112:  _ struct{} `type:\"structure\"`",
          "3115:  Amplitude *AmplitudeConnectorProfileProperties `type:\"structure\"`",
          "3118:  Datadog *DatadogConnectorProfileProperties `type:\"structure\"`",
          "3121:  Dynatrace *DynatraceConnectorProfileProperties `type:\"structure\"`",
          "3124:  GoogleAnalytics *GoogleAnalyticsConnectorProfileProperties `type:\"structure\"`",
          "3127:  InforNexus *InforNexusConnectorProfileProperties `type:\"structure\"`",
          "3130:  Marketo *MarketoConnectorProfileProperties `type:\"structure\"`",
          "3133:  Redshift *RedshiftConnectorProfileProperties `type:\"structure\"`",
          "3136:  Salesforce *SalesforceConnectorProfileProperties `type:\"structure\"`",
          "3139:  ServiceNow *ServiceNowConnectorProfileProperties `type:\"structure\"`",
          "3142:  Singular *SingularConnectorProfileProperties `type:\"structure\"`",
          "3145:  Slack *SlackConnectorProfileProperties `type:\"structure\"`",
          "3148:  Snowflake *SnowflakeConnectorProfileProperties `type:\"structure\"`",
          "3151:  Trendmicro *TrendmicroConnectorProfileProperties `type:\"structure\"`",
          "3154:  Veeva *VeevaConnectorProfileProperties `type:\"structure\"`",
          "3157:  Zendesk *ZendeskConnectorProfileProperties `type:\"structure\"`",
          "3158: }",
          "3161: func (s ConnectorProfileProperties) String() string {",
          "3162:  return awsutil.Prettify(s)",
          "3163: }",
          "3166: func (s ConnectorProfileProperties) GoString() string {",
          "3167:  return s.String()",
          "3168: }",
          "3171: func (s *ConnectorProfileProperties) Validate() error {",
          "3172:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileProperties\"}",
          "3173:  if s.Datadog != nil {",
          "3174:   if err := s.Datadog.Validate(); err != nil {",
          "3175:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "3176:   }",
          "3177:  }",
          "3178:  if s.Dynatrace != nil {",
          "3179:   if err := s.Dynatrace.Validate(); err != nil {",
          "3180:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "3181:   }",
          "3182:  }",
          "3183:  if s.InforNexus != nil {",
          "3184:   if err := s.InforNexus.Validate(); err != nil {",
          "3185:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "3186:   }",
          "3187:  }",
          "3188:  if s.Marketo != nil {",
          "3189:   if err := s.Marketo.Validate(); err != nil {",
          "3190:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "3191:   }",
          "3192:  }",
          "3193:  if s.Redshift != nil {",
          "3194:   if err := s.Redshift.Validate(); err != nil {",
          "3195:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "3196:   }",
          "3197:  }",
          "3198:  if s.ServiceNow != nil {",
          "3199:   if err := s.ServiceNow.Validate(); err != nil {",
          "3200:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "3201:   }",
          "3202:  }",
          "3203:  if s.Slack != nil {",
          "3204:   if err := s.Slack.Validate(); err != nil {",
          "3205:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "3206:   }",
          "3207:  }",
          "3208:  if s.Snowflake != nil {",
          "3209:   if err := s.Snowflake.Validate(); err != nil {",
          "3210:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "3211:   }",
          "3212:  }",
          "3213:  if s.Veeva != nil {",
          "3214:   if err := s.Veeva.Validate(); err != nil {",
          "3215:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3216:   }",
          "3217:  }",
          "3218:  if s.Zendesk != nil {",
          "3219:   if err := s.Zendesk.Validate(); err != nil {",
          "3220:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3221:   }",
          "3222:  }",
          "3224:  if invalidParams.Len() > 0 {",
          "3225:   return invalidParams",
          "3226:  }",
          "3227:  return nil",
          "3228: }",
          "3231: func (s *ConnectorProfileProperties) SetAmplitude(v *AmplitudeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3232:  s.Amplitude = v",
          "3233:  return s",
          "3234: }",
          "3237: func (s *ConnectorProfileProperties) SetDatadog(v *DatadogConnectorProfileProperties) *ConnectorProfileProperties {",
          "3238:  s.Datadog = v",
          "3239:  return s",
          "3240: }",
          "3243: func (s *ConnectorProfileProperties) SetDynatrace(v *DynatraceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3244:  s.Dynatrace = v",
          "3245:  return s",
          "3246: }",
          "3249: func (s *ConnectorProfileProperties) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileProperties) *ConnectorProfileProperties {",
          "3250:  s.GoogleAnalytics = v",
          "3251:  return s",
          "3252: }",
          "3255: func (s *ConnectorProfileProperties) SetInforNexus(v *InforNexusConnectorProfileProperties) *ConnectorProfileProperties {",
          "3256:  s.InforNexus = v",
          "3257:  return s",
          "3258: }",
          "3261: func (s *ConnectorProfileProperties) SetMarketo(v *MarketoConnectorProfileProperties) *ConnectorProfileProperties {",
          "3262:  s.Marketo = v",
          "3263:  return s",
          "3264: }",
          "3267: func (s *ConnectorProfileProperties) SetRedshift(v *RedshiftConnectorProfileProperties) *ConnectorProfileProperties {",
          "3268:  s.Redshift = v",
          "3269:  return s",
          "3270: }",
          "3273: func (s *ConnectorProfileProperties) SetSalesforce(v *SalesforceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3274:  s.Salesforce = v",
          "3275:  return s",
          "3276: }",
          "3279: func (s *ConnectorProfileProperties) SetServiceNow(v *ServiceNowConnectorProfileProperties) *ConnectorProfileProperties {",
          "3280:  s.ServiceNow = v",
          "3281:  return s",
          "3282: }",
          "3285: func (s *ConnectorProfileProperties) SetSingular(v *SingularConnectorProfileProperties) *ConnectorProfileProperties {",
          "3286:  s.Singular = v",
          "3287:  return s",
          "3288: }",
          "3291: func (s *ConnectorProfileProperties) SetSlack(v *SlackConnectorProfileProperties) *ConnectorProfileProperties {",
          "3292:  s.Slack = v",
          "3293:  return s",
          "3294: }",
          "3297: func (s *ConnectorProfileProperties) SetSnowflake(v *SnowflakeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3298:  s.Snowflake = v",
          "3299:  return s",
          "3300: }",
          "3303: func (s *ConnectorProfileProperties) SetTrendmicro(v *TrendmicroConnectorProfileProperties) *ConnectorProfileProperties {",
          "3304:  s.Trendmicro = v",
          "3305:  return s",
          "3306: }",
          "3309: func (s *ConnectorProfileProperties) SetVeeva(v *VeevaConnectorProfileProperties) *ConnectorProfileProperties {",
          "3310:  s.Veeva = v",
          "3311:  return s",
          "3312: }",
          "3315: func (s *ConnectorProfileProperties) SetZendesk(v *ZendeskConnectorProfileProperties) *ConnectorProfileProperties {",
          "3316:  s.Zendesk = v",
          "3317:  return s",
          "3318: }",
          "3321: type ConnectorServerException struct {",
          "3322:  _            struct{}                  `type:\"structure\"`",
          "3323:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3325:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3326: }",
          "3329: func (s ConnectorServerException) String() string {",
          "3330:  return awsutil.Prettify(s)",
          "3331: }",
          "3334: func (s ConnectorServerException) GoString() string {",
          "3335:  return s.String()",
          "3336: }",
          "3338: func newErrorConnectorServerException(v protocol.ResponseMetadata) error {",
          "3339:  return &ConnectorServerException{",
          "3340:   RespMetadata: v,",
          "3341:  }",
          "3342: }",
          "3345: func (s *ConnectorServerException) Code() string {",
          "3346:  return \"ConnectorServerException\"",
          "3347: }",
          "3350: func (s *ConnectorServerException) Message() string {",
          "3351:  if s.Message_ != nil {",
          "3352:   return *s.Message_",
          "3353:  }",
          "3354:  return \"\"",
          "3355: }",
          "3358: func (s *ConnectorServerException) OrigErr() error {",
          "3359:  return nil",
          "3360: }",
          "3362: func (s *ConnectorServerException) Error() string {",
          "3363:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3364: }",
          "3367: func (s *ConnectorServerException) StatusCode() int {",
          "3368:  return s.RespMetadata.StatusCode",
          "3369: }",
          "3372: func (s *ConnectorServerException) RequestID() string {",
          "3373:  return s.RespMetadata.RequestID",
          "3374: }",
          "3376: type CreateConnectorProfileInput struct {",
          "3377:  _ struct{} `type:\"structure\"`",
          "3384:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "3389:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "3395:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3400:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "3406:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3407: }",
          "3410: func (s CreateConnectorProfileInput) String() string {",
          "3411:  return awsutil.Prettify(s)",
          "3412: }",
          "3415: func (s CreateConnectorProfileInput) GoString() string {",
          "3416:  return s.String()",
          "3417: }",
          "3420: func (s *CreateConnectorProfileInput) Validate() error {",
          "3421:  invalidParams := request.ErrInvalidParams{Context: \"CreateConnectorProfileInput\"}",
          "3422:  if s.ConnectionMode == nil {",
          "3423:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "3424:  }",
          "3425:  if s.ConnectorProfileConfig == nil {",
          "3426:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "3427:  }",
          "3428:  if s.ConnectorProfileName == nil {",
          "3429:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3430:  }",
          "3431:  if s.ConnectorType == nil {",
          "3432:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "3433:  }",
          "3434:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3435:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3436:  }",
          "3437:  if s.ConnectorProfileConfig != nil {",
          "3438:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "3439:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "3440:   }",
          "3441:  }",
          "3443:  if invalidParams.Len() > 0 {",
          "3444:   return invalidParams",
          "3445:  }",
          "3446:  return nil",
          "3447: }",
          "3450: func (s *CreateConnectorProfileInput) SetConnectionMode(v string) *CreateConnectorProfileInput {",
          "3451:  s.ConnectionMode = &v",
          "3452:  return s",
          "3453: }",
          "3456: func (s *CreateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *CreateConnectorProfileInput {",
          "3457:  s.ConnectorProfileConfig = v",
          "3458:  return s",
          "3459: }",
          "3462: func (s *CreateConnectorProfileInput) SetConnectorProfileName(v string) *CreateConnectorProfileInput {",
          "3463:  s.ConnectorProfileName = &v",
          "3464:  return s",
          "3465: }",
          "3468: func (s *CreateConnectorProfileInput) SetConnectorType(v string) *CreateConnectorProfileInput {",
          "3469:  s.ConnectorType = &v",
          "3470:  return s",
          "3471: }",
          "3474: func (s *CreateConnectorProfileInput) SetKmsArn(v string) *CreateConnectorProfileInput {",
          "3475:  s.KmsArn = &v",
          "3476:  return s",
          "3477: }",
          "3479: type CreateConnectorProfileOutput struct {",
          "3480:  _ struct{} `type:\"structure\"`",
          "3483:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "3484: }",
          "3487: func (s CreateConnectorProfileOutput) String() string {",
          "3488:  return awsutil.Prettify(s)",
          "3489: }",
          "3492: func (s CreateConnectorProfileOutput) GoString() string {",
          "3493:  return s.String()",
          "3494: }",
          "3497: func (s *CreateConnectorProfileOutput) SetConnectorProfileArn(v string) *CreateConnectorProfileOutput {",
          "3498:  s.ConnectorProfileArn = &v",
          "3499:  return s",
          "3500: }",
          "3502: type CreateFlowInput struct {",
          "3503:  _ struct{} `type:\"structure\"`",
          "3506:  Description *string `locationName:\"description\" type:\"string\"`",
          "3512:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "3518:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3524:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3530:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\" required:\"true\"`",
          "3533:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3539:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "3544:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "3545: }",
          "3548: func (s CreateFlowInput) String() string {",
          "3549:  return awsutil.Prettify(s)",
          "3550: }",
          "3553: func (s CreateFlowInput) GoString() string {",
          "3554:  return s.String()",
          "3555: }",
          "3558: func (s *CreateFlowInput) Validate() error {",
          "3559:  invalidParams := request.ErrInvalidParams{Context: \"CreateFlowInput\"}",
          "3560:  if s.DestinationFlowConfigList == nil {",
          "3561:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "3562:  }",
          "3563:  if s.FlowName == nil {",
          "3564:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3565:  }",
          "3566:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3567:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3568:  }",
          "3569:  if s.SourceFlowConfig == nil {",
          "3570:   invalidParams.Add(request.NewErrParamRequired(\"SourceFlowConfig\"))",
          "3571:  }",
          "3572:  if s.Tasks == nil {",
          "3573:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "3574:  }",
          "3575:  if s.TriggerConfig == nil {",
          "3576:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "3577:  }",
          "3578:  if s.DestinationFlowConfigList != nil {",
          "3579:   for i, v := range s.DestinationFlowConfigList {",
          "3580:    if v == nil {",
          "3581:     continue",
          "3582:    }",
          "3583:    if err := v.Validate(); err != nil {",
          "3584:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "3585:    }",
          "3586:   }",
          "3587:  }",
          "3588:  if s.SourceFlowConfig != nil {",
          "3589:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "3590:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "3591:   }",
          "3592:  }",
          "3593:  if s.Tasks != nil {",
          "3594:   for i, v := range s.Tasks {",
          "3595:    if v == nil {",
          "3596:     continue",
          "3597:    }",
          "3598:    if err := v.Validate(); err != nil {",
          "3599:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "3600:    }",
          "3601:   }",
          "3602:  }",
          "3603:  if s.TriggerConfig != nil {",
          "3604:   if err := s.TriggerConfig.Validate(); err != nil {",
          "3605:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "3606:   }",
          "3607:  }",
          "3609:  if invalidParams.Len() > 0 {",
          "3610:   return invalidParams",
          "3611:  }",
          "3612:  return nil",
          "3613: }",
          "3616: func (s *CreateFlowInput) SetDescription(v string) *CreateFlowInput {",
          "3617:  s.Description = &v",
          "3618:  return s",
          "3619: }",
          "3622: func (s *CreateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *CreateFlowInput {",
          "3623:  s.DestinationFlowConfigList = v",
          "3624:  return s",
          "3625: }",
          "3628: func (s *CreateFlowInput) SetFlowName(v string) *CreateFlowInput {",
          "3629:  s.FlowName = &v",
          "3630:  return s",
          "3631: }",
          "3634: func (s *CreateFlowInput) SetKmsArn(v string) *CreateFlowInput {",
          "3635:  s.KmsArn = &v",
          "3636:  return s",
          "3637: }",
          "3640: func (s *CreateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *CreateFlowInput {",
          "3641:  s.SourceFlowConfig = v",
          "3642:  return s",
          "3643: }",
          "3646: func (s *CreateFlowInput) SetTags(v map[string]*string) *CreateFlowInput {",
          "3647:  s.Tags = v",
          "3648:  return s",
          "3649: }",
          "3652: func (s *CreateFlowInput) SetTasks(v []*Task) *CreateFlowInput {",
          "3653:  s.Tasks = v",
          "3654:  return s",
          "3655: }",
          "3658: func (s *CreateFlowInput) SetTriggerConfig(v *TriggerConfig) *CreateFlowInput {",
          "3659:  s.TriggerConfig = v",
          "3660:  return s",
          "3661: }",
          "3663: type CreateFlowOutput struct {",
          "3664:  _ struct{} `type:\"structure\"`",
          "3667:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "3670:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "3671: }",
          "3674: func (s CreateFlowOutput) String() string {",
          "3675:  return awsutil.Prettify(s)",
          "3676: }",
          "3679: func (s CreateFlowOutput) GoString() string {",
          "3680:  return s.String()",
          "3681: }",
          "3684: func (s *CreateFlowOutput) SetFlowArn(v string) *CreateFlowOutput {",
          "3685:  s.FlowArn = &v",
          "3686:  return s",
          "3687: }",
          "3690: func (s *CreateFlowOutput) SetFlowStatus(v string) *CreateFlowOutput {",
          "3691:  s.FlowStatus = &v",
          "3692:  return s",
          "3693: }",
          "3696: type DatadogConnectorProfileCredentials struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3703:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "3711:  ApplicationKey *string `locationName:\"applicationKey\" type:\"string\" required:\"true\"`",
          "3712: }",
          "3715: func (s DatadogConnectorProfileCredentials) String() string {",
          "3716:  return awsutil.Prettify(s)",
          "3717: }",
          "3720: func (s DatadogConnectorProfileCredentials) GoString() string {",
          "3721:  return s.String()",
          "3722: }",
          "3725: func (s *DatadogConnectorProfileCredentials) Validate() error {",
          "3726:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileCredentials\"}",
          "3727:  if s.ApiKey == nil {",
          "3728:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "3729:  }",
          "3730:  if s.ApplicationKey == nil {",
          "3731:   invalidParams.Add(request.NewErrParamRequired(\"ApplicationKey\"))",
          "3732:  }",
          "3734:  if invalidParams.Len() > 0 {",
          "3735:   return invalidParams",
          "3736:  }",
          "3737:  return nil",
          "3738: }",
          "3741: func (s *DatadogConnectorProfileCredentials) SetApiKey(v string) *DatadogConnectorProfileCredentials {",
          "3742:  s.ApiKey = &v",
          "3743:  return s",
          "3744: }",
          "3747: func (s *DatadogConnectorProfileCredentials) SetApplicationKey(v string) *DatadogConnectorProfileCredentials {",
          "3748:  s.ApplicationKey = &v",
          "3749:  return s",
          "3750: }",
          "3753: type DatadogConnectorProfileProperties struct {",
          "3754:  _ struct{} `type:\"structure\"`",
          "3759:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "3760: }",
          "3763: func (s DatadogConnectorProfileProperties) String() string {",
          "3764:  return awsutil.Prettify(s)",
          "3765: }",
          "3768: func (s DatadogConnectorProfileProperties) GoString() string {",
          "3769:  return s.String()",
          "3770: }",
          "3773: func (s *DatadogConnectorProfileProperties) Validate() error {",
          "3774:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileProperties\"}",
          "3775:  if s.InstanceUrl == nil {",
          "3776:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "3777:  }",
          "3779:  if invalidParams.Len() > 0 {",
          "3780:   return invalidParams",
          "3781:  }",
          "3782:  return nil",
          "3783: }",
          "3786: func (s *DatadogConnectorProfileProperties) SetInstanceUrl(v string) *DatadogConnectorProfileProperties {",
          "3787:  s.InstanceUrl = &v",
          "3788:  return s",
          "3789: }",
          "3792: type DatadogMetadata struct {",
          "3793:  _ struct{} `type:\"structure\"`",
          "3794: }",
          "3797: func (s DatadogMetadata) String() string {",
          "3798:  return awsutil.Prettify(s)",
          "3799: }",
          "3802: func (s DatadogMetadata) GoString() string {",
          "3803:  return s.String()",
          "3804: }",
          "3807: type DatadogSourceProperties struct {",
          "3808:  _ struct{} `type:\"structure\"`",
          "3813:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "3814: }",
          "3817: func (s DatadogSourceProperties) String() string {",
          "3818:  return awsutil.Prettify(s)",
          "3819: }",
          "3822: func (s DatadogSourceProperties) GoString() string {",
          "3823:  return s.String()",
          "3824: }",
          "3827: func (s *DatadogSourceProperties) Validate() error {",
          "3828:  invalidParams := request.ErrInvalidParams{Context: \"DatadogSourceProperties\"}",
          "3829:  if s.Object == nil {",
          "3830:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "3831:  }",
          "3833:  if invalidParams.Len() > 0 {",
          "3834:   return invalidParams",
          "3835:  }",
          "3836:  return nil",
          "3837: }",
          "3840: func (s *DatadogSourceProperties) SetObject(v string) *DatadogSourceProperties {",
          "3841:  s.Object = &v",
          "3842:  return s",
          "3843: }",
          "3845: type DeleteConnectorProfileInput struct {",
          "3846:  _ struct{} `type:\"structure\"`",
          "3852:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3856:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3857: }",
          "3860: func (s DeleteConnectorProfileInput) String() string {",
          "3861:  return awsutil.Prettify(s)",
          "3862: }",
          "3865: func (s DeleteConnectorProfileInput) GoString() string {",
          "3866:  return s.String()",
          "3867: }",
          "3870: func (s *DeleteConnectorProfileInput) Validate() error {",
          "3871:  invalidParams := request.ErrInvalidParams{Context: \"DeleteConnectorProfileInput\"}",
          "3872:  if s.ConnectorProfileName == nil {",
          "3873:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3874:  }",
          "3876:  if invalidParams.Len() > 0 {",
          "3877:   return invalidParams",
          "3878:  }",
          "3879:  return nil",
          "3880: }",
          "3883: func (s *DeleteConnectorProfileInput) SetConnectorProfileName(v string) *DeleteConnectorProfileInput {",
          "3884:  s.ConnectorProfileName = &v",
          "3885:  return s",
          "3886: }",
          "3889: func (s *DeleteConnectorProfileInput) SetForceDelete(v bool) *DeleteConnectorProfileInput {",
          "3890:  s.ForceDelete = &v",
          "3891:  return s",
          "3892: }",
          "3894: type DeleteConnectorProfileOutput struct {",
          "3895:  _ struct{} `type:\"structure\"`",
          "3896: }",
          "3899: func (s DeleteConnectorProfileOutput) String() string {",
          "3900:  return awsutil.Prettify(s)",
          "3901: }",
          "3904: func (s DeleteConnectorProfileOutput) GoString() string {",
          "3905:  return s.String()",
          "3906: }",
          "3908: type DeleteFlowInput struct {",
          "3909:  _ struct{} `type:\"structure\"`",
          "3915:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3919:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3920: }",
          "3923: func (s DeleteFlowInput) String() string {",
          "3924:  return awsutil.Prettify(s)",
          "3925: }",
          "3928: func (s DeleteFlowInput) GoString() string {",
          "3929:  return s.String()",
          "3930: }",
          "3933: func (s *DeleteFlowInput) Validate() error {",
          "3934:  invalidParams := request.ErrInvalidParams{Context: \"DeleteFlowInput\"}",
          "3935:  if s.FlowName == nil {",
          "3936:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3937:  }",
          "3939:  if invalidParams.Len() > 0 {",
          "3940:   return invalidParams",
          "3941:  }",
          "3942:  return nil",
          "3943: }",
          "3946: func (s *DeleteFlowInput) SetFlowName(v string) *DeleteFlowInput {",
          "3947:  s.FlowName = &v",
          "3948:  return s",
          "3949: }",
          "3952: func (s *DeleteFlowInput) SetForceDelete(v bool) *DeleteFlowInput {",
          "3953:  s.ForceDelete = &v",
          "3954:  return s",
          "3955: }",
          "3957: type DeleteFlowOutput struct {",
          "3958:  _ struct{} `type:\"structure\"`",
          "3959: }",
          "3962: func (s DeleteFlowOutput) String() string {",
          "3963:  return awsutil.Prettify(s)",
          "3964: }",
          "3967: func (s DeleteFlowOutput) GoString() string {",
          "3968:  return s.String()",
          "3969: }",
          "3971: type DescribeConnectorEntityInput struct {",
          "3972:  _ struct{} `type:\"structure\"`",
          "3977:  ConnectorEntityName *string `locationName:\"connectorEntityName\" type:\"string\" required:\"true\"`",
          "3981:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "3985:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "3986: }",
          "3989: func (s DescribeConnectorEntityInput) String() string {",
          "3990:  return awsutil.Prettify(s)",
          "3991: }",
          "3994: func (s DescribeConnectorEntityInput) GoString() string {",
          "3995:  return s.String()",
          "3996: }",
          "3999: func (s *DescribeConnectorEntityInput) Validate() error {",
          "4000:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorEntityInput\"}",
          "4001:  if s.ConnectorEntityName == nil {",
          "4002:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorEntityName\"))",
          "4003:  }",
          "4005:  if invalidParams.Len() > 0 {",
          "4006:   return invalidParams",
          "4007:  }",
          "4008:  return nil",
          "4009: }",
          "4012: func (s *DescribeConnectorEntityInput) SetConnectorEntityName(v string) *DescribeConnectorEntityInput {",
          "4013:  s.ConnectorEntityName = &v",
          "4014:  return s",
          "4015: }",
          "4018: func (s *DescribeConnectorEntityInput) SetConnectorProfileName(v string) *DescribeConnectorEntityInput {",
          "4019:  s.ConnectorProfileName = &v",
          "4020:  return s",
          "4021: }",
          "4024: func (s *DescribeConnectorEntityInput) SetConnectorType(v string) *DescribeConnectorEntityInput {",
          "4025:  s.ConnectorType = &v",
          "4026:  return s",
          "4027: }",
          "4029: type DescribeConnectorEntityOutput struct {",
          "4030:  _ struct{} `type:\"structure\"`",
          "4036:  ConnectorEntityFields []*ConnectorEntityField `locationName:\"connectorEntityFields\" type:\"list\" required:\"true\"`",
          "4037: }",
          "4040: func (s DescribeConnectorEntityOutput) String() string {",
          "4041:  return awsutil.Prettify(s)",
          "4042: }",
          "4045: func (s DescribeConnectorEntityOutput) GoString() string {",
          "4046:  return s.String()",
          "4047: }",
          "4050: func (s *DescribeConnectorEntityOutput) SetConnectorEntityFields(v []*ConnectorEntityField) *DescribeConnectorEntityOutput {",
          "4051:  s.ConnectorEntityFields = v",
          "4052:  return s",
          "4053: }",
          "4055: type DescribeConnectorProfilesInput struct {",
          "4056:  _ struct{} `type:\"structure\"`",
          "4060:  ConnectorProfileNames []*string `locationName:\"connectorProfileNames\" type:\"list\"`",
          "4063:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "4067:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4070:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4071: }",
          "4074: func (s DescribeConnectorProfilesInput) String() string {",
          "4075:  return awsutil.Prettify(s)",
          "4076: }",
          "4079: func (s DescribeConnectorProfilesInput) GoString() string {",
          "4080:  return s.String()",
          "4081: }",
          "4084: func (s *DescribeConnectorProfilesInput) Validate() error {",
          "4085:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorProfilesInput\"}",
          "4086:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4087:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4088:  }",
          "4090:  if invalidParams.Len() > 0 {",
          "4091:   return invalidParams",
          "4092:  }",
          "4093:  return nil",
          "4094: }",
          "4097: func (s *DescribeConnectorProfilesInput) SetConnectorProfileNames(v []*string) *DescribeConnectorProfilesInput {",
          "4098:  s.ConnectorProfileNames = v",
          "4099:  return s",
          "4100: }",
          "4103: func (s *DescribeConnectorProfilesInput) SetConnectorType(v string) *DescribeConnectorProfilesInput {",
          "4104:  s.ConnectorType = &v",
          "4105:  return s",
          "4106: }",
          "4109: func (s *DescribeConnectorProfilesInput) SetMaxResults(v int64) *DescribeConnectorProfilesInput {",
          "4110:  s.MaxResults = &v",
          "4111:  return s",
          "4112: }",
          "4115: func (s *DescribeConnectorProfilesInput) SetNextToken(v string) *DescribeConnectorProfilesInput {",
          "4116:  s.NextToken = &v",
          "4117:  return s",
          "4118: }",
          "4120: type DescribeConnectorProfilesOutput struct {",
          "4121:  _ struct{} `type:\"structure\"`",
          "4124:  ConnectorProfileDetails []*ConnectorProfile `locationName:\"connectorProfileDetails\" type:\"list\"`",
          "4128:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4129: }",
          "4132: func (s DescribeConnectorProfilesOutput) String() string {",
          "4133:  return awsutil.Prettify(s)",
          "4134: }",
          "4137: func (s DescribeConnectorProfilesOutput) GoString() string {",
          "4138:  return s.String()",
          "4139: }",
          "4142: func (s *DescribeConnectorProfilesOutput) SetConnectorProfileDetails(v []*ConnectorProfile) *DescribeConnectorProfilesOutput {",
          "4143:  s.ConnectorProfileDetails = v",
          "4144:  return s",
          "4145: }",
          "4148: func (s *DescribeConnectorProfilesOutput) SetNextToken(v string) *DescribeConnectorProfilesOutput {",
          "4149:  s.NextToken = &v",
          "4150:  return s",
          "4151: }",
          "4153: type DescribeConnectorsInput struct {",
          "4154:  _ struct{} `type:\"structure\"`",
          "4157:  ConnectorTypes []*string `locationName:\"connectorTypes\" type:\"list\"`",
          "4160:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4161: }",
          "4164: func (s DescribeConnectorsInput) String() string {",
          "4165:  return awsutil.Prettify(s)",
          "4166: }",
          "4169: func (s DescribeConnectorsInput) GoString() string {",
          "4170:  return s.String()",
          "4171: }",
          "4174: func (s *DescribeConnectorsInput) SetConnectorTypes(v []*string) *DescribeConnectorsInput {",
          "4175:  s.ConnectorTypes = v",
          "4176:  return s",
          "4177: }",
          "4180: func (s *DescribeConnectorsInput) SetNextToken(v string) *DescribeConnectorsInput {",
          "4181:  s.NextToken = &v",
          "4182:  return s",
          "4183: }",
          "4185: type DescribeConnectorsOutput struct {",
          "4186:  _ struct{} `type:\"structure\"`",
          "4189:  ConnectorConfigurations map[string]*ConnectorConfiguration `locationName:\"connectorConfigurations\" type:\"map\"`",
          "4192:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4193: }",
          "4196: func (s DescribeConnectorsOutput) String() string {",
          "4197:  return awsutil.Prettify(s)",
          "4198: }",
          "4201: func (s DescribeConnectorsOutput) GoString() string {",
          "4202:  return s.String()",
          "4203: }",
          "4206: func (s *DescribeConnectorsOutput) SetConnectorConfigurations(v map[string]*ConnectorConfiguration) *DescribeConnectorsOutput {",
          "4207:  s.ConnectorConfigurations = v",
          "4208:  return s",
          "4209: }",
          "4212: func (s *DescribeConnectorsOutput) SetNextToken(v string) *DescribeConnectorsOutput {",
          "4213:  s.NextToken = &v",
          "4214:  return s",
          "4215: }",
          "4217: type DescribeFlowExecutionRecordsInput struct {",
          "4218:  _ struct{} `type:\"structure\"`",
          "4224:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4228:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4231:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4232: }",
          "4235: func (s DescribeFlowExecutionRecordsInput) String() string {",
          "4236:  return awsutil.Prettify(s)",
          "4237: }",
          "4240: func (s DescribeFlowExecutionRecordsInput) GoString() string {",
          "4241:  return s.String()",
          "4242: }",
          "4245: func (s *DescribeFlowExecutionRecordsInput) Validate() error {",
          "4246:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowExecutionRecordsInput\"}",
          "4247:  if s.FlowName == nil {",
          "4248:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4249:  }",
          "4250:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4251:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4252:  }",
          "4254:  if invalidParams.Len() > 0 {",
          "4255:   return invalidParams",
          "4256:  }",
          "4257:  return nil",
          "4258: }",
          "4261: func (s *DescribeFlowExecutionRecordsInput) SetFlowName(v string) *DescribeFlowExecutionRecordsInput {",
          "4262:  s.FlowName = &v",
          "4263:  return s",
          "4264: }",
          "4267: func (s *DescribeFlowExecutionRecordsInput) SetMaxResults(v int64) *DescribeFlowExecutionRecordsInput {",
          "4268:  s.MaxResults = &v",
          "4269:  return s",
          "4270: }",
          "4273: func (s *DescribeFlowExecutionRecordsInput) SetNextToken(v string) *DescribeFlowExecutionRecordsInput {",
          "4274:  s.NextToken = &v",
          "4275:  return s",
          "4276: }",
          "4278: type DescribeFlowExecutionRecordsOutput struct {",
          "4279:  _ struct{} `type:\"structure\"`",
          "4282:  FlowExecutions []*ExecutionRecord `locationName:\"flowExecutions\" type:\"list\"`",
          "4285:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4286: }",
          "4289: func (s DescribeFlowExecutionRecordsOutput) String() string {",
          "4290:  return awsutil.Prettify(s)",
          "4291: }",
          "4294: func (s DescribeFlowExecutionRecordsOutput) GoString() string {",
          "4295:  return s.String()",
          "4296: }",
          "4299: func (s *DescribeFlowExecutionRecordsOutput) SetFlowExecutions(v []*ExecutionRecord) *DescribeFlowExecutionRecordsOutput {",
          "4300:  s.FlowExecutions = v",
          "4301:  return s",
          "4302: }",
          "4305: func (s *DescribeFlowExecutionRecordsOutput) SetNextToken(v string) *DescribeFlowExecutionRecordsOutput {",
          "4306:  s.NextToken = &v",
          "4307:  return s",
          "4308: }",
          "4310: type DescribeFlowInput struct {",
          "4311:  _ struct{} `type:\"structure\"`",
          "4317:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4318: }",
          "4321: func (s DescribeFlowInput) String() string {",
          "4322:  return awsutil.Prettify(s)",
          "4323: }",
          "4326: func (s DescribeFlowInput) GoString() string {",
          "4327:  return s.String()",
          "4328: }",
          "4331: func (s *DescribeFlowInput) Validate() error {",
          "4332:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowInput\"}",
          "4333:  if s.FlowName == nil {",
          "4334:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4335:  }",
          "4337:  if invalidParams.Len() > 0 {",
          "4338:   return invalidParams",
          "4339:  }",
          "4340:  return nil",
          "4341: }",
          "4344: func (s *DescribeFlowInput) SetFlowName(v string) *DescribeFlowInput {",
          "4345:  s.FlowName = &v",
          "4346:  return s",
          "4347: }",
          "4349: type DescribeFlowOutput struct {",
          "4350:  _ struct{} `type:\"structure\"`",
          "4353:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "4356:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "4359:  Description *string `locationName:\"description\" type:\"string\"`",
          "4363:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\"`",
          "4366:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "4370:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "4373:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "4377:  FlowStatusMessage *string `locationName:\"flowStatusMessage\" type:\"string\"`",
          "4383:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "4386:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "4389:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "4392:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "4396:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "4399:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "4403:  Tasks []*Task `locationName:\"tasks\" type:\"list\"`",
          "4406:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\"`",
          "4407: }",
          "4410: func (s DescribeFlowOutput) String() string {",
          "4411:  return awsutil.Prettify(s)",
          "4412: }",
          "4415: func (s DescribeFlowOutput) GoString() string {",
          "4416:  return s.String()",
          "4417: }",
          "4420: func (s *DescribeFlowOutput) SetCreatedAt(v time.Time) *DescribeFlowOutput {",
          "4421:  s.CreatedAt = &v",
          "4422:  return s",
          "4423: }",
          "4426: func (s *DescribeFlowOutput) SetCreatedBy(v string) *DescribeFlowOutput {",
          "4427:  s.CreatedBy = &v",
          "4428:  return s",
          "4429: }",
          "4432: func (s *DescribeFlowOutput) SetDescription(v string) *DescribeFlowOutput {",
          "4433:  s.Description = &v",
          "4434:  return s",
          "4435: }",
          "4438: func (s *DescribeFlowOutput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *DescribeFlowOutput {",
          "4439:  s.DestinationFlowConfigList = v",
          "4440:  return s",
          "4441: }",
          "4444: func (s *DescribeFlowOutput) SetFlowArn(v string) *DescribeFlowOutput {",
          "4445:  s.FlowArn = &v",
          "4446:  return s",
          "4447: }",
          "4450: func (s *DescribeFlowOutput) SetFlowName(v string) *DescribeFlowOutput {",
          "4451:  s.FlowName = &v",
          "4452:  return s",
          "4453: }",
          "4456: func (s *DescribeFlowOutput) SetFlowStatus(v string) *DescribeFlowOutput {",
          "4457:  s.FlowStatus = &v",
          "4458:  return s",
          "4459: }",
          "4462: func (s *DescribeFlowOutput) SetFlowStatusMessage(v string) *DescribeFlowOutput {",
          "4463:  s.FlowStatusMessage = &v",
          "4464:  return s",
          "4465: }",
          "4468: func (s *DescribeFlowOutput) SetKmsArn(v string) *DescribeFlowOutput {",
          "4469:  s.KmsArn = &v",
          "4470:  return s",
          "4471: }",
          "4474: func (s *DescribeFlowOutput) SetLastRunExecutionDetails(v *ExecutionDetails) *DescribeFlowOutput {",
          "4475:  s.LastRunExecutionDetails = v",
          "4476:  return s",
          "4477: }",
          "4480: func (s *DescribeFlowOutput) SetLastUpdatedAt(v time.Time) *DescribeFlowOutput {",
          "4481:  s.LastUpdatedAt = &v",
          "4482:  return s",
          "4483: }",
          "4486: func (s *DescribeFlowOutput) SetLastUpdatedBy(v string) *DescribeFlowOutput {",
          "4487:  s.LastUpdatedBy = &v",
          "4488:  return s",
          "4489: }",
          "4492: func (s *DescribeFlowOutput) SetSourceFlowConfig(v *SourceFlowConfig) *DescribeFlowOutput {",
          "4493:  s.SourceFlowConfig = v",
          "4494:  return s",
          "4495: }",
          "4498: func (s *DescribeFlowOutput) SetTags(v map[string]*string) *DescribeFlowOutput {",
          "4499:  s.Tags = v",
          "4500:  return s",
          "4501: }",
          "4504: func (s *DescribeFlowOutput) SetTasks(v []*Task) *DescribeFlowOutput {",
          "4505:  s.Tasks = v",
          "4506:  return s",
          "4507: }",
          "4510: func (s *DescribeFlowOutput) SetTriggerConfig(v *TriggerConfig) *DescribeFlowOutput {",
          "4511:  s.TriggerConfig = v",
          "4512:  return s",
          "4513: }",
          "4516: type DestinationConnectorProperties struct {",
          "4517:  _ struct{} `type:\"structure\"`",
          "4520:  EventBridge *EventBridgeDestinationProperties `type:\"structure\"`",
          "4523:  Redshift *RedshiftDestinationProperties `type:\"structure\"`",
          "4526:  S3 *S3DestinationProperties `type:\"structure\"`",
          "4529:  Salesforce *SalesforceDestinationProperties `type:\"structure\"`",
          "4532:  Snowflake *SnowflakeDestinationProperties `type:\"structure\"`",
          "4533: }",
          "4536: func (s DestinationConnectorProperties) String() string {",
          "4537:  return awsutil.Prettify(s)",
          "4538: }",
          "4541: func (s DestinationConnectorProperties) GoString() string {",
          "4542:  return s.String()",
          "4543: }",
          "4546: func (s *DestinationConnectorProperties) Validate() error {",
          "4547:  invalidParams := request.ErrInvalidParams{Context: \"DestinationConnectorProperties\"}",
          "4548:  if s.EventBridge != nil {",
          "4549:   if err := s.EventBridge.Validate(); err != nil {",
          "4550:    invalidParams.AddNested(\"EventBridge\", err.(request.ErrInvalidParams))",
          "4551:   }",
          "4552:  }",
          "4553:  if s.Redshift != nil {",
          "4554:   if err := s.Redshift.Validate(); err != nil {",
          "4555:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "4556:   }",
          "4557:  }",
          "4558:  if s.S3 != nil {",
          "4559:   if err := s.S3.Validate(); err != nil {",
          "4560:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "4561:   }",
          "4562:  }",
          "4563:  if s.Salesforce != nil {",
          "4564:   if err := s.Salesforce.Validate(); err != nil {",
          "4565:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "4566:   }",
          "4567:  }",
          "4568:  if s.Snowflake != nil {",
          "4569:   if err := s.Snowflake.Validate(); err != nil {",
          "4570:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "4571:   }",
          "4572:  }",
          "4574:  if invalidParams.Len() > 0 {",
          "4575:   return invalidParams",
          "4576:  }",
          "4577:  return nil",
          "4578: }",
          "4581: func (s *DestinationConnectorProperties) SetEventBridge(v *EventBridgeDestinationProperties) *DestinationConnectorProperties {",
          "4582:  s.EventBridge = v",
          "4583:  return s",
          "4584: }",
          "4587: func (s *DestinationConnectorProperties) SetRedshift(v *RedshiftDestinationProperties) *DestinationConnectorProperties {",
          "4588:  s.Redshift = v",
          "4589:  return s",
          "4590: }",
          "4593: func (s *DestinationConnectorProperties) SetS3(v *S3DestinationProperties) *DestinationConnectorProperties {",
          "4594:  s.S3 = v",
          "4595:  return s",
          "4596: }",
          "4599: func (s *DestinationConnectorProperties) SetSalesforce(v *SalesforceDestinationProperties) *DestinationConnectorProperties {",
          "4600:  s.Salesforce = v",
          "4601:  return s",
          "4602: }",
          "4605: func (s *DestinationConnectorProperties) SetSnowflake(v *SnowflakeDestinationProperties) *DestinationConnectorProperties {",
          "4606:  s.Snowflake = v",
          "4607:  return s",
          "4608: }",
          "4612: type DestinationFieldProperties struct {",
          "4613:  _ struct{} `type:\"structure\"`",
          "4616:  IsCreatable *bool `locationName:\"isCreatable\" type:\"boolean\"`",
          "4619:  IsNullable *bool `locationName:\"isNullable\" type:\"boolean\"`",
          "4623:  IsUpsertable *bool `locationName:\"isUpsertable\" type:\"boolean\"`",
          "4624: }",
          "4627: func (s DestinationFieldProperties) String() string {",
          "4628:  return awsutil.Prettify(s)",
          "4629: }",
          "4632: func (s DestinationFieldProperties) GoString() string {",
          "4633:  return s.String()",
          "4634: }",
          "4637: func (s *DestinationFieldProperties) SetIsCreatable(v bool) *DestinationFieldProperties {",
          "4638:  s.IsCreatable = &v",
          "4639:  return s",
          "4640: }",
          "4643: func (s *DestinationFieldProperties) SetIsNullable(v bool) *DestinationFieldProperties {",
          "4644:  s.IsNullable = &v",
          "4645:  return s",
          "4646: }",
          "4649: func (s *DestinationFieldProperties) SetIsUpsertable(v bool) *DestinationFieldProperties {",
          "4650:  s.IsUpsertable = &v",
          "4651:  return s",
          "4652: }",
          "4656: type DestinationFlowConfig struct {",
          "4657:  _ struct{} `type:\"structure\"`",
          "4661:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "4666:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "4671:  DestinationConnectorProperties *DestinationConnectorProperties `locationName:\"destinationConnectorProperties\" type:\"structure\" required:\"true\"`",
          "4672: }",
          "4675: func (s DestinationFlowConfig) String() string {",
          "4676:  return awsutil.Prettify(s)",
          "4677: }",
          "4680: func (s DestinationFlowConfig) GoString() string {",
          "4681:  return s.String()",
          "4682: }",
          "4685: func (s *DestinationFlowConfig) Validate() error {",
          "4686:  invalidParams := request.ErrInvalidParams{Context: \"DestinationFlowConfig\"}",
          "4687:  if s.ConnectorType == nil {",
          "4688:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "4689:  }",
          "4690:  if s.DestinationConnectorProperties == nil {",
          "4691:   invalidParams.Add(request.NewErrParamRequired(\"DestinationConnectorProperties\"))",
          "4692:  }",
          "4693:  if s.DestinationConnectorProperties != nil {",
          "4694:   if err := s.DestinationConnectorProperties.Validate(); err != nil {",
          "4695:    invalidParams.AddNested(\"DestinationConnectorProperties\", err.(request.ErrInvalidParams))",
          "4696:   }",
          "4697:  }",
          "4699:  if invalidParams.Len() > 0 {",
          "4700:   return invalidParams",
          "4701:  }",
          "4702:  return nil",
          "4703: }",
          "4706: func (s *DestinationFlowConfig) SetConnectorProfileName(v string) *DestinationFlowConfig {",
          "4707:  s.ConnectorProfileName = &v",
          "4708:  return s",
          "4709: }",
          "4712: func (s *DestinationFlowConfig) SetConnectorType(v string) *DestinationFlowConfig {",
          "4713:  s.ConnectorType = &v",
          "4714:  return s",
          "4715: }",
          "4718: func (s *DestinationFlowConfig) SetDestinationConnectorProperties(v *DestinationConnectorProperties) *DestinationFlowConfig {",
          "4719:  s.DestinationConnectorProperties = v",
          "4720:  return s",
          "4721: }",
          "4724: type DynatraceConnectorProfileCredentials struct {",
          "4725:  _ struct{} `type:\"structure\"`",
          "4730:  ApiToken *string `locationName:\"apiToken\" type:\"string\" required:\"true\"`",
          "4731: }",
          "4734: func (s DynatraceConnectorProfileCredentials) String() string {",
          "4735:  return awsutil.Prettify(s)",
          "4736: }",
          "4739: func (s DynatraceConnectorProfileCredentials) GoString() string {",
          "4740:  return s.String()",
          "4741: }",
          "4744: func (s *DynatraceConnectorProfileCredentials) Validate() error {",
          "4745:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileCredentials\"}",
          "4746:  if s.ApiToken == nil {",
          "4747:   invalidParams.Add(request.NewErrParamRequired(\"ApiToken\"))",
          "4748:  }",
          "4750:  if invalidParams.Len() > 0 {",
          "4751:   return invalidParams",
          "4752:  }",
          "4753:  return nil",
          "4754: }",
          "4757: func (s *DynatraceConnectorProfileCredentials) SetApiToken(v string) *DynatraceConnectorProfileCredentials {",
          "4758:  s.ApiToken = &v",
          "4759:  return s",
          "4760: }",
          "4763: type DynatraceConnectorProfileProperties struct {",
          "4764:  _ struct{} `type:\"structure\"`",
          "4769:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "4770: }",
          "4773: func (s DynatraceConnectorProfileProperties) String() string {",
          "4774:  return awsutil.Prettify(s)",
          "4775: }",
          "4778: func (s DynatraceConnectorProfileProperties) GoString() string {",
          "4779:  return s.String()",
          "4780: }",
          "4783: func (s *DynatraceConnectorProfileProperties) Validate() error {",
          "4784:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileProperties\"}",
          "4785:  if s.InstanceUrl == nil {",
          "4786:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "4787:  }",
          "4789:  if invalidParams.Len() > 0 {",
          "4790:   return invalidParams",
          "4791:  }",
          "4792:  return nil",
          "4793: }",
          "4796: func (s *DynatraceConnectorProfileProperties) SetInstanceUrl(v string) *DynatraceConnectorProfileProperties {",
          "4797:  s.InstanceUrl = &v",
          "4798:  return s",
          "4799: }",
          "4802: type DynatraceMetadata struct {",
          "4803:  _ struct{} `type:\"structure\"`",
          "4804: }",
          "4807: func (s DynatraceMetadata) String() string {",
          "4808:  return awsutil.Prettify(s)",
          "4809: }",
          "4812: func (s DynatraceMetadata) GoString() string {",
          "4813:  return s.String()",
          "4814: }",
          "4817: type DynatraceSourceProperties struct {",
          "4818:  _ struct{} `type:\"structure\"`",
          "4823:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4824: }",
          "4827: func (s DynatraceSourceProperties) String() string {",
          "4828:  return awsutil.Prettify(s)",
          "4829: }",
          "4832: func (s DynatraceSourceProperties) GoString() string {",
          "4833:  return s.String()",
          "4834: }",
          "4837: func (s *DynatraceSourceProperties) Validate() error {",
          "4838:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceSourceProperties\"}",
          "4839:  if s.Object == nil {",
          "4840:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4841:  }",
          "4843:  if invalidParams.Len() > 0 {",
          "4844:   return invalidParams",
          "4845:  }",
          "4846:  return nil",
          "4847: }",
          "4850: func (s *DynatraceSourceProperties) SetObject(v string) *DynatraceSourceProperties {",
          "4851:  s.Object = &v",
          "4852:  return s",
          "4853: }",
          "4860: type ErrorHandlingConfig struct {",
          "4861:  _ struct{} `type:\"structure\"`",
          "4864:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\"`",
          "4867:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "4871:  FailOnFirstDestinationError *bool `locationName:\"failOnFirstDestinationError\" type:\"boolean\"`",
          "4872: }",
          "4875: func (s ErrorHandlingConfig) String() string {",
          "4876:  return awsutil.Prettify(s)",
          "4877: }",
          "4880: func (s ErrorHandlingConfig) GoString() string {",
          "4881:  return s.String()",
          "4882: }",
          "4885: func (s *ErrorHandlingConfig) Validate() error {",
          "4886:  invalidParams := request.ErrInvalidParams{Context: \"ErrorHandlingConfig\"}",
          "4887:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "4888:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "4889:  }",
          "4891:  if invalidParams.Len() > 0 {",
          "4892:   return invalidParams",
          "4893:  }",
          "4894:  return nil",
          "4895: }",
          "4898: func (s *ErrorHandlingConfig) SetBucketName(v string) *ErrorHandlingConfig {",
          "4899:  s.BucketName = &v",
          "4900:  return s",
          "4901: }",
          "4904: func (s *ErrorHandlingConfig) SetBucketPrefix(v string) *ErrorHandlingConfig {",
          "4905:  s.BucketPrefix = &v",
          "4906:  return s",
          "4907: }",
          "4910: func (s *ErrorHandlingConfig) SetFailOnFirstDestinationError(v bool) *ErrorHandlingConfig {",
          "4911:  s.FailOnFirstDestinationError = &v",
          "4912:  return s",
          "4913: }",
          "4917: type ErrorInfo struct {",
          "4918:  _ struct{} `type:\"structure\"`",
          "4921:  ExecutionMessage *string `locationName:\"executionMessage\" type:\"string\"`",
          "4924:  PutFailuresCount *int64 `locationName:\"putFailuresCount\" type:\"long\"`",
          "4925: }",
          "4928: func (s ErrorInfo) String() string {",
          "4929:  return awsutil.Prettify(s)",
          "4930: }",
          "4933: func (s ErrorInfo) GoString() string {",
          "4934:  return s.String()",
          "4935: }",
          "4938: func (s *ErrorInfo) SetExecutionMessage(v string) *ErrorInfo {",
          "4939:  s.ExecutionMessage = &v",
          "4940:  return s",
          "4941: }",
          "4944: func (s *ErrorInfo) SetPutFailuresCount(v int64) *ErrorInfo {",
          "4945:  s.PutFailuresCount = &v",
          "4946:  return s",
          "4947: }",
          "4951: type EventBridgeDestinationProperties struct {",
          "4952:  _ struct{} `type:\"structure\"`",
          "4959:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "4964:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4965: }",
          "4968: func (s EventBridgeDestinationProperties) String() string {",
          "4969:  return awsutil.Prettify(s)",
          "4970: }",
          "4973: func (s EventBridgeDestinationProperties) GoString() string {",
          "4974:  return s.String()",
          "4975: }",
          "4978: func (s *EventBridgeDestinationProperties) Validate() error {",
          "4979:  invalidParams := request.ErrInvalidParams{Context: \"EventBridgeDestinationProperties\"}",
          "4980:  if s.Object == nil {",
          "4981:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4982:  }",
          "4983:  if s.ErrorHandlingConfig != nil {",
          "4984:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "4985:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "4986:   }",
          "4987:  }",
          "4989:  if invalidParams.Len() > 0 {",
          "4990:   return invalidParams",
          "4991:  }",
          "4992:  return nil",
          "4993: }",
          "4996: func (s *EventBridgeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *EventBridgeDestinationProperties {",
          "4997:  s.ErrorHandlingConfig = v",
          "4998:  return s",
          "4999: }",
          "5002: func (s *EventBridgeDestinationProperties) SetObject(v string) *EventBridgeDestinationProperties {",
          "5003:  s.Object = &v",
          "5004:  return s",
          "5005: }",
          "5008: type EventBridgeMetadata struct {",
          "5009:  _ struct{} `type:\"structure\"`",
          "5010: }",
          "5013: func (s EventBridgeMetadata) String() string {",
          "5014:  return awsutil.Prettify(s)",
          "5015: }",
          "5018: func (s EventBridgeMetadata) GoString() string {",
          "5019:  return s.String()",
          "5020: }",
          "5024: type ExecutionDetails struct {",
          "5025:  _ struct{} `type:\"structure\"`",
          "5028:  MostRecentExecutionMessage *string `locationName:\"mostRecentExecutionMessage\" type:\"string\"`",
          "5031:  MostRecentExecutionStatus *string `locationName:\"mostRecentExecutionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5034:  MostRecentExecutionTime *time.Time `locationName:\"mostRecentExecutionTime\" type:\"timestamp\"`",
          "5035: }",
          "5038: func (s ExecutionDetails) String() string {",
          "5039:  return awsutil.Prettify(s)",
          "5040: }",
          "5043: func (s ExecutionDetails) GoString() string {",
          "5044:  return s.String()",
          "5045: }",
          "5048: func (s *ExecutionDetails) SetMostRecentExecutionMessage(v string) *ExecutionDetails {",
          "5049:  s.MostRecentExecutionMessage = &v",
          "5050:  return s",
          "5051: }",
          "5054: func (s *ExecutionDetails) SetMostRecentExecutionStatus(v string) *ExecutionDetails {",
          "5055:  s.MostRecentExecutionStatus = &v",
          "5056:  return s",
          "5057: }",
          "5060: func (s *ExecutionDetails) SetMostRecentExecutionTime(v time.Time) *ExecutionDetails {",
          "5061:  s.MostRecentExecutionTime = &v",
          "5062:  return s",
          "5063: }",
          "5066: type ExecutionRecord struct {",
          "5067:  _ struct{} `type:\"structure\"`",
          "5070:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "5073:  ExecutionResult *ExecutionResult `locationName:\"executionResult\" type:\"structure\"`",
          "5077:  ExecutionStatus *string `locationName:\"executionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5080:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5083:  StartedAt *time.Time `locationName:\"startedAt\" type:\"timestamp\"`",
          "5084: }",
          "5087: func (s ExecutionRecord) String() string {",
          "5088:  return awsutil.Prettify(s)",
          "5089: }",
          "5092: func (s ExecutionRecord) GoString() string {",
          "5093:  return s.String()",
          "5094: }",
          "5097: func (s *ExecutionRecord) SetExecutionId(v string) *ExecutionRecord {",
          "5098:  s.ExecutionId = &v",
          "5099:  return s",
          "5100: }",
          "5103: func (s *ExecutionRecord) SetExecutionResult(v *ExecutionResult) *ExecutionRecord {",
          "5104:  s.ExecutionResult = v",
          "5105:  return s",
          "5106: }",
          "5109: func (s *ExecutionRecord) SetExecutionStatus(v string) *ExecutionRecord {",
          "5110:  s.ExecutionStatus = &v",
          "5111:  return s",
          "5112: }",
          "5115: func (s *ExecutionRecord) SetLastUpdatedAt(v time.Time) *ExecutionRecord {",
          "5116:  s.LastUpdatedAt = &v",
          "5117:  return s",
          "5118: }",
          "5121: func (s *ExecutionRecord) SetStartedAt(v time.Time) *ExecutionRecord {",
          "5122:  s.StartedAt = &v",
          "5123:  return s",
          "5124: }",
          "5127: type ExecutionResult struct {",
          "5128:  _ struct{} `type:\"structure\"`",
          "5131:  BytesProcessed *int64 `locationName:\"bytesProcessed\" type:\"long\"`",
          "5134:  BytesWritten *int64 `locationName:\"bytesWritten\" type:\"long\"`",
          "5137:  ErrorInfo *ErrorInfo `locationName:\"errorInfo\" type:\"structure\"`",
          "5140:  RecordsProcessed *int64 `locationName:\"recordsProcessed\" type:\"long\"`",
          "5141: }",
          "5144: func (s ExecutionResult) String() string {",
          "5145:  return awsutil.Prettify(s)",
          "5146: }",
          "5149: func (s ExecutionResult) GoString() string {",
          "5150:  return s.String()",
          "5151: }",
          "5154: func (s *ExecutionResult) SetBytesProcessed(v int64) *ExecutionResult {",
          "5155:  s.BytesProcessed = &v",
          "5156:  return s",
          "5157: }",
          "5160: func (s *ExecutionResult) SetBytesWritten(v int64) *ExecutionResult {",
          "5161:  s.BytesWritten = &v",
          "5162:  return s",
          "5163: }",
          "5166: func (s *ExecutionResult) SetErrorInfo(v *ErrorInfo) *ExecutionResult {",
          "5167:  s.ErrorInfo = v",
          "5168:  return s",
          "5169: }",
          "5172: func (s *ExecutionResult) SetRecordsProcessed(v int64) *ExecutionResult {",
          "5173:  s.RecordsProcessed = &v",
          "5174:  return s",
          "5175: }",
          "5179: type FieldTypeDetails struct {",
          "5180:  _ struct{} `type:\"structure\"`",
          "5185:  FieldType *string `locationName:\"fieldType\" type:\"string\" required:\"true\"`",
          "5190:  FilterOperators []*string `locationName:\"filterOperators\" type:\"list\" required:\"true\"`",
          "5194:  SupportedValues []*string `locationName:\"supportedValues\" type:\"list\"`",
          "5195: }",
          "5198: func (s FieldTypeDetails) String() string {",
          "5199:  return awsutil.Prettify(s)",
          "5200: }",
          "5203: func (s FieldTypeDetails) GoString() string {",
          "5204:  return s.String()",
          "5205: }",
          "5208: func (s *FieldTypeDetails) SetFieldType(v string) *FieldTypeDetails {",
          "5209:  s.FieldType = &v",
          "5210:  return s",
          "5211: }",
          "5214: func (s *FieldTypeDetails) SetFilterOperators(v []*string) *FieldTypeDetails {",
          "5215:  s.FilterOperators = v",
          "5216:  return s",
          "5217: }",
          "5220: func (s *FieldTypeDetails) SetSupportedValues(v []*string) *FieldTypeDetails {",
          "5221:  s.SupportedValues = v",
          "5222:  return s",
          "5223: }",
          "5227: type FlowDefinition struct {",
          "5228:  _ struct{} `type:\"structure\"`",
          "5231:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "5234:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "5237:  Description *string `locationName:\"description\" type:\"string\"`",
          "5241:  DestinationConnectorType *string `locationName:\"destinationConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5244:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "5248:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "5251:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "5254:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "5257:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5260:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "5264:  SourceConnectorType *string `locationName:\"sourceConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5267:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5270:  TriggerType *string `locationName:\"triggerType\" type:\"string\" enum:\"TriggerType\"`",
          "5271: }",
          "5274: func (s FlowDefinition) String() string {",
          "5275:  return awsutil.Prettify(s)",
          "5276: }",
          "5279: func (s FlowDefinition) GoString() string {",
          "5280:  return s.String()",
          "5281: }",
          "5284: func (s *FlowDefinition) SetCreatedAt(v time.Time) *FlowDefinition {",
          "5285:  s.CreatedAt = &v",
          "5286:  return s",
          "5287: }",
          "5290: func (s *FlowDefinition) SetCreatedBy(v string) *FlowDefinition {",
          "5291:  s.CreatedBy = &v",
          "5292:  return s",
          "5293: }",
          "5296: func (s *FlowDefinition) SetDescription(v string) *FlowDefinition {",
          "5297:  s.Description = &v",
          "5298:  return s",
          "5299: }",
          "5302: func (s *FlowDefinition) SetDestinationConnectorType(v string) *FlowDefinition {",
          "5303:  s.DestinationConnectorType = &v",
          "5304:  return s",
          "5305: }",
          "5308: func (s *FlowDefinition) SetFlowArn(v string) *FlowDefinition {",
          "5309:  s.FlowArn = &v",
          "5310:  return s",
          "5311: }",
          "5314: func (s *FlowDefinition) SetFlowName(v string) *FlowDefinition {",
          "5315:  s.FlowName = &v",
          "5316:  return s",
          "5317: }",
          "5320: func (s *FlowDefinition) SetFlowStatus(v string) *FlowDefinition {",
          "5321:  s.FlowStatus = &v",
          "5322:  return s",
          "5323: }",
          "5326: func (s *FlowDefinition) SetLastRunExecutionDetails(v *ExecutionDetails) *FlowDefinition {",
          "5327:  s.LastRunExecutionDetails = v",
          "5328:  return s",
          "5329: }",
          "5332: func (s *FlowDefinition) SetLastUpdatedAt(v time.Time) *FlowDefinition {",
          "5333:  s.LastUpdatedAt = &v",
          "5334:  return s",
          "5335: }",
          "5338: func (s *FlowDefinition) SetLastUpdatedBy(v string) *FlowDefinition {",
          "5339:  s.LastUpdatedBy = &v",
          "5340:  return s",
          "5341: }",
          "5344: func (s *FlowDefinition) SetSourceConnectorType(v string) *FlowDefinition {",
          "5345:  s.SourceConnectorType = &v",
          "5346:  return s",
          "5347: }",
          "5350: func (s *FlowDefinition) SetTags(v map[string]*string) *FlowDefinition {",
          "5351:  s.Tags = v",
          "5352:  return s",
          "5353: }",
          "5356: func (s *FlowDefinition) SetTriggerType(v string) *FlowDefinition {",
          "5357:  s.TriggerType = &v",
          "5358:  return s",
          "5359: }",
          "5362: type GoogleAnalyticsConnectorProfileCredentials struct {",
          "5363:  _ struct{} `type:\"structure\"`",
          "5366:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5371:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5377:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5381:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5385:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "5386: }",
          "5389: func (s GoogleAnalyticsConnectorProfileCredentials) String() string {",
          "5390:  return awsutil.Prettify(s)",
          "5391: }",
          "5394: func (s GoogleAnalyticsConnectorProfileCredentials) GoString() string {",
          "5395:  return s.String()",
          "5396: }",
          "5399: func (s *GoogleAnalyticsConnectorProfileCredentials) Validate() error {",
          "5400:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsConnectorProfileCredentials\"}",
          "5401:  if s.ClientId == nil {",
          "5402:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "5403:  }",
          "5404:  if s.ClientSecret == nil {",
          "5405:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "5406:  }",
          "5408:  if invalidParams.Len() > 0 {",
          "5409:   return invalidParams",
          "5410:  }",
          "5411:  return nil",
          "5412: }",
          "5415: func (s *GoogleAnalyticsConnectorProfileCredentials) SetAccessToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5416:  s.AccessToken = &v",
          "5417:  return s",
          "5418: }",
          "5421: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientId(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5422:  s.ClientId = &v",
          "5423:  return s",
          "5424: }",
          "5427: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientSecret(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5428:  s.ClientSecret = &v",
          "5429:  return s",
          "5430: }",
          "5433: func (s *GoogleAnalyticsConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *GoogleAnalyticsConnectorProfileCredentials {",
          "5434:  s.OAuthRequest = v",
          "5435:  return s",
          "5436: }",
          "5439: func (s *GoogleAnalyticsConnectorProfileCredentials) SetRefreshToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5440:  s.RefreshToken = &v",
          "5441:  return s",
          "5442: }",
          "5445: type GoogleAnalyticsConnectorProfileProperties struct {",
          "5446:  _ struct{} `type:\"structure\"`",
          "5447: }",
          "5450: func (s GoogleAnalyticsConnectorProfileProperties) String() string {",
          "5451:  return awsutil.Prettify(s)",
          "5452: }",
          "5455: func (s GoogleAnalyticsConnectorProfileProperties) GoString() string {",
          "5456:  return s.String()",
          "5457: }",
          "5460: type GoogleAnalyticsMetadata struct {",
          "5461:  _ struct{} `type:\"structure\"`",
          "5464:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "5465: }",
          "5468: func (s GoogleAnalyticsMetadata) String() string {",
          "5469:  return awsutil.Prettify(s)",
          "5470: }",
          "5473: func (s GoogleAnalyticsMetadata) GoString() string {",
          "5474:  return s.String()",
          "5475: }",
          "5478: func (s *GoogleAnalyticsMetadata) SetOAuthScopes(v []*string) *GoogleAnalyticsMetadata {",
          "5479:  s.OAuthScopes = v",
          "5480:  return s",
          "5481: }",
          "5485: type GoogleAnalyticsSourceProperties struct {",
          "5486:  _ struct{} `type:\"structure\"`",
          "5491:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5492: }",
          "5495: func (s GoogleAnalyticsSourceProperties) String() string {",
          "5496:  return awsutil.Prettify(s)",
          "5497: }",
          "5500: func (s GoogleAnalyticsSourceProperties) GoString() string {",
          "5501:  return s.String()",
          "5502: }",
          "5505: func (s *GoogleAnalyticsSourceProperties) Validate() error {",
          "5506:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsSourceProperties\"}",
          "5507:  if s.Object == nil {",
          "5508:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5509:  }",
          "5511:  if invalidParams.Len() > 0 {",
          "5512:   return invalidParams",
          "5513:  }",
          "5514:  return nil",
          "5515: }",
          "5518: func (s *GoogleAnalyticsSourceProperties) SetObject(v string) *GoogleAnalyticsSourceProperties {",
          "5519:  s.Object = &v",
          "5520:  return s",
          "5521: }",
          "5524: type InforNexusConnectorProfileCredentials struct {",
          "5525:  _ struct{} `type:\"structure\"`",
          "5530:  AccessKeyId *string `locationName:\"accessKeyId\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5535:  Datakey *string `locationName:\"datakey\" type:\"string\" required:\"true\"`",
          "5540:  SecretAccessKey *string `locationName:\"secretAccessKey\" type:\"string\" required:\"true\"`",
          "5545:  UserId *string `locationName:\"userId\" type:\"string\" required:\"true\"`",
          "5546: }",
          "5549: func (s InforNexusConnectorProfileCredentials) String() string {",
          "5550:  return awsutil.Prettify(s)",
          "5551: }",
          "5554: func (s InforNexusConnectorProfileCredentials) GoString() string {",
          "5555:  return s.String()",
          "5556: }",
          "5559: func (s *InforNexusConnectorProfileCredentials) Validate() error {",
          "5560:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileCredentials\"}",
          "5561:  if s.AccessKeyId == nil {",
          "5562:   invalidParams.Add(request.NewErrParamRequired(\"AccessKeyId\"))",
          "5563:  }",
          "5564:  if s.Datakey == nil {",
          "5565:   invalidParams.Add(request.NewErrParamRequired(\"Datakey\"))",
          "5566:  }",
          "5567:  if s.SecretAccessKey == nil {",
          "5568:   invalidParams.Add(request.NewErrParamRequired(\"SecretAccessKey\"))",
          "5569:  }",
          "5570:  if s.UserId == nil {",
          "5571:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "5572:  }",
          "5574:  if invalidParams.Len() > 0 {",
          "5575:   return invalidParams",
          "5576:  }",
          "5577:  return nil",
          "5578: }",
          "5581: func (s *InforNexusConnectorProfileCredentials) SetAccessKeyId(v string) *InforNexusConnectorProfileCredentials {",
          "5582:  s.AccessKeyId = &v",
          "5583:  return s",
          "5584: }",
          "5587: func (s *InforNexusConnectorProfileCredentials) SetDatakey(v string) *InforNexusConnectorProfileCredentials {",
          "5588:  s.Datakey = &v",
          "5589:  return s",
          "5590: }",
          "5593: func (s *InforNexusConnectorProfileCredentials) SetSecretAccessKey(v string) *InforNexusConnectorProfileCredentials {",
          "5594:  s.SecretAccessKey = &v",
          "5595:  return s",
          "5596: }",
          "5599: func (s *InforNexusConnectorProfileCredentials) SetUserId(v string) *InforNexusConnectorProfileCredentials {",
          "5600:  s.UserId = &v",
          "5601:  return s",
          "5602: }",
          "5605: type InforNexusConnectorProfileProperties struct {",
          "5606:  _ struct{} `type:\"structure\"`",
          "5611:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "5612: }",
          "5615: func (s InforNexusConnectorProfileProperties) String() string {",
          "5616:  return awsutil.Prettify(s)",
          "5617: }",
          "5620: func (s InforNexusConnectorProfileProperties) GoString() string {",
          "5621:  return s.String()",
          "5622: }",
          "5625: func (s *InforNexusConnectorProfileProperties) Validate() error {",
          "5626:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileProperties\"}",
          "5627:  if s.InstanceUrl == nil {",
          "5628:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "5629:  }",
          "5631:  if invalidParams.Len() > 0 {",
          "5632:   return invalidParams",
          "5633:  }",
          "5634:  return nil",
          "5635: }",
          "5638: func (s *InforNexusConnectorProfileProperties) SetInstanceUrl(v string) *InforNexusConnectorProfileProperties {",
          "5639:  s.InstanceUrl = &v",
          "5640:  return s",
          "5641: }",
          "5644: type InforNexusMetadata struct {",
          "5645:  _ struct{} `type:\"structure\"`",
          "5646: }",
          "5649: func (s InforNexusMetadata) String() string {",
          "5650:  return awsutil.Prettify(s)",
          "5651: }",
          "5654: func (s InforNexusMetadata) GoString() string {",
          "5655:  return s.String()",
          "5656: }",
          "5659: type InforNexusSourceProperties struct {",
          "5660:  _ struct{} `type:\"structure\"`",
          "5665:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5666: }",
          "5669: func (s InforNexusSourceProperties) String() string {",
          "5670:  return awsutil.Prettify(s)",
          "5671: }",
          "5674: func (s InforNexusSourceProperties) GoString() string {",
          "5675:  return s.String()",
          "5676: }",
          "5679: func (s *InforNexusSourceProperties) Validate() error {",
          "5680:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusSourceProperties\"}",
          "5681:  if s.Object == nil {",
          "5682:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5683:  }",
          "5685:  if invalidParams.Len() > 0 {",
          "5686:   return invalidParams",
          "5687:  }",
          "5688:  return nil",
          "5689: }",
          "5692: func (s *InforNexusSourceProperties) SetObject(v string) *InforNexusSourceProperties {",
          "5693:  s.Object = &v",
          "5694:  return s",
          "5695: }",
          "5699: type InternalServerException struct {",
          "5700:  _            struct{}                  `type:\"structure\"`",
          "5701:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5703:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5704: }",
          "5707: func (s InternalServerException) String() string {",
          "5708:  return awsutil.Prettify(s)",
          "5709: }",
          "5712: func (s InternalServerException) GoString() string {",
          "5713:  return s.String()",
          "5714: }",
          "5716: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "5717:  return &InternalServerException{",
          "5718:   RespMetadata: v,",
          "5719:  }",
          "5720: }",
          "5723: func (s *InternalServerException) Code() string {",
          "5724:  return \"InternalServerException\"",
          "5725: }",
          "5728: func (s *InternalServerException) Message() string {",
          "5729:  if s.Message_ != nil {",
          "5730:   return *s.Message_",
          "5731:  }",
          "5732:  return \"\"",
          "5733: }",
          "5736: func (s *InternalServerException) OrigErr() error {",
          "5737:  return nil",
          "5738: }",
          "5740: func (s *InternalServerException) Error() string {",
          "5741:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5742: }",
          "5745: func (s *InternalServerException) StatusCode() int {",
          "5746:  return s.RespMetadata.StatusCode",
          "5747: }",
          "5750: func (s *InternalServerException) RequestID() string {",
          "5751:  return s.RespMetadata.RequestID",
          "5752: }",
          "5754: type ListConnectorEntitiesInput struct {",
          "5755:  _ struct{} `type:\"structure\"`",
          "5759:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "5762:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5770:  EntitiesPath *string `locationName:\"entitiesPath\" type:\"string\"`",
          "5771: }",
          "5774: func (s ListConnectorEntitiesInput) String() string {",
          "5775:  return awsutil.Prettify(s)",
          "5776: }",
          "5779: func (s ListConnectorEntitiesInput) GoString() string {",
          "5780:  return s.String()",
          "5781: }",
          "5784: func (s *ListConnectorEntitiesInput) SetConnectorProfileName(v string) *ListConnectorEntitiesInput {",
          "5785:  s.ConnectorProfileName = &v",
          "5786:  return s",
          "5787: }",
          "5790: func (s *ListConnectorEntitiesInput) SetConnectorType(v string) *ListConnectorEntitiesInput {",
          "5791:  s.ConnectorType = &v",
          "5792:  return s",
          "5793: }",
          "5796: func (s *ListConnectorEntitiesInput) SetEntitiesPath(v string) *ListConnectorEntitiesInput {",
          "5797:  s.EntitiesPath = &v",
          "5798:  return s",
          "5799: }",
          "5801: type ListConnectorEntitiesOutput struct {",
          "5802:  _ struct{} `type:\"structure\"`",
          "5809:  ConnectorEntityMap map[string][]*ConnectorEntity `locationName:\"connectorEntityMap\" type:\"map\" required:\"true\"`",
          "5810: }",
          "5813: func (s ListConnectorEntitiesOutput) String() string {",
          "5814:  return awsutil.Prettify(s)",
          "5815: }",
          "5818: func (s ListConnectorEntitiesOutput) GoString() string {",
          "5819:  return s.String()",
          "5820: }",
          "5823: func (s *ListConnectorEntitiesOutput) SetConnectorEntityMap(v map[string][]*ConnectorEntity) *ListConnectorEntitiesOutput {",
          "5824:  s.ConnectorEntityMap = v",
          "5825:  return s",
          "5826: }",
          "5828: type ListFlowsInput struct {",
          "5829:  _ struct{} `type:\"structure\"`",
          "5833:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5836:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5837: }",
          "5840: func (s ListFlowsInput) String() string {",
          "5841:  return awsutil.Prettify(s)",
          "5842: }",
          "5845: func (s ListFlowsInput) GoString() string {",
          "5846:  return s.String()",
          "5847: }",
          "5850: func (s *ListFlowsInput) Validate() error {",
          "5851:  invalidParams := request.ErrInvalidParams{Context: \"ListFlowsInput\"}",
          "5852:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5853:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5854:  }",
          "5856:  if invalidParams.Len() > 0 {",
          "5857:   return invalidParams",
          "5858:  }",
          "5859:  return nil",
          "5860: }",
          "5863: func (s *ListFlowsInput) SetMaxResults(v int64) *ListFlowsInput {",
          "5864:  s.MaxResults = &v",
          "5865:  return s",
          "5866: }",
          "5869: func (s *ListFlowsInput) SetNextToken(v string) *ListFlowsInput {",
          "5870:  s.NextToken = &v",
          "5871:  return s",
          "5872: }",
          "5874: type ListFlowsOutput struct {",
          "5875:  _ struct{} `type:\"structure\"`",
          "5878:  Flows []*FlowDefinition `locationName:\"flows\" type:\"list\"`",
          "5881:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5882: }",
          "5885: func (s ListFlowsOutput) String() string {",
          "5886:  return awsutil.Prettify(s)",
          "5887: }",
          "5890: func (s ListFlowsOutput) GoString() string {",
          "5891:  return s.String()",
          "5892: }",
          "5895: func (s *ListFlowsOutput) SetFlows(v []*FlowDefinition) *ListFlowsOutput {",
          "5896:  s.Flows = v",
          "5897:  return s",
          "5898: }",
          "5901: func (s *ListFlowsOutput) SetNextToken(v string) *ListFlowsOutput {",
          "5902:  s.NextToken = &v",
          "5903:  return s",
          "5904: }",
          "5906: type ListTagsForResourceInput struct {",
          "5907:  _ struct{} `type:\"structure\"`",
          "5912:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "5913: }",
          "5916: func (s ListTagsForResourceInput) String() string {",
          "5917:  return awsutil.Prettify(s)",
          "5918: }",
          "5921: func (s ListTagsForResourceInput) GoString() string {",
          "5922:  return s.String()",
          "5923: }",
          "5926: func (s *ListTagsForResourceInput) Validate() error {",
          "5927:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "5928:  if s.ResourceArn == nil {",
          "5929:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5930:  }",
          "5931:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5932:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5933:  }",
          "5935:  if invalidParams.Len() > 0 {",
          "5936:   return invalidParams",
          "5937:  }",
          "5938:  return nil",
          "5939: }",
          "5942: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "5943:  s.ResourceArn = &v",
          "5944:  return s",
          "5945: }",
          "5947: type ListTagsForResourceOutput struct {",
          "5948:  _ struct{} `type:\"structure\"`",
          "5951:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5952: }",
          "5955: func (s ListTagsForResourceOutput) String() string {",
          "5956:  return awsutil.Prettify(s)",
          "5957: }",
          "5960: func (s ListTagsForResourceOutput) GoString() string {",
          "5961:  return s.String()",
          "5962: }",
          "5965: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "5966:  s.Tags = v",
          "5967:  return s",
          "5968: }",
          "5971: type MarketoConnectorProfileCredentials struct {",
          "5972:  _ struct{} `type:\"structure\"`",
          "5975:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5980:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5986:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5990:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5991: }",
          "5994: func (s MarketoConnectorProfileCredentials) String() string {",
          "5995:  return awsutil.Prettify(s)",
          "5996: }",
          "5999: func (s MarketoConnectorProfileCredentials) GoString() string {",
          "6000:  return s.String()",
          "6001: }",
          "6004: func (s *MarketoConnectorProfileCredentials) Validate() error {",
          "6005:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileCredentials\"}",
          "6006:  if s.ClientId == nil {",
          "6007:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "6008:  }",
          "6009:  if s.ClientSecret == nil {",
          "6010:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "6011:  }",
          "6013:  if invalidParams.Len() > 0 {",
          "6014:   return invalidParams",
          "6015:  }",
          "6016:  return nil",
          "6017: }",
          "6020: func (s *MarketoConnectorProfileCredentials) SetAccessToken(v string) *MarketoConnectorProfileCredentials {",
          "6021:  s.AccessToken = &v",
          "6022:  return s",
          "6023: }",
          "6026: func (s *MarketoConnectorProfileCredentials) SetClientId(v string) *MarketoConnectorProfileCredentials {",
          "6027:  s.ClientId = &v",
          "6028:  return s",
          "6029: }",
          "6032: func (s *MarketoConnectorProfileCredentials) SetClientSecret(v string) *MarketoConnectorProfileCredentials {",
          "6033:  s.ClientSecret = &v",
          "6034:  return s",
          "6035: }",
          "6038: func (s *MarketoConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *MarketoConnectorProfileCredentials {",
          "6039:  s.OAuthRequest = v",
          "6040:  return s",
          "6041: }",
          "6044: type MarketoConnectorProfileProperties struct {",
          "6045:  _ struct{} `type:\"structure\"`",
          "6050:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6051: }",
          "6054: func (s MarketoConnectorProfileProperties) String() string {",
          "6055:  return awsutil.Prettify(s)",
          "6056: }",
          "6059: func (s MarketoConnectorProfileProperties) GoString() string {",
          "6060:  return s.String()",
          "6061: }",
          "6064: func (s *MarketoConnectorProfileProperties) Validate() error {",
          "6065:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileProperties\"}",
          "6066:  if s.InstanceUrl == nil {",
          "6067:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "6068:  }",
          "6070:  if invalidParams.Len() > 0 {",
          "6071:   return invalidParams",
          "6072:  }",
          "6073:  return nil",
          "6074: }",
          "6077: func (s *MarketoConnectorProfileProperties) SetInstanceUrl(v string) *MarketoConnectorProfileProperties {",
          "6078:  s.InstanceUrl = &v",
          "6079:  return s",
          "6080: }",
          "6083: type MarketoMetadata struct {",
          "6084:  _ struct{} `type:\"structure\"`",
          "6085: }",
          "6088: func (s MarketoMetadata) String() string {",
          "6089:  return awsutil.Prettify(s)",
          "6090: }",
          "6093: func (s MarketoMetadata) GoString() string {",
          "6094:  return s.String()",
          "6095: }",
          "6098: type MarketoSourceProperties struct {",
          "6099:  _ struct{} `type:\"structure\"`",
          "6104:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6105: }",
          "6108: func (s MarketoSourceProperties) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s MarketoSourceProperties) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *MarketoSourceProperties) Validate() error {",
          "6119:  invalidParams := request.ErrInvalidParams{Context: \"MarketoSourceProperties\"}",
          "6120:  if s.Object == nil {",
          "6121:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6122:  }",
          "6124:  if invalidParams.Len() > 0 {",
          "6125:   return invalidParams",
          "6126:  }",
          "6127:  return nil",
          "6128: }",
          "6131: func (s *MarketoSourceProperties) SetObject(v string) *MarketoSourceProperties {",
          "6132:  s.Object = &v",
          "6133:  return s",
          "6134: }",
          "6139: type PrefixConfig struct {",
          "6140:  _ struct{} `type:\"structure\"`",
          "6144:  PrefixFormat *string `locationName:\"prefixFormat\" type:\"string\" enum:\"PrefixFormat\"`",
          "6147:  PrefixType *string `locationName:\"prefixType\" type:\"string\" enum:\"PrefixType\"`",
          "6148: }",
          "6151: func (s PrefixConfig) String() string {",
          "6152:  return awsutil.Prettify(s)",
          "6153: }",
          "6156: func (s PrefixConfig) GoString() string {",
          "6157:  return s.String()",
          "6158: }",
          "6161: func (s *PrefixConfig) SetPrefixFormat(v string) *PrefixConfig {",
          "6162:  s.PrefixFormat = &v",
          "6163:  return s",
          "6164: }",
          "6167: func (s *PrefixConfig) SetPrefixType(v string) *PrefixConfig {",
          "6168:  s.PrefixType = &v",
          "6169:  return s",
          "6170: }",
          "6173: type RedshiftConnectorProfileCredentials struct {",
          "6174:  _ struct{} `type:\"structure\"`",
          "6179:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6184:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6185: }",
          "6188: func (s RedshiftConnectorProfileCredentials) String() string {",
          "6189:  return awsutil.Prettify(s)",
          "6190: }",
          "6193: func (s RedshiftConnectorProfileCredentials) GoString() string {",
          "6194:  return s.String()",
          "6195: }",
          "6198: func (s *RedshiftConnectorProfileCredentials) Validate() error {",
          "6199:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileCredentials\"}",
          "6200:  if s.Password == nil {",
          "6201:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6202:  }",
          "6203:  if s.Username == nil {",
          "6204:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6205:  }",
          "6207:  if invalidParams.Len() > 0 {",
          "6208:   return invalidParams",
          "6209:  }",
          "6210:  return nil",
          "6211: }",
          "6214: func (s *RedshiftConnectorProfileCredentials) SetPassword(v string) *RedshiftConnectorProfileCredentials {",
          "6215:  s.Password = &v",
          "6216:  return s",
          "6217: }",
          "6220: func (s *RedshiftConnectorProfileCredentials) SetUsername(v string) *RedshiftConnectorProfileCredentials {",
          "6221:  s.Username = &v",
          "6222:  return s",
          "6223: }",
          "6226: type RedshiftConnectorProfileProperties struct {",
          "6227:  _ struct{} `type:\"structure\"`",
          "6232:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6236:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6241:  DatabaseUrl *string `locationName:\"databaseUrl\" type:\"string\" required:\"true\"`",
          "6246:  RoleArn *string `locationName:\"roleArn\" type:\"string\" required:\"true\"`",
          "6247: }",
          "6250: func (s RedshiftConnectorProfileProperties) String() string {",
          "6251:  return awsutil.Prettify(s)",
          "6252: }",
          "6255: func (s RedshiftConnectorProfileProperties) GoString() string {",
          "6256:  return s.String()",
          "6257: }",
          "6260: func (s *RedshiftConnectorProfileProperties) Validate() error {",
          "6261:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileProperties\"}",
          "6262:  if s.BucketName == nil {",
          "6263:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6264:  }",
          "6265:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6266:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6267:  }",
          "6268:  if s.DatabaseUrl == nil {",
          "6269:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseUrl\"))",
          "6270:  }",
          "6271:  if s.RoleArn == nil {",
          "6272:   invalidParams.Add(request.NewErrParamRequired(\"RoleArn\"))",
          "6273:  }",
          "6275:  if invalidParams.Len() > 0 {",
          "6276:   return invalidParams",
          "6277:  }",
          "6278:  return nil",
          "6279: }",
          "6282: func (s *RedshiftConnectorProfileProperties) SetBucketName(v string) *RedshiftConnectorProfileProperties {",
          "6283:  s.BucketName = &v",
          "6284:  return s",
          "6285: }",
          "6288: func (s *RedshiftConnectorProfileProperties) SetBucketPrefix(v string) *RedshiftConnectorProfileProperties {",
          "6289:  s.BucketPrefix = &v",
          "6290:  return s",
          "6291: }",
          "6294: func (s *RedshiftConnectorProfileProperties) SetDatabaseUrl(v string) *RedshiftConnectorProfileProperties {",
          "6295:  s.DatabaseUrl = &v",
          "6296:  return s",
          "6297: }",
          "6300: func (s *RedshiftConnectorProfileProperties) SetRoleArn(v string) *RedshiftConnectorProfileProperties {",
          "6301:  s.RoleArn = &v",
          "6302:  return s",
          "6303: }",
          "6306: type RedshiftDestinationProperties struct {",
          "6307:  _ struct{} `type:\"structure\"`",
          "6311:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6318:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6324:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6329:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6330: }",
          "6333: func (s RedshiftDestinationProperties) String() string {",
          "6334:  return awsutil.Prettify(s)",
          "6335: }",
          "6338: func (s RedshiftDestinationProperties) GoString() string {",
          "6339:  return s.String()",
          "6340: }",
          "6343: func (s *RedshiftDestinationProperties) Validate() error {",
          "6344:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftDestinationProperties\"}",
          "6345:  if s.IntermediateBucketName == nil {",
          "6346:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "6347:  }",
          "6348:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "6349:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "6350:  }",
          "6351:  if s.Object == nil {",
          "6352:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6353:  }",
          "6354:  if s.ErrorHandlingConfig != nil {",
          "6355:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6356:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6357:   }",
          "6358:  }",
          "6360:  if invalidParams.Len() > 0 {",
          "6361:   return invalidParams",
          "6362:  }",
          "6363:  return nil",
          "6364: }",
          "6367: func (s *RedshiftDestinationProperties) SetBucketPrefix(v string) *RedshiftDestinationProperties {",
          "6368:  s.BucketPrefix = &v",
          "6369:  return s",
          "6370: }",
          "6373: func (s *RedshiftDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *RedshiftDestinationProperties {",
          "6374:  s.ErrorHandlingConfig = v",
          "6375:  return s",
          "6376: }",
          "6379: func (s *RedshiftDestinationProperties) SetIntermediateBucketName(v string) *RedshiftDestinationProperties {",
          "6380:  s.IntermediateBucketName = &v",
          "6381:  return s",
          "6382: }",
          "6385: func (s *RedshiftDestinationProperties) SetObject(v string) *RedshiftDestinationProperties {",
          "6386:  s.Object = &v",
          "6387:  return s",
          "6388: }",
          "6391: type RedshiftMetadata struct {",
          "6392:  _ struct{} `type:\"structure\"`",
          "6393: }",
          "6396: func (s RedshiftMetadata) String() string {",
          "6397:  return awsutil.Prettify(s)",
          "6398: }",
          "6401: func (s RedshiftMetadata) GoString() string {",
          "6402:  return s.String()",
          "6403: }",
          "6407: type ResourceNotFoundException struct {",
          "6408:  _            struct{}                  `type:\"structure\"`",
          "6409:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6411:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6412: }",
          "6415: func (s ResourceNotFoundException) String() string {",
          "6416:  return awsutil.Prettify(s)",
          "6417: }",
          "6420: func (s ResourceNotFoundException) GoString() string {",
          "6421:  return s.String()",
          "6422: }",
          "6424: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "6425:  return &ResourceNotFoundException{",
          "6426:   RespMetadata: v,",
          "6427:  }",
          "6428: }",
          "6431: func (s *ResourceNotFoundException) Code() string {",
          "6432:  return \"ResourceNotFoundException\"",
          "6433: }",
          "6436: func (s *ResourceNotFoundException) Message() string {",
          "6437:  if s.Message_ != nil {",
          "6438:   return *s.Message_",
          "6439:  }",
          "6440:  return \"\"",
          "6441: }",
          "6444: func (s *ResourceNotFoundException) OrigErr() error {",
          "6445:  return nil",
          "6446: }",
          "6448: func (s *ResourceNotFoundException) Error() string {",
          "6449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6450: }",
          "6453: func (s *ResourceNotFoundException) StatusCode() int {",
          "6454:  return s.RespMetadata.StatusCode",
          "6455: }",
          "6458: func (s *ResourceNotFoundException) RequestID() string {",
          "6459:  return s.RespMetadata.RequestID",
          "6460: }",
          "6463: type S3DestinationProperties struct {",
          "6464:  _ struct{} `type:\"structure\"`",
          "6470:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6474:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6478:  S3OutputFormatConfig *S3OutputFormatConfig `locationName:\"s3OutputFormatConfig\" type:\"structure\"`",
          "6479: }",
          "6482: func (s S3DestinationProperties) String() string {",
          "6483:  return awsutil.Prettify(s)",
          "6484: }",
          "6487: func (s S3DestinationProperties) GoString() string {",
          "6488:  return s.String()",
          "6489: }",
          "6492: func (s *S3DestinationProperties) Validate() error {",
          "6493:  invalidParams := request.ErrInvalidParams{Context: \"S3DestinationProperties\"}",
          "6494:  if s.BucketName == nil {",
          "6495:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6496:  }",
          "6497:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6498:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6499:  }",
          "6501:  if invalidParams.Len() > 0 {",
          "6502:   return invalidParams",
          "6503:  }",
          "6504:  return nil",
          "6505: }",
          "6508: func (s *S3DestinationProperties) SetBucketName(v string) *S3DestinationProperties {",
          "6509:  s.BucketName = &v",
          "6510:  return s",
          "6511: }",
          "6514: func (s *S3DestinationProperties) SetBucketPrefix(v string) *S3DestinationProperties {",
          "6515:  s.BucketPrefix = &v",
          "6516:  return s",
          "6517: }",
          "6520: func (s *S3DestinationProperties) SetS3OutputFormatConfig(v *S3OutputFormatConfig) *S3DestinationProperties {",
          "6521:  s.S3OutputFormatConfig = v",
          "6522:  return s",
          "6523: }",
          "6526: type S3Metadata struct {",
          "6527:  _ struct{} `type:\"structure\"`",
          "6528: }",
          "6531: func (s S3Metadata) String() string {",
          "6532:  return awsutil.Prettify(s)",
          "6533: }",
          "6536: func (s S3Metadata) GoString() string {",
          "6537:  return s.String()",
          "6538: }",
          "6542: type S3OutputFormatConfig struct {",
          "6543:  _ struct{} `type:\"structure\"`",
          "6547:  AggregationConfig *AggregationConfig `locationName:\"aggregationConfig\" type:\"structure\"`",
          "6550:  FileType *string `locationName:\"fileType\" type:\"string\" enum:\"FileType\"`",
          "6555:  PrefixConfig *PrefixConfig `locationName:\"prefixConfig\" type:\"structure\"`",
          "6556: }",
          "6559: func (s S3OutputFormatConfig) String() string {",
          "6560:  return awsutil.Prettify(s)",
          "6561: }",
          "6564: func (s S3OutputFormatConfig) GoString() string {",
          "6565:  return s.String()",
          "6566: }",
          "6569: func (s *S3OutputFormatConfig) SetAggregationConfig(v *AggregationConfig) *S3OutputFormatConfig {",
          "6570:  s.AggregationConfig = v",
          "6571:  return s",
          "6572: }",
          "6575: func (s *S3OutputFormatConfig) SetFileType(v string) *S3OutputFormatConfig {",
          "6576:  s.FileType = &v",
          "6577:  return s",
          "6578: }",
          "6581: func (s *S3OutputFormatConfig) SetPrefixConfig(v *PrefixConfig) *S3OutputFormatConfig {",
          "6582:  s.PrefixConfig = v",
          "6583:  return s",
          "6584: }",
          "6588: type S3SourceProperties struct {",
          "6589:  _ struct{} `type:\"structure\"`",
          "6594:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6597:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6598: }",
          "6601: func (s S3SourceProperties) String() string {",
          "6602:  return awsutil.Prettify(s)",
          "6603: }",
          "6606: func (s S3SourceProperties) GoString() string {",
          "6607:  return s.String()",
          "6608: }",
          "6611: func (s *S3SourceProperties) Validate() error {",
          "6612:  invalidParams := request.ErrInvalidParams{Context: \"S3SourceProperties\"}",
          "6613:  if s.BucketName == nil {",
          "6614:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6615:  }",
          "6616:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6617:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6618:  }",
          "6620:  if invalidParams.Len() > 0 {",
          "6621:   return invalidParams",
          "6622:  }",
          "6623:  return nil",
          "6624: }",
          "6627: func (s *S3SourceProperties) SetBucketName(v string) *S3SourceProperties {",
          "6628:  s.BucketName = &v",
          "6629:  return s",
          "6630: }",
          "6633: func (s *S3SourceProperties) SetBucketPrefix(v string) *S3SourceProperties {",
          "6634:  s.BucketPrefix = &v",
          "6635:  return s",
          "6636: }",
          "6639: type SalesforceConnectorProfileCredentials struct {",
          "6640:  _ struct{} `type:\"structure\"`",
          "6643:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "6647:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "6650:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "6651: }",
          "6654: func (s SalesforceConnectorProfileCredentials) String() string {",
          "6655:  return awsutil.Prettify(s)",
          "6656: }",
          "6659: func (s SalesforceConnectorProfileCredentials) GoString() string {",
          "6660:  return s.String()",
          "6661: }",
          "6664: func (s *SalesforceConnectorProfileCredentials) SetAccessToken(v string) *SalesforceConnectorProfileCredentials {",
          "6665:  s.AccessToken = &v",
          "6666:  return s",
          "6667: }",
          "6670: func (s *SalesforceConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SalesforceConnectorProfileCredentials {",
          "6671:  s.OAuthRequest = v",
          "6672:  return s",
          "6673: }",
          "6676: func (s *SalesforceConnectorProfileCredentials) SetRefreshToken(v string) *SalesforceConnectorProfileCredentials {",
          "6677:  s.RefreshToken = &v",
          "6678:  return s",
          "6679: }",
          "6682: type SalesforceConnectorProfileProperties struct {",
          "6683:  _ struct{} `type:\"structure\"`",
          "6686:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\"`",
          "6690:  IsSandboxEnvironment *bool `locationName:\"isSandboxEnvironment\" type:\"boolean\"`",
          "6691: }",
          "6694: func (s SalesforceConnectorProfileProperties) String() string {",
          "6695:  return awsutil.Prettify(s)",
          "6696: }",
          "6699: func (s SalesforceConnectorProfileProperties) GoString() string {",
          "6700:  return s.String()",
          "6701: }",
          "6704: func (s *SalesforceConnectorProfileProperties) SetInstanceUrl(v string) *SalesforceConnectorProfileProperties {",
          "6705:  s.InstanceUrl = &v",
          "6706:  return s",
          "6707: }",
          "6710: func (s *SalesforceConnectorProfileProperties) SetIsSandboxEnvironment(v bool) *SalesforceConnectorProfileProperties {",
          "6711:  s.IsSandboxEnvironment = &v",
          "6712:  return s",
          "6713: }",
          "6716: type SalesforceDestinationProperties struct {",
          "6717:  _ struct{} `type:\"structure\"`",
          "6724:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6729:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6730: }",
          "6733: func (s SalesforceDestinationProperties) String() string {",
          "6734:  return awsutil.Prettify(s)",
          "6735: }",
          "6738: func (s SalesforceDestinationProperties) GoString() string {",
          "6739:  return s.String()",
          "6740: }",
          "6743: func (s *SalesforceDestinationProperties) Validate() error {",
          "6744:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceDestinationProperties\"}",
          "6745:  if s.Object == nil {",
          "6746:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6747:  }",
          "6748:  if s.ErrorHandlingConfig != nil {",
          "6749:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6750:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6751:   }",
          "6752:  }",
          "6754:  if invalidParams.Len() > 0 {",
          "6755:   return invalidParams",
          "6756:  }",
          "6757:  return nil",
          "6758: }",
          "6761: func (s *SalesforceDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SalesforceDestinationProperties {",
          "6762:  s.ErrorHandlingConfig = v",
          "6763:  return s",
          "6764: }",
          "6767: func (s *SalesforceDestinationProperties) SetObject(v string) *SalesforceDestinationProperties {",
          "6768:  s.Object = &v",
          "6769:  return s",
          "6770: }",
          "6773: type SalesforceMetadata struct {",
          "6774:  _ struct{} `type:\"structure\"`",
          "6777:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "6778: }",
          "6781: func (s SalesforceMetadata) String() string {",
          "6782:  return awsutil.Prettify(s)",
          "6783: }",
          "6786: func (s SalesforceMetadata) GoString() string {",
          "6787:  return s.String()",
          "6788: }",
          "6791: func (s *SalesforceMetadata) SetOAuthScopes(v []*string) *SalesforceMetadata {",
          "6792:  s.OAuthScopes = v",
          "6793:  return s",
          "6794: }",
          "6797: type SalesforceSourceProperties struct {",
          "6798:  _ struct{} `type:\"structure\"`",
          "6802:  EnableDynamicFieldUpdate *bool `locationName:\"enableDynamicFieldUpdate\" type:\"boolean\"`",
          "6805:  IncludeDeletedRecords *bool `locationName:\"includeDeletedRecords\" type:\"boolean\"`",
          "6810:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6811: }",
          "6814: func (s SalesforceSourceProperties) String() string {",
          "6815:  return awsutil.Prettify(s)",
          "6816: }",
          "6819: func (s SalesforceSourceProperties) GoString() string {",
          "6820:  return s.String()",
          "6821: }",
          "6824: func (s *SalesforceSourceProperties) Validate() error {",
          "6825:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceSourceProperties\"}",
          "6826:  if s.Object == nil {",
          "6827:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6828:  }",
          "6830:  if invalidParams.Len() > 0 {",
          "6831:   return invalidParams",
          "6832:  }",
          "6833:  return nil",
          "6834: }",
          "6837: func (s *SalesforceSourceProperties) SetEnableDynamicFieldUpdate(v bool) *SalesforceSourceProperties {",
          "6838:  s.EnableDynamicFieldUpdate = &v",
          "6839:  return s",
          "6840: }",
          "6843: func (s *SalesforceSourceProperties) SetIncludeDeletedRecords(v bool) *SalesforceSourceProperties {",
          "6844:  s.IncludeDeletedRecords = &v",
          "6845:  return s",
          "6846: }",
          "6849: func (s *SalesforceSourceProperties) SetObject(v string) *SalesforceSourceProperties {",
          "6850:  s.Object = &v",
          "6851:  return s",
          "6852: }",
          "6857: type ScheduledTriggerProperties struct {",
          "6858:  _ struct{} `type:\"structure\"`",
          "6862:  DataPullMode *string `locationName:\"dataPullMode\" type:\"string\" enum:\"DataPullMode\"`",
          "6865:  ScheduleEndTime *time.Time `locationName:\"scheduleEndTime\" type:\"timestamp\"`",
          "6870:  ScheduleExpression *string `locationName:\"scheduleExpression\" type:\"string\" required:\"true\"`",
          "6873:  ScheduleStartTime *time.Time `locationName:\"scheduleStartTime\" type:\"timestamp\"`",
          "6877:  Timezone *string `locationName:\"timezone\" type:\"string\"`",
          "6878: }",
          "6881: func (s ScheduledTriggerProperties) String() string {",
          "6882:  return awsutil.Prettify(s)",
          "6883: }",
          "6886: func (s ScheduledTriggerProperties) GoString() string {",
          "6887:  return s.String()",
          "6888: }",
          "6891: func (s *ScheduledTriggerProperties) Validate() error {",
          "6892:  invalidParams := request.ErrInvalidParams{Context: \"ScheduledTriggerProperties\"}",
          "6893:  if s.ScheduleExpression == nil {",
          "6894:   invalidParams.Add(request.NewErrParamRequired(\"ScheduleExpression\"))",
          "6895:  }",
          "6897:  if invalidParams.Len() > 0 {",
          "6898:   return invalidParams",
          "6899:  }",
          "6900:  return nil",
          "6901: }",
          "6904: func (s *ScheduledTriggerProperties) SetDataPullMode(v string) *ScheduledTriggerProperties {",
          "6905:  s.DataPullMode = &v",
          "6906:  return s",
          "6907: }",
          "6910: func (s *ScheduledTriggerProperties) SetScheduleEndTime(v time.Time) *ScheduledTriggerProperties {",
          "6911:  s.ScheduleEndTime = &v",
          "6912:  return s",
          "6913: }",
          "6916: func (s *ScheduledTriggerProperties) SetScheduleExpression(v string) *ScheduledTriggerProperties {",
          "6917:  s.ScheduleExpression = &v",
          "6918:  return s",
          "6919: }",
          "6922: func (s *ScheduledTriggerProperties) SetScheduleStartTime(v time.Time) *ScheduledTriggerProperties {",
          "6923:  s.ScheduleStartTime = &v",
          "6924:  return s",
          "6925: }",
          "6928: func (s *ScheduledTriggerProperties) SetTimezone(v string) *ScheduledTriggerProperties {",
          "6929:  s.Timezone = &v",
          "6930:  return s",
          "6931: }",
          "6934: type ServiceNowConnectorProfileCredentials struct {",
          "6935:  _ struct{} `type:\"structure\"`",
          "6940:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6945:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6946: }",
          "6949: func (s ServiceNowConnectorProfileCredentials) String() string {",
          "6950:  return awsutil.Prettify(s)",
          "6951: }",
          "6954: func (s ServiceNowConnectorProfileCredentials) GoString() string {",
          "6955:  return s.String()",
          "6956: }",
          "6959: func (s *ServiceNowConnectorProfileCredentials) Validate() error {",
          "6960:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileCredentials\"}",
          "6961:  if s.Password == nil {",
          "6962:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6963:  }",
          "6964:  if s.Username == nil {",
          "6965:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6966:  }",
          "6968:  if invalidParams.Len() > 0 {",
          "6969:   return invalidParams",
          "6970:  }",
          "6971:  return nil",
          "6972: }",
          "6975: func (s *ServiceNowConnectorProfileCredentials) SetPassword(v string) *ServiceNowConnectorProfileCredentials {",
          "6976:  s.Password = &v",
          "6977:  return s",
          "6978: }",
          "6981: func (s *ServiceNowConnectorProfileCredentials) SetUsername(v string) *ServiceNowConnectorProfileCredentials {",
          "6982:  s.Username = &v",
          "6983:  return s",
          "6984: }",
          "6987: type ServiceNowConnectorProfileProperties struct {",
          "6988:  _ struct{} `type:\"structure\"`",
          "6993:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6994: }",
          "6997: func (s ServiceNowConnectorProfileProperties) String() string {",
          "6998:  return awsutil.Prettify(s)",
          "6999: }",
          "7002: func (s ServiceNowConnectorProfileProperties) GoString() string {",
          "7003:  return s.String()",
          "7004: }",
          "7007: func (s *ServiceNowConnectorProfileProperties) Validate() error {",
          "7008:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileProperties\"}",
          "7009:  if s.InstanceUrl == nil {",
          "7010:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7011:  }",
          "7013:  if invalidParams.Len() > 0 {",
          "7014:   return invalidParams",
          "7015:  }",
          "7016:  return nil",
          "7017: }",
          "7020: func (s *ServiceNowConnectorProfileProperties) SetInstanceUrl(v string) *ServiceNowConnectorProfileProperties {",
          "7021:  s.InstanceUrl = &v",
          "7022:  return s",
          "7023: }",
          "7026: type ServiceNowMetadata struct {",
          "7027:  _ struct{} `type:\"structure\"`",
          "7028: }",
          "7031: func (s ServiceNowMetadata) String() string {",
          "7032:  return awsutil.Prettify(s)",
          "7033: }",
          "7036: func (s ServiceNowMetadata) GoString() string {",
          "7037:  return s.String()",
          "7038: }",
          "7041: type ServiceNowSourceProperties struct {",
          "7042:  _ struct{} `type:\"structure\"`",
          "7047:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7048: }",
          "7051: func (s ServiceNowSourceProperties) String() string {",
          "7052:  return awsutil.Prettify(s)",
          "7053: }",
          "7056: func (s ServiceNowSourceProperties) GoString() string {",
          "7057:  return s.String()",
          "7058: }",
          "7061: func (s *ServiceNowSourceProperties) Validate() error {",
          "7062:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowSourceProperties\"}",
          "7063:  if s.Object == nil {",
          "7064:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7065:  }",
          "7067:  if invalidParams.Len() > 0 {",
          "7068:   return invalidParams",
          "7069:  }",
          "7070:  return nil",
          "7071: }",
          "7074: func (s *ServiceNowSourceProperties) SetObject(v string) *ServiceNowSourceProperties {",
          "7075:  s.Object = &v",
          "7076:  return s",
          "7077: }",
          "7081: type ServiceQuotaExceededException struct {",
          "7082:  _            struct{}                  `type:\"structure\"`",
          "7083:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7085:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7086: }",
          "7089: func (s ServiceQuotaExceededException) String() string {",
          "7090:  return awsutil.Prettify(s)",
          "7091: }",
          "7094: func (s ServiceQuotaExceededException) GoString() string {",
          "7095:  return s.String()",
          "7096: }",
          "7098: func newErrorServiceQuotaExceededException(v protocol.ResponseMetadata) error {",
          "7099:  return &ServiceQuotaExceededException{",
          "7100:   RespMetadata: v,",
          "7101:  }",
          "7102: }",
          "7105: func (s *ServiceQuotaExceededException) Code() string {",
          "7106:  return \"ServiceQuotaExceededException\"",
          "7107: }",
          "7110: func (s *ServiceQuotaExceededException) Message() string {",
          "7111:  if s.Message_ != nil {",
          "7112:   return *s.Message_",
          "7113:  }",
          "7114:  return \"\"",
          "7115: }",
          "7118: func (s *ServiceQuotaExceededException) OrigErr() error {",
          "7119:  return nil",
          "7120: }",
          "7122: func (s *ServiceQuotaExceededException) Error() string {",
          "7123:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7124: }",
          "7127: func (s *ServiceQuotaExceededException) StatusCode() int {",
          "7128:  return s.RespMetadata.StatusCode",
          "7129: }",
          "7132: func (s *ServiceQuotaExceededException) RequestID() string {",
          "7133:  return s.RespMetadata.RequestID",
          "7134: }",
          "7137: type SingularConnectorProfileCredentials struct {",
          "7138:  _ struct{} `type:\"structure\"`",
          "7144:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "7145: }",
          "7148: func (s SingularConnectorProfileCredentials) String() string {",
          "7149:  return awsutil.Prettify(s)",
          "7150: }",
          "7153: func (s SingularConnectorProfileCredentials) GoString() string {",
          "7154:  return s.String()",
          "7155: }",
          "7158: func (s *SingularConnectorProfileCredentials) Validate() error {",
          "7159:  invalidParams := request.ErrInvalidParams{Context: \"SingularConnectorProfileCredentials\"}",
          "7160:  if s.ApiKey == nil {",
          "7161:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "7162:  }",
          "7164:  if invalidParams.Len() > 0 {",
          "7165:   return invalidParams",
          "7166:  }",
          "7167:  return nil",
          "7168: }",
          "7171: func (s *SingularConnectorProfileCredentials) SetApiKey(v string) *SingularConnectorProfileCredentials {",
          "7172:  s.ApiKey = &v",
          "7173:  return s",
          "7174: }",
          "7177: type SingularConnectorProfileProperties struct {",
          "7178:  _ struct{} `type:\"structure\"`",
          "7179: }",
          "7182: func (s SingularConnectorProfileProperties) String() string {",
          "7183:  return awsutil.Prettify(s)",
          "7184: }",
          "7187: func (s SingularConnectorProfileProperties) GoString() string {",
          "7188:  return s.String()",
          "7189: }",
          "7192: type SingularMetadata struct {",
          "7193:  _ struct{} `type:\"structure\"`",
          "7194: }",
          "7197: func (s SingularMetadata) String() string {",
          "7198:  return awsutil.Prettify(s)",
          "7199: }",
          "7202: func (s SingularMetadata) GoString() string {",
          "7203:  return s.String()",
          "7204: }",
          "7207: type SingularSourceProperties struct {",
          "7208:  _ struct{} `type:\"structure\"`",
          "7213:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7214: }",
          "7217: func (s SingularSourceProperties) String() string {",
          "7218:  return awsutil.Prettify(s)",
          "7219: }",
          "7222: func (s SingularSourceProperties) GoString() string {",
          "7223:  return s.String()",
          "7224: }",
          "7227: func (s *SingularSourceProperties) Validate() error {",
          "7228:  invalidParams := request.ErrInvalidParams{Context: \"SingularSourceProperties\"}",
          "7229:  if s.Object == nil {",
          "7230:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7231:  }",
          "7233:  if invalidParams.Len() > 0 {",
          "7234:   return invalidParams",
          "7235:  }",
          "7236:  return nil",
          "7237: }",
          "7240: func (s *SingularSourceProperties) SetObject(v string) *SingularSourceProperties {",
          "7241:  s.Object = &v",
          "7242:  return s",
          "7243: }",
          "7246: type SlackConnectorProfileCredentials struct {",
          "7247:  _ struct{} `type:\"structure\"`",
          "7250:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "7255:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "7261:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7265:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "7266: }",
          "7269: func (s SlackConnectorProfileCredentials) String() string {",
          "7270:  return awsutil.Prettify(s)",
          "7271: }",
          "7274: func (s SlackConnectorProfileCredentials) GoString() string {",
          "7275:  return s.String()",
          "7276: }",
          "7279: func (s *SlackConnectorProfileCredentials) Validate() error {",
          "7280:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileCredentials\"}",
          "7281:  if s.ClientId == nil {",
          "7282:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "7283:  }",
          "7284:  if s.ClientSecret == nil {",
          "7285:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "7286:  }",
          "7288:  if invalidParams.Len() > 0 {",
          "7289:   return invalidParams",
          "7290:  }",
          "7291:  return nil",
          "7292: }",
          "7295: func (s *SlackConnectorProfileCredentials) SetAccessToken(v string) *SlackConnectorProfileCredentials {",
          "7296:  s.AccessToken = &v",
          "7297:  return s",
          "7298: }",
          "7301: func (s *SlackConnectorProfileCredentials) SetClientId(v string) *SlackConnectorProfileCredentials {",
          "7302:  s.ClientId = &v",
          "7303:  return s",
          "7304: }",
          "7307: func (s *SlackConnectorProfileCredentials) SetClientSecret(v string) *SlackConnectorProfileCredentials {",
          "7308:  s.ClientSecret = &v",
          "7309:  return s",
          "7310: }",
          "7313: func (s *SlackConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SlackConnectorProfileCredentials {",
          "7314:  s.OAuthRequest = v",
          "7315:  return s",
          "7316: }",
          "7319: type SlackConnectorProfileProperties struct {",
          "7320:  _ struct{} `type:\"structure\"`",
          "7325:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "7326: }",
          "7329: func (s SlackConnectorProfileProperties) String() string {",
          "7330:  return awsutil.Prettify(s)",
          "7331: }",
          "7334: func (s SlackConnectorProfileProperties) GoString() string {",
          "7335:  return s.String()",
          "7336: }",
          "7339: func (s *SlackConnectorProfileProperties) Validate() error {",
          "7340:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileProperties\"}",
          "7341:  if s.InstanceUrl == nil {",
          "7342:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7343:  }",
          "7345:  if invalidParams.Len() > 0 {",
          "7346:   return invalidParams",
          "7347:  }",
          "7348:  return nil",
          "7349: }",
          "7352: func (s *SlackConnectorProfileProperties) SetInstanceUrl(v string) *SlackConnectorProfileProperties {",
          "7353:  s.InstanceUrl = &v",
          "7354:  return s",
          "7355: }",
          "7358: type SlackMetadata struct {",
          "7359:  _ struct{} `type:\"structure\"`",
          "7362:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "7363: }",
          "7366: func (s SlackMetadata) String() string {",
          "7367:  return awsutil.Prettify(s)",
          "7368: }",
          "7371: func (s SlackMetadata) GoString() string {",
          "7372:  return s.String()",
          "7373: }",
          "7376: func (s *SlackMetadata) SetOAuthScopes(v []*string) *SlackMetadata {",
          "7377:  s.OAuthScopes = v",
          "7378:  return s",
          "7379: }",
          "7382: type SlackSourceProperties struct {",
          "7383:  _ struct{} `type:\"structure\"`",
          "7388:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7389: }",
          "7392: func (s SlackSourceProperties) String() string {",
          "7393:  return awsutil.Prettify(s)",
          "7394: }",
          "7397: func (s SlackSourceProperties) GoString() string {",
          "7398:  return s.String()",
          "7399: }",
          "7402: func (s *SlackSourceProperties) Validate() error {",
          "7403:  invalidParams := request.ErrInvalidParams{Context: \"SlackSourceProperties\"}",
          "7404:  if s.Object == nil {",
          "7405:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7406:  }",
          "7408:  if invalidParams.Len() > 0 {",
          "7409:   return invalidParams",
          "7410:  }",
          "7411:  return nil",
          "7412: }",
          "7415: func (s *SlackSourceProperties) SetObject(v string) *SlackSourceProperties {",
          "7416:  s.Object = &v",
          "7417:  return s",
          "7418: }",
          "7421: type SnowflakeConnectorProfileCredentials struct {",
          "7422:  _ struct{} `type:\"structure\"`",
          "7427:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7432:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "7433: }",
          "7436: func (s SnowflakeConnectorProfileCredentials) String() string {",
          "7437:  return awsutil.Prettify(s)",
          "7438: }",
          "7441: func (s SnowflakeConnectorProfileCredentials) GoString() string {",
          "7442:  return s.String()",
          "7443: }",
          "7446: func (s *SnowflakeConnectorProfileCredentials) Validate() error {",
          "7447:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileCredentials\"}",
          "7448:  if s.Password == nil {",
          "7449:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "7450:  }",
          "7451:  if s.Username == nil {",
          "7452:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "7453:  }",
          "7455:  if invalidParams.Len() > 0 {",
          "7456:   return invalidParams",
          "7457:  }",
          "7458:  return nil",
          "7459: }",
          "7462: func (s *SnowflakeConnectorProfileCredentials) SetPassword(v string) *SnowflakeConnectorProfileCredentials {",
          "7463:  s.Password = &v",
          "7464:  return s",
          "7465: }",
          "7468: func (s *SnowflakeConnectorProfileCredentials) SetUsername(v string) *SnowflakeConnectorProfileCredentials {",
          "7469:  s.Username = &v",
          "7470:  return s",
          "7471: }",
          "7474: type SnowflakeConnectorProfileProperties struct {",
          "7475:  _ struct{} `type:\"structure\"`",
          "7478:  AccountName *string `locationName:\"accountName\" type:\"string\"`",
          "7483:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7486:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7489:  PrivateLinkServiceName *string `locationName:\"privateLinkServiceName\" type:\"string\"`",
          "7492:  Region *string `locationName:\"region\" type:\"string\"`",
          "7499:  Stage *string `locationName:\"stage\" type:\"string\" required:\"true\"`",
          "7504:  Warehouse *string `locationName:\"warehouse\" type:\"string\" required:\"true\"`",
          "7505: }",
          "7508: func (s SnowflakeConnectorProfileProperties) String() string {",
          "7509:  return awsutil.Prettify(s)",
          "7510: }",
          "7513: func (s SnowflakeConnectorProfileProperties) GoString() string {",
          "7514:  return s.String()",
          "7515: }",
          "7518: func (s *SnowflakeConnectorProfileProperties) Validate() error {",
          "7519:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileProperties\"}",
          "7520:  if s.BucketName == nil {",
          "7521:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "7522:  }",
          "7523:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "7524:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "7525:  }",
          "7526:  if s.Stage == nil {",
          "7527:   invalidParams.Add(request.NewErrParamRequired(\"Stage\"))",
          "7528:  }",
          "7529:  if s.Warehouse == nil {",
          "7530:   invalidParams.Add(request.NewErrParamRequired(\"Warehouse\"))",
          "7531:  }",
          "7533:  if invalidParams.Len() > 0 {",
          "7534:   return invalidParams",
          "7535:  }",
          "7536:  return nil",
          "7537: }",
          "7540: func (s *SnowflakeConnectorProfileProperties) SetAccountName(v string) *SnowflakeConnectorProfileProperties {",
          "7541:  s.AccountName = &v",
          "7542:  return s",
          "7543: }",
          "7546: func (s *SnowflakeConnectorProfileProperties) SetBucketName(v string) *SnowflakeConnectorProfileProperties {",
          "7547:  s.BucketName = &v",
          "7548:  return s",
          "7549: }",
          "7552: func (s *SnowflakeConnectorProfileProperties) SetBucketPrefix(v string) *SnowflakeConnectorProfileProperties {",
          "7553:  s.BucketPrefix = &v",
          "7554:  return s",
          "7555: }",
          "7558: func (s *SnowflakeConnectorProfileProperties) SetPrivateLinkServiceName(v string) *SnowflakeConnectorProfileProperties {",
          "7559:  s.PrivateLinkServiceName = &v",
          "7560:  return s",
          "7561: }",
          "7564: func (s *SnowflakeConnectorProfileProperties) SetRegion(v string) *SnowflakeConnectorProfileProperties {",
          "7565:  s.Region = &v",
          "7566:  return s",
          "7567: }",
          "7570: func (s *SnowflakeConnectorProfileProperties) SetStage(v string) *SnowflakeConnectorProfileProperties {",
          "7571:  s.Stage = &v",
          "7572:  return s",
          "7573: }",
          "7576: func (s *SnowflakeConnectorProfileProperties) SetWarehouse(v string) *SnowflakeConnectorProfileProperties {",
          "7577:  s.Warehouse = &v",
          "7578:  return s",
          "7579: }",
          "7582: type SnowflakeDestinationProperties struct {",
          "7583:  _ struct{} `type:\"structure\"`",
          "7587:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7594:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "7599:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7604:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7605: }",
          "7608: func (s SnowflakeDestinationProperties) String() string {",
          "7609:  return awsutil.Prettify(s)",
          "7610: }",
          "7613: func (s SnowflakeDestinationProperties) GoString() string {",
          "7614:  return s.String()",
          "7615: }",
          "7618: func (s *SnowflakeDestinationProperties) Validate() error {",
          "7619:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeDestinationProperties\"}",
          "7620:  if s.IntermediateBucketName == nil {",
          "7621:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "7622:  }",
          "7623:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "7624:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "7625:  }",
          "7626:  if s.Object == nil {",
          "7627:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7628:  }",
          "7629:  if s.ErrorHandlingConfig != nil {",
          "7630:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "7631:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "7632:   }",
          "7633:  }",
          "7635:  if invalidParams.Len() > 0 {",
          "7636:   return invalidParams",
          "7637:  }",
          "7638:  return nil",
          "7639: }",
          "7642: func (s *SnowflakeDestinationProperties) SetBucketPrefix(v string) *SnowflakeDestinationProperties {",
          "7643:  s.BucketPrefix = &v",
          "7644:  return s",
          "7645: }",
          "7648: func (s *SnowflakeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SnowflakeDestinationProperties {",
          "7649:  s.ErrorHandlingConfig = v",
          "7650:  return s",
          "7651: }",
          "7654: func (s *SnowflakeDestinationProperties) SetIntermediateBucketName(v string) *SnowflakeDestinationProperties {",
          "7655:  s.IntermediateBucketName = &v",
          "7656:  return s",
          "7657: }",
          "7660: func (s *SnowflakeDestinationProperties) SetObject(v string) *SnowflakeDestinationProperties {",
          "7661:  s.Object = &v",
          "7662:  return s",
          "7663: }",
          "7666: type SnowflakeMetadata struct {",
          "7667:  _ struct{} `type:\"structure\"`",
          "7670:  SupportedRegions []*string `locationName:\"supportedRegions\" type:\"list\"`",
          "7671: }",
          "7674: func (s SnowflakeMetadata) String() string {",
          "7675:  return awsutil.Prettify(s)",
          "7676: }",
          "7679: func (s SnowflakeMetadata) GoString() string {",
          "7680:  return s.String()",
          "7681: }",
          "7684: func (s *SnowflakeMetadata) SetSupportedRegions(v []*string) *SnowflakeMetadata {",
          "7685:  s.SupportedRegions = v",
          "7686:  return s",
          "7687: }",
          "7690: type SourceConnectorProperties struct {",
          "7691:  _ struct{} `type:\"structure\"`",
          "7694:  Amplitude *AmplitudeSourceProperties `type:\"structure\"`",
          "7697:  Datadog *DatadogSourceProperties `type:\"structure\"`",
          "7700:  Dynatrace *DynatraceSourceProperties `type:\"structure\"`",
          "7703:  GoogleAnalytics *GoogleAnalyticsSourceProperties `type:\"structure\"`",
          "7706:  InforNexus *InforNexusSourceProperties `type:\"structure\"`",
          "7709:  Marketo *MarketoSourceProperties `type:\"structure\"`",
          "7712:  S3 *S3SourceProperties `type:\"structure\"`",
          "7715:  Salesforce *SalesforceSourceProperties `type:\"structure\"`",
          "7718:  ServiceNow *ServiceNowSourceProperties `type:\"structure\"`",
          "7721:  Singular *SingularSourceProperties `type:\"structure\"`",
          "7724:  Slack *SlackSourceProperties `type:\"structure\"`",
          "7727:  Trendmicro *TrendmicroSourceProperties `type:\"structure\"`",
          "7730:  Veeva *VeevaSourceProperties `type:\"structure\"`",
          "7733:  Zendesk *ZendeskSourceProperties `type:\"structure\"`",
          "7734: }",
          "7737: func (s SourceConnectorProperties) String() string {",
          "7738:  return awsutil.Prettify(s)",
          "7739: }",
          "7742: func (s SourceConnectorProperties) GoString() string {",
          "7743:  return s.String()",
          "7744: }",
          "7747: func (s *SourceConnectorProperties) Validate() error {",
          "7748:  invalidParams := request.ErrInvalidParams{Context: \"SourceConnectorProperties\"}",
          "7749:  if s.Amplitude != nil {",
          "7750:   if err := s.Amplitude.Validate(); err != nil {",
          "7751:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "7752:   }",
          "7753:  }",
          "7754:  if s.Datadog != nil {",
          "7755:   if err := s.Datadog.Validate(); err != nil {",
          "7756:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "7757:   }",
          "7758:  }",
          "7759:  if s.Dynatrace != nil {",
          "7760:   if err := s.Dynatrace.Validate(); err != nil {",
          "7761:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "7762:   }",
          "7763:  }",
          "7764:  if s.GoogleAnalytics != nil {",
          "7765:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "7766:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "7767:   }",
          "7768:  }",
          "7769:  if s.InforNexus != nil {",
          "7770:   if err := s.InforNexus.Validate(); err != nil {",
          "7771:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "7772:   }",
          "7773:  }",
          "7774:  if s.Marketo != nil {",
          "7775:   if err := s.Marketo.Validate(); err != nil {",
          "7776:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "7777:   }",
          "7778:  }",
          "7779:  if s.S3 != nil {",
          "7780:   if err := s.S3.Validate(); err != nil {",
          "7781:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "7782:   }",
          "7783:  }",
          "7784:  if s.Salesforce != nil {",
          "7785:   if err := s.Salesforce.Validate(); err != nil {",
          "7786:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "7787:   }",
          "7788:  }",
          "7789:  if s.ServiceNow != nil {",
          "7790:   if err := s.ServiceNow.Validate(); err != nil {",
          "7791:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "7792:   }",
          "7793:  }",
          "7794:  if s.Singular != nil {",
          "7795:   if err := s.Singular.Validate(); err != nil {",
          "7796:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "7797:   }",
          "7798:  }",
          "7799:  if s.Slack != nil {",
          "7800:   if err := s.Slack.Validate(); err != nil {",
          "7801:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "7802:   }",
          "7803:  }",
          "7804:  if s.Trendmicro != nil {",
          "7805:   if err := s.Trendmicro.Validate(); err != nil {",
          "7806:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "7807:   }",
          "7808:  }",
          "7809:  if s.Veeva != nil {",
          "7810:   if err := s.Veeva.Validate(); err != nil {",
          "7811:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "7812:   }",
          "7813:  }",
          "7814:  if s.Zendesk != nil {",
          "7815:   if err := s.Zendesk.Validate(); err != nil {",
          "7816:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "7817:   }",
          "7818:  }",
          "7820:  if invalidParams.Len() > 0 {",
          "7821:   return invalidParams",
          "7822:  }",
          "7823:  return nil",
          "7824: }",
          "7827: func (s *SourceConnectorProperties) SetAmplitude(v *AmplitudeSourceProperties) *SourceConnectorProperties {",
          "7828:  s.Amplitude = v",
          "7829:  return s",
          "7830: }",
          "7833: func (s *SourceConnectorProperties) SetDatadog(v *DatadogSourceProperties) *SourceConnectorProperties {",
          "7834:  s.Datadog = v",
          "7835:  return s",
          "7836: }",
          "7839: func (s *SourceConnectorProperties) SetDynatrace(v *DynatraceSourceProperties) *SourceConnectorProperties {",
          "7840:  s.Dynatrace = v",
          "7841:  return s",
          "7842: }",
          "7845: func (s *SourceConnectorProperties) SetGoogleAnalytics(v *GoogleAnalyticsSourceProperties) *SourceConnectorProperties {",
          "7846:  s.GoogleAnalytics = v",
          "7847:  return s",
          "7848: }",
          "7851: func (s *SourceConnectorProperties) SetInforNexus(v *InforNexusSourceProperties) *SourceConnectorProperties {",
          "7852:  s.InforNexus = v",
          "7853:  return s",
          "7854: }",
          "7857: func (s *SourceConnectorProperties) SetMarketo(v *MarketoSourceProperties) *SourceConnectorProperties {",
          "7858:  s.Marketo = v",
          "7859:  return s",
          "7860: }",
          "7863: func (s *SourceConnectorProperties) SetS3(v *S3SourceProperties) *SourceConnectorProperties {",
          "7864:  s.S3 = v",
          "7865:  return s",
          "7866: }",
          "7869: func (s *SourceConnectorProperties) SetSalesforce(v *SalesforceSourceProperties) *SourceConnectorProperties {",
          "7870:  s.Salesforce = v",
          "7871:  return s",
          "7872: }",
          "7875: func (s *SourceConnectorProperties) SetServiceNow(v *ServiceNowSourceProperties) *SourceConnectorProperties {",
          "7876:  s.ServiceNow = v",
          "7877:  return s",
          "7878: }",
          "7881: func (s *SourceConnectorProperties) SetSingular(v *SingularSourceProperties) *SourceConnectorProperties {",
          "7882:  s.Singular = v",
          "7883:  return s",
          "7884: }",
          "7887: func (s *SourceConnectorProperties) SetSlack(v *SlackSourceProperties) *SourceConnectorProperties {",
          "7888:  s.Slack = v",
          "7889:  return s",
          "7890: }",
          "7893: func (s *SourceConnectorProperties) SetTrendmicro(v *TrendmicroSourceProperties) *SourceConnectorProperties {",
          "7894:  s.Trendmicro = v",
          "7895:  return s",
          "7896: }",
          "7899: func (s *SourceConnectorProperties) SetVeeva(v *VeevaSourceProperties) *SourceConnectorProperties {",
          "7900:  s.Veeva = v",
          "7901:  return s",
          "7902: }",
          "7905: func (s *SourceConnectorProperties) SetZendesk(v *ZendeskSourceProperties) *SourceConnectorProperties {",
          "7906:  s.Zendesk = v",
          "7907:  return s",
          "7908: }",
          "7912: type SourceFieldProperties struct {",
          "7913:  _ struct{} `type:\"structure\"`",
          "7916:  IsQueryable *bool `locationName:\"isQueryable\" type:\"boolean\"`",
          "7919:  IsRetrievable *bool `locationName:\"isRetrievable\" type:\"boolean\"`",
          "7920: }",
          "7923: func (s SourceFieldProperties) String() string {",
          "7924:  return awsutil.Prettify(s)",
          "7925: }",
          "7928: func (s SourceFieldProperties) GoString() string {",
          "7929:  return s.String()",
          "7930: }",
          "7933: func (s *SourceFieldProperties) SetIsQueryable(v bool) *SourceFieldProperties {",
          "7934:  s.IsQueryable = &v",
          "7935:  return s",
          "7936: }",
          "7939: func (s *SourceFieldProperties) SetIsRetrievable(v bool) *SourceFieldProperties {",
          "7940:  s.IsRetrievable = &v",
          "7941:  return s",
          "7942: }",
          "7946: type SourceFlowConfig struct {",
          "7947:  _ struct{} `type:\"structure\"`",
          "7951:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "7956:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "7961:  SourceConnectorProperties *SourceConnectorProperties `locationName:\"sourceConnectorProperties\" type:\"structure\" required:\"true\"`",
          "7962: }",
          "7965: func (s SourceFlowConfig) String() string {",
          "7966:  return awsutil.Prettify(s)",
          "7967: }",
          "7970: func (s SourceFlowConfig) GoString() string {",
          "7971:  return s.String()",
          "7972: }",
          "7975: func (s *SourceFlowConfig) Validate() error {",
          "7976:  invalidParams := request.ErrInvalidParams{Context: \"SourceFlowConfig\"}",
          "7977:  if s.ConnectorType == nil {",
          "7978:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "7979:  }",
          "7980:  if s.SourceConnectorProperties == nil {",
          "7981:   invalidParams.Add(request.NewErrParamRequired(\"SourceConnectorProperties\"))",
          "7982:  }",
          "7983:  if s.SourceConnectorProperties != nil {",
          "7984:   if err := s.SourceConnectorProperties.Validate(); err != nil {",
          "7985:    invalidParams.AddNested(\"SourceConnectorProperties\", err.(request.ErrInvalidParams))",
          "7986:   }",
          "7987:  }",
          "7989:  if invalidParams.Len() > 0 {",
          "7990:   return invalidParams",
          "7991:  }",
          "7992:  return nil",
          "7993: }",
          "7996: func (s *SourceFlowConfig) SetConnectorProfileName(v string) *SourceFlowConfig {",
          "7997:  s.ConnectorProfileName = &v",
          "7998:  return s",
          "7999: }",
          "8002: func (s *SourceFlowConfig) SetConnectorType(v string) *SourceFlowConfig {",
          "8003:  s.ConnectorType = &v",
          "8004:  return s",
          "8005: }",
          "8008: func (s *SourceFlowConfig) SetSourceConnectorProperties(v *SourceConnectorProperties) *SourceFlowConfig {",
          "8009:  s.SourceConnectorProperties = v",
          "8010:  return s",
          "8011: }",
          "8013: type StartFlowInput struct {",
          "8014:  _ struct{} `type:\"structure\"`",
          "8020:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8021: }",
          "8024: func (s StartFlowInput) String() string {",
          "8025:  return awsutil.Prettify(s)",
          "8026: }",
          "8029: func (s StartFlowInput) GoString() string {",
          "8030:  return s.String()",
          "8031: }",
          "8034: func (s *StartFlowInput) Validate() error {",
          "8035:  invalidParams := request.ErrInvalidParams{Context: \"StartFlowInput\"}",
          "8036:  if s.FlowName == nil {",
          "8037:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8038:  }",
          "8040:  if invalidParams.Len() > 0 {",
          "8041:   return invalidParams",
          "8042:  }",
          "8043:  return nil",
          "8044: }",
          "8047: func (s *StartFlowInput) SetFlowName(v string) *StartFlowInput {",
          "8048:  s.FlowName = &v",
          "8049:  return s",
          "8050: }",
          "8052: type StartFlowOutput struct {",
          "8053:  _ struct{} `type:\"structure\"`",
          "8056:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8059:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8060: }",
          "8063: func (s StartFlowOutput) String() string {",
          "8064:  return awsutil.Prettify(s)",
          "8065: }",
          "8068: func (s StartFlowOutput) GoString() string {",
          "8069:  return s.String()",
          "8070: }",
          "8073: func (s *StartFlowOutput) SetFlowArn(v string) *StartFlowOutput {",
          "8074:  s.FlowArn = &v",
          "8075:  return s",
          "8076: }",
          "8079: func (s *StartFlowOutput) SetFlowStatus(v string) *StartFlowOutput {",
          "8080:  s.FlowStatus = &v",
          "8081:  return s",
          "8082: }",
          "8084: type StopFlowInput struct {",
          "8085:  _ struct{} `type:\"structure\"`",
          "8091:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8092: }",
          "8095: func (s StopFlowInput) String() string {",
          "8096:  return awsutil.Prettify(s)",
          "8097: }",
          "8100: func (s StopFlowInput) GoString() string {",
          "8101:  return s.String()",
          "8102: }",
          "8105: func (s *StopFlowInput) Validate() error {",
          "8106:  invalidParams := request.ErrInvalidParams{Context: \"StopFlowInput\"}",
          "8107:  if s.FlowName == nil {",
          "8108:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8109:  }",
          "8111:  if invalidParams.Len() > 0 {",
          "8112:   return invalidParams",
          "8113:  }",
          "8114:  return nil",
          "8115: }",
          "8118: func (s *StopFlowInput) SetFlowName(v string) *StopFlowInput {",
          "8119:  s.FlowName = &v",
          "8120:  return s",
          "8121: }",
          "8123: type StopFlowOutput struct {",
          "8124:  _ struct{} `type:\"structure\"`",
          "8127:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8130:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8131: }",
          "8134: func (s StopFlowOutput) String() string {",
          "8135:  return awsutil.Prettify(s)",
          "8136: }",
          "8139: func (s StopFlowOutput) GoString() string {",
          "8140:  return s.String()",
          "8141: }",
          "8144: func (s *StopFlowOutput) SetFlowArn(v string) *StopFlowOutput {",
          "8145:  s.FlowArn = &v",
          "8146:  return s",
          "8147: }",
          "8150: func (s *StopFlowOutput) SetFlowStatus(v string) *StopFlowOutput {",
          "8151:  s.FlowStatus = &v",
          "8152:  return s",
          "8153: }",
          "8157: type SupportedFieldTypeDetails struct {",
          "8158:  _ struct{} `type:\"structure\"`",
          "8164:  V1 *FieldTypeDetails `locationName:\"v1\" type:\"structure\" required:\"true\"`",
          "8165: }",
          "8168: func (s SupportedFieldTypeDetails) String() string {",
          "8169:  return awsutil.Prettify(s)",
          "8170: }",
          "8173: func (s SupportedFieldTypeDetails) GoString() string {",
          "8174:  return s.String()",
          "8175: }",
          "8178: func (s *SupportedFieldTypeDetails) SetV1(v *FieldTypeDetails) *SupportedFieldTypeDetails {",
          "8179:  s.V1 = v",
          "8180:  return s",
          "8181: }",
          "8183: type TagResourceInput struct {",
          "8184:  _ struct{} `type:\"structure\"`",
          "8189:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8194:  Tags map[string]*string `locationName:\"tags\" type:\"map\" required:\"true\"`",
          "8195: }",
          "8198: func (s TagResourceInput) String() string {",
          "8199:  return awsutil.Prettify(s)",
          "8200: }",
          "8203: func (s TagResourceInput) GoString() string {",
          "8204:  return s.String()",
          "8205: }",
          "8208: func (s *TagResourceInput) Validate() error {",
          "8209:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "8210:  if s.ResourceArn == nil {",
          "8211:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8212:  }",
          "8213:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8214:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8215:  }",
          "8216:  if s.Tags == nil {",
          "8217:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "8218:  }",
          "8220:  if invalidParams.Len() > 0 {",
          "8221:   return invalidParams",
          "8222:  }",
          "8223:  return nil",
          "8224: }",
          "8227: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "8228:  s.ResourceArn = &v",
          "8229:  return s",
          "8230: }",
          "8233: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "8234:  s.Tags = v",
          "8235:  return s",
          "8236: }",
          "8238: type TagResourceOutput struct {",
          "8239:  _ struct{} `type:\"structure\"`",
          "8240: }",
          "8243: func (s TagResourceOutput) String() string {",
          "8244:  return awsutil.Prettify(s)",
          "8245: }",
          "8248: func (s TagResourceOutput) GoString() string {",
          "8249:  return s.String()",
          "8250: }",
          "8254: type Task struct {",
          "8255:  _ struct{} `type:\"structure\"`",
          "8258:  ConnectorOperator *ConnectorOperator `locationName:\"connectorOperator\" type:\"structure\"`",
          "8262:  DestinationField *string `locationName:\"destinationField\" type:\"string\"`",
          "8267:  SourceFields []*string `locationName:\"sourceFields\" type:\"list\" required:\"true\"`",
          "8271:  TaskProperties map[string]*string `locationName:\"taskProperties\" type:\"map\"`",
          "8276:  TaskType *string `locationName:\"taskType\" type:\"string\" required:\"true\" enum:\"TaskType\"`",
          "8277: }",
          "8280: func (s Task) String() string {",
          "8281:  return awsutil.Prettify(s)",
          "8282: }",
          "8285: func (s Task) GoString() string {",
          "8286:  return s.String()",
          "8287: }",
          "8290: func (s *Task) Validate() error {",
          "8291:  invalidParams := request.ErrInvalidParams{Context: \"Task\"}",
          "8292:  if s.SourceFields == nil {",
          "8293:   invalidParams.Add(request.NewErrParamRequired(\"SourceFields\"))",
          "8294:  }",
          "8295:  if s.TaskType == nil {",
          "8296:   invalidParams.Add(request.NewErrParamRequired(\"TaskType\"))",
          "8297:  }",
          "8299:  if invalidParams.Len() > 0 {",
          "8300:   return invalidParams",
          "8301:  }",
          "8302:  return nil",
          "8303: }",
          "8306: func (s *Task) SetConnectorOperator(v *ConnectorOperator) *Task {",
          "8307:  s.ConnectorOperator = v",
          "8308:  return s",
          "8309: }",
          "8312: func (s *Task) SetDestinationField(v string) *Task {",
          "8313:  s.DestinationField = &v",
          "8314:  return s",
          "8315: }",
          "8318: func (s *Task) SetSourceFields(v []*string) *Task {",
          "8319:  s.SourceFields = v",
          "8320:  return s",
          "8321: }",
          "8324: func (s *Task) SetTaskProperties(v map[string]*string) *Task {",
          "8325:  s.TaskProperties = v",
          "8326:  return s",
          "8327: }",
          "8330: func (s *Task) SetTaskType(v string) *Task {",
          "8331:  s.TaskType = &v",
          "8332:  return s",
          "8333: }",
          "8336: type TrendmicroConnectorProfileCredentials struct {",
          "8337:  _ struct{} `type:\"structure\"`",
          "8342:  ApiSecretKey *string `locationName:\"apiSecretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8343: }",
          "8346: func (s TrendmicroConnectorProfileCredentials) String() string {",
          "8347:  return awsutil.Prettify(s)",
          "8348: }",
          "8351: func (s TrendmicroConnectorProfileCredentials) GoString() string {",
          "8352:  return s.String()",
          "8353: }",
          "8356: func (s *TrendmicroConnectorProfileCredentials) Validate() error {",
          "8357:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroConnectorProfileCredentials\"}",
          "8358:  if s.ApiSecretKey == nil {",
          "8359:   invalidParams.Add(request.NewErrParamRequired(\"ApiSecretKey\"))",
          "8360:  }",
          "8362:  if invalidParams.Len() > 0 {",
          "8363:   return invalidParams",
          "8364:  }",
          "8365:  return nil",
          "8366: }",
          "8369: func (s *TrendmicroConnectorProfileCredentials) SetApiSecretKey(v string) *TrendmicroConnectorProfileCredentials {",
          "8370:  s.ApiSecretKey = &v",
          "8371:  return s",
          "8372: }",
          "8375: type TrendmicroConnectorProfileProperties struct {",
          "8376:  _ struct{} `type:\"structure\"`",
          "8377: }",
          "8380: func (s TrendmicroConnectorProfileProperties) String() string {",
          "8381:  return awsutil.Prettify(s)",
          "8382: }",
          "8385: func (s TrendmicroConnectorProfileProperties) GoString() string {",
          "8386:  return s.String()",
          "8387: }",
          "8390: type TrendmicroMetadata struct {",
          "8391:  _ struct{} `type:\"structure\"`",
          "8392: }",
          "8395: func (s TrendmicroMetadata) String() string {",
          "8396:  return awsutil.Prettify(s)",
          "8397: }",
          "8400: func (s TrendmicroMetadata) GoString() string {",
          "8401:  return s.String()",
          "8402: }",
          "8405: type TrendmicroSourceProperties struct {",
          "8406:  _ struct{} `type:\"structure\"`",
          "8411:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "8412: }",
          "8415: func (s TrendmicroSourceProperties) String() string {",
          "8416:  return awsutil.Prettify(s)",
          "8417: }",
          "8420: func (s TrendmicroSourceProperties) GoString() string {",
          "8421:  return s.String()",
          "8422: }",
          "8425: func (s *TrendmicroSourceProperties) Validate() error {",
          "8426:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroSourceProperties\"}",
          "8427:  if s.Object == nil {",
          "8428:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "8429:  }",
          "8431:  if invalidParams.Len() > 0 {",
          "8432:   return invalidParams",
          "8433:  }",
          "8434:  return nil",
          "8435: }",
          "8438: func (s *TrendmicroSourceProperties) SetObject(v string) *TrendmicroSourceProperties {",
          "8439:  s.Object = &v",
          "8440:  return s",
          "8441: }",
          "8445: type TriggerConfig struct {",
          "8446:  _ struct{} `type:\"structure\"`",
          "8451:  TriggerProperties *TriggerProperties `locationName:\"triggerProperties\" type:\"structure\"`",
          "8456:  TriggerType *string `locationName:\"triggerType\" type:\"string\" required:\"true\" enum:\"TriggerType\"`",
          "8457: }",
          "8460: func (s TriggerConfig) String() string {",
          "8461:  return awsutil.Prettify(s)",
          "8462: }",
          "8465: func (s TriggerConfig) GoString() string {",
          "8466:  return s.String()",
          "8467: }",
          "8470: func (s *TriggerConfig) Validate() error {",
          "8471:  invalidParams := request.ErrInvalidParams{Context: \"TriggerConfig\"}",
          "8472:  if s.TriggerType == nil {",
          "8473:   invalidParams.Add(request.NewErrParamRequired(\"TriggerType\"))",
          "8474:  }",
          "8475:  if s.TriggerProperties != nil {",
          "8476:   if err := s.TriggerProperties.Validate(); err != nil {",
          "8477:    invalidParams.AddNested(\"TriggerProperties\", err.(request.ErrInvalidParams))",
          "8478:   }",
          "8479:  }",
          "8481:  if invalidParams.Len() > 0 {",
          "8482:   return invalidParams",
          "8483:  }",
          "8484:  return nil",
          "8485: }",
          "8488: func (s *TriggerConfig) SetTriggerProperties(v *TriggerProperties) *TriggerConfig {",
          "8489:  s.TriggerProperties = v",
          "8490:  return s",
          "8491: }",
          "8494: func (s *TriggerConfig) SetTriggerType(v string) *TriggerConfig {",
          "8495:  s.TriggerType = &v",
          "8496:  return s",
          "8497: }",
          "8501: type TriggerProperties struct {",
          "8502:  _ struct{} `type:\"structure\"`",
          "8506:  Scheduled *ScheduledTriggerProperties `type:\"structure\"`",
          "8507: }",
          "8510: func (s TriggerProperties) String() string {",
          "8511:  return awsutil.Prettify(s)",
          "8512: }",
          "8515: func (s TriggerProperties) GoString() string {",
          "8516:  return s.String()",
          "8517: }",
          "8520: func (s *TriggerProperties) Validate() error {",
          "8521:  invalidParams := request.ErrInvalidParams{Context: \"TriggerProperties\"}",
          "8522:  if s.Scheduled != nil {",
          "8523:   if err := s.Scheduled.Validate(); err != nil {",
          "8524:    invalidParams.AddNested(\"Scheduled\", err.(request.ErrInvalidParams))",
          "8525:   }",
          "8526:  }",
          "8528:  if invalidParams.Len() > 0 {",
          "8529:   return invalidParams",
          "8530:  }",
          "8531:  return nil",
          "8532: }",
          "8535: func (s *TriggerProperties) SetScheduled(v *ScheduledTriggerProperties) *TriggerProperties {",
          "8536:  s.Scheduled = v",
          "8537:  return s",
          "8538: }",
          "8541: type UnsupportedOperationException struct {",
          "8542:  _            struct{}                  `type:\"structure\"`",
          "8543:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8545:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8546: }",
          "8549: func (s UnsupportedOperationException) String() string {",
          "8550:  return awsutil.Prettify(s)",
          "8551: }",
          "8554: func (s UnsupportedOperationException) GoString() string {",
          "8555:  return s.String()",
          "8556: }",
          "8558: func newErrorUnsupportedOperationException(v protocol.ResponseMetadata) error {",
          "8559:  return &UnsupportedOperationException{",
          "8560:   RespMetadata: v,",
          "8561:  }",
          "8562: }",
          "8565: func (s *UnsupportedOperationException) Code() string {",
          "8566:  return \"UnsupportedOperationException\"",
          "8567: }",
          "8570: func (s *UnsupportedOperationException) Message() string {",
          "8571:  if s.Message_ != nil {",
          "8572:   return *s.Message_",
          "8573:  }",
          "8574:  return \"\"",
          "8575: }",
          "8578: func (s *UnsupportedOperationException) OrigErr() error {",
          "8579:  return nil",
          "8580: }",
          "8582: func (s *UnsupportedOperationException) Error() string {",
          "8583:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8584: }",
          "8587: func (s *UnsupportedOperationException) StatusCode() int {",
          "8588:  return s.RespMetadata.StatusCode",
          "8589: }",
          "8592: func (s *UnsupportedOperationException) RequestID() string {",
          "8593:  return s.RespMetadata.RequestID",
          "8594: }",
          "8596: type UntagResourceInput struct {",
          "8597:  _ struct{} `type:\"structure\"`",
          "8602:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8607:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "8608: }",
          "8611: func (s UntagResourceInput) String() string {",
          "8612:  return awsutil.Prettify(s)",
          "8613: }",
          "8616: func (s UntagResourceInput) GoString() string {",
          "8617:  return s.String()",
          "8618: }",
          "8621: func (s *UntagResourceInput) Validate() error {",
          "8622:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "8623:  if s.ResourceArn == nil {",
          "8624:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8625:  }",
          "8626:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8627:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8628:  }",
          "8629:  if s.TagKeys == nil {",
          "8630:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "8631:  }",
          "8633:  if invalidParams.Len() > 0 {",
          "8634:   return invalidParams",
          "8635:  }",
          "8636:  return nil",
          "8637: }",
          "8640: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "8641:  s.ResourceArn = &v",
          "8642:  return s",
          "8643: }",
          "8646: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "8647:  s.TagKeys = v",
          "8648:  return s",
          "8649: }",
          "8651: type UntagResourceOutput struct {",
          "8652:  _ struct{} `type:\"structure\"`",
          "8653: }",
          "8656: func (s UntagResourceOutput) String() string {",
          "8657:  return awsutil.Prettify(s)",
          "8658: }",
          "8661: func (s UntagResourceOutput) GoString() string {",
          "8662:  return s.String()",
          "8663: }",
          "8665: type UpdateConnectorProfileInput struct {",
          "8666:  _ struct{} `type:\"structure\"`",
          "8671:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "8676:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "8682:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "8683: }",
          "8686: func (s UpdateConnectorProfileInput) String() string {",
          "8687:  return awsutil.Prettify(s)",
          "8688: }",
          "8691: func (s UpdateConnectorProfileInput) GoString() string {",
          "8692:  return s.String()",
          "8693: }",
          "8696: func (s *UpdateConnectorProfileInput) Validate() error {",
          "8697:  invalidParams := request.ErrInvalidParams{Context: \"UpdateConnectorProfileInput\"}",
          "8698:  if s.ConnectionMode == nil {",
          "8699:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "8700:  }",
          "8701:  if s.ConnectorProfileConfig == nil {",
          "8702:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "8703:  }",
          "8704:  if s.ConnectorProfileName == nil {",
          "8705:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "8706:  }",
          "8707:  if s.ConnectorProfileConfig != nil {",
          "8708:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "8709:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "8710:   }",
          "8711:  }",
          "8713:  if invalidParams.Len() > 0 {",
          "8714:   return invalidParams",
          "8715:  }",
          "8716:  return nil",
          "8717: }",
          "8720: func (s *UpdateConnectorProfileInput) SetConnectionMode(v string) *UpdateConnectorProfileInput {",
          "8721:  s.ConnectionMode = &v",
          "8722:  return s",
          "8723: }",
          "8726: func (s *UpdateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *UpdateConnectorProfileInput {",
          "8727:  s.ConnectorProfileConfig = v",
          "8728:  return s",
          "8729: }",
          "8732: func (s *UpdateConnectorProfileInput) SetConnectorProfileName(v string) *UpdateConnectorProfileInput {",
          "8733:  s.ConnectorProfileName = &v",
          "8734:  return s",
          "8735: }",
          "8737: type UpdateConnectorProfileOutput struct {",
          "8738:  _ struct{} `type:\"structure\"`",
          "8741:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "8742: }",
          "8745: func (s UpdateConnectorProfileOutput) String() string {",
          "8746:  return awsutil.Prettify(s)",
          "8747: }",
          "8750: func (s UpdateConnectorProfileOutput) GoString() string {",
          "8751:  return s.String()",
          "8752: }",
          "8755: func (s *UpdateConnectorProfileOutput) SetConnectorProfileArn(v string) *UpdateConnectorProfileOutput {",
          "8756:  s.ConnectorProfileArn = &v",
          "8757:  return s",
          "8758: }",
          "8760: type UpdateFlowInput struct {",
          "8761:  _ struct{} `type:\"structure\"`",
          "8764:  Description *string `locationName:\"description\" type:\"string\"`",
          "8770:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "8776:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8780:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "8786:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "8791:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "8792: }",
          "8795: func (s UpdateFlowInput) String() string {",
          "8796:  return awsutil.Prettify(s)",
          "8797: }",
          "8800: func (s UpdateFlowInput) GoString() string {",
          "8801:  return s.String()",
          "8802: }",
          "8805: func (s *UpdateFlowInput) Validate() error {",
          "8806:  invalidParams := request.ErrInvalidParams{Context: \"UpdateFlowInput\"}",
          "8807:  if s.DestinationFlowConfigList == nil {",
          "8808:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "8809:  }",
          "8810:  if s.FlowName == nil {",
          "8811:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8812:  }",
          "8813:  if s.Tasks == nil {",
          "8814:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "8815:  }",
          "8816:  if s.TriggerConfig == nil {",
          "8817:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "8818:  }",
          "8819:  if s.DestinationFlowConfigList != nil {",
          "8820:   for i, v := range s.DestinationFlowConfigList {",
          "8821:    if v == nil {",
          "8822:     continue",
          "8823:    }",
          "8824:    if err := v.Validate(); err != nil {",
          "8825:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "8826:    }",
          "8827:   }",
          "8828:  }",
          "8829:  if s.SourceFlowConfig != nil {",
          "8830:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "8831:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "8832:   }",
          "8833:  }",
          "8834:  if s.Tasks != nil {",
          "8835:   for i, v := range s.Tasks {",
          "8836:    if v == nil {",
          "8837:     continue",
          "8838:    }",
          "8839:    if err := v.Validate(); err != nil {",
          "8840:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "8841:    }",
          "8842:   }",
          "8843:  }",
          "8844:  if s.TriggerConfig != nil {",
          "8845:   if err := s.TriggerConfig.Validate(); err != nil {",
          "8846:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "8847:   }",
          "8848:  }",
          "8850:  if invalidParams.Len() > 0 {",
          "8851:   return invalidParams",
          "8852:  }",
          "8853:  return nil",
          "8854: }",
          "8857: func (s *UpdateFlowInput) SetDescription(v string) *UpdateFlowInput {",
          "8858:  s.Description = &v",
          "8859:  return s",
          "8860: }",
          "8863: func (s *UpdateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *UpdateFlowInput {",
          "8864:  s.DestinationFlowConfigList = v",
          "8865:  return s",
          "8866: }",
          "8869: func (s *UpdateFlowInput) SetFlowName(v string) *UpdateFlowInput {",
          "8870:  s.FlowName = &v",
          "8871:  return s",
          "8872: }",
          "8875: func (s *UpdateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *UpdateFlowInput {",
          "8876:  s.SourceFlowConfig = v",
          "8877:  return s",
          "8878: }",
          "8881: func (s *UpdateFlowInput) SetTasks(v []*Task) *UpdateFlowInput {",
          "8882:  s.Tasks = v",
          "8883:  return s",
          "8884: }",
          "8887: func (s *UpdateFlowInput) SetTriggerConfig(v *TriggerConfig) *UpdateFlowInput {",
          "8888:  s.TriggerConfig = v",
          "8889:  return s",
          "8890: }",
          "8892: type UpdateFlowOutput struct {",
          "8893:  _ struct{} `type:\"structure\"`",
          "8896:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8897: }",
          "8900: func (s UpdateFlowOutput) String() string {",
          "8901:  return awsutil.Prettify(s)",
          "8902: }",
          "8905: func (s UpdateFlowOutput) GoString() string {",
          "8906:  return s.String()",
          "8907: }",
          "8910: func (s *UpdateFlowOutput) SetFlowStatus(v string) *UpdateFlowOutput {",
          "8911:  s.FlowStatus = &v",
          "8912:  return s",
          "8913: }",
          "8916: type ValidationException struct {",
          "8917:  _            struct{}                  `type:\"structure\"`",
          "8918:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8920:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8921: }",
          "8924: func (s ValidationException) String() string {",
          "8925:  return awsutil.Prettify(s)",
          "8926: }",
          "8929: func (s ValidationException) GoString() string {",
          "8930:  return s.String()",
          "8931: }",
          "8933: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "8934:  return &ValidationException{",
          "8935:   RespMetadata: v,",
          "8936:  }",
          "8937: }",
          "8940: func (s *ValidationException) Code() string {",
          "8941:  return \"ValidationException\"",
          "8942: }",
          "8945: func (s *ValidationException) Message() string {",
          "8946:  if s.Message_ != nil {",
          "8947:   return *s.Message_",
          "8948:  }",
          "8949:  return \"\"",
          "8950: }",
          "8953: func (s *ValidationException) OrigErr() error {",
          "8954:  return nil",
          "8955: }",
          "8957: func (s *ValidationException) Error() string {",
          "8958:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8959: }",
          "8962: func (s *ValidationException) StatusCode() int {",
          "8963:  return s.RespMetadata.StatusCode",
          "8964: }",
          "8967: func (s *ValidationException) RequestID() string {",
          "8968:  return s.RespMetadata.RequestID",
          "8969: }",
          "8972: type VeevaConnectorProfileCredentials struct {",
          "8973:  _ struct{} `type:\"structure\"`",
          "8978:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8983:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "8984: }",
          "8987: func (s VeevaConnectorProfileCredentials) String() string {",
          "8988:  return awsutil.Prettify(s)",
          "8989: }",
          "8992: func (s VeevaConnectorProfileCredentials) GoString() string {",
          "8993:  return s.String()",
          "8994: }",
          "8997: func (s *VeevaConnectorProfileCredentials) Validate() error {",
          "8998:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileCredentials\"}",
          "8999:  if s.Password == nil {",
          "9000:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "9001:  }",
          "9002:  if s.Username == nil {",
          "9003:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "9004:  }",
          "9006:  if invalidParams.Len() > 0 {",
          "9007:   return invalidParams",
          "9008:  }",
          "9009:  return nil",
          "9010: }",
          "9013: func (s *VeevaConnectorProfileCredentials) SetPassword(v string) *VeevaConnectorProfileCredentials {",
          "9014:  s.Password = &v",
          "9015:  return s",
          "9016: }",
          "9019: func (s *VeevaConnectorProfileCredentials) SetUsername(v string) *VeevaConnectorProfileCredentials {",
          "9020:  s.Username = &v",
          "9021:  return s",
          "9022: }",
          "9025: type VeevaConnectorProfileProperties struct {",
          "9026:  _ struct{} `type:\"structure\"`",
          "9031:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9032: }",
          "9035: func (s VeevaConnectorProfileProperties) String() string {",
          "9036:  return awsutil.Prettify(s)",
          "9037: }",
          "9040: func (s VeevaConnectorProfileProperties) GoString() string {",
          "9041:  return s.String()",
          "9042: }",
          "9045: func (s *VeevaConnectorProfileProperties) Validate() error {",
          "9046:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileProperties\"}",
          "9047:  if s.InstanceUrl == nil {",
          "9048:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9049:  }",
          "9051:  if invalidParams.Len() > 0 {",
          "9052:   return invalidParams",
          "9053:  }",
          "9054:  return nil",
          "9055: }",
          "9058: func (s *VeevaConnectorProfileProperties) SetInstanceUrl(v string) *VeevaConnectorProfileProperties {",
          "9059:  s.InstanceUrl = &v",
          "9060:  return s",
          "9061: }",
          "9064: type VeevaMetadata struct {",
          "9065:  _ struct{} `type:\"structure\"`",
          "9066: }",
          "9069: func (s VeevaMetadata) String() string {",
          "9070:  return awsutil.Prettify(s)",
          "9071: }",
          "9074: func (s VeevaMetadata) GoString() string {",
          "9075:  return s.String()",
          "9076: }",
          "9079: type VeevaSourceProperties struct {",
          "9080:  _ struct{} `type:\"structure\"`",
          "9085:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9086: }",
          "9089: func (s VeevaSourceProperties) String() string {",
          "9090:  return awsutil.Prettify(s)",
          "9091: }",
          "9094: func (s VeevaSourceProperties) GoString() string {",
          "9095:  return s.String()",
          "9096: }",
          "9099: func (s *VeevaSourceProperties) Validate() error {",
          "9100:  invalidParams := request.ErrInvalidParams{Context: \"VeevaSourceProperties\"}",
          "9101:  if s.Object == nil {",
          "9102:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9103:  }",
          "9105:  if invalidParams.Len() > 0 {",
          "9106:   return invalidParams",
          "9107:  }",
          "9108:  return nil",
          "9109: }",
          "9112: func (s *VeevaSourceProperties) SetObject(v string) *VeevaSourceProperties {",
          "9113:  s.Object = &v",
          "9114:  return s",
          "9115: }",
          "9118: type ZendeskConnectorProfileCredentials struct {",
          "9119:  _ struct{} `type:\"structure\"`",
          "9122:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "9127:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "9133:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "9137:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "9138: }",
          "9141: func (s ZendeskConnectorProfileCredentials) String() string {",
          "9142:  return awsutil.Prettify(s)",
          "9143: }",
          "9146: func (s ZendeskConnectorProfileCredentials) GoString() string {",
          "9147:  return s.String()",
          "9148: }",
          "9151: func (s *ZendeskConnectorProfileCredentials) Validate() error {",
          "9152:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileCredentials\"}",
          "9153:  if s.ClientId == nil {",
          "9154:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "9155:  }",
          "9156:  if s.ClientSecret == nil {",
          "9157:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "9158:  }",
          "9160:  if invalidParams.Len() > 0 {",
          "9161:   return invalidParams",
          "9162:  }",
          "9163:  return nil",
          "9164: }",
          "9167: func (s *ZendeskConnectorProfileCredentials) SetAccessToken(v string) *ZendeskConnectorProfileCredentials {",
          "9168:  s.AccessToken = &v",
          "9169:  return s",
          "9170: }",
          "9173: func (s *ZendeskConnectorProfileCredentials) SetClientId(v string) *ZendeskConnectorProfileCredentials {",
          "9174:  s.ClientId = &v",
          "9175:  return s",
          "9176: }",
          "9179: func (s *ZendeskConnectorProfileCredentials) SetClientSecret(v string) *ZendeskConnectorProfileCredentials {",
          "9180:  s.ClientSecret = &v",
          "9181:  return s",
          "9182: }",
          "9185: func (s *ZendeskConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *ZendeskConnectorProfileCredentials {",
          "9186:  s.OAuthRequest = v",
          "9187:  return s",
          "9188: }",
          "9191: type ZendeskConnectorProfileProperties struct {",
          "9192:  _ struct{} `type:\"structure\"`",
          "9197:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9198: }",
          "9201: func (s ZendeskConnectorProfileProperties) String() string {",
          "9202:  return awsutil.Prettify(s)",
          "9203: }",
          "9206: func (s ZendeskConnectorProfileProperties) GoString() string {",
          "9207:  return s.String()",
          "9208: }",
          "9211: func (s *ZendeskConnectorProfileProperties) Validate() error {",
          "9212:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileProperties\"}",
          "9213:  if s.InstanceUrl == nil {",
          "9214:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9215:  }",
          "9217:  if invalidParams.Len() > 0 {",
          "9218:   return invalidParams",
          "9219:  }",
          "9220:  return nil",
          "9221: }",
          "9224: func (s *ZendeskConnectorProfileProperties) SetInstanceUrl(v string) *ZendeskConnectorProfileProperties {",
          "9225:  s.InstanceUrl = &v",
          "9226:  return s",
          "9227: }",
          "9230: type ZendeskMetadata struct {",
          "9231:  _ struct{} `type:\"structure\"`",
          "9234:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "9235: }",
          "9238: func (s ZendeskMetadata) String() string {",
          "9239:  return awsutil.Prettify(s)",
          "9240: }",
          "9243: func (s ZendeskMetadata) GoString() string {",
          "9244:  return s.String()",
          "9245: }",
          "9248: func (s *ZendeskMetadata) SetOAuthScopes(v []*string) *ZendeskMetadata {",
          "9249:  s.OAuthScopes = v",
          "9250:  return s",
          "9251: }",
          "9254: type ZendeskSourceProperties struct {",
          "9255:  _ struct{} `type:\"structure\"`",
          "9260:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9261: }",
          "9264: func (s ZendeskSourceProperties) String() string {",
          "9265:  return awsutil.Prettify(s)",
          "9266: }",
          "9269: func (s ZendeskSourceProperties) GoString() string {",
          "9270:  return s.String()",
          "9271: }",
          "9274: func (s *ZendeskSourceProperties) Validate() error {",
          "9275:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskSourceProperties\"}",
          "9276:  if s.Object == nil {",
          "9277:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9278:  }",
          "9280:  if invalidParams.Len() > 0 {",
          "9281:   return invalidParams",
          "9282:  }",
          "9283:  return nil",
          "9284: }",
          "9287: func (s *ZendeskSourceProperties) SetObject(v string) *ZendeskSourceProperties {",
          "9288:  s.Object = &v",
          "9289:  return s",
          "9290: }",
          "9292: const (",
          "9294:  AggregationTypeNone = \"None\"",
          "9297:  AggregationTypeSingleFile = \"SingleFile\"",
          "9298: )",
          "9301: func AggregationType_Values() []string {",
          "9302:  return []string{",
          "9303:   AggregationTypeNone,",
          "9304:   AggregationTypeSingleFile,",
          "9305:  }",
          "9306: }",
          "9308: const (",
          "9310:  AmplitudeConnectorOperatorBetween = \"BETWEEN\"",
          "9311: )",
          "9314: func AmplitudeConnectorOperator_Values() []string {",
          "9315:  return []string{",
          "9316:   AmplitudeConnectorOperatorBetween,",
          "9317:  }",
          "9318: }",
          "9320: const (",
          "9322:  ConnectionModePublic = \"Public\"",
          "9325:  ConnectionModePrivate = \"Private\"",
          "9326: )",
          "9329: func ConnectionMode_Values() []string {",
          "9330:  return []string{",
          "9331:   ConnectionModePublic,",
          "9332:   ConnectionModePrivate,",
          "9333:  }",
          "9334: }",
          "9336: const (",
          "9338:  ConnectorTypeSalesforce = \"Salesforce\"",
          "9341:  ConnectorTypeSingular = \"Singular\"",
          "9344:  ConnectorTypeSlack = \"Slack\"",
          "9347:  ConnectorTypeRedshift = \"Redshift\"",
          "9350:  ConnectorTypeS3 = \"S3\"",
          "9353:  ConnectorTypeMarketo = \"Marketo\"",
          "9356:  ConnectorTypeGoogleanalytics = \"Googleanalytics\"",
          "9359:  ConnectorTypeZendesk = \"Zendesk\"",
          "9362:  ConnectorTypeServicenow = \"Servicenow\"",
          "9365:  ConnectorTypeDatadog = \"Datadog\"",
          "9368:  ConnectorTypeTrendmicro = \"Trendmicro\"",
          "9371:  ConnectorTypeSnowflake = \"Snowflake\"",
          "9374:  ConnectorTypeDynatrace = \"Dynatrace\"",
          "9377:  ConnectorTypeInfornexus = \"Infornexus\"",
          "9380:  ConnectorTypeAmplitude = \"Amplitude\"",
          "9383:  ConnectorTypeVeeva = \"Veeva\"",
          "9386:  ConnectorTypeEventBridge = \"EventBridge\"",
          "9387: )",
          "9390: func ConnectorType_Values() []string {",
          "9391:  return []string{",
          "9392:   ConnectorTypeSalesforce,",
          "9393:   ConnectorTypeSingular,",
          "9394:   ConnectorTypeSlack,",
          "9395:   ConnectorTypeRedshift,",
          "9396:   ConnectorTypeS3,",
          "9397:   ConnectorTypeMarketo,",
          "9398:   ConnectorTypeGoogleanalytics,",
          "9399:   ConnectorTypeZendesk,",
          "9400:   ConnectorTypeServicenow,",
          "9401:   ConnectorTypeDatadog,",
          "9402:   ConnectorTypeTrendmicro,",
          "9403:   ConnectorTypeSnowflake,",
          "9404:   ConnectorTypeDynatrace,",
          "9405:   ConnectorTypeInfornexus,",
          "9406:   ConnectorTypeAmplitude,",
          "9407:   ConnectorTypeVeeva,",
          "9408:   ConnectorTypeEventBridge,",
          "9409:  }",
          "9410: }",
          "9412: const (",
          "9414:  DataPullModeIncremental = \"Incremental\"",
          "9417:  DataPullModeComplete = \"Complete\"",
          "9418: )",
          "9421: func DataPullMode_Values() []string {",
          "9422:  return []string{",
          "9423:   DataPullModeIncremental,",
          "9424:   DataPullModeComplete,",
          "9425:  }",
          "9426: }",
          "9428: const (",
          "9430:  DatadogConnectorOperatorProjection = \"PROJECTION\"",
          "9433:  DatadogConnectorOperatorBetween = \"BETWEEN\"",
          "9436:  DatadogConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9439:  DatadogConnectorOperatorAddition = \"ADDITION\"",
          "9442:  DatadogConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9445:  DatadogConnectorOperatorDivision = \"DIVISION\"",
          "9448:  DatadogConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9451:  DatadogConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9454:  DatadogConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9457:  DatadogConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9460:  DatadogConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9463:  DatadogConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9466:  DatadogConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9469:  DatadogConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9472:  DatadogConnectorOperatorNoOp = \"NO_OP\"",
          "9473: )",
          "9476: func DatadogConnectorOperator_Values() []string {",
          "9477:  return []string{",
          "9478:   DatadogConnectorOperatorProjection,",
          "9479:   DatadogConnectorOperatorBetween,",
          "9480:   DatadogConnectorOperatorEqualTo,",
          "9481:   DatadogConnectorOperatorAddition,",
          "9482:   DatadogConnectorOperatorMultiplication,",
          "9483:   DatadogConnectorOperatorDivision,",
          "9484:   DatadogConnectorOperatorSubtraction,",
          "9485:   DatadogConnectorOperatorMaskAll,",
          "9486:   DatadogConnectorOperatorMaskFirstN,",
          "9487:   DatadogConnectorOperatorMaskLastN,",
          "9488:   DatadogConnectorOperatorValidateNonNull,",
          "9489:   DatadogConnectorOperatorValidateNonZero,",
          "9490:   DatadogConnectorOperatorValidateNonNegative,",
          "9491:   DatadogConnectorOperatorValidateNumeric,",
          "9492:   DatadogConnectorOperatorNoOp,",
          "9493:  }",
          "9494: }",
          "9496: const (",
          "9498:  DynatraceConnectorOperatorProjection = \"PROJECTION\"",
          "9501:  DynatraceConnectorOperatorBetween = \"BETWEEN\"",
          "9504:  DynatraceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9507:  DynatraceConnectorOperatorAddition = \"ADDITION\"",
          "9510:  DynatraceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9513:  DynatraceConnectorOperatorDivision = \"DIVISION\"",
          "9516:  DynatraceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9519:  DynatraceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9522:  DynatraceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9525:  DynatraceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9528:  DynatraceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9531:  DynatraceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9534:  DynatraceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9537:  DynatraceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9540:  DynatraceConnectorOperatorNoOp = \"NO_OP\"",
          "9541: )",
          "9544: func DynatraceConnectorOperator_Values() []string {",
          "9545:  return []string{",
          "9546:   DynatraceConnectorOperatorProjection,",
          "9547:   DynatraceConnectorOperatorBetween,",
          "9548:   DynatraceConnectorOperatorEqualTo,",
          "9549:   DynatraceConnectorOperatorAddition,",
          "9550:   DynatraceConnectorOperatorMultiplication,",
          "9551:   DynatraceConnectorOperatorDivision,",
          "9552:   DynatraceConnectorOperatorSubtraction,",
          "9553:   DynatraceConnectorOperatorMaskAll,",
          "9554:   DynatraceConnectorOperatorMaskFirstN,",
          "9555:   DynatraceConnectorOperatorMaskLastN,",
          "9556:   DynatraceConnectorOperatorValidateNonNull,",
          "9557:   DynatraceConnectorOperatorValidateNonZero,",
          "9558:   DynatraceConnectorOperatorValidateNonNegative,",
          "9559:   DynatraceConnectorOperatorValidateNumeric,",
          "9560:   DynatraceConnectorOperatorNoOp,",
          "9561:  }",
          "9562: }",
          "9564: const (",
          "9566:  ExecutionStatusInProgress = \"InProgress\"",
          "9569:  ExecutionStatusSuccessful = \"Successful\"",
          "9572:  ExecutionStatusError = \"Error\"",
          "9573: )",
          "9576: func ExecutionStatus_Values() []string {",
          "9577:  return []string{",
          "9578:   ExecutionStatusInProgress,",
          "9579:   ExecutionStatusSuccessful,",
          "9580:   ExecutionStatusError,",
          "9581:  }",
          "9582: }",
          "9584: const (",
          "9586:  FileTypeCsv = \"CSV\"",
          "9589:  FileTypeJson = \"JSON\"",
          "9592:  FileTypeParquet = \"PARQUET\"",
          "9593: )",
          "9596: func FileType_Values() []string {",
          "9597:  return []string{",
          "9598:   FileTypeCsv,",
          "9599:   FileTypeJson,",
          "9600:   FileTypeParquet,",
          "9601:  }",
          "9602: }",
          "9604: const (",
          "9606:  FlowStatusActive = \"Active\"",
          "9609:  FlowStatusDeprecated = \"Deprecated\"",
          "9612:  FlowStatusDeleted = \"Deleted\"",
          "9615:  FlowStatusDraft = \"Draft\"",
          "9618:  FlowStatusErrored = \"Errored\"",
          "9621:  FlowStatusSuspended = \"Suspended\"",
          "9622: )",
          "9625: func FlowStatus_Values() []string {",
          "9626:  return []string{",
          "9627:   FlowStatusActive,",
          "9628:   FlowStatusDeprecated,",
          "9629:   FlowStatusDeleted,",
          "9630:   FlowStatusDraft,",
          "9631:   FlowStatusErrored,",
          "9632:   FlowStatusSuspended,",
          "9633:  }",
          "9634: }",
          "9636: const (",
          "9638:  GoogleAnalyticsConnectorOperatorProjection = \"PROJECTION\"",
          "9641:  GoogleAnalyticsConnectorOperatorBetween = \"BETWEEN\"",
          "9642: )",
          "9645: func GoogleAnalyticsConnectorOperator_Values() []string {",
          "9646:  return []string{",
          "9647:   GoogleAnalyticsConnectorOperatorProjection,",
          "9648:   GoogleAnalyticsConnectorOperatorBetween,",
          "9649:  }",
          "9650: }",
          "9652: const (",
          "9654:  InforNexusConnectorOperatorProjection = \"PROJECTION\"",
          "9657:  InforNexusConnectorOperatorBetween = \"BETWEEN\"",
          "9660:  InforNexusConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9663:  InforNexusConnectorOperatorAddition = \"ADDITION\"",
          "9666:  InforNexusConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9669:  InforNexusConnectorOperatorDivision = \"DIVISION\"",
          "9672:  InforNexusConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9675:  InforNexusConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9678:  InforNexusConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9681:  InforNexusConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9684:  InforNexusConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9687:  InforNexusConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9690:  InforNexusConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9693:  InforNexusConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9696:  InforNexusConnectorOperatorNoOp = \"NO_OP\"",
          "9697: )",
          "9700: func InforNexusConnectorOperator_Values() []string {",
          "9701:  return []string{",
          "9702:   InforNexusConnectorOperatorProjection,",
          "9703:   InforNexusConnectorOperatorBetween,",
          "9704:   InforNexusConnectorOperatorEqualTo,",
          "9705:   InforNexusConnectorOperatorAddition,",
          "9706:   InforNexusConnectorOperatorMultiplication,",
          "9707:   InforNexusConnectorOperatorDivision,",
          "9708:   InforNexusConnectorOperatorSubtraction,",
          "9709:   InforNexusConnectorOperatorMaskAll,",
          "9710:   InforNexusConnectorOperatorMaskFirstN,",
          "9711:   InforNexusConnectorOperatorMaskLastN,",
          "9712:   InforNexusConnectorOperatorValidateNonNull,",
          "9713:   InforNexusConnectorOperatorValidateNonZero,",
          "9714:   InforNexusConnectorOperatorValidateNonNegative,",
          "9715:   InforNexusConnectorOperatorValidateNumeric,",
          "9716:   InforNexusConnectorOperatorNoOp,",
          "9717:  }",
          "9718: }",
          "9720: const (",
          "9722:  MarketoConnectorOperatorProjection = \"PROJECTION\"",
          "9725:  MarketoConnectorOperatorLessThan = \"LESS_THAN\"",
          "9728:  MarketoConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "9731:  MarketoConnectorOperatorBetween = \"BETWEEN\"",
          "9734:  MarketoConnectorOperatorAddition = \"ADDITION\"",
          "9737:  MarketoConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9740:  MarketoConnectorOperatorDivision = \"DIVISION\"",
          "9743:  MarketoConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9746:  MarketoConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9749:  MarketoConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9752:  MarketoConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9755:  MarketoConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9758:  MarketoConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9761:  MarketoConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9764:  MarketoConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9767:  MarketoConnectorOperatorNoOp = \"NO_OP\"",
          "9768: )",
          "9771: func MarketoConnectorOperator_Values() []string {",
          "9772:  return []string{",
          "9773:   MarketoConnectorOperatorProjection,",
          "9774:   MarketoConnectorOperatorLessThan,",
          "9775:   MarketoConnectorOperatorGreaterThan,",
          "9776:   MarketoConnectorOperatorBetween,",
          "9777:   MarketoConnectorOperatorAddition,",
          "9778:   MarketoConnectorOperatorMultiplication,",
          "9779:   MarketoConnectorOperatorDivision,",
          "9780:   MarketoConnectorOperatorSubtraction,",
          "9781:   MarketoConnectorOperatorMaskAll,",
          "9782:   MarketoConnectorOperatorMaskFirstN,",
          "9783:   MarketoConnectorOperatorMaskLastN,",
          "9784:   MarketoConnectorOperatorValidateNonNull,",
          "9785:   MarketoConnectorOperatorValidateNonZero,",
          "9786:   MarketoConnectorOperatorValidateNonNegative,",
          "9787:   MarketoConnectorOperatorValidateNumeric,",
          "9788:   MarketoConnectorOperatorNoOp,",
          "9789:  }",
          "9790: }",
          "9792: const (",
          "9794:  OperatorProjection = \"PROJECTION\"",
          "9797:  OperatorLessThan = \"LESS_THAN\"",
          "9800:  OperatorGreaterThan = \"GREATER_THAN\"",
          "9803:  OperatorContains = \"CONTAINS\"",
          "9806:  OperatorBetween = \"BETWEEN\"",
          "9809:  OperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "9812:  OperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "9815:  OperatorEqualTo = \"EQUAL_TO\"",
          "9818:  OperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "9821:  OperatorAddition = \"ADDITION\"",
          "9824:  OperatorMultiplication = \"MULTIPLICATION\"",
          "9827:  OperatorDivision = \"DIVISION\"",
          "9830:  OperatorSubtraction = \"SUBTRACTION\"",
          "9833:  OperatorMaskAll = \"MASK_ALL\"",
          "9836:  OperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9839:  OperatorMaskLastN = \"MASK_LAST_N\"",
          "9842:  OperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9845:  OperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9848:  OperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9851:  OperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9854:  OperatorNoOp = \"NO_OP\"",
          "9855: )",
          "9858: func Operator_Values() []string {",
          "9859:  return []string{",
          "9860:   OperatorProjection,",
          "9861:   OperatorLessThan,",
          "9862:   OperatorGreaterThan,",
          "9863:   OperatorContains,",
          "9864:   OperatorBetween,",
          "9865:   OperatorLessThanOrEqualTo,",
          "9866:   OperatorGreaterThanOrEqualTo,",
          "9867:   OperatorEqualTo,",
          "9868:   OperatorNotEqualTo,",
          "9869:   OperatorAddition,",
          "9870:   OperatorMultiplication,",
          "9871:   OperatorDivision,",
          "9872:   OperatorSubtraction,",
          "9873:   OperatorMaskAll,",
          "9874:   OperatorMaskFirstN,",
          "9875:   OperatorMaskLastN,",
          "9876:   OperatorValidateNonNull,",
          "9877:   OperatorValidateNonZero,",
          "9878:   OperatorValidateNonNegative,",
          "9879:   OperatorValidateNumeric,",
          "9880:   OperatorNoOp,",
          "9881:  }",
          "9882: }",
          "9884: const (",
          "9886:  OperatorPropertiesKeysValue = \"VALUE\"",
          "9889:  OperatorPropertiesKeysValues = \"VALUES\"",
          "9892:  OperatorPropertiesKeysDataType = \"DATA_TYPE\"",
          "9895:  OperatorPropertiesKeysUpperBound = \"UPPER_BOUND\"",
          "9898:  OperatorPropertiesKeysLowerBound = \"LOWER_BOUND\"",
          "9901:  OperatorPropertiesKeysSourceDataType = \"SOURCE_DATA_TYPE\"",
          "9904:  OperatorPropertiesKeysDestinationDataType = \"DESTINATION_DATA_TYPE\"",
          "9907:  OperatorPropertiesKeysValidationAction = \"VALIDATION_ACTION\"",
          "9910:  OperatorPropertiesKeysMaskValue = \"MASK_VALUE\"",
          "9913:  OperatorPropertiesKeysMaskLength = \"MASK_LENGTH\"",
          "9916:  OperatorPropertiesKeysTruncateLength = \"TRUNCATE_LENGTH\"",
          "9919:  OperatorPropertiesKeysMathOperationFieldsOrder = \"MATH_OPERATION_FIELDS_ORDER\"",
          "9922:  OperatorPropertiesKeysConcatFormat = \"CONCAT_FORMAT\"",
          "9925:  OperatorPropertiesKeysSubfieldCategoryMap = \"SUBFIELD_CATEGORY_MAP\"",
          "9926: )",
          "9929: func OperatorPropertiesKeys_Values() []string {",
          "9930:  return []string{",
          "9931:   OperatorPropertiesKeysValue,",
          "9932:   OperatorPropertiesKeysValues,",
          "9933:   OperatorPropertiesKeysDataType,",
          "9934:   OperatorPropertiesKeysUpperBound,",
          "9935:   OperatorPropertiesKeysLowerBound,",
          "9936:   OperatorPropertiesKeysSourceDataType,",
          "9937:   OperatorPropertiesKeysDestinationDataType,",
          "9938:   OperatorPropertiesKeysValidationAction,",
          "9939:   OperatorPropertiesKeysMaskValue,",
          "9940:   OperatorPropertiesKeysMaskLength,",
          "9941:   OperatorPropertiesKeysTruncateLength,",
          "9942:   OperatorPropertiesKeysMathOperationFieldsOrder,",
          "9943:   OperatorPropertiesKeysConcatFormat,",
          "9944:   OperatorPropertiesKeysSubfieldCategoryMap,",
          "9945:  }",
          "9946: }",
          "9948: const (",
          "9950:  PrefixFormatYear = \"YEAR\"",
          "9953:  PrefixFormatMonth = \"MONTH\"",
          "9956:  PrefixFormatDay = \"DAY\"",
          "9959:  PrefixFormatHour = \"HOUR\"",
          "9962:  PrefixFormatMinute = \"MINUTE\"",
          "9963: )",
          "9966: func PrefixFormat_Values() []string {",
          "9967:  return []string{",
          "9968:   PrefixFormatYear,",
          "9969:   PrefixFormatMonth,",
          "9970:   PrefixFormatDay,",
          "9971:   PrefixFormatHour,",
          "9972:   PrefixFormatMinute,",
          "9973:  }",
          "9974: }",
          "9976: const (",
          "9978:  PrefixTypeFilename = \"FILENAME\"",
          "9981:  PrefixTypePath = \"PATH\"",
          "9984:  PrefixTypePathAndFilename = \"PATH_AND_FILENAME\"",
          "9985: )",
          "9988: func PrefixType_Values() []string {",
          "9989:  return []string{",
          "9990:   PrefixTypeFilename,",
          "9991:   PrefixTypePath,",
          "9992:   PrefixTypePathAndFilename,",
          "9993:  }",
          "9994: }",
          "9996: const (",
          "9998:  S3ConnectorOperatorProjection = \"PROJECTION\"",
          "10001:  S3ConnectorOperatorLessThan = \"LESS_THAN\"",
          "10004:  S3ConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10007:  S3ConnectorOperatorBetween = \"BETWEEN\"",
          "10010:  S3ConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10013:  S3ConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10016:  S3ConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10019:  S3ConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10022:  S3ConnectorOperatorAddition = \"ADDITION\"",
          "10025:  S3ConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10028:  S3ConnectorOperatorDivision = \"DIVISION\"",
          "10031:  S3ConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10034:  S3ConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10037:  S3ConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10040:  S3ConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10043:  S3ConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10046:  S3ConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10049:  S3ConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10052:  S3ConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10055:  S3ConnectorOperatorNoOp = \"NO_OP\"",
          "10056: )",
          "10059: func S3ConnectorOperator_Values() []string {",
          "10060:  return []string{",
          "10061:   S3ConnectorOperatorProjection,",
          "10062:   S3ConnectorOperatorLessThan,",
          "10063:   S3ConnectorOperatorGreaterThan,",
          "10064:   S3ConnectorOperatorBetween,",
          "10065:   S3ConnectorOperatorLessThanOrEqualTo,",
          "10066:   S3ConnectorOperatorGreaterThanOrEqualTo,",
          "10067:   S3ConnectorOperatorEqualTo,",
          "10068:   S3ConnectorOperatorNotEqualTo,",
          "10069:   S3ConnectorOperatorAddition,",
          "10070:   S3ConnectorOperatorMultiplication,",
          "10071:   S3ConnectorOperatorDivision,",
          "10072:   S3ConnectorOperatorSubtraction,",
          "10073:   S3ConnectorOperatorMaskAll,",
          "10074:   S3ConnectorOperatorMaskFirstN,",
          "10075:   S3ConnectorOperatorMaskLastN,",
          "10076:   S3ConnectorOperatorValidateNonNull,",
          "10077:   S3ConnectorOperatorValidateNonZero,",
          "10078:   S3ConnectorOperatorValidateNonNegative,",
          "10079:   S3ConnectorOperatorValidateNumeric,",
          "10080:   S3ConnectorOperatorNoOp,",
          "10081:  }",
          "10082: }",
          "10084: const (",
          "10086:  SalesforceConnectorOperatorProjection = \"PROJECTION\"",
          "10089:  SalesforceConnectorOperatorLessThan = \"LESS_THAN\"",
          "10092:  SalesforceConnectorOperatorContains = \"CONTAINS\"",
          "10095:  SalesforceConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10098:  SalesforceConnectorOperatorBetween = \"BETWEEN\"",
          "10101:  SalesforceConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10104:  SalesforceConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10107:  SalesforceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10110:  SalesforceConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10113:  SalesforceConnectorOperatorAddition = \"ADDITION\"",
          "10116:  SalesforceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10119:  SalesforceConnectorOperatorDivision = \"DIVISION\"",
          "10122:  SalesforceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10125:  SalesforceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10128:  SalesforceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10131:  SalesforceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10134:  SalesforceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10137:  SalesforceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10140:  SalesforceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10143:  SalesforceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10146:  SalesforceConnectorOperatorNoOp = \"NO_OP\"",
          "10147: )",
          "10150: func SalesforceConnectorOperator_Values() []string {",
          "10151:  return []string{",
          "10152:   SalesforceConnectorOperatorProjection,",
          "10153:   SalesforceConnectorOperatorLessThan,",
          "10154:   SalesforceConnectorOperatorContains,",
          "10155:   SalesforceConnectorOperatorGreaterThan,",
          "10156:   SalesforceConnectorOperatorBetween,",
          "10157:   SalesforceConnectorOperatorLessThanOrEqualTo,",
          "10158:   SalesforceConnectorOperatorGreaterThanOrEqualTo,",
          "10159:   SalesforceConnectorOperatorEqualTo,",
          "10160:   SalesforceConnectorOperatorNotEqualTo,",
          "10161:   SalesforceConnectorOperatorAddition,",
          "10162:   SalesforceConnectorOperatorMultiplication,",
          "10163:   SalesforceConnectorOperatorDivision,",
          "10164:   SalesforceConnectorOperatorSubtraction,",
          "10165:   SalesforceConnectorOperatorMaskAll,",
          "10166:   SalesforceConnectorOperatorMaskFirstN,",
          "10167:   SalesforceConnectorOperatorMaskLastN,",
          "10168:   SalesforceConnectorOperatorValidateNonNull,",
          "10169:   SalesforceConnectorOperatorValidateNonZero,",
          "10170:   SalesforceConnectorOperatorValidateNonNegative,",
          "10171:   SalesforceConnectorOperatorValidateNumeric,",
          "10172:   SalesforceConnectorOperatorNoOp,",
          "10173:  }",
          "10174: }",
          "10176: const (",
          "10178:  ScheduleFrequencyTypeByminute = \"BYMINUTE\"",
          "10181:  ScheduleFrequencyTypeHourly = \"HOURLY\"",
          "10184:  ScheduleFrequencyTypeDaily = \"DAILY\"",
          "10187:  ScheduleFrequencyTypeWeekly = \"WEEKLY\"",
          "10190:  ScheduleFrequencyTypeMonthly = \"MONTHLY\"",
          "10193:  ScheduleFrequencyTypeOnce = \"ONCE\"",
          "10194: )",
          "10197: func ScheduleFrequencyType_Values() []string {",
          "10198:  return []string{",
          "10199:   ScheduleFrequencyTypeByminute,",
          "10200:   ScheduleFrequencyTypeHourly,",
          "10201:   ScheduleFrequencyTypeDaily,",
          "10202:   ScheduleFrequencyTypeWeekly,",
          "10203:   ScheduleFrequencyTypeMonthly,",
          "10204:   ScheduleFrequencyTypeOnce,",
          "10205:  }",
          "10206: }",
          "10208: const (",
          "10210:  ServiceNowConnectorOperatorProjection = \"PROJECTION\"",
          "10213:  ServiceNowConnectorOperatorContains = \"CONTAINS\"",
          "10216:  ServiceNowConnectorOperatorLessThan = \"LESS_THAN\"",
          "10219:  ServiceNowConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10222:  ServiceNowConnectorOperatorBetween = \"BETWEEN\"",
          "10225:  ServiceNowConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10228:  ServiceNowConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10231:  ServiceNowConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10234:  ServiceNowConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10237:  ServiceNowConnectorOperatorAddition = \"ADDITION\"",
          "10240:  ServiceNowConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10243:  ServiceNowConnectorOperatorDivision = \"DIVISION\"",
          "10246:  ServiceNowConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10249:  ServiceNowConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10252:  ServiceNowConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10255:  ServiceNowConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10258:  ServiceNowConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10261:  ServiceNowConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10264:  ServiceNowConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10267:  ServiceNowConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10270:  ServiceNowConnectorOperatorNoOp = \"NO_OP\"",
          "10271: )",
          "10274: func ServiceNowConnectorOperator_Values() []string {",
          "10275:  return []string{",
          "10276:   ServiceNowConnectorOperatorProjection,",
          "10277:   ServiceNowConnectorOperatorContains,",
          "10278:   ServiceNowConnectorOperatorLessThan,",
          "10279:   ServiceNowConnectorOperatorGreaterThan,",
          "10280:   ServiceNowConnectorOperatorBetween,",
          "10281:   ServiceNowConnectorOperatorLessThanOrEqualTo,",
          "10282:   ServiceNowConnectorOperatorGreaterThanOrEqualTo,",
          "10283:   ServiceNowConnectorOperatorEqualTo,",
          "10284:   ServiceNowConnectorOperatorNotEqualTo,",
          "10285:   ServiceNowConnectorOperatorAddition,",
          "10286:   ServiceNowConnectorOperatorMultiplication,",
          "10287:   ServiceNowConnectorOperatorDivision,",
          "10288:   ServiceNowConnectorOperatorSubtraction,",
          "10289:   ServiceNowConnectorOperatorMaskAll,",
          "10290:   ServiceNowConnectorOperatorMaskFirstN,",
          "10291:   ServiceNowConnectorOperatorMaskLastN,",
          "10292:   ServiceNowConnectorOperatorValidateNonNull,",
          "10293:   ServiceNowConnectorOperatorValidateNonZero,",
          "10294:   ServiceNowConnectorOperatorValidateNonNegative,",
          "10295:   ServiceNowConnectorOperatorValidateNumeric,",
          "10296:   ServiceNowConnectorOperatorNoOp,",
          "10297:  }",
          "10298: }",
          "10300: const (",
          "10302:  SingularConnectorOperatorProjection = \"PROJECTION\"",
          "10305:  SingularConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10308:  SingularConnectorOperatorAddition = \"ADDITION\"",
          "10311:  SingularConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10314:  SingularConnectorOperatorDivision = \"DIVISION\"",
          "10317:  SingularConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10320:  SingularConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10323:  SingularConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10326:  SingularConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10329:  SingularConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10332:  SingularConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10335:  SingularConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10338:  SingularConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10341:  SingularConnectorOperatorNoOp = \"NO_OP\"",
          "10342: )",
          "10345: func SingularConnectorOperator_Values() []string {",
          "10346:  return []string{",
          "10347:   SingularConnectorOperatorProjection,",
          "10348:   SingularConnectorOperatorEqualTo,",
          "10349:   SingularConnectorOperatorAddition,",
          "10350:   SingularConnectorOperatorMultiplication,",
          "10351:   SingularConnectorOperatorDivision,",
          "10352:   SingularConnectorOperatorSubtraction,",
          "10353:   SingularConnectorOperatorMaskAll,",
          "10354:   SingularConnectorOperatorMaskFirstN,",
          "10355:   SingularConnectorOperatorMaskLastN,",
          "10356:   SingularConnectorOperatorValidateNonNull,",
          "10357:   SingularConnectorOperatorValidateNonZero,",
          "10358:   SingularConnectorOperatorValidateNonNegative,",
          "10359:   SingularConnectorOperatorValidateNumeric,",
          "10360:   SingularConnectorOperatorNoOp,",
          "10361:  }",
          "10362: }",
          "10364: const (",
          "10366:  SlackConnectorOperatorProjection = \"PROJECTION\"",
          "10369:  SlackConnectorOperatorLessThan = \"LESS_THAN\"",
          "10372:  SlackConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10375:  SlackConnectorOperatorBetween = \"BETWEEN\"",
          "10378:  SlackConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10381:  SlackConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10384:  SlackConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10387:  SlackConnectorOperatorAddition = \"ADDITION\"",
          "10390:  SlackConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10393:  SlackConnectorOperatorDivision = \"DIVISION\"",
          "10396:  SlackConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10399:  SlackConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10402:  SlackConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10405:  SlackConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10408:  SlackConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10411:  SlackConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10414:  SlackConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10417:  SlackConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10420:  SlackConnectorOperatorNoOp = \"NO_OP\"",
          "10421: )",
          "10424: func SlackConnectorOperator_Values() []string {",
          "10425:  return []string{",
          "10426:   SlackConnectorOperatorProjection,",
          "10427:   SlackConnectorOperatorLessThan,",
          "10428:   SlackConnectorOperatorGreaterThan,",
          "10429:   SlackConnectorOperatorBetween,",
          "10430:   SlackConnectorOperatorLessThanOrEqualTo,",
          "10431:   SlackConnectorOperatorGreaterThanOrEqualTo,",
          "10432:   SlackConnectorOperatorEqualTo,",
          "10433:   SlackConnectorOperatorAddition,",
          "10434:   SlackConnectorOperatorMultiplication,",
          "10435:   SlackConnectorOperatorDivision,",
          "10436:   SlackConnectorOperatorSubtraction,",
          "10437:   SlackConnectorOperatorMaskAll,",
          "10438:   SlackConnectorOperatorMaskFirstN,",
          "10439:   SlackConnectorOperatorMaskLastN,",
          "10440:   SlackConnectorOperatorValidateNonNull,",
          "10441:   SlackConnectorOperatorValidateNonZero,",
          "10442:   SlackConnectorOperatorValidateNonNegative,",
          "10443:   SlackConnectorOperatorValidateNumeric,",
          "10444:   SlackConnectorOperatorNoOp,",
          "10445:  }",
          "10446: }",
          "10448: const (",
          "10450:  TaskTypeArithmetic = \"Arithmetic\"",
          "10453:  TaskTypeFilter = \"Filter\"",
          "10456:  TaskTypeMap = \"Map\"",
          "10459:  TaskTypeMask = \"Mask\"",
          "10462:  TaskTypeMerge = \"Merge\"",
          "10465:  TaskTypeTruncate = \"Truncate\"",
          "10468:  TaskTypeValidate = \"Validate\"",
          "10469: )",
          "10472: func TaskType_Values() []string {",
          "10473:  return []string{",
          "10474:   TaskTypeArithmetic,",
          "10475:   TaskTypeFilter,",
          "10476:   TaskTypeMap,",
          "10477:   TaskTypeMask,",
          "10478:   TaskTypeMerge,",
          "10479:   TaskTypeTruncate,",
          "10480:   TaskTypeValidate,",
          "10481:  }",
          "10482: }",
          "10484: const (",
          "10486:  TrendmicroConnectorOperatorProjection = \"PROJECTION\"",
          "10489:  TrendmicroConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10492:  TrendmicroConnectorOperatorAddition = \"ADDITION\"",
          "10495:  TrendmicroConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10498:  TrendmicroConnectorOperatorDivision = \"DIVISION\"",
          "10501:  TrendmicroConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10504:  TrendmicroConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10507:  TrendmicroConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10510:  TrendmicroConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10513:  TrendmicroConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10516:  TrendmicroConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10519:  TrendmicroConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10522:  TrendmicroConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10525:  TrendmicroConnectorOperatorNoOp = \"NO_OP\"",
          "10526: )",
          "10529: func TrendmicroConnectorOperator_Values() []string {",
          "10530:  return []string{",
          "10531:   TrendmicroConnectorOperatorProjection,",
          "10532:   TrendmicroConnectorOperatorEqualTo,",
          "10533:   TrendmicroConnectorOperatorAddition,",
          "10534:   TrendmicroConnectorOperatorMultiplication,",
          "10535:   TrendmicroConnectorOperatorDivision,",
          "10536:   TrendmicroConnectorOperatorSubtraction,",
          "10537:   TrendmicroConnectorOperatorMaskAll,",
          "10538:   TrendmicroConnectorOperatorMaskFirstN,",
          "10539:   TrendmicroConnectorOperatorMaskLastN,",
          "10540:   TrendmicroConnectorOperatorValidateNonNull,",
          "10541:   TrendmicroConnectorOperatorValidateNonZero,",
          "10542:   TrendmicroConnectorOperatorValidateNonNegative,",
          "10543:   TrendmicroConnectorOperatorValidateNumeric,",
          "10544:   TrendmicroConnectorOperatorNoOp,",
          "10545:  }",
          "10546: }",
          "10548: const (",
          "10550:  TriggerTypeScheduled = \"Scheduled\"",
          "10553:  TriggerTypeEvent = \"Event\"",
          "10556:  TriggerTypeOnDemand = \"OnDemand\"",
          "10557: )",
          "10560: func TriggerType_Values() []string {",
          "10561:  return []string{",
          "10562:   TriggerTypeScheduled,",
          "10563:   TriggerTypeEvent,",
          "10564:   TriggerTypeOnDemand,",
          "10565:  }",
          "10566: }",
          "10568: const (",
          "10570:  VeevaConnectorOperatorProjection = \"PROJECTION\"",
          "10573:  VeevaConnectorOperatorLessThan = \"LESS_THAN\"",
          "10576:  VeevaConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10579:  VeevaConnectorOperatorContains = \"CONTAINS\"",
          "10582:  VeevaConnectorOperatorBetween = \"BETWEEN\"",
          "10585:  VeevaConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10588:  VeevaConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10591:  VeevaConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10594:  VeevaConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10597:  VeevaConnectorOperatorAddition = \"ADDITION\"",
          "10600:  VeevaConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10603:  VeevaConnectorOperatorDivision = \"DIVISION\"",
          "10606:  VeevaConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10609:  VeevaConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10612:  VeevaConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10615:  VeevaConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10618:  VeevaConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10621:  VeevaConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10624:  VeevaConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10627:  VeevaConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10630:  VeevaConnectorOperatorNoOp = \"NO_OP\"",
          "10631: )",
          "10634: func VeevaConnectorOperator_Values() []string {",
          "10635:  return []string{",
          "10636:   VeevaConnectorOperatorProjection,",
          "10637:   VeevaConnectorOperatorLessThan,",
          "10638:   VeevaConnectorOperatorGreaterThan,",
          "10639:   VeevaConnectorOperatorContains,",
          "10640:   VeevaConnectorOperatorBetween,",
          "10641:   VeevaConnectorOperatorLessThanOrEqualTo,",
          "10642:   VeevaConnectorOperatorGreaterThanOrEqualTo,",
          "10643:   VeevaConnectorOperatorEqualTo,",
          "10644:   VeevaConnectorOperatorNotEqualTo,",
          "10645:   VeevaConnectorOperatorAddition,",
          "10646:   VeevaConnectorOperatorMultiplication,",
          "10647:   VeevaConnectorOperatorDivision,",
          "10648:   VeevaConnectorOperatorSubtraction,",
          "10649:   VeevaConnectorOperatorMaskAll,",
          "10650:   VeevaConnectorOperatorMaskFirstN,",
          "10651:   VeevaConnectorOperatorMaskLastN,",
          "10652:   VeevaConnectorOperatorValidateNonNull,",
          "10653:   VeevaConnectorOperatorValidateNonZero,",
          "10654:   VeevaConnectorOperatorValidateNonNegative,",
          "10655:   VeevaConnectorOperatorValidateNumeric,",
          "10656:   VeevaConnectorOperatorNoOp,",
          "10657:  }",
          "10658: }",
          "10660: const (",
          "10662:  ZendeskConnectorOperatorProjection = \"PROJECTION\"",
          "10665:  ZendeskConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10668:  ZendeskConnectorOperatorAddition = \"ADDITION\"",
          "10671:  ZendeskConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10674:  ZendeskConnectorOperatorDivision = \"DIVISION\"",
          "10677:  ZendeskConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10680:  ZendeskConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10683:  ZendeskConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10686:  ZendeskConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10689:  ZendeskConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10692:  ZendeskConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10695:  ZendeskConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10698:  ZendeskConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10701:  ZendeskConnectorOperatorNoOp = \"NO_OP\"",
          "10702: )",
          "10705: func ZendeskConnectorOperator_Values() []string {",
          "10706:  return []string{",
          "10707:   ZendeskConnectorOperatorProjection,",
          "10708:   ZendeskConnectorOperatorGreaterThan,",
          "10709:   ZendeskConnectorOperatorAddition,",
          "10710:   ZendeskConnectorOperatorMultiplication,",
          "10711:   ZendeskConnectorOperatorDivision,",
          "10712:   ZendeskConnectorOperatorSubtraction,",
          "10713:   ZendeskConnectorOperatorMaskAll,",
          "10714:   ZendeskConnectorOperatorMaskFirstN,",
          "10715:   ZendeskConnectorOperatorMaskLastN,",
          "10716:   ZendeskConnectorOperatorValidateNonNull,",
          "10717:   ZendeskConnectorOperatorValidateNonZero,",
          "10718:   ZendeskConnectorOperatorValidateNonNegative,",
          "10719:   ZendeskConnectorOperatorValidateNumeric,",
          "10720:   ZendeskConnectorOperatorNoOp,",
          "10721:  }",
          "10722: }",
          "",
          "---------------"
        ],
        "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go": [
          "File: service/appflow/appflowiface/interface.go -> service/appflow/appflowiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package appflowiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/appflow\"",
          "15: )",
          "62: type AppflowAPI interface {",
          "63:  CreateConnectorProfile(*appflow.CreateConnectorProfileInput) (*appflow.CreateConnectorProfileOutput, error)",
          "64:  CreateConnectorProfileWithContext(aws.Context, *appflow.CreateConnectorProfileInput, ...request.Option) (*appflow.CreateConnectorProfileOutput, error)",
          "65:  CreateConnectorProfileRequest(*appflow.CreateConnectorProfileInput) (*request.Request, *appflow.CreateConnectorProfileOutput)",
          "67:  CreateFlow(*appflow.CreateFlowInput) (*appflow.CreateFlowOutput, error)",
          "68:  CreateFlowWithContext(aws.Context, *appflow.CreateFlowInput, ...request.Option) (*appflow.CreateFlowOutput, error)",
          "69:  CreateFlowRequest(*appflow.CreateFlowInput) (*request.Request, *appflow.CreateFlowOutput)",
          "71:  DeleteConnectorProfile(*appflow.DeleteConnectorProfileInput) (*appflow.DeleteConnectorProfileOutput, error)",
          "72:  DeleteConnectorProfileWithContext(aws.Context, *appflow.DeleteConnectorProfileInput, ...request.Option) (*appflow.DeleteConnectorProfileOutput, error)",
          "73:  DeleteConnectorProfileRequest(*appflow.DeleteConnectorProfileInput) (*request.Request, *appflow.DeleteConnectorProfileOutput)",
          "75:  DeleteFlow(*appflow.DeleteFlowInput) (*appflow.DeleteFlowOutput, error)",
          "76:  DeleteFlowWithContext(aws.Context, *appflow.DeleteFlowInput, ...request.Option) (*appflow.DeleteFlowOutput, error)",
          "77:  DeleteFlowRequest(*appflow.DeleteFlowInput) (*request.Request, *appflow.DeleteFlowOutput)",
          "79:  DescribeConnectorEntity(*appflow.DescribeConnectorEntityInput) (*appflow.DescribeConnectorEntityOutput, error)",
          "80:  DescribeConnectorEntityWithContext(aws.Context, *appflow.DescribeConnectorEntityInput, ...request.Option) (*appflow.DescribeConnectorEntityOutput, error)",
          "81:  DescribeConnectorEntityRequest(*appflow.DescribeConnectorEntityInput) (*request.Request, *appflow.DescribeConnectorEntityOutput)",
          "83:  DescribeConnectorProfiles(*appflow.DescribeConnectorProfilesInput) (*appflow.DescribeConnectorProfilesOutput, error)",
          "84:  DescribeConnectorProfilesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, ...request.Option) (*appflow.DescribeConnectorProfilesOutput, error)",
          "85:  DescribeConnectorProfilesRequest(*appflow.DescribeConnectorProfilesInput) (*request.Request, *appflow.DescribeConnectorProfilesOutput)",
          "87:  DescribeConnectorProfilesPages(*appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool) error",
          "88:  DescribeConnectorProfilesPagesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool, ...request.Option) error",
          "90:  DescribeConnectors(*appflow.DescribeConnectorsInput) (*appflow.DescribeConnectorsOutput, error)",
          "91:  DescribeConnectorsWithContext(aws.Context, *appflow.DescribeConnectorsInput, ...request.Option) (*appflow.DescribeConnectorsOutput, error)",
          "92:  DescribeConnectorsRequest(*appflow.DescribeConnectorsInput) (*request.Request, *appflow.DescribeConnectorsOutput)",
          "94:  DescribeConnectorsPages(*appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool) error",
          "95:  DescribeConnectorsPagesWithContext(aws.Context, *appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool, ...request.Option) error",
          "97:  DescribeFlow(*appflow.DescribeFlowInput) (*appflow.DescribeFlowOutput, error)",
          "98:  DescribeFlowWithContext(aws.Context, *appflow.DescribeFlowInput, ...request.Option) (*appflow.DescribeFlowOutput, error)",
          "99:  DescribeFlowRequest(*appflow.DescribeFlowInput) (*request.Request, *appflow.DescribeFlowOutput)",
          "101:  DescribeFlowExecutionRecords(*appflow.DescribeFlowExecutionRecordsInput) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "102:  DescribeFlowExecutionRecordsWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, ...request.Option) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "103:  DescribeFlowExecutionRecordsRequest(*appflow.DescribeFlowExecutionRecordsInput) (*request.Request, *appflow.DescribeFlowExecutionRecordsOutput)",
          "105:  DescribeFlowExecutionRecordsPages(*appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool) error",
          "106:  DescribeFlowExecutionRecordsPagesWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool, ...request.Option) error",
          "108:  ListConnectorEntities(*appflow.ListConnectorEntitiesInput) (*appflow.ListConnectorEntitiesOutput, error)",
          "109:  ListConnectorEntitiesWithContext(aws.Context, *appflow.ListConnectorEntitiesInput, ...request.Option) (*appflow.ListConnectorEntitiesOutput, error)",
          "110:  ListConnectorEntitiesRequest(*appflow.ListConnectorEntitiesInput) (*request.Request, *appflow.ListConnectorEntitiesOutput)",
          "112:  ListFlows(*appflow.ListFlowsInput) (*appflow.ListFlowsOutput, error)",
          "113:  ListFlowsWithContext(aws.Context, *appflow.ListFlowsInput, ...request.Option) (*appflow.ListFlowsOutput, error)",
          "114:  ListFlowsRequest(*appflow.ListFlowsInput) (*request.Request, *appflow.ListFlowsOutput)",
          "116:  ListFlowsPages(*appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool) error",
          "117:  ListFlowsPagesWithContext(aws.Context, *appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool, ...request.Option) error",
          "119:  ListTagsForResource(*appflow.ListTagsForResourceInput) (*appflow.ListTagsForResourceOutput, error)",
          "120:  ListTagsForResourceWithContext(aws.Context, *appflow.ListTagsForResourceInput, ...request.Option) (*appflow.ListTagsForResourceOutput, error)",
          "121:  ListTagsForResourceRequest(*appflow.ListTagsForResourceInput) (*request.Request, *appflow.ListTagsForResourceOutput)",
          "123:  StartFlow(*appflow.StartFlowInput) (*appflow.StartFlowOutput, error)",
          "124:  StartFlowWithContext(aws.Context, *appflow.StartFlowInput, ...request.Option) (*appflow.StartFlowOutput, error)",
          "125:  StartFlowRequest(*appflow.StartFlowInput) (*request.Request, *appflow.StartFlowOutput)",
          "127:  StopFlow(*appflow.StopFlowInput) (*appflow.StopFlowOutput, error)",
          "128:  StopFlowWithContext(aws.Context, *appflow.StopFlowInput, ...request.Option) (*appflow.StopFlowOutput, error)",
          "129:  StopFlowRequest(*appflow.StopFlowInput) (*request.Request, *appflow.StopFlowOutput)",
          "131:  TagResource(*appflow.TagResourceInput) (*appflow.TagResourceOutput, error)",
          "132:  TagResourceWithContext(aws.Context, *appflow.TagResourceInput, ...request.Option) (*appflow.TagResourceOutput, error)",
          "133:  TagResourceRequest(*appflow.TagResourceInput) (*request.Request, *appflow.TagResourceOutput)",
          "135:  UntagResource(*appflow.UntagResourceInput) (*appflow.UntagResourceOutput, error)",
          "136:  UntagResourceWithContext(aws.Context, *appflow.UntagResourceInput, ...request.Option) (*appflow.UntagResourceOutput, error)",
          "137:  UntagResourceRequest(*appflow.UntagResourceInput) (*request.Request, *appflow.UntagResourceOutput)",
          "139:  UpdateConnectorProfile(*appflow.UpdateConnectorProfileInput) (*appflow.UpdateConnectorProfileOutput, error)",
          "140:  UpdateConnectorProfileWithContext(aws.Context, *appflow.UpdateConnectorProfileInput, ...request.Option) (*appflow.UpdateConnectorProfileOutput, error)",
          "141:  UpdateConnectorProfileRequest(*appflow.UpdateConnectorProfileInput) (*request.Request, *appflow.UpdateConnectorProfileOutput)",
          "143:  UpdateFlow(*appflow.UpdateFlowInput) (*appflow.UpdateFlowOutput, error)",
          "144:  UpdateFlowWithContext(aws.Context, *appflow.UpdateFlowInput, ...request.Option) (*appflow.UpdateFlowOutput, error)",
          "145:  UpdateFlowRequest(*appflow.UpdateFlowInput) (*request.Request, *appflow.UpdateFlowOutput)",
          "146: }",
          "148: var _ AppflowAPI = (*appflow.Appflow)(nil)",
          "",
          "---------------"
        ],
        "service/appflow/doc.go||service/appflow/doc.go": [
          "File: service/appflow/doc.go -> service/appflow/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: package appflow",
          "",
          "---------------"
        ],
        "service/appflow/errors.go||service/appflow/errors.go": [
          "File: service/appflow/errors.go -> service/appflow/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "17:  ErrCodeConflictException = \"ConflictException\"",
          "23:  ErrCodeConnectorAuthenticationException = \"ConnectorAuthenticationException\"",
          "29:  ErrCodeConnectorServerException = \"ConnectorServerException\"",
          "36:  ErrCodeInternalServerException = \"InternalServerException\"",
          "43:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "50:  ErrCodeServiceQuotaExceededException = \"ServiceQuotaExceededException\"",
          "56:  ErrCodeUnsupportedOperationException = \"UnsupportedOperationException\"",
          "62:  ErrCodeValidationException = \"ValidationException\"",
          "63: )",
          "65: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "66:  \"ConflictException\":                newErrorConflictException,",
          "67:  \"ConnectorAuthenticationException\": newErrorConnectorAuthenticationException,",
          "68:  \"ConnectorServerException\":         newErrorConnectorServerException,",
          "69:  \"InternalServerException\":          newErrorInternalServerException,",
          "70:  \"ResourceNotFoundException\":        newErrorResourceNotFoundException,",
          "71:  \"ServiceQuotaExceededException\":    newErrorServiceQuotaExceededException,",
          "72:  \"UnsupportedOperationException\":    newErrorUnsupportedOperationException,",
          "73:  \"ValidationException\":              newErrorValidationException,",
          "74: }",
          "",
          "---------------"
        ],
        "service/appflow/service.go||service/appflow/service.go": [
          "File: service/appflow/service.go -> service/appflow/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "13: )",
          "21: type Appflow struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"Appflow\" // Name of service.",
          "34:  EndpointsID = \"appflow\" // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"Appflow\" // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *Appflow {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"appflow\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *Appflow {",
          "60:  svc := &Appflow{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2020-08-23\",",
          "71:    },",
          "72:    handlers,",
          "73:   ),",
          "74:  }",
          "77:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "78:  svc.Handlers.Build.PushBackNamed(restjson.BuildHandler)",
          "79:  svc.Handlers.Unmarshal.PushBackNamed(restjson.UnmarshalHandler)",
          "80:  svc.Handlers.UnmarshalMeta.PushBackNamed(restjson.UnmarshalMetaHandler)",
          "81:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "82:   protocol.NewUnmarshalErrorHandler(restjson.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "83:  )",
          "86:  if initClient != nil {",
          "87:   initClient(svc.Client)",
          "88:  }",
          "90:  return svc",
          "91: }",
          "95: func (c *Appflow) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "96:  req := c.NewRequest(op, params, data)",
          "99:  if initRequest != nil {",
          "100:   initRequest(req)",
          "101:  }",
          "103:  return req",
          "104: }",
          "",
          "---------------"
        ],
        "service/route53resolver/api.go||service/route53resolver/api.go": [
          "File: service/route53resolver/api.go -> service/route53resolver/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:  return out, req.Send()",
          "114: }",
          "116: const opAssociateResolverRule = \"AssociateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: const opAssociateResolverQueryLogConfig = \"AssociateResolverQueryLogConfig\"",
          "143: func (c *Route53Resolver) AssociateResolverQueryLogConfigRequest(input *AssociateResolverQueryLogConfigInput) (req *request.Request, output *AssociateResolverQueryLogConfigOutput) {",
          "144:  op := &request.Operation{",
          "145:   Name:       opAssociateResolverQueryLogConfig,",
          "146:   HTTPMethod: \"POST\",",
          "147:   HTTPPath:   \"/\",",
          "148:  }",
          "150:  if input == nil {",
          "151:   input = &AssociateResolverQueryLogConfigInput{}",
          "152:  }",
          "154:  output = &AssociateResolverQueryLogConfigOutput{}",
          "155:  req = c.newRequest(op, input, output)",
          "156:  return",
          "157: }",
          "207: func (c *Route53Resolver) AssociateResolverQueryLogConfig(input *AssociateResolverQueryLogConfigInput) (*AssociateResolverQueryLogConfigOutput, error) {",
          "208:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "209:  return out, req.Send()",
          "210: }",
          "221: func (c *Route53Resolver) AssociateResolverQueryLogConfigWithContext(ctx aws.Context, input *AssociateResolverQueryLogConfigInput, opts ...request.Option) (*AssociateResolverQueryLogConfigOutput, error) {",
          "222:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "223:  req.SetContext(ctx)",
          "224:  req.ApplyOptions(opts...)",
          "225:  return out, req.Send()",
          "226: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:  return out, req.Send()",
          "319: }",
          "321: const opCreateResolverRule = \"CreateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436: const opCreateResolverQueryLogConfig = \"CreateResolverQueryLogConfig\"",
          "462: func (c *Route53Resolver) CreateResolverQueryLogConfigRequest(input *CreateResolverQueryLogConfigInput) (req *request.Request, output *CreateResolverQueryLogConfigOutput) {",
          "463:  op := &request.Operation{",
          "464:   Name:       opCreateResolverQueryLogConfig,",
          "465:   HTTPMethod: \"POST\",",
          "466:   HTTPPath:   \"/\",",
          "467:  }",
          "469:  if input == nil {",
          "470:   input = &CreateResolverQueryLogConfigInput{}",
          "471:  }",
          "473:  output = &CreateResolverQueryLogConfigOutput{}",
          "474:  req = c.newRequest(op, input, output)",
          "475:  return",
          "476: }",
          "528: func (c *Route53Resolver) CreateResolverQueryLogConfig(input *CreateResolverQueryLogConfigInput) (*CreateResolverQueryLogConfigOutput, error) {",
          "529:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "530:  return out, req.Send()",
          "531: }",
          "542: func (c *Route53Resolver) CreateResolverQueryLogConfigWithContext(ctx aws.Context, input *CreateResolverQueryLogConfigInput, opts ...request.Option) (*CreateResolverQueryLogConfigOutput, error) {",
          "543:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "544:  req.SetContext(ctx)",
          "545:  req.ApplyOptions(opts...)",
          "546:  return out, req.Send()",
          "547: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "518:  return out, req.Send()",
          "519: }",
          "521: const opDeleteResolverRule = \"DeleteResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "748: const opDeleteResolverQueryLogConfig = \"DeleteResolverQueryLogConfig\"",
          "774: func (c *Route53Resolver) DeleteResolverQueryLogConfigRequest(input *DeleteResolverQueryLogConfigInput) (req *request.Request, output *DeleteResolverQueryLogConfigOutput) {",
          "775:  op := &request.Operation{",
          "776:   Name:       opDeleteResolverQueryLogConfig,",
          "777:   HTTPMethod: \"POST\",",
          "778:   HTTPPath:   \"/\",",
          "779:  }",
          "781:  if input == nil {",
          "782:   input = &DeleteResolverQueryLogConfigInput{}",
          "783:  }",
          "785:  output = &DeleteResolverQueryLogConfigOutput{}",
          "786:  req = c.newRequest(op, input, output)",
          "787:  return",
          "788: }",
          "836: func (c *Route53Resolver) DeleteResolverQueryLogConfig(input *DeleteResolverQueryLogConfigInput) (*DeleteResolverQueryLogConfigOutput, error) {",
          "837:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "838:  return out, req.Send()",
          "839: }",
          "850: func (c *Route53Resolver) DeleteResolverQueryLogConfigWithContext(ctx aws.Context, input *DeleteResolverQueryLogConfigInput, opts ...request.Option) (*DeleteResolverQueryLogConfigOutput, error) {",
          "851:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "852:  req.SetContext(ctx)",
          "853:  req.ApplyOptions(opts...)",
          "854:  return out, req.Send()",
          "855: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "709:  return out, req.Send()",
          "710: }",
          "739:  op := &request.Operation{",
          "741:   HTTPMethod: \"POST\",",
          "742:   HTTPPath:   \"/\",",
          "743:  }",
          "745:  if input == nil {",
          "747:  }",
          "750:  req = c.newRequest(op, input, output)",
          "751:  return",
          "752: }",
          "",
          "[Removed Lines]",
          "712: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "738: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "740:   Name:       opDisassociateResolverRule,",
          "746:   input = &DisassociateResolverRuleInput{}",
          "749:  output = &DisassociateResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1049: const opDisassociateResolverQueryLogConfig = \"DisassociateResolverQueryLogConfig\"",
          "1075: func (c *Route53Resolver) DisassociateResolverQueryLogConfigRequest(input *DisassociateResolverQueryLogConfigInput) (req *request.Request, output *DisassociateResolverQueryLogConfigOutput) {",
          "1077:   Name:       opDisassociateResolverQueryLogConfig,",
          "1083:   input = &DisassociateResolverQueryLogConfigInput{}",
          "1086:  output = &DisassociateResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "785:  return out, req.Send()",
          "786: }",
          "",
          "[Removed Lines]",
          "783: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "784:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "[Added Lines]",
          "1133: func (c *Route53Resolver) DisassociateResolverQueryLogConfig(input *DisassociateResolverQueryLogConfigInput) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1134:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1135:  return out, req.Send()",
          "1136: }",
          "1147: func (c *Route53Resolver) DisassociateResolverQueryLogConfigWithContext(ctx aws.Context, input *DisassociateResolverQueryLogConfigInput, opts ...request.Option) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1148:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1149:  req.SetContext(ctx)",
          "1150:  req.ApplyOptions(opts...)",
          "1151:  return out, req.Send()",
          "1152: }",
          "1154: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "1180: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "1181:  op := &request.Operation{",
          "1182:   Name:       opDisassociateResolverRule,",
          "1183:   HTTPMethod: \"POST\",",
          "1184:   HTTPPath:   \"/\",",
          "1185:  }",
          "1187:  if input == nil {",
          "1188:   input = &DisassociateResolverRuleInput{}",
          "1189:  }",
          "1191:  output = &DisassociateResolverRuleOutput{}",
          "1192:  req = c.newRequest(op, input, output)",
          "1193:  return",
          "1194: }",
          "1225: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "1226:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "891:  return out, req.Send()",
          "892: }",
          "921:  op := &request.Operation{",
          "923:   HTTPMethod: \"POST\",",
          "924:   HTTPPath:   \"/\",",
          "925:  }",
          "927:  if input == nil {",
          "929:  }",
          "932:  req = c.newRequest(op, input, output)",
          "933:  return",
          "934: }",
          "",
          "[Removed Lines]",
          "894: const opGetResolverRule = \"GetResolverRule\"",
          "920: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "922:   Name:       opGetResolverRule,",
          "928:   input = &GetResolverRuleInput{}",
          "931:  output = &GetResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1336: const opGetResolverQueryLogConfig = \"GetResolverQueryLogConfig\"",
          "1362: func (c *Route53Resolver) GetResolverQueryLogConfigRequest(input *GetResolverQueryLogConfigInput) (req *request.Request, output *GetResolverQueryLogConfigOutput) {",
          "1364:   Name:       opGetResolverQueryLogConfig,",
          "1370:   input = &GetResolverQueryLogConfigInput{}",
          "1373:  output = &GetResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "965:  return out, req.Send()",
          "966: }",
          "979:  req.SetContext(ctx)",
          "980:  req.ApplyOptions(opts...)",
          "981:  return out, req.Send()",
          "982: }",
          "1011:  op := &request.Operation{",
          "1013:   HTTPMethod: \"POST\",",
          "1014:   HTTPPath:   \"/\",",
          "1015:  }",
          "1017:  if input == nil {",
          "1019:  }",
          "1022:  req = c.newRequest(op, input, output)",
          "1023:  return",
          "1024: }",
          "",
          "[Removed Lines]",
          "963: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "964:  req, out := c.GetResolverRuleRequest(input)",
          "977: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "978:  req, out := c.GetResolverRuleRequest(input)",
          "984: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1010: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1012:   Name:       opGetResolverRuleAssociation,",
          "1018:   input = &GetResolverRuleAssociationInput{}",
          "1021:  output = &GetResolverRuleAssociationOutput{}",
          "",
          "[Added Lines]",
          "1412: func (c *Route53Resolver) GetResolverQueryLogConfig(input *GetResolverQueryLogConfigInput) (*GetResolverQueryLogConfigOutput, error) {",
          "1413:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1426: func (c *Route53Resolver) GetResolverQueryLogConfigWithContext(ctx aws.Context, input *GetResolverQueryLogConfigInput, opts ...request.Option) (*GetResolverQueryLogConfigOutput, error) {",
          "1427:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1433: const opGetResolverQueryLogConfigAssociation = \"GetResolverQueryLogConfigAssociation\"",
          "1459: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationRequest(input *GetResolverQueryLogConfigAssociationInput) (req *request.Request, output *GetResolverQueryLogConfigAssociationOutput) {",
          "1461:   Name:       opGetResolverQueryLogConfigAssociation,",
          "1467:   input = &GetResolverQueryLogConfigAssociationInput{}",
          "1470:  output = &GetResolverQueryLogConfigAssociationOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1054:  return out, req.Send()",
          "1055: }",
          "1068:  req.SetContext(ctx)",
          "1069:  req.ApplyOptions(opts...)",
          "1070:  return out, req.Send()",
          "1071: }",
          "1100:  op := &request.Operation{",
          "1102:   HTTPMethod: \"POST\",",
          "1103:   HTTPPath:   \"/\",",
          "1104:  }",
          "1106:  if input == nil {",
          "1108:  }",
          "1111:  req = c.newRequest(op, input, output)",
          "1112:  return",
          "1113: }",
          "1141:  return out, req.Send()",
          "1142: }",
          "1155:  req.SetContext(ctx)",
          "1156:  req.ApplyOptions(opts...)",
          "1157:  return out, req.Send()",
          "1158: }",
          "1187:  op := &request.Operation{",
          "1189:   HTTPMethod: \"POST\",",
          "1190:   HTTPPath:   \"/\",",
          "1197:  }",
          "1199:  if input == nil {",
          "1201:  }",
          "1204:  req = c.newRequest(op, input, output)",
          "1205:  return",
          "1206: }",
          "",
          "[Removed Lines]",
          "1052: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1053:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1066: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1067:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1073: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1099: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1101:   Name:       opGetResolverRulePolicy,",
          "1107:   input = &GetResolverRulePolicyInput{}",
          "1110:  output = &GetResolverRulePolicyOutput{}",
          "1139: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1140:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1153: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1154:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1160: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1186: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1188:   Name:       opListResolverEndpointIpAddresses,",
          "1191:   Paginator: &request.Paginator{",
          "1192:    InputTokens:     []string{\"NextToken\"},",
          "1193:    OutputTokens:    []string{\"NextToken\"},",
          "1194:    LimitToken:      \"MaxResults\",",
          "1195:    TruncationToken: \"\",",
          "1196:   },",
          "1200:   input = &ListResolverEndpointIpAddressesInput{}",
          "1203:  output = &ListResolverEndpointIpAddressesOutput{}",
          "",
          "[Added Lines]",
          "1509: func (c *Route53Resolver) GetResolverQueryLogConfigAssociation(input *GetResolverQueryLogConfigAssociationInput) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1510:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1523: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationWithContext(ctx aws.Context, input *GetResolverQueryLogConfigAssociationInput, opts ...request.Option) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1524:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1530: const opGetResolverQueryLogConfigPolicy = \"GetResolverQueryLogConfigPolicy\"",
          "1556: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyRequest(input *GetResolverQueryLogConfigPolicyInput) (req *request.Request, output *GetResolverQueryLogConfigPolicyOutput) {",
          "1558:   Name:       opGetResolverQueryLogConfigPolicy,",
          "1564:   input = &GetResolverQueryLogConfigPolicyInput{}",
          "1567:  output = &GetResolverQueryLogConfigPolicyOutput{}",
          "1603: func (c *Route53Resolver) GetResolverQueryLogConfigPolicy(input *GetResolverQueryLogConfigPolicyInput) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1604:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1617: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *GetResolverQueryLogConfigPolicyInput, opts ...request.Option) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1618:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1624: const opGetResolverRule = \"GetResolverRule\"",
          "1650: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "1652:   Name:       opGetResolverRule,",
          "1658:   input = &GetResolverRuleInput{}",
          "1661:  output = &GetResolverRuleOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1238:  return out, req.Send()",
          "1239: }",
          "1252:  req.SetContext(ctx)",
          "1253:  req.ApplyOptions(opts...)",
          "1254:  return out, req.Send()",
          "1255: }",
          "1295:    req.ApplyOptions(opts...)",
          "1296:    return req, nil",
          "1297:   },",
          "1298:  }",
          "1300:  for p.Next() {",
          "1302:    break",
          "1303:   }",
          "1304:  }",
          "",
          "[Removed Lines]",
          "1236: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1237:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1250: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1251:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1274: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "1275:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1276: }",
          "1285: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "1286:  p := request.Pagination{",
          "1287:   NewRequest: func() (*request.Request, error) {",
          "1288:    var inCpy *ListResolverEndpointIpAddressesInput",
          "1289:    if input != nil {",
          "1290:     tmp := *input",
          "1291:     inCpy = &tmp",
          "1292:    }",
          "1293:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "1294:    req.SetContext(ctx)",
          "1301:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1693: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "1694:  req, out := c.GetResolverRuleRequest(input)",
          "1707: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "1708:  req, out := c.GetResolverRuleRequest(input)",
          "1714: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1740: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1741:  op := &request.Operation{",
          "1742:   Name:       opGetResolverRuleAssociation,",
          "1743:   HTTPMethod: \"POST\",",
          "1744:   HTTPPath:   \"/\",",
          "1745:  }",
          "1747:  if input == nil {",
          "1748:   input = &GetResolverRuleAssociationInput{}",
          "1749:  }",
          "1751:  output = &GetResolverRuleAssociationOutput{}",
          "1752:  req = c.newRequest(op, input, output)",
          "1753:  return",
          "1754: }",
          "1783: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1784:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1785:  return out, req.Send()",
          "1786: }",
          "1797: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1798:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1799:  req.SetContext(ctx)",
          "1800:  req.ApplyOptions(opts...)",
          "1801:  return out, req.Send()",
          "1802: }",
          "1804: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1830: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1831:  op := &request.Operation{",
          "1832:   Name:       opGetResolverRulePolicy,",
          "1833:   HTTPMethod: \"POST\",",
          "1834:   HTTPPath:   \"/\",",
          "1835:  }",
          "1837:  if input == nil {",
          "1838:   input = &GetResolverRulePolicyInput{}",
          "1839:  }",
          "1841:  output = &GetResolverRulePolicyOutput{}",
          "1842:  req = c.newRequest(op, input, output)",
          "1843:  return",
          "1844: }",
          "1870: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1871:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1872:  return out, req.Send()",
          "1873: }",
          "1884: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1885:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1886:  req.SetContext(ctx)",
          "1887:  req.ApplyOptions(opts...)",
          "1888:  return out, req.Send()",
          "1889: }",
          "1891: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1917: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1918:  op := &request.Operation{",
          "1919:   Name:       opListResolverEndpointIpAddresses,",
          "1920:   HTTPMethod: \"POST\",",
          "1921:   HTTPPath:   \"/\",",
          "1922:   Paginator: &request.Paginator{",
          "1923:    InputTokens:     []string{\"NextToken\"},",
          "1924:    OutputTokens:    []string{\"NextToken\"},",
          "1925:    LimitToken:      \"MaxResults\",",
          "1926:    TruncationToken: \"\",",
          "1927:   },",
          "1928:  }",
          "1930:  if input == nil {",
          "1931:   input = &ListResolverEndpointIpAddressesInput{}",
          "1932:  }",
          "1934:  output = &ListResolverEndpointIpAddressesOutput{}",
          "1935:  req = c.newRequest(op, input, output)",
          "1936:  return",
          "1937: }",
          "1967: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1968:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1969:  return out, req.Send()",
          "1970: }",
          "1981: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1982:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1983:  req.SetContext(ctx)",
          "1984:  req.ApplyOptions(opts...)",
          "1985:  return out, req.Send()",
          "1986: }",
          "2005: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "2006:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2007: }",
          "2016: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "2017:  p := request.Pagination{",
          "2018:   NewRequest: func() (*request.Request, error) {",
          "2019:    var inCpy *ListResolverEndpointIpAddressesInput",
          "2020:    if input != nil {",
          "2021:     tmp := *input",
          "2022:     inCpy = &tmp",
          "2023:    }",
          "2024:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "2025:    req.SetContext(ctx)",
          "2026:    req.ApplyOptions(opts...)",
          "2027:    return req, nil",
          "2028:   },",
          "2029:  }",
          "2031:  for p.Next() {",
          "2032:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "2033:    break",
          "2034:   }",
          "2035:  }",
          "2037:  return p.Err()",
          "2038: }",
          "2040: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "2066: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "2067:  op := &request.Operation{",
          "2068:   Name:       opListResolverEndpoints,",
          "2069:   HTTPMethod: \"POST\",",
          "2070:   HTTPPath:   \"/\",",
          "2071:   Paginator: &request.Paginator{",
          "2072:    InputTokens:     []string{\"NextToken\"},",
          "2073:    OutputTokens:    []string{\"NextToken\"},",
          "2074:    LimitToken:      \"MaxResults\",",
          "2075:    TruncationToken: \"\",",
          "2076:   },",
          "2077:  }",
          "2079:  if input == nil {",
          "2080:   input = &ListResolverEndpointsInput{}",
          "2081:  }",
          "2083:  output = &ListResolverEndpointsOutput{}",
          "2084:  req = c.newRequest(op, input, output)",
          "2085:  return",
          "2086: }",
          "2117: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "2118:  req, out := c.ListResolverEndpointsRequest(input)",
          "2119:  return out, req.Send()",
          "2120: }",
          "2131: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "2132:  req, out := c.ListResolverEndpointsRequest(input)",
          "2133:  req.SetContext(ctx)",
          "2134:  req.ApplyOptions(opts...)",
          "2135:  return out, req.Send()",
          "2136: }",
          "2155: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "2156:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2157: }",
          "2166: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "2167:  p := request.Pagination{",
          "2168:   NewRequest: func() (*request.Request, error) {",
          "2169:    var inCpy *ListResolverEndpointsInput",
          "2170:    if input != nil {",
          "2171:     tmp := *input",
          "2172:     inCpy = &tmp",
          "2173:    }",
          "2174:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "2175:    req.SetContext(ctx)",
          "2176:    req.ApplyOptions(opts...)",
          "2177:    return req, nil",
          "2178:   },",
          "2179:  }",
          "2181:  for p.Next() {",
          "2182:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "2183:    break",
          "2184:   }",
          "2185:  }",
          "2187:  return p.Err()",
          "2188: }",
          "2190: const opListResolverQueryLogConfigAssociations = \"ListResolverQueryLogConfigAssociations\"",
          "2216: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsRequest(input *ListResolverQueryLogConfigAssociationsInput) (req *request.Request, output *ListResolverQueryLogConfigAssociationsOutput) {",
          "2217:  op := &request.Operation{",
          "2218:   Name:       opListResolverQueryLogConfigAssociations,",
          "2219:   HTTPMethod: \"POST\",",
          "2220:   HTTPPath:   \"/\",",
          "2221:   Paginator: &request.Paginator{",
          "2222:    InputTokens:     []string{\"NextToken\"},",
          "2223:    OutputTokens:    []string{\"NextToken\"},",
          "2224:    LimitToken:      \"MaxResults\",",
          "2225:    TruncationToken: \"\",",
          "2226:   },",
          "2227:  }",
          "2229:  if input == nil {",
          "2230:   input = &ListResolverQueryLogConfigAssociationsInput{}",
          "2231:  }",
          "2233:  output = &ListResolverQueryLogConfigAssociationsOutput{}",
          "2234:  req = c.newRequest(op, input, output)",
          "2235:  return",
          "2236: }",
          "2271: func (c *Route53Resolver) ListResolverQueryLogConfigAssociations(input *ListResolverQueryLogConfigAssociationsInput) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2272:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2273:  return out, req.Send()",
          "2274: }",
          "2285: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, opts ...request.Option) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2286:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2287:  req.SetContext(ctx)",
          "2288:  req.ApplyOptions(opts...)",
          "2289:  return out, req.Send()",
          "2290: }",
          "2309: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPages(input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool) error {",
          "2310:  return c.ListResolverQueryLogConfigAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2311: }",
          "2320: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "2321:  p := request.Pagination{",
          "2322:   NewRequest: func() (*request.Request, error) {",
          "2323:    var inCpy *ListResolverQueryLogConfigAssociationsInput",
          "2324:    if input != nil {",
          "2325:     tmp := *input",
          "2326:     inCpy = &tmp",
          "2327:    }",
          "2328:    req, _ := c.ListResolverQueryLogConfigAssociationsRequest(inCpy)",
          "2329:    req.SetContext(ctx)",
          "2336:   if !fn(p.Page().(*ListResolverQueryLogConfigAssociationsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1306:  return p.Err()",
          "1307: }",
          "1336:  op := &request.Operation{",
          "1338:   HTTPMethod: \"POST\",",
          "1339:   HTTPPath:   \"/\",",
          "1340:   Paginator: &request.Paginator{",
          "",
          "[Removed Lines]",
          "1309: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "1335: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "1337:   Name:       opListResolverEndpoints,",
          "",
          "[Added Lines]",
          "2344: const opListResolverQueryLogConfigs = \"ListResolverQueryLogConfigs\"",
          "2370: func (c *Route53Resolver) ListResolverQueryLogConfigsRequest(input *ListResolverQueryLogConfigsInput) (req *request.Request, output *ListResolverQueryLogConfigsOutput) {",
          "2372:   Name:       opListResolverQueryLogConfigs,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1346:  }",
          "1348:  if input == nil {",
          "1350:  }",
          "1353:  req = c.newRequest(op, input, output)",
          "1354:  return",
          "1355: }",
          "",
          "[Removed Lines]",
          "1349:   input = &ListResolverEndpointsInput{}",
          "1352:  output = &ListResolverEndpointsOutput{}",
          "",
          "[Added Lines]",
          "2384:   input = &ListResolverQueryLogConfigsInput{}",
          "2387:  output = &ListResolverQueryLogConfigsOutput{}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1388:  return out, req.Send()",
          "1389: }",
          "1402:  req.SetContext(ctx)",
          "1403:  req.ApplyOptions(opts...)",
          "1404:  return out, req.Send()",
          "1405: }",
          "1426: }",
          "1436:  p := request.Pagination{",
          "1437:   NewRequest: func() (*request.Request, error) {",
          "1439:    if input != nil {",
          "1440:     tmp := *input",
          "1441:     inCpy = &tmp",
          "1442:    }",
          "1444:    req.SetContext(ctx)",
          "1445:    req.ApplyOptions(opts...)",
          "1446:    return req, nil",
          "",
          "[Removed Lines]",
          "1386: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "1387:  req, out := c.ListResolverEndpointsRequest(input)",
          "1400: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "1401:  req, out := c.ListResolverEndpointsRequest(input)",
          "1424: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "1425:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1435: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "1438:    var inCpy *ListResolverEndpointsInput",
          "1443:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "",
          "[Added Lines]",
          "2426: func (c *Route53Resolver) ListResolverQueryLogConfigs(input *ListResolverQueryLogConfigsInput) (*ListResolverQueryLogConfigsOutput, error) {",
          "2427:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2440: func (c *Route53Resolver) ListResolverQueryLogConfigsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, opts ...request.Option) (*ListResolverQueryLogConfigsOutput, error) {",
          "2441:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2464: func (c *Route53Resolver) ListResolverQueryLogConfigsPages(input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool) error {",
          "2465:  return c.ListResolverQueryLogConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2475: func (c *Route53Resolver) ListResolverQueryLogConfigsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool, opts ...request.Option) error {",
          "2478:    var inCpy *ListResolverQueryLogConfigsInput",
          "2483:    req, _ := c.ListResolverQueryLogConfigsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1448:  }",
          "1450:  for p.Next() {",
          "1452:    break",
          "1453:   }",
          "1454:  }",
          "",
          "[Removed Lines]",
          "1451:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "2491:   if !fn(p.Page().(*ListResolverQueryLogConfigsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:   Name:       opListTagsForResource,",
          "1787:   HTTPMethod: \"POST\",",
          "1788:   HTTPPath:   \"/\",",
          "1789:  }",
          "1791:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2829:   Paginator: &request.Paginator{",
          "2830:    InputTokens:     []string{\"NextToken\"},",
          "2831:    OutputTokens:    []string{\"NextToken\"},",
          "2832:    LimitToken:      \"MaxResults\",",
          "2833:    TruncationToken: \"\",",
          "2834:   },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1833:  return out, req.Send()",
          "1834: }",
          "1847:  req.SetContext(ctx)",
          "1848:  req.ApplyOptions(opts...)",
          "1849:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "1831: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1832:  req, out := c.ListTagsForResourceRequest(input)",
          "1845: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1846:  req, out := c.ListTagsForResourceRequest(input)",
          "",
          "[Added Lines]",
          "2877: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2878:  req, out := c.ListTagsForResourceRequest(input)",
          "2879:  return out, req.Send()",
          "2880: }",
          "2891: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2892:  req, out := c.ListTagsForResourceRequest(input)",
          "2893:  req.SetContext(ctx)",
          "2894:  req.ApplyOptions(opts...)",
          "2895:  return out, req.Send()",
          "2896: }",
          "2915: func (c *Route53Resolver) ListTagsForResourcePages(input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool) error {",
          "2916:  return c.ListTagsForResourcePagesWithContext(aws.BackgroundContext(), input, fn)",
          "2917: }",
          "2926: func (c *Route53Resolver) ListTagsForResourcePagesWithContext(ctx aws.Context, input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool, opts ...request.Option) error {",
          "2927:  p := request.Pagination{",
          "2928:   NewRequest: func() (*request.Request, error) {",
          "2929:    var inCpy *ListTagsForResourceInput",
          "2930:    if input != nil {",
          "2931:     tmp := *input",
          "2932:     inCpy = &tmp",
          "2933:    }",
          "2934:    req, _ := c.ListTagsForResourceRequest(inCpy)",
          "2935:    req.SetContext(ctx)",
          "2936:    req.ApplyOptions(opts...)",
          "2937:    return req, nil",
          "2938:   },",
          "2939:  }",
          "2941:  for p.Next() {",
          "2942:   if !fn(p.Page().(*ListTagsForResourceOutput), !p.HasNextPage()) {",
          "2943:    break",
          "2944:   }",
          "2945:  }",
          "2947:  return p.Err()",
          "2948: }",
          "2950: const opPutResolverQueryLogConfigPolicy = \"PutResolverQueryLogConfigPolicy\"",
          "2976: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyRequest(input *PutResolverQueryLogConfigPolicyInput) (req *request.Request, output *PutResolverQueryLogConfigPolicyOutput) {",
          "2977:  op := &request.Operation{",
          "2978:   Name:       opPutResolverQueryLogConfigPolicy,",
          "2979:   HTTPMethod: \"POST\",",
          "2980:   HTTPPath:   \"/\",",
          "2981:  }",
          "2983:  if input == nil {",
          "2984:   input = &PutResolverQueryLogConfigPolicyInput{}",
          "2985:  }",
          "2987:  output = &PutResolverQueryLogConfigPolicyOutput{}",
          "2988:  req = c.newRequest(op, input, output)",
          "2989:  return",
          "2990: }",
          "3026: func (c *Route53Resolver) PutResolverQueryLogConfigPolicy(input *PutResolverQueryLogConfigPolicyInput) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3027:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "3040: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *PutResolverQueryLogConfigPolicyInput, opts ...request.Option) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3041:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2312:  return out, req.Send()",
          "2313: }",
          "2315: type AssociateResolverEndpointIpAddressInput struct {",
          "2316:  _ struct{} `type:\"structure\"`",
          "2323:  IpAddress *IpAddressUpdate `type:\"structure\" required:\"true\"`",
          "2328:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3519: type AccessDeniedException struct {",
          "3520:  _            struct{}                  `type:\"structure\"`",
          "3521:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3523:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3524: }",
          "3527: func (s AccessDeniedException) String() string {",
          "3528:  return awsutil.Prettify(s)",
          "3529: }",
          "3532: func (s AccessDeniedException) GoString() string {",
          "3533:  return s.String()",
          "3534: }",
          "3536: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "3537:  return &AccessDeniedException{",
          "3538:   RespMetadata: v,",
          "3539:  }",
          "3540: }",
          "3543: func (s *AccessDeniedException) Code() string {",
          "3544:  return \"AccessDeniedException\"",
          "3545: }",
          "3548: func (s *AccessDeniedException) Message() string {",
          "3549:  if s.Message_ != nil {",
          "3550:   return *s.Message_",
          "3551:  }",
          "3552:  return \"\"",
          "3553: }",
          "3556: func (s *AccessDeniedException) OrigErr() error {",
          "3557:  return nil",
          "3558: }",
          "3560: func (s *AccessDeniedException) Error() string {",
          "3561:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3562: }",
          "3565: func (s *AccessDeniedException) StatusCode() int {",
          "3566:  return s.RespMetadata.StatusCode",
          "3567: }",
          "3570: func (s *AccessDeniedException) RequestID() string {",
          "3571:  return s.RespMetadata.RequestID",
          "3572: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2397:  return s",
          "2398: }",
          "2400: type AssociateResolverRuleInput struct {",
          "2401:  _ struct{} `type:\"structure\"`",
          "2405:  Name *string `type:\"string\"`",
          "2411:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2416:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3659: type AssociateResolverQueryLogConfigInput struct {",
          "3660:  _ struct{} `type:\"structure\"`",
          "3666:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3674:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3675: }",
          "3678: func (s AssociateResolverQueryLogConfigInput) String() string {",
          "3679:  return awsutil.Prettify(s)",
          "3680: }",
          "3683: func (s AssociateResolverQueryLogConfigInput) GoString() string {",
          "3684:  return s.String()",
          "3685: }",
          "3688: func (s *AssociateResolverQueryLogConfigInput) Validate() error {",
          "3689:  invalidParams := request.ErrInvalidParams{Context: \"AssociateResolverQueryLogConfigInput\"}",
          "3690:  if s.ResolverQueryLogConfigId == nil {",
          "3691:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "3692:  }",
          "3693:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "3694:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "3695:  }",
          "3696:  if s.ResourceId == nil {",
          "3697:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "3698:  }",
          "3699:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "3700:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "3701:  }",
          "3703:  if invalidParams.Len() > 0 {",
          "3704:   return invalidParams",
          "3705:  }",
          "3706:  return nil",
          "3707: }",
          "3710: func (s *AssociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *AssociateResolverQueryLogConfigInput {",
          "3711:  s.ResolverQueryLogConfigId = &v",
          "3712:  return s",
          "3713: }",
          "3716: func (s *AssociateResolverQueryLogConfigInput) SetResourceId(v string) *AssociateResolverQueryLogConfigInput {",
          "3717:  s.ResourceId = &v",
          "3718:  return s",
          "3719: }",
          "3721: type AssociateResolverQueryLogConfigOutput struct {",
          "3722:  _ struct{} `type:\"structure\"`",
          "3726:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "3727: }",
          "3730: func (s AssociateResolverQueryLogConfigOutput) String() string {",
          "3731:  return awsutil.Prettify(s)",
          "3732: }",
          "3735: func (s AssociateResolverQueryLogConfigOutput) GoString() string {",
          "3736:  return s.String()",
          "3737: }",
          "3740: func (s *AssociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *AssociateResolverQueryLogConfigOutput {",
          "3741:  s.ResolverQueryLogConfigAssociation = v",
          "3742:  return s",
          "3743: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2575:    }",
          "2576:   }",
          "2577:  }",
          "2579:  if invalidParams.Len() > 0 {",
          "2580:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3925:  if s.Tags != nil {",
          "3926:   for i, v := range s.Tags {",
          "3927:    if v == nil {",
          "3928:     continue",
          "3929:    }",
          "3930:    if err := v.Validate(); err != nil {",
          "3931:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "3932:    }",
          "3933:   }",
          "3934:  }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2642:  return s",
          "2643: }",
          "2645: type CreateResolverRuleInput struct {",
          "2646:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4002: type CreateResolverQueryLogConfigInput struct {",
          "4003:  _ struct{} `type:\"structure\"`",
          "4008:  CreatorRequestId *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "4022:  DestinationArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4027:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4031:  Tags []*Tag `type:\"list\"`",
          "4032: }",
          "4035: func (s CreateResolverQueryLogConfigInput) String() string {",
          "4036:  return awsutil.Prettify(s)",
          "4037: }",
          "4040: func (s CreateResolverQueryLogConfigInput) GoString() string {",
          "4041:  return s.String()",
          "4042: }",
          "4045: func (s *CreateResolverQueryLogConfigInput) Validate() error {",
          "4046:  invalidParams := request.ErrInvalidParams{Context: \"CreateResolverQueryLogConfigInput\"}",
          "4047:  if s.CreatorRequestId != nil && len(*s.CreatorRequestId) < 1 {",
          "4048:   invalidParams.Add(request.NewErrParamMinLen(\"CreatorRequestId\", 1))",
          "4049:  }",
          "4050:  if s.DestinationArn == nil {",
          "4051:   invalidParams.Add(request.NewErrParamRequired(\"DestinationArn\"))",
          "4052:  }",
          "4053:  if s.DestinationArn != nil && len(*s.DestinationArn) < 1 {",
          "4054:   invalidParams.Add(request.NewErrParamMinLen(\"DestinationArn\", 1))",
          "4055:  }",
          "4056:  if s.Name == nil {",
          "4057:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4058:  }",
          "4059:  if s.Name != nil && len(*s.Name) < 1 {",
          "4060:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "4061:  }",
          "4062:  if s.Tags != nil {",
          "4063:   for i, v := range s.Tags {",
          "4064:    if v == nil {",
          "4065:     continue",
          "4066:    }",
          "4067:    if err := v.Validate(); err != nil {",
          "4068:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4069:    }",
          "4070:   }",
          "4071:  }",
          "4073:  if invalidParams.Len() > 0 {",
          "4074:   return invalidParams",
          "4075:  }",
          "4076:  return nil",
          "4077: }",
          "4080: func (s *CreateResolverQueryLogConfigInput) SetCreatorRequestId(v string) *CreateResolverQueryLogConfigInput {",
          "4081:  s.CreatorRequestId = &v",
          "4082:  return s",
          "4083: }",
          "4086: func (s *CreateResolverQueryLogConfigInput) SetDestinationArn(v string) *CreateResolverQueryLogConfigInput {",
          "4087:  s.DestinationArn = &v",
          "4088:  return s",
          "4089: }",
          "4092: func (s *CreateResolverQueryLogConfigInput) SetName(v string) *CreateResolverQueryLogConfigInput {",
          "4093:  s.Name = &v",
          "4094:  return s",
          "4095: }",
          "4098: func (s *CreateResolverQueryLogConfigInput) SetTags(v []*Tag) *CreateResolverQueryLogConfigInput {",
          "4099:  s.Tags = v",
          "4100:  return s",
          "4101: }",
          "4103: type CreateResolverQueryLogConfigOutput struct {",
          "4104:  _ struct{} `type:\"structure\"`",
          "4108:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4109: }",
          "4112: func (s CreateResolverQueryLogConfigOutput) String() string {",
          "4113:  return awsutil.Prettify(s)",
          "4114: }",
          "4117: func (s CreateResolverQueryLogConfigOutput) GoString() string {",
          "4118:  return s.String()",
          "4119: }",
          "4122: func (s *CreateResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *CreateResolverQueryLogConfigOutput {",
          "4123:  s.ResolverQueryLogConfig = v",
          "4124:  return s",
          "4125: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2715:  if s.TargetIps != nil && len(s.TargetIps) < 1 {",
          "2716:   invalidParams.Add(request.NewErrParamMinLen(\"TargetIps\", 1))",
          "2717:  }",
          "2718:  if s.TargetIps != nil {",
          "2719:   for i, v := range s.TargetIps {",
          "2720:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4215:  if s.Tags != nil {",
          "4216:   for i, v := range s.Tags {",
          "4217:    if v == nil {",
          "4218:     continue",
          "4219:    }",
          "4220:    if err := v.Validate(); err != nil {",
          "4221:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4222:    }",
          "4223:   }",
          "4224:  }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2842: type DeleteResolverEndpointOutput struct {",
          "2843:  _ struct{} `type:\"structure\"`",
          "2848: }",
          "2852:  return awsutil.Prettify(s)",
          "2853: }",
          "2857:  return s.String()",
          "2858: }",
          "2863:  return s",
          "2864: }",
          "2866: type DeleteResolverRuleInput struct {",
          "2867:  _ struct{} `type:\"structure\"`",
          "2872:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "2847:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "2851: func (s DeleteResolverEndpointOutput) String() string {",
          "2856: func (s DeleteResolverEndpointOutput) GoString() string {",
          "2861: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "2862:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "4354:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "4355: }",
          "4358: func (s DeleteResolverEndpointOutput) String() string {",
          "4359:  return awsutil.Prettify(s)",
          "4360: }",
          "4363: func (s DeleteResolverEndpointOutput) GoString() string {",
          "4364:  return s.String()",
          "4365: }",
          "4368: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "4369:  s.ResolverEndpoint = v",
          "4370:  return s",
          "4371: }",
          "4373: type DeleteResolverQueryLogConfigInput struct {",
          "4374:  _ struct{} `type:\"structure\"`",
          "4379:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4380: }",
          "4383: func (s DeleteResolverQueryLogConfigInput) String() string {",
          "4384:  return awsutil.Prettify(s)",
          "4385: }",
          "4388: func (s DeleteResolverQueryLogConfigInput) GoString() string {",
          "4389:  return s.String()",
          "4390: }",
          "4393: func (s *DeleteResolverQueryLogConfigInput) Validate() error {",
          "4394:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResolverQueryLogConfigInput\"}",
          "4395:  if s.ResolverQueryLogConfigId == nil {",
          "4396:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4397:  }",
          "4398:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4399:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4400:  }",
          "4402:  if invalidParams.Len() > 0 {",
          "4403:   return invalidParams",
          "4404:  }",
          "4405:  return nil",
          "4406: }",
          "4409: func (s *DeleteResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DeleteResolverQueryLogConfigInput {",
          "4410:  s.ResolverQueryLogConfigId = &v",
          "4411:  return s",
          "4412: }",
          "4414: type DeleteResolverQueryLogConfigOutput struct {",
          "4415:  _ struct{} `type:\"structure\"`",
          "4419:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4423: func (s DeleteResolverQueryLogConfigOutput) String() string {",
          "4428: func (s DeleteResolverQueryLogConfigOutput) GoString() string {",
          "4433: func (s *DeleteResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *DeleteResolverQueryLogConfigOutput {",
          "4434:  s.ResolverQueryLogConfig = v",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3012:  return s",
          "3013: }",
          "3015: type DisassociateResolverRuleInput struct {",
          "3016:  _ struct{} `type:\"structure\"`",
          "3022:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3027:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4587: type DisassociateResolverQueryLogConfigInput struct {",
          "4588:  _ struct{} `type:\"structure\"`",
          "4594:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4600:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4601: }",
          "4604: func (s DisassociateResolverQueryLogConfigInput) String() string {",
          "4605:  return awsutil.Prettify(s)",
          "4606: }",
          "4609: func (s DisassociateResolverQueryLogConfigInput) GoString() string {",
          "4610:  return s.String()",
          "4611: }",
          "4614: func (s *DisassociateResolverQueryLogConfigInput) Validate() error {",
          "4615:  invalidParams := request.ErrInvalidParams{Context: \"DisassociateResolverQueryLogConfigInput\"}",
          "4616:  if s.ResolverQueryLogConfigId == nil {",
          "4617:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4618:  }",
          "4619:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4620:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4621:  }",
          "4622:  if s.ResourceId == nil {",
          "4623:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "4624:  }",
          "4625:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "4626:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "4627:  }",
          "4629:  if invalidParams.Len() > 0 {",
          "4630:   return invalidParams",
          "4631:  }",
          "4632:  return nil",
          "4633: }",
          "4636: func (s *DisassociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4637:  s.ResolverQueryLogConfigId = &v",
          "4638:  return s",
          "4639: }",
          "4642: func (s *DisassociateResolverQueryLogConfigInput) SetResourceId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4643:  s.ResourceId = &v",
          "4644:  return s",
          "4645: }",
          "4647: type DisassociateResolverQueryLogConfigOutput struct {",
          "4648:  _ struct{} `type:\"structure\"`",
          "4652:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "4653: }",
          "4656: func (s DisassociateResolverQueryLogConfigOutput) String() string {",
          "4657:  return awsutil.Prettify(s)",
          "4658: }",
          "4661: func (s DisassociateResolverQueryLogConfigOutput) GoString() string {",
          "4662:  return s.String()",
          "4663: }",
          "4666: func (s *DisassociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *DisassociateResolverQueryLogConfigOutput {",
          "4667:  s.ResolverQueryLogConfigAssociation = v",
          "4668:  return s",
          "4669: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3137:  return nil",
          "3138: }",
          "3144: }",
          "3149:  return s",
          "3150: }",
          "3153:  _ struct{} `type:\"structure\"`",
          "3159: }",
          "3163:  return awsutil.Prettify(s)",
          "3164: }",
          "3168:  return s.String()",
          "3169: }",
          "3176:  }",
          "3179:  }",
          "3181:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3141: func (s *Filter) SetName(v string) *Filter {",
          "3142:  s.Name = &v",
          "3143:  return s",
          "3147: func (s *Filter) SetValues(v []*string) *Filter {",
          "3148:  s.Values = v",
          "3152: type GetResolverEndpointInput struct {",
          "3158:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3162: func (s GetResolverEndpointInput) String() string {",
          "3167: func (s GetResolverEndpointInput) GoString() string {",
          "3172: func (s *GetResolverEndpointInput) Validate() error {",
          "3173:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "3174:  if s.ResolverEndpointId == nil {",
          "3175:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "3177:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "3178:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "4946: func (s *Filter) SetName(v string) *Filter {",
          "4947:  s.Name = &v",
          "4948:  return s",
          "4949: }",
          "4952: func (s *Filter) SetValues(v []*string) *Filter {",
          "4953:  s.Values = v",
          "4954:  return s",
          "4955: }",
          "4957: type GetResolverEndpointInput struct {",
          "4958:  _ struct{} `type:\"structure\"`",
          "4963:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4964: }",
          "4967: func (s GetResolverEndpointInput) String() string {",
          "4968:  return awsutil.Prettify(s)",
          "4969: }",
          "4972: func (s GetResolverEndpointInput) GoString() string {",
          "4973:  return s.String()",
          "4974: }",
          "4977: func (s *GetResolverEndpointInput) Validate() error {",
          "4978:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "4979:  if s.ResolverEndpointId == nil {",
          "4980:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4981:  }",
          "4982:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4983:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "4984:  }",
          "4986:  if invalidParams.Len() > 0 {",
          "4987:   return invalidParams",
          "4988:  }",
          "4989:  return nil",
          "4990: }",
          "4993: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "4994:  s.ResolverEndpointId = &v",
          "4995:  return s",
          "4996: }",
          "4998: type GetResolverEndpointOutput struct {",
          "4999:  _ struct{} `type:\"structure\"`",
          "5003:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "5004: }",
          "5007: func (s GetResolverEndpointOutput) String() string {",
          "5008:  return awsutil.Prettify(s)",
          "5009: }",
          "5012: func (s GetResolverEndpointOutput) GoString() string {",
          "5013:  return s.String()",
          "5014: }",
          "5017: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "5018:  s.ResolverEndpoint = v",
          "5019:  return s",
          "5020: }",
          "5022: type GetResolverQueryLogConfigAssociationInput struct {",
          "5023:  _ struct{} `type:\"structure\"`",
          "5029:  ResolverQueryLogConfigAssociationId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5030: }",
          "5033: func (s GetResolverQueryLogConfigAssociationInput) String() string {",
          "5034:  return awsutil.Prettify(s)",
          "5035: }",
          "5038: func (s GetResolverQueryLogConfigAssociationInput) GoString() string {",
          "5039:  return s.String()",
          "5040: }",
          "5043: func (s *GetResolverQueryLogConfigAssociationInput) Validate() error {",
          "5044:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigAssociationInput\"}",
          "5045:  if s.ResolverQueryLogConfigAssociationId == nil {",
          "5046:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigAssociationId\"))",
          "5047:  }",
          "5048:  if s.ResolverQueryLogConfigAssociationId != nil && len(*s.ResolverQueryLogConfigAssociationId) < 1 {",
          "5049:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigAssociationId\", 1))",
          "5050:  }",
          "5052:  if invalidParams.Len() > 0 {",
          "5053:   return invalidParams",
          "5054:  }",
          "5055:  return nil",
          "5056: }",
          "5059: func (s *GetResolverQueryLogConfigAssociationInput) SetResolverQueryLogConfigAssociationId(v string) *GetResolverQueryLogConfigAssociationInput {",
          "5060:  s.ResolverQueryLogConfigAssociationId = &v",
          "5061:  return s",
          "5062: }",
          "5064: type GetResolverQueryLogConfigAssociationOutput struct {",
          "5065:  _ struct{} `type:\"structure\"`",
          "5069:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "5070: }",
          "5073: func (s GetResolverQueryLogConfigAssociationOutput) String() string {",
          "5074:  return awsutil.Prettify(s)",
          "5075: }",
          "5078: func (s GetResolverQueryLogConfigAssociationOutput) GoString() string {",
          "5079:  return s.String()",
          "5080: }",
          "5083: func (s *GetResolverQueryLogConfigAssociationOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *GetResolverQueryLogConfigAssociationOutput {",
          "5084:  s.ResolverQueryLogConfigAssociation = v",
          "5085:  return s",
          "5086: }",
          "5088: type GetResolverQueryLogConfigInput struct {",
          "5089:  _ struct{} `type:\"structure\"`",
          "5095:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5096: }",
          "5099: func (s GetResolverQueryLogConfigInput) String() string {",
          "5100:  return awsutil.Prettify(s)",
          "5101: }",
          "5104: func (s GetResolverQueryLogConfigInput) GoString() string {",
          "5105:  return s.String()",
          "5106: }",
          "5109: func (s *GetResolverQueryLogConfigInput) Validate() error {",
          "5110:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigInput\"}",
          "5111:  if s.ResolverQueryLogConfigId == nil {",
          "5112:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "5113:  }",
          "5114:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "5115:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "5116:  }",
          "5118:  if invalidParams.Len() > 0 {",
          "5119:   return invalidParams",
          "5120:  }",
          "5121:  return nil",
          "5122: }",
          "5125: func (s *GetResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *GetResolverQueryLogConfigInput {",
          "5126:  s.ResolverQueryLogConfigId = &v",
          "5127:  return s",
          "5128: }",
          "5130: type GetResolverQueryLogConfigOutput struct {",
          "5131:  _ struct{} `type:\"structure\"`",
          "5135:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "5136: }",
          "5139: func (s GetResolverQueryLogConfigOutput) String() string {",
          "5140:  return awsutil.Prettify(s)",
          "5141: }",
          "5144: func (s GetResolverQueryLogConfigOutput) GoString() string {",
          "5145:  return s.String()",
          "5149: func (s *GetResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *GetResolverQueryLogConfigOutput {",
          "5150:  s.ResolverQueryLogConfig = v",
          "5154: type GetResolverQueryLogConfigPolicyInput struct {",
          "5161:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5165: func (s GetResolverQueryLogConfigPolicyInput) String() string {",
          "5170: func (s GetResolverQueryLogConfigPolicyInput) GoString() string {",
          "5175: func (s *GetResolverQueryLogConfigPolicyInput) Validate() error {",
          "5176:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigPolicyInput\"}",
          "5177:  if s.Arn == nil {",
          "5178:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5180:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5181:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3184:  return nil",
          "3185: }",
          "3190:  return s",
          "3191: }",
          "3194:  _ struct{} `type:\"structure\"`",
          "3199: }",
          "3203:  return awsutil.Prettify(s)",
          "3204: }",
          "3208:  return s.String()",
          "3209: }",
          "3214:  return s",
          "3215: }",
          "3217: type GetResolverRuleAssociationInput struct {",
          "3218:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "3188: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "3189:  s.ResolverEndpointId = &v",
          "3193: type GetResolverEndpointOutput struct {",
          "3198:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "3202: func (s GetResolverEndpointOutput) String() string {",
          "3207: func (s GetResolverEndpointOutput) GoString() string {",
          "3212: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "3213:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "5191: func (s *GetResolverQueryLogConfigPolicyInput) SetArn(v string) *GetResolverQueryLogConfigPolicyInput {",
          "5192:  s.Arn = &v",
          "5196: type GetResolverQueryLogConfigPolicyOutput struct {",
          "5201:  ResolverQueryLogConfigPolicy *string `type:\"string\"`",
          "5205: func (s GetResolverQueryLogConfigPolicyOutput) String() string {",
          "5210: func (s GetResolverQueryLogConfigPolicyOutput) GoString() string {",
          "5215: func (s *GetResolverQueryLogConfigPolicyOutput) SetResolverQueryLogConfigPolicy(v string) *GetResolverQueryLogConfigPolicyOutput {",
          "5216:  s.ResolverQueryLogConfigPolicy = &v",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3991:  return \"\"",
          "3992: }",
          "3997: }",
          "4001: }",
          "4006: }",
          "4011: }",
          "4014:  _ struct{} `type:\"structure\"`",
          "4019:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4027:  NextToken *string `type:\"string\"`",
          "4033: }",
          "4037:  return awsutil.Prettify(s)",
          "4038: }",
          "4042:  return s.String()",
          "4043: }",
          "4048:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4049:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4050:  }",
          "4053:  }",
          "4056:  }",
          "4058:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3995: func (s *LimitExceededException) OrigErr() error {",
          "3996:  return nil",
          "3999: func (s *LimitExceededException) Error() string {",
          "4000:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "4004: func (s *LimitExceededException) StatusCode() int {",
          "4005:  return s.RespMetadata.StatusCode",
          "4009: func (s *LimitExceededException) RequestID() string {",
          "4010:  return s.RespMetadata.RequestID",
          "4013: type ListResolverEndpointIpAddressesInput struct {",
          "4032:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4036: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "4041: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "4046: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "4047:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "4051:  if s.ResolverEndpointId == nil {",
          "4052:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4054:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4055:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "6002: func (s *LimitExceededException) OrigErr() error {",
          "6003:  return nil",
          "6004: }",
          "6006: func (s *LimitExceededException) Error() string {",
          "6007:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "6008: }",
          "6011: func (s *LimitExceededException) StatusCode() int {",
          "6012:  return s.RespMetadata.StatusCode",
          "6013: }",
          "6016: func (s *LimitExceededException) RequestID() string {",
          "6017:  return s.RespMetadata.RequestID",
          "6018: }",
          "6020: type ListResolverEndpointIpAddressesInput struct {",
          "6021:  _ struct{} `type:\"structure\"`",
          "6026:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6034:  NextToken *string `type:\"string\"`",
          "6039:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "6040: }",
          "6043: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "6044:  return awsutil.Prettify(s)",
          "6045: }",
          "6048: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "6049:  return s.String()",
          "6050: }",
          "6053: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "6054:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "6055:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6056:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6057:  }",
          "6058:  if s.ResolverEndpointId == nil {",
          "6059:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "6060:  }",
          "6061:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "6062:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "6063:  }",
          "6065:  if invalidParams.Len() > 0 {",
          "6066:   return invalidParams",
          "6067:  }",
          "6068:  return nil",
          "6069: }",
          "6072: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "6073:  s.MaxResults = &v",
          "6074:  return s",
          "6075: }",
          "6078: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "6079:  s.NextToken = &v",
          "6080:  return s",
          "6081: }",
          "6084: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "6085:  s.ResolverEndpointId = &v",
          "6086:  return s",
          "6087: }",
          "6089: type ListResolverEndpointIpAddressesOutput struct {",
          "6090:  _ struct{} `type:\"structure\"`",
          "6095:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "6098:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6104:  NextToken *string `type:\"string\"`",
          "6105: }",
          "6108: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "6119:  s.IpAddresses = v",
          "6120:  return s",
          "6121: }",
          "6124: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "6125:  s.MaxResults = &v",
          "6126:  return s",
          "6127: }",
          "6130: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "6131:  s.NextToken = &v",
          "6132:  return s",
          "6133: }",
          "6135: type ListResolverEndpointsInput struct {",
          "6136:  _ struct{} `type:\"structure\"`",
          "6144:  Filters []*Filter `type:\"list\"`",
          "6149:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6156:  NextToken *string `type:\"string\"`",
          "6157: }",
          "6160: func (s ListResolverEndpointsInput) String() string {",
          "6161:  return awsutil.Prettify(s)",
          "6162: }",
          "6165: func (s ListResolverEndpointsInput) GoString() string {",
          "6166:  return s.String()",
          "6167: }",
          "6170: func (s *ListResolverEndpointsInput) Validate() error {",
          "6171:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "6172:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6173:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6174:  }",
          "6175:  if s.Filters != nil {",
          "6176:   for i, v := range s.Filters {",
          "6177:    if v == nil {",
          "6178:     continue",
          "6179:    }",
          "6180:    if err := v.Validate(); err != nil {",
          "6181:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6182:    }",
          "6183:   }",
          "6184:  }",
          "6186:  if invalidParams.Len() > 0 {",
          "6187:   return invalidParams",
          "6188:  }",
          "6189:  return nil",
          "6190: }",
          "6193: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "6194:  s.Filters = v",
          "6195:  return s",
          "6196: }",
          "6199: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "6200:  s.MaxResults = &v",
          "6201:  return s",
          "6202: }",
          "6205: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "6206:  s.NextToken = &v",
          "6207:  return s",
          "6208: }",
          "6210: type ListResolverEndpointsOutput struct {",
          "6211:  _ struct{} `type:\"structure\"`",
          "6214:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6219:  NextToken *string `type:\"string\"`",
          "6223:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "6224: }",
          "6227: func (s ListResolverEndpointsOutput) String() string {",
          "6228:  return awsutil.Prettify(s)",
          "6229: }",
          "6232: func (s ListResolverEndpointsOutput) GoString() string {",
          "6233:  return s.String()",
          "6237: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "6238:  s.MaxResults = &v",
          "6239:  return s",
          "6243: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "6244:  s.NextToken = &v",
          "6245:  return s",
          "6249: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "6250:  s.ResolverEndpoints = v",
          "6251:  return s",
          "6254: type ListResolverQueryLogConfigAssociationsInput struct {",
          "6262:  Filters []*Filter `type:\"list\"`",
          "6311:  SortBy *string `min:\"1\" type:\"string\"`",
          "6319:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6323: func (s ListResolverQueryLogConfigAssociationsInput) String() string {",
          "6328: func (s ListResolverQueryLogConfigAssociationsInput) GoString() string {",
          "6333: func (s *ListResolverQueryLogConfigAssociationsInput) Validate() error {",
          "6334:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigAssociationsInput\"}",
          "6338:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6339:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6341:  if s.Filters != nil {",
          "6342:   for i, v := range s.Filters {",
          "6343:    if v == nil {",
          "6344:     continue",
          "6345:    }",
          "6346:    if err := v.Validate(); err != nil {",
          "6347:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6348:    }",
          "6349:   }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4061:  return nil",
          "4062: }",
          "4066:  s.MaxResults = &v",
          "4067:  return s",
          "4068: }",
          "4072:  s.NextToken = &v",
          "4073:  return s",
          "4074: }",
          "4079:  return s",
          "4080: }",
          "4096:  NextToken *string `type:\"string\"`",
          "4097: }",
          "4101:  return awsutil.Prettify(s)",
          "4102: }",
          "4106:  return s.String()",
          "4107: }",
          "4112:  return s",
          "4113: }",
          "4118:  return s",
          "4119: }",
          "4124:  return s",
          "4125: }",
          "4128:  _ struct{} `type:\"structure\"`",
          "4136:  Filters []*Filter `type:\"list\"`",
          "4141:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4148:  NextToken *string `type:\"string\"`",
          "4149: }",
          "4153:  return awsutil.Prettify(s)",
          "4154: }",
          "4158:  return s.String()",
          "4159: }",
          "4164:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4165:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4166:  }",
          "4167:  if s.Filters != nil {",
          "4168:   for i, v := range s.Filters {",
          "4169:    if v == nil {",
          "",
          "[Removed Lines]",
          "4065: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "4071: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "4077: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "4078:  s.ResolverEndpointId = &v",
          "4082: type ListResolverEndpointIpAddressesOutput struct {",
          "4083:  _ struct{} `type:\"structure\"`",
          "4087:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "4090:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4100: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "4105: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "4110: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "4111:  s.IpAddresses = v",
          "4116: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "4117:  s.MaxResults = &v",
          "4122: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "4123:  s.NextToken = &v",
          "4127: type ListResolverEndpointsInput struct {",
          "4152: func (s ListResolverEndpointsInput) String() string {",
          "4157: func (s ListResolverEndpointsInput) GoString() string {",
          "4162: func (s *ListResolverEndpointsInput) Validate() error {",
          "4163:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "",
          "[Added Lines]",
          "6359: func (s *ListResolverQueryLogConfigAssociationsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigAssociationsInput {",
          "6360:  s.Filters = v",
          "6361:  return s",
          "6362: }",
          "6365: func (s *ListResolverQueryLogConfigAssociationsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigAssociationsInput {",
          "6371: func (s *ListResolverQueryLogConfigAssociationsInput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6377: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortBy(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6378:  s.SortBy = &v",
          "6383: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortOrder(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6384:  s.SortOrder = &v",
          "6385:  return s",
          "6386: }",
          "6388: type ListResolverQueryLogConfigAssociationsOutput struct {",
          "6389:  _ struct{} `type:\"structure\"`",
          "6400:  ResolverQueryLogConfigAssociations []*ResolverQueryLogConfigAssociation `type:\"list\"`",
          "6406:  TotalCount *int64 `type:\"integer\"`",
          "6413:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6417: func (s ListResolverQueryLogConfigAssociationsOutput) String() string {",
          "6422: func (s ListResolverQueryLogConfigAssociationsOutput) GoString() string {",
          "6427: func (s *ListResolverQueryLogConfigAssociationsOutput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsOutput {",
          "6428:  s.NextToken = &v",
          "6433: func (s *ListResolverQueryLogConfigAssociationsOutput) SetResolverQueryLogConfigAssociations(v []*ResolverQueryLogConfigAssociation) *ListResolverQueryLogConfigAssociationsOutput {",
          "6434:  s.ResolverQueryLogConfigAssociations = v",
          "6439: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6440:  s.TotalCount = &v",
          "6445: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6446:  s.TotalFilteredCount = &v",
          "6447:  return s",
          "6448: }",
          "6450: type ListResolverQueryLogConfigsInput struct {",
          "6512:  SortBy *string `min:\"1\" type:\"string\"`",
          "6520:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6524: func (s ListResolverQueryLogConfigsInput) String() string {",
          "6529: func (s ListResolverQueryLogConfigsInput) GoString() string {",
          "6534: func (s *ListResolverQueryLogConfigsInput) Validate() error {",
          "6535:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigsInput\"}",
          "6539:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6540:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6541:  }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4182: }",
          "4186:  s.Filters = v",
          "4187:  return s",
          "4188: }",
          "4192:  s.MaxResults = &v",
          "4193:  return s",
          "4194: }",
          "4198:  s.NextToken = &v",
          "4199:  return s",
          "4200: }",
          "4211:  NextToken *string `type:\"string\"`",
          "4216: }",
          "4220:  return awsutil.Prettify(s)",
          "4221: }",
          "4225:  return s.String()",
          "4226: }",
          "4231:  return s",
          "4232: }",
          "4237:  return s",
          "4238: }",
          "4243:  return s",
          "4244: }",
          "4246: type ListResolverRuleAssociationsInput struct {",
          "4247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "4185: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "4191: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "4197: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "4202: type ListResolverEndpointsOutput struct {",
          "4203:  _ struct{} `type:\"structure\"`",
          "4206:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4215:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "4219: func (s ListResolverEndpointsOutput) String() string {",
          "4224: func (s ListResolverEndpointsOutput) GoString() string {",
          "4229: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "4230:  s.MaxResults = &v",
          "4235: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "4236:  s.NextToken = &v",
          "4241: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "4242:  s.ResolverEndpoints = v",
          "",
          "[Added Lines]",
          "6560: func (s *ListResolverQueryLogConfigsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigsInput {",
          "6566: func (s *ListResolverQueryLogConfigsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigsInput {",
          "6572: func (s *ListResolverQueryLogConfigsInput) SetNextToken(v string) *ListResolverQueryLogConfigsInput {",
          "6578: func (s *ListResolverQueryLogConfigsInput) SetSortBy(v string) *ListResolverQueryLogConfigsInput {",
          "6579:  s.SortBy = &v",
          "6580:  return s",
          "6581: }",
          "6584: func (s *ListResolverQueryLogConfigsInput) SetSortOrder(v string) *ListResolverQueryLogConfigsInput {",
          "6585:  s.SortOrder = &v",
          "6586:  return s",
          "6587: }",
          "6589: type ListResolverQueryLogConfigsOutput struct {",
          "6590:  _ struct{} `type:\"structure\"`",
          "6599:  ResolverQueryLogConfigs []*ResolverQueryLogConfig `type:\"list\"`",
          "6605:  TotalCount *int64 `type:\"integer\"`",
          "6612:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6616: func (s ListResolverQueryLogConfigsOutput) String() string {",
          "6621: func (s ListResolverQueryLogConfigsOutput) GoString() string {",
          "6626: func (s *ListResolverQueryLogConfigsOutput) SetNextToken(v string) *ListResolverQueryLogConfigsOutput {",
          "6627:  s.NextToken = &v",
          "6632: func (s *ListResolverQueryLogConfigsOutput) SetResolverQueryLogConfigs(v []*ResolverQueryLogConfig) *ListResolverQueryLogConfigsOutput {",
          "6633:  s.ResolverQueryLogConfigs = v",
          "6638: func (s *ListResolverQueryLogConfigsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6639:  s.TotalCount = &v",
          "6640:  return s",
          "6641: }",
          "6644: func (s *ListResolverQueryLogConfigsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6645:  s.TotalFilteredCount = &v",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4539:  return s",
          "4540: }",
          "4545:  return s",
          "4546: }",
          "4551:  return s",
          "4552: }",
          "4555:  _ struct{} `type:\"structure\"`",
          "4565: }",
          "4569:  return awsutil.Prettify(s)",
          "4570: }",
          "4574:  return s.String()",
          "4575: }",
          "4586:  return s",
          "4587: }",
          "4589: type PutResolverRulePolicyInput struct {",
          "4590:  _ struct{} `type:\"structure\"`",
          "4596:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4602:  ResolverRulePolicy *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "4543: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "4544:  s.NextToken = &v",
          "4549: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "4550:  s.ResourceArn = &v",
          "4554: type ListTagsForResourceOutput struct {",
          "4560:  NextToken *string `type:\"string\"`",
          "4564:  Tags []*Tag `type:\"list\"`",
          "4568: func (s ListTagsForResourceOutput) String() string {",
          "4573: func (s ListTagsForResourceOutput) GoString() string {",
          "4578: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "4579:  s.NextToken = &v",
          "4580:  return s",
          "4581: }",
          "4584: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "4585:  s.Tags = v",
          "",
          "[Added Lines]",
          "6946: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "6947:  s.NextToken = &v",
          "6948:  return s",
          "6949: }",
          "6952: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "6953:  s.ResourceArn = &v",
          "6954:  return s",
          "6955: }",
          "6957: type ListTagsForResourceOutput struct {",
          "6958:  _ struct{} `type:\"structure\"`",
          "6963:  NextToken *string `type:\"string\"`",
          "6967:  Tags []*Tag `type:\"list\"`",
          "6968: }",
          "6971: func (s ListTagsForResourceOutput) String() string {",
          "6972:  return awsutil.Prettify(s)",
          "6973: }",
          "6976: func (s ListTagsForResourceOutput) GoString() string {",
          "6977:  return s.String()",
          "6978: }",
          "6981: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "6982:  s.NextToken = &v",
          "6983:  return s",
          "6984: }",
          "6987: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "6988:  s.Tags = v",
          "6989:  return s",
          "6990: }",
          "6992: type PutResolverQueryLogConfigPolicyInput struct {",
          "6993:  _ struct{} `type:\"structure\"`",
          "6999:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7019:  ResolverQueryLogConfigPolicy *string `type:\"string\" required:\"true\"`",
          "7020: }",
          "7023: func (s PutResolverQueryLogConfigPolicyInput) String() string {",
          "7024:  return awsutil.Prettify(s)",
          "7025: }",
          "7028: func (s PutResolverQueryLogConfigPolicyInput) GoString() string {",
          "7029:  return s.String()",
          "7030: }",
          "7033: func (s *PutResolverQueryLogConfigPolicyInput) Validate() error {",
          "7034:  invalidParams := request.ErrInvalidParams{Context: \"PutResolverQueryLogConfigPolicyInput\"}",
          "7035:  if s.Arn == nil {",
          "7036:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7037:  }",
          "7038:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7039:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "7040:  }",
          "7041:  if s.ResolverQueryLogConfigPolicy == nil {",
          "7042:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigPolicy\"))",
          "7043:  }",
          "7045:  if invalidParams.Len() > 0 {",
          "7046:   return invalidParams",
          "7047:  }",
          "7048:  return nil",
          "7049: }",
          "7052: func (s *PutResolverQueryLogConfigPolicyInput) SetArn(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7053:  s.Arn = &v",
          "7058: func (s *PutResolverQueryLogConfigPolicyInput) SetResolverQueryLogConfigPolicy(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7059:  s.ResolverQueryLogConfigPolicy = &v",
          "7064: type PutResolverQueryLogConfigPolicyOutput struct {",
          "7068:  ReturnValue *bool `type:\"boolean\"`",
          "7072: func (s PutResolverQueryLogConfigPolicyOutput) String() string {",
          "7077: func (s PutResolverQueryLogConfigPolicyOutput) GoString() string {",
          "7082: func (s *PutResolverQueryLogConfigPolicyOutput) SetReturnValue(v bool) *PutResolverQueryLogConfigPolicyOutput {",
          "7083:  s.ReturnValue = &v",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4804:  return s",
          "4805: }",
          "4811: type ResolverRule struct {",
          "4812:  _ struct{} `type:\"structure\"`",
          "4815:  Arn *string `min:\"1\" type:\"string\"`",
          "4820:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "4826:  DomainName *string `min:\"1\" type:\"string\"`",
          "4829:  Id *string `min:\"1\" type:\"string\"`",
          "4833:  Name *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7362: type ResolverQueryLogConfig struct {",
          "7363:  _ struct{} `type:\"structure\"`",
          "7366:  Arn *string `min:\"1\" type:\"string\"`",
          "7369:  AssociationCount *int64 `type:\"integer\"`",
          "7373:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7378:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "7383:  DestinationArn *string `min:\"1\" type:\"string\"`",
          "7386:  Id *string `min:\"1\" type:\"string\"`",
          "7389:  Name *string `min:\"1\" type:\"string\"`",
          "7392:  OwnerId *string `min:\"12\" type:\"string\"`",
          "7397:  ShareStatus *string `type:\"string\" enum:\"ShareStatus\"`",
          "7413:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigStatus\"`",
          "7414: }",
          "7417: func (s ResolverQueryLogConfig) String() string {",
          "7418:  return awsutil.Prettify(s)",
          "7419: }",
          "7422: func (s ResolverQueryLogConfig) GoString() string {",
          "7423:  return s.String()",
          "7424: }",
          "7427: func (s *ResolverQueryLogConfig) SetArn(v string) *ResolverQueryLogConfig {",
          "7428:  s.Arn = &v",
          "7429:  return s",
          "7430: }",
          "7433: func (s *ResolverQueryLogConfig) SetAssociationCount(v int64) *ResolverQueryLogConfig {",
          "7434:  s.AssociationCount = &v",
          "7435:  return s",
          "7436: }",
          "7439: func (s *ResolverQueryLogConfig) SetCreationTime(v string) *ResolverQueryLogConfig {",
          "7440:  s.CreationTime = &v",
          "7441:  return s",
          "7442: }",
          "7445: func (s *ResolverQueryLogConfig) SetCreatorRequestId(v string) *ResolverQueryLogConfig {",
          "7446:  s.CreatorRequestId = &v",
          "7447:  return s",
          "7448: }",
          "7451: func (s *ResolverQueryLogConfig) SetDestinationArn(v string) *ResolverQueryLogConfig {",
          "7452:  s.DestinationArn = &v",
          "7453:  return s",
          "7454: }",
          "7457: func (s *ResolverQueryLogConfig) SetId(v string) *ResolverQueryLogConfig {",
          "7458:  s.Id = &v",
          "7459:  return s",
          "7460: }",
          "7463: func (s *ResolverQueryLogConfig) SetName(v string) *ResolverQueryLogConfig {",
          "7464:  s.Name = &v",
          "7465:  return s",
          "7466: }",
          "7469: func (s *ResolverQueryLogConfig) SetOwnerId(v string) *ResolverQueryLogConfig {",
          "7470:  s.OwnerId = &v",
          "7471:  return s",
          "7472: }",
          "7475: func (s *ResolverQueryLogConfig) SetShareStatus(v string) *ResolverQueryLogConfig {",
          "7476:  s.ShareStatus = &v",
          "7477:  return s",
          "7478: }",
          "7481: func (s *ResolverQueryLogConfig) SetStatus(v string) *ResolverQueryLogConfig {",
          "7482:  s.Status = &v",
          "7483:  return s",
          "7484: }",
          "7492: type ResolverQueryLogConfigAssociation struct {",
          "7493:  _ struct{} `type:\"structure\"`",
          "7497:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7507:  Error *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationError\"`",
          "7511:  ErrorMessage *string `type:\"string\"`",
          "7514:  Id *string `min:\"1\" type:\"string\"`",
          "7517:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\"`",
          "7520:  ResourceId *string `min:\"1\" type:\"string\"`",
          "7536:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationStatus\"`",
          "7537: }",
          "7540: func (s ResolverQueryLogConfigAssociation) String() string {",
          "7541:  return awsutil.Prettify(s)",
          "7542: }",
          "7545: func (s ResolverQueryLogConfigAssociation) GoString() string {",
          "7546:  return s.String()",
          "7547: }",
          "7550: func (s *ResolverQueryLogConfigAssociation) SetCreationTime(v string) *ResolverQueryLogConfigAssociation {",
          "7551:  s.CreationTime = &v",
          "7552:  return s",
          "7553: }",
          "7556: func (s *ResolverQueryLogConfigAssociation) SetError(v string) *ResolverQueryLogConfigAssociation {",
          "7557:  s.Error = &v",
          "7558:  return s",
          "7559: }",
          "7562: func (s *ResolverQueryLogConfigAssociation) SetErrorMessage(v string) *ResolverQueryLogConfigAssociation {",
          "7563:  s.ErrorMessage = &v",
          "7564:  return s",
          "7565: }",
          "7568: func (s *ResolverQueryLogConfigAssociation) SetId(v string) *ResolverQueryLogConfigAssociation {",
          "7569:  s.Id = &v",
          "7570:  return s",
          "7571: }",
          "7574: func (s *ResolverQueryLogConfigAssociation) SetResolverQueryLogConfigId(v string) *ResolverQueryLogConfigAssociation {",
          "7575:  s.ResolverQueryLogConfigId = &v",
          "7576:  return s",
          "7577: }",
          "7580: func (s *ResolverQueryLogConfigAssociation) SetResourceId(v string) *ResolverQueryLogConfigAssociation {",
          "7581:  s.ResourceId = &v",
          "7582:  return s",
          "7583: }",
          "7586: func (s *ResolverQueryLogConfigAssociation) SetStatus(v string) *ResolverQueryLogConfigAssociation {",
          "7587:  s.Status = &v",
          "7588:  return s",
          "7589: }",
          "7607:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7625:  ModificationTime *string `min:\"20\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4873:  return s",
          "4874: }",
          "4877: func (s *ResolverRule) SetCreatorRequestId(v string) *ResolverRule {",
          "4878:  s.CreatorRequestId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7688: func (s *ResolverRule) SetCreationTime(v string) *ResolverRule {",
          "7689:  s.CreationTime = &v",
          "7690:  return s",
          "7691: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4891:  return s",
          "4892: }",
          "4895: func (s *ResolverRule) SetName(v string) *ResolverRule {",
          "4896:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7712: func (s *ResolverRule) SetModificationTime(v string) *ResolverRule {",
          "7713:  s.ModificationTime = &v",
          "7714:  return s",
          "7715: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5342: }",
          "",
          "[Removed Lines]",
          "5337:  Key *string `type:\"string\"`",
          "5341:  Value *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "8166:  Key *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8172:  Value *string `type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "5351:  return s.String()",
          "5352: }",
          "5355: func (s *Tag) SetKey(v string) *Tag {",
          "5356:  s.Key = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8186: func (s *Tag) Validate() error {",
          "8187:  invalidParams := request.ErrInvalidParams{Context: \"Tag\"}",
          "8188:  if s.Key == nil {",
          "8189:   invalidParams.Add(request.NewErrParamRequired(\"Key\"))",
          "8190:  }",
          "8191:  if s.Key != nil && len(*s.Key) < 1 {",
          "8192:   invalidParams.Add(request.NewErrParamMinLen(\"Key\", 1))",
          "8193:  }",
          "8194:  if s.Value == nil {",
          "8195:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "8196:  }",
          "8198:  if invalidParams.Len() > 0 {",
          "8199:   return invalidParams",
          "8200:  }",
          "8201:  return nil",
          "8202: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "5412:  if s.Tags == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "5414:  }",
          "5416:  if invalidParams.Len() > 0 {",
          "5417:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8265:  if s.Tags != nil {",
          "8266:   for i, v := range s.Tags {",
          "8267:    if v == nil {",
          "8268:     continue",
          "8269:    }",
          "8270:    if err := v.Validate(); err != nil {",
          "8271:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "8272:    }",
          "8273:   }",
          "8274:  }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "5944:  }",
          "5945: }",
          "5947: const (",
          "5949:  ResolverRuleAssociationStatusCreating = \"CREATING\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8807: const (",
          "8809:  ResolverQueryLogConfigAssociationErrorNone = \"NONE\"",
          "8812:  ResolverQueryLogConfigAssociationErrorDestinationNotFound = \"DESTINATION_NOT_FOUND\"",
          "8815:  ResolverQueryLogConfigAssociationErrorAccessDenied = \"ACCESS_DENIED\"",
          "8818:  ResolverQueryLogConfigAssociationErrorInternalServiceError = \"INTERNAL_SERVICE_ERROR\"",
          "8819: )",
          "8822: func ResolverQueryLogConfigAssociationError_Values() []string {",
          "8823:  return []string{",
          "8824:   ResolverQueryLogConfigAssociationErrorNone,",
          "8825:   ResolverQueryLogConfigAssociationErrorDestinationNotFound,",
          "8826:   ResolverQueryLogConfigAssociationErrorAccessDenied,",
          "8827:   ResolverQueryLogConfigAssociationErrorInternalServiceError,",
          "8828:  }",
          "8829: }",
          "8831: const (",
          "8833:  ResolverQueryLogConfigAssociationStatusCreating = \"CREATING\"",
          "8836:  ResolverQueryLogConfigAssociationStatusActive = \"ACTIVE\"",
          "8839:  ResolverQueryLogConfigAssociationStatusActionNeeded = \"ACTION_NEEDED\"",
          "8842:  ResolverQueryLogConfigAssociationStatusDeleting = \"DELETING\"",
          "8845:  ResolverQueryLogConfigAssociationStatusFailed = \"FAILED\"",
          "8846: )",
          "8849: func ResolverQueryLogConfigAssociationStatus_Values() []string {",
          "8850:  return []string{",
          "8851:   ResolverQueryLogConfigAssociationStatusCreating,",
          "8852:   ResolverQueryLogConfigAssociationStatusActive,",
          "8853:   ResolverQueryLogConfigAssociationStatusActionNeeded,",
          "8854:   ResolverQueryLogConfigAssociationStatusDeleting,",
          "8855:   ResolverQueryLogConfigAssociationStatusFailed,",
          "8856:  }",
          "8857: }",
          "8859: const (",
          "8861:  ResolverQueryLogConfigStatusCreating = \"CREATING\"",
          "8864:  ResolverQueryLogConfigStatusCreated = \"CREATED\"",
          "8867:  ResolverQueryLogConfigStatusDeleting = \"DELETING\"",
          "8870:  ResolverQueryLogConfigStatusFailed = \"FAILED\"",
          "8871: )",
          "8874: func ResolverQueryLogConfigStatus_Values() []string {",
          "8875:  return []string{",
          "8876:   ResolverQueryLogConfigStatusCreating,",
          "8877:   ResolverQueryLogConfigStatusCreated,",
          "8878:   ResolverQueryLogConfigStatusDeleting,",
          "8879:   ResolverQueryLogConfigStatusFailed,",
          "8880:  }",
          "8881: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6035:   ShareStatusSharedByMe,",
          "6036:  }",
          "6037: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8975: const (",
          "8977:  SortOrderAscending = \"ASCENDING\"",
          "8980:  SortOrderDescending = \"DESCENDING\"",
          "8981: )",
          "8984: func SortOrder_Values() []string {",
          "8985:  return []string{",
          "8986:   SortOrderAscending,",
          "8987:   SortOrderDescending,",
          "8988:  }",
          "8989: }",
          "",
          "---------------"
        ],
        "service/route53resolver/doc.go||service/route53resolver/doc.go": [
          "File: service/route53resolver/doc.go -> service/route53resolver/doc.go"
        ],
        "service/route53resolver/errors.go||service/route53resolver/errors.go": [
          "File: service/route53resolver/errors.go -> service/route53resolver/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  ErrCodeAccessDeniedException = \"AccessDeniedException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88: )",
          "90: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "91:  \"InternalServiceErrorException\": newErrorInternalServiceErrorException,",
          "92:  \"InvalidNextTokenException\":     newErrorInvalidNextTokenException,",
          "93:  \"InvalidParameterException\":     newErrorInvalidParameterException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:  \"AccessDeniedException\":         newErrorAccessDeniedException,",
          "",
          "---------------"
        ],
        "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go": [
          "File: service/route53resolver/route53resolveriface/interface.go -> service/route53resolver/route53resolveriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  AssociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.AssociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.AssociateResolverEndpointIpAddressOutput, error)",
          "65:  AssociateResolverEndpointIpAddressRequest(*route53resolver.AssociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.AssociateResolverEndpointIpAddressOutput)",
          "67:  AssociateResolverRule(*route53resolver.AssociateResolverRuleInput) (*route53resolver.AssociateResolverRuleOutput, error)",
          "68:  AssociateResolverRuleWithContext(aws.Context, *route53resolver.AssociateResolverRuleInput, ...request.Option) (*route53resolver.AssociateResolverRuleOutput, error)",
          "69:  AssociateResolverRuleRequest(*route53resolver.AssociateResolverRuleInput) (*request.Request, *route53resolver.AssociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  AssociateResolverQueryLogConfig(*route53resolver.AssociateResolverQueryLogConfigInput) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "68:  AssociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.AssociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "69:  AssociateResolverQueryLogConfigRequest(*route53resolver.AssociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.AssociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  CreateResolverEndpointWithContext(aws.Context, *route53resolver.CreateResolverEndpointInput, ...request.Option) (*route53resolver.CreateResolverEndpointOutput, error)",
          "73:  CreateResolverEndpointRequest(*route53resolver.CreateResolverEndpointInput) (*request.Request, *route53resolver.CreateResolverEndpointOutput)",
          "75:  CreateResolverRule(*route53resolver.CreateResolverRuleInput) (*route53resolver.CreateResolverRuleOutput, error)",
          "76:  CreateResolverRuleWithContext(aws.Context, *route53resolver.CreateResolverRuleInput, ...request.Option) (*route53resolver.CreateResolverRuleOutput, error)",
          "77:  CreateResolverRuleRequest(*route53resolver.CreateResolverRuleInput) (*request.Request, *route53resolver.CreateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:  CreateResolverQueryLogConfig(*route53resolver.CreateResolverQueryLogConfigInput) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "80:  CreateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.CreateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "81:  CreateResolverQueryLogConfigRequest(*route53resolver.CreateResolverQueryLogConfigInput) (*request.Request, *route53resolver.CreateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  DeleteResolverEndpointWithContext(aws.Context, *route53resolver.DeleteResolverEndpointInput, ...request.Option) (*route53resolver.DeleteResolverEndpointOutput, error)",
          "81:  DeleteResolverEndpointRequest(*route53resolver.DeleteResolverEndpointInput) (*request.Request, *route53resolver.DeleteResolverEndpointOutput)",
          "83:  DeleteResolverRule(*route53resolver.DeleteResolverRuleInput) (*route53resolver.DeleteResolverRuleOutput, error)",
          "84:  DeleteResolverRuleWithContext(aws.Context, *route53resolver.DeleteResolverRuleInput, ...request.Option) (*route53resolver.DeleteResolverRuleOutput, error)",
          "85:  DeleteResolverRuleRequest(*route53resolver.DeleteResolverRuleInput) (*request.Request, *route53resolver.DeleteResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  DeleteResolverQueryLogConfig(*route53resolver.DeleteResolverQueryLogConfigInput) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "92:  DeleteResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DeleteResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "93:  DeleteResolverQueryLogConfigRequest(*route53resolver.DeleteResolverQueryLogConfigInput) (*request.Request, *route53resolver.DeleteResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:  DisassociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.DisassociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.DisassociateResolverEndpointIpAddressOutput, error)",
          "89:  DisassociateResolverEndpointIpAddressRequest(*route53resolver.DisassociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.DisassociateResolverEndpointIpAddressOutput)",
          "91:  DisassociateResolverRule(*route53resolver.DisassociateResolverRuleInput) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "92:  DisassociateResolverRuleWithContext(aws.Context, *route53resolver.DisassociateResolverRuleInput, ...request.Option) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "93:  DisassociateResolverRuleRequest(*route53resolver.DisassociateResolverRuleInput) (*request.Request, *route53resolver.DisassociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DisassociateResolverQueryLogConfig(*route53resolver.DisassociateResolverQueryLogConfigInput) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "104:  DisassociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DisassociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "105:  DisassociateResolverQueryLogConfigRequest(*route53resolver.DisassociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.DisassociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96:  GetResolverEndpointWithContext(aws.Context, *route53resolver.GetResolverEndpointInput, ...request.Option) (*route53resolver.GetResolverEndpointOutput, error)",
          "97:  GetResolverEndpointRequest(*route53resolver.GetResolverEndpointInput) (*request.Request, *route53resolver.GetResolverEndpointOutput)",
          "99:  GetResolverRule(*route53resolver.GetResolverRuleInput) (*route53resolver.GetResolverRuleOutput, error)",
          "100:  GetResolverRuleWithContext(aws.Context, *route53resolver.GetResolverRuleInput, ...request.Option) (*route53resolver.GetResolverRuleOutput, error)",
          "101:  GetResolverRuleRequest(*route53resolver.GetResolverRuleInput) (*request.Request, *route53resolver.GetResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:  GetResolverQueryLogConfig(*route53resolver.GetResolverQueryLogConfigInput) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "116:  GetResolverQueryLogConfigWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "117:  GetResolverQueryLogConfigRequest(*route53resolver.GetResolverQueryLogConfigInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigOutput)",
          "119:  GetResolverQueryLogConfigAssociation(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "120:  GetResolverQueryLogConfigAssociationWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigAssociationInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "121:  GetResolverQueryLogConfigAssociationRequest(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigAssociationOutput)",
          "123:  GetResolverQueryLogConfigPolicy(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "124:  GetResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "125:  GetResolverQueryLogConfigPolicyRequest(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "122:  ListResolverEndpointsPages(*route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool) error",
          "123:  ListResolverEndpointsPagesWithContext(aws.Context, *route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool, ...request.Option) error",
          "125:  ListResolverRuleAssociations(*route53resolver.ListResolverRuleAssociationsInput) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "126:  ListResolverRuleAssociationsWithContext(aws.Context, *route53resolver.ListResolverRuleAssociationsInput, ...request.Option) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "127:  ListResolverRuleAssociationsRequest(*route53resolver.ListResolverRuleAssociationsInput) (*request.Request, *route53resolver.ListResolverRuleAssociationsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  ListResolverQueryLogConfigAssociations(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "154:  ListResolverQueryLogConfigAssociationsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "155:  ListResolverQueryLogConfigAssociationsRequest(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigAssociationsOutput)",
          "157:  ListResolverQueryLogConfigAssociationsPages(*route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool) error",
          "158:  ListResolverQueryLogConfigAssociationsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool, ...request.Option) error",
          "160:  ListResolverQueryLogConfigs(*route53resolver.ListResolverQueryLogConfigsInput) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "161:  ListResolverQueryLogConfigsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "162:  ListResolverQueryLogConfigsRequest(*route53resolver.ListResolverQueryLogConfigsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigsOutput)",
          "164:  ListResolverQueryLogConfigsPages(*route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool) error",
          "165:  ListResolverQueryLogConfigsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "140:  ListTagsForResourceWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, ...request.Option) (*route53resolver.ListTagsForResourceOutput, error)",
          "141:  ListTagsForResourceRequest(*route53resolver.ListTagsForResourceInput) (*request.Request, *route53resolver.ListTagsForResourceOutput)",
          "143:  PutResolverRulePolicy(*route53resolver.PutResolverRulePolicyInput) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "144:  PutResolverRulePolicyWithContext(aws.Context, *route53resolver.PutResolverRulePolicyInput, ...request.Option) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "145:  PutResolverRulePolicyRequest(*route53resolver.PutResolverRulePolicyInput) (*request.Request, *route53resolver.PutResolverRulePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185:  ListTagsForResourcePages(*route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool) error",
          "186:  ListTagsForResourcePagesWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "188:  PutResolverQueryLogConfigPolicy(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "189:  PutResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.PutResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "190:  PutResolverQueryLogConfigPolicyRequest(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.PutResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "662385f2878df266eb80077fd5554c17534b3864",
      "candidate_info": {
        "commit_hash": "662385f2878df266eb80077fd5554c17534b3864",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/662385f2878df266eb80077fd5554c17534b3864",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/mediaconvert/2017-08-29/api-2.json",
          "models/apis/mediaconvert/2017-08-29/docs-2.json",
          "models/apis/meteringmarketplace/2016-01-14/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/sesv2/2019-09-27/api-2.json",
          "models/apis/sesv2/2019-09-27/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/apis/support/2013-04-15/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go",
          "service/rds/api.go",
          "service/route53/api.go",
          "service/route53/route53iface/interface.go",
          "service/sesv2/api.go",
          "service/ssm/api.go",
          "service/support/api.go",
          "service/support/doc.go"
        ],
        "message": "Release v1.32.5 (2020-06-18) ===\n\n### Service Client Updates\n* `service/mediaconvert`: Updates service API and documentation\n  * AWS Elemental MediaConvert SDK has added support for NexGuard FileMarker SDK, which allows NexGuard partners to watermark proprietary content in mezzanine and OTT streaming contexts.\n* `service/meteringmarketplace`: Updates service documentation\n  * Documentation updates for meteringmarketplace\n* `service/rds`: Updates service API and documentation\n  * Adding support for global write forwarding on secondary clusters in an Aurora global database.\n* `service/route53`: Updates service API and documentation\n  * Added a new ListHostedZonesByVPC API for customers to list all the private hosted zones that a specified VPC is associated with.\n* `service/sesv2`: Updates service API and documentation\n* `service/ssm`: Updates service API and documentation\n  * Added offset support for specifying the number of days to wait after the date and time specified by a CRON expression before running the maintenance window.\n* `service/support`: Updates service documentation\n  * Documentation updates for support",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/marketplacemetering/api.go||service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go||service/mediaconvert/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/sesv2/api.go||service/sesv2/api.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/support/api.go||service/support/api.go",
          "service/support/doc.go||service/support/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5000:   \"servicecatalog\": service{",
          "5002:    Endpoints: endpoints{",
          "5003:     \"ap-east-1\":      endpoint{},",
          "5004:     \"ap-northeast-1\": endpoint{},",
          "5005:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5003:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5009:     \"ca-central-1\":   endpoint{},",
          "5010:     \"eu-central-1\":   endpoint{},",
          "5011:     \"eu-north-1\":     endpoint{},",
          "5012:     \"eu-west-1\":      endpoint{},",
          "5013:     \"eu-west-2\":      endpoint{},",
          "5014:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8946:     \"us-isob-east-1\": endpoint{},",
          "8947:    },",
          "8948:   },",
          "8949:   \"license-manager\": service{",
          "8951:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8949:    },",
          "8950:   },",
          "8951:   \"lambda\": service{",
          "8953:    Endpoints: endpoints{",
          "8954:     \"us-isob-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.32.4\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.32.5\"",
          "",
          "---------------"
        ],
        "service/marketplacemetering/api.go||service/marketplacemetering/api.go": [
          "File: service/marketplacemetering/api.go -> service/marketplacemetering/api.go"
        ],
        "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go": [
          "File: service/marketplacemetering/errors.go -> service/marketplacemetering/errors.go"
        ],
        "service/mediaconvert/api.go||service/mediaconvert/api.go": [
          "File: service/mediaconvert/api.go -> service/mediaconvert/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14988:  return s",
          "14989: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15027: type NexGuardFileMarkerSettings struct {",
          "15028:  _ struct{} `type:\"structure\"`",
          "15034:  License *string `locationName:\"license\" min:\"1\" type:\"string\"`",
          "15047:  Payload *int64 `locationName:\"payload\" type:\"integer\"`",
          "15052:  Preset *string `locationName:\"preset\" min:\"1\" type:\"string\"`",
          "15057:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"WatermarkingStrength\"`",
          "15058: }",
          "15061: func (s NexGuardFileMarkerSettings) String() string {",
          "15062:  return awsutil.Prettify(s)",
          "15063: }",
          "15066: func (s NexGuardFileMarkerSettings) GoString() string {",
          "15067:  return s.String()",
          "15068: }",
          "15071: func (s *NexGuardFileMarkerSettings) Validate() error {",
          "15072:  invalidParams := request.ErrInvalidParams{Context: \"NexGuardFileMarkerSettings\"}",
          "15073:  if s.License != nil && len(*s.License) < 1 {",
          "15074:   invalidParams.Add(request.NewErrParamMinLen(\"License\", 1))",
          "15075:  }",
          "15076:  if s.Preset != nil && len(*s.Preset) < 1 {",
          "15077:   invalidParams.Add(request.NewErrParamMinLen(\"Preset\", 1))",
          "15078:  }",
          "15080:  if invalidParams.Len() > 0 {",
          "15081:   return invalidParams",
          "15082:  }",
          "15083:  return nil",
          "15084: }",
          "15087: func (s *NexGuardFileMarkerSettings) SetLicense(v string) *NexGuardFileMarkerSettings {",
          "15088:  s.License = &v",
          "15089:  return s",
          "15090: }",
          "15093: func (s *NexGuardFileMarkerSettings) SetPayload(v int64) *NexGuardFileMarkerSettings {",
          "15094:  s.Payload = &v",
          "15095:  return s",
          "15096: }",
          "15099: func (s *NexGuardFileMarkerSettings) SetPreset(v string) *NexGuardFileMarkerSettings {",
          "15100:  s.Preset = &v",
          "15101:  return s",
          "15102: }",
          "15105: func (s *NexGuardFileMarkerSettings) SetStrength(v string) *NexGuardFileMarkerSettings {",
          "15106:  s.Strength = &v",
          "15107:  return s",
          "15108: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15832:  return s",
          "15833: }",
          "15837: type Preset struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15957: type PartnerWatermarking struct {",
          "15958:  _ struct{} `type:\"structure\"`",
          "15963:  NexguardFileMarkerSettings *NexGuardFileMarkerSettings `locationName:\"nexguardFileMarkerSettings\" type:\"structure\"`",
          "15964: }",
          "15967: func (s PartnerWatermarking) String() string {",
          "15968:  return awsutil.Prettify(s)",
          "15969: }",
          "15972: func (s PartnerWatermarking) GoString() string {",
          "15973:  return s.String()",
          "15974: }",
          "15977: func (s *PartnerWatermarking) Validate() error {",
          "15978:  invalidParams := request.ErrInvalidParams{Context: \"PartnerWatermarking\"}",
          "15979:  if s.NexguardFileMarkerSettings != nil {",
          "15980:   if err := s.NexguardFileMarkerSettings.Validate(); err != nil {",
          "15981:    invalidParams.AddNested(\"NexguardFileMarkerSettings\", err.(request.ErrInvalidParams))",
          "15982:   }",
          "15983:  }",
          "15985:  if invalidParams.Len() > 0 {",
          "15986:   return invalidParams",
          "15987:  }",
          "15988:  return nil",
          "15989: }",
          "15992: func (s *PartnerWatermarking) SetNexguardFileMarkerSettings(v *NexGuardFileMarkerSettings) *PartnerWatermarking {",
          "15993:  s.NexguardFileMarkerSettings = v",
          "15994:  return s",
          "15995: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "18438:  NoiseReducer *NoiseReducer `locationName:\"noiseReducer\" type:\"structure\"`",
          "18442:  TimecodeBurnin *TimecodeBurnin `locationName:\"timecodeBurnin\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18616:  PartnerWatermarking *PartnerWatermarking `locationName:\"partnerWatermarking\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "18470:    invalidParams.AddNested(\"NoiseReducer\", err.(request.ErrInvalidParams))",
          "18471:   }",
          "18472:  }",
          "18473:  if s.TimecodeBurnin != nil {",
          "18474:   if err := s.TimecodeBurnin.Validate(); err != nil {",
          "18475:    invalidParams.AddNested(\"TimecodeBurnin\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18651:  if s.PartnerWatermarking != nil {",
          "18652:   if err := s.PartnerWatermarking.Validate(); err != nil {",
          "18653:    invalidParams.AddNested(\"PartnerWatermarking\", err.(request.ErrInvalidParams))",
          "18654:   }",
          "18655:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "18512:  return s",
          "18513: }",
          "18516: func (s *VideoPreprocessor) SetTimecodeBurnin(v *TimecodeBurnin) *VideoPreprocessor {",
          "18517:  s.TimecodeBurnin = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18699: func (s *VideoPreprocessor) SetPartnerWatermarking(v *PartnerWatermarking) *VideoPreprocessor {",
          "18700:  s.PartnerWatermarking = v",
          "18701:  return s",
          "18702: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "23822:  Vp9RateControlModeVbr = \"VBR\"",
          "23823: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24023: const (",
          "24025:  WatermarkingStrengthLightest = \"LIGHTEST\"",
          "24028:  WatermarkingStrengthLighter = \"LIGHTER\"",
          "24031:  WatermarkingStrengthDefault = \"DEFAULT\"",
          "24034:  WatermarkingStrengthStronger = \"STRONGER\"",
          "24037:  WatermarkingStrengthStrongest = \"STRONGEST\"",
          "24038: )",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16580:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16593:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16911:  return s",
          "16912: }",
          "16915: func (s *CreateDBClusterInput) SetEnableHttpEndpoint(v bool) *CreateDBClusterInput {",
          "16916:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16928: func (s *CreateDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *CreateDBClusterInput {",
          "16929:  s.EnableGlobalWriteForwarding = &v",
          "16930:  return s",
          "16931: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20135:  EngineVersion *string `type:\"string\"`",
          "20138:  HostedZoneId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174:  GlobalWriteForwardingRequested *bool `type:\"boolean\"`",
          "20178:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "20432:  return s",
          "20433: }",
          "20436: func (s *DBCluster) SetHostedZoneId(v string) *DBCluster {",
          "20437:  s.HostedZoneId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20479: func (s *DBCluster) SetGlobalWriteForwardingRequested(v bool) *DBCluster {",
          "20480:  s.GlobalWriteForwardingRequested = &v",
          "20481:  return s",
          "20482: }",
          "20485: func (s *DBCluster) SetGlobalWriteForwardingStatus(v string) *DBCluster {",
          "20486:  s.GlobalWriteForwardingStatus = &v",
          "20487:  return s",
          "20488: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "30859:  DBClusterArn *string `type:\"string\"`",
          "30863:  IsWriter *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30926:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "30883:  return s",
          "30884: }",
          "30887: func (s *GlobalClusterMember) SetIsWriter(v bool) *GlobalClusterMember {",
          "30888:  s.IsWriter = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30954: func (s *GlobalClusterMember) SetGlobalWriteForwardingStatus(v string) *GlobalClusterMember {",
          "30955:  s.GlobalWriteForwardingStatus = &v",
          "30956:  return s",
          "30957: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "31879:  DomainIAMRoleName *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31961:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "32093:  return s",
          "32094: }",
          "32097: func (s *ModifyDBClusterInput) SetEnableHttpEndpoint(v bool) *ModifyDBClusterInput {",
          "32098:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32179: func (s *ModifyDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *ModifyDBClusterInput {",
          "32180:  s.EnableGlobalWriteForwarding = &v",
          "32181:  return s",
          "32182: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "41537:  TargetTypeTrackedCluster = \"TRACKED_CLUSTER\"",
          "41538: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41667: const (",
          "41669:  WriteForwardingStatusEnabled = \"enabled\"",
          "41672:  WriteForwardingStatusDisabled = \"disabled\"",
          "41675:  WriteForwardingStatusEnabling = \"enabling\"",
          "41678:  WriteForwardingStatusDisabling = \"disabling\"",
          "41681:  WriteForwardingStatusUnknown = \"unknown\"",
          "41682: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4304:  return out, req.Send()",
          "4305: }",
          "4307: const opListQueryLoggingConfigs = \"ListQueryLoggingConfigs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4316: const opListHostedZonesByVPC = \"ListHostedZonesByVPC\"",
          "4342: func (c *Route53) ListHostedZonesByVPCRequest(input *ListHostedZonesByVPCInput) (req *request.Request, output *ListHostedZonesByVPCOutput) {",
          "4343:  op := &request.Operation{",
          "4344:   Name:       opListHostedZonesByVPC,",
          "4345:   HTTPMethod: \"GET\",",
          "4346:   HTTPPath:   \"/2013-04-01/hostedzonesbyvpc\",",
          "4347:  }",
          "4349:  if input == nil {",
          "4350:   input = &ListHostedZonesByVPCInput{}",
          "4351:  }",
          "4353:  output = &ListHostedZonesByVPCOutput{}",
          "4354:  req = c.newRequest(op, input, output)",
          "4355:  return",
          "4356: }",
          "4388: func (c *Route53) ListHostedZonesByVPC(input *ListHostedZonesByVPCInput) (*ListHostedZonesByVPCOutput, error) {",
          "4389:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4390:  return out, req.Send()",
          "4391: }",
          "4402: func (c *Route53) ListHostedZonesByVPCWithContext(ctx aws.Context, input *ListHostedZonesByVPCInput, opts ...request.Option) (*ListHostedZonesByVPCOutput, error) {",
          "4403:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4404:  req.SetContext(ctx)",
          "4405:  req.ApplyOptions(opts...)",
          "4406:  return out, req.Send()",
          "4407: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10783:  return s",
          "10784: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10891: type HostedZoneOwner struct {",
          "10892:  _ struct{} `type:\"structure\"`",
          "10899:  OwningAccount *string `type:\"string\"`",
          "10906:  OwningService *string `type:\"string\"`",
          "10907: }",
          "10910: func (s HostedZoneOwner) String() string {",
          "10911:  return awsutil.Prettify(s)",
          "10912: }",
          "10915: func (s HostedZoneOwner) GoString() string {",
          "10916:  return s.String()",
          "10917: }",
          "10920: func (s *HostedZoneOwner) SetOwningAccount(v string) *HostedZoneOwner {",
          "10921:  s.OwningAccount = &v",
          "10922:  return s",
          "10923: }",
          "10926: func (s *HostedZoneOwner) SetOwningService(v string) *HostedZoneOwner {",
          "10927:  s.OwningService = &v",
          "10928:  return s",
          "10929: }",
          "10936: type HostedZoneSummary struct {",
          "10937:  _ struct{} `type:\"structure\"`",
          "10943:  HostedZoneId *string `type:\"string\" required:\"true\"`",
          "10948:  Name *string `type:\"string\" required:\"true\"`",
          "10954:  Owner *HostedZoneOwner `type:\"structure\" required:\"true\"`",
          "10955: }",
          "10958: func (s HostedZoneSummary) String() string {",
          "10959:  return awsutil.Prettify(s)",
          "10960: }",
          "10963: func (s HostedZoneSummary) GoString() string {",
          "10964:  return s.String()",
          "10965: }",
          "10968: func (s *HostedZoneSummary) SetHostedZoneId(v string) *HostedZoneSummary {",
          "10969:  s.HostedZoneId = &v",
          "10970:  return s",
          "10971: }",
          "10974: func (s *HostedZoneSummary) SetName(v string) *HostedZoneSummary {",
          "10975:  s.Name = &v",
          "10976:  return s",
          "10977: }",
          "10980: func (s *HostedZoneSummary) SetOwner(v *HostedZoneOwner) *HostedZoneSummary {",
          "10981:  s.Owner = v",
          "10982:  return s",
          "10983: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11285:  return s",
          "11286: }",
          "11290: type ListHostedZonesInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11489: type ListHostedZonesByVPCInput struct {",
          "11490:  _ struct{} `locationName:\"ListHostedZonesByVPCRequest\" type:\"structure\"`",
          "11497:  MaxItems *string `location:\"querystring\" locationName:\"maxitems\" type:\"string\"`",
          "11508:  NextToken *string `location:\"querystring\" locationName:\"nexttoken\" type:\"string\"`",
          "11513:  VPCId *string `location:\"querystring\" locationName:\"vpcid\" type:\"string\" required:\"true\"`",
          "11519:  VPCRegion *string `location:\"querystring\" locationName:\"vpcregion\" min:\"1\" type:\"string\" required:\"true\" enum:\"VPCRegion\"`",
          "11520: }",
          "11523: func (s ListHostedZonesByVPCInput) String() string {",
          "11524:  return awsutil.Prettify(s)",
          "11525: }",
          "11528: func (s ListHostedZonesByVPCInput) GoString() string {",
          "11529:  return s.String()",
          "11530: }",
          "11533: func (s *ListHostedZonesByVPCInput) Validate() error {",
          "11534:  invalidParams := request.ErrInvalidParams{Context: \"ListHostedZonesByVPCInput\"}",
          "11535:  if s.VPCId == nil {",
          "11536:   invalidParams.Add(request.NewErrParamRequired(\"VPCId\"))",
          "11537:  }",
          "11538:  if s.VPCRegion == nil {",
          "11539:   invalidParams.Add(request.NewErrParamRequired(\"VPCRegion\"))",
          "11540:  }",
          "11541:  if s.VPCRegion != nil && len(*s.VPCRegion) < 1 {",
          "11542:   invalidParams.Add(request.NewErrParamMinLen(\"VPCRegion\", 1))",
          "11543:  }",
          "11545:  if invalidParams.Len() > 0 {",
          "11546:   return invalidParams",
          "11547:  }",
          "11548:  return nil",
          "11549: }",
          "11552: func (s *ListHostedZonesByVPCInput) SetMaxItems(v string) *ListHostedZonesByVPCInput {",
          "11553:  s.MaxItems = &v",
          "11554:  return s",
          "11555: }",
          "11558: func (s *ListHostedZonesByVPCInput) SetNextToken(v string) *ListHostedZonesByVPCInput {",
          "11559:  s.NextToken = &v",
          "11560:  return s",
          "11561: }",
          "11564: func (s *ListHostedZonesByVPCInput) SetVPCId(v string) *ListHostedZonesByVPCInput {",
          "11565:  s.VPCId = &v",
          "11566:  return s",
          "11567: }",
          "11570: func (s *ListHostedZonesByVPCInput) SetVPCRegion(v string) *ListHostedZonesByVPCInput {",
          "11571:  s.VPCRegion = &v",
          "11572:  return s",
          "11573: }",
          "11575: type ListHostedZonesByVPCOutput struct {",
          "11576:  _ struct{} `type:\"structure\"`",
          "11584:  HostedZoneSummaries []*HostedZoneSummary `locationNameList:\"HostedZoneSummary\" type:\"list\" required:\"true\"`",
          "11590:  MaxItems *string `type:\"string\" required:\"true\"`",
          "11594:  NextToken *string `type:\"string\"`",
          "11595: }",
          "11598: func (s ListHostedZonesByVPCOutput) String() string {",
          "11599:  return awsutil.Prettify(s)",
          "11600: }",
          "11603: func (s ListHostedZonesByVPCOutput) GoString() string {",
          "11604:  return s.String()",
          "11605: }",
          "11608: func (s *ListHostedZonesByVPCOutput) SetHostedZoneSummaries(v []*HostedZoneSummary) *ListHostedZonesByVPCOutput {",
          "11609:  s.HostedZoneSummaries = v",
          "11610:  return s",
          "11611: }",
          "11614: func (s *ListHostedZonesByVPCOutput) SetMaxItems(v string) *ListHostedZonesByVPCOutput {",
          "11615:  s.MaxItems = &v",
          "11616:  return s",
          "11617: }",
          "11620: func (s *ListHostedZonesByVPCOutput) SetNextToken(v string) *ListHostedZonesByVPCOutput {",
          "11621:  s.NextToken = &v",
          "11622:  return s",
          "11623: }",
          "",
          "---------------"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:  ListHostedZonesByNameWithContext(aws.Context, *route53.ListHostedZonesByNameInput, ...request.Option) (*route53.ListHostedZonesByNameOutput, error)",
          "227:  ListHostedZonesByNameRequest(*route53.ListHostedZonesByNameInput) (*request.Request, *route53.ListHostedZonesByNameOutput)",
          "229:  ListQueryLoggingConfigs(*route53.ListQueryLoggingConfigsInput) (*route53.ListQueryLoggingConfigsOutput, error)",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:  ListHostedZonesByVPC(*route53.ListHostedZonesByVPCInput) (*route53.ListHostedZonesByVPCOutput, error)",
          "230:  ListHostedZonesByVPCWithContext(aws.Context, *route53.ListHostedZonesByVPCInput, ...request.Option) (*route53.ListHostedZonesByVPCOutput, error)",
          "231:  ListHostedZonesByVPCRequest(*route53.ListHostedZonesByVPCInput) (*request.Request, *route53.ListHostedZonesByVPCOutput)",
          "",
          "---------------"
        ],
        "service/sesv2/api.go||service/sesv2/api.go": [
          "File: service/sesv2/api.go -> service/sesv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12260:  EventTypeRenderingFailure = \"RENDERING_FAILURE\"",
          "12261: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12263:  EventTypeDeliveryDelay = \"DELIVERY_DELAY\"",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17137:  Schedule *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17154:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17207:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "17208:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "17209:  }",
          "17210:  if s.Tags != nil {",
          "17211:   for i, v := range s.Tags {",
          "17212:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17227:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "17228:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "17229:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17272:  return s",
          "17273: }",
          "17276: func (s *CreateMaintenanceWindowInput) SetScheduleTimezone(v string) *CreateMaintenanceWindowInput {",
          "17277:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17296: func (s *CreateMaintenanceWindowInput) SetScheduleOffset(v int64) *CreateMaintenanceWindowInput {",
          "17297:  s.ScheduleOffset = &v",
          "17298:  return s",
          "17299: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "25639:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25669:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "25729:  return s",
          "25730: }",
          "25733: func (s *GetMaintenanceWindowOutput) SetScheduleTimezone(v string) *GetMaintenanceWindowOutput {",
          "25734:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25763: func (s *GetMaintenanceWindowOutput) SetScheduleOffset(v int64) *GetMaintenanceWindowOutput {",
          "25764:  s.ScheduleOffset = &v",
          "25765:  return s",
          "25766: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "33642:  Schedule *string `min:\"1\" type:\"string\"`",
          "33646:  ScheduleTimezone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33682:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "33711:  return s",
          "33712: }",
          "33715: func (s *MaintenanceWindowIdentity) SetScheduleTimezone(v string) *MaintenanceWindowIdentity {",
          "33716:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33755: func (s *MaintenanceWindowIdentity) SetScheduleOffset(v int64) *MaintenanceWindowIdentity {",
          "33756:  s.ScheduleOffset = &v",
          "33757:  return s",
          "33758: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "43528:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43591:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "43570:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "43571:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "43572:  }",
          "43573:  if s.WindowId == nil {",
          "43574:   invalidParams.Add(request.NewErrParamRequired(\"WindowId\"))",
          "43575:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43636:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "43637:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "43638:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "43637:  return s",
          "43638: }",
          "43641: func (s *UpdateMaintenanceWindowInput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowInput {",
          "43642:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43707: func (s *UpdateMaintenanceWindowInput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowInput {",
          "43708:  s.ScheduleOffset = &v",
          "43709:  return s",
          "43710: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "43687:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43763:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "43759:  return s",
          "43760: }",
          "43763: func (s *UpdateMaintenanceWindowOutput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowOutput {",
          "43764:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43839: func (s *UpdateMaintenanceWindowOutput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowOutput {",
          "43840:  s.ScheduleOffset = &v",
          "43841:  return s",
          "43842: }",
          "",
          "---------------"
        ],
        "service/support/api.go||service/support/api.go": [
          "File: service/support/api.go -> service/support/api.go"
        ],
        "service/support/doc.go||service/support/doc.go": [
          "File: service/support/doc.go -> service/support/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "a2241b666314e4df78a58ca813e8e5cccb24e29f",
      "candidate_info": {
        "commit_hash": "a2241b666314e4df78a58ca813e8e5cccb24e29f",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/a2241b666314e4df78a58ca813e8e5cccb24e29f",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ce/2017-10-25/api-2.json",
          "models/apis/ce/2017-10-25/docs-2.json",
          "models/apis/connect/2017-08-08/api-2.json",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/connect/2017-08-08/paginators-1.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/iotwireless/2020-11-22/api-2.json",
          "models/apis/iotwireless/2020-11-22/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/connectiface/interface.go",
          "service/costexplorer/api.go",
          "service/elasticache/api.go",
          "service/glue/api.go",
          "service/iotwireless/api.go",
          "service/rds/api.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.36.14 (2020-12-22) ===\n\n### Service Client Updates\n* `service/ce`: Updates service API and documentation\n* `service/connect`: Updates service API, documentation, and paginators\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache\n* `service/glue`: Updates service API and documentation\n  * AWS Glue Find Matches machine learning transforms now support column importance scores.\n* `service/iotwireless`: Updates service API and documentation\n* `service/rds`: Updates service API and documentation\n  * Adds customer-owned IP address (CoIP) support to Amazon RDS on AWS Outposts.\n* `service/ssm`: Updates service API and documentation\n  * SSM Maintenance Window support for registering/updating maintenance window tasks without targets.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go",
          "service/costexplorer/api.go||service/costexplorer/api.go",
          "service/elasticache/api.go||service/elasticache/api.go",
          "service/glue/api.go||service/glue/api.go",
          "service/iotwireless/api.go||service/iotwireless/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1255:   \"codebuild\": service{",
          "1257:    Endpoints: endpoints{",
          "1258:     \"ap-east-1\":      endpoint{},",
          "1259:     \"ap-northeast-1\": endpoint{},",
          "1260:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1258:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1397:   \"codepipeline\": service{",
          "1399:    Endpoints: endpoints{",
          "1400:     \"ap-northeast-1\": endpoint{},",
          "1401:     \"ap-northeast-2\": endpoint{},",
          "1402:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1401:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3970:   \"macie2\": service{",
          "3972:    Endpoints: endpoints{",
          "3973:     \"ap-east-1\":      endpoint{},",
          "3974:     \"ap-northeast-1\": endpoint{},",
          "3975:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3975:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3979:     \"ca-central-1\":   endpoint{},",
          "3980:     \"eu-central-1\":   endpoint{},",
          "3981:     \"eu-north-1\":     endpoint{},",
          "3982:     \"eu-west-1\":      endpoint{},",
          "3983:     \"eu-west-2\":      endpoint{},",
          "3984:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3985:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4006:       Region: \"us-west-2\",",
          "4007:      },",
          "4008:     },",
          "4014:    },",
          "4015:   },",
          "4016:   \"managedblockchain\": service{",
          "",
          "[Removed Lines]",
          "4009:     \"sa-east-1\": endpoint{},",
          "4010:     \"us-east-1\": endpoint{},",
          "4011:     \"us-east-2\": endpoint{},",
          "4012:     \"us-west-1\": endpoint{},",
          "4013:     \"us-west-2\": endpoint{},",
          "",
          "[Added Lines]",
          "4013:     \"me-south-1\": endpoint{},",
          "4014:     \"sa-east-1\":  endpoint{},",
          "4015:     \"us-east-1\":  endpoint{},",
          "4016:     \"us-east-2\":  endpoint{},",
          "4017:     \"us-west-1\":  endpoint{},",
          "4018:     \"us-west-2\":  endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.36.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.36.14\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:  return out, req.Send()",
          "891: }",
          "893: const opCreateRoutingProfile = \"CreateRoutingProfile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "903: const opCreateQuickConnect = \"CreateQuickConnect\"",
          "929: func (c *Connect) CreateQuickConnectRequest(input *CreateQuickConnectInput) (req *request.Request, output *CreateQuickConnectOutput) {",
          "930:  op := &request.Operation{",
          "931:   Name:       opCreateQuickConnect,",
          "932:   HTTPMethod: \"PUT\",",
          "933:   HTTPPath:   \"/quick-connects/{InstanceId}\",",
          "934:  }",
          "936:  if input == nil {",
          "937:   input = &CreateQuickConnectInput{}",
          "938:  }",
          "940:  output = &CreateQuickConnectOutput{}",
          "941:  req = c.newRequest(op, input, output)",
          "942:  return",
          "943: }",
          "981: func (c *Connect) CreateQuickConnect(input *CreateQuickConnectInput) (*CreateQuickConnectOutput, error) {",
          "982:  req, out := c.CreateQuickConnectRequest(input)",
          "983:  return out, req.Send()",
          "984: }",
          "995: func (c *Connect) CreateQuickConnectWithContext(ctx aws.Context, input *CreateQuickConnectInput, opts ...request.Option) (*CreateQuickConnectOutput, error) {",
          "996:  req, out := c.CreateQuickConnectRequest(input)",
          "997:  req.SetContext(ctx)",
          "998:  req.ApplyOptions(opts...)",
          "999:  return out, req.Send()",
          "1000: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1458:  return out, req.Send()",
          "1459: }",
          "1461: const opDeleteUseCase = \"DeleteUseCase\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1570: const opDeleteQuickConnect = \"DeleteQuickConnect\"",
          "1596: func (c *Connect) DeleteQuickConnectRequest(input *DeleteQuickConnectInput) (req *request.Request, output *DeleteQuickConnectOutput) {",
          "1597:  op := &request.Operation{",
          "1598:   Name:       opDeleteQuickConnect,",
          "1599:   HTTPMethod: \"DELETE\",",
          "1600:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}\",",
          "1601:  }",
          "1603:  if input == nil {",
          "1604:   input = &DeleteQuickConnectInput{}",
          "1605:  }",
          "1607:  output = &DeleteQuickConnectOutput{}",
          "1608:  req = c.newRequest(op, input, output)",
          "1609:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1610:  return",
          "1611: }",
          "1643: func (c *Connect) DeleteQuickConnect(input *DeleteQuickConnectInput) (*DeleteQuickConnectOutput, error) {",
          "1644:  req, out := c.DeleteQuickConnectRequest(input)",
          "1645:  return out, req.Send()",
          "1646: }",
          "1657: func (c *Connect) DeleteQuickConnectWithContext(ctx aws.Context, input *DeleteQuickConnectInput, opts ...request.Option) (*DeleteQuickConnectOutput, error) {",
          "1658:  req, out := c.DeleteQuickConnectRequest(input)",
          "1659:  req.SetContext(ctx)",
          "1660:  req.ApplyOptions(opts...)",
          "1661:  return out, req.Send()",
          "1662: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2111:  return out, req.Send()",
          "2112: }",
          "2114: const opDescribeRoutingProfile = \"DescribeRoutingProfile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2323: const opDescribeQuickConnect = \"DescribeQuickConnect\"",
          "2349: func (c *Connect) DescribeQuickConnectRequest(input *DescribeQuickConnectInput) (req *request.Request, output *DescribeQuickConnectOutput) {",
          "2350:  op := &request.Operation{",
          "2351:   Name:       opDescribeQuickConnect,",
          "2352:   HTTPMethod: \"GET\",",
          "2353:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}\",",
          "2354:  }",
          "2356:  if input == nil {",
          "2357:   input = &DescribeQuickConnectInput{}",
          "2358:  }",
          "2360:  output = &DescribeQuickConnectOutput{}",
          "2361:  req = c.newRequest(op, input, output)",
          "2362:  return",
          "2363: }",
          "2395: func (c *Connect) DescribeQuickConnect(input *DescribeQuickConnectInput) (*DescribeQuickConnectOutput, error) {",
          "2396:  req, out := c.DescribeQuickConnectRequest(input)",
          "2397:  return out, req.Send()",
          "2398: }",
          "2409: func (c *Connect) DescribeQuickConnectWithContext(ctx aws.Context, input *DescribeQuickConnectInput, opts ...request.Option) (*DescribeQuickConnectOutput, error) {",
          "2410:  req, out := c.DescribeQuickConnectRequest(input)",
          "2411:  req.SetContext(ctx)",
          "2412:  req.ApplyOptions(opts...)",
          "2413:  return out, req.Send()",
          "2414: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5327:  return p.Err()",
          "5328: }",
          "",
          "[Removed Lines]",
          "5330: const opListRoutingProfileQueues = \"ListRoutingProfileQueues\"",
          "",
          "[Added Lines]",
          "5648: const opListQuickConnects = \"ListQuickConnects\"",
          "5674: func (c *Connect) ListQuickConnectsRequest(input *ListQuickConnectsInput) (req *request.Request, output *ListQuickConnectsOutput) {",
          "5675:  op := &request.Operation{",
          "5676:   Name:       opListQuickConnects,",
          "5677:   HTTPMethod: \"GET\",",
          "5678:   HTTPPath:   \"/quick-connects/{InstanceId}\",",
          "5679:   Paginator: &request.Paginator{",
          "5680:    InputTokens:     []string{\"NextToken\"},",
          "5681:    OutputTokens:    []string{\"NextToken\"},",
          "5682:    LimitToken:      \"MaxResults\",",
          "5683:    TruncationToken: \"\",",
          "5684:   },",
          "5685:  }",
          "5687:  if input == nil {",
          "5688:   input = &ListQuickConnectsInput{}",
          "5689:  }",
          "5691:  output = &ListQuickConnectsOutput{}",
          "5692:  req = c.newRequest(op, input, output)",
          "5693:  return",
          "5694: }",
          "5727: func (c *Connect) ListQuickConnects(input *ListQuickConnectsInput) (*ListQuickConnectsOutput, error) {",
          "5728:  req, out := c.ListQuickConnectsRequest(input)",
          "5729:  return out, req.Send()",
          "5730: }",
          "5741: func (c *Connect) ListQuickConnectsWithContext(ctx aws.Context, input *ListQuickConnectsInput, opts ...request.Option) (*ListQuickConnectsOutput, error) {",
          "5742:  req, out := c.ListQuickConnectsRequest(input)",
          "5743:  req.SetContext(ctx)",
          "5744:  req.ApplyOptions(opts...)",
          "5745:  return out, req.Send()",
          "5746: }",
          "5765: func (c *Connect) ListQuickConnectsPages(input *ListQuickConnectsInput, fn func(*ListQuickConnectsOutput, bool) bool) error {",
          "5766:  return c.ListQuickConnectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "5767: }",
          "5776: func (c *Connect) ListQuickConnectsPagesWithContext(ctx aws.Context, input *ListQuickConnectsInput, fn func(*ListQuickConnectsOutput, bool) bool, opts ...request.Option) error {",
          "5777:  p := request.Pagination{",
          "5778:   NewRequest: func() (*request.Request, error) {",
          "5779:    var inCpy *ListQuickConnectsInput",
          "5780:    if input != nil {",
          "5781:     tmp := *input",
          "5782:     inCpy = &tmp",
          "5783:    }",
          "5784:    req, _ := c.ListQuickConnectsRequest(inCpy)",
          "5785:    req.SetContext(ctx)",
          "5786:    req.ApplyOptions(opts...)",
          "5787:    return req, nil",
          "5788:   },",
          "5789:  }",
          "5791:  for p.Next() {",
          "5792:   if !fn(p.Page().(*ListQuickConnectsOutput), !p.HasNextPage()) {",
          "5793:    break",
          "5794:   }",
          "5795:  }",
          "5797:  return p.Err()",
          "5798: }",
          "5800: const opListRoutingProfileQueues = \"ListRoutingProfileQueues\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7945:  return out, req.Send()",
          "7946: }",
          "7975:  op := &request.Operation{",
          "7977:   HTTPMethod: \"POST\",",
          "7979:  }",
          "7981:  if input == nil {",
          "7983:  }",
          "7986:  req = c.newRequest(op, input, output)",
          "7987:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "7988:  return",
          "7989: }",
          "",
          "[Removed Lines]",
          "7948: const opUpdateRoutingProfileConcurrency = \"UpdateRoutingProfileConcurrency\"",
          "7974: func (c *Connect) UpdateRoutingProfileConcurrencyRequest(input *UpdateRoutingProfileConcurrencyInput) (req *request.Request, output *UpdateRoutingProfileConcurrencyOutput) {",
          "7976:   Name:       opUpdateRoutingProfileConcurrency,",
          "7978:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency\",",
          "7982:   input = &UpdateRoutingProfileConcurrencyInput{}",
          "7985:  output = &UpdateRoutingProfileConcurrencyOutput{}",
          "",
          "[Added Lines]",
          "8421: const opUpdateQuickConnectConfig = \"UpdateQuickConnectConfig\"",
          "8447: func (c *Connect) UpdateQuickConnectConfigRequest(input *UpdateQuickConnectConfigInput) (req *request.Request, output *UpdateQuickConnectConfigOutput) {",
          "8449:   Name:       opUpdateQuickConnectConfig,",
          "8451:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}/config\",",
          "8455:   input = &UpdateQuickConnectConfigInput{}",
          "8458:  output = &UpdateQuickConnectConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8022:  return out, req.Send()",
          "8023: }",
          "8036:  req.SetContext(ctx)",
          "8037:  req.ApplyOptions(opts...)",
          "8038:  return out, req.Send()",
          "8039: }",
          "8068:  op := &request.Operation{",
          "8070:   HTTPMethod: \"POST\",",
          "8072:  }",
          "8074:  if input == nil {",
          "8076:  }",
          "8079:  req = c.newRequest(op, input, output)",
          "8080:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8081:  return",
          "8082: }",
          "",
          "[Removed Lines]",
          "8020: func (c *Connect) UpdateRoutingProfileConcurrency(input *UpdateRoutingProfileConcurrencyInput) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8021:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8034: func (c *Connect) UpdateRoutingProfileConcurrencyWithContext(ctx aws.Context, input *UpdateRoutingProfileConcurrencyInput, opts ...request.Option) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8035:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8041: const opUpdateRoutingProfileDefaultOutboundQueue = \"UpdateRoutingProfileDefaultOutboundQueue\"",
          "8067: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueRequest(input *UpdateRoutingProfileDefaultOutboundQueueInput) (req *request.Request, output *UpdateRoutingProfileDefaultOutboundQueueOutput) {",
          "8069:   Name:       opUpdateRoutingProfileDefaultOutboundQueue,",
          "8071:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue\",",
          "8075:   input = &UpdateRoutingProfileDefaultOutboundQueueInput{}",
          "8078:  output = &UpdateRoutingProfileDefaultOutboundQueueOutput{}",
          "",
          "[Added Lines]",
          "8494: func (c *Connect) UpdateQuickConnectConfig(input *UpdateQuickConnectConfigInput) (*UpdateQuickConnectConfigOutput, error) {",
          "8495:  req, out := c.UpdateQuickConnectConfigRequest(input)",
          "8508: func (c *Connect) UpdateQuickConnectConfigWithContext(ctx aws.Context, input *UpdateQuickConnectConfigInput, opts ...request.Option) (*UpdateQuickConnectConfigOutput, error) {",
          "8509:  req, out := c.UpdateQuickConnectConfigRequest(input)",
          "8515: const opUpdateQuickConnectName = \"UpdateQuickConnectName\"",
          "8541: func (c *Connect) UpdateQuickConnectNameRequest(input *UpdateQuickConnectNameInput) (req *request.Request, output *UpdateQuickConnectNameOutput) {",
          "8543:   Name:       opUpdateQuickConnectName,",
          "8545:   HTTPPath:   \"/quick-connects/{InstanceId}/{QuickConnectId}/name\",",
          "8549:   input = &UpdateQuickConnectNameInput{}",
          "8552:  output = &UpdateQuickConnectNameOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8114:  return out, req.Send()",
          "8115: }",
          "8128:  req.SetContext(ctx)",
          "8129:  req.ApplyOptions(opts...)",
          "8130:  return out, req.Send()",
          "8131: }",
          "8160:  op := &request.Operation{",
          "8162:   HTTPMethod: \"POST\",",
          "8164:  }",
          "8166:  if input == nil {",
          "8168:  }",
          "8171:  req = c.newRequest(op, input, output)",
          "8172:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8173:  return",
          "8174: }",
          "",
          "[Removed Lines]",
          "8112: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueue(input *UpdateRoutingProfileDefaultOutboundQueueInput) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8113:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8126: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueWithContext(ctx aws.Context, input *UpdateRoutingProfileDefaultOutboundQueueInput, opts ...request.Option) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8127:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8133: const opUpdateRoutingProfileName = \"UpdateRoutingProfileName\"",
          "8159: func (c *Connect) UpdateRoutingProfileNameRequest(input *UpdateRoutingProfileNameInput) (req *request.Request, output *UpdateRoutingProfileNameOutput) {",
          "8161:   Name:       opUpdateRoutingProfileName,",
          "8163:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/name\",",
          "8167:   input = &UpdateRoutingProfileNameInput{}",
          "8170:  output = &UpdateRoutingProfileNameOutput{}",
          "",
          "[Added Lines]",
          "8589: func (c *Connect) UpdateQuickConnectName(input *UpdateQuickConnectNameInput) (*UpdateQuickConnectNameOutput, error) {",
          "8590:  req, out := c.UpdateQuickConnectNameRequest(input)",
          "8603: func (c *Connect) UpdateQuickConnectNameWithContext(ctx aws.Context, input *UpdateQuickConnectNameInput, opts ...request.Option) (*UpdateQuickConnectNameOutput, error) {",
          "8604:  req, out := c.UpdateQuickConnectNameRequest(input)",
          "8610: const opUpdateRoutingProfileConcurrency = \"UpdateRoutingProfileConcurrency\"",
          "8636: func (c *Connect) UpdateRoutingProfileConcurrencyRequest(input *UpdateRoutingProfileConcurrencyInput) (req *request.Request, output *UpdateRoutingProfileConcurrencyOutput) {",
          "8638:   Name:       opUpdateRoutingProfileConcurrency,",
          "8640:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency\",",
          "8644:   input = &UpdateRoutingProfileConcurrencyInput{}",
          "8647:  output = &UpdateRoutingProfileConcurrencyOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8210:  return out, req.Send()",
          "8211: }",
          "8224:  req.SetContext(ctx)",
          "8225:  req.ApplyOptions(opts...)",
          "8226:  return out, req.Send()",
          "8227: }",
          "8256:  op := &request.Operation{",
          "8258:   HTTPMethod: \"POST\",",
          "8260:  }",
          "8262:  if input == nil {",
          "8264:  }",
          "8267:  req = c.newRequest(op, input, output)",
          "8268:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8269:  return",
          "8270: }",
          "",
          "[Removed Lines]",
          "8208: func (c *Connect) UpdateRoutingProfileName(input *UpdateRoutingProfileNameInput) (*UpdateRoutingProfileNameOutput, error) {",
          "8209:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8222: func (c *Connect) UpdateRoutingProfileNameWithContext(ctx aws.Context, input *UpdateRoutingProfileNameInput, opts ...request.Option) (*UpdateRoutingProfileNameOutput, error) {",
          "8223:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8229: const opUpdateRoutingProfileQueues = \"UpdateRoutingProfileQueues\"",
          "8255: func (c *Connect) UpdateRoutingProfileQueuesRequest(input *UpdateRoutingProfileQueuesInput) (req *request.Request, output *UpdateRoutingProfileQueuesOutput) {",
          "8257:   Name:       opUpdateRoutingProfileQueues,",
          "8259:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "8263:   input = &UpdateRoutingProfileQueuesInput{}",
          "8266:  output = &UpdateRoutingProfileQueuesOutput{}",
          "",
          "[Added Lines]",
          "8682: func (c *Connect) UpdateRoutingProfileConcurrency(input *UpdateRoutingProfileConcurrencyInput) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8683:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8696: func (c *Connect) UpdateRoutingProfileConcurrencyWithContext(ctx aws.Context, input *UpdateRoutingProfileConcurrencyInput, opts ...request.Option) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "8697:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "8703: const opUpdateRoutingProfileDefaultOutboundQueue = \"UpdateRoutingProfileDefaultOutboundQueue\"",
          "8729: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueRequest(input *UpdateRoutingProfileDefaultOutboundQueueInput) (req *request.Request, output *UpdateRoutingProfileDefaultOutboundQueueOutput) {",
          "8731:   Name:       opUpdateRoutingProfileDefaultOutboundQueue,",
          "8733:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue\",",
          "8737:   input = &UpdateRoutingProfileDefaultOutboundQueueInput{}",
          "8740:  output = &UpdateRoutingProfileDefaultOutboundQueueOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8302:  return out, req.Send()",
          "8303: }",
          "",
          "[Removed Lines]",
          "8300: func (c *Connect) UpdateRoutingProfileQueues(input *UpdateRoutingProfileQueuesInput) (*UpdateRoutingProfileQueuesOutput, error) {",
          "8301:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "",
          "[Added Lines]",
          "8774: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueue(input *UpdateRoutingProfileDefaultOutboundQueueInput) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8775:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8776:  return out, req.Send()",
          "8777: }",
          "8788: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueWithContext(ctx aws.Context, input *UpdateRoutingProfileDefaultOutboundQueueInput, opts ...request.Option) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "8789:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "8790:  req.SetContext(ctx)",
          "8791:  req.ApplyOptions(opts...)",
          "8792:  return out, req.Send()",
          "8793: }",
          "8795: const opUpdateRoutingProfileName = \"UpdateRoutingProfileName\"",
          "8821: func (c *Connect) UpdateRoutingProfileNameRequest(input *UpdateRoutingProfileNameInput) (req *request.Request, output *UpdateRoutingProfileNameOutput) {",
          "8822:  op := &request.Operation{",
          "8823:   Name:       opUpdateRoutingProfileName,",
          "8824:   HTTPMethod: \"POST\",",
          "8825:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/name\",",
          "8826:  }",
          "8828:  if input == nil {",
          "8829:   input = &UpdateRoutingProfileNameInput{}",
          "8830:  }",
          "8832:  output = &UpdateRoutingProfileNameOutput{}",
          "8833:  req = c.newRequest(op, input, output)",
          "8834:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8835:  return",
          "8836: }",
          "8870: func (c *Connect) UpdateRoutingProfileName(input *UpdateRoutingProfileNameInput) (*UpdateRoutingProfileNameOutput, error) {",
          "8871:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8872:  return out, req.Send()",
          "8873: }",
          "8884: func (c *Connect) UpdateRoutingProfileNameWithContext(ctx aws.Context, input *UpdateRoutingProfileNameInput, opts ...request.Option) (*UpdateRoutingProfileNameOutput, error) {",
          "8885:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "8886:  req.SetContext(ctx)",
          "8887:  req.ApplyOptions(opts...)",
          "8888:  return out, req.Send()",
          "8889: }",
          "8891: const opUpdateRoutingProfileQueues = \"UpdateRoutingProfileQueues\"",
          "8917: func (c *Connect) UpdateRoutingProfileQueuesRequest(input *UpdateRoutingProfileQueuesInput) (req *request.Request, output *UpdateRoutingProfileQueuesOutput) {",
          "8918:  op := &request.Operation{",
          "8919:   Name:       opUpdateRoutingProfileQueues,",
          "8920:   HTTPMethod: \"POST\",",
          "8921:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "8922:  }",
          "8924:  if input == nil {",
          "8925:   input = &UpdateRoutingProfileQueuesInput{}",
          "8926:  }",
          "8928:  output = &UpdateRoutingProfileQueuesOutput{}",
          "8929:  req = c.newRequest(op, input, output)",
          "8930:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "8931:  return",
          "8932: }",
          "8962: func (c *Connect) UpdateRoutingProfileQueues(input *UpdateRoutingProfileQueuesInput) (*UpdateRoutingProfileQueuesOutput, error) {",
          "8963:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10227:  return s",
          "10228: }",
          "10231:  _ struct{} `type:\"structure\"`",
          "10246:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "10257:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10264:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "10265: }",
          "10269:  return awsutil.Prettify(s)",
          "10270: }",
          "10274:  return s.String()",
          "10275: }",
          "10289:  if s.InstanceId == nil {",
          "10290:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "10291:  }",
          "10292:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "10293:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "10294:  }",
          "10298:  if s.Name == nil {",
          "10299:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "10300:  }",
          "10301:  if s.Name != nil && len(*s.Name) < 1 {",
          "10302:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "10303:  }",
          "10306:  }",
          "10307:  if s.Tags != nil && len(s.Tags) < 1 {",
          "10308:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "10309:  }",
          "10328:   }",
          "10329:  }",
          "",
          "[Removed Lines]",
          "10230: type CreateRoutingProfileInput struct {",
          "10236:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "10241:  Description *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10252:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "10261:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\"`",
          "10268: func (s CreateRoutingProfileInput) String() string {",
          "10273: func (s CreateRoutingProfileInput) GoString() string {",
          "10278: func (s *CreateRoutingProfileInput) Validate() error {",
          "10279:  invalidParams := request.ErrInvalidParams{Context: \"CreateRoutingProfileInput\"}",
          "10280:  if s.DefaultOutboundQueueId == nil {",
          "10281:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "10282:  }",
          "10283:  if s.Description == nil {",
          "10284:   invalidParams.Add(request.NewErrParamRequired(\"Description\"))",
          "10285:  }",
          "10286:  if s.Description != nil && len(*s.Description) < 1 {",
          "10287:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "10288:  }",
          "10295:  if s.MediaConcurrencies == nil {",
          "10296:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "10297:  }",
          "10304:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "10305:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "10310:  if s.MediaConcurrencies != nil {",
          "10311:   for i, v := range s.MediaConcurrencies {",
          "10312:    if v == nil {",
          "10313:     continue",
          "10314:    }",
          "10315:    if err := v.Validate(); err != nil {",
          "10316:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "10317:    }",
          "10318:   }",
          "10319:  }",
          "10320:  if s.QueueConfigs != nil {",
          "10321:   for i, v := range s.QueueConfigs {",
          "10322:    if v == nil {",
          "10323:     continue",
          "10324:    }",
          "10325:    if err := v.Validate(); err != nil {",
          "10326:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "10327:    }",
          "",
          "[Added Lines]",
          "10892: type CreateQuickConnectInput struct {",
          "10896:  Description *string `type:\"string\"`",
          "10911:  QuickConnectConfig *QuickConnectConfig `type:\"structure\" required:\"true\"`",
          "10918: func (s CreateQuickConnectInput) String() string {",
          "10923: func (s CreateQuickConnectInput) GoString() string {",
          "10928: func (s *CreateQuickConnectInput) Validate() error {",
          "10929:  invalidParams := request.ErrInvalidParams{Context: \"CreateQuickConnectInput\"}",
          "10942:  if s.QuickConnectConfig == nil {",
          "10943:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectConfig\"))",
          "10948:  if s.QuickConnectConfig != nil {",
          "10949:   if err := s.QuickConnectConfig.Validate(); err != nil {",
          "10950:    invalidParams.AddNested(\"QuickConnectConfig\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10334:  return nil",
          "10335: }",
          "10345:  s.Description = &v",
          "10346:  return s",
          "10347: }",
          "",
          "[Removed Lines]",
          "10338: func (s *CreateRoutingProfileInput) SetDefaultOutboundQueueId(v string) *CreateRoutingProfileInput {",
          "10339:  s.DefaultOutboundQueueId = &v",
          "10340:  return s",
          "10341: }",
          "10344: func (s *CreateRoutingProfileInput) SetDescription(v string) *CreateRoutingProfileInput {",
          "",
          "[Added Lines]",
          "10961: func (s *CreateQuickConnectInput) SetDescription(v string) *CreateQuickConnectInput {",
          "10962:  s.Description = &v",
          "10963:  return s",
          "10964: }",
          "10967: func (s *CreateQuickConnectInput) SetInstanceId(v string) *CreateQuickConnectInput {",
          "10968:  s.InstanceId = &v",
          "10969:  return s",
          "10970: }",
          "10973: func (s *CreateQuickConnectInput) SetName(v string) *CreateQuickConnectInput {",
          "10974:  s.Name = &v",
          "10975:  return s",
          "10976: }",
          "10979: func (s *CreateQuickConnectInput) SetQuickConnectConfig(v *QuickConnectConfig) *CreateQuickConnectInput {",
          "10980:  s.QuickConnectConfig = v",
          "10981:  return s",
          "10982: }",
          "10985: func (s *CreateQuickConnectInput) SetTags(v map[string]*string) *CreateQuickConnectInput {",
          "10986:  s.Tags = v",
          "10987:  return s",
          "10988: }",
          "10990: type CreateQuickConnectOutput struct {",
          "10991:  _ struct{} `type:\"structure\"`",
          "10994:  QuickConnectARN *string `type:\"string\"`",
          "10997:  QuickConnectId *string `type:\"string\"`",
          "10998: }",
          "11001: func (s CreateQuickConnectOutput) String() string {",
          "11002:  return awsutil.Prettify(s)",
          "11003: }",
          "11006: func (s CreateQuickConnectOutput) GoString() string {",
          "11007:  return s.String()",
          "11008: }",
          "11011: func (s *CreateQuickConnectOutput) SetQuickConnectARN(v string) *CreateQuickConnectOutput {",
          "11012:  s.QuickConnectARN = &v",
          "11013:  return s",
          "11014: }",
          "11017: func (s *CreateQuickConnectOutput) SetQuickConnectId(v string) *CreateQuickConnectOutput {",
          "11018:  s.QuickConnectId = &v",
          "11019:  return s",
          "11020: }",
          "11022: type CreateRoutingProfileInput struct {",
          "11023:  _ struct{} `type:\"structure\"`",
          "11028:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "11033:  Description *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11038:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11044:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "11049:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11053:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\"`",
          "11056:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "11057: }",
          "11060: func (s CreateRoutingProfileInput) String() string {",
          "11061:  return awsutil.Prettify(s)",
          "11062: }",
          "11065: func (s CreateRoutingProfileInput) GoString() string {",
          "11066:  return s.String()",
          "11067: }",
          "11070: func (s *CreateRoutingProfileInput) Validate() error {",
          "11071:  invalidParams := request.ErrInvalidParams{Context: \"CreateRoutingProfileInput\"}",
          "11072:  if s.DefaultOutboundQueueId == nil {",
          "11073:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "11074:  }",
          "11075:  if s.Description == nil {",
          "11076:   invalidParams.Add(request.NewErrParamRequired(\"Description\"))",
          "11077:  }",
          "11078:  if s.Description != nil && len(*s.Description) < 1 {",
          "11079:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "11080:  }",
          "11081:  if s.InstanceId == nil {",
          "11082:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11083:  }",
          "11084:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11085:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11086:  }",
          "11087:  if s.MediaConcurrencies == nil {",
          "11088:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "11089:  }",
          "11090:  if s.Name == nil {",
          "11091:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "11092:  }",
          "11093:  if s.Name != nil && len(*s.Name) < 1 {",
          "11094:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "11095:  }",
          "11096:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "11097:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "11098:  }",
          "11099:  if s.Tags != nil && len(s.Tags) < 1 {",
          "11100:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "11101:  }",
          "11102:  if s.MediaConcurrencies != nil {",
          "11103:   for i, v := range s.MediaConcurrencies {",
          "11104:    if v == nil {",
          "11105:     continue",
          "11106:    }",
          "11107:    if err := v.Validate(); err != nil {",
          "11108:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "11109:    }",
          "11110:   }",
          "11111:  }",
          "11112:  if s.QueueConfigs != nil {",
          "11113:   for i, v := range s.QueueConfigs {",
          "11114:    if v == nil {",
          "11115:     continue",
          "11116:    }",
          "11117:    if err := v.Validate(); err != nil {",
          "11118:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "11119:    }",
          "11120:   }",
          "11121:  }",
          "11123:  if invalidParams.Len() > 0 {",
          "11124:   return invalidParams",
          "11125:  }",
          "11126:  return nil",
          "11127: }",
          "11130: func (s *CreateRoutingProfileInput) SetDefaultOutboundQueueId(v string) *CreateRoutingProfileInput {",
          "11131:  s.DefaultOutboundQueueId = &v",
          "11132:  return s",
          "11133: }",
          "11136: func (s *CreateRoutingProfileInput) SetDescription(v string) *CreateRoutingProfileInput {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11097:  return s.String()",
          "11098: }",
          "11100: type DeleteUseCaseInput struct {",
          "11101:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11892: type DeleteQuickConnectInput struct {",
          "11893:  _ struct{} `type:\"structure\"`",
          "11898:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11903:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "11904: }",
          "11907: func (s DeleteQuickConnectInput) String() string {",
          "11908:  return awsutil.Prettify(s)",
          "11909: }",
          "11912: func (s DeleteQuickConnectInput) GoString() string {",
          "11913:  return s.String()",
          "11914: }",
          "11917: func (s *DeleteQuickConnectInput) Validate() error {",
          "11918:  invalidParams := request.ErrInvalidParams{Context: \"DeleteQuickConnectInput\"}",
          "11919:  if s.InstanceId == nil {",
          "11920:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11921:  }",
          "11922:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11923:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11924:  }",
          "11925:  if s.QuickConnectId == nil {",
          "11926:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "11927:  }",
          "11928:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "11929:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "11930:  }",
          "11932:  if invalidParams.Len() > 0 {",
          "11933:   return invalidParams",
          "11934:  }",
          "11935:  return nil",
          "11936: }",
          "11939: func (s *DeleteQuickConnectInput) SetInstanceId(v string) *DeleteQuickConnectInput {",
          "11940:  s.InstanceId = &v",
          "11941:  return s",
          "11942: }",
          "11945: func (s *DeleteQuickConnectInput) SetQuickConnectId(v string) *DeleteQuickConnectInput {",
          "11946:  s.QuickConnectId = &v",
          "11947:  return s",
          "11948: }",
          "11950: type DeleteQuickConnectOutput struct {",
          "11951:  _ struct{} `type:\"structure\"`",
          "11952: }",
          "11955: func (s DeleteQuickConnectOutput) String() string {",
          "11956:  return awsutil.Prettify(s)",
          "11957: }",
          "11960: func (s DeleteQuickConnectOutput) GoString() string {",
          "11961:  return s.String()",
          "11962: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11652:  return s",
          "11653: }",
          "11656:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "11655: type DescribeRoutingProfileInput struct {",
          "",
          "[Added Lines]",
          "12519: type DescribeQuickConnectInput struct {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11661:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11667: }",
          "11671:  return awsutil.Prettify(s)",
          "11672: }",
          "11676:  return s.String()",
          "11677: }",
          "11682:  if s.InstanceId == nil {",
          "11683:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11684:  }",
          "11685:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11686:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11687:  }",
          "11690:  }",
          "11693:  }",
          "11695:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "11666:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11670: func (s DescribeRoutingProfileInput) String() string {",
          "11675: func (s DescribeRoutingProfileInput) GoString() string {",
          "11680: func (s *DescribeRoutingProfileInput) Validate() error {",
          "11681:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRoutingProfileInput\"}",
          "11688:  if s.RoutingProfileId == nil {",
          "11689:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11691:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11692:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "",
          "[Added Lines]",
          "12530:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "12534: func (s DescribeQuickConnectInput) String() string {",
          "12539: func (s DescribeQuickConnectInput) GoString() string {",
          "12544: func (s *DescribeQuickConnectInput) Validate() error {",
          "12545:  invalidParams := request.ErrInvalidParams{Context: \"DescribeQuickConnectInput\"}",
          "12552:  if s.QuickConnectId == nil {",
          "12553:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "12555:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "12556:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "11699: }",
          "11703:  s.InstanceId = &v",
          "11704:  return s",
          "11705: }",
          "11710:  return s",
          "11711: }",
          "11714:  _ struct{} `type:\"structure\"`",
          "11718: }",
          "11722:  return awsutil.Prettify(s)",
          "11723: }",
          "11727:  return s.String()",
          "11728: }",
          "11733:  return s",
          "11734: }",
          "11737:  _ struct{} `type:\"structure\"`",
          "11747:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11748: }",
          "11752:  return awsutil.Prettify(s)",
          "11753: }",
          "11757:  return s.String()",
          "11758: }",
          "11768:  }",
          "11769:  if s.InstanceId == nil {",
          "11770:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "11702: func (s *DescribeRoutingProfileInput) SetInstanceId(v string) *DescribeRoutingProfileInput {",
          "11708: func (s *DescribeRoutingProfileInput) SetRoutingProfileId(v string) *DescribeRoutingProfileInput {",
          "11709:  s.RoutingProfileId = &v",
          "11713: type DescribeRoutingProfileOutput struct {",
          "11717:  RoutingProfile *RoutingProfile `type:\"structure\"`",
          "11721: func (s DescribeRoutingProfileOutput) String() string {",
          "11726: func (s DescribeRoutingProfileOutput) GoString() string {",
          "11731: func (s *DescribeRoutingProfileOutput) SetRoutingProfile(v *RoutingProfile) *DescribeRoutingProfileOutput {",
          "11732:  s.RoutingProfile = v",
          "11736: type DescribeUserHierarchyGroupInput struct {",
          "11742:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "11751: func (s DescribeUserHierarchyGroupInput) String() string {",
          "11756: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "11761: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "11762:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "11763:  if s.HierarchyGroupId == nil {",
          "11764:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "11765:  }",
          "11766:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "11767:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "",
          "[Added Lines]",
          "12566: func (s *DescribeQuickConnectInput) SetInstanceId(v string) *DescribeQuickConnectInput {",
          "12572: func (s *DescribeQuickConnectInput) SetQuickConnectId(v string) *DescribeQuickConnectInput {",
          "12573:  s.QuickConnectId = &v",
          "12577: type DescribeQuickConnectOutput struct {",
          "12581:  QuickConnect *QuickConnect `type:\"structure\"`",
          "12585: func (s DescribeQuickConnectOutput) String() string {",
          "12590: func (s DescribeQuickConnectOutput) GoString() string {",
          "12595: func (s *DescribeQuickConnectOutput) SetQuickConnect(v *QuickConnect) *DescribeQuickConnectOutput {",
          "12596:  s.QuickConnect = v",
          "12600: type DescribeRoutingProfileInput struct {",
          "12611:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "12615: func (s DescribeRoutingProfileInput) String() string {",
          "12620: func (s DescribeRoutingProfileInput) GoString() string {",
          "12625: func (s *DescribeRoutingProfileInput) Validate() error {",
          "12626:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRoutingProfileInput\"}",
          "12627:  if s.InstanceId == nil {",
          "12628:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "12629:  }",
          "12630:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "12631:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "12632:  }",
          "12633:  if s.RoutingProfileId == nil {",
          "12634:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "12635:  }",
          "12636:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "12637:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "12638:  }",
          "12640:  if invalidParams.Len() > 0 {",
          "12641:   return invalidParams",
          "12642:  }",
          "12643:  return nil",
          "12644: }",
          "12647: func (s *DescribeRoutingProfileInput) SetInstanceId(v string) *DescribeRoutingProfileInput {",
          "12648:  s.InstanceId = &v",
          "12649:  return s",
          "12650: }",
          "12653: func (s *DescribeRoutingProfileInput) SetRoutingProfileId(v string) *DescribeRoutingProfileInput {",
          "12654:  s.RoutingProfileId = &v",
          "12655:  return s",
          "12656: }",
          "12658: type DescribeRoutingProfileOutput struct {",
          "12659:  _ struct{} `type:\"structure\"`",
          "12662:  RoutingProfile *RoutingProfile `type:\"structure\"`",
          "12663: }",
          "12666: func (s DescribeRoutingProfileOutput) String() string {",
          "12667:  return awsutil.Prettify(s)",
          "12668: }",
          "12671: func (s DescribeRoutingProfileOutput) GoString() string {",
          "12672:  return s.String()",
          "12673: }",
          "12676: func (s *DescribeRoutingProfileOutput) SetRoutingProfile(v *RoutingProfile) *DescribeRoutingProfileOutput {",
          "12677:  s.RoutingProfile = v",
          "12678:  return s",
          "12679: }",
          "12681: type DescribeUserHierarchyGroupInput struct {",
          "12682:  _ struct{} `type:\"structure\"`",
          "12687:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "12692:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "12693: }",
          "12696: func (s DescribeUserHierarchyGroupInput) String() string {",
          "12697:  return awsutil.Prettify(s)",
          "12698: }",
          "12701: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "12702:  return s.String()",
          "12703: }",
          "12706: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "12707:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "12708:  if s.HierarchyGroupId == nil {",
          "12709:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "12710:  }",
          "12711:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "12712:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "16060:  return s",
          "16061: }",
          "16063: type ListRoutingProfileQueuesInput struct {",
          "16064:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17008: type ListQuickConnectsInput struct {",
          "17009:  _ struct{} `type:\"structure\"`",
          "17014:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "17017:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "17021:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "17026:  QuickConnectTypes []*string `location:\"querystring\" locationName:\"QuickConnectTypes\" type:\"list\"`",
          "17027: }",
          "17030: func (s ListQuickConnectsInput) String() string {",
          "17031:  return awsutil.Prettify(s)",
          "17032: }",
          "17035: func (s ListQuickConnectsInput) GoString() string {",
          "17036:  return s.String()",
          "17037: }",
          "17040: func (s *ListQuickConnectsInput) Validate() error {",
          "17041:  invalidParams := request.ErrInvalidParams{Context: \"ListQuickConnectsInput\"}",
          "17042:  if s.InstanceId == nil {",
          "17043:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "17044:  }",
          "17045:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "17046:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "17047:  }",
          "17048:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "17049:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "17050:  }",
          "17052:  if invalidParams.Len() > 0 {",
          "17053:   return invalidParams",
          "17054:  }",
          "17055:  return nil",
          "17056: }",
          "17059: func (s *ListQuickConnectsInput) SetInstanceId(v string) *ListQuickConnectsInput {",
          "17060:  s.InstanceId = &v",
          "17061:  return s",
          "17062: }",
          "17065: func (s *ListQuickConnectsInput) SetMaxResults(v int64) *ListQuickConnectsInput {",
          "17066:  s.MaxResults = &v",
          "17067:  return s",
          "17068: }",
          "17071: func (s *ListQuickConnectsInput) SetNextToken(v string) *ListQuickConnectsInput {",
          "17072:  s.NextToken = &v",
          "17073:  return s",
          "17074: }",
          "17077: func (s *ListQuickConnectsInput) SetQuickConnectTypes(v []*string) *ListQuickConnectsInput {",
          "17078:  s.QuickConnectTypes = v",
          "17079:  return s",
          "17080: }",
          "17082: type ListQuickConnectsOutput struct {",
          "17083:  _ struct{} `type:\"structure\"`",
          "17086:  NextToken *string `type:\"string\"`",
          "17089:  QuickConnectSummaryList []*QuickConnectSummary `type:\"list\"`",
          "17090: }",
          "17093: func (s ListQuickConnectsOutput) String() string {",
          "17094:  return awsutil.Prettify(s)",
          "17095: }",
          "17098: func (s ListQuickConnectsOutput) GoString() string {",
          "17099:  return s.String()",
          "17100: }",
          "17103: func (s *ListQuickConnectsOutput) SetNextToken(v string) *ListQuickConnectsOutput {",
          "17104:  s.NextToken = &v",
          "17105:  return s",
          "17106: }",
          "17109: func (s *ListQuickConnectsOutput) SetQuickConnectSummaryList(v []*QuickConnectSummary) *ListQuickConnectsOutput {",
          "17110:  s.QuickConnectSummaryList = v",
          "17111:  return s",
          "17112: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "16981:  return s",
          "16982: }",
          "16985: type PhoneNumberSummary struct {",
          "16986:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18036: type PhoneNumberQuickConnectConfig struct {",
          "18037:  _ struct{} `type:\"structure\"`",
          "18042:  PhoneNumber *string `type:\"string\" required:\"true\"`",
          "18043: }",
          "18046: func (s PhoneNumberQuickConnectConfig) String() string {",
          "18047:  return awsutil.Prettify(s)",
          "18048: }",
          "18051: func (s PhoneNumberQuickConnectConfig) GoString() string {",
          "18052:  return s.String()",
          "18053: }",
          "18056: func (s *PhoneNumberQuickConnectConfig) Validate() error {",
          "18057:  invalidParams := request.ErrInvalidParams{Context: \"PhoneNumberQuickConnectConfig\"}",
          "18058:  if s.PhoneNumber == nil {",
          "18059:   invalidParams.Add(request.NewErrParamRequired(\"PhoneNumber\"))",
          "18060:  }",
          "18062:  if invalidParams.Len() > 0 {",
          "18063:   return invalidParams",
          "18064:  }",
          "18065:  return nil",
          "18066: }",
          "18069: func (s *PhoneNumberQuickConnectConfig) SetPhoneNumber(v string) *PhoneNumberQuickConnectConfig {",
          "18070:  s.PhoneNumber = &v",
          "18071:  return s",
          "18072: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "17089:  return s.String()",
          "17090: }",
          "17095:  return s",
          "17096: }",
          "17101:  return s",
          "17102: }",
          "17107:  return s",
          "17108: }",
          "17112:  _ struct{} `type:\"structure\"`",
          "17119: }",
          "17123:  return awsutil.Prettify(s)",
          "17124: }",
          "17128:  return s.String()",
          "17129: }",
          "17134:  return s",
          "17135: }",
          "17140:  return s",
          "17141: }",
          "17145:  _ struct{} `type:\"structure\"`",
          "17148:  Arn *string `type:\"string\"`",
          "17151:  Id *string `type:\"string\"`",
          "17154:  Name *string `min:\"1\" type:\"string\"`",
          "17158: }",
          "17162:  return awsutil.Prettify(s)",
          "17163: }",
          "17167:  return s.String()",
          "17168: }",
          "17172:  s.Arn = &v",
          "17173:  return s",
          "17174: }",
          "17178:  s.Id = &v",
          "17179:  return s",
          "17180: }",
          "17184:  s.Name = &v",
          "17185:  return s",
          "17186: }",
          "17191:  return s",
          "17192: }",
          "",
          "[Removed Lines]",
          "17093: func (s *PromptSummary) SetArn(v string) *PromptSummary {",
          "17094:  s.Arn = &v",
          "17099: func (s *PromptSummary) SetId(v string) *PromptSummary {",
          "17100:  s.Id = &v",
          "17105: func (s *PromptSummary) SetName(v string) *PromptSummary {",
          "17106:  s.Name = &v",
          "17111: type QueueReference struct {",
          "17115:  Arn *string `type:\"string\"`",
          "17118:  Id *string `type:\"string\"`",
          "17122: func (s QueueReference) String() string {",
          "17127: func (s QueueReference) GoString() string {",
          "17132: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "17133:  s.Arn = &v",
          "17138: func (s *QueueReference) SetId(v string) *QueueReference {",
          "17139:  s.Id = &v",
          "17144: type QueueSummary struct {",
          "17157:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "17161: func (s QueueSummary) String() string {",
          "17166: func (s QueueSummary) GoString() string {",
          "17171: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "17177: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "17183: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "17189: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "17190:  s.QueueType = &v",
          "",
          "[Added Lines]",
          "18183: func (s *PromptSummary) SetArn(v string) *PromptSummary {",
          "18184:  s.Arn = &v",
          "18185:  return s",
          "18186: }",
          "18189: func (s *PromptSummary) SetId(v string) *PromptSummary {",
          "18190:  s.Id = &v",
          "18191:  return s",
          "18192: }",
          "18195: func (s *PromptSummary) SetName(v string) *PromptSummary {",
          "18196:  s.Name = &v",
          "18197:  return s",
          "18198: }",
          "18202: type QueueQuickConnectConfig struct {",
          "18203:  _ struct{} `type:\"structure\"`",
          "18208:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "18213:  QueueId *string `type:\"string\" required:\"true\"`",
          "18214: }",
          "18217: func (s QueueQuickConnectConfig) String() string {",
          "18218:  return awsutil.Prettify(s)",
          "18219: }",
          "18222: func (s QueueQuickConnectConfig) GoString() string {",
          "18223:  return s.String()",
          "18224: }",
          "18227: func (s *QueueQuickConnectConfig) Validate() error {",
          "18228:  invalidParams := request.ErrInvalidParams{Context: \"QueueQuickConnectConfig\"}",
          "18229:  if s.ContactFlowId == nil {",
          "18230:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "18231:  }",
          "18232:  if s.QueueId == nil {",
          "18233:   invalidParams.Add(request.NewErrParamRequired(\"QueueId\"))",
          "18234:  }",
          "18236:  if invalidParams.Len() > 0 {",
          "18237:   return invalidParams",
          "18238:  }",
          "18239:  return nil",
          "18240: }",
          "18243: func (s *QueueQuickConnectConfig) SetContactFlowId(v string) *QueueQuickConnectConfig {",
          "18244:  s.ContactFlowId = &v",
          "18245:  return s",
          "18246: }",
          "18249: func (s *QueueQuickConnectConfig) SetQueueId(v string) *QueueQuickConnectConfig {",
          "18250:  s.QueueId = &v",
          "18251:  return s",
          "18252: }",
          "18255: type QueueReference struct {",
          "18256:  _ struct{} `type:\"structure\"`",
          "18259:  Arn *string `type:\"string\"`",
          "18262:  Id *string `type:\"string\"`",
          "18263: }",
          "18266: func (s QueueReference) String() string {",
          "18267:  return awsutil.Prettify(s)",
          "18268: }",
          "18271: func (s QueueReference) GoString() string {",
          "18272:  return s.String()",
          "18273: }",
          "18276: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "18277:  s.Arn = &v",
          "18278:  return s",
          "18279: }",
          "18282: func (s *QueueReference) SetId(v string) *QueueReference {",
          "18283:  s.Id = &v",
          "18284:  return s",
          "18285: }",
          "18288: type QueueSummary struct {",
          "18289:  _ struct{} `type:\"structure\"`",
          "18292:  Arn *string `type:\"string\"`",
          "18295:  Id *string `type:\"string\"`",
          "18298:  Name *string `min:\"1\" type:\"string\"`",
          "18301:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "18302: }",
          "18305: func (s QueueSummary) String() string {",
          "18306:  return awsutil.Prettify(s)",
          "18307: }",
          "18310: func (s QueueSummary) GoString() string {",
          "18311:  return s.String()",
          "18312: }",
          "18315: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "18316:  s.Arn = &v",
          "18317:  return s",
          "18318: }",
          "18321: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "18322:  s.Id = &v",
          "18323:  return s",
          "18324: }",
          "18327: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "18328:  s.Name = &v",
          "18329:  return s",
          "18330: }",
          "18333: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "18334:  s.QueueType = &v",
          "18335:  return s",
          "18336: }",
          "18339: type QuickConnect struct {",
          "18340:  _ struct{} `type:\"structure\"`",
          "18343:  Description *string `type:\"string\"`",
          "18346:  Name *string `min:\"1\" type:\"string\"`",
          "18349:  QuickConnectARN *string `type:\"string\"`",
          "18352:  QuickConnectConfig *QuickConnectConfig `type:\"structure\"`",
          "18355:  QuickConnectId *string `type:\"string\"`",
          "18358:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "18359: }",
          "18362: func (s QuickConnect) String() string {",
          "18363:  return awsutil.Prettify(s)",
          "18364: }",
          "18367: func (s QuickConnect) GoString() string {",
          "18368:  return s.String()",
          "18369: }",
          "18372: func (s *QuickConnect) SetDescription(v string) *QuickConnect {",
          "18373:  s.Description = &v",
          "18374:  return s",
          "18375: }",
          "18378: func (s *QuickConnect) SetName(v string) *QuickConnect {",
          "18379:  s.Name = &v",
          "18380:  return s",
          "18381: }",
          "18384: func (s *QuickConnect) SetQuickConnectARN(v string) *QuickConnect {",
          "18385:  s.QuickConnectARN = &v",
          "18390: func (s *QuickConnect) SetQuickConnectConfig(v *QuickConnectConfig) *QuickConnect {",
          "18391:  s.QuickConnectConfig = v",
          "18396: func (s *QuickConnect) SetQuickConnectId(v string) *QuickConnect {",
          "18397:  s.QuickConnectId = &v",
          "18402: func (s *QuickConnect) SetTags(v map[string]*string) *QuickConnect {",
          "18403:  s.Tags = v",
          "18404:  return s",
          "18405: }",
          "18408: type QuickConnectConfig struct {",
          "18412:  PhoneConfig *PhoneNumberQuickConnectConfig `type:\"structure\"`",
          "18415:  QueueConfig *QueueQuickConnectConfig `type:\"structure\"`",
          "18422:  QuickConnectType *string `type:\"string\" required:\"true\" enum:\"QuickConnectType\"`",
          "18425:  UserConfig *UserQuickConnectConfig `type:\"structure\"`",
          "18429: func (s QuickConnectConfig) String() string {",
          "18434: func (s QuickConnectConfig) GoString() string {",
          "18439: func (s *QuickConnectConfig) Validate() error {",
          "18440:  invalidParams := request.ErrInvalidParams{Context: \"QuickConnectConfig\"}",
          "18441:  if s.QuickConnectType == nil {",
          "18442:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectType\"))",
          "18443:  }",
          "18444:  if s.PhoneConfig != nil {",
          "18445:   if err := s.PhoneConfig.Validate(); err != nil {",
          "18446:    invalidParams.AddNested(\"PhoneConfig\", err.(request.ErrInvalidParams))",
          "18447:   }",
          "18448:  }",
          "18449:  if s.QueueConfig != nil {",
          "18450:   if err := s.QueueConfig.Validate(); err != nil {",
          "18451:    invalidParams.AddNested(\"QueueConfig\", err.(request.ErrInvalidParams))",
          "18452:   }",
          "18453:  }",
          "18454:  if s.UserConfig != nil {",
          "18455:   if err := s.UserConfig.Validate(); err != nil {",
          "18456:    invalidParams.AddNested(\"UserConfig\", err.(request.ErrInvalidParams))",
          "18457:   }",
          "18458:  }",
          "18460:  if invalidParams.Len() > 0 {",
          "18461:   return invalidParams",
          "18462:  }",
          "18463:  return nil",
          "18464: }",
          "18467: func (s *QuickConnectConfig) SetPhoneConfig(v *PhoneNumberQuickConnectConfig) *QuickConnectConfig {",
          "18468:  s.PhoneConfig = v",
          "18473: func (s *QuickConnectConfig) SetQueueConfig(v *QueueQuickConnectConfig) *QuickConnectConfig {",
          "18474:  s.QueueConfig = v",
          "18479: func (s *QuickConnectConfig) SetQuickConnectType(v string) *QuickConnectConfig {",
          "18480:  s.QuickConnectType = &v",
          "18481:  return s",
          "18482: }",
          "18485: func (s *QuickConnectConfig) SetUserConfig(v *UserQuickConnectConfig) *QuickConnectConfig {",
          "18486:  s.UserConfig = v",
          "18487:  return s",
          "18488: }",
          "18491: type QuickConnectSummary struct {",
          "18506:  QuickConnectType *string `type:\"string\" enum:\"QuickConnectType\"`",
          "18510: func (s QuickConnectSummary) String() string {",
          "18515: func (s QuickConnectSummary) GoString() string {",
          "18520: func (s *QuickConnectSummary) SetArn(v string) *QuickConnectSummary {",
          "18526: func (s *QuickConnectSummary) SetId(v string) *QuickConnectSummary {",
          "18532: func (s *QuickConnectSummary) SetName(v string) *QuickConnectSummary {",
          "18538: func (s *QuickConnectSummary) SetQuickConnectType(v string) *QuickConnectSummary {",
          "18539:  s.QuickConnectType = &v",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "19603:  return s.String()",
          "19604: }",
          "19606: type UpdateRoutingProfileConcurrencyInput struct {",
          "19607:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20955: type UpdateQuickConnectConfigInput struct {",
          "20956:  _ struct{} `type:\"structure\"`",
          "20961:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "20966:  QuickConnectConfig *QuickConnectConfig `type:\"structure\" required:\"true\"`",
          "20971:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "20972: }",
          "20975: func (s UpdateQuickConnectConfigInput) String() string {",
          "20976:  return awsutil.Prettify(s)",
          "20977: }",
          "20980: func (s UpdateQuickConnectConfigInput) GoString() string {",
          "20981:  return s.String()",
          "20982: }",
          "20985: func (s *UpdateQuickConnectConfigInput) Validate() error {",
          "20986:  invalidParams := request.ErrInvalidParams{Context: \"UpdateQuickConnectConfigInput\"}",
          "20987:  if s.InstanceId == nil {",
          "20988:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "20989:  }",
          "20990:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "20991:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "20992:  }",
          "20993:  if s.QuickConnectConfig == nil {",
          "20994:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectConfig\"))",
          "20995:  }",
          "20996:  if s.QuickConnectId == nil {",
          "20997:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "20998:  }",
          "20999:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "21000:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "21001:  }",
          "21002:  if s.QuickConnectConfig != nil {",
          "21003:   if err := s.QuickConnectConfig.Validate(); err != nil {",
          "21004:    invalidParams.AddNested(\"QuickConnectConfig\", err.(request.ErrInvalidParams))",
          "21005:   }",
          "21006:  }",
          "21008:  if invalidParams.Len() > 0 {",
          "21009:   return invalidParams",
          "21010:  }",
          "21011:  return nil",
          "21012: }",
          "21015: func (s *UpdateQuickConnectConfigInput) SetInstanceId(v string) *UpdateQuickConnectConfigInput {",
          "21016:  s.InstanceId = &v",
          "21017:  return s",
          "21018: }",
          "21021: func (s *UpdateQuickConnectConfigInput) SetQuickConnectConfig(v *QuickConnectConfig) *UpdateQuickConnectConfigInput {",
          "21022:  s.QuickConnectConfig = v",
          "21023:  return s",
          "21024: }",
          "21027: func (s *UpdateQuickConnectConfigInput) SetQuickConnectId(v string) *UpdateQuickConnectConfigInput {",
          "21028:  s.QuickConnectId = &v",
          "21029:  return s",
          "21030: }",
          "21032: type UpdateQuickConnectConfigOutput struct {",
          "21033:  _ struct{} `type:\"structure\"`",
          "21034: }",
          "21037: func (s UpdateQuickConnectConfigOutput) String() string {",
          "21038:  return awsutil.Prettify(s)",
          "21039: }",
          "21042: func (s UpdateQuickConnectConfigOutput) GoString() string {",
          "21043:  return s.String()",
          "21044: }",
          "21046: type UpdateQuickConnectNameInput struct {",
          "21047:  _ struct{} `type:\"structure\"`",
          "21050:  Description *string `type:\"string\"`",
          "21055:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "21058:  Name *string `min:\"1\" type:\"string\"`",
          "21063:  QuickConnectId *string `location:\"uri\" locationName:\"QuickConnectId\" type:\"string\" required:\"true\"`",
          "21064: }",
          "21067: func (s UpdateQuickConnectNameInput) String() string {",
          "21068:  return awsutil.Prettify(s)",
          "21069: }",
          "21072: func (s UpdateQuickConnectNameInput) GoString() string {",
          "21073:  return s.String()",
          "21074: }",
          "21077: func (s *UpdateQuickConnectNameInput) Validate() error {",
          "21078:  invalidParams := request.ErrInvalidParams{Context: \"UpdateQuickConnectNameInput\"}",
          "21079:  if s.InstanceId == nil {",
          "21080:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "21081:  }",
          "21082:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "21083:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "21084:  }",
          "21085:  if s.Name != nil && len(*s.Name) < 1 {",
          "21086:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "21087:  }",
          "21088:  if s.QuickConnectId == nil {",
          "21089:   invalidParams.Add(request.NewErrParamRequired(\"QuickConnectId\"))",
          "21090:  }",
          "21091:  if s.QuickConnectId != nil && len(*s.QuickConnectId) < 1 {",
          "21092:   invalidParams.Add(request.NewErrParamMinLen(\"QuickConnectId\", 1))",
          "21093:  }",
          "21095:  if invalidParams.Len() > 0 {",
          "21096:   return invalidParams",
          "21097:  }",
          "21098:  return nil",
          "21099: }",
          "21102: func (s *UpdateQuickConnectNameInput) SetDescription(v string) *UpdateQuickConnectNameInput {",
          "21103:  s.Description = &v",
          "21104:  return s",
          "21105: }",
          "21108: func (s *UpdateQuickConnectNameInput) SetInstanceId(v string) *UpdateQuickConnectNameInput {",
          "21109:  s.InstanceId = &v",
          "21110:  return s",
          "21111: }",
          "21114: func (s *UpdateQuickConnectNameInput) SetName(v string) *UpdateQuickConnectNameInput {",
          "21115:  s.Name = &v",
          "21116:  return s",
          "21117: }",
          "21120: func (s *UpdateQuickConnectNameInput) SetQuickConnectId(v string) *UpdateQuickConnectNameInput {",
          "21121:  s.QuickConnectId = &v",
          "21122:  return s",
          "21123: }",
          "21125: type UpdateQuickConnectNameOutput struct {",
          "21126:  _ struct{} `type:\"structure\"`",
          "21127: }",
          "21130: func (s UpdateQuickConnectNameOutput) String() string {",
          "21131:  return awsutil.Prettify(s)",
          "21132: }",
          "21135: func (s UpdateQuickConnectNameOutput) GoString() string {",
          "21136:  return s.String()",
          "21137: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "20910:  return s",
          "20911: }",
          "20914: type UserSummary struct {",
          "20915:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22448: type UserQuickConnectConfig struct {",
          "22449:  _ struct{} `type:\"structure\"`",
          "22454:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "22459:  UserId *string `type:\"string\" required:\"true\"`",
          "22460: }",
          "22463: func (s UserQuickConnectConfig) String() string {",
          "22464:  return awsutil.Prettify(s)",
          "22465: }",
          "22468: func (s UserQuickConnectConfig) GoString() string {",
          "22469:  return s.String()",
          "22470: }",
          "22473: func (s *UserQuickConnectConfig) Validate() error {",
          "22474:  invalidParams := request.ErrInvalidParams{Context: \"UserQuickConnectConfig\"}",
          "22475:  if s.ContactFlowId == nil {",
          "22476:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "22477:  }",
          "22478:  if s.UserId == nil {",
          "22479:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "22480:  }",
          "22482:  if invalidParams.Len() > 0 {",
          "22483:   return invalidParams",
          "22484:  }",
          "22485:  return nil",
          "22486: }",
          "22489: func (s *UserQuickConnectConfig) SetContactFlowId(v string) *UserQuickConnectConfig {",
          "22490:  s.ContactFlowId = &v",
          "22491:  return s",
          "22492: }",
          "22495: func (s *UserQuickConnectConfig) SetUserId(v string) *UserQuickConnectConfig {",
          "22496:  s.UserId = &v",
          "22497:  return s",
          "22498: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "22374:  }",
          "22375: }",
          "22377: const (",
          "22379:  ReferenceTypeUrl = \"URL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23964: const (",
          "23966:  QuickConnectTypeUser = \"USER\"",
          "23969:  QuickConnectTypeQueue = \"QUEUE\"",
          "23972:  QuickConnectTypePhoneNumber = \"PHONE_NUMBER\"",
          "23973: )",
          "23976: func QuickConnectType_Values() []string {",
          "23977:  return []string{",
          "23978:   QuickConnectTypeUser,",
          "23979:   QuickConnectTypeQueue,",
          "23980:   QuickConnectTypePhoneNumber,",
          "23981:  }",
          "23982: }",
          "",
          "---------------"
        ],
        "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go": [
          "File: service/connect/connectiface/interface.go -> service/connect/connectiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  CreateIntegrationAssociationWithContext(aws.Context, *connect.CreateIntegrationAssociationInput, ...request.Option) (*connect.CreateIntegrationAssociationOutput, error)",
          "97:  CreateIntegrationAssociationRequest(*connect.CreateIntegrationAssociationInput) (*request.Request, *connect.CreateIntegrationAssociationOutput)",
          "99:  CreateRoutingProfile(*connect.CreateRoutingProfileInput) (*connect.CreateRoutingProfileOutput, error)",
          "100:  CreateRoutingProfileWithContext(aws.Context, *connect.CreateRoutingProfileInput, ...request.Option) (*connect.CreateRoutingProfileOutput, error)",
          "101:  CreateRoutingProfileRequest(*connect.CreateRoutingProfileInput) (*request.Request, *connect.CreateRoutingProfileOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  CreateQuickConnect(*connect.CreateQuickConnectInput) (*connect.CreateQuickConnectOutput, error)",
          "100:  CreateQuickConnectWithContext(aws.Context, *connect.CreateQuickConnectInput, ...request.Option) (*connect.CreateQuickConnectOutput, error)",
          "101:  CreateQuickConnectRequest(*connect.CreateQuickConnectInput) (*request.Request, *connect.CreateQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  DeleteIntegrationAssociationWithContext(aws.Context, *connect.DeleteIntegrationAssociationInput, ...request.Option) (*connect.DeleteIntegrationAssociationOutput, error)",
          "121:  DeleteIntegrationAssociationRequest(*connect.DeleteIntegrationAssociationInput) (*request.Request, *connect.DeleteIntegrationAssociationOutput)",
          "123:  DeleteUseCase(*connect.DeleteUseCaseInput) (*connect.DeleteUseCaseOutput, error)",
          "124:  DeleteUseCaseWithContext(aws.Context, *connect.DeleteUseCaseInput, ...request.Option) (*connect.DeleteUseCaseOutput, error)",
          "125:  DeleteUseCaseRequest(*connect.DeleteUseCaseInput) (*request.Request, *connect.DeleteUseCaseOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:  DeleteQuickConnect(*connect.DeleteQuickConnectInput) (*connect.DeleteQuickConnectOutput, error)",
          "128:  DeleteQuickConnectWithContext(aws.Context, *connect.DeleteQuickConnectInput, ...request.Option) (*connect.DeleteQuickConnectOutput, error)",
          "129:  DeleteQuickConnectRequest(*connect.DeleteQuickConnectInput) (*request.Request, *connect.DeleteQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:  DescribeInstanceStorageConfigWithContext(aws.Context, *connect.DescribeInstanceStorageConfigInput, ...request.Option) (*connect.DescribeInstanceStorageConfigOutput, error)",
          "149:  DescribeInstanceStorageConfigRequest(*connect.DescribeInstanceStorageConfigInput) (*request.Request, *connect.DescribeInstanceStorageConfigOutput)",
          "151:  DescribeRoutingProfile(*connect.DescribeRoutingProfileInput) (*connect.DescribeRoutingProfileOutput, error)",
          "152:  DescribeRoutingProfileWithContext(aws.Context, *connect.DescribeRoutingProfileInput, ...request.Option) (*connect.DescribeRoutingProfileOutput, error)",
          "153:  DescribeRoutingProfileRequest(*connect.DescribeRoutingProfileInput) (*request.Request, *connect.DescribeRoutingProfileOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:  DescribeQuickConnect(*connect.DescribeQuickConnectInput) (*connect.DescribeQuickConnectOutput, error)",
          "160:  DescribeQuickConnectWithContext(aws.Context, *connect.DescribeQuickConnectInput, ...request.Option) (*connect.DescribeQuickConnectOutput, error)",
          "161:  DescribeQuickConnectRequest(*connect.DescribeQuickConnectInput) (*request.Request, *connect.DescribeQuickConnectOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:  ListQueuesPages(*connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool) error",
          "295:  ListQueuesPagesWithContext(aws.Context, *connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool, ...request.Option) error",
          "297:  ListRoutingProfileQueues(*connect.ListRoutingProfileQueuesInput) (*connect.ListRoutingProfileQueuesOutput, error)",
          "298:  ListRoutingProfileQueuesWithContext(aws.Context, *connect.ListRoutingProfileQueuesInput, ...request.Option) (*connect.ListRoutingProfileQueuesOutput, error)",
          "299:  ListRoutingProfileQueuesRequest(*connect.ListRoutingProfileQueuesInput) (*request.Request, *connect.ListRoutingProfileQueuesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:  ListQuickConnects(*connect.ListQuickConnectsInput) (*connect.ListQuickConnectsOutput, error)",
          "310:  ListQuickConnectsWithContext(aws.Context, *connect.ListQuickConnectsInput, ...request.Option) (*connect.ListQuickConnectsOutput, error)",
          "311:  ListQuickConnectsRequest(*connect.ListQuickConnectsInput) (*request.Request, *connect.ListQuickConnectsOutput)",
          "313:  ListQuickConnectsPages(*connect.ListQuickConnectsInput, func(*connect.ListQuickConnectsOutput, bool) bool) error",
          "314:  ListQuickConnectsPagesWithContext(aws.Context, *connect.ListQuickConnectsInput, func(*connect.ListQuickConnectsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "407:  UpdateInstanceStorageConfigWithContext(aws.Context, *connect.UpdateInstanceStorageConfigInput, ...request.Option) (*connect.UpdateInstanceStorageConfigOutput, error)",
          "408:  UpdateInstanceStorageConfigRequest(*connect.UpdateInstanceStorageConfigInput) (*request.Request, *connect.UpdateInstanceStorageConfigOutput)",
          "410:  UpdateRoutingProfileConcurrency(*connect.UpdateRoutingProfileConcurrencyInput) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "411:  UpdateRoutingProfileConcurrencyWithContext(aws.Context, *connect.UpdateRoutingProfileConcurrencyInput, ...request.Option) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "412:  UpdateRoutingProfileConcurrencyRequest(*connect.UpdateRoutingProfileConcurrencyInput) (*request.Request, *connect.UpdateRoutingProfileConcurrencyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:  UpdateQuickConnectConfig(*connect.UpdateQuickConnectConfigInput) (*connect.UpdateQuickConnectConfigOutput, error)",
          "430:  UpdateQuickConnectConfigWithContext(aws.Context, *connect.UpdateQuickConnectConfigInput, ...request.Option) (*connect.UpdateQuickConnectConfigOutput, error)",
          "431:  UpdateQuickConnectConfigRequest(*connect.UpdateQuickConnectConfigInput) (*request.Request, *connect.UpdateQuickConnectConfigOutput)",
          "433:  UpdateQuickConnectName(*connect.UpdateQuickConnectNameInput) (*connect.UpdateQuickConnectNameOutput, error)",
          "434:  UpdateQuickConnectNameWithContext(aws.Context, *connect.UpdateQuickConnectNameInput, ...request.Option) (*connect.UpdateQuickConnectNameOutput, error)",
          "435:  UpdateQuickConnectNameRequest(*connect.UpdateQuickConnectNameInput) (*request.Request, *connect.UpdateQuickConnectNameOutput)",
          "",
          "---------------"
        ],
        "service/costexplorer/api.go||service/costexplorer/api.go": [
          "File: service/costexplorer/api.go -> service/costexplorer/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9645: type RightsizingRecommendationMetadata struct {",
          "9646:  _ struct{} `type:\"structure\"`",
          "9649:  GenerationTimestamp *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9649:  AdditionalMetadata *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9665:  return s.String()",
          "9666: }",
          "9669: func (s *RightsizingRecommendationMetadata) SetGenerationTimestamp(v string) *RightsizingRecommendationMetadata {",
          "9670:  s.GenerationTimestamp = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9672: func (s *RightsizingRecommendationMetadata) SetAdditionalMetadata(v string) *RightsizingRecommendationMetadata {",
          "9673:  s.AdditionalMetadata = &v",
          "9674:  return s",
          "9675: }",
          "",
          "---------------"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18602:  return s",
          "18603: }",
          "18606: type ColumnStatistics struct {",
          "18607:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18610: type ColumnImportance struct {",
          "18611:  _ struct{} `type:\"structure\"`",
          "18614:  ColumnName *string `min:\"1\" type:\"string\"`",
          "18617:  Importance *float64 `type:\"double\"`",
          "18618: }",
          "18621: func (s ColumnImportance) String() string {",
          "18622:  return awsutil.Prettify(s)",
          "18623: }",
          "18626: func (s ColumnImportance) GoString() string {",
          "18627:  return s.String()",
          "18628: }",
          "18631: func (s *ColumnImportance) SetColumnName(v string) *ColumnImportance {",
          "18632:  s.ColumnName = &v",
          "18633:  return s",
          "18634: }",
          "18637: func (s *ColumnImportance) SetImportance(v float64) *ColumnImportance {",
          "18638:  s.Importance = &v",
          "18639:  return s",
          "18640: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26478:  AreaUnderPRCurve *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26519:  ColumnImportances []*ColumnImportance `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "26524:  return s",
          "26525: }",
          "26528: func (s *FindMatchesMetrics) SetConfusionMatrix(v *ConfusionMatrix) *FindMatchesMetrics {",
          "26529:  s.ConfusionMatrix = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26569: func (s *FindMatchesMetrics) SetColumnImportances(v []*ColumnImportance) *FindMatchesMetrics {",
          "26570:  s.ColumnImportances = v",
          "26571:  return s",
          "26572: }",
          "",
          "---------------"
        ],
        "service/iotwireless/api.go||service/iotwireless/api.go": [
          "File: service/iotwireless/api.go -> service/iotwireless/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10181:  AmazonId *string `type:\"string\"`",
          "10185: }",
          "",
          "[Removed Lines]",
          "10184:  AppServerPrivateKey *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "",
          "[Added Lines]",
          "10183:  Fingerprint *string `min:\"64\" type:\"string\" sensitive:\"true\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10200:  return s",
          "10201: }",
          "10206:  return s",
          "10207: }",
          "",
          "[Removed Lines]",
          "10204: func (s *SidewalkAccountInfoWithFingerprint) SetAppServerPrivateKey(v string) *SidewalkAccountInfoWithFingerprint {",
          "10205:  s.AppServerPrivateKey = &v",
          "",
          "[Added Lines]",
          "10203: func (s *SidewalkAccountInfoWithFingerprint) SetFingerprint(v string) *SidewalkAccountInfoWithFingerprint {",
          "10204:  s.Fingerprint = &v",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18353:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18369:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18935:  return s",
          "18936: }",
          "18939: func (s *CreateDBInstanceInput) SetEnableIAMDatabaseAuthentication(v bool) *CreateDBInstanceInput {",
          "18940:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18955: func (s *CreateDBInstanceInput) SetEnableCustomerOwnedIp(v bool) *CreateDBInstanceInput {",
          "18956:  s.EnableCustomerOwnedIp = &v",
          "18957:  return s",
          "18958: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22294:  CopyTagsToSnapshot *bool `type:\"boolean\"`",
          "22298:  DBClusterIdentifier *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22332:  CustomerOwnedIpEnabled *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "22609:  return s",
          "22610: }",
          "22613: func (s *DBInstance) SetDBClusterIdentifier(v string) *DBInstance {",
          "22614:  s.DBClusterIdentifier = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22651: func (s *DBInstance) SetCustomerOwnedIpEnabled(v bool) *DBInstance {",
          "22652:  s.CustomerOwnedIpEnabled = &v",
          "22653:  return s",
          "22654: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "33655:  DomainIAMRoleName *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33716:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "34099:  return s",
          "34100: }",
          "34103: func (s *ModifyDBInstanceInput) SetEnableIAMDatabaseAuthentication(v bool) *ModifyDBInstanceInput {",
          "34104:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34164: func (s *ModifyDBInstanceInput) SetEnableCustomerOwnedIp(v bool) *ModifyDBInstanceInput {",
          "34165:  s.EnableCustomerOwnedIp = &v",
          "34166:  return s",
          "34167: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "39358:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39441:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "39592:  return s",
          "39593: }",
          "39596: func (s *RestoreDBInstanceFromDBSnapshotInput) SetEnableIAMDatabaseAuthentication(v bool) *RestoreDBInstanceFromDBSnapshotInput {",
          "39597:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39679: func (s *RestoreDBInstanceFromDBSnapshotInput) SetEnableCustomerOwnedIp(v bool) *RestoreDBInstanceFromDBSnapshotInput {",
          "39680:  s.EnableCustomerOwnedIp = &v",
          "39681:  return s",
          "39682: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "40448:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40553:  EnableCustomerOwnedIp *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "40712:  return s",
          "40713: }",
          "40716: func (s *RestoreDBInstanceToPointInTimeInput) SetEnableIAMDatabaseAuthentication(v bool) *RestoreDBInstanceToPointInTimeInput {",
          "40717:  s.EnableIAMDatabaseAuthentication = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40821: func (s *RestoreDBInstanceToPointInTimeInput) SetEnableCustomerOwnedIp(v bool) *RestoreDBInstanceToPointInTimeInput {",
          "40822:  s.EnableCustomerOwnedIp = &v",
          "40823:  return s",
          "40824: }",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43634:  Name *string `min:\"3\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "43626:  MaxConcurrency *string `min:\"1\" type:\"string\" required:\"true\"`",
          "43631:  MaxErrors *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "43655:  MaxConcurrency *string `min:\"1\" type:\"string\"`",
          "43662:  MaxErrors *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "43666:  Targets []*Target `type:\"list\" required:\"true\"`",
          "",
          "[Added Lines]",
          "43702:  Targets []*Target `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43712:  if s.Description != nil && len(*s.Description) < 1 {",
          "43713:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "43714:  }",
          "43718:  if s.MaxConcurrency != nil && len(*s.MaxConcurrency) < 1 {",
          "43719:   invalidParams.Add(request.NewErrParamMinLen(\"MaxConcurrency\", 1))",
          "43720:  }",
          "43724:  if s.MaxErrors != nil && len(*s.MaxErrors) < 1 {",
          "43725:   invalidParams.Add(request.NewErrParamMinLen(\"MaxErrors\", 1))",
          "43726:  }",
          "43727:  if s.Name != nil && len(*s.Name) < 3 {",
          "43728:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "43729:  }",
          "43733:  if s.TaskArn == nil {",
          "43734:   invalidParams.Add(request.NewErrParamRequired(\"TaskArn\"))",
          "43735:  }",
          "",
          "[Removed Lines]",
          "43715:  if s.MaxConcurrency == nil {",
          "43716:   invalidParams.Add(request.NewErrParamRequired(\"MaxConcurrency\"))",
          "43717:  }",
          "43721:  if s.MaxErrors == nil {",
          "43722:   invalidParams.Add(request.NewErrParamRequired(\"MaxErrors\"))",
          "43723:  }",
          "43730:  if s.Targets == nil {",
          "43731:   invalidParams.Add(request.NewErrParamRequired(\"Targets\"))",
          "43732:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "308635b727f7ec9abe23ae19e5593545c2a2e203",
      "candidate_info": {
        "commit_hash": "308635b727f7ec9abe23ae19e5593545c2a2e203",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/308635b727f7ec9abe23ae19e5593545c2a2e203",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/signer/v4/v4.go",
          "internal/s3shared/arn/arn.go",
          "internal/s3shared/arn/s3_object_lambda_arn.go",
          "models/apis/s3/2006-03-01/api-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/apis/s3control/2018-08-20/api-2.json",
          "models/apis/s3control/2018-08-20/docs-2.json",
          "models/apis/s3control/2018-08-20/examples-1.json",
          "models/apis/s3control/2018-08-20/paginators-1.json",
          "service/s3/api.go",
          "service/s3/customizations.go",
          "service/s3/endpoint.go",
          "service/s3/endpoint_builder.go",
          "service/s3/endpoint_test.go",
          "service/s3/examples_test.go",
          "service/s3/s3iface/interface.go",
          "service/s3/s3manager/arn.go",
          "service/s3/s3manager/download.go",
          "service/s3/s3manager/download_test.go",
          "service/s3/s3manager/upload.go",
          "service/s3/s3manager/upload_input.go",
          "service/s3/s3manager/upload_test.go",
          "service/s3control/api.go",
          "service/s3control/s3controliface/interface.go"
        ],
        "message": "Update S3 and S3 Control Models (#3826)",
        "before_after_code_files": [
          "aws/signer/v4/v4.go||aws/signer/v4/v4.go",
          "internal/s3shared/arn/arn.go||internal/s3shared/arn/arn.go",
          "internal/s3shared/arn/s3_object_lambda_arn.go||internal/s3shared/arn/s3_object_lambda_arn.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/customizations.go||service/s3/customizations.go",
          "service/s3/endpoint.go||service/s3/endpoint.go",
          "service/s3/endpoint_builder.go||service/s3/endpoint_builder.go",
          "service/s3/endpoint_test.go||service/s3/endpoint_test.go",
          "service/s3/examples_test.go||service/s3/examples_test.go",
          "service/s3/s3iface/interface.go||service/s3/s3iface/interface.go",
          "service/s3/s3manager/arn.go||service/s3/s3manager/arn.go",
          "service/s3/s3manager/download.go||service/s3/s3manager/download.go",
          "service/s3/s3manager/download_test.go||service/s3/s3manager/download_test.go",
          "service/s3/s3manager/upload.go||service/s3/s3manager/upload.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/s3/s3manager/upload_test.go||service/s3/s3manager/upload_test.go",
          "service/s3control/api.go||service/s3control/api.go",
          "service/s3control/s3controliface/interface.go||service/s3control/s3controliface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ],
          "candidate": [
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/signer/v4/v4.go||aws/signer/v4/v4.go": [
          "File: aws/signer/v4/v4.go -> aws/signer/v4/v4.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "689:  if hash == \"\" {",
          "690:   includeSHA256Header := ctx.unsignedPayload ||",
          "691:    ctx.ServiceName == \"s3\" ||",
          "692:    ctx.ServiceName == \"glacier\"",
          "696:   if ctx.unsignedPayload || s3Presign {",
          "697:    hash = \"UNSIGNED-PAYLOAD\"",
          "",
          "[Removed Lines]",
          "694:   s3Presign := ctx.isPresign && ctx.ServiceName == \"s3\"",
          "",
          "[Added Lines]",
          "692:    ctx.ServiceName == \"s3-object-lambda\" ||",
          "695:   s3Presign := ctx.isPresign &&",
          "696:    (ctx.ServiceName == \"s3\" ||",
          "697:     ctx.ServiceName == \"s3-object-lambda\")",
          "",
          "---------------"
        ],
        "internal/s3shared/arn/arn.go||internal/s3shared/arn/arn.go": [
          "File: internal/s3shared/arn/arn.go -> internal/s3shared/arn/arn.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/aws/aws-sdk-go/aws/arn\"",
          "8: )",
          "12: type Resource interface {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: var supportedServiceARN = []string{",
          "11:  \"s3\",",
          "12:  \"s3-outposts\",",
          "13:  \"s3-object-lambda\",",
          "14: }",
          "16: func isSupportedServiceARN(service string) bool {",
          "17:  for _, name := range supportedServiceARN {",
          "18:   if name == service {",
          "19:    return true",
          "20:   }",
          "21:  }",
          "22:  return false",
          "23: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:   return nil, InvalidARNError{ARN: a, Reason: \"partition not set\"}",
          "30:  }",
          "33:   return nil, InvalidARNError{ARN: a, Reason: \"service is not supported\"}",
          "34:  }",
          "35:  if len(a.Resource) == 0 {",
          "36:   return nil, InvalidARNError{ARN: a, Reason: \"resource not set\"}",
          "37:  }",
          "",
          "[Removed Lines]",
          "32:  if a.Service != \"s3\" && a.Service != \"s3-outposts\" {",
          "",
          "[Added Lines]",
          "47:  if !isSupportedServiceARN(a.Service) {",
          "",
          "---------------"
        ],
        "internal/s3shared/arn/s3_object_lambda_arn.go||internal/s3shared/arn/s3_object_lambda_arn.go": [
          "File: internal/s3shared/arn/s3_object_lambda_arn.go -> internal/s3shared/arn/s3_object_lambda_arn.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package arn",
          "4: type S3ObjectLambdaARN interface {",
          "5:  Resource",
          "7:  isS3ObjectLambdasARN()",
          "8: }",
          "11: type S3ObjectLambdaAccessPointARN struct {",
          "12:  AccessPointARN",
          "13: }",
          "15: func (s S3ObjectLambdaAccessPointARN) isS3ObjectLambdasARN() {}",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "15:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "16:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "17:  \"github.com/aws/aws-sdk-go/internal/s3shared/arn\"",
          "18:  \"github.com/aws/aws-sdk-go/private/checksum\"",
          "19:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10842:  return out, req.Send()",
          "10843: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10845: const opWriteGetObjectResponse = \"WriteGetObjectResponse\"",
          "10871: func (c *S3) WriteGetObjectResponseRequest(input *WriteGetObjectResponseInput) (req *request.Request, output *WriteGetObjectResponseOutput) {",
          "10872:  op := &request.Operation{",
          "10873:   Name:       opWriteGetObjectResponse,",
          "10874:   HTTPMethod: \"POST\",",
          "10875:   HTTPPath:   \"/WriteGetObjectResponse\",",
          "10876:  }",
          "10878:  if input == nil {",
          "10879:   input = &WriteGetObjectResponseInput{}",
          "10880:  }",
          "10882:  output = &WriteGetObjectResponseOutput{}",
          "10883:  req = c.newRequest(op, input, output)",
          "10884:  req.Handlers.Sign.Remove(v4.SignRequestHandler)",
          "10885:  handler := v4.BuildNamedHandler(\"v4.CustomSignerHandler\", v4.WithUnsignedPayload)",
          "10886:  req.Handlers.Sign.PushFrontNamed(handler)",
          "10887:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "10888:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{RequestRoute}.\", input.hostLabels))",
          "10889:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "10890:  return",
          "10891: }",
          "10915: func (c *S3) WriteGetObjectResponse(input *WriteGetObjectResponseInput) (*WriteGetObjectResponseOutput, error) {",
          "10916:  req, out := c.WriteGetObjectResponseRequest(input)",
          "10917:  return out, req.Send()",
          "10918: }",
          "10929: func (c *S3) WriteGetObjectResponseWithContext(ctx aws.Context, input *WriteGetObjectResponseInput, opts ...request.Option) (*WriteGetObjectResponseOutput, error) {",
          "10930:  req, out := c.WriteGetObjectResponseRequest(input)",
          "10931:  req.SetContext(ctx)",
          "10932:  req.ApplyOptions(opts...)",
          "10933:  return out, req.Send()",
          "10934: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34911:  return s",
          "34912: }",
          "34914: const (",
          "34916:  AnalyticsS3ExportFileFormatCsv = \"CSV\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35005: type WriteGetObjectResponseInput struct {",
          "35006:  _ struct{} `locationName:\"WriteGetObjectResponseRequest\" type:\"structure\" payload:\"Body\"`",
          "35009:  AcceptRanges *string `location:\"header\" locationName:\"x-amz-fwd-header-accept-ranges\" type:\"string\"`",
          "35017:  Body io.ReadSeeker `type:\"blob\"`",
          "35021:  BucketKeyEnabled *bool `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\" type:\"boolean\"`",
          "35024:  CacheControl *string `location:\"header\" locationName:\"x-amz-fwd-header-Cache-Control\" type:\"string\"`",
          "35027:  ContentDisposition *string `location:\"header\" locationName:\"x-amz-fwd-header-Content-Disposition\" type:\"string\"`",
          "35032:  ContentEncoding *string `location:\"header\" locationName:\"x-amz-fwd-header-Content-Encoding\" type:\"string\"`",
          "35035:  ContentLanguage *string `location:\"header\" locationName:\"x-amz-fwd-header-Content-Language\" type:\"string\"`",
          "35038:  ContentLength *int64 `location:\"header\" locationName:\"Content-Length\" type:\"long\"`",
          "35041:  ContentRange *string `location:\"header\" locationName:\"x-amz-fwd-header-Content-Range\" type:\"string\"`",
          "35044:  ContentType *string `location:\"header\" locationName:\"x-amz-fwd-header-Content-Type\" type:\"string\"`",
          "35048:  DeleteMarker *bool `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-delete-marker\" type:\"boolean\"`",
          "35052:  ETag *string `location:\"header\" locationName:\"x-amz-fwd-header-ETag\" type:\"string\"`",
          "35058:  ErrorCode *string `location:\"header\" locationName:\"x-amz-fwd-error-code\" type:\"string\"`",
          "35064:  ErrorMessage *string `location:\"header\" locationName:\"x-amz-fwd-error-message\" type:\"string\"`",
          "35069:  Expiration *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-expiration\" type:\"string\"`",
          "35072:  Expires *time.Time `location:\"header\" locationName:\"x-amz-fwd-header-Expires\" type:\"timestamp\"`",
          "35075:  LastModified *time.Time `location:\"header\" locationName:\"x-amz-fwd-header-Last-Modified\" type:\"timestamp\"`",
          "35078:  Metadata map[string]*string `location:\"headers\" locationName:\"x-amz-meta-\" type:\"map\"`",
          "35084:  MissingMeta *int64 `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-missing-meta\" type:\"integer\"`",
          "35087:  ObjectLockLegalHoldStatus *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-object-lock-legal-hold\" type:\"string\" enum:\"ObjectLockLegalHoldStatus\"`",
          "35091:  ObjectLockMode *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-object-lock-mode\" type:\"string\" enum:\"ObjectLockMode\"`",
          "35094:  ObjectLockRetainUntilDate *time.Time `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-object-lock-retain-until-date\" type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "35097:  PartsCount *int64 `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-mp-parts-count\" type:\"integer\"`",
          "35102:  ReplicationStatus *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-replication-status\" type:\"string\" enum:\"ReplicationStatus\"`",
          "35106:  RequestCharged *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-request-charged\" type:\"string\" enum:\"RequestCharged\"`",
          "35111:  RequestRoute *string `location:\"header\" locationName:\"x-amz-request-route\" type:\"string\" required:\"true\"`",
          "35117:  RequestToken *string `location:\"header\" locationName:\"x-amz-request-token\" type:\"string\" required:\"true\"`",
          "35121:  Restore *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-restore\" type:\"string\"`",
          "35125:  SSECustomerAlgorithm *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\" type:\"string\"`",
          "35130:  SSECustomerKeyMD5 *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-MD5\" type:\"string\"`",
          "35135:  SSEKMSKeyId *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\" type:\"string\" sensitive:\"true\"`",
          "35139:  ServerSideEncryption *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-server-side-encryption\" type:\"string\" enum:\"ServerSideEncryption\"`",
          "35173:  StatusCode *int64 `location:\"header\" locationName:\"x-amz-fwd-status\" type:\"integer\"`",
          "35176:  StorageClass *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-storage-class\" type:\"string\" enum:\"StorageClass\"`",
          "35179:  TagCount *int64 `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-tagging-count\" type:\"integer\"`",
          "35182:  VersionId *string `location:\"header\" locationName:\"x-amz-fwd-header-x-amz-version-id\" type:\"string\"`",
          "35183: }",
          "35186: func (s WriteGetObjectResponseInput) String() string {",
          "35187:  return awsutil.Prettify(s)",
          "35188: }",
          "35191: func (s WriteGetObjectResponseInput) GoString() string {",
          "35192:  return s.String()",
          "35193: }",
          "35196: func (s *WriteGetObjectResponseInput) Validate() error {",
          "35197:  invalidParams := request.ErrInvalidParams{Context: \"WriteGetObjectResponseInput\"}",
          "35198:  if s.RequestRoute == nil {",
          "35199:   invalidParams.Add(request.NewErrParamRequired(\"RequestRoute\"))",
          "35200:  }",
          "35201:  if s.RequestRoute != nil && len(*s.RequestRoute) < 1 {",
          "35202:   invalidParams.Add(request.NewErrParamMinLen(\"RequestRoute\", 1))",
          "35203:  }",
          "35204:  if s.RequestToken == nil {",
          "35205:   invalidParams.Add(request.NewErrParamRequired(\"RequestToken\"))",
          "35206:  }",
          "35208:  if invalidParams.Len() > 0 {",
          "35209:   return invalidParams",
          "35210:  }",
          "35211:  return nil",
          "35212: }",
          "35215: func (s *WriteGetObjectResponseInput) SetAcceptRanges(v string) *WriteGetObjectResponseInput {",
          "35216:  s.AcceptRanges = &v",
          "35217:  return s",
          "35218: }",
          "35221: func (s *WriteGetObjectResponseInput) SetBody(v io.ReadSeeker) *WriteGetObjectResponseInput {",
          "35222:  s.Body = v",
          "35223:  return s",
          "35224: }",
          "35227: func (s *WriteGetObjectResponseInput) SetBucketKeyEnabled(v bool) *WriteGetObjectResponseInput {",
          "35228:  s.BucketKeyEnabled = &v",
          "35229:  return s",
          "35230: }",
          "35233: func (s *WriteGetObjectResponseInput) SetCacheControl(v string) *WriteGetObjectResponseInput {",
          "35234:  s.CacheControl = &v",
          "35235:  return s",
          "35236: }",
          "35239: func (s *WriteGetObjectResponseInput) SetContentDisposition(v string) *WriteGetObjectResponseInput {",
          "35240:  s.ContentDisposition = &v",
          "35241:  return s",
          "35242: }",
          "35245: func (s *WriteGetObjectResponseInput) SetContentEncoding(v string) *WriteGetObjectResponseInput {",
          "35246:  s.ContentEncoding = &v",
          "35247:  return s",
          "35248: }",
          "35251: func (s *WriteGetObjectResponseInput) SetContentLanguage(v string) *WriteGetObjectResponseInput {",
          "35252:  s.ContentLanguage = &v",
          "35253:  return s",
          "35254: }",
          "35257: func (s *WriteGetObjectResponseInput) SetContentLength(v int64) *WriteGetObjectResponseInput {",
          "35258:  s.ContentLength = &v",
          "35259:  return s",
          "35260: }",
          "35263: func (s *WriteGetObjectResponseInput) SetContentRange(v string) *WriteGetObjectResponseInput {",
          "35264:  s.ContentRange = &v",
          "35265:  return s",
          "35266: }",
          "35269: func (s *WriteGetObjectResponseInput) SetContentType(v string) *WriteGetObjectResponseInput {",
          "35270:  s.ContentType = &v",
          "35271:  return s",
          "35272: }",
          "35275: func (s *WriteGetObjectResponseInput) SetDeleteMarker(v bool) *WriteGetObjectResponseInput {",
          "35276:  s.DeleteMarker = &v",
          "35277:  return s",
          "35278: }",
          "35281: func (s *WriteGetObjectResponseInput) SetETag(v string) *WriteGetObjectResponseInput {",
          "35282:  s.ETag = &v",
          "35283:  return s",
          "35284: }",
          "35287: func (s *WriteGetObjectResponseInput) SetErrorCode(v string) *WriteGetObjectResponseInput {",
          "35288:  s.ErrorCode = &v",
          "35289:  return s",
          "35290: }",
          "35293: func (s *WriteGetObjectResponseInput) SetErrorMessage(v string) *WriteGetObjectResponseInput {",
          "35294:  s.ErrorMessage = &v",
          "35295:  return s",
          "35296: }",
          "35299: func (s *WriteGetObjectResponseInput) SetExpiration(v string) *WriteGetObjectResponseInput {",
          "35300:  s.Expiration = &v",
          "35301:  return s",
          "35302: }",
          "35305: func (s *WriteGetObjectResponseInput) SetExpires(v time.Time) *WriteGetObjectResponseInput {",
          "35306:  s.Expires = &v",
          "35307:  return s",
          "35308: }",
          "35311: func (s *WriteGetObjectResponseInput) SetLastModified(v time.Time) *WriteGetObjectResponseInput {",
          "35312:  s.LastModified = &v",
          "35313:  return s",
          "35314: }",
          "35317: func (s *WriteGetObjectResponseInput) SetMetadata(v map[string]*string) *WriteGetObjectResponseInput {",
          "35318:  s.Metadata = v",
          "35319:  return s",
          "35320: }",
          "35323: func (s *WriteGetObjectResponseInput) SetMissingMeta(v int64) *WriteGetObjectResponseInput {",
          "35324:  s.MissingMeta = &v",
          "35325:  return s",
          "35326: }",
          "35329: func (s *WriteGetObjectResponseInput) SetObjectLockLegalHoldStatus(v string) *WriteGetObjectResponseInput {",
          "35330:  s.ObjectLockLegalHoldStatus = &v",
          "35331:  return s",
          "35332: }",
          "35335: func (s *WriteGetObjectResponseInput) SetObjectLockMode(v string) *WriteGetObjectResponseInput {",
          "35336:  s.ObjectLockMode = &v",
          "35337:  return s",
          "35338: }",
          "35341: func (s *WriteGetObjectResponseInput) SetObjectLockRetainUntilDate(v time.Time) *WriteGetObjectResponseInput {",
          "35342:  s.ObjectLockRetainUntilDate = &v",
          "35343:  return s",
          "35344: }",
          "35347: func (s *WriteGetObjectResponseInput) SetPartsCount(v int64) *WriteGetObjectResponseInput {",
          "35348:  s.PartsCount = &v",
          "35349:  return s",
          "35350: }",
          "35353: func (s *WriteGetObjectResponseInput) SetReplicationStatus(v string) *WriteGetObjectResponseInput {",
          "35354:  s.ReplicationStatus = &v",
          "35355:  return s",
          "35356: }",
          "35359: func (s *WriteGetObjectResponseInput) SetRequestCharged(v string) *WriteGetObjectResponseInput {",
          "35360:  s.RequestCharged = &v",
          "35361:  return s",
          "35362: }",
          "35365: func (s *WriteGetObjectResponseInput) SetRequestRoute(v string) *WriteGetObjectResponseInput {",
          "35366:  s.RequestRoute = &v",
          "35367:  return s",
          "35368: }",
          "35371: func (s *WriteGetObjectResponseInput) SetRequestToken(v string) *WriteGetObjectResponseInput {",
          "35372:  s.RequestToken = &v",
          "35373:  return s",
          "35374: }",
          "35377: func (s *WriteGetObjectResponseInput) SetRestore(v string) *WriteGetObjectResponseInput {",
          "35378:  s.Restore = &v",
          "35379:  return s",
          "35380: }",
          "35383: func (s *WriteGetObjectResponseInput) SetSSECustomerAlgorithm(v string) *WriteGetObjectResponseInput {",
          "35384:  s.SSECustomerAlgorithm = &v",
          "35385:  return s",
          "35386: }",
          "35389: func (s *WriteGetObjectResponseInput) SetSSECustomerKeyMD5(v string) *WriteGetObjectResponseInput {",
          "35390:  s.SSECustomerKeyMD5 = &v",
          "35391:  return s",
          "35392: }",
          "35395: func (s *WriteGetObjectResponseInput) SetSSEKMSKeyId(v string) *WriteGetObjectResponseInput {",
          "35396:  s.SSEKMSKeyId = &v",
          "35397:  return s",
          "35398: }",
          "35401: func (s *WriteGetObjectResponseInput) SetServerSideEncryption(v string) *WriteGetObjectResponseInput {",
          "35402:  s.ServerSideEncryption = &v",
          "35403:  return s",
          "35404: }",
          "35407: func (s *WriteGetObjectResponseInput) SetStatusCode(v int64) *WriteGetObjectResponseInput {",
          "35408:  s.StatusCode = &v",
          "35409:  return s",
          "35410: }",
          "35413: func (s *WriteGetObjectResponseInput) SetStorageClass(v string) *WriteGetObjectResponseInput {",
          "35414:  s.StorageClass = &v",
          "35415:  return s",
          "35416: }",
          "35419: func (s *WriteGetObjectResponseInput) SetTagCount(v int64) *WriteGetObjectResponseInput {",
          "35420:  s.TagCount = &v",
          "35421:  return s",
          "35422: }",
          "35425: func (s *WriteGetObjectResponseInput) SetVersionId(v string) *WriteGetObjectResponseInput {",
          "35426:  s.VersionId = &v",
          "35427:  return s",
          "35428: }",
          "35430: func (s *WriteGetObjectResponseInput) hostLabels() map[string]string {",
          "35431:  return map[string]string{",
          "35432:   \"RequestRoute\": aws.StringValue(s.RequestRoute),",
          "35433:  }",
          "35434: }",
          "35436: type WriteGetObjectResponseOutput struct {",
          "35437:  _ struct{} `type:\"structure\"`",
          "35438: }",
          "35441: func (s WriteGetObjectResponseOutput) String() string {",
          "35442:  return awsutil.Prettify(s)",
          "35443: }",
          "35446: func (s WriteGetObjectResponseOutput) GoString() string {",
          "35447:  return s.String()",
          "35448: }",
          "",
          "---------------"
        ],
        "service/s3/customizations.go||service/s3/customizations.go": [
          "File: service/s3/customizations.go -> service/s3/customizations.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:  }",
          "52: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:  case opWriteGetObjectResponse:",
          "52:   r.Handlers.Build.PushFront(buildWriteGetObjectResponseEndpoint)",
          "",
          "---------------"
        ],
        "service/s3/endpoint.go||service/s3/endpoint.go": [
          "File: service/s3/endpoint.go -> service/s3/endpoint.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package s3",
          "3: import (",
          "4:  \"net/url\"",
          "5:  \"strings\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"fmt\"",
          "5:  \"github.com/aws/aws-sdk-go/aws/awserr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:  \"github.com/aws/aws-sdk-go/internal/s3shared/arn\"",
          "12: )",
          "15: func parseEndpointARN(v string) (arn.Resource, error) {",
          "16:  return arn.ParseResource(v, accessPointResourceParser)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: const (",
          "17:  s3Namespace              = \"s3\"",
          "18:  s3AccessPointNamespace   = \"s3-accesspoint\"",
          "19:  s3ObjectsLambdaNamespace = \"s3-object-lambda\"",
          "20:  s3OutpostsNamespace      = \"s3-outposts\"",
          "21: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20:  resParts := arn.SplitResource(a.Resource)",
          "21:  switch resParts[0] {",
          "22:  case \"accesspoint\":",
          "25:   }",
          "27:  case \"outpost\":",
          "28:   if a.Service != \"s3-outposts\" {",
          "29:    return arn.OutpostAccessPointARN{}, arn.InvalidARNError{ARN: a, Reason: \"service is not s3-outposts\"}",
          "",
          "[Removed Lines]",
          "23:   if a.Service != \"s3\" {",
          "24:    return arn.AccessPointARN{}, arn.InvalidARNError{ARN: a, Reason: \"service is not s3\"}",
          "26:   return arn.ParseAccessPointResource(a, resParts[1:])",
          "",
          "[Added Lines]",
          "32:   switch a.Service {",
          "33:   case s3Namespace:",
          "34:    return arn.ParseAccessPointResource(a, resParts[1:])",
          "35:   case s3ObjectsLambdaNamespace:",
          "36:    return parseS3ObjectLambdaAccessPointResource(a, resParts)",
          "37:   default:",
          "38:    return arn.AccessPointARN{}, arn.InvalidARNError{ARN: a, Reason: fmt.Sprintf(\"service is not %s or %s\", s3Namespace, s3ObjectsLambdaNamespace)}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "80:  return outpostAccessPointARN, nil",
          "81: }",
          "83: func endpointHandler(req *request.Request) {",
          "84:  endpoint, ok := req.Params.(endpointARNGetter)",
          "85:  if !ok || !endpoint.hasEndpointARN() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: func parseS3ObjectLambdaAccessPointResource(a awsarn.ARN, resParts []string) (arn.S3ObjectLambdaAccessPointARN, error) {",
          "97:  if a.Service != s3ObjectsLambdaNamespace {",
          "98:   return arn.S3ObjectLambdaAccessPointARN{}, arn.InvalidARNError{ARN: a, Reason: fmt.Sprintf(\"service is not %s\", s3ObjectsLambdaNamespace)}",
          "99:  }",
          "101:  accessPointARN, err := arn.ParseAccessPointResource(a, resParts[1:])",
          "102:  if err != nil {",
          "103:   return arn.S3ObjectLambdaAccessPointARN{}, err",
          "104:  }",
          "106:  if len(accessPointARN.Region) == 0 {",
          "107:   return arn.S3ObjectLambdaAccessPointARN{}, arn.InvalidARNError{ARN: a, Reason: fmt.Sprintf(\"%s region not set\", s3ObjectsLambdaNamespace)}",
          "108:  }",
          "110:  return arn.S3ObjectLambdaAccessPointARN{",
          "111:   AccessPointARN: accessPointARN,",
          "112:  }, nil",
          "113: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:   if err != nil {",
          "117:    req.Error = err",
          "118:   }",
          "119:  case arn.OutpostAccessPointARN:",
          "121:   if resReq.ResourceConfiguredForFIPS() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:  case arn.S3ObjectLambdaAccessPointARN:",
          "152:   err = updateRequestS3ObjectLambdaAccessPointEndpoint(req, tv)",
          "153:   if err != nil {",
          "154:    req.Error = err",
          "155:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "162:  return nil",
          "163: }",
          "165: func updateRequestOutpostAccessPointEndpoint(req *request.Request, accessPoint arn.OutpostAccessPointARN) error {",
          "167:  if aws.BoolValue(req.Config.S3UseAccelerate) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202: func updateRequestS3ObjectLambdaAccessPointEndpoint(req *request.Request, accessPoint arn.S3ObjectLambdaAccessPointARN) error {",
          "204:  if aws.BoolValue(req.Config.UseDualStack) {",
          "205:   return s3shared.NewClientConfiguredForDualStackError(accessPoint,",
          "206:    req.ClientInfo.PartitionID, aws.StringValue(req.Config.Region), nil)",
          "207:  }",
          "210:  if aws.BoolValue(req.Config.S3UseAccelerate) {",
          "211:   return s3shared.NewClientConfiguredForAccelerateError(accessPoint,",
          "212:    req.ClientInfo.PartitionID, aws.StringValue(req.Config.Region), nil)",
          "213:  }",
          "216:  req.Config.DisableEndpointHostPrefix = aws.Bool(false)",
          "218:  if err := s3ObjectLambdaAccessPointEndpointBuilder(accessPoint).build(req); err != nil {",
          "219:   return err",
          "220:  }",
          "222:  removeBucketFromPath(req.HTTPRequest.URL)",
          "224:  return nil",
          "225: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "192:   u.Path = \"/\"",
          "193:  }",
          "194: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258: func buildWriteGetObjectResponseEndpoint(req *request.Request) {",
          "260:  if aws.BoolValue(req.Config.UseDualStack) {",
          "261:   req.Error = awserr.New(\"ConfigurationError\", \"client configured for dualstack but not supported for operation\", nil)",
          "262:   return",
          "263:  }",
          "266:  if aws.BoolValue(req.Config.S3UseAccelerate) {",
          "267:   req.Error = awserr.New(\"ConfigurationError\", \"client configured for accelerate but not supported for operation\", nil)",
          "268:   return",
          "269:  }",
          "271:  signingName := s3ObjectsLambdaNamespace",
          "272:  signingRegion := req.ClientInfo.SigningRegion",
          "274:  if !hasCustomEndpoint(req) {",
          "275:   endpoint, err := resolveRegionalEndpoint(req, aws.StringValue(req.Config.Region), EndpointsID)",
          "276:   if err != nil {",
          "277:    req.Error = awserr.New(request.ErrCodeSerialization, \"failed to resolve endpoint\", err)",
          "278:    return",
          "279:   }",
          "280:   signingRegion = endpoint.SigningRegion",
          "282:   if err = updateRequestEndpoint(req, endpoint.URL); err != nil {",
          "283:    req.Error = err",
          "284:    return",
          "285:   }",
          "286:   updateS3HostPrefixForS3ObjectLambda(req)",
          "287:  }",
          "289:  redirectSigner(req, signingName, signingRegion)",
          "290: }",
          "",
          "---------------"
        ],
        "service/s3/endpoint_builder.go||service/s3/endpoint_builder.go": [
          "File: service/s3/endpoint_builder.go -> service/s3/endpoint_builder.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   if err = updateRequestEndpoint(req, endpoint.URL); err != nil {",
          "67:    return err",
          "68:   }",
          "76:  }",
          "78:  protocol.HostPrefixBuilder{",
          "",
          "[Removed Lines]",
          "69:   const serviceEndpointLabel = \"s3-accesspoint\"",
          "72:   cfgHost := req.HTTPRequest.URL.Host",
          "73:   if strings.HasPrefix(cfgHost, \"s3\") {",
          "74:    req.HTTPRequest.URL.Host = serviceEndpointLabel + cfgHost[2:]",
          "75:   }",
          "",
          "[Added Lines]",
          "71:   updateS3HostForS3AccessPoint(req)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:  }",
          "99: }",
          "102: type outpostAccessPointEndpointBuilder arn.OutpostAccessPointARN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98: type s3ObjectLambdaAccessPointEndpointBuilder arn.S3ObjectLambdaAccessPointARN",
          "108: func (a s3ObjectLambdaAccessPointEndpointBuilder) build(req *request.Request) error {",
          "109:  resolveRegion := arn.S3ObjectLambdaAccessPointARN(a).Region",
          "110:  cfgRegion := aws.StringValue(req.Config.Region)",
          "112:  if s3shared.IsFIPS(cfgRegion) {",
          "113:   if aws.BoolValue(req.Config.S3UseARNRegion) && s3shared.IsCrossRegion(req, resolveRegion) {",
          "117:    return s3shared.NewClientConfiguredForCrossRegionFIPSError(arn.S3ObjectLambdaAccessPointARN(a),",
          "118:     req.ClientInfo.PartitionID, cfgRegion, nil)",
          "119:   }",
          "120:   resolveRegion = cfgRegion",
          "121:  }",
          "123:  endpoint, err := resolveRegionalEndpoint(req, resolveRegion, EndpointsID)",
          "124:  if err != nil {",
          "125:   return s3shared.NewFailedToResolveEndpointError(arn.S3ObjectLambdaAccessPointARN(a),",
          "126:    req.ClientInfo.PartitionID, cfgRegion, err)",
          "127:  }",
          "129:  endpoint.URL = endpoints.AddScheme(endpoint.URL, aws.BoolValue(req.Config.DisableSSL))",
          "131:  endpoint.SigningName = s3ObjectsLambdaNamespace",
          "133:  if !hasCustomEndpoint(req) {",
          "134:   if err = updateRequestEndpoint(req, endpoint.URL); err != nil {",
          "135:    return err",
          "136:   }",
          "138:   updateS3HostPrefixForS3ObjectLambda(req)",
          "139:  }",
          "141:  protocol.HostPrefixBuilder{",
          "142:   Prefix:   accessPointPrefixTemplate,",
          "143:   LabelsFn: a.hostPrefixLabelValues,",
          "144:  }.Build(req)",
          "147:  redirectSigner(req, endpoint.SigningName, endpoint.SigningRegion)",
          "149:  err = protocol.ValidateEndpointHost(req.Operation.Name, req.HTTPRequest.URL.Host)",
          "150:  if err != nil {",
          "151:   return s3shared.NewInvalidARNError(arn.S3ObjectLambdaAccessPointARN(a), err)",
          "152:  }",
          "154:  return nil",
          "155: }",
          "157: func (a s3ObjectLambdaAccessPointEndpointBuilder) hostPrefixLabelValues() map[string]string {",
          "158:  return map[string]string{",
          "159:   accessPointPrefixLabel: arn.S3ObjectLambdaAccessPointARN(a).AccessPointName,",
          "160:   accountIDPrefixLabel:   arn.S3ObjectLambdaAccessPointARN(a).AccountID,",
          "161:  }",
          "162: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:  resolveService := o.Service",
          "116:  endpointsID := resolveService",
          "118:   endpointsID = \"s3\"",
          "119:  }",
          "",
          "[Removed Lines]",
          "117:  if resolveService == \"s3-outposts\" {",
          "",
          "[Added Lines]",
          "180:  if resolveService == s3OutpostsNamespace {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "130:   if err = updateRequestEndpoint(req, endpoint.URL); err != nil {",
          "131:    return err",
          "132:   }",
          "138:  }",
          "140:  protocol.HostPrefixBuilder{",
          "",
          "[Removed Lines]",
          "134:   cfgHost := req.HTTPRequest.URL.Host",
          "135:   if strings.HasPrefix(cfgHost, endpointsID) {",
          "136:    req.HTTPRequest.URL.Host = resolveService + cfgHost[len(endpointsID):]",
          "137:   }",
          "",
          "[Added Lines]",
          "196:   updateHostPrefix(req, endpointsID, resolveService)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "185:  req.ClientInfo.SigningName = signingName",
          "186:  req.ClientInfo.SigningRegion = signingRegion",
          "187: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247: func updateS3HostForS3AccessPoint(req *request.Request) {",
          "248:  updateHostPrefix(req, \"s3\", s3AccessPointNamespace)",
          "249: }",
          "251: func updateS3HostPrefixForS3ObjectLambda(req *request.Request) {",
          "252:  updateHostPrefix(req, \"s3\", s3ObjectsLambdaNamespace)",
          "253: }",
          "255: func updateHostPrefix(req *request.Request, oldEndpointPrefix, newEndpointPrefix string) {",
          "256:  host := req.HTTPRequest.URL.Host",
          "257:  if strings.HasPrefix(host, oldEndpointPrefix) {",
          "259:   req.HTTPRequest.URL.Host = newEndpointPrefix + host[len(oldEndpointPrefix):]",
          "260:  }",
          "261: }",
          "",
          "---------------"
        ],
        "service/s3/endpoint_test.go||service/s3/endpoint_test.go": [
          "File: service/s3/endpoint_test.go -> service/s3/endpoint_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"fmt\"",
          "8:  \"io/ioutil\"",
          "9:  \"net/http\"",
          "10:  \"strings\"",
          "11:  \"testing\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"net/http/httptest\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:    expectedSigningName:   \"s3\",",
          "37:    expectedSigningRegion: \"us-west-2\",",
          "38:   },",
          "39:   \"AccessPoint with custom endpoint url\": {",
          "40:    bucket: \"arn:aws:s3:us-west-2:123456789012:accesspoint:myendpoint\",",
          "41:    config: &aws.Config{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   \"Object Lambda with no UseARNRegion flag set\": {",
          "41:    bucket: \"arn:aws:s3-object-lambda:us-west-2:123456789012:accesspoint/myap\",",
          "42:    config: &aws.Config{",
          "43:     Region: aws.String(\"us-west-2\"),",
          "44:    },",
          "45:    expectedEndpoint:      \"https://myap-123456789012.s3-object-lambda.us-west-2.amazonaws.com\",",
          "46:    expectedSigningName:   \"s3-object-lambda\",",
          "47:    expectedSigningRegion: \"us-west-2\",",
          "48:   },",
          "49:   \"Object Lambda with UseARNRegion flag set\": {",
          "50:    bucket: \"arn:aws:s3-object-lambda:us-east-1:123456789012:accesspoint/myap\",",
          "51:    config: &aws.Config{",
          "52:     Region:         aws.String(\"us-west-2\"),",
          "53:     S3UseARNRegion: aws.Bool(true),",
          "54:    },",
          "55:    expectedEndpoint:      \"https://myap-123456789012.s3-object-lambda.us-east-1.amazonaws.com\",",
          "56:    expectedSigningName:   \"s3-object-lambda\",",
          "57:    expectedSigningRegion: \"us-east-1\",",
          "58:   },",
          "59:   \"Object Lambda with Cross-Region error\": {",
          "60:    bucket: \"arn:aws:s3-object-lambda:us-east-1:123456789012:accesspoint/myap\",",
          "61:    config: &aws.Config{",
          "62:     Region: aws.String(\"us-west-2\"),",
          "63:    },",
          "64:    expectedErr: \"client region does not match provided ARN region\",",
          "65:   },",
          "66:   \"Object Lambda Pseudo-Region with UseARNRegion flag set\": {",
          "67:    bucket: \"arn:aws:s3-object-lambda:us-east-1:123456789012:accesspoint/myap\",",
          "68:    config: &aws.Config{",
          "69:     Region:         aws.String(\"aws-global\"),",
          "70:     S3UseARNRegion: aws.Bool(true),",
          "71:    },",
          "72:    expectedEndpoint:      \"https://myap-123456789012.s3-object-lambda.us-east-1.amazonaws.com\",",
          "73:    expectedSigningRegion: \"us-east-1\",",
          "74:    expectedSigningName:   \"s3-object-lambda\",",
          "75:   },",
          "76:   \"Object Lambda Cross-Region DualStack error\": {",
          "77:    bucket: \"arn:aws:s3-object-lambda:us-east-1:123456789012:accesspoint/myap\",",
          "78:    config: &aws.Config{",
          "79:     Region:         aws.String(\"us-west-2\"),",
          "80:     UseDualStack:   aws.Bool(true),",
          "81:     S3UseARNRegion: aws.Bool(true),",
          "82:    },",
          "83:    expectedErr: \"client configured for S3 Dual-stack but is not supported with resource ARN\",",
          "84:   },",
          "85:   \"Object Lambda Cross-Partition error\": {",
          "86:    bucket: \"arn:aws-cn:s3-object-lambda:cn-north-1:123456789012:accesspoint/myap\",",
          "87:    config: &aws.Config{",
          "88:     Region:         aws.String(\"us-west-2\"),",
          "89:     S3UseARNRegion: aws.Bool(true),",
          "90:    },",
          "91:    expectedErr: \"client partition does not match provided ARN partition\",",
          "92:   },",
          "93:   \"Object Lambda FIPS Pseudo-Region\": {",
          "94:    bucket: \"arn:aws-us-gov:s3-object-lambda:us-gov-west-1:123456789012:accesspoint/myap\",",
          "95:    config: &aws.Config{",
          "96:     Region: aws.String(\"fips-us-gov-west-1\"),",
          "97:    },",
          "98:    expectedEndpoint:      \"https://myap-123456789012.s3-object-lambda-fips.us-gov-west-1.amazonaws.com\",",
          "99:    expectedSigningRegion: \"us-gov-west-1\",",
          "100:    expectedSigningName:   \"s3-object-lambda\",",
          "101:   },",
          "102:   \"Object Lambda FIPS Pseudo-Region with UseARNRegion flag set\": {",
          "103:    bucket: \"arn:aws-us-gov:s3-object-lambda:us-gov-west-1:123456789012:accesspoint/myap\",",
          "104:    config: &aws.Config{",
          "105:     Region:         aws.String(\"fips-us-gov-west-1\"),",
          "106:     S3UseARNRegion: aws.Bool(true),",
          "107:    },",
          "108:    expectedEndpoint:      \"https://myap-123456789012.s3-object-lambda-fips.us-gov-west-1.amazonaws.com\",",
          "109:    expectedSigningRegion: \"us-gov-west-1\",",
          "110:    expectedSigningName:   \"s3-object-lambda\",",
          "111:   },",
          "112:   \"Object Lambda with Accelerate\": {",
          "113:    bucket: \"arn:aws:s3-object-lambda:us-west-2:123456789012:accesspoint:myendpoint\",",
          "114:    config: &aws.Config{",
          "115:     Region:          aws.String(\"us-west-2\"),",
          "116:     S3UseAccelerate: aws.Bool(true),",
          "117:    },",
          "118:    expectedErr: \"client configured for S3 Accelerate but is not supported with resource ARN\",",
          "119:   },",
          "120:   \"Object Lambda with Custom Endpoint\": {",
          "121:    bucket: \"arn:aws:s3-object-lambda:us-west-2:123456789012:accesspoint:myendpoint\",",
          "122:    config: &aws.Config{",
          "123:     Region:   aws.String(\"us-west-2\"),",
          "124:     Endpoint: aws.String(\"my-domain.com\"),",
          "125:    },",
          "126:    expectedEndpoint:      \"https://myendpoint-123456789012.my-domain.com\",",
          "127:    expectedSigningName:   \"s3-object-lambda\",",
          "128:    expectedSigningRegion: \"us-west-2\",",
          "129:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "537:   })",
          "538:  }",
          "539: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "632: func TestWriteGetObjectResponse_UpdateEndpoint(t *testing.T) {",
          "633:  cases := map[string]struct {",
          "634:   config                *aws.Config",
          "635:   expectedEndpoint      string",
          "636:   expectedSigningRegion string",
          "637:   expectedSigningName   string",
          "638:   expectedErr           string",
          "639:  }{",
          "640:   \"standard endpoint\": {",
          "641:    config: &aws.Config{",
          "642:     Region: aws.String(\"us-west-2\"),",
          "643:    },",
          "644:    expectedEndpoint:      \"https://test-route.s3-object-lambda.us-west-2.amazonaws.com\",",
          "645:    expectedSigningRegion: \"us-west-2\",",
          "646:    expectedSigningName:   \"s3-object-lambda\",",
          "647:   },",
          "648:   \"fips endpoint\": {",
          "649:    config: &aws.Config{",
          "650:     Region: aws.String(\"fips-us-gov-west-1\"),",
          "651:    },",
          "652:    expectedEndpoint:      \"https://test-route.s3-object-lambda-fips.us-gov-west-1.amazonaws.com\",",
          "653:    expectedSigningRegion: \"us-gov-west-1\",",
          "654:    expectedSigningName:   \"s3-object-lambda\",",
          "655:   },",
          "656:   \"duakstack endpoint\": {",
          "657:    config: &aws.Config{",
          "658:     Region:       aws.String(\"us-west-2\"),",
          "659:     UseDualStack: aws.Bool(true),",
          "660:    },",
          "661:    expectedErr: \"client configured for dualstack but not supported for operation\",",
          "662:   },",
          "663:   \"accelerate endpoint\": {",
          "664:    config: &aws.Config{",
          "665:     Region:          aws.String(\"us-west-2\"),",
          "666:     S3UseAccelerate: aws.Bool(true),",
          "667:    },",
          "668:    expectedErr: \"client configured for accelerate but not supported for operation\",",
          "669:   },",
          "670:   \"custom endpoint\": {",
          "671:    config: &aws.Config{",
          "672:     Region:   aws.String(\"us-west-2\"),",
          "673:     Endpoint: aws.String(\"https://my-domain.com\"),",
          "674:    },",
          "675:    expectedEndpoint:      \"https://test-route.my-domain.com\",",
          "676:    expectedSigningRegion: \"us-west-2\",",
          "677:    expectedSigningName:   \"s3-object-lambda\",",
          "678:   },",
          "679:  }",
          "681:  for name, c := range cases {",
          "682:   t.Run(name, func(t *testing.T) {",
          "683:    sess := unit.Session.Copy(c.config)",
          "685:    svc := New(sess)",
          "687:    var req *request.Request",
          "688:    req, _ = svc.WriteGetObjectResponseRequest(&WriteGetObjectResponseInput{",
          "689:     RequestRoute: aws.String(\"test-route\"),",
          "690:     RequestToken: aws.String(\"test-token\"),",
          "691:    })",
          "693:    req.Handlers.Send.Clear()",
          "694:    req.Handlers.Send.PushBack(func(r *request.Request) {",
          "695:     defer func() {",
          "696:      r.HTTPResponse = &http.Response{",
          "697:       StatusCode:    200,",
          "698:       ContentLength: 0,",
          "699:       Body:          ioutil.NopCloser(bytes.NewReader(nil)),",
          "700:      }",
          "701:     }()",
          "702:     if len(c.expectedErr) != 0 {",
          "703:      return",
          "704:     }",
          "706:     endpoint := fmt.Sprintf(\"%s://%s\", r.HTTPRequest.URL.Scheme, r.HTTPRequest.URL.Host)",
          "707:     if e, a := c.expectedEndpoint, endpoint; e != a {",
          "708:      t.Errorf(\"expected %v, got %v\", e, a)",
          "709:     }",
          "711:     if e, a := c.expectedSigningName, r.ClientInfo.SigningName; e != a {",
          "712:      t.Errorf(\"expected %v, got %v\", e, a)",
          "713:     }",
          "714:     if e, a := c.expectedSigningRegion, r.ClientInfo.SigningRegion; e != a {",
          "715:      t.Errorf(\"expected %v, got %v\", e, a)",
          "716:     }",
          "717:    })",
          "718:    err := req.Send()",
          "719:    if len(c.expectedErr) == 0 && err != nil {",
          "720:     t.Errorf(\"expected no error but got: %v\", err)",
          "721:    } else if len(c.expectedErr) != 0 && err == nil {",
          "722:     t.Errorf(\"expected err %q, but got nil\", c.expectedErr)",
          "723:    } else if len(c.expectedErr) != 0 && err != nil && !strings.Contains(err.Error(), c.expectedErr) {",
          "724:     t.Errorf(\"expected %v, got %v\", c.expectedErr, err.Error())",
          "725:    }",
          "726:   })",
          "727:  }",
          "728: }",
          "730: type readSeeker struct {",
          "731:  br *bytes.Reader",
          "732: }",
          "734: func (r *readSeeker) Read(p []byte) (int, error) {",
          "735:  return r.br.Read(p)",
          "736: }",
          "738: func (r *readSeeker) Seek(offset int64, whence int) (int64, error) {",
          "739:  return r.br.Seek(offset, whence)",
          "740: }",
          "742: type readOnlyReader struct {",
          "743:  br *bytes.Reader",
          "744: }",
          "746: func (r *readOnlyReader) Read(p []byte) (int, error) {",
          "747:  return r.br.Read(p)",
          "748: }",
          "750: type lenReader struct {",
          "751:  br *bytes.Reader",
          "752: }",
          "754: func (r *lenReader) Read(p []byte) (int, error) {",
          "755:  return r.br.Read(p)",
          "756: }",
          "758: func (r *lenReader) Len() int {",
          "759:  return r.br.Len()",
          "760: }",
          "762: func TestWriteGetObjectResponse(t *testing.T) {",
          "763:  cases := map[string]struct {",
          "764:   Handler func(*testing.T) http.Handler",
          "765:   Input   WriteGetObjectResponseInput",
          "766:  }{",
          "767:   \"Content-Length seekable\": {",
          "768:    Handler: func(t *testing.T) http.Handler {",
          "769:     return http.HandlerFunc(func(writer http.ResponseWriter, request *http.Request) {",
          "770:      expectedInput := []byte(\"test input\")",
          "772:      if len(request.TransferEncoding) != 0 {",
          "773:       t.Errorf(\"expect no transfer-encoding\")",
          "774:      }",
          "776:      if e, a := fmt.Sprintf(\"%d\", len(expectedInput)), request.Header.Get(\"Content-Length\"); e != a {",
          "777:       t.Errorf(\"expect %v, got %v\", e, a)",
          "778:      }",
          "780:      if e, a := \"UNSIGNED-PAYLOAD\", request.Header.Get(\"X-Amz-Content-Sha256\"); e != a {",
          "781:       t.Errorf(\"expect %v, got %v\", e, a)",
          "782:      }",
          "784:      all, err := ioutil.ReadAll(request.Body)",
          "785:      if err != nil {",
          "786:       t.Errorf(\"expect no error, got %v\", err)",
          "787:      }",
          "788:      if !bytes.Equal(all, expectedInput) {",
          "789:       t.Error(\"input did not match expected\")",
          "790:      }",
          "791:      writer.WriteHeader(200)",
          "792:     })",
          "793:    },",
          "794:    Input: WriteGetObjectResponseInput{",
          "795:     RequestRoute: aws.String(\"route\"),",
          "796:     RequestToken: aws.String(\"token\"),",
          "797:     Body:         &readSeeker{br: bytes.NewReader([]byte(\"test input\"))},",
          "798:    },",
          "799:   },",
          "800:   \"Content-Length Len Interface\": {",
          "801:    Handler: func(t *testing.T) http.Handler {",
          "802:     return http.HandlerFunc(func(writer http.ResponseWriter, request *http.Request) {",
          "803:      expectedInput := []byte(\"test input\")",
          "805:      if len(request.TransferEncoding) != 0 {",
          "806:       t.Errorf(\"expect no transfer-encoding\")",
          "807:      }",
          "809:      if e, a := fmt.Sprintf(\"%d\", len(expectedInput)), request.Header.Get(\"Content-Length\"); e != a {",
          "810:       t.Errorf(\"expect %v, got %v\", e, a)",
          "811:      }",
          "813:      if e, a := \"UNSIGNED-PAYLOAD\", request.Header.Get(\"X-Amz-Content-Sha256\"); e != a {",
          "814:       t.Errorf(\"expect %v, got %v\", e, a)",
          "815:      }",
          "817:      all, err := ioutil.ReadAll(request.Body)",
          "818:      if err != nil {",
          "819:       t.Errorf(\"expect no error, got %v\", err)",
          "820:      }",
          "821:      if !bytes.Equal(all, expectedInput) {",
          "822:       t.Error(\"input did not match expected\")",
          "823:      }",
          "824:      writer.WriteHeader(200)",
          "825:     })",
          "826:    },",
          "827:    Input: WriteGetObjectResponseInput{",
          "828:     RequestRoute: aws.String(\"route\"),",
          "829:     RequestToken: aws.String(\"token\"),",
          "830:     Body:         aws.ReadSeekCloser(&lenReader{bytes.NewReader([]byte(\"test input\"))}),",
          "831:    },",
          "832:   },",
          "833:   \"Content-Length Input Parameter\": {",
          "834:    Handler: func(t *testing.T) http.Handler {",
          "835:     return http.HandlerFunc(func(writer http.ResponseWriter, request *http.Request) {",
          "836:      expectedInput := []byte(\"test input\")",
          "838:      if len(request.TransferEncoding) != 0 {",
          "839:       t.Errorf(\"expect no transfer-encoding\")",
          "840:      }",
          "842:      if e, a := fmt.Sprintf(\"%d\", len(expectedInput)), request.Header.Get(\"Content-Length\"); e != a {",
          "843:       t.Errorf(\"expect %v, got %v\", e, a)",
          "844:      }",
          "846:      if e, a := \"UNSIGNED-PAYLOAD\", request.Header.Get(\"X-Amz-Content-Sha256\"); e != a {",
          "847:       t.Errorf(\"expect %v, got %v\", e, a)",
          "848:      }",
          "850:      all, err := ioutil.ReadAll(request.Body)",
          "851:      if err != nil {",
          "852:       t.Errorf(\"expect no error, got %v\", err)",
          "853:      }",
          "854:      if !bytes.Equal(all, expectedInput) {",
          "855:       t.Error(\"input did not match expected\")",
          "856:      }",
          "857:      writer.WriteHeader(200)",
          "858:     })",
          "859:    },",
          "860:    Input: WriteGetObjectResponseInput{",
          "861:     RequestRoute:  aws.String(\"route\"),",
          "862:     RequestToken:  aws.String(\"token\"),",
          "863:     Body:          aws.ReadSeekCloser(&readOnlyReader{bytes.NewReader([]byte(\"test input\"))}),",
          "864:     ContentLength: aws.Int64(10),",
          "865:    },",
          "866:   },",
          "867:   \"Content-Length Not Provided\": {",
          "868:    Handler: func(t *testing.T) http.Handler {",
          "869:     return http.HandlerFunc(func(writer http.ResponseWriter, request *http.Request) {",
          "870:      expectedInput := []byte(\"test input\")",
          "872:      encoding := \"\"",
          "873:      if len(request.TransferEncoding) == 1 {",
          "874:       encoding = request.TransferEncoding[0]",
          "875:      }",
          "876:      if encoding != \"chunked\" {",
          "877:       t.Errorf(\"expect transfer-encoding chunked, got %v\", encoding)",
          "878:      }",
          "880:      if e, a := \"\", request.Header.Get(\"Content-Length\"); e != a {",
          "881:       t.Errorf(\"expect %v, got %v\", e, a)",
          "882:      }",
          "884:      if e, a := \"UNSIGNED-PAYLOAD\", request.Header.Get(\"X-Amz-Content-Sha256\"); e != a {",
          "885:       t.Errorf(\"expect %v, got %v\", e, a)",
          "886:      }",
          "888:      all, err := ioutil.ReadAll(request.Body)",
          "889:      if err != nil {",
          "890:       t.Errorf(\"expect no error, got %v\", err)",
          "891:      }",
          "892:      if !bytes.Equal(all, expectedInput) {",
          "893:       t.Error(\"input did not match expected\")",
          "894:      }",
          "895:      writer.WriteHeader(200)",
          "896:     })",
          "897:    },",
          "898:    Input: WriteGetObjectResponseInput{",
          "899:     RequestRoute: aws.String(\"route\"),",
          "900:     RequestToken: aws.String(\"token\"),",
          "901:     Body:         aws.ReadSeekCloser(&readOnlyReader{bytes.NewReader([]byte(\"test input\"))}),",
          "902:    },",
          "903:   },",
          "904:  }",
          "906:  for name, tt := range cases {",
          "907:   t.Run(name, func(t *testing.T) {",
          "908:    server := httptest.NewServer(tt.Handler(t))",
          "909:    defer server.Close()",
          "911:    sess := unit.Session.Copy(&aws.Config{",
          "912:     Region:                    aws.String(\"us-west-2\"),",
          "913:     Endpoint:                  &server.URL,",
          "914:     DisableEndpointHostPrefix: aws.Bool(true),",
          "915:    })",
          "917:    client := New(sess)",
          "919:    _, err := client.WriteGetObjectResponse(&tt.Input)",
          "920:    if err != nil {",
          "921:     t.Fatalf(\"expect no error, got %v\", err)",
          "922:    }",
          "923:   })",
          "924:  }",
          "925: }",
          "",
          "---------------"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:  fmt.Println(result)",
          "468: }",
          "474: func ExampleS3_DeleteObjectTagging_shared00() {",
          "475:  svc := s3.New(session.New())",
          "476:  input := &s3.DeleteObjectTaggingInput{",
          "480:  }",
          "482:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "477:   Bucket:    aws.String(\"examplebucket\"),",
          "478:   Key:       aws.String(\"HappyFace.jpg\"),",
          "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "[Added Lines]",
          "478:   Bucket: aws.String(\"examplebucket\"),",
          "479:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:  fmt.Println(result)",
          "498: }",
          "505: func ExampleS3_DeleteObjectTagging_shared01() {",
          "506:  svc := s3.New(session.New())",
          "507:  input := &s3.DeleteObjectTaggingInput{",
          "510:  }",
          "512:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "508:   Bucket: aws.String(\"examplebucket\"),",
          "509:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "507:   Bucket:    aws.String(\"examplebucket\"),",
          "508:   Key:       aws.String(\"HappyFace.jpg\"),",
          "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "539:   Delete: &s3.Delete{",
          "540:    Objects: []*s3.ObjectIdentifier{",
          "541:     {",
          "543:     },",
          "544:     {",
          "546:     },",
          "547:    },",
          "548:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "542:      Key: aws.String(\"objectkey1\"),",
          "545:      Key: aws.String(\"objectkey2\"),",
          "",
          "[Added Lines]",
          "542:      Key:       aws.String(\"HappyFace.jpg\"),",
          "543:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "546:      Key:       aws.String(\"HappyFace.jpg\"),",
          "547:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "579:   Delete: &s3.Delete{",
          "580:    Objects: []*s3.ObjectIdentifier{",
          "581:     {",
          "584:     },",
          "585:     {",
          "588:     },",
          "589:    },",
          "590:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "582:      Key:       aws.String(\"HappyFace.jpg\"),",
          "583:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "586:      Key:       aws.String(\"HappyFace.jpg\"),",
          "587:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "[Added Lines]",
          "584:      Key: aws.String(\"objectkey1\"),",
          "587:      Key: aws.String(\"objectkey2\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "934:  fmt.Println(result)",
          "935: }",
          "941: func ExampleS3_GetObject_shared00() {",
          "942:  svc := s3.New(session.New())",
          "943:  input := &s3.GetObjectInput{",
          "944:   Bucket: aws.String(\"examplebucket\"),",
          "947:  }",
          "949:  result, err := svc.GetObject(input)",
          "",
          "[Removed Lines]",
          "945:   Key:    aws.String(\"SampleFile.txt\"),",
          "946:   Range:  aws.String(\"bytes=0-9\"),",
          "",
          "[Added Lines]",
          "944:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "968:  fmt.Println(result)",
          "969: }",
          "974: func ExampleS3_GetObject_shared01() {",
          "975:  svc := s3.New(session.New())",
          "976:  input := &s3.GetObjectInput{",
          "977:   Bucket: aws.String(\"examplebucket\"),",
          "979:  }",
          "981:  result, err := svc.GetObject(input)",
          "",
          "[Removed Lines]",
          "978:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "977:   Key:    aws.String(\"SampleFile.txt\"),",
          "978:   Range:  aws.String(\"bytes=0-9\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1030:  fmt.Println(result)",
          "1031: }",
          "1036: func ExampleS3_GetObjectTagging_shared00() {",
          "1037:  svc := s3.New(session.New())",
          "1038:  input := &s3.GetObjectTaggingInput{",
          "1041:  }",
          "1043:  result, err := svc.GetObjectTagging(input)",
          "",
          "[Removed Lines]",
          "1039:   Bucket: aws.String(\"examplebucket\"),",
          "1040:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "1040:   Bucket:    aws.String(\"examplebucket\"),",
          "1041:   Key:       aws.String(\"exampleobject\"),",
          "1042:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1058:  fmt.Println(result)",
          "1059: }",
          "1065: func ExampleS3_GetObjectTagging_shared01() {",
          "1066:  svc := s3.New(session.New())",
          "1067:  input := &s3.GetObjectTaggingInput{",
          "1071:  }",
          "1073:  result, err := svc.GetObjectTagging(input)",
          "",
          "[Removed Lines]",
          "1068:   Bucket:    aws.String(\"examplebucket\"),",
          "1069:   Key:       aws.String(\"exampleobject\"),",
          "1070:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "[Added Lines]",
          "1069:   Bucket: aws.String(\"examplebucket\"),",
          "1070:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1201:  fmt.Println(result)",
          "1202: }",
          "1208: func ExampleS3_ListMultipartUploads_shared00() {",
          "1209:  svc := s3.New(session.New())",
          "1210:  input := &s3.ListMultipartUploadsInput{",
          "1215:  }",
          "1217:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1211:   Bucket:         aws.String(\"examplebucket\"),",
          "1212:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1213:   MaxUploads:     aws.Int64(2),",
          "1214:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "[Added Lines]",
          "1210:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1232:  fmt.Println(result)",
          "1233: }",
          "1238: func ExampleS3_ListMultipartUploads_shared01() {",
          "1239:  svc := s3.New(session.New())",
          "1240:  input := &s3.ListMultipartUploadsInput{",
          "1242:  }",
          "1244:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1241:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "[Added Lines]",
          "1238:   Bucket:         aws.String(\"examplebucket\"),",
          "1239:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1240:   MaxUploads:     aws.Int64(2),",
          "1241:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1808:  fmt.Println(result)",
          "1809: }",
          "1815: func ExampleS3_PutObject_shared00() {",
          "1816:  svc := s3.New(session.New())",
          "1817:  input := &s3.PutObjectInput{",
          "1822:  }",
          "1824:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1818:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1819:   Bucket:  aws.String(\"examplebucket\"),",
          "1820:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1821:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1819:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1820:   Bucket: aws.String(\"examplebucket\"),",
          "1821:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1839:  fmt.Println(result)",
          "1840: }",
          "1847: func ExampleS3_PutObject_shared01() {",
          "1848:  svc := s3.New(session.New())",
          "1849:  input := &s3.PutObjectInput{",
          "1851:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1852:   Bucket: aws.String(\"examplebucket\"),",
          "1854:  }",
          "1856:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1850:   ACL:    aws.String(\"authenticated-read\"),",
          "1853:   Key:    aws.String(\"exampleobject\"),",
          "",
          "[Added Lines]",
          "1851:   Key:    aws.String(\"objectkey\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1871:  fmt.Println(result)",
          "1872: }",
          "1878: func ExampleS3_PutObject_shared02() {",
          "1879:  svc := s3.New(session.New())",
          "1880:  input := &s3.PutObjectInput{",
          "1884:  }",
          "1886:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1881:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1882:   Bucket: aws.String(\"examplebucket\"),",
          "1883:   Key:    aws.String(\"objectkey\"),",
          "",
          "[Added Lines]",
          "1879:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1880:   Bucket:               aws.String(\"examplebucket\"),",
          "1881:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1882:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1883:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1901:  fmt.Println(result)",
          "1902: }",
          "1909: func ExampleS3_PutObject_shared03() {",
          "1910:  svc := s3.New(session.New())",
          "1911:  input := &s3.PutObjectInput{",
          "1917:  }",
          "1919:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1912:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1913:   Bucket:               aws.String(\"examplebucket\"),",
          "1914:   Key:                  aws.String(\"exampleobject\"),",
          "1915:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1916:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1912:   Bucket: aws.String(\"examplebucket\"),",
          "1913:   Key:    aws.String(\"exampleobject\"),",
          "1914:   Metadata: map[string]*string{",
          "1915:    \"metadata1\": aws.String(\"value1\"),",
          "1916:    \"metadata2\": aws.String(\"value2\"),",
          "1917:   },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1934:  fmt.Println(result)",
          "1935: }",
          "1941: func ExampleS3_PutObject_shared04() {",
          "1942:  svc := s3.New(session.New())",
          "1943:  input := &s3.PutObjectInput{",
          "1944:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1945:   Bucket: aws.String(\"examplebucket\"),",
          "1946:   Key:    aws.String(\"exampleobject\"),",
          "1951:  }",
          "1953:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1947:   Metadata: map[string]*string{",
          "1948:    \"metadata1\": aws.String(\"value1\"),",
          "1949:    \"metadata2\": aws.String(\"value2\"),",
          "1950:   },",
          "",
          "[Added Lines]",
          "1946:   ACL:    aws.String(\"authenticated-read\"),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1968:  fmt.Println(result)",
          "1969: }",
          "1976: func ExampleS3_PutObject_shared05() {",
          "1977:  svc := s3.New(session.New())",
          "1978:  input := &s3.PutObjectInput{",
          "1982:  }",
          "1984:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1979:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1980:   Bucket: aws.String(\"examplebucket\"),",
          "1981:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "1977:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1978:   Bucket:  aws.String(\"examplebucket\"),",
          "1979:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1980:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1999:  fmt.Println(result)",
          "2000: }",
          "2006: func ExampleS3_PutObject_shared06() {",
          "2007:  svc := s3.New(session.New())",
          "2008:  input := &s3.PutObjectInput{",
          "2010:   Bucket:               aws.String(\"examplebucket\"),",
          "2012:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2014:  }",
          "2016:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2009:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2011:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "2013:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "2009:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "2011:   Key:                  aws.String(\"exampleobject\"),",
          "2013:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2175:  fmt.Println(result)",
          "2176: }",
          "2182: func ExampleS3_UploadPartCopy_shared00() {",
          "2183:  svc := s3.New(session.New())",
          "2184:  input := &s3.UploadPartCopyInput{",
          "2191:  }",
          "2193:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2185:   Bucket:          aws.String(\"examplebucket\"),",
          "2186:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2187:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2188:   Key:             aws.String(\"examplelargeobject\"),",
          "2189:   PartNumber:      aws.Int64(2),",
          "2190:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2185:   Bucket:     aws.String(\"examplebucket\"),",
          "2186:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2187:   Key:        aws.String(\"examplelargeobject\"),",
          "2188:   PartNumber: aws.Int64(1),",
          "2189:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2208:  fmt.Println(result)",
          "2209: }",
          "2215: func ExampleS3_UploadPartCopy_shared01() {",
          "2216:  svc := s3.New(session.New())",
          "2217:  input := &s3.UploadPartCopyInput{",
          "2223:  }",
          "2225:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2218:   Bucket:     aws.String(\"examplebucket\"),",
          "2219:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2220:   Key:        aws.String(\"examplelargeobject\"),",
          "2221:   PartNumber: aws.Int64(1),",
          "2222:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2217:   Bucket:          aws.String(\"examplebucket\"),",
          "2218:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2219:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2220:   Key:             aws.String(\"examplelargeobject\"),",
          "2221:   PartNumber:      aws.Int64(2),",
          "2222:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ],
        "service/s3/s3iface/interface.go||service/s3/s3iface/interface.go": [
          "File: service/s3/s3iface/interface.go -> service/s3/s3iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:  UploadPartCopyWithContext(aws.Context, *s3.UploadPartCopyInput, ...request.Option) (*s3.UploadPartCopyOutput, error)",
          "456:  UploadPartCopyRequest(*s3.UploadPartCopyInput) (*request.Request, *s3.UploadPartCopyOutput)",
          "458:  WaitUntilBucketExists(*s3.HeadBucketInput) error",
          "459:  WaitUntilBucketExistsWithContext(aws.Context, *s3.HeadBucketInput, ...request.WaiterOption) error",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "458:  WriteGetObjectResponse(*s3.WriteGetObjectResponseInput) (*s3.WriteGetObjectResponseOutput, error)",
          "459:  WriteGetObjectResponseWithContext(aws.Context, *s3.WriteGetObjectResponseInput, ...request.Option) (*s3.WriteGetObjectResponseOutput, error)",
          "460:  WriteGetObjectResponseRequest(*s3.WriteGetObjectResponseInput) (*request.Request, *s3.WriteGetObjectResponseOutput)",
          "",
          "---------------"
        ],
        "service/s3/s3manager/arn.go||service/s3/s3manager/arn.go": [
          "File: service/s3/s3manager/arn.go -> service/s3/s3manager/arn.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package s3manager",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"github.com/aws/aws-sdk-go/aws/arn\"",
          "6: )",
          "8: func validateSupportedARNType(bucket string) error {",
          "9:  if !arn.IsARN(bucket) {",
          "10:   return nil",
          "11:  }",
          "13:  parsedARN, err := arn.Parse(bucket)",
          "14:  if err != nil {",
          "15:   return err",
          "16:  }",
          "18:  if parsedARN.Service == \"s3-object-lambda\" {",
          "19:   return fmt.Errorf(\"manager does not support s3-object-lambda service ARNs\")",
          "20:  }",
          "22:  return nil",
          "23: }",
          "",
          "---------------"
        ],
        "service/s3/s3manager/download.go||service/s3/s3manager/download.go": [
          "File: service/s3/s3manager/download.go -> service/s3/s3manager/download.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "194: func (d Downloader) DownloadWithContext(ctx aws.Context, w io.WriterAt, input *s3.GetObjectInput, options ...func(*Downloader)) (n int64, err error) {",
          "195:  impl := downloader{w: w, in: input, cfg: d, ctx: ctx}",
          "197:  for _, option := range options {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:  if err := validateSupportedARNType(aws.StringValue(input.Bucket)); err != nil {",
          "196:   return 0, err",
          "197:  }",
          "",
          "---------------"
        ],
        "service/s3/s3manager/download_test.go||service/s3/s3manager/download_test.go": [
          "File: service/s3/s3manager/download_test.go -> service/s3/s3manager/download_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "805:  }",
          "806: }",
          "808: type recordedWriterReadFromProvider struct {",
          "809:  callbacksVended   uint32",
          "810:  callbacksExecuted uint32",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "810: func TestDownloaderValidARN(t *testing.T) {",
          "811:  cases := map[string]struct {",
          "812:   input   s3.GetObjectInput",
          "813:   wantErr bool",
          "814:  }{",
          "815:   \"standard bucket\": {",
          "816:    input: s3.GetObjectInput{",
          "817:     Bucket: aws.String(\"test-bucket\"),",
          "818:     Key:    aws.String(\"test-key\"),",
          "819:    },",
          "820:   },",
          "821:   \"accesspoint\": {",
          "822:    input: s3.GetObjectInput{",
          "823:     Bucket: aws.String(\"arn:aws:s3:us-west-2:123456789012:accesspoint/myap\"),",
          "824:     Key:    aws.String(\"test-key\"),",
          "825:    },",
          "826:   },",
          "827:   \"outpost accesspoint\": {",
          "828:    input: s3.GetObjectInput{",
          "829:     Bucket: aws.String(\"arn:aws:s3-outposts:us-west-2:012345678901:outpost/op-1234567890123456/accesspoint/myaccesspoint\"),",
          "830:     Key:    aws.String(\"test-key\"),",
          "831:    },",
          "832:   },",
          "833:   \"s3-object-lambda accesspoint\": {",
          "834:    input: s3.GetObjectInput{",
          "835:     Bucket: aws.String(\"arn:aws:s3-object-lambda:us-west-2:123456789012:accesspoint/myap\"),",
          "836:    },",
          "837:    wantErr: true,",
          "838:   },",
          "839:  }",
          "841:  for name, tt := range cases {",
          "842:   t.Run(name, func(t *testing.T) {",
          "843:    client, _, _ := dlLoggingSvc(buf2MB)",
          "845:    client.Config.Region = aws.String(\"us-west-2\")",
          "846:    client.ClientInfo.SigningRegion = \"us-west-2\"",
          "848:    downloader := s3manager.NewDownloaderWithClient(client, func(downloader *s3manager.Downloader) {",
          "849:     downloader.Concurrency = 1",
          "850:    })",
          "852:    _, err := downloader.Download(&awstesting.DiscardAt{}, &tt.input)",
          "853:    if (err != nil) != tt.wantErr {",
          "854:     t.Errorf(\"err: %v, wantErr: %v\", err, tt.wantErr)",
          "855:    }",
          "856:   })",
          "857:  }",
          "858: }",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload.go||service/s3/s3manager/upload.go": [
          "File: service/s3/s3manager/upload.go -> service/s3/s3manager/upload.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "393: func (u *uploader) init() error {",
          "394:  if u.cfg.Concurrency == 0 {",
          "395:   u.cfg.Concurrency = DefaultUploadConcurrency",
          "396:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "394:  if err := validateSupportedARNType(aws.StringValue(u.in.Bucket)); err != nil {",
          "395:   return err",
          "396:  }",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/s3/s3manager/upload_test.go||service/s3/s3manager/upload_test.go": [
          "File: service/s3/s3manager/upload_test.go -> service/s3/s3manager/upload_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1253:  }",
          "1254: }",
          "1256: type mockS3UploadServer struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1256: func TestUploaderValidARN(t *testing.T) {",
          "1257:  cases := map[string]struct {",
          "1258:   input   s3manager.UploadInput",
          "1259:   wantErr bool",
          "1260:  }{",
          "1261:   \"standard bucket\": {",
          "1262:    input: s3manager.UploadInput{",
          "1263:     Bucket: aws.String(\"test-bucket\"),",
          "1264:     Key:    aws.String(\"test-key\"),",
          "1265:     Body:   bytes.NewReader([]byte(\"test body content\")),",
          "1266:    },",
          "1267:   },",
          "1268:   \"accesspoint\": {",
          "1269:    input: s3manager.UploadInput{",
          "1270:     Bucket: aws.String(\"arn:aws:s3:us-west-2:123456789012:accesspoint/myap\"),",
          "1271:     Key:    aws.String(\"test-key\"),",
          "1272:     Body:   bytes.NewReader([]byte(\"test body content\")),",
          "1273:    },",
          "1274:   },",
          "1275:   \"outpost accesspoint\": {",
          "1276:    input: s3manager.UploadInput{",
          "1277:     Bucket: aws.String(\"arn:aws:s3-outposts:us-west-2:012345678901:outpost/op-1234567890123456/accesspoint/myaccesspoint\"),",
          "1278:     Key:    aws.String(\"test-key\"),",
          "1279:     Body:   bytes.NewReader([]byte(\"test body content\")),",
          "1280:    },",
          "1281:   },",
          "1282:   \"s3-object-lambda accesspoint\": {",
          "1283:    input: s3manager.UploadInput{",
          "1284:     Bucket: aws.String(\"arn:aws:s3-object-lambda:us-west-2:123456789012:accesspoint/myap\"),",
          "1285:     Key:    aws.String(\"test-key\"),",
          "1286:     Body:   bytes.NewReader([]byte(\"test body content\")),",
          "1287:    },",
          "1288:    wantErr: true,",
          "1289:   },",
          "1290:  }",
          "1292:  for name, tt := range cases {",
          "1293:   t.Run(name, func(t *testing.T) {",
          "1294:    client, _, _ := loggingSvc(nil)",
          "1295:    client.Config.Region = aws.String(\"us-west-2\")",
          "1296:    client.ClientInfo.SigningRegion = \"us-west-2\"",
          "1298:    uploader := s3manager.NewUploaderWithClient(client)",
          "1300:    _, err := uploader.Upload(&tt.input)",
          "1301:    if (err != nil) != tt.wantErr {",
          "1302:     t.Errorf(\"err: %v, wantErr: %v\", err, tt.wantErr)",
          "1303:    }",
          "1304:   })",
          "1305:  }",
          "1306: }",
          "",
          "---------------"
        ],
        "service/s3control/api.go||service/s3control/api.go": [
          "File: service/s3control/api.go -> service/s3control/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:  return out, req.Send()",
          "129: }",
          "131: const opCreateBucket = \"CreateBucket\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121: const opCreateAccessPointForObjectLambda = \"CreateAccessPointForObjectLambda\"",
          "147: func (c *S3Control) CreateAccessPointForObjectLambdaRequest(input *CreateAccessPointForObjectLambdaInput) (req *request.Request, output *CreateAccessPointForObjectLambdaOutput) {",
          "148:  op := &request.Operation{",
          "149:   Name:       opCreateAccessPointForObjectLambda,",
          "150:   HTTPMethod: \"PUT\",",
          "151:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}\",",
          "152:  }",
          "154:  if input == nil {",
          "155:   input = &CreateAccessPointForObjectLambdaInput{}",
          "156:  }",
          "158:  output = &CreateAccessPointForObjectLambdaOutput{}",
          "159:  req = c.newRequest(op, input, output)",
          "160:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "161:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "162:  return",
          "163: }",
          "186: func (c *S3Control) CreateAccessPointForObjectLambda(input *CreateAccessPointForObjectLambdaInput) (*CreateAccessPointForObjectLambdaOutput, error) {",
          "187:  req, out := c.CreateAccessPointForObjectLambdaRequest(input)",
          "188:  return out, req.Send()",
          "189: }",
          "200: func (c *S3Control) CreateAccessPointForObjectLambdaWithContext(ctx aws.Context, input *CreateAccessPointForObjectLambdaInput, opts ...request.Option) (*CreateAccessPointForObjectLambdaOutput, error) {",
          "201:  req, out := c.CreateAccessPointForObjectLambdaRequest(input)",
          "202:  req.SetContext(ctx)",
          "203:  req.ApplyOptions(opts...)",
          "204:  return out, req.Send()",
          "205: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "452:  return out, req.Send()",
          "453: }",
          "455: const opDeleteAccessPointPolicy = \"DeleteAccessPointPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "531: const opDeleteAccessPointForObjectLambda = \"DeleteAccessPointForObjectLambda\"",
          "557: func (c *S3Control) DeleteAccessPointForObjectLambdaRequest(input *DeleteAccessPointForObjectLambdaInput) (req *request.Request, output *DeleteAccessPointForObjectLambdaOutput) {",
          "558:  op := &request.Operation{",
          "559:   Name:       opDeleteAccessPointForObjectLambda,",
          "560:   HTTPMethod: \"DELETE\",",
          "561:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}\",",
          "562:  }",
          "564:  if input == nil {",
          "565:   input = &DeleteAccessPointForObjectLambdaInput{}",
          "566:  }",
          "568:  output = &DeleteAccessPointForObjectLambdaOutput{}",
          "569:  req = c.newRequest(op, input, output)",
          "570:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "571:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "572:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "573:  return",
          "574: }",
          "595: func (c *S3Control) DeleteAccessPointForObjectLambda(input *DeleteAccessPointForObjectLambdaInput) (*DeleteAccessPointForObjectLambdaOutput, error) {",
          "596:  req, out := c.DeleteAccessPointForObjectLambdaRequest(input)",
          "597:  return out, req.Send()",
          "598: }",
          "609: func (c *S3Control) DeleteAccessPointForObjectLambdaWithContext(ctx aws.Context, input *DeleteAccessPointForObjectLambdaInput, opts ...request.Option) (*DeleteAccessPointForObjectLambdaOutput, error) {",
          "610:  req, out := c.DeleteAccessPointForObjectLambdaRequest(input)",
          "611:  req.SetContext(ctx)",
          "612:  req.ApplyOptions(opts...)",
          "613:  return out, req.Send()",
          "614: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "546:  return out, req.Send()",
          "547: }",
          "549: const opDeleteBucket = \"DeleteBucket\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "710: const opDeleteAccessPointPolicyForObjectLambda = \"DeleteAccessPointPolicyForObjectLambda\"",
          "736: func (c *S3Control) DeleteAccessPointPolicyForObjectLambdaRequest(input *DeleteAccessPointPolicyForObjectLambdaInput) (req *request.Request, output *DeleteAccessPointPolicyForObjectLambdaOutput) {",
          "737:  op := &request.Operation{",
          "738:   Name:       opDeleteAccessPointPolicyForObjectLambda,",
          "739:   HTTPMethod: \"DELETE\",",
          "740:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/policy\",",
          "741:  }",
          "743:  if input == nil {",
          "744:   input = &DeleteAccessPointPolicyForObjectLambdaInput{}",
          "745:  }",
          "747:  output = &DeleteAccessPointPolicyForObjectLambdaOutput{}",
          "748:  req = c.newRequest(op, input, output)",
          "749:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "750:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "751:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "752:  return",
          "753: }",
          "772: func (c *S3Control) DeleteAccessPointPolicyForObjectLambda(input *DeleteAccessPointPolicyForObjectLambdaInput) (*DeleteAccessPointPolicyForObjectLambdaOutput, error) {",
          "773:  req, out := c.DeleteAccessPointPolicyForObjectLambdaRequest(input)",
          "774:  return out, req.Send()",
          "775: }",
          "786: func (c *S3Control) DeleteAccessPointPolicyForObjectLambdaWithContext(ctx aws.Context, input *DeleteAccessPointPolicyForObjectLambdaInput, opts ...request.Option) (*DeleteAccessPointPolicyForObjectLambdaOutput, error) {",
          "787:  req, out := c.DeleteAccessPointPolicyForObjectLambdaRequest(input)",
          "788:  req.SetContext(ctx)",
          "789:  req.ApplyOptions(opts...)",
          "790:  return out, req.Send()",
          "791: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1531:  return out, req.Send()",
          "1532: }",
          "1561:  op := &request.Operation{",
          "1563:   HTTPMethod: \"GET\",",
          "1565:  }",
          "1567:  if input == nil {",
          "1569:  }",
          "1572:  req = c.newRequest(op, input, output)",
          "1576:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "1577:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "1578:  return",
          "1579: }",
          "1600:  return out, req.Send()",
          "1601: }",
          "1614:  req.SetContext(ctx)",
          "1615:  req.ApplyOptions(opts...)",
          "1616:  return out, req.Send()",
          "1617: }",
          "1646:  op := &request.Operation{",
          "1648:   HTTPMethod: \"GET\",",
          "1650:  }",
          "1652:  if input == nil {",
          "1654:  }",
          "1657:  req = c.newRequest(op, input, output)",
          "1658:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "1659:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "1660:  return",
          "1661: }",
          "1679:  return out, req.Send()",
          "1680: }",
          "1693:  req.SetContext(ctx)",
          "1694:  req.ApplyOptions(opts...)",
          "1695:  return out, req.Send()",
          "1696: }",
          "1726:   Name:       opGetBucket,",
          "1727:   HTTPMethod: \"GET\",",
          "1728:   HTTPPath:   \"/v20180820/bucket/{name}\",",
          "",
          "[Removed Lines]",
          "1534: const opGetAccessPointPolicy = \"GetAccessPointPolicy\"",
          "1560: func (c *S3Control) GetAccessPointPolicyRequest(input *GetAccessPointPolicyInput) (req *request.Request, output *GetAccessPointPolicyOutput) {",
          "1562:   Name:       opGetAccessPointPolicy,",
          "1564:   HTTPPath:   \"/v20180820/accesspoint/{name}/policy\",",
          "1568:   input = &GetAccessPointPolicyInput{}",
          "1571:  output = &GetAccessPointPolicyOutput{}",
          "1575:  req.Handlers.Validate.PushFrontNamed(updateAccountIDWithARNHandler)",
          "1598: func (c *S3Control) GetAccessPointPolicy(input *GetAccessPointPolicyInput) (*GetAccessPointPolicyOutput, error) {",
          "1599:  req, out := c.GetAccessPointPolicyRequest(input)",
          "1612: func (c *S3Control) GetAccessPointPolicyWithContext(ctx aws.Context, input *GetAccessPointPolicyInput, opts ...request.Option) (*GetAccessPointPolicyOutput, error) {",
          "1613:  req, out := c.GetAccessPointPolicyRequest(input)",
          "1619: const opGetAccessPointPolicyStatus = \"GetAccessPointPolicyStatus\"",
          "1645: func (c *S3Control) GetAccessPointPolicyStatusRequest(input *GetAccessPointPolicyStatusInput) (req *request.Request, output *GetAccessPointPolicyStatusOutput) {",
          "1647:   Name:       opGetAccessPointPolicyStatus,",
          "1649:   HTTPPath:   \"/v20180820/accesspoint/{name}/policyStatus\",",
          "1653:   input = &GetAccessPointPolicyStatusInput{}",
          "1656:  output = &GetAccessPointPolicyStatusOutput{}",
          "1677: func (c *S3Control) GetAccessPointPolicyStatus(input *GetAccessPointPolicyStatusInput) (*GetAccessPointPolicyStatusOutput, error) {",
          "1678:  req, out := c.GetAccessPointPolicyStatusRequest(input)",
          "1691: func (c *S3Control) GetAccessPointPolicyStatusWithContext(ctx aws.Context, input *GetAccessPointPolicyStatusInput, opts ...request.Option) (*GetAccessPointPolicyStatusOutput, error) {",
          "1692:  req, out := c.GetAccessPointPolicyStatusRequest(input)",
          "1698: const opGetBucket = \"GetBucket\"",
          "1724: func (c *S3Control) GetBucketRequest(input *GetBucketInput) (req *request.Request, output *GetBucketOutput) {",
          "1725:  op := &request.Operation{",
          "",
          "[Added Lines]",
          "1778: const opGetAccessPointConfigurationForObjectLambda = \"GetAccessPointConfigurationForObjectLambda\"",
          "1804: func (c *S3Control) GetAccessPointConfigurationForObjectLambdaRequest(input *GetAccessPointConfigurationForObjectLambdaInput) (req *request.Request, output *GetAccessPointConfigurationForObjectLambdaOutput) {",
          "1806:   Name:       opGetAccessPointConfigurationForObjectLambda,",
          "1808:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/configuration\",",
          "1812:   input = &GetAccessPointConfigurationForObjectLambdaInput{}",
          "1815:  output = &GetAccessPointConfigurationForObjectLambdaOutput{}",
          "1837: func (c *S3Control) GetAccessPointConfigurationForObjectLambda(input *GetAccessPointConfigurationForObjectLambdaInput) (*GetAccessPointConfigurationForObjectLambdaOutput, error) {",
          "1838:  req, out := c.GetAccessPointConfigurationForObjectLambdaRequest(input)",
          "1851: func (c *S3Control) GetAccessPointConfigurationForObjectLambdaWithContext(ctx aws.Context, input *GetAccessPointConfigurationForObjectLambdaInput, opts ...request.Option) (*GetAccessPointConfigurationForObjectLambdaOutput, error) {",
          "1852:  req, out := c.GetAccessPointConfigurationForObjectLambdaRequest(input)",
          "1858: const opGetAccessPointForObjectLambda = \"GetAccessPointForObjectLambda\"",
          "1884: func (c *S3Control) GetAccessPointForObjectLambdaRequest(input *GetAccessPointForObjectLambdaInput) (req *request.Request, output *GetAccessPointForObjectLambdaOutput) {",
          "1886:   Name:       opGetAccessPointForObjectLambda,",
          "1888:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}\",",
          "1892:   input = &GetAccessPointForObjectLambdaInput{}",
          "1895:  output = &GetAccessPointForObjectLambdaOutput{}",
          "1922: func (c *S3Control) GetAccessPointForObjectLambda(input *GetAccessPointForObjectLambdaInput) (*GetAccessPointForObjectLambdaOutput, error) {",
          "1923:  req, out := c.GetAccessPointForObjectLambdaRequest(input)",
          "1936: func (c *S3Control) GetAccessPointForObjectLambdaWithContext(ctx aws.Context, input *GetAccessPointForObjectLambdaInput, opts ...request.Option) (*GetAccessPointForObjectLambdaOutput, error) {",
          "1937:  req, out := c.GetAccessPointForObjectLambdaRequest(input)",
          "1943: const opGetAccessPointPolicy = \"GetAccessPointPolicy\"",
          "1969: func (c *S3Control) GetAccessPointPolicyRequest(input *GetAccessPointPolicyInput) (req *request.Request, output *GetAccessPointPolicyOutput) {",
          "1970:  op := &request.Operation{",
          "1971:   Name:       opGetAccessPointPolicy,",
          "1972:   HTTPMethod: \"GET\",",
          "1973:   HTTPPath:   \"/v20180820/accesspoint/{name}/policy\",",
          "1974:  }",
          "1976:  if input == nil {",
          "1977:   input = &GetAccessPointPolicyInput{}",
          "1978:  }",
          "1980:  output = &GetAccessPointPolicyOutput{}",
          "1981:  req = c.newRequest(op, input, output)",
          "1984:  req.Handlers.Validate.PushFrontNamed(updateAccountIDWithARNHandler)",
          "1985:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "1986:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "1987:  return",
          "1988: }",
          "2007: func (c *S3Control) GetAccessPointPolicy(input *GetAccessPointPolicyInput) (*GetAccessPointPolicyOutput, error) {",
          "2008:  req, out := c.GetAccessPointPolicyRequest(input)",
          "2009:  return out, req.Send()",
          "2010: }",
          "2021: func (c *S3Control) GetAccessPointPolicyWithContext(ctx aws.Context, input *GetAccessPointPolicyInput, opts ...request.Option) (*GetAccessPointPolicyOutput, error) {",
          "2022:  req, out := c.GetAccessPointPolicyRequest(input)",
          "2023:  req.SetContext(ctx)",
          "2024:  req.ApplyOptions(opts...)",
          "2025:  return out, req.Send()",
          "2026: }",
          "2028: const opGetAccessPointPolicyForObjectLambda = \"GetAccessPointPolicyForObjectLambda\"",
          "2054: func (c *S3Control) GetAccessPointPolicyForObjectLambdaRequest(input *GetAccessPointPolicyForObjectLambdaInput) (req *request.Request, output *GetAccessPointPolicyForObjectLambdaOutput) {",
          "2055:  op := &request.Operation{",
          "2056:   Name:       opGetAccessPointPolicyForObjectLambda,",
          "2057:   HTTPMethod: \"GET\",",
          "2058:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/policy\",",
          "2059:  }",
          "2061:  if input == nil {",
          "2062:   input = &GetAccessPointPolicyForObjectLambdaInput{}",
          "2063:  }",
          "2065:  output = &GetAccessPointPolicyForObjectLambdaOutput{}",
          "2066:  req = c.newRequest(op, input, output)",
          "2067:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "2068:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "2069:  return",
          "2070: }",
          "2089: func (c *S3Control) GetAccessPointPolicyForObjectLambda(input *GetAccessPointPolicyForObjectLambdaInput) (*GetAccessPointPolicyForObjectLambdaOutput, error) {",
          "2090:  req, out := c.GetAccessPointPolicyForObjectLambdaRequest(input)",
          "2091:  return out, req.Send()",
          "2092: }",
          "2103: func (c *S3Control) GetAccessPointPolicyForObjectLambdaWithContext(ctx aws.Context, input *GetAccessPointPolicyForObjectLambdaInput, opts ...request.Option) (*GetAccessPointPolicyForObjectLambdaOutput, error) {",
          "2104:  req, out := c.GetAccessPointPolicyForObjectLambdaRequest(input)",
          "2105:  req.SetContext(ctx)",
          "2106:  req.ApplyOptions(opts...)",
          "2107:  return out, req.Send()",
          "2108: }",
          "2110: const opGetAccessPointPolicyStatus = \"GetAccessPointPolicyStatus\"",
          "2136: func (c *S3Control) GetAccessPointPolicyStatusRequest(input *GetAccessPointPolicyStatusInput) (req *request.Request, output *GetAccessPointPolicyStatusOutput) {",
          "2137:  op := &request.Operation{",
          "2138:   Name:       opGetAccessPointPolicyStatus,",
          "2139:   HTTPMethod: \"GET\",",
          "2140:   HTTPPath:   \"/v20180820/accesspoint/{name}/policyStatus\",",
          "2141:  }",
          "2143:  if input == nil {",
          "2144:   input = &GetAccessPointPolicyStatusInput{}",
          "2145:  }",
          "2147:  output = &GetAccessPointPolicyStatusOutput{}",
          "2148:  req = c.newRequest(op, input, output)",
          "2149:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "2150:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "2151:  return",
          "2152: }",
          "2168: func (c *S3Control) GetAccessPointPolicyStatus(input *GetAccessPointPolicyStatusInput) (*GetAccessPointPolicyStatusOutput, error) {",
          "2169:  req, out := c.GetAccessPointPolicyStatusRequest(input)",
          "2170:  return out, req.Send()",
          "2171: }",
          "2182: func (c *S3Control) GetAccessPointPolicyStatusWithContext(ctx aws.Context, input *GetAccessPointPolicyStatusInput, opts ...request.Option) (*GetAccessPointPolicyStatusOutput, error) {",
          "2183:  req, out := c.GetAccessPointPolicyStatusRequest(input)",
          "2184:  req.SetContext(ctx)",
          "2185:  req.ApplyOptions(opts...)",
          "2186:  return out, req.Send()",
          "2187: }",
          "2189: const opGetAccessPointPolicyStatusForObjectLambda = \"GetAccessPointPolicyStatusForObjectLambda\"",
          "2215: func (c *S3Control) GetAccessPointPolicyStatusForObjectLambdaRequest(input *GetAccessPointPolicyStatusForObjectLambdaInput) (req *request.Request, output *GetAccessPointPolicyStatusForObjectLambdaOutput) {",
          "2216:  op := &request.Operation{",
          "2217:   Name:       opGetAccessPointPolicyStatusForObjectLambda,",
          "2218:   HTTPMethod: \"GET\",",
          "2219:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/policyStatus\",",
          "2220:  }",
          "2222:  if input == nil {",
          "2223:   input = &GetAccessPointPolicyStatusForObjectLambdaInput{}",
          "2224:  }",
          "2226:  output = &GetAccessPointPolicyStatusForObjectLambdaOutput{}",
          "2227:  req = c.newRequest(op, input, output)",
          "2228:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "2229:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "2230:  return",
          "2231: }",
          "2245: func (c *S3Control) GetAccessPointPolicyStatusForObjectLambda(input *GetAccessPointPolicyStatusForObjectLambdaInput) (*GetAccessPointPolicyStatusForObjectLambdaOutput, error) {",
          "2246:  req, out := c.GetAccessPointPolicyStatusForObjectLambdaRequest(input)",
          "2247:  return out, req.Send()",
          "2248: }",
          "2259: func (c *S3Control) GetAccessPointPolicyStatusForObjectLambdaWithContext(ctx aws.Context, input *GetAccessPointPolicyStatusForObjectLambdaInput, opts ...request.Option) (*GetAccessPointPolicyStatusForObjectLambdaOutput, error) {",
          "2260:  req, out := c.GetAccessPointPolicyStatusForObjectLambdaRequest(input)",
          "2261:  req.SetContext(ctx)",
          "2262:  req.ApplyOptions(opts...)",
          "2263:  return out, req.Send()",
          "2264: }",
          "2266: const opGetBucket = \"GetBucket\"",
          "2292: func (c *S3Control) GetBucketRequest(input *GetBucketInput) (req *request.Request, output *GetBucketOutput) {",
          "2293:  op := &request.Operation{",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2653:  return p.Err()",
          "2654: }",
          "2656: const opListJobs = \"ListJobs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225: const opListAccessPointsForObjectLambda = \"ListAccessPointsForObjectLambda\"",
          "3251: func (c *S3Control) ListAccessPointsForObjectLambdaRequest(input *ListAccessPointsForObjectLambdaInput) (req *request.Request, output *ListAccessPointsForObjectLambdaOutput) {",
          "3252:  op := &request.Operation{",
          "3253:   Name:       opListAccessPointsForObjectLambda,",
          "3254:   HTTPMethod: \"GET\",",
          "3255:   HTTPPath:   \"/v20180820/accesspointforobjectlambda\",",
          "3256:   Paginator: &request.Paginator{",
          "3257:    InputTokens:     []string{\"NextToken\"},",
          "3258:    OutputTokens:    []string{\"NextToken\"},",
          "3259:    LimitToken:      \"MaxResults\",",
          "3260:    TruncationToken: \"\",",
          "3261:   },",
          "3262:  }",
          "3264:  if input == nil {",
          "3265:   input = &ListAccessPointsForObjectLambdaInput{}",
          "3266:  }",
          "3268:  output = &ListAccessPointsForObjectLambdaOutput{}",
          "3269:  req = c.newRequest(op, input, output)",
          "3270:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "3271:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "3272:  return",
          "3273: }",
          "3298: func (c *S3Control) ListAccessPointsForObjectLambda(input *ListAccessPointsForObjectLambdaInput) (*ListAccessPointsForObjectLambdaOutput, error) {",
          "3299:  req, out := c.ListAccessPointsForObjectLambdaRequest(input)",
          "3300:  return out, req.Send()",
          "3301: }",
          "3312: func (c *S3Control) ListAccessPointsForObjectLambdaWithContext(ctx aws.Context, input *ListAccessPointsForObjectLambdaInput, opts ...request.Option) (*ListAccessPointsForObjectLambdaOutput, error) {",
          "3313:  req, out := c.ListAccessPointsForObjectLambdaRequest(input)",
          "3314:  req.SetContext(ctx)",
          "3315:  req.ApplyOptions(opts...)",
          "3316:  return out, req.Send()",
          "3317: }",
          "3336: func (c *S3Control) ListAccessPointsForObjectLambdaPages(input *ListAccessPointsForObjectLambdaInput, fn func(*ListAccessPointsForObjectLambdaOutput, bool) bool) error {",
          "3337:  return c.ListAccessPointsForObjectLambdaPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3338: }",
          "3347: func (c *S3Control) ListAccessPointsForObjectLambdaPagesWithContext(ctx aws.Context, input *ListAccessPointsForObjectLambdaInput, fn func(*ListAccessPointsForObjectLambdaOutput, bool) bool, opts ...request.Option) error {",
          "3348:  p := request.Pagination{",
          "3349:   NewRequest: func() (*request.Request, error) {",
          "3350:    var inCpy *ListAccessPointsForObjectLambdaInput",
          "3351:    if input != nil {",
          "3352:     tmp := *input",
          "3353:     inCpy = &tmp",
          "3354:    }",
          "3355:    req, _ := c.ListAccessPointsForObjectLambdaRequest(inCpy)",
          "3356:    req.SetContext(ctx)",
          "3357:    req.ApplyOptions(opts...)",
          "3358:    return req, nil",
          "3359:   },",
          "3360:  }",
          "3362:  for p.Next() {",
          "3363:   if !fn(p.Page().(*ListAccessPointsForObjectLambdaOutput), !p.HasNextPage()) {",
          "3364:    break",
          "3365:   }",
          "3366:  }",
          "3368:  return p.Err()",
          "3369: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3018:  return out, req.Send()",
          "3019: }",
          "3032:  req.SetContext(ctx)",
          "3033:  req.ApplyOptions(opts...)",
          "3034:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "3016: func (c *S3Control) ListStorageLensConfigurations(input *ListStorageLensConfigurationsInput) (*ListStorageLensConfigurationsOutput, error) {",
          "3017:  req, out := c.ListStorageLensConfigurationsRequest(input)",
          "3030: func (c *S3Control) ListStorageLensConfigurationsWithContext(ctx aws.Context, input *ListStorageLensConfigurationsInput, opts ...request.Option) (*ListStorageLensConfigurationsOutput, error) {",
          "3031:  req, out := c.ListStorageLensConfigurationsRequest(input)",
          "",
          "[Added Lines]",
          "3731: func (c *S3Control) ListStorageLensConfigurations(input *ListStorageLensConfigurationsInput) (*ListStorageLensConfigurationsOutput, error) {",
          "3732:  req, out := c.ListStorageLensConfigurationsRequest(input)",
          "3733:  return out, req.Send()",
          "3734: }",
          "3745: func (c *S3Control) ListStorageLensConfigurationsWithContext(ctx aws.Context, input *ListStorageLensConfigurationsInput, opts ...request.Option) (*ListStorageLensConfigurationsOutput, error) {",
          "3746:  req, out := c.ListStorageLensConfigurationsRequest(input)",
          "3747:  req.SetContext(ctx)",
          "3748:  req.ApplyOptions(opts...)",
          "3749:  return out, req.Send()",
          "3750: }",
          "3752: const opPutAccessPointConfigurationForObjectLambda = \"PutAccessPointConfigurationForObjectLambda\"",
          "3778: func (c *S3Control) PutAccessPointConfigurationForObjectLambdaRequest(input *PutAccessPointConfigurationForObjectLambdaInput) (req *request.Request, output *PutAccessPointConfigurationForObjectLambdaOutput) {",
          "3779:  op := &request.Operation{",
          "3780:   Name:       opPutAccessPointConfigurationForObjectLambda,",
          "3781:   HTTPMethod: \"PUT\",",
          "3782:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/configuration\",",
          "3783:  }",
          "3785:  if input == nil {",
          "3786:   input = &PutAccessPointConfigurationForObjectLambdaInput{}",
          "3787:  }",
          "3789:  output = &PutAccessPointConfigurationForObjectLambdaOutput{}",
          "3790:  req = c.newRequest(op, input, output)",
          "3791:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3792:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "3793:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "3794:  return",
          "3795: }",
          "3812: func (c *S3Control) PutAccessPointConfigurationForObjectLambda(input *PutAccessPointConfigurationForObjectLambdaInput) (*PutAccessPointConfigurationForObjectLambdaOutput, error) {",
          "3813:  req, out := c.PutAccessPointConfigurationForObjectLambdaRequest(input)",
          "3826: func (c *S3Control) PutAccessPointConfigurationForObjectLambdaWithContext(ctx aws.Context, input *PutAccessPointConfigurationForObjectLambdaInput, opts ...request.Option) (*PutAccessPointConfigurationForObjectLambdaOutput, error) {",
          "3827:  req, out := c.PutAccessPointConfigurationForObjectLambdaRequest(input)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3130:  return out, req.Send()",
          "3131: }",
          "3133: const opPutBucketLifecycleConfiguration = \"PutBucketLifecycleConfiguration\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3929: const opPutAccessPointPolicyForObjectLambda = \"PutAccessPointPolicyForObjectLambda\"",
          "3955: func (c *S3Control) PutAccessPointPolicyForObjectLambdaRequest(input *PutAccessPointPolicyForObjectLambdaInput) (req *request.Request, output *PutAccessPointPolicyForObjectLambdaOutput) {",
          "3956:  op := &request.Operation{",
          "3957:   Name:       opPutAccessPointPolicyForObjectLambda,",
          "3958:   HTTPMethod: \"PUT\",",
          "3959:   HTTPPath:   \"/v20180820/accesspointforobjectlambda/{name}/policy\",",
          "3960:  }",
          "3962:  if input == nil {",
          "3963:   input = &PutAccessPointPolicyForObjectLambdaInput{}",
          "3964:  }",
          "3966:  output = &PutAccessPointPolicyForObjectLambdaOutput{}",
          "3967:  req = c.newRequest(op, input, output)",
          "3968:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3969:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"{AccountId}.\", input.hostLabels))",
          "3970:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "3971:  return",
          "3972: }",
          "3993: func (c *S3Control) PutAccessPointPolicyForObjectLambda(input *PutAccessPointPolicyForObjectLambdaInput) (*PutAccessPointPolicyForObjectLambdaOutput, error) {",
          "3994:  req, out := c.PutAccessPointPolicyForObjectLambdaRequest(input)",
          "3995:  return out, req.Send()",
          "3996: }",
          "4007: func (c *S3Control) PutAccessPointPolicyForObjectLambdaWithContext(ctx aws.Context, input *PutAccessPointPolicyForObjectLambdaInput, opts ...request.Option) (*PutAccessPointPolicyForObjectLambdaOutput, error) {",
          "4008:  req, out := c.PutAccessPointPolicyForObjectLambdaRequest(input)",
          "4009:  req.SetContext(ctx)",
          "4010:  req.ApplyOptions(opts...)",
          "4011:  return out, req.Send()",
          "4012: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4253:  return s",
          "4254: }",
          "4257: type BucketLevel struct {",
          "4258:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5138: type AwsLambdaTransformation struct {",
          "5139:  _ struct{} `type:\"structure\"`",
          "5144:  FunctionArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5148:  FunctionPayload *string `type:\"string\"`",
          "5149: }",
          "5152: func (s AwsLambdaTransformation) String() string {",
          "5153:  return awsutil.Prettify(s)",
          "5154: }",
          "5157: func (s AwsLambdaTransformation) GoString() string {",
          "5158:  return s.String()",
          "5159: }",
          "5162: func (s *AwsLambdaTransformation) Validate() error {",
          "5163:  invalidParams := request.ErrInvalidParams{Context: \"AwsLambdaTransformation\"}",
          "5164:  if s.FunctionArn == nil {",
          "5165:   invalidParams.Add(request.NewErrParamRequired(\"FunctionArn\"))",
          "5166:  }",
          "5167:  if s.FunctionArn != nil && len(*s.FunctionArn) < 1 {",
          "5168:   invalidParams.Add(request.NewErrParamMinLen(\"FunctionArn\", 1))",
          "5169:  }",
          "5171:  if invalidParams.Len() > 0 {",
          "5172:   return invalidParams",
          "5173:  }",
          "5174:  return nil",
          "5175: }",
          "5178: func (s *AwsLambdaTransformation) SetFunctionArn(v string) *AwsLambdaTransformation {",
          "5179:  s.FunctionArn = &v",
          "5180:  return s",
          "5181: }",
          "5184: func (s *AwsLambdaTransformation) SetFunctionPayload(v string) *AwsLambdaTransformation {",
          "5185:  s.FunctionPayload = &v",
          "5186:  return s",
          "5187: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4301:  return s",
          "4302: }",
          "4304: type CreateAccessPointInput struct {",
          "4305:  _ struct{} `locationName:\"CreateAccessPointRequest\" type:\"structure\" xmlURI:\"http://awss3control.amazonaws.com/doc/2018-08-20/\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5237: type CreateAccessPointForObjectLambdaInput struct {",
          "5238:  _ struct{} `locationName:\"CreateAccessPointForObjectLambdaRequest\" type:\"structure\" xmlURI:\"http://awss3control.amazonaws.com/doc/2018-08-20/\"`",
          "5243:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "5248:  Configuration *ObjectLambdaConfiguration `type:\"structure\" required:\"true\"`",
          "5253:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "5254: }",
          "5257: func (s CreateAccessPointForObjectLambdaInput) String() string {",
          "5258:  return awsutil.Prettify(s)",
          "5259: }",
          "5262: func (s CreateAccessPointForObjectLambdaInput) GoString() string {",
          "5263:  return s.String()",
          "5264: }",
          "5267: func (s *CreateAccessPointForObjectLambdaInput) Validate() error {",
          "5268:  invalidParams := request.ErrInvalidParams{Context: \"CreateAccessPointForObjectLambdaInput\"}",
          "5269:  if s.AccountId == nil {",
          "5270:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "5271:  }",
          "5272:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "5273:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "5274:  }",
          "5275:  if s.Configuration == nil {",
          "5276:   invalidParams.Add(request.NewErrParamRequired(\"Configuration\"))",
          "5277:  }",
          "5278:  if s.Name == nil {",
          "5279:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5280:  }",
          "5281:  if s.Name != nil && len(*s.Name) < 3 {",
          "5282:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "5283:  }",
          "5284:  if s.Configuration != nil {",
          "5285:   if err := s.Configuration.Validate(); err != nil {",
          "5286:    invalidParams.AddNested(\"Configuration\", err.(request.ErrInvalidParams))",
          "5287:   }",
          "5288:  }",
          "5290:  if invalidParams.Len() > 0 {",
          "5291:   return invalidParams",
          "5292:  }",
          "5293:  return nil",
          "5294: }",
          "5297: func (s *CreateAccessPointForObjectLambdaInput) SetAccountId(v string) *CreateAccessPointForObjectLambdaInput {",
          "5298:  s.AccountId = &v",
          "5299:  return s",
          "5300: }",
          "5303: func (s *CreateAccessPointForObjectLambdaInput) SetConfiguration(v *ObjectLambdaConfiguration) *CreateAccessPointForObjectLambdaInput {",
          "5304:  s.Configuration = v",
          "5305:  return s",
          "5306: }",
          "5309: func (s *CreateAccessPointForObjectLambdaInput) SetName(v string) *CreateAccessPointForObjectLambdaInput {",
          "5310:  s.Name = &v",
          "5311:  return s",
          "5312: }",
          "5314: func (s *CreateAccessPointForObjectLambdaInput) hostLabels() map[string]string {",
          "5315:  return map[string]string{",
          "5316:   \"AccountId\": aws.StringValue(s.AccountId),",
          "5317:  }",
          "5318: }",
          "5320: type CreateAccessPointForObjectLambdaOutput struct {",
          "5321:  _ struct{} `type:\"structure\"`",
          "5324:  ObjectLambdaAccessPointArn *string `min:\"1\" type:\"string\"`",
          "5325: }",
          "5328: func (s CreateAccessPointForObjectLambdaOutput) String() string {",
          "5329:  return awsutil.Prettify(s)",
          "5330: }",
          "5333: func (s CreateAccessPointForObjectLambdaOutput) GoString() string {",
          "5334:  return s.String()",
          "5335: }",
          "5338: func (s *CreateAccessPointForObjectLambdaOutput) SetObjectLambdaAccessPointArn(v string) *CreateAccessPointForObjectLambdaOutput {",
          "5339:  s.ObjectLambdaAccessPointArn = &v",
          "5340:  return s",
          "5341: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4918: type CreateJobOutput struct {",
          "4919:  _ struct{} `type:\"structure\"`",
          "4924: }",
          "4928:  return awsutil.Prettify(s)",
          "4929: }",
          "4933:  return s.String()",
          "4934: }",
          "4942: type DeleteAccessPointInput struct {",
          "4943:  _ struct{} `locationName:\"DeleteAccessPointRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "4923:  JobId *string `min:\"5\" type:\"string\"`",
          "4927: func (s CreateJobOutput) String() string {",
          "4932: func (s CreateJobOutput) GoString() string {",
          "4937: func (s *CreateJobOutput) SetJobId(v string) *CreateJobOutput {",
          "4938:  s.JobId = &v",
          "4939:  return s",
          "4940: }",
          "",
          "[Added Lines]",
          "5962:  JobId *string `min:\"5\" type:\"string\"`",
          "5963: }",
          "5966: func (s CreateJobOutput) String() string {",
          "5967:  return awsutil.Prettify(s)",
          "5968: }",
          "5971: func (s CreateJobOutput) GoString() string {",
          "5972:  return s.String()",
          "5973: }",
          "5976: func (s *CreateJobOutput) SetJobId(v string) *CreateJobOutput {",
          "5977:  s.JobId = &v",
          "5978:  return s",
          "5979: }",
          "5981: type DeleteAccessPointForObjectLambdaInput struct {",
          "5982:  _ struct{} `locationName:\"DeleteAccessPointForObjectLambdaRequest\" type:\"structure\"`",
          "5988:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "5993:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "5994: }",
          "5997: func (s DeleteAccessPointForObjectLambdaInput) String() string {",
          "5998:  return awsutil.Prettify(s)",
          "5999: }",
          "6002: func (s DeleteAccessPointForObjectLambdaInput) GoString() string {",
          "6003:  return s.String()",
          "6004: }",
          "6007: func (s *DeleteAccessPointForObjectLambdaInput) Validate() error {",
          "6008:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAccessPointForObjectLambdaInput\"}",
          "6009:  if s.AccountId == nil {",
          "6010:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "6011:  }",
          "6012:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "6013:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "6014:  }",
          "6015:  if s.Name == nil {",
          "6016:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "6017:  }",
          "6018:  if s.Name != nil && len(*s.Name) < 3 {",
          "6019:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "6020:  }",
          "6022:  if invalidParams.Len() > 0 {",
          "6023:   return invalidParams",
          "6024:  }",
          "6025:  return nil",
          "6026: }",
          "6029: func (s *DeleteAccessPointForObjectLambdaInput) SetAccountId(v string) *DeleteAccessPointForObjectLambdaInput {",
          "6030:  s.AccountId = &v",
          "6031:  return s",
          "6032: }",
          "6035: func (s *DeleteAccessPointForObjectLambdaInput) SetName(v string) *DeleteAccessPointForObjectLambdaInput {",
          "6036:  s.Name = &v",
          "6037:  return s",
          "6038: }",
          "6040: func (s *DeleteAccessPointForObjectLambdaInput) hostLabels() map[string]string {",
          "6041:  return map[string]string{",
          "6042:   \"AccountId\": aws.StringValue(s.AccountId),",
          "6043:  }",
          "6044: }",
          "6046: type DeleteAccessPointForObjectLambdaOutput struct {",
          "6047:  _ struct{} `type:\"structure\"`",
          "6051: func (s DeleteAccessPointForObjectLambdaOutput) String() string {",
          "6056: func (s DeleteAccessPointForObjectLambdaOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5068:  return s.String()",
          "5069: }",
          "5071: type DeleteAccessPointPolicyInput struct {",
          "5072:  _ struct{} `locationName:\"DeleteAccessPointPolicyRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6189: type DeleteAccessPointPolicyForObjectLambdaInput struct {",
          "6190:  _ struct{} `locationName:\"DeleteAccessPointPolicyForObjectLambdaRequest\" type:\"structure\"`",
          "6196:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "6202:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "6203: }",
          "6206: func (s DeleteAccessPointPolicyForObjectLambdaInput) String() string {",
          "6207:  return awsutil.Prettify(s)",
          "6208: }",
          "6211: func (s DeleteAccessPointPolicyForObjectLambdaInput) GoString() string {",
          "6212:  return s.String()",
          "6213: }",
          "6216: func (s *DeleteAccessPointPolicyForObjectLambdaInput) Validate() error {",
          "6217:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAccessPointPolicyForObjectLambdaInput\"}",
          "6218:  if s.AccountId == nil {",
          "6219:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "6220:  }",
          "6221:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "6222:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "6223:  }",
          "6224:  if s.Name == nil {",
          "6225:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "6226:  }",
          "6227:  if s.Name != nil && len(*s.Name) < 3 {",
          "6228:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "6229:  }",
          "6231:  if invalidParams.Len() > 0 {",
          "6232:   return invalidParams",
          "6233:  }",
          "6234:  return nil",
          "6235: }",
          "6238: func (s *DeleteAccessPointPolicyForObjectLambdaInput) SetAccountId(v string) *DeleteAccessPointPolicyForObjectLambdaInput {",
          "6239:  s.AccountId = &v",
          "6240:  return s",
          "6241: }",
          "6244: func (s *DeleteAccessPointPolicyForObjectLambdaInput) SetName(v string) *DeleteAccessPointPolicyForObjectLambdaInput {",
          "6245:  s.Name = &v",
          "6246:  return s",
          "6247: }",
          "6249: func (s *DeleteAccessPointPolicyForObjectLambdaInput) hostLabels() map[string]string {",
          "6250:  return map[string]string{",
          "6251:   \"AccountId\": aws.StringValue(s.AccountId),",
          "6252:  }",
          "6253: }",
          "6255: type DeleteAccessPointPolicyForObjectLambdaOutput struct {",
          "6256:  _ struct{} `type:\"structure\"`",
          "6257: }",
          "6260: func (s DeleteAccessPointPolicyForObjectLambdaOutput) String() string {",
          "6261:  return awsutil.Prettify(s)",
          "6262: }",
          "6265: func (s DeleteAccessPointPolicyForObjectLambdaOutput) GoString() string {",
          "6266:  return s.String()",
          "6267: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "6038:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "6039:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "6040:  }",
          "6043:  }",
          "6046:  }",
          "6048:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6041:  if s.JobId == nil {",
          "6042:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "6044:  if s.JobId != nil && len(*s.JobId) < 5 {",
          "6045:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 5))",
          "",
          "[Added Lines]",
          "7239:  if s.JobId == nil {",
          "7240:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "7241:  }",
          "7242:  if s.JobId != nil && len(*s.JobId) < 5 {",
          "7243:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 5))",
          "7244:  }",
          "7246:  if invalidParams.Len() > 0 {",
          "7247:   return invalidParams",
          "7248:  }",
          "7249:  return nil",
          "7250: }",
          "7253: func (s *DescribeJobInput) SetAccountId(v string) *DescribeJobInput {",
          "7254:  s.AccountId = &v",
          "7255:  return s",
          "7256: }",
          "7259: func (s *DescribeJobInput) SetJobId(v string) *DescribeJobInput {",
          "7260:  s.JobId = &v",
          "7261:  return s",
          "7262: }",
          "7264: func (s *DescribeJobInput) hostLabels() map[string]string {",
          "7265:  return map[string]string{",
          "7266:   \"AccountId\": aws.StringValue(s.AccountId),",
          "7267:  }",
          "7268: }",
          "7270: type DescribeJobOutput struct {",
          "7271:  _ struct{} `type:\"structure\"`",
          "7275:  Job *JobDescriptor `type:\"structure\"`",
          "7276: }",
          "7279: func (s DescribeJobOutput) String() string {",
          "7280:  return awsutil.Prettify(s)",
          "7281: }",
          "7284: func (s DescribeJobOutput) GoString() string {",
          "7285:  return s.String()",
          "7286: }",
          "7289: func (s *DescribeJobOutput) SetJob(v *JobDescriptor) *DescribeJobOutput {",
          "7290:  s.Job = v",
          "7291:  return s",
          "7292: }",
          "7295: type Exclude struct {",
          "7296:  _ struct{} `type:\"structure\"`",
          "7299:  Buckets []*string `locationNameList:\"Arn\" type:\"list\"`",
          "7302:  Regions []*string `locationNameList:\"Region\" type:\"list\"`",
          "7303: }",
          "7306: func (s Exclude) String() string {",
          "7307:  return awsutil.Prettify(s)",
          "7308: }",
          "7311: func (s Exclude) GoString() string {",
          "7312:  return s.String()",
          "7313: }",
          "7316: func (s *Exclude) SetBuckets(v []*string) *Exclude {",
          "7317:  s.Buckets = v",
          "7318:  return s",
          "7319: }",
          "7322: func (s *Exclude) SetRegions(v []*string) *Exclude {",
          "7323:  s.Regions = v",
          "7324:  return s",
          "7325: }",
          "7327: type GetAccessPointConfigurationForObjectLambdaInput struct {",
          "7328:  _ struct{} `locationName:\"GetAccessPointConfigurationForObjectLambdaRequest\" type:\"structure\"`",
          "7334:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "7340:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "7341: }",
          "7344: func (s GetAccessPointConfigurationForObjectLambdaInput) String() string {",
          "7345:  return awsutil.Prettify(s)",
          "7346: }",
          "7349: func (s GetAccessPointConfigurationForObjectLambdaInput) GoString() string {",
          "7350:  return s.String()",
          "7351: }",
          "7354: func (s *GetAccessPointConfigurationForObjectLambdaInput) Validate() error {",
          "7355:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointConfigurationForObjectLambdaInput\"}",
          "7356:  if s.AccountId == nil {",
          "7357:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "7358:  }",
          "7359:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "7360:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "7361:  }",
          "7362:  if s.Name == nil {",
          "7363:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7364:  }",
          "7365:  if s.Name != nil && len(*s.Name) < 3 {",
          "7366:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "7367:  }",
          "7369:  if invalidParams.Len() > 0 {",
          "7370:   return invalidParams",
          "7371:  }",
          "7372:  return nil",
          "7373: }",
          "7376: func (s *GetAccessPointConfigurationForObjectLambdaInput) SetAccountId(v string) *GetAccessPointConfigurationForObjectLambdaInput {",
          "7377:  s.AccountId = &v",
          "7378:  return s",
          "7379: }",
          "7382: func (s *GetAccessPointConfigurationForObjectLambdaInput) SetName(v string) *GetAccessPointConfigurationForObjectLambdaInput {",
          "7383:  s.Name = &v",
          "7384:  return s",
          "7385: }",
          "7387: func (s *GetAccessPointConfigurationForObjectLambdaInput) hostLabels() map[string]string {",
          "7388:  return map[string]string{",
          "7389:   \"AccountId\": aws.StringValue(s.AccountId),",
          "7390:  }",
          "7391: }",
          "7393: type GetAccessPointConfigurationForObjectLambdaOutput struct {",
          "7394:  _ struct{} `type:\"structure\"`",
          "7397:  Configuration *ObjectLambdaConfiguration `type:\"structure\"`",
          "7398: }",
          "7401: func (s GetAccessPointConfigurationForObjectLambdaOutput) String() string {",
          "7402:  return awsutil.Prettify(s)",
          "7403: }",
          "7406: func (s GetAccessPointConfigurationForObjectLambdaOutput) GoString() string {",
          "7407:  return s.String()",
          "7408: }",
          "7411: func (s *GetAccessPointConfigurationForObjectLambdaOutput) SetConfiguration(v *ObjectLambdaConfiguration) *GetAccessPointConfigurationForObjectLambdaOutput {",
          "7412:  s.Configuration = v",
          "7413:  return s",
          "7414: }",
          "7416: type GetAccessPointForObjectLambdaInput struct {",
          "7417:  _ struct{} `locationName:\"GetAccessPointForObjectLambdaRequest\" type:\"structure\"`",
          "7423:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "7428:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "7429: }",
          "7432: func (s GetAccessPointForObjectLambdaInput) String() string {",
          "7433:  return awsutil.Prettify(s)",
          "7434: }",
          "7437: func (s GetAccessPointForObjectLambdaInput) GoString() string {",
          "7438:  return s.String()",
          "7439: }",
          "7442: func (s *GetAccessPointForObjectLambdaInput) Validate() error {",
          "7443:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointForObjectLambdaInput\"}",
          "7444:  if s.AccountId == nil {",
          "7445:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "7446:  }",
          "7447:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "7448:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "7449:  }",
          "7450:  if s.Name == nil {",
          "7451:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7453:  if s.Name != nil && len(*s.Name) < 3 {",
          "7454:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "6052: }",
          "6056:  s.AccountId = &v",
          "6057:  return s",
          "6058: }",
          "6063:  return s",
          "6064: }",
          "6067:  return map[string]string{",
          "6068:   \"AccountId\": aws.StringValue(s.AccountId),",
          "6069:  }",
          "6070: }",
          "6073:  _ struct{} `type:\"structure\"`",
          "6078: }",
          "6082:  return awsutil.Prettify(s)",
          "6083: }",
          "6087:  return s.String()",
          "6088: }",
          "6093:  return s",
          "6094: }",
          "6120:  return s",
          "6121: }",
          "6126:  return s",
          "6127: }",
          "",
          "[Removed Lines]",
          "6055: func (s *DescribeJobInput) SetAccountId(v string) *DescribeJobInput {",
          "6061: func (s *DescribeJobInput) SetJobId(v string) *DescribeJobInput {",
          "6062:  s.JobId = &v",
          "6066: func (s *DescribeJobInput) hostLabels() map[string]string {",
          "6072: type DescribeJobOutput struct {",
          "6077:  Job *JobDescriptor `type:\"structure\"`",
          "6081: func (s DescribeJobOutput) String() string {",
          "6086: func (s DescribeJobOutput) GoString() string {",
          "6091: func (s *DescribeJobOutput) SetJob(v *JobDescriptor) *DescribeJobOutput {",
          "6092:  s.Job = v",
          "6097: type Exclude struct {",
          "6098:  _ struct{} `type:\"structure\"`",
          "6101:  Buckets []*string `locationNameList:\"Arn\" type:\"list\"`",
          "6104:  Regions []*string `locationNameList:\"Region\" type:\"list\"`",
          "6105: }",
          "6108: func (s Exclude) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s Exclude) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *Exclude) SetBuckets(v []*string) *Exclude {",
          "6119:  s.Buckets = v",
          "6124: func (s *Exclude) SetRegions(v []*string) *Exclude {",
          "6125:  s.Regions = v",
          "",
          "[Added Lines]",
          "7464: func (s *GetAccessPointForObjectLambdaInput) SetAccountId(v string) *GetAccessPointForObjectLambdaInput {",
          "7470: func (s *GetAccessPointForObjectLambdaInput) SetName(v string) *GetAccessPointForObjectLambdaInput {",
          "7471:  s.Name = &v",
          "7475: func (s *GetAccessPointForObjectLambdaInput) hostLabels() map[string]string {",
          "7481: type GetAccessPointForObjectLambdaOutput struct {",
          "7485:  CreationDate *time.Time `type:\"timestamp\"`",
          "7488:  Name *string `min:\"3\" type:\"string\"`",
          "7492:  PublicAccessBlockConfiguration *PublicAccessBlockConfiguration `type:\"structure\"`",
          "7496: func (s GetAccessPointForObjectLambdaOutput) String() string {",
          "7501: func (s GetAccessPointForObjectLambdaOutput) GoString() string {",
          "7506: func (s *GetAccessPointForObjectLambdaOutput) SetCreationDate(v time.Time) *GetAccessPointForObjectLambdaOutput {",
          "7507:  s.CreationDate = &v",
          "7512: func (s *GetAccessPointForObjectLambdaOutput) SetName(v string) *GetAccessPointForObjectLambdaOutput {",
          "7513:  s.Name = &v",
          "7518: func (s *GetAccessPointForObjectLambdaOutput) SetPublicAccessBlockConfiguration(v *PublicAccessBlockConfiguration) *GetAccessPointForObjectLambdaOutput {",
          "7519:  s.PublicAccessBlockConfiguration = v",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "6323:  return s",
          "6324: }",
          "6326: type GetAccessPointPolicyInput struct {",
          "6327:  _ struct{} `locationName:\"GetAccessPointPolicyRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7720: type GetAccessPointPolicyForObjectLambdaInput struct {",
          "7721:  _ struct{} `locationName:\"GetAccessPointPolicyForObjectLambdaRequest\" type:\"structure\"`",
          "7727:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "7732:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "7733: }",
          "7736: func (s GetAccessPointPolicyForObjectLambdaInput) String() string {",
          "7737:  return awsutil.Prettify(s)",
          "7738: }",
          "7741: func (s GetAccessPointPolicyForObjectLambdaInput) GoString() string {",
          "7742:  return s.String()",
          "7743: }",
          "7746: func (s *GetAccessPointPolicyForObjectLambdaInput) Validate() error {",
          "7747:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointPolicyForObjectLambdaInput\"}",
          "7748:  if s.AccountId == nil {",
          "7749:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "7750:  }",
          "7751:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "7752:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "7753:  }",
          "7754:  if s.Name == nil {",
          "7755:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7756:  }",
          "7757:  if s.Name != nil && len(*s.Name) < 3 {",
          "7758:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "7759:  }",
          "7761:  if invalidParams.Len() > 0 {",
          "7762:   return invalidParams",
          "7763:  }",
          "7764:  return nil",
          "7765: }",
          "7768: func (s *GetAccessPointPolicyForObjectLambdaInput) SetAccountId(v string) *GetAccessPointPolicyForObjectLambdaInput {",
          "7769:  s.AccountId = &v",
          "7770:  return s",
          "7771: }",
          "7774: func (s *GetAccessPointPolicyForObjectLambdaInput) SetName(v string) *GetAccessPointPolicyForObjectLambdaInput {",
          "7775:  s.Name = &v",
          "7776:  return s",
          "7777: }",
          "7779: func (s *GetAccessPointPolicyForObjectLambdaInput) hostLabels() map[string]string {",
          "7780:  return map[string]string{",
          "7781:   \"AccountId\": aws.StringValue(s.AccountId),",
          "7782:  }",
          "7783: }",
          "7785: type GetAccessPointPolicyForObjectLambdaOutput struct {",
          "7786:  _ struct{} `type:\"structure\"`",
          "7789:  Policy *string `type:\"string\"`",
          "7790: }",
          "7793: func (s GetAccessPointPolicyForObjectLambdaOutput) String() string {",
          "7794:  return awsutil.Prettify(s)",
          "7795: }",
          "7798: func (s GetAccessPointPolicyForObjectLambdaOutput) GoString() string {",
          "7799:  return s.String()",
          "7800: }",
          "7803: func (s *GetAccessPointPolicyForObjectLambdaOutput) SetPolicy(v string) *GetAccessPointPolicyForObjectLambdaOutput {",
          "7804:  s.Policy = &v",
          "7805:  return s",
          "7806: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6358: }",
          "6363:  if s.AccountId == nil {",
          "6364:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "6365:  }",
          "",
          "[Removed Lines]",
          "6361: func (s *GetAccessPointPolicyInput) Validate() error {",
          "6362:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointPolicyInput\"}",
          "",
          "[Added Lines]",
          "7843: func (s *GetAccessPointPolicyInput) Validate() error {",
          "7844:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointPolicyInput\"}",
          "7845:  if s.AccountId == nil {",
          "7846:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "7847:  }",
          "7848:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "7849:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "7850:  }",
          "7851:  if s.Name == nil {",
          "7852:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7853:  }",
          "7854:  if s.Name != nil && len(*s.Name) < 3 {",
          "7855:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "7856:  }",
          "7858:  if invalidParams.Len() > 0 {",
          "7859:   return invalidParams",
          "7860:  }",
          "7861:  return nil",
          "7862: }",
          "7865: func (s *GetAccessPointPolicyInput) SetAccountId(v string) *GetAccessPointPolicyInput {",
          "7866:  s.AccountId = &v",
          "7867:  return s",
          "7868: }",
          "7871: func (s *GetAccessPointPolicyInput) SetName(v string) *GetAccessPointPolicyInput {",
          "7872:  s.Name = &v",
          "7873:  return s",
          "7874: }",
          "7876: func (s *GetAccessPointPolicyInput) hostLabels() map[string]string {",
          "7877:  return map[string]string{",
          "7878:   \"AccountId\": aws.StringValue(s.AccountId),",
          "7879:  }",
          "7880: }",
          "7882: func (s *GetAccessPointPolicyInput) getEndpointARN() (arn.Resource, error) {",
          "7883:  if s.Name == nil {",
          "7884:   return nil, fmt.Errorf(\"member Name is nil\")",
          "7885:  }",
          "7886:  return parseEndpointARN(*s.Name)",
          "7887: }",
          "7889: func (s *GetAccessPointPolicyInput) hasEndpointARN() bool {",
          "7890:  if s.Name == nil {",
          "7891:   return false",
          "7892:  }",
          "7893:  return arn.IsARN(*s.Name)",
          "7894: }",
          "7901: func (s GetAccessPointPolicyInput) updateArnableField(v string) (interface{}, error) {",
          "7902:  if s.Name == nil {",
          "7903:   return nil, fmt.Errorf(\"member Name is nil\")",
          "7904:  }",
          "7905:  s.Name = aws.String(v)",
          "7906:  return &s, nil",
          "7907: }",
          "7913: func (s GetAccessPointPolicyInput) updateAccountID(accountId string) (interface{}, error) {",
          "7914:  if s.AccountId == nil {",
          "7915:   s.AccountId = aws.String(accountId)",
          "7916:   return &s, nil",
          "7917:  } else if *s.AccountId != accountId {",
          "7918:   return &s, fmt.Errorf(\"Account ID mismatch, the Account ID cannot be specified in an ARN and in the accountId field\")",
          "7919:  }",
          "7920:  return nil, nil",
          "7921: }",
          "7923: type GetAccessPointPolicyOutput struct {",
          "7924:  _ struct{} `type:\"structure\"`",
          "7927:  Policy *string `type:\"string\"`",
          "7928: }",
          "7931: func (s GetAccessPointPolicyOutput) String() string {",
          "7932:  return awsutil.Prettify(s)",
          "7933: }",
          "7936: func (s GetAccessPointPolicyOutput) GoString() string {",
          "7937:  return s.String()",
          "7938: }",
          "7941: func (s *GetAccessPointPolicyOutput) SetPolicy(v string) *GetAccessPointPolicyOutput {",
          "7942:  s.Policy = &v",
          "7943:  return s",
          "7944: }",
          "7946: type GetAccessPointPolicyStatusForObjectLambdaInput struct {",
          "7947:  _ struct{} `locationName:\"GetAccessPointPolicyStatusForObjectLambdaRequest\" type:\"structure\"`",
          "7953:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "7958:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "7959: }",
          "7962: func (s GetAccessPointPolicyStatusForObjectLambdaInput) String() string {",
          "7963:  return awsutil.Prettify(s)",
          "7964: }",
          "7967: func (s GetAccessPointPolicyStatusForObjectLambdaInput) GoString() string {",
          "7968:  return s.String()",
          "7969: }",
          "7972: func (s *GetAccessPointPolicyStatusForObjectLambdaInput) Validate() error {",
          "7973:  invalidParams := request.ErrInvalidParams{Context: \"GetAccessPointPolicyStatusForObjectLambdaInput\"}",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6380: }",
          "6384:  s.AccountId = &v",
          "6385:  return s",
          "6386: }",
          "6390:  s.Name = &v",
          "6391:  return s",
          "6392: }",
          "6395:  return map[string]string{",
          "6396:   \"AccountId\": aws.StringValue(s.AccountId),",
          "6397:  }",
          "6398: }",
          "6442:  _ struct{} `type:\"structure\"`",
          "6446: }",
          "6450:  return awsutil.Prettify(s)",
          "6451: }",
          "6455:  return s.String()",
          "6456: }",
          "6461:  return s",
          "6462: }",
          "",
          "[Removed Lines]",
          "6383: func (s *GetAccessPointPolicyInput) SetAccountId(v string) *GetAccessPointPolicyInput {",
          "6389: func (s *GetAccessPointPolicyInput) SetName(v string) *GetAccessPointPolicyInput {",
          "6394: func (s *GetAccessPointPolicyInput) hostLabels() map[string]string {",
          "6400: func (s *GetAccessPointPolicyInput) getEndpointARN() (arn.Resource, error) {",
          "6401:  if s.Name == nil {",
          "6402:   return nil, fmt.Errorf(\"member Name is nil\")",
          "6403:  }",
          "6404:  return parseEndpointARN(*s.Name)",
          "6405: }",
          "6407: func (s *GetAccessPointPolicyInput) hasEndpointARN() bool {",
          "6408:  if s.Name == nil {",
          "6409:   return false",
          "6410:  }",
          "6411:  return arn.IsARN(*s.Name)",
          "6412: }",
          "6419: func (s GetAccessPointPolicyInput) updateArnableField(v string) (interface{}, error) {",
          "6420:  if s.Name == nil {",
          "6421:   return nil, fmt.Errorf(\"member Name is nil\")",
          "6422:  }",
          "6423:  s.Name = aws.String(v)",
          "6424:  return &s, nil",
          "6425: }",
          "6431: func (s GetAccessPointPolicyInput) updateAccountID(accountId string) (interface{}, error) {",
          "6432:  if s.AccountId == nil {",
          "6433:   s.AccountId = aws.String(accountId)",
          "6434:   return &s, nil",
          "6435:  } else if *s.AccountId != accountId {",
          "6436:   return &s, fmt.Errorf(\"Account ID mismatch, the Account ID cannot be specified in an ARN and in the accountId field\")",
          "6437:  }",
          "6438:  return nil, nil",
          "6439: }",
          "6441: type GetAccessPointPolicyOutput struct {",
          "6445:  Policy *string `type:\"string\"`",
          "6449: func (s GetAccessPointPolicyOutput) String() string {",
          "6454: func (s GetAccessPointPolicyOutput) GoString() string {",
          "6459: func (s *GetAccessPointPolicyOutput) SetPolicy(v string) *GetAccessPointPolicyOutput {",
          "6460:  s.Policy = &v",
          "",
          "[Added Lines]",
          "7994: func (s *GetAccessPointPolicyStatusForObjectLambdaInput) SetAccountId(v string) *GetAccessPointPolicyStatusForObjectLambdaInput {",
          "8000: func (s *GetAccessPointPolicyStatusForObjectLambdaInput) SetName(v string) *GetAccessPointPolicyStatusForObjectLambdaInput {",
          "8005: func (s *GetAccessPointPolicyStatusForObjectLambdaInput) hostLabels() map[string]string {",
          "8011: type GetAccessPointPolicyStatusForObjectLambdaOutput struct {",
          "8018:  PolicyStatus *PolicyStatus `type:\"structure\"`",
          "8022: func (s GetAccessPointPolicyStatusForObjectLambdaOutput) String() string {",
          "8027: func (s GetAccessPointPolicyStatusForObjectLambdaOutput) GoString() string {",
          "8032: func (s *GetAccessPointPolicyStatusForObjectLambdaOutput) SetPolicyStatus(v *PolicyStatus) *GetAccessPointPolicyStatusForObjectLambdaOutput {",
          "8033:  s.PolicyStatus = v",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "8614:  return s",
          "8615: }",
          "8617: type ListAccessPointsInput struct {",
          "8618:  _ struct{} `locationName:\"ListAccessPointsRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10190: type ListAccessPointsForObjectLambdaInput struct {",
          "10191:  _ struct{} `locationName:\"ListAccessPointsForObjectLambdaRequest\" type:\"structure\"`",
          "10197:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "10203:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" type:\"integer\"`",
          "10208:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "10209: }",
          "10212: func (s ListAccessPointsForObjectLambdaInput) String() string {",
          "10213:  return awsutil.Prettify(s)",
          "10214: }",
          "10217: func (s ListAccessPointsForObjectLambdaInput) GoString() string {",
          "10218:  return s.String()",
          "10219: }",
          "10222: func (s *ListAccessPointsForObjectLambdaInput) Validate() error {",
          "10223:  invalidParams := request.ErrInvalidParams{Context: \"ListAccessPointsForObjectLambdaInput\"}",
          "10224:  if s.AccountId == nil {",
          "10225:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "10226:  }",
          "10227:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "10228:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "10229:  }",
          "10230:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "10231:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "10232:  }",
          "10234:  if invalidParams.Len() > 0 {",
          "10235:   return invalidParams",
          "10236:  }",
          "10237:  return nil",
          "10238: }",
          "10241: func (s *ListAccessPointsForObjectLambdaInput) SetAccountId(v string) *ListAccessPointsForObjectLambdaInput {",
          "10242:  s.AccountId = &v",
          "10243:  return s",
          "10244: }",
          "10247: func (s *ListAccessPointsForObjectLambdaInput) SetMaxResults(v int64) *ListAccessPointsForObjectLambdaInput {",
          "10248:  s.MaxResults = &v",
          "10249:  return s",
          "10250: }",
          "10253: func (s *ListAccessPointsForObjectLambdaInput) SetNextToken(v string) *ListAccessPointsForObjectLambdaInput {",
          "10254:  s.NextToken = &v",
          "10255:  return s",
          "10256: }",
          "10258: func (s *ListAccessPointsForObjectLambdaInput) hostLabels() map[string]string {",
          "10259:  return map[string]string{",
          "10260:   \"AccountId\": aws.StringValue(s.AccountId),",
          "10261:  }",
          "10262: }",
          "10264: type ListAccessPointsForObjectLambdaOutput struct {",
          "10265:  _ struct{} `type:\"structure\"`",
          "10270:  NextToken *string `min:\"1\" type:\"string\"`",
          "10273:  ObjectLambdaAccessPointList []*ObjectLambdaAccessPoint `locationNameList:\"ObjectLambdaAccessPoint\" type:\"list\"`",
          "10274: }",
          "10277: func (s ListAccessPointsForObjectLambdaOutput) String() string {",
          "10278:  return awsutil.Prettify(s)",
          "10279: }",
          "10282: func (s ListAccessPointsForObjectLambdaOutput) GoString() string {",
          "10283:  return s.String()",
          "10284: }",
          "10287: func (s *ListAccessPointsForObjectLambdaOutput) SetNextToken(v string) *ListAccessPointsForObjectLambdaOutput {",
          "10288:  s.NextToken = &v",
          "10289:  return s",
          "10290: }",
          "10293: func (s *ListAccessPointsForObjectLambdaOutput) SetObjectLambdaAccessPointList(v []*ObjectLambdaAccessPoint) *ListAccessPointsForObjectLambdaOutput {",
          "10294:  s.ObjectLambdaAccessPointList = v",
          "10295:  return s",
          "10296: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9154:  NextToken *string `type:\"string\"`",
          "9158: }",
          "9162:  return awsutil.Prettify(s)",
          "9163: }",
          "9167:  return s.String()",
          "9168: }",
          "9173:  return s",
          "9174: }",
          "9179:  return s",
          "9180: }",
          "9184:  _ struct{} `type:\"structure\"`",
          "9192: }",
          "9196:  return awsutil.Prettify(s)",
          "9197: }",
          "9201:  return s.String()",
          "9202: }",
          "9207:  return s",
          "9208: }",
          "9212:  _ struct{} `type:\"structure\"`",
          "9223: }",
          "9227:  return awsutil.Prettify(s)",
          "9228: }",
          "9232:  return s.String()",
          "9233: }",
          "9238:  return s",
          "9239: }",
          "9244:  return s",
          "9245: }",
          "",
          "[Removed Lines]",
          "9157:  StorageLensConfigurationList []*ListStorageLensConfigurationEntry `locationNameList:\"StorageLensConfiguration\" type:\"list\" flattened:\"true\"`",
          "9161: func (s ListStorageLensConfigurationsOutput) String() string {",
          "9166: func (s ListStorageLensConfigurationsOutput) GoString() string {",
          "9171: func (s *ListStorageLensConfigurationsOutput) SetNextToken(v string) *ListStorageLensConfigurationsOutput {",
          "9172:  s.NextToken = &v",
          "9177: func (s *ListStorageLensConfigurationsOutput) SetStorageLensConfigurationList(v []*ListStorageLensConfigurationEntry) *ListStorageLensConfigurationsOutput {",
          "9178:  s.StorageLensConfigurationList = v",
          "9183: type NoncurrentVersionExpiration struct {",
          "9191:  NoncurrentDays *int64 `type:\"integer\"`",
          "9195: func (s NoncurrentVersionExpiration) String() string {",
          "9200: func (s NoncurrentVersionExpiration) GoString() string {",
          "9205: func (s *NoncurrentVersionExpiration) SetNoncurrentDays(v int64) *NoncurrentVersionExpiration {",
          "9206:  s.NoncurrentDays = &v",
          "9211: type NoncurrentVersionTransition struct {",
          "9219:  NoncurrentDays *int64 `type:\"integer\"`",
          "9222:  StorageClass *string `type:\"string\" enum:\"TransitionStorageClass\"`",
          "9226: func (s NoncurrentVersionTransition) String() string {",
          "9231: func (s NoncurrentVersionTransition) GoString() string {",
          "9236: func (s *NoncurrentVersionTransition) SetNoncurrentDays(v int64) *NoncurrentVersionTransition {",
          "9237:  s.NoncurrentDays = &v",
          "9242: func (s *NoncurrentVersionTransition) SetStorageClass(v string) *NoncurrentVersionTransition {",
          "9243:  s.StorageClass = &v",
          "",
          "[Added Lines]",
          "10838:  StorageLensConfigurationList []*ListStorageLensConfigurationEntry `locationNameList:\"StorageLensConfiguration\" type:\"list\" flattened:\"true\"`",
          "10839: }",
          "10842: func (s ListStorageLensConfigurationsOutput) String() string {",
          "10843:  return awsutil.Prettify(s)",
          "10844: }",
          "10847: func (s ListStorageLensConfigurationsOutput) GoString() string {",
          "10848:  return s.String()",
          "10849: }",
          "10852: func (s *ListStorageLensConfigurationsOutput) SetNextToken(v string) *ListStorageLensConfigurationsOutput {",
          "10853:  s.NextToken = &v",
          "10854:  return s",
          "10855: }",
          "10858: func (s *ListStorageLensConfigurationsOutput) SetStorageLensConfigurationList(v []*ListStorageLensConfigurationEntry) *ListStorageLensConfigurationsOutput {",
          "10859:  s.StorageLensConfigurationList = v",
          "10860:  return s",
          "10861: }",
          "10864: type NoncurrentVersionExpiration struct {",
          "10865:  _ struct{} `type:\"structure\"`",
          "10872:  NoncurrentDays *int64 `type:\"integer\"`",
          "10873: }",
          "10876: func (s NoncurrentVersionExpiration) String() string {",
          "10877:  return awsutil.Prettify(s)",
          "10878: }",
          "10881: func (s NoncurrentVersionExpiration) GoString() string {",
          "10882:  return s.String()",
          "10883: }",
          "10886: func (s *NoncurrentVersionExpiration) SetNoncurrentDays(v int64) *NoncurrentVersionExpiration {",
          "10887:  s.NoncurrentDays = &v",
          "10888:  return s",
          "10889: }",
          "10892: type NoncurrentVersionTransition struct {",
          "10893:  _ struct{} `type:\"structure\"`",
          "10900:  NoncurrentDays *int64 `type:\"integer\"`",
          "10903:  StorageClass *string `type:\"string\" enum:\"TransitionStorageClass\"`",
          "10904: }",
          "10907: func (s NoncurrentVersionTransition) String() string {",
          "10908:  return awsutil.Prettify(s)",
          "10909: }",
          "10912: func (s NoncurrentVersionTransition) GoString() string {",
          "10913:  return s.String()",
          "10914: }",
          "10917: func (s *NoncurrentVersionTransition) SetNoncurrentDays(v int64) *NoncurrentVersionTransition {",
          "10918:  s.NoncurrentDays = &v",
          "10919:  return s",
          "10920: }",
          "10923: func (s *NoncurrentVersionTransition) SetStorageClass(v string) *NoncurrentVersionTransition {",
          "10924:  s.StorageClass = &v",
          "10925:  return s",
          "10926: }",
          "10930: type ObjectLambdaAccessPoint struct {",
          "10931:  _ struct{} `type:\"structure\"`",
          "10936:  Name *string `min:\"3\" type:\"string\" required:\"true\"`",
          "10939:  ObjectLambdaAccessPointArn *string `min:\"1\" type:\"string\"`",
          "10940: }",
          "10943: func (s ObjectLambdaAccessPoint) String() string {",
          "10944:  return awsutil.Prettify(s)",
          "10945: }",
          "10948: func (s ObjectLambdaAccessPoint) GoString() string {",
          "10949:  return s.String()",
          "10950: }",
          "10953: func (s *ObjectLambdaAccessPoint) SetName(v string) *ObjectLambdaAccessPoint {",
          "10954:  s.Name = &v",
          "10955:  return s",
          "10956: }",
          "10959: func (s *ObjectLambdaAccessPoint) SetObjectLambdaAccessPointArn(v string) *ObjectLambdaAccessPoint {",
          "10960:  s.ObjectLambdaAccessPointArn = &v",
          "10961:  return s",
          "10962: }",
          "10965: type ObjectLambdaConfiguration struct {",
          "10966:  _ struct{} `type:\"structure\"`",
          "10969:  AllowedFeatures []*string `locationNameList:\"AllowedFeature\" type:\"list\"`",
          "10972:  CloudWatchMetricsEnabled *bool `type:\"boolean\"`",
          "10977:  SupportingAccessPoint *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10983:  TransformationConfigurations []*ObjectLambdaTransformationConfiguration `locationNameList:\"TransformationConfiguration\" type:\"list\" required:\"true\"`",
          "10987: func (s ObjectLambdaConfiguration) String() string {",
          "10992: func (s ObjectLambdaConfiguration) GoString() string {",
          "10997: func (s *ObjectLambdaConfiguration) Validate() error {",
          "10998:  invalidParams := request.ErrInvalidParams{Context: \"ObjectLambdaConfiguration\"}",
          "10999:  if s.SupportingAccessPoint == nil {",
          "11000:   invalidParams.Add(request.NewErrParamRequired(\"SupportingAccessPoint\"))",
          "11001:  }",
          "11002:  if s.SupportingAccessPoint != nil && len(*s.SupportingAccessPoint) < 1 {",
          "11003:   invalidParams.Add(request.NewErrParamMinLen(\"SupportingAccessPoint\", 1))",
          "11004:  }",
          "11005:  if s.TransformationConfigurations == nil {",
          "11006:   invalidParams.Add(request.NewErrParamRequired(\"TransformationConfigurations\"))",
          "11007:  }",
          "11008:  if s.TransformationConfigurations != nil {",
          "11009:   for i, v := range s.TransformationConfigurations {",
          "11010:    if v == nil {",
          "11011:     continue",
          "11012:    }",
          "11013:    if err := v.Validate(); err != nil {",
          "11014:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"TransformationConfigurations\", i), err.(request.ErrInvalidParams))",
          "11015:    }",
          "11016:   }",
          "11017:  }",
          "11019:  if invalidParams.Len() > 0 {",
          "11020:   return invalidParams",
          "11021:  }",
          "11022:  return nil",
          "11023: }",
          "11026: func (s *ObjectLambdaConfiguration) SetAllowedFeatures(v []*string) *ObjectLambdaConfiguration {",
          "11027:  s.AllowedFeatures = v",
          "11032: func (s *ObjectLambdaConfiguration) SetCloudWatchMetricsEnabled(v bool) *ObjectLambdaConfiguration {",
          "11033:  s.CloudWatchMetricsEnabled = &v",
          "11038: func (s *ObjectLambdaConfiguration) SetSupportingAccessPoint(v string) *ObjectLambdaConfiguration {",
          "11039:  s.SupportingAccessPoint = &v",
          "11040:  return s",
          "11041: }",
          "11044: func (s *ObjectLambdaConfiguration) SetTransformationConfigurations(v []*ObjectLambdaTransformationConfiguration) *ObjectLambdaConfiguration {",
          "11045:  s.TransformationConfigurations = v",
          "11046:  return s",
          "11047: }",
          "11050: type ObjectLambdaContentTransformation struct {",
          "11054:  AwsLambda *AwsLambdaTransformation `type:\"structure\"`",
          "11058: func (s ObjectLambdaContentTransformation) String() string {",
          "11063: func (s ObjectLambdaContentTransformation) GoString() string {",
          "11068: func (s *ObjectLambdaContentTransformation) Validate() error {",
          "11069:  invalidParams := request.ErrInvalidParams{Context: \"ObjectLambdaContentTransformation\"}",
          "11070:  if s.AwsLambda != nil {",
          "11071:   if err := s.AwsLambda.Validate(); err != nil {",
          "11072:    invalidParams.AddNested(\"AwsLambda\", err.(request.ErrInvalidParams))",
          "11073:   }",
          "11074:  }",
          "11076:  if invalidParams.Len() > 0 {",
          "11077:   return invalidParams",
          "11078:  }",
          "11079:  return nil",
          "11080: }",
          "11083: func (s *ObjectLambdaContentTransformation) SetAwsLambda(v *AwsLambdaTransformation) *ObjectLambdaContentTransformation {",
          "11084:  s.AwsLambda = v",
          "11089: type ObjectLambdaTransformationConfiguration struct {",
          "11095:  Actions []*string `locationNameList:\"Action\" type:\"list\" required:\"true\"`",
          "11101:  ContentTransformation *ObjectLambdaContentTransformation `type:\"structure\" required:\"true\"`",
          "11105: func (s ObjectLambdaTransformationConfiguration) String() string {",
          "11110: func (s ObjectLambdaTransformationConfiguration) GoString() string {",
          "11115: func (s *ObjectLambdaTransformationConfiguration) Validate() error {",
          "11116:  invalidParams := request.ErrInvalidParams{Context: \"ObjectLambdaTransformationConfiguration\"}",
          "11117:  if s.Actions == nil {",
          "11118:   invalidParams.Add(request.NewErrParamRequired(\"Actions\"))",
          "11119:  }",
          "11120:  if s.ContentTransformation == nil {",
          "11121:   invalidParams.Add(request.NewErrParamRequired(\"ContentTransformation\"))",
          "11122:  }",
          "11123:  if s.ContentTransformation != nil {",
          "11124:   if err := s.ContentTransformation.Validate(); err != nil {",
          "11125:    invalidParams.AddNested(\"ContentTransformation\", err.(request.ErrInvalidParams))",
          "11126:   }",
          "11127:  }",
          "11129:  if invalidParams.Len() > 0 {",
          "11130:   return invalidParams",
          "11131:  }",
          "11132:  return nil",
          "11133: }",
          "11136: func (s *ObjectLambdaTransformationConfiguration) SetActions(v []*string) *ObjectLambdaTransformationConfiguration {",
          "11137:  s.Actions = v",
          "11142: func (s *ObjectLambdaTransformationConfiguration) SetContentTransformation(v *ObjectLambdaContentTransformation) *ObjectLambdaTransformationConfiguration {",
          "11143:  s.ContentTransformation = v",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "9453:  return s",
          "9454: }",
          "9456: type PutAccessPointPolicyInput struct {",
          "9457:  _ struct{} `locationName:\"PutAccessPointPolicyRequest\" type:\"structure\" xmlURI:\"http://awss3control.amazonaws.com/doc/2018-08-20/\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11356: type PutAccessPointConfigurationForObjectLambdaInput struct {",
          "11357:  _ struct{} `locationName:\"PutAccessPointConfigurationForObjectLambdaRequest\" type:\"structure\" xmlURI:\"http://awss3control.amazonaws.com/doc/2018-08-20/\"`",
          "11363:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "11368:  Configuration *ObjectLambdaConfiguration `type:\"structure\" required:\"true\"`",
          "11373:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "11374: }",
          "11377: func (s PutAccessPointConfigurationForObjectLambdaInput) String() string {",
          "11378:  return awsutil.Prettify(s)",
          "11379: }",
          "11382: func (s PutAccessPointConfigurationForObjectLambdaInput) GoString() string {",
          "11383:  return s.String()",
          "11384: }",
          "11387: func (s *PutAccessPointConfigurationForObjectLambdaInput) Validate() error {",
          "11388:  invalidParams := request.ErrInvalidParams{Context: \"PutAccessPointConfigurationForObjectLambdaInput\"}",
          "11389:  if s.AccountId == nil {",
          "11390:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "11391:  }",
          "11392:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "11393:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "11394:  }",
          "11395:  if s.Configuration == nil {",
          "11396:   invalidParams.Add(request.NewErrParamRequired(\"Configuration\"))",
          "11397:  }",
          "11398:  if s.Name == nil {",
          "11399:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "11400:  }",
          "11401:  if s.Name != nil && len(*s.Name) < 3 {",
          "11402:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "11403:  }",
          "11404:  if s.Configuration != nil {",
          "11405:   if err := s.Configuration.Validate(); err != nil {",
          "11406:    invalidParams.AddNested(\"Configuration\", err.(request.ErrInvalidParams))",
          "11407:   }",
          "11408:  }",
          "11410:  if invalidParams.Len() > 0 {",
          "11411:   return invalidParams",
          "11412:  }",
          "11413:  return nil",
          "11414: }",
          "11417: func (s *PutAccessPointConfigurationForObjectLambdaInput) SetAccountId(v string) *PutAccessPointConfigurationForObjectLambdaInput {",
          "11418:  s.AccountId = &v",
          "11419:  return s",
          "11420: }",
          "11423: func (s *PutAccessPointConfigurationForObjectLambdaInput) SetConfiguration(v *ObjectLambdaConfiguration) *PutAccessPointConfigurationForObjectLambdaInput {",
          "11424:  s.Configuration = v",
          "11425:  return s",
          "11426: }",
          "11429: func (s *PutAccessPointConfigurationForObjectLambdaInput) SetName(v string) *PutAccessPointConfigurationForObjectLambdaInput {",
          "11430:  s.Name = &v",
          "11431:  return s",
          "11432: }",
          "11434: func (s *PutAccessPointConfigurationForObjectLambdaInput) hostLabels() map[string]string {",
          "11435:  return map[string]string{",
          "11436:   \"AccountId\": aws.StringValue(s.AccountId),",
          "11437:  }",
          "11438: }",
          "11440: type PutAccessPointConfigurationForObjectLambdaOutput struct {",
          "11441:  _ struct{} `type:\"structure\"`",
          "11442: }",
          "11445: func (s PutAccessPointConfigurationForObjectLambdaOutput) String() string {",
          "11446:  return awsutil.Prettify(s)",
          "11447: }",
          "11450: func (s PutAccessPointConfigurationForObjectLambdaOutput) GoString() string {",
          "11451:  return s.String()",
          "11452: }",
          "11454: type PutAccessPointPolicyForObjectLambdaInput struct {",
          "11455:  _ struct{} `locationName:\"PutAccessPointPolicyForObjectLambdaRequest\" type:\"structure\" xmlURI:\"http://awss3control.amazonaws.com/doc/2018-08-20/\"`",
          "11461:  AccountId *string `location:\"header\" locationName:\"x-amz-account-id\" type:\"string\" required:\"true\"`",
          "11466:  Name *string `location:\"uri\" locationName:\"name\" min:\"3\" type:\"string\" required:\"true\"`",
          "11471:  Policy *string `type:\"string\" required:\"true\"`",
          "11472: }",
          "11475: func (s PutAccessPointPolicyForObjectLambdaInput) String() string {",
          "11476:  return awsutil.Prettify(s)",
          "11477: }",
          "11480: func (s PutAccessPointPolicyForObjectLambdaInput) GoString() string {",
          "11481:  return s.String()",
          "11482: }",
          "11485: func (s *PutAccessPointPolicyForObjectLambdaInput) Validate() error {",
          "11486:  invalidParams := request.ErrInvalidParams{Context: \"PutAccessPointPolicyForObjectLambdaInput\"}",
          "11487:  if s.AccountId == nil {",
          "11488:   invalidParams.Add(request.NewErrParamRequired(\"AccountId\"))",
          "11489:  }",
          "11490:  if s.AccountId != nil && len(*s.AccountId) < 1 {",
          "11491:   invalidParams.Add(request.NewErrParamMinLen(\"AccountId\", 1))",
          "11492:  }",
          "11493:  if s.Name == nil {",
          "11494:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "11495:  }",
          "11496:  if s.Name != nil && len(*s.Name) < 3 {",
          "11497:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 3))",
          "11498:  }",
          "11499:  if s.Policy == nil {",
          "11500:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "11501:  }",
          "11503:  if invalidParams.Len() > 0 {",
          "11504:   return invalidParams",
          "11505:  }",
          "11506:  return nil",
          "11507: }",
          "11510: func (s *PutAccessPointPolicyForObjectLambdaInput) SetAccountId(v string) *PutAccessPointPolicyForObjectLambdaInput {",
          "11511:  s.AccountId = &v",
          "11512:  return s",
          "11513: }",
          "11516: func (s *PutAccessPointPolicyForObjectLambdaInput) SetName(v string) *PutAccessPointPolicyForObjectLambdaInput {",
          "11517:  s.Name = &v",
          "11518:  return s",
          "11519: }",
          "11522: func (s *PutAccessPointPolicyForObjectLambdaInput) SetPolicy(v string) *PutAccessPointPolicyForObjectLambdaInput {",
          "11523:  s.Policy = &v",
          "11524:  return s",
          "11525: }",
          "11527: func (s *PutAccessPointPolicyForObjectLambdaInput) hostLabels() map[string]string {",
          "11528:  return map[string]string{",
          "11529:   \"AccountId\": aws.StringValue(s.AccountId),",
          "11530:  }",
          "11531: }",
          "11533: type PutAccessPointPolicyForObjectLambdaOutput struct {",
          "11534:  _ struct{} `type:\"structure\"`",
          "11535: }",
          "11538: func (s PutAccessPointPolicyForObjectLambdaOutput) String() string {",
          "11539:  return awsutil.Prettify(s)",
          "11540: }",
          "11543: func (s PutAccessPointPolicyForObjectLambdaOutput) GoString() string {",
          "11544:  return s.String()",
          "11545: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "12655:  }",
          "12656: }",
          "12658: const (",
          "12660:  OperationNameLambdaInvoke = \"LambdaInvoke\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14749: const (",
          "14751:  ObjectLambdaAllowedFeatureGetObjectRange = \"GetObject-Range\"",
          "14754:  ObjectLambdaAllowedFeatureGetObjectPartNumber = \"GetObject-PartNumber\"",
          "14755: )",
          "14758: func ObjectLambdaAllowedFeature_Values() []string {",
          "14759:  return []string{",
          "14760:   ObjectLambdaAllowedFeatureGetObjectRange,",
          "14761:   ObjectLambdaAllowedFeatureGetObjectPartNumber,",
          "14762:  }",
          "14763: }",
          "14765: const (",
          "14767:  ObjectLambdaTransformationConfigurationActionGetObject = \"GetObject\"",
          "14768: )",
          "14771: func ObjectLambdaTransformationConfigurationAction_Values() []string {",
          "14772:  return []string{",
          "14773:   ObjectLambdaTransformationConfigurationActionGetObject,",
          "14774:  }",
          "14775: }",
          "",
          "---------------"
        ],
        "service/s3control/s3controliface/interface.go||service/s3control/s3controliface/interface.go": [
          "File: service/s3control/s3controliface/interface.go -> service/s3control/s3controliface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  CreateAccessPointWithContext(aws.Context, *s3control.CreateAccessPointInput, ...request.Option) (*s3control.CreateAccessPointOutput, error)",
          "65:  CreateAccessPointRequest(*s3control.CreateAccessPointInput) (*request.Request, *s3control.CreateAccessPointOutput)",
          "67:  CreateBucket(*s3control.CreateBucketInput) (*s3control.CreateBucketOutput, error)",
          "68:  CreateBucketWithContext(aws.Context, *s3control.CreateBucketInput, ...request.Option) (*s3control.CreateBucketOutput, error)",
          "69:  CreateBucketRequest(*s3control.CreateBucketInput) (*request.Request, *s3control.CreateBucketOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  CreateAccessPointForObjectLambda(*s3control.CreateAccessPointForObjectLambdaInput) (*s3control.CreateAccessPointForObjectLambdaOutput, error)",
          "68:  CreateAccessPointForObjectLambdaWithContext(aws.Context, *s3control.CreateAccessPointForObjectLambdaInput, ...request.Option) (*s3control.CreateAccessPointForObjectLambdaOutput, error)",
          "69:  CreateAccessPointForObjectLambdaRequest(*s3control.CreateAccessPointForObjectLambdaInput) (*request.Request, *s3control.CreateAccessPointForObjectLambdaOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  DeleteAccessPointWithContext(aws.Context, *s3control.DeleteAccessPointInput, ...request.Option) (*s3control.DeleteAccessPointOutput, error)",
          "77:  DeleteAccessPointRequest(*s3control.DeleteAccessPointInput) (*request.Request, *s3control.DeleteAccessPointOutput)",
          "79:  DeleteAccessPointPolicy(*s3control.DeleteAccessPointPolicyInput) (*s3control.DeleteAccessPointPolicyOutput, error)",
          "80:  DeleteAccessPointPolicyWithContext(aws.Context, *s3control.DeleteAccessPointPolicyInput, ...request.Option) (*s3control.DeleteAccessPointPolicyOutput, error)",
          "81:  DeleteAccessPointPolicyRequest(*s3control.DeleteAccessPointPolicyInput) (*request.Request, *s3control.DeleteAccessPointPolicyOutput)",
          "83:  DeleteBucket(*s3control.DeleteBucketInput) (*s3control.DeleteBucketOutput, error)",
          "84:  DeleteBucketWithContext(aws.Context, *s3control.DeleteBucketInput, ...request.Option) (*s3control.DeleteBucketOutput, error)",
          "85:  DeleteBucketRequest(*s3control.DeleteBucketInput) (*request.Request, *s3control.DeleteBucketOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeleteAccessPointForObjectLambda(*s3control.DeleteAccessPointForObjectLambdaInput) (*s3control.DeleteAccessPointForObjectLambdaOutput, error)",
          "84:  DeleteAccessPointForObjectLambdaWithContext(aws.Context, *s3control.DeleteAccessPointForObjectLambdaInput, ...request.Option) (*s3control.DeleteAccessPointForObjectLambdaOutput, error)",
          "85:  DeleteAccessPointForObjectLambdaRequest(*s3control.DeleteAccessPointForObjectLambdaInput) (*request.Request, *s3control.DeleteAccessPointForObjectLambdaOutput)",
          "91:  DeleteAccessPointPolicyForObjectLambda(*s3control.DeleteAccessPointPolicyForObjectLambdaInput) (*s3control.DeleteAccessPointPolicyForObjectLambdaOutput, error)",
          "92:  DeleteAccessPointPolicyForObjectLambdaWithContext(aws.Context, *s3control.DeleteAccessPointPolicyForObjectLambdaInput, ...request.Option) (*s3control.DeleteAccessPointPolicyForObjectLambdaOutput, error)",
          "93:  DeleteAccessPointPolicyForObjectLambdaRequest(*s3control.DeleteAccessPointPolicyForObjectLambdaInput) (*request.Request, *s3control.DeleteAccessPointPolicyForObjectLambdaOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120:  GetAccessPointWithContext(aws.Context, *s3control.GetAccessPointInput, ...request.Option) (*s3control.GetAccessPointOutput, error)",
          "121:  GetAccessPointRequest(*s3control.GetAccessPointInput) (*request.Request, *s3control.GetAccessPointOutput)",
          "123:  GetAccessPointPolicy(*s3control.GetAccessPointPolicyInput) (*s3control.GetAccessPointPolicyOutput, error)",
          "124:  GetAccessPointPolicyWithContext(aws.Context, *s3control.GetAccessPointPolicyInput, ...request.Option) (*s3control.GetAccessPointPolicyOutput, error)",
          "125:  GetAccessPointPolicyRequest(*s3control.GetAccessPointPolicyInput) (*request.Request, *s3control.GetAccessPointPolicyOutput)",
          "127:  GetAccessPointPolicyStatus(*s3control.GetAccessPointPolicyStatusInput) (*s3control.GetAccessPointPolicyStatusOutput, error)",
          "128:  GetAccessPointPolicyStatusWithContext(aws.Context, *s3control.GetAccessPointPolicyStatusInput, ...request.Option) (*s3control.GetAccessPointPolicyStatusOutput, error)",
          "129:  GetAccessPointPolicyStatusRequest(*s3control.GetAccessPointPolicyStatusInput) (*request.Request, *s3control.GetAccessPointPolicyStatusOutput)",
          "131:  GetBucket(*s3control.GetBucketInput) (*s3control.GetBucketOutput, error)",
          "132:  GetBucketWithContext(aws.Context, *s3control.GetBucketInput, ...request.Option) (*s3control.GetBucketOutput, error)",
          "133:  GetBucketRequest(*s3control.GetBucketInput) (*request.Request, *s3control.GetBucketOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:  GetAccessPointConfigurationForObjectLambda(*s3control.GetAccessPointConfigurationForObjectLambdaInput) (*s3control.GetAccessPointConfigurationForObjectLambdaOutput, error)",
          "136:  GetAccessPointConfigurationForObjectLambdaWithContext(aws.Context, *s3control.GetAccessPointConfigurationForObjectLambdaInput, ...request.Option) (*s3control.GetAccessPointConfigurationForObjectLambdaOutput, error)",
          "137:  GetAccessPointConfigurationForObjectLambdaRequest(*s3control.GetAccessPointConfigurationForObjectLambdaInput) (*request.Request, *s3control.GetAccessPointConfigurationForObjectLambdaOutput)",
          "139:  GetAccessPointForObjectLambda(*s3control.GetAccessPointForObjectLambdaInput) (*s3control.GetAccessPointForObjectLambdaOutput, error)",
          "140:  GetAccessPointForObjectLambdaWithContext(aws.Context, *s3control.GetAccessPointForObjectLambdaInput, ...request.Option) (*s3control.GetAccessPointForObjectLambdaOutput, error)",
          "141:  GetAccessPointForObjectLambdaRequest(*s3control.GetAccessPointForObjectLambdaInput) (*request.Request, *s3control.GetAccessPointForObjectLambdaOutput)",
          "147:  GetAccessPointPolicyForObjectLambda(*s3control.GetAccessPointPolicyForObjectLambdaInput) (*s3control.GetAccessPointPolicyForObjectLambdaOutput, error)",
          "148:  GetAccessPointPolicyForObjectLambdaWithContext(aws.Context, *s3control.GetAccessPointPolicyForObjectLambdaInput, ...request.Option) (*s3control.GetAccessPointPolicyForObjectLambdaOutput, error)",
          "149:  GetAccessPointPolicyForObjectLambdaRequest(*s3control.GetAccessPointPolicyForObjectLambdaInput) (*request.Request, *s3control.GetAccessPointPolicyForObjectLambdaOutput)",
          "155:  GetAccessPointPolicyStatusForObjectLambda(*s3control.GetAccessPointPolicyStatusForObjectLambdaInput) (*s3control.GetAccessPointPolicyStatusForObjectLambdaOutput, error)",
          "156:  GetAccessPointPolicyStatusForObjectLambdaWithContext(aws.Context, *s3control.GetAccessPointPolicyStatusForObjectLambdaInput, ...request.Option) (*s3control.GetAccessPointPolicyStatusForObjectLambdaOutput, error)",
          "157:  GetAccessPointPolicyStatusForObjectLambdaRequest(*s3control.GetAccessPointPolicyStatusForObjectLambdaInput) (*request.Request, *s3control.GetAccessPointPolicyStatusForObjectLambdaOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "167:  ListAccessPointsPages(*s3control.ListAccessPointsInput, func(*s3control.ListAccessPointsOutput, bool) bool) error",
          "168:  ListAccessPointsPagesWithContext(aws.Context, *s3control.ListAccessPointsInput, func(*s3control.ListAccessPointsOutput, bool) bool, ...request.Option) error",
          "170:  ListJobs(*s3control.ListJobsInput) (*s3control.ListJobsOutput, error)",
          "171:  ListJobsWithContext(aws.Context, *s3control.ListJobsInput, ...request.Option) (*s3control.ListJobsOutput, error)",
          "172:  ListJobsRequest(*s3control.ListJobsInput) (*request.Request, *s3control.ListJobsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:  ListAccessPointsForObjectLambda(*s3control.ListAccessPointsForObjectLambdaInput) (*s3control.ListAccessPointsForObjectLambdaOutput, error)",
          "199:  ListAccessPointsForObjectLambdaWithContext(aws.Context, *s3control.ListAccessPointsForObjectLambdaInput, ...request.Option) (*s3control.ListAccessPointsForObjectLambdaOutput, error)",
          "200:  ListAccessPointsForObjectLambdaRequest(*s3control.ListAccessPointsForObjectLambdaInput) (*request.Request, *s3control.ListAccessPointsForObjectLambdaOutput)",
          "202:  ListAccessPointsForObjectLambdaPages(*s3control.ListAccessPointsForObjectLambdaInput, func(*s3control.ListAccessPointsForObjectLambdaOutput, bool) bool) error",
          "203:  ListAccessPointsForObjectLambdaPagesWithContext(aws.Context, *s3control.ListAccessPointsForObjectLambdaInput, func(*s3control.ListAccessPointsForObjectLambdaOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "185:  ListStorageLensConfigurationsWithContext(aws.Context, *s3control.ListStorageLensConfigurationsInput, ...request.Option) (*s3control.ListStorageLensConfigurationsOutput, error)",
          "186:  ListStorageLensConfigurationsRequest(*s3control.ListStorageLensConfigurationsInput) (*request.Request, *s3control.ListStorageLensConfigurationsOutput)",
          "188:  PutAccessPointPolicy(*s3control.PutAccessPointPolicyInput) (*s3control.PutAccessPointPolicyOutput, error)",
          "189:  PutAccessPointPolicyWithContext(aws.Context, *s3control.PutAccessPointPolicyInput, ...request.Option) (*s3control.PutAccessPointPolicyOutput, error)",
          "190:  PutAccessPointPolicyRequest(*s3control.PutAccessPointPolicyInput) (*request.Request, *s3control.PutAccessPointPolicyOutput)",
          "192:  PutBucketLifecycleConfiguration(*s3control.PutBucketLifecycleConfigurationInput) (*s3control.PutBucketLifecycleConfigurationOutput, error)",
          "193:  PutBucketLifecycleConfigurationWithContext(aws.Context, *s3control.PutBucketLifecycleConfigurationInput, ...request.Option) (*s3control.PutBucketLifecycleConfigurationOutput, error)",
          "194:  PutBucketLifecycleConfigurationRequest(*s3control.PutBucketLifecycleConfigurationInput) (*request.Request, *s3control.PutBucketLifecycleConfigurationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:  PutAccessPointConfigurationForObjectLambda(*s3control.PutAccessPointConfigurationForObjectLambdaInput) (*s3control.PutAccessPointConfigurationForObjectLambdaOutput, error)",
          "224:  PutAccessPointConfigurationForObjectLambdaWithContext(aws.Context, *s3control.PutAccessPointConfigurationForObjectLambdaInput, ...request.Option) (*s3control.PutAccessPointConfigurationForObjectLambdaOutput, error)",
          "225:  PutAccessPointConfigurationForObjectLambdaRequest(*s3control.PutAccessPointConfigurationForObjectLambdaInput) (*request.Request, *s3control.PutAccessPointConfigurationForObjectLambdaOutput)",
          "231:  PutAccessPointPolicyForObjectLambda(*s3control.PutAccessPointPolicyForObjectLambdaInput) (*s3control.PutAccessPointPolicyForObjectLambdaOutput, error)",
          "232:  PutAccessPointPolicyForObjectLambdaWithContext(aws.Context, *s3control.PutAccessPointPolicyForObjectLambdaInput, ...request.Option) (*s3control.PutAccessPointPolicyForObjectLambdaOutput, error)",
          "233:  PutAccessPointPolicyForObjectLambdaRequest(*s3control.PutAccessPointPolicyForObjectLambdaInput) (*request.Request, *s3control.PutAccessPointPolicyForObjectLambdaOutput)",
          "",
          "---------------"
        ]
      }
    }
  ]
}