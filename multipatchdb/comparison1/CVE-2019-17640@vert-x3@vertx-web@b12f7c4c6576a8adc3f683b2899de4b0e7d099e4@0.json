{
  "cve_id": "CVE-2019-17640",
  "cve_desc": "In Eclipse Vert.x 3.4.x up to 3.9.4, 4.0.0.milestone1, 4.0.0.milestone2, 4.0.0.milestone3, 4.0.0.milestone4, 4.0.0.milestone5, 4.0.0.Beta1, 4.0.0.Beta2, and 4.0.0.Beta3, StaticHandler doesn't correctly processes back slashes on Windows Operating systems, allowing, escape the webroot folder to the current working directory.",
  "repo": "vert-x3/vertx-web",
  "patch_hash": "b12f7c4c6576a8adc3f683b2899de4b0e7d099e4",
  "patch_info": {
    "commit_hash": "b12f7c4c6576a8adc3f683b2899de4b0e7d099e4",
    "repo": "vert-x3/vertx-web",
    "commit_url": "https://github.com/vert-x3/vertx-web/commit/b12f7c4c6576a8adc3f683b2899de4b0e7d099e4",
    "files": [
      "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
      "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
    ],
    "message": "Fixes #1714: Handle all paths as UNIX (CVE-2019-17640)\n\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>\n\n(cherry picked from commit d519a0959fa54f25e52f2d05bee03e950b4980d3)\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>",
    "before_after_code_files": [
      "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
      "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
    ]
  },
  "patch_diff": {
    "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java": [
      "File: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java -> vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "128:       if (log.isTraceEnabled()) log.trace(\"Not GET or HEAD so ignoring request\");",
      "129:       context.next();",
      "130:     } else {",
      "134:         log.warn(\"Invalid path: \" + context.request().path());",
      "135:         context.next();",
      "136:         return;",
      "137:       }",
      "140:       if (!directoryListing && \"/\".equals(path)) {",
      "",
      "[Removed Lines]",
      "131:       String path = HttpUtils.removeDots(URIDecoder.decodeURIComponent(context.normalisedPath(), false));",
      "133:       if (path == null) {",
      "",
      "[Added Lines]",
      "132:       String uriDecodedPath = URIDecoder.decodeURIComponent(context.normalisedPath(), false);",
      "134:       if (uriDecodedPath == null) {",
      "140:       String path = HttpUtils.removeDots(uriDecodedPath.replace('\\\\', '/'));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "765:   private static class FSTune {",
      "",
      "[Removed Lines]",
      "767:     private static int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
      "",
      "[Added Lines]",
      "770:     private static final int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
      "",
      "---------------"
    ],
    "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java": [
      "File: vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java -> vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:     testRequest(HttpMethod.GET, \"/\", 200, \"OK\", \"<html><body>Index page</body></html>\");",
      "53:   }",
      "55:   @Test",
      "56:   public void testGetSubdirectorySlashDefaultIndex() throws Exception {",
      "57:     testRequest(HttpMethod.GET, \"/somedir/\", 200, \"OK\", \"<html><body>Subdirectory index page</body></html>\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55:   @Test",
      "56:   public void testGetSubdirectoryWithoutSlashDefaultIndex() throws Exception {",
      "58:     testRequest(HttpMethod.GET, \"/somedir\", null, res -> {",
      "59:       String location = res.headers().get(\"location\");",
      "60:       assertEquals(\"/somedir/\", location);",
      "61:     }, 301, \"Moved Permanently\", null);",
      "62:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "844:     testRequest(HttpMethod.GET, \"/not-existing-file.html\", 200, \"OK\", \"Howdy!\");",
      "845:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "856:   @Test",
      "857:   public void testWriteResponseWhenAlreadyClosed() throws Exception {",
      "858:     router.clear();",
      "859:     router",
      "860:       .route()",
      "861:       .handler(rc -> {",
      "862:         rc.next();",
      "863:         rc.response().end(\"OtherResponse\");",
      "864:       })",
      "865:       .handler(stat);",
      "866:     testRequest(HttpMethod.GET, \"/index.html\", 200, \"OK\", \"OtherResponse\");",
      "867:   }",
      "869:   @Test",
      "870:   public void testEscapeWindows() throws Exception {",
      "871:     router.clear();",
      "872:     router",
      "873:       .route()",
      "874:       .handler(stat);",
      "876:     testRequest(HttpMethod.GET, \"/%5c..%5cindex.html\", 200, \"OK\");",
      "877:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d519a0959fa54f25e52f2d05bee03e950b4980d3",
      "candidate_info": {
        "commit_hash": "d519a0959fa54f25e52f2d05bee03e950b4980d3",
        "repo": "vert-x3/vertx-web",
        "commit_url": "https://github.com/vert-x3/vertx-web/commit/d519a0959fa54f25e52f2d05bee03e950b4980d3",
        "files": [
          "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
        ],
        "message": "Fixes #1714: Handle all paths as UNIX\n\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>",
        "before_after_code_files": [
          "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
            "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
          ],
          "candidate": [
            "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
            "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java": [
          "File: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java -> vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:       if (log.isTraceEnabled()) log.trace(\"Not GET or HEAD so ignoring request\");",
          "111:       context.next();",
          "112:     } else {",
          "116:         log.warn(\"Invalid path: \" + context.request().path());",
          "117:         context.next();",
          "118:         return;",
          "119:       }",
          "122:       if (!directoryListing && \"/\".equals(path)) {",
          "",
          "[Removed Lines]",
          "113:       String path = HttpUtils.removeDots(URIDecoder.decodeURIComponent(context.normalizedPath(), false));",
          "115:       if (path == null) {",
          "",
          "[Added Lines]",
          "114:       String uriDecodedPath = URIDecoder.decodeURIComponent(context.normalizedPath(), false);",
          "116:       if (uriDecodedPath == null) {",
          "122:       String path = HttpUtils.removeDots(uriDecodedPath.replace('\\\\', '/'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:   private static class FSTune {",
          "",
          "[Removed Lines]",
          "712:     private static int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
          "",
          "[Added Lines]",
          "715:     private static final int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
          "",
          "---------------"
        ],
        "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java": [
          "File: vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java -> vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "874:     testRequest(HttpMethod.GET, \"/index.html\", 200, \"OK\", \"OtherResponse\");",
          "875:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "877:   @Test",
          "878:   public void testEscapeWindows() throws Exception {",
          "879:     router.clear();",
          "880:     router",
          "881:       .route()",
          "882:       .handler(stat);",
          "884:     testRequest(HttpMethod.GET, \"/%5c..%5cindex.html\", 200, \"OK\");",
          "885:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "375c656f20639a48ffc1088bb56a539a4cb32d99",
      "candidate_info": {
        "commit_hash": "375c656f20639a48ffc1088bb56a539a4cb32d99",
        "repo": "vert-x3/vertx-web",
        "commit_url": "https://github.com/vert-x3/vertx-web/commit/375c656f20639a48ffc1088bb56a539a4cb32d99",
        "files": [
          "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
        ],
        "message": "Fixes #1714: Handle all paths as UNIX\n\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>\n\n(cherry picked from commit d519a0959fa54f25e52f2d05bee03e950b4980d3)\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>",
        "before_after_code_files": [
          "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
            "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
          ],
          "candidate": [
            "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
            "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java||vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java": [
          "File: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java -> vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:       if (log.isTraceEnabled()) log.trace(\"Not GET or HEAD so ignoring request\");",
          "129:       context.next();",
          "130:     } else {",
          "134:         log.warn(\"Invalid path: \" + context.request().path());",
          "135:         context.next();",
          "136:         return;",
          "137:       }",
          "140:       if (!directoryListing && \"/\".equals(path)) {",
          "",
          "[Removed Lines]",
          "131:       String path = HttpUtils.removeDots(URIDecoder.decodeURIComponent(context.normalisedPath(), false));",
          "133:       if (path == null) {",
          "",
          "[Added Lines]",
          "132:       String uriDecodedPath = URIDecoder.decodeURIComponent(context.normalisedPath(), false);",
          "134:       if (uriDecodedPath == null) {",
          "140:       String path = HttpUtils.removeDots(uriDecodedPath.replace('\\\\', '/'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "765:   private static class FSTune {",
          "",
          "[Removed Lines]",
          "767:     private static int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
          "",
          "[Added Lines]",
          "770:     private static final int NUM_SERVES_TUNING_FS_ACCESS = 1000;",
          "",
          "---------------"
        ],
        "vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java||vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java": [
          "File: vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java -> vertx-web/src/test/java/io/vertx/ext/web/handler/StaticHandlerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     testRequest(HttpMethod.GET, \"/\", 200, \"OK\", \"<html><body>Index page</body></html>\");",
          "53:   }",
          "55:   @Test",
          "56:   public void testGetSubdirectorySlashDefaultIndex() throws Exception {",
          "57:     testRequest(HttpMethod.GET, \"/somedir/\", 200, \"OK\", \"<html><body>Subdirectory index page</body></html>\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   @Test",
          "56:   public void testGetSubdirectoryWithoutSlashDefaultIndex() throws Exception {",
          "58:     testRequest(HttpMethod.GET, \"/somedir\", null, res -> {",
          "59:       String location = res.headers().get(\"location\");",
          "60:       assertEquals(\"/somedir/\", location);",
          "61:     }, 301, \"Moved Permanently\", null);",
          "62:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "844:     testRequest(HttpMethod.GET, \"/not-existing-file.html\", 200, \"OK\", \"Howdy!\");",
          "845:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "856:   @Test",
          "857:   public void testWriteResponseWhenAlreadyClosed() throws Exception {",
          "858:     router.clear();",
          "859:     router",
          "860:       .route()",
          "861:       .handler(rc -> {",
          "862:         rc.next();",
          "863:         rc.response().end(\"OtherResponse\");",
          "864:       })",
          "865:       .handler(stat);",
          "866:     testRequest(HttpMethod.GET, \"/index.html\", 200, \"OK\", \"OtherResponse\");",
          "867:   }",
          "869:   @Test",
          "870:   public void testEscapeWindows() throws Exception {",
          "871:     router.clear();",
          "872:     router",
          "873:       .route()",
          "874:       .handler(stat);",
          "876:     testRequest(HttpMethod.GET, \"/%5c..%5cindex.html\", 200, \"OK\");",
          "877:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}