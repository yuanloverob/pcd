{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc24c830ade1c59d8704fd9dfa6fb10755470ddd",
      "candidate_info": {
        "commit_hash": "fc24c830ade1c59d8704fd9dfa6fb10755470ddd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fc24c830ade1c59d8704fd9dfa6fb10755470ddd",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java"
        ],
        "message": "PDFBOX-4892: \"Yes\" is not always a valid value for checkboxes, see comment in SO 63509975\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881190 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java||examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java||examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java -> examples/src/main/java/org/apache/pdfbox/examples/interactive/form/SetField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         {",
          "55:             if (field instanceof PDCheckBox)",
          "56:             {",
          "58:             }",
          "59:             else if (field instanceof PDComboBox)",
          "60:             {",
          "",
          "[Removed Lines]",
          "57:                 field.setValue(\"Yes\");",
          "",
          "[Added Lines]",
          "57:                 PDCheckBox checkbox = (PDCheckBox) field;",
          "58:                 if (value.isEmpty())",
          "59:                 {",
          "60:                     checkbox.unCheck();",
          "61:                 }",
          "62:                 else",
          "63:                 {",
          "64:                     checkbox.check();",
          "65:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "673777f7d9ac653845fd44682cec74970810818d",
      "candidate_info": {
        "commit_hash": "673777f7d9ac653845fd44682cec74970810818d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/673777f7d9ac653845fd44682cec74970810818d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java"
        ],
        "message": "PDFBOX-4892: optimize sequence\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889835 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:     protected float[] calcColor(Point p)",
          "104:     {",
          "107:         if (point0.x == point1.x && point0.y == point1.y)",
          "108:         {",
          "109:             return color0;",
          "110:         }",
          "112:         {",
          "113:             float l = point1.y - point0.y;",
          "114:             for (int i = 0; i < numberOfColorComponents; i++)",
          "",
          "[Removed Lines]",
          "105:         int numberOfColorComponents = color0.length;",
          "106:         float[] pc = new float[numberOfColorComponents];",
          "111:         else if (point0.x == point1.x)",
          "",
          "[Added Lines]",
          "109:         int numberOfColorComponents = color0.length;",
          "110:         float[] pc = new float[numberOfColorComponents];",
          "111:         if (point0.x == point1.x)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01ba69a9dc036a82022166e134a099504886c33b",
      "candidate_info": {
        "commit_hash": "01ba69a9dc036a82022166e134a099504886c33b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/01ba69a9dc036a82022166e134a099504886c33b",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java"
        ],
        "message": "PDFBOX-4892: remove unneeded shift, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887220 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:         {",
          "151:             throw new EOFException();",
          "152:         }",
          "154:     }",
          "",
          "[Removed Lines]",
          "153:         return (byte1 << 24) + (byte2 << 16) + (byte3 << 8) + (byte4 << 0);",
          "",
          "[Added Lines]",
          "153:         return (byte1 << 24) + (byte2 << 16) + (byte3 << 8) + byte4;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6256dafa0e1976d2d4e61194a67ad00977fdf04d",
      "candidate_info": {
        "commit_hash": "6256dafa0e1976d2d4e61194a67ad00977fdf04d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6256dafa0e1976d2d4e61194a67ad00977fdf04d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov (improved)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889474 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     {",
          "102:         WritableRaster raster = getColorModel().createCompatibleWritableRaster(w, h);",
          "103:         int[] data = new int[w * h * 4];",
          "104:         for (int j = 0; j < h; j++)",
          "105:         {",
          "106:             for (int i = 0; i < w; i++)",
          "107:             {",
          "108:                 int index = (j * w + i) * 4;",
          "109:                 boolean useBackground = false;",
          "111:                 rat.transform(values, 0, values, 0, 1);",
          "112:                 if (values[0] < domain[0] || values[0] > domain[1] ||",
          "113:                     values[1] < domain[2] || values[1] > domain[3])",
          "",
          "[Removed Lines]",
          "110:                 float[] values = new float[] { x + i, y + j };",
          "",
          "[Added Lines]",
          "104:         float[] values = new float[2];",
          "111:                 values[0] = x + i;",
          "112:                 values[1] = y + j;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:                 }",
          "123:                 if (useBackground)",
          "124:                 {",
          "126:                 }",
          "127:                 else",
          "128:                 {",
          "129:                     try",
          "130:                     {",
          "132:                     }",
          "133:                     catch (IOException e)",
          "134:                     {",
          "135:                         LOG.error(\"error while processing a function\", e);",
          "136:                     }",
          "137:                 }",
          "",
          "[Removed Lines]",
          "125:                     values = getBackground();",
          "131:                         values = type1ShadingType.evalFunction(values);",
          "",
          "[Added Lines]",
          "125:                 float[] tmpValues; // \"values\" can't be reused due to different length",
          "128:                     tmpValues = getBackground();",
          "134:                         tmpValues = type1ShadingType.evalFunction(tmpValues);",
          "139:                         continue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142:                 {",
          "143:                     try",
          "144:                     {",
          "146:                     }",
          "147:                     catch (IOException e)",
          "148:                     {",
          "149:                         LOG.error(\"error processing color space\", e);",
          "150:                     }",
          "151:                 }",
          "155:                 data[index + 3] = 255;",
          "156:             }",
          "157:         }",
          "",
          "[Removed Lines]",
          "145:                         values = shadingColorSpace.toRGB(values);",
          "152:                 data[index] = (int) (values[0] * 255);",
          "153:                 data[index + 1] = (int) (values[1] * 255);",
          "154:                 data[index + 2] = (int) (values[2] * 255);",
          "",
          "[Added Lines]",
          "149:                         tmpValues = shadingColorSpace.toRGB(tmpValues);",
          "154:                         continue;",
          "157:                 data[index] = (int) (tmpValues[0] * 255);",
          "158:                 data[index + 1] = (int) (tmpValues[1] * 255);",
          "159:                 data[index + 2] = (int) (tmpValues[2] * 255);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3d83dd8fd3c27b232fc8f69c67f01e8ef2751af",
      "candidate_info": {
        "commit_hash": "c3d83dd8fd3c27b232fc8f69c67f01e8ef2751af",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c3d83dd8fd3c27b232fc8f69c67f01e8ef2751af",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java"
        ],
        "message": "PDFBOX-3017: make sure that CRL is valid right now\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882876 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CRLVerifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:                             crlDistributionPointsURL + \" could not be verified\");",
          "141:                 }",
          "142:                 crl.verify(crlIssuerCert.getPublicKey(), SecurityProvider.getProvider().getName());",
          "144:                 if (!crl.getIssuerX500Principal().equals(cert.getIssuerX500Principal()))",
          "145:                 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:                 if (crl.getThisUpdate().after(now))",
          "144:                 {",
          "145:                     throw new CertificateVerificationException(\"CRL not yet valid, thisUpdate is \" + crl.getThisUpdate());",
          "146:                 }",
          "147:                 if (crl.getNextUpdate().before(now))",
          "148:                 {",
          "149:                     throw new CertificateVerificationException(\"CRL no longer valid, nextUpdate is \" + crl.getNextUpdate());",
          "150:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}