{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "80ecad698d0bb1c43788bc09b77d539fb937e402",
      "candidate_info": {
        "commit_hash": "80ecad698d0bb1c43788bc09b77d539fb937e402",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/80ecad698d0bb1c43788bc09b77d539fb937e402",
        "files": [
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ],
        "message": "AMBARI-24646 'ambari-server setup-ldap' fails with AttributeError when master_key is not persisted (#2330)\n\n* AMBARI-24646. 'ambari-server setup-ldap' fails with AttributeError when master_key is not persisted (dlysnichenko)\n\n* AMBARI-24646 'ambari-server setup-ldap' fails with AttributeError when master_key is not persisted - small fix",
        "before_after_code_files": [
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py": [
          "File: ambari-server/src/main/python/ambari_server/serverConfiguration.py -> ambari-server/src/main/python/ambari_server/serverConfiguration.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "908:     with open(tempFilePath, 'w+'):",
          "909:       os.chmod(tempFilePath, stat.S_IREAD | stat.S_IWRITE)",
          "912:       masterKey = options.master_key",
          "913:     if masterKey is None or masterKey == \"\":",
          "914:       masterKey = \"None\"",
          "",
          "[Removed Lines]",
          "911:     if options is not None and options.master_key is not None and options.master_key:",
          "",
          "[Added Lines]",
          "911:     if options is not None and hasattr(options, 'master_key') and options.master_key is not None and options.master_key:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1019:   masterKey = None",
          "1020:   while(input):",
          "1021:     try:",
          "1023:         masterKey = options.master_key",
          "1024:       if masterKey is None:",
          "1025:         masterKey = get_validated_string_input('Enter current Master Key: ',",
          "1026:                                                \"\", \".*\", \"\", True, False)",
          "1027:     except KeyboardInterrupt:",
          "1028:       print_warning_msg('Exiting...')",
          "1029:       sys.exit(1)",
          "",
          "[Removed Lines]",
          "1022:       if options is not None and options.master_key is not None and options.master_key:",
          "",
          "[Added Lines]",
          "1022:       if options is not None and hasattr(options, 'master_key') and options.master_key is not None and options.master_key:",
          "1027:         if options is not None:",
          "1028:           options.master_key = masterKey",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1048:     if alias and masterKey:",
          "1049:       password = read_passwd_for_alias(alias, masterKey, options)",
          "1050:       if not password:",
          "1051:         print_error_msg (\"ERROR: Master key does not match.\")",
          "1052:         continue",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1053:         masterKey = None",
          "1054:         if options is not None:",
          "1055:           options.master_key = None",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d662de940e1d7b53bafb5f639d189126ac612221",
      "candidate_info": {
        "commit_hash": "d662de940e1d7b53bafb5f639d189126ac612221",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/d662de940e1d7b53bafb5f639d189126ac612221",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py"
        ],
        "message": "AMBARI-24434. Cannot deploy HBase without HDFS (#2005)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2905:     hdfsSiteMap.put(\"dfs.namenode.https-address\", new SingleHostTopologyUpdater(\"NAMENODE\"));",
          "2906:     hdfsSiteMap.put(\"dfs.namenode.rpc-address\", new SingleHostTopologyUpdater(\"NAMENODE\"));",
          "2907:     coreSiteMap.put(\"fs.defaultFS\", new SingleHostTopologyUpdater(\"NAMENODE\"));",
          "2909:     accumuloSiteMap.put(\"instance.volumes\", new SingleHostTopologyUpdater(\"NAMENODE\"));",
          "2911:     multiHdfsSiteMap.put(\"dfs.namenode.shared.edits.dir\", new MultipleHostTopologyUpdater(\"JOURNALNODE\", ';', false, false, true));",
          "",
          "[Removed Lines]",
          "2908:     hbaseSiteMap.put(\"hbase.rootdir\", new SingleHostTopologyUpdater(\"NAMENODE\"));",
          "",
          "[Added Lines]",
          "2908:     hbaseSiteMap.put(\"hbase.rootdir\", new OptionalSingleHostTopologyUpdater(\"NAMENODE\"));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:       group=params.user_group,",
          "209:       owner=params.hbase_user",
          "210:     )",
          "212:     if not params.hbase_hdfs_root_dir_protocol or params.hbase_hdfs_root_dir_protocol == urlparse(params.default_fs).scheme:",
          "213:       params.HdfsResource(params.hbase_hdfs_root_dir,",
          "214:                            type=\"directory\",",
          "",
          "[Removed Lines]",
          "211:   if name == \"master\":",
          "",
          "[Added Lines]",
          "211:   if name == \"master\" and params.default_fs:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:       )",
          "231:     params.HdfsResource(None, action=\"execute\")",
          "233:   if params.phoenix_enabled:",
          "234:     Package(params.phoenix_package,",
          "235:             retry_on_repo_unavailability=params.agent_stack_retry_on_unavailability,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:   if name in ('master', 'regionserver') and not params.default_fs:",
          "234:     Directory(params.hbase_staging_dir,",
          "235:       owner = params.hbase_user,",
          "236:       create_parents = True,",
          "237:       cd_access = \"a\",",
          "238:       mode = 0711,",
          "239:     )",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "260: hdfs_principal_name = config['configurations']['hadoop-env']['hdfs_principal_name']",
          "262: hdfs_site = config['configurations']['hdfs-site']",
          "265: dfs_type = default(\"/clusterLevelParams/dfs_type\", \"\")",
          "",
          "[Removed Lines]",
          "263: default_fs = config['configurations']['core-site']['fs.defaultFS']",
          "",
          "[Added Lines]",
          "263: default_fs = default('configurations/core-site/fs.defaultFS', None)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f362cd09418dfe7fcc25891ff28a1e090a64c85",
      "candidate_info": {
        "commit_hash": "3f362cd09418dfe7fcc25891ff28a1e090a64c85",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/3f362cd09418dfe7fcc25891ff28a1e090a64c85",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java"
        ],
        "message": "AMBARI-24499 blueprint support for multiple TIMELINE_READER components (benyoka) (#2140)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1944:             throw new IllegalArgumentException(",
          "1945:               String.format(\"Unable to update configuration property '%s' with topology information. \" +",
          "1947:           }",
          "1948:         }",
          "1949:       }",
          "",
          "[Removed Lines]",
          "1946:                 \"Component '%s' is mapped to an invalid number of hosts '%s'.\", propertyName, component, matchingGroupCount));",
          "",
          "[Added Lines]",
          "1946:                 \"Component '%s' is mapped to an invalid number of host groups '%s'.\", propertyName, component, matchingGroupCount));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2946:     yarnSiteMap.put(\"yarn.log.server.web-service.url\", new SingleHostTopologyUpdater(\"APP_TIMELINE_SERVER\"));",
          "2953:     hiveSiteMap.put(\"hive.server2.authentication.ldap.url\", new SingleHostTopologyUpdater(\"HIVE_SERVER2\"));",
          "",
          "[Removed Lines]",
          "2949:     yarnSiteMap.put(\"yarn.timeline-service.reader.webapp.address\", new SingleHostTopologyUpdater(\"TIMELINE_READER\"));",
          "2950:     yarnSiteMap.put(\"yarn.timeline-service.reader.webapp.https.address\", new SingleHostTopologyUpdater(\"TIMELINE_READER\"));",
          "",
          "[Added Lines]",
          "2949:     yarnSiteMap.put(\"yarn.timeline-service.reader.webapp.address\", new MultipleHostTopologyUpdater(\"TIMELINE_READER\"));",
          "2950:     yarnSiteMap.put(\"yarn.timeline-service.reader.webapp.https.address\", new MultipleHostTopologyUpdater(\"TIMELINE_READER\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18f895ca0130ab3d0058eae8d3b262d9d47b6909",
      "candidate_info": {
        "commit_hash": "18f895ca0130ab3d0058eae8d3b262d9d47b6909",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/18f895ca0130ab3d0058eae8d3b262d9d47b6909",
        "files": [
          "ambari-server/src/main/assemblies/server.xml",
          "ambari-server/src/main/resources/index.html"
        ],
        "message": "AMBARI-25252. Disable directory Indexing at /resources (amagyar) (#2936)\n\nAMBARI-25252. Disable directory Indexing at /resources (amagyar)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/index.html||ambari-server/src/main/resources/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/index.html||ambari-server/src/main/resources/index.html": [
          "File: ambari-server/src/main/resources/index.html -> ambari-server/src/main/resources/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!--",
          "17: -->",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76bf361f5ff21172f9b1f97fa8bdd6bc34006dcc",
      "candidate_info": {
        "commit_hash": "76bf361f5ff21172f9b1f97fa8bdd6bc34006dcc",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/76bf361f5ff21172f9b1f97fa8bdd6bc34006dcc",
        "files": [
          "ambari-server/conf/unix/ca.config"
        ],
        "message": "[AMBARI-25194] Increase the Agent cert validity to 3 years (apappu)",
        "before_after_code_files": [
          "ambari-server/conf/unix/ca.config||ambari-server/conf/unix/ca.config"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/conf/unix/ca.config||ambari-server/conf/unix/ca.config": [
          "File: ambari-server/conf/unix/ca.config -> ambari-server/conf/unix/ca.config",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: database               = $dir/index.txt",
          "10: serial                 = $dir/serial",
          "13: default_crl_days       = 7",
          "14: default_md             = sha256",
          "",
          "[Removed Lines]",
          "11: default_days           = 365",
          "",
          "[Added Lines]",
          "11: default_days           = 1095",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: [ jdk7_ca ]",
          "28: subjectKeyIdentifier = hash",
          "29: authorityKeyIdentifier = keyid:always,issuer:always",
          "",
          "[Removed Lines]",
          "30: basicConstraints = CA:true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}