{
  "cve_id": "CVE-2024-32650",
  "cve_desc": "Rustls is a modern TLS library written in Rust. `rustls::ConnectionCommon::complete_io` could fall into an infinite loop based on network input. When using a blocking rustls server, if a client send a `close_notify` message immediately after `client_hello`, the server's `complete_io` will get in an infinite loop. This vulnerability is fixed in 0.23.5, 0.22.4, and 0.21.11.",
  "repo": "rustls/rustls",
  "patch_hash": "2123576840aa31043a31b0770e6572136fbe0c2d",
  "patch_info": {
    "commit_hash": "2123576840aa31043a31b0770e6572136fbe0c2d",
    "repo": "rustls/rustls",
    "commit_url": "https://github.com/rustls/rustls/commit/2123576840aa31043a31b0770e6572136fbe0c2d",
    "files": [
      "rustls/tests/api.rs"
    ],
    "message": "Regression test for `complete_io` infinite loop bug",
    "before_after_code_files": [
      "rustls/tests/api.rs||rustls/tests/api.rs"
    ]
  },
  "patch_diff": {
    "rustls/tests/api.rs||rustls/tests/api.rs": [
      "File: rustls/tests/api.rs -> rustls/tests/api.rs",
      "--- Hunk 1 ---",
      "[Context before]",
      "6306:     assert!(!server_config.fips());",
      "6307: }",
      "6309: } // test_for_each_provider!",
      "6311: #[derive(Default, Debug)]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6309: #[test]",
      "6310: fn test_complete_io_errors_if_close_notify_received_too_early() {",
      "6311:     let mut server = ServerConnection::new(Arc::new(make_server_config(KeyType::Rsa2048))).unwrap();",
      "6312:     let client_hello_followed_by_close_notify_alert = b\"\\",
      "6313:         \\x16\\x03\\x01\\x00\\xc8\\x01\\x00\\x00\\xc4\\x03\\x03\\xec\\x12\\xdd\\x17\\x64\\",
      "6314:         \\xa4\\x39\\xfd\\x7e\\x8c\\x85\\x46\\xb8\\x4d\\x1e\\xa0\\x6e\\xb3\\xd7\\xa0\\x51\\",
      "6315:         \\xf0\\x3c\\xb8\\x17\\x47\\x0d\\x4c\\x54\\xc5\\xdf\\x72\\x00\\x00\\x1c\\xea\\xea\\",
      "6316:         \\xc0\\x2b\\xc0\\x2f\\xc0\\x2c\\xc0\\x30\\xcc\\xa9\\xcc\\xa8\\xc0\\x13\\xc0\\x14\\",
      "6317:         \\x00\\x9c\\x00\\x9d\\x00\\x2f\\x00\\x35\\x00\\x0a\\x01\\x00\\x00\\x7f\\xda\\xda\\",
      "6318:         \\x00\\x00\\xff\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x16\\x00\\x14\\x00\\x00\\x11\\",
      "6319:         \\x77\\x77\\x77\\x2e\\x77\\x69\\x6b\\x69\\x70\\x65\\x64\\x69\\x61\\x2e\\x6f\\x72\\",
      "6320:         \\x67\\x00\\x17\\x00\\x00\\x00\\x23\\x00\\x00\\x00\\x0d\\x00\\x14\\x00\\x12\\x04\\",
      "6321:         \\x03\\x08\\x04\\x04\\x01\\x05\\x03\\x08\\x05\\x05\\x01\\x08\\x06\\x06\\x01\\x02\\",
      "6322:         \\x01\\x00\\x05\\x00\\x05\\x01\\x00\\x00\\x00\\x00\\x00\\x12\\x00\\x00\\x00\\x10\\",
      "6323:         \\x00\\x0e\\x00\\x0c\\x02\\x68\\x32\\x08\\x68\\x74\\x74\\x70\\x2f\\x31\\x2e\\x31\\",
      "6324:         \\x75\\x50\\x00\\x00\\x00\\x0b\\x00\\x02\\x01\\x00\\x00\\x0a\\x00\\x0a\\x00\\x08\\",
      "6325:         \\x1a\\x1a\\x00\\x1d\\x00\\x17\\x00\\x18\\x1a\\x1a\\x00\\x01\\x00\\",
      "6326:         \\x15\\x03\\x03\\x00\\x02\\x01\\x00\";",
      "6328:     let mut stream = FakeStream(client_hello_followed_by_close_notify_alert);",
      "6329:     assert_eq!(",
      "6330:         server",
      "6331:             .complete_io(&mut stream)",
      "6332:             .unwrap_err()",
      "6333:             .kind(),",
      "6334:         io::ErrorKind::UnexpectedEof",
      "6335:     );",
      "6336: }",
      "6338: struct FakeStream<'a>(&'a [u8]);",
      "6340: impl<'a> io::Read for FakeStream<'a> {",
      "6341:     fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {",
      "6342:         let take = core::cmp::min(b.len(), self.0.len());",
      "6343:         let (taken, remain) = self.0.split_at(take);",
      "6344:         b[..take].copy_from_slice(taken);",
      "6345:         self.0 = remain;",
      "6346:         Ok(take)",
      "6347:     }",
      "6348: }",
      "6350: impl<'a> io::Write for FakeStream<'a> {",
      "6351:     fn write(&mut self, b: &[u8]) -> io::Result<usize> {",
      "6352:         Ok(b.len())",
      "6353:     }",
      "6355:     fn flush(&mut self) -> io::Result<()> {",
      "6356:         Ok(())",
      "6357:     }",
      "6358: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14cb5d2eac709f6c9bd46c697f090bb1f1543db1",
      "candidate_info": {
        "commit_hash": "14cb5d2eac709f6c9bd46c697f090bb1f1543db1",
        "repo": "rustls/rustls",
        "commit_url": "https://github.com/rustls/rustls/commit/14cb5d2eac709f6c9bd46c697f090bb1f1543db1",
        "files": [
          "Cargo.lock",
          "fuzz/Cargo.lock",
          "rustls/Cargo.toml"
        ],
        "message": "Prepare 0.23.5",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "fuzz/Cargo.lock||fuzz/Cargo.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rustls/rustls/pull/1905"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2176: [[package]]",
          "2177: name = \"rustls\"",
          "2179: dependencies = [",
          "2180:  \"aws-lc-rs\",",
          "2181:  \"base64 0.22.0\",",
          "",
          "[Removed Lines]",
          "2178: version = \"0.23.4\"",
          "",
          "[Added Lines]",
          "2178: version = \"0.23.5\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2209:  \"fxhash\",",
          "2210:  \"itertools\",",
          "2211:  \"rayon\",",
          "2213:  \"rustls-pemfile 2.1.2\",",
          "2214:  \"rustls-pki-types\",",
          "2215:  \"tikv-jemallocator\",",
          "",
          "[Removed Lines]",
          "2212:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2212:  \"rustls 0.23.5\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2222:  \"hickory-resolver\",",
          "2223:  \"regex\",",
          "2224:  \"ring\",",
          "2226: ]",
          "2228: [[package]]",
          "",
          "[Removed Lines]",
          "2225:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2225:  \"rustls 0.23.5\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2235:  \"log\",",
          "2236:  \"mio\",",
          "2237:  \"rcgen\",",
          "2239:  \"rustls-pemfile 2.1.2\",",
          "2240:  \"rustls-pki-types\",",
          "2241:  \"serde\",",
          "",
          "[Removed Lines]",
          "2238:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2238:  \"rustls 0.23.5\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2253:  \"num-bigint\",",
          "2254:  \"once_cell\",",
          "2255:  \"openssl\",",
          "2257:  \"rustls-pemfile 2.1.2\",",
          "2258:  \"rustls-pki-types\",",
          "2259: ]",
          "",
          "[Removed Lines]",
          "2256:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2256:  \"rustls 0.23.5\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2289: dependencies = [",
          "2290:  \"aws-lc-rs\",",
          "2291:  \"env_logger\",",
          "2293:  \"webpki-roots 0.26.1\",",
          "2294: ]",
          "",
          "[Removed Lines]",
          "2292:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2292:  \"rustls 0.23.5\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2311:  \"rand_core\",",
          "2312:  \"rcgen\",",
          "2313:  \"rsa\",",
          "2315:  \"rustls-pki-types\",",
          "2316:  \"rustls-webpki 0.102.2\",",
          "2317:  \"serde\",",
          "",
          "[Removed Lines]",
          "2314:  \"rustls 0.23.4\",",
          "",
          "[Added Lines]",
          "2314:  \"rustls 0.23.5\",",
          "",
          "---------------"
        ],
        "fuzz/Cargo.lock||fuzz/Cargo.lock": [
          "File: fuzz/Cargo.lock -> fuzz/Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "361: [[package]]",
          "362: name = \"rustls\"",
          "364: dependencies = [",
          "365:  \"aws-lc-rs\",",
          "366:  \"log\",",
          "",
          "[Removed Lines]",
          "363: version = \"0.23.4\"",
          "",
          "[Added Lines]",
          "363: version = \"0.23.5\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0254d003c3e998fde35351e42e3740f0550f59dc",
      "candidate_info": {
        "commit_hash": "0254d003c3e998fde35351e42e3740f0550f59dc",
        "repo": "rustls/rustls",
        "commit_url": "https://github.com/rustls/rustls/commit/0254d003c3e998fde35351e42e3740f0550f59dc",
        "files": [
          "rustls/src/bs_debug.rs",
          "rustls/src/client/client_conn.rs",
          "rustls/src/conn.rs",
          "rustls/src/conn/unbuffered.rs",
          "rustls/src/crypto/tls12.rs",
          "rustls/src/crypto/tls13.rs",
          "rustls/src/msgs/base.rs",
          "rustls/src/msgs/codec.rs",
          "rustls/src/msgs/deframer/handshake.rs",
          "rustls/src/msgs/fragmenter.rs",
          "rustls/src/msgs/handshake.rs",
          "rustls/src/msgs/message/inbound.rs",
          "rustls/src/server/common.rs",
          "rustls/src/server/server_conn.rs",
          "rustls/src/webpki/verify.rs",
          "rustls/tests/api.rs"
        ],
        "message": "clippy: needless_lifetimes fixes\n\nDiff applied from `cargo clippy --fix` to address findings of the form:\n\n```\nwarning: the following explicit lifetimes could be elided: 'a\n  --> rustls/src/msgs/base.rs:86:6\n   |\n86 | impl<'a> PayloadU24<'a> {\n   |      ^^             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n86 - impl<'a> PayloadU24<'a> {\n86 + impl PayloadU24<'_> {\n```",
        "before_after_code_files": [
          "rustls/src/bs_debug.rs||rustls/src/bs_debug.rs",
          "rustls/src/client/client_conn.rs||rustls/src/client/client_conn.rs",
          "rustls/src/conn.rs||rustls/src/conn.rs",
          "rustls/src/conn/unbuffered.rs||rustls/src/conn/unbuffered.rs",
          "rustls/src/crypto/tls12.rs||rustls/src/crypto/tls12.rs",
          "rustls/src/crypto/tls13.rs||rustls/src/crypto/tls13.rs",
          "rustls/src/msgs/base.rs||rustls/src/msgs/base.rs",
          "rustls/src/msgs/codec.rs||rustls/src/msgs/codec.rs",
          "rustls/src/msgs/deframer/handshake.rs||rustls/src/msgs/deframer/handshake.rs",
          "rustls/src/msgs/fragmenter.rs||rustls/src/msgs/fragmenter.rs",
          "rustls/src/msgs/handshake.rs||rustls/src/msgs/handshake.rs",
          "rustls/src/msgs/message/inbound.rs||rustls/src/msgs/message/inbound.rs",
          "rustls/src/server/common.rs||rustls/src/server/common.rs",
          "rustls/src/server/server_conn.rs||rustls/src/server/server_conn.rs",
          "rustls/src/webpki/verify.rs||rustls/src/webpki/verify.rs",
          "rustls/tests/api.rs||rustls/tests/api.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ],
          "candidate": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ]
        }
      },
      "candidate_diff": {
        "rustls/src/bs_debug.rs||rustls/src/bs_debug.rs": [
          "File: rustls/src/bs_debug.rs -> rustls/src/bs_debug.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: pub(crate) struct BsDebug<'a>(pub(crate) &'a [u8]);",
          "16:     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {",
          "17:         write!(fmt, \"b\\\"\")?;",
          "18:         for &c in self.0 {",
          "",
          "[Removed Lines]",
          "15: impl<'a> fmt::Debug for BsDebug<'a> {",
          "",
          "[Added Lines]",
          "15: impl fmt::Debug for BsDebug<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/client/client_conn.rs||rustls/src/client/client_conn.rs": [
          "File: rustls/src/client/client_conn.rs -> rustls/src/client/client_conn.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "518:         pub cfg: &'a mut ClientConfig,",
          "519:     }",
          "523:         pub fn set_certificate_verifier(&mut self, verifier: Arc<dyn ServerCertVerifier>) {",
          "524:             self.cfg.verifier = verifier;",
          "",
          "[Removed Lines]",
          "521:     impl<'a> DangerousClientConfig<'a> {",
          "",
          "[Added Lines]",
          "521:     impl DangerousClientConfig<'_> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "644:         }",
          "645:     }",
          "648:         fn write(&mut self, buf: &[u8]) -> io::Result<usize> {",
          "649:             self.sess.write_early_data(buf)",
          "650:         }",
          "",
          "[Removed Lines]",
          "647:     impl<'a> io::Write for WriteEarlyData<'a> {",
          "",
          "[Added Lines]",
          "647:     impl io::Write for WriteEarlyData<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/conn.rs||rustls/src/conn.rs": [
          "File: rustls/src/conn.rs -> rustls/src/conn.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         pub(super) has_seen_eof: bool,",
          "174:     }",
          "178:         fn check_no_bytes_state(&self) -> io::Result<()> {",
          "179:             match (self.has_received_close_notify, self.has_seen_eof) {",
          "",
          "[Removed Lines]",
          "176:     impl<'a> Reader<'a> {",
          "",
          "[Added Lines]",
          "176:     impl Reader<'_> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:         }",
          "192:     }",
          "",
          "[Removed Lines]",
          "194:     impl<'a> io::Read for Reader<'a> {",
          "",
          "[Added Lines]",
          "194:     impl io::Read for Reader<'_> {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276:         }",
          "277:     }",
          "",
          "[Removed Lines]",
          "279:     impl<'a> io::Write for Writer<'a> {",
          "",
          "[Added Lines]",
          "279:     impl io::Write for Writer<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/conn/unbuffered.rs||rustls/src/conn/unbuffered.rs": [
          "File: rustls/src/conn/unbuffered.rs -> rustls/src/conn/unbuffered.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:     }",
          "246: }",
          "249:     fn from(v: EncodeTlsData<'c, Data>) -> Self {",
          "250:         Self::EncodeTlsData(v)",
          "251:     }",
          "252: }",
          "255:     fn from(v: TransmitTlsData<'c, Data>) -> Self {",
          "256:         Self::TransmitTlsData(v)",
          "257:     }",
          "",
          "[Removed Lines]",
          "248: impl<'c, 'i, Data> From<EncodeTlsData<'c, Data>> for ConnectionState<'c, 'i, Data> {",
          "254: impl<'c, 'i, Data> From<TransmitTlsData<'c, Data>> for ConnectionState<'c, 'i, Data> {",
          "",
          "[Added Lines]",
          "248: impl<'c, Data> From<EncodeTlsData<'c, Data>> for ConnectionState<'c, '_, Data> {",
          "254: impl<'c, Data> From<TransmitTlsData<'c, Data>> for ConnectionState<'c, '_, Data> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "354:     }",
          "355: }",
          "360:     pub fn next_record(&mut self) -> Option<Result<AppDataRecord<'_>, Error>> {",
          "",
          "[Removed Lines]",
          "357: impl<'c, 'i> ReadEarlyData<'c, 'i, ServerConnectionData> {",
          "",
          "[Added Lines]",
          "357: impl ReadEarlyData<'_, '_, ServerConnectionData> {",
          "",
          "---------------"
        ],
        "rustls/src/crypto/tls12.rs||rustls/src/crypto/tls12.rs": [
          "File: rustls/src/crypto/tls12.rs -> rustls/src/crypto/tls12.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: pub struct PrfUsingHmac<'a>(pub &'a dyn hmac::Hmac);",
          "11:     fn for_key_exchange(",
          "12:         &self,",
          "13:         output: &mut [u8; 48],",
          "",
          "[Removed Lines]",
          "10: impl<'a> Prf for PrfUsingHmac<'a> {",
          "",
          "[Added Lines]",
          "10: impl Prf for PrfUsingHmac<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/crypto/tls13.rs||rustls/src/crypto/tls13.rs": [
          "File: rustls/src/crypto/tls13.rs -> rustls/src/crypto/tls13.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: pub struct HkdfUsingHmac<'a>(pub &'a dyn hmac::Hmac);",
          "55:     fn extract_from_zero_ikm(&self, salt: Option<&[u8]>) -> Box<dyn HkdfExpander> {",
          "56:         let zeroes = [0u8; hmac::Tag::MAX_LEN];",
          "57:         Box::new(HkdfExpanderUsingHmac(self.0.with_key(",
          "",
          "[Removed Lines]",
          "54: impl<'a> Hkdf for HkdfUsingHmac<'a> {",
          "",
          "[Added Lines]",
          "54: impl Hkdf for HkdfUsingHmac<'_> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:     }",
          "78: }",
          "81:     fn extract_prk_from_secret(&self, salt: Option<&[u8]>, secret: &[u8]) -> Vec<u8> {",
          "82:         let zeroes = [0u8; hmac::Tag::MAX_LEN];",
          "83:         let salt = match salt {",
          "",
          "[Removed Lines]",
          "80: impl<'a> HkdfPrkExtract for HkdfUsingHmac<'a> {",
          "",
          "[Added Lines]",
          "80: impl HkdfPrkExtract for HkdfUsingHmac<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/base.rs||rustls/src/msgs/base.rs": [
          "File: rustls/src/msgs/base.rs -> rustls/src/msgs/base.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: #[derive(Clone, Eq, PartialEq)]",
          "84: pub(crate) struct PayloadU24<'a>(pub(crate) Payload<'a>);",
          "87:     pub(crate) fn into_owned(self) -> PayloadU24<'static> {",
          "88:         PayloadU24(self.0.into_owned())",
          "89:     }",
          "",
          "[Removed Lines]",
          "86: impl<'a> PayloadU24<'a> {",
          "",
          "[Added Lines]",
          "86: impl PayloadU24<'_> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:     }",
          "104: }",
          "107:     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
          "108:         self.0.fmt(f)",
          "109:     }",
          "",
          "[Removed Lines]",
          "106: impl<'a> fmt::Debug for PayloadU24<'a> {",
          "",
          "[Added Lines]",
          "106: impl fmt::Debug for PayloadU24<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/codec.rs||rustls/src/msgs/codec.rs": [
          "File: rustls/src/msgs/codec.rs -> rustls/src/msgs/codec.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:     }",
          "294: }",
          "298:     fn drop(&mut self) {",
          "299:         match self.size_len {",
          "",
          "[Removed Lines]",
          "296: impl<'a> Drop for LengthPrefixedBuffer<'a> {",
          "",
          "[Added Lines]",
          "296: impl Drop for LengthPrefixedBuffer<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/deframer/handshake.rs||rustls/src/msgs/deframer/handshake.rs": [
          "File: rustls/src/msgs/deframer/handshake.rs -> rustls/src/msgs/deframer/handshake.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     index: usize,",
          "299: }",
          "302:     type Item = (InboundPlainMessage<'b>, usize);",
          "304:     fn next(&mut self) -> Option<Self::Item> {",
          "",
          "[Removed Lines]",
          "301: impl<'a, 'b> Iterator for HandshakeIter<'a, 'b> {",
          "",
          "[Added Lines]",
          "301: impl<'b> Iterator for HandshakeIter<'_, 'b> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/fragmenter.rs||rustls/src/msgs/fragmenter.rs": [
          "File: rustls/src/msgs/fragmenter.rs -> rustls/src/msgs/fragmenter.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:     }",
          "97: }",
          "100:     fn len(&self) -> usize {",
          "101:         (self.payload.len() + self.limit - 1) / self.limit",
          "102:     }",
          "",
          "[Removed Lines]",
          "99: impl<'a> ExactSizeIterator for Chunker<'a> {",
          "",
          "[Added Lines]",
          "99: impl ExactSizeIterator for Chunker<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/handshake.rs||rustls/src/msgs/handshake.rs": [
          "File: rustls/src/msgs/handshake.rs -> rustls/src/msgs/handshake.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "1464:     Unknown(UnknownExtension),",
          "1465: }",
          "1468:     pub(crate) fn ext_type(&self) -> ExtensionType {",
          "1469:         match *self {",
          "1470:             Self::CertificateStatus(_) => ExtensionType::StatusRequest,",
          "",
          "[Removed Lines]",
          "1467: impl<'a> CertificateExtension<'a> {",
          "",
          "[Added Lines]",
          "1467: impl CertificateExtension<'_> {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1516:     }",
          "1517: }",
          "1520:     const SIZE_LEN: ListLength = ListLength::U16;",
          "1521: }",
          "",
          "[Removed Lines]",
          "1519: impl<'a> TlsListElement for CertificateExtension<'a> {",
          "",
          "[Added Lines]",
          "1519: impl TlsListElement for CertificateExtension<'_> {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1581:     }",
          "1582: }",
          "1585:     const SIZE_LEN: ListLength = ListLength::U24 {",
          "1586:         max: CERTIFICATE_MAX_SIZE_LIMIT,",
          "1587:         error: InvalidMessage::CertificatePayloadTooLarge,",
          "",
          "[Removed Lines]",
          "1584: impl<'a> TlsListElement for CertificateEntry<'a> {",
          "",
          "[Added Lines]",
          "1584: impl TlsListElement for CertificateEntry<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/msgs/message/inbound.rs||rustls/src/msgs/message/inbound.rs": [
          "File: rustls/src/msgs/message/inbound.rs -> rustls/src/msgs/message/inbound.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     }",
          "74: }",
          "77:     fn deref_mut(&mut self) -> &mut Self::Target {",
          "78:         self.0",
          "79:     }",
          "",
          "[Removed Lines]",
          "76: impl<'a> DerefMut for BorrowedPayload<'a> {",
          "",
          "[Added Lines]",
          "76: impl DerefMut for BorrowedPayload<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/server/common.rs||rustls/src/server/common.rs": [
          "File: rustls/src/server/common.rs -> rustls/src/server/common.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     ocsp: Option<&'a [u8]>,",
          "9: }",
          "12:     pub(super) fn from_certified_key(key: &sign::CertifiedKey) -> ActiveCertifiedKey<'_> {",
          "13:         ActiveCertifiedKey {",
          "14:             key,",
          "",
          "[Removed Lines]",
          "11: impl<'a> ActiveCertifiedKey<'a> {",
          "",
          "[Added Lines]",
          "11: impl ActiveCertifiedKey<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/server/server_conn.rs||rustls/src/server/server_conn.rs": [
          "File: rustls/src/server/server_conn.rs -> rustls/src/server/server_conn.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:         }",
          "541:     }",
          "544:         fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {",
          "545:             self.early_data.read(buf)",
          "546:         }",
          "",
          "[Removed Lines]",
          "543:     impl<'a> io::Read for ReadEarlyData<'a> {",
          "",
          "[Added Lines]",
          "543:     impl io::Read for ReadEarlyData<'_> {",
          "",
          "---------------"
        ],
        "rustls/src/webpki/verify.rs||rustls/src/webpki/verify.rs": [
          "File: rustls/src/webpki/verify.rs -> rustls/src/webpki/verify.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: pub struct ParsedCertificate<'a>(pub(crate) webpki::EndEntityCert<'a>);",
          "133:     pub fn subject_public_key_info(&self) -> SubjectPublicKeyInfoDer<'static> {",
          "134:         self.0.subject_public_key_info()",
          "",
          "[Removed Lines]",
          "131: impl<'a> ParsedCertificate<'a> {",
          "",
          "[Added Lines]",
          "131: impl ParsedCertificate<'_> {",
          "",
          "---------------"
        ],
        "rustls/tests/api.rs||rustls/tests/api.rs": [
          "File: rustls/tests/api.rs -> rustls/tests/api.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "2108:     }",
          "2109: }",
          "2112: where",
          "2113:     C: DerefMut + Deref<Target = ConnectionCommon<S>>,",
          "2114:     S: SideData,",
          "",
          "[Removed Lines]",
          "2111: impl<'a, C, S> io::Read for OtherSession<'a, C, S>",
          "",
          "[Added Lines]",
          "2111: impl<C, S> io::Read for OtherSession<'_, C, S>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2119:     }",
          "2120: }",
          "2123: where",
          "2124:     C: DerefMut + Deref<Target = ConnectionCommon<S>>,",
          "2125:     S: SideData,",
          "",
          "[Removed Lines]",
          "2122: impl<'a, C, S> io::Write for OtherSession<'a, C, S>",
          "",
          "[Added Lines]",
          "2122: impl<C, S> io::Write for OtherSession<'_, C, S>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7298: struct FakeStream<'a>(&'a [u8]);",
          "7301:     fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {",
          "7302:         let take = core::cmp::min(b.len(), self.0.len());",
          "7303:         let (taken, remain) = self.0.split_at(take);",
          "",
          "[Removed Lines]",
          "7300: impl<'a> io::Read for FakeStream<'a> {",
          "",
          "[Added Lines]",
          "7300: impl io::Read for FakeStream<'_> {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7307:     }",
          "7308: }",
          "7311:     fn write(&mut self, b: &[u8]) -> io::Result<usize> {",
          "7312:         Ok(b.len())",
          "7313:     }",
          "",
          "[Removed Lines]",
          "7310: impl<'a> io::Write for FakeStream<'a> {",
          "",
          "[Added Lines]",
          "7310: impl io::Write for FakeStream<'_> {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20f35dfb6d3c353294c562723d4cb6639a8bd01b",
      "candidate_info": {
        "commit_hash": "20f35dfb6d3c353294c562723d4cb6639a8bd01b",
        "repo": "rustls/rustls",
        "commit_url": "https://github.com/rustls/rustls/commit/20f35dfb6d3c353294c562723d4cb6639a8bd01b",
        "files": [
          "rustls/tests/api.rs"
        ],
        "message": "Regression test for `complete_io` infinite loop bug",
        "before_after_code_files": [
          "rustls/tests/api.rs||rustls/tests/api.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ],
          "candidate": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ]
        }
      },
      "candidate_diff": {
        "rustls/tests/api.rs||rustls/tests/api.rs": [
          "File: rustls/tests/api.rs -> rustls/tests/api.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "4946:         ClientStorageOp::RemoveTls12Session(_)",
          "4947:     ));",
          "4948: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4950: #[test]",
          "4951: fn test_complete_io_errors_if_close_notify_received_too_early() {",
          "4952:     let mut server = ServerConnection::new(Arc::new(make_server_config(KeyType::Rsa))).unwrap();",
          "4953:     let client_hello_followed_by_close_notify_alert = b\"\\",
          "4954:         \\x16\\x03\\x01\\x00\\xc8\\x01\\x00\\x00\\xc4\\x03\\x03\\xec\\x12\\xdd\\x17\\x64\\",
          "4955:         \\xa4\\x39\\xfd\\x7e\\x8c\\x85\\x46\\xb8\\x4d\\x1e\\xa0\\x6e\\xb3\\xd7\\xa0\\x51\\",
          "4956:         \\xf0\\x3c\\xb8\\x17\\x47\\x0d\\x4c\\x54\\xc5\\xdf\\x72\\x00\\x00\\x1c\\xea\\xea\\",
          "4957:         \\xc0\\x2b\\xc0\\x2f\\xc0\\x2c\\xc0\\x30\\xcc\\xa9\\xcc\\xa8\\xc0\\x13\\xc0\\x14\\",
          "4958:         \\x00\\x9c\\x00\\x9d\\x00\\x2f\\x00\\x35\\x00\\x0a\\x01\\x00\\x00\\x7f\\xda\\xda\\",
          "4959:         \\x00\\x00\\xff\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x16\\x00\\x14\\x00\\x00\\x11\\",
          "4960:         \\x77\\x77\\x77\\x2e\\x77\\x69\\x6b\\x69\\x70\\x65\\x64\\x69\\x61\\x2e\\x6f\\x72\\",
          "4961:         \\x67\\x00\\x17\\x00\\x00\\x00\\x23\\x00\\x00\\x00\\x0d\\x00\\x14\\x00\\x12\\x04\\",
          "4962:         \\x03\\x08\\x04\\x04\\x01\\x05\\x03\\x08\\x05\\x05\\x01\\x08\\x06\\x06\\x01\\x02\\",
          "4963:         \\x01\\x00\\x05\\x00\\x05\\x01\\x00\\x00\\x00\\x00\\x00\\x12\\x00\\x00\\x00\\x10\\",
          "4964:         \\x00\\x0e\\x00\\x0c\\x02\\x68\\x32\\x08\\x68\\x74\\x74\\x70\\x2f\\x31\\x2e\\x31\\",
          "4965:         \\x75\\x50\\x00\\x00\\x00\\x0b\\x00\\x02\\x01\\x00\\x00\\x0a\\x00\\x0a\\x00\\x08\\",
          "4966:         \\x1a\\x1a\\x00\\x1d\\x00\\x17\\x00\\x18\\x1a\\x1a\\x00\\x01\\x00\\",
          "4967:         \\x15\\x03\\x03\\x00\\x02\\x01\\x00\";",
          "4969:     let mut stream = FakeStream(client_hello_followed_by_close_notify_alert);",
          "4970:     assert_eq!(",
          "4971:         server",
          "4972:             .complete_io(&mut stream)",
          "4973:             .unwrap_err()",
          "4974:             .kind(),",
          "4975:         io::ErrorKind::UnexpectedEof",
          "4976:     );",
          "4977: }",
          "4979: struct FakeStream<'a>(&'a [u8]);",
          "4981: impl<'a> io::Read for FakeStream<'a> {",
          "4982:     fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {",
          "4983:         let take = core::cmp::min(b.len(), self.0.len());",
          "4984:         let (taken, remain) = self.0.split_at(take);",
          "4985:         b[..take].copy_from_slice(taken);",
          "4986:         self.0 = remain;",
          "4987:         Ok(take)",
          "4988:     }",
          "4989: }",
          "4991: impl<'a> io::Write for FakeStream<'a> {",
          "4992:     fn write(&mut self, b: &[u8]) -> io::Result<usize> {",
          "4993:         Ok(b.len())",
          "4994:     }",
          "4996:     fn flush(&mut self) -> io::Result<()> {",
          "4997:         Ok(())",
          "4998:     }",
          "4999: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00e695d68d77acf79e973271c57054139c21f9ba",
      "candidate_info": {
        "commit_hash": "00e695d68d77acf79e973271c57054139c21f9ba",
        "repo": "rustls/rustls",
        "commit_url": "https://github.com/rustls/rustls/commit/00e695d68d77acf79e973271c57054139c21f9ba",
        "files": [
          "rustls/tests/api.rs"
        ],
        "message": "Regression test for `complete_io` infinite loop bug",
        "before_after_code_files": [
          "rustls/tests/api.rs||rustls/tests/api.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ],
          "candidate": [
            "rustls/tests/api.rs||rustls/tests/api.rs"
          ]
        }
      },
      "candidate_diff": {
        "rustls/tests/api.rs||rustls/tests/api.rs": [
          "File: rustls/tests/api.rs -> rustls/tests/api.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "5825:         ClientStorageOp::RemoveTls12Session(_)",
          "5826:     ));",
          "5827: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5829: #[test]",
          "5830: fn test_complete_io_errors_if_close_notify_received_too_early() {",
          "5831:     let mut server = ServerConnection::new(Arc::new(make_server_config(KeyType::Rsa))).unwrap();",
          "5832:     let client_hello_followed_by_close_notify_alert = b\"\\",
          "5833:         \\x16\\x03\\x01\\x00\\xc8\\x01\\x00\\x00\\xc4\\x03\\x03\\xec\\x12\\xdd\\x17\\x64\\",
          "5834:         \\xa4\\x39\\xfd\\x7e\\x8c\\x85\\x46\\xb8\\x4d\\x1e\\xa0\\x6e\\xb3\\xd7\\xa0\\x51\\",
          "5835:         \\xf0\\x3c\\xb8\\x17\\x47\\x0d\\x4c\\x54\\xc5\\xdf\\x72\\x00\\x00\\x1c\\xea\\xea\\",
          "5836:         \\xc0\\x2b\\xc0\\x2f\\xc0\\x2c\\xc0\\x30\\xcc\\xa9\\xcc\\xa8\\xc0\\x13\\xc0\\x14\\",
          "5837:         \\x00\\x9c\\x00\\x9d\\x00\\x2f\\x00\\x35\\x00\\x0a\\x01\\x00\\x00\\x7f\\xda\\xda\\",
          "5838:         \\x00\\x00\\xff\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x16\\x00\\x14\\x00\\x00\\x11\\",
          "5839:         \\x77\\x77\\x77\\x2e\\x77\\x69\\x6b\\x69\\x70\\x65\\x64\\x69\\x61\\x2e\\x6f\\x72\\",
          "5840:         \\x67\\x00\\x17\\x00\\x00\\x00\\x23\\x00\\x00\\x00\\x0d\\x00\\x14\\x00\\x12\\x04\\",
          "5841:         \\x03\\x08\\x04\\x04\\x01\\x05\\x03\\x08\\x05\\x05\\x01\\x08\\x06\\x06\\x01\\x02\\",
          "5842:         \\x01\\x00\\x05\\x00\\x05\\x01\\x00\\x00\\x00\\x00\\x00\\x12\\x00\\x00\\x00\\x10\\",
          "5843:         \\x00\\x0e\\x00\\x0c\\x02\\x68\\x32\\x08\\x68\\x74\\x74\\x70\\x2f\\x31\\x2e\\x31\\",
          "5844:         \\x75\\x50\\x00\\x00\\x00\\x0b\\x00\\x02\\x01\\x00\\x00\\x0a\\x00\\x0a\\x00\\x08\\",
          "5845:         \\x1a\\x1a\\x00\\x1d\\x00\\x17\\x00\\x18\\x1a\\x1a\\x00\\x01\\x00\\",
          "5846:         \\x15\\x03\\x03\\x00\\x02\\x01\\x00\";",
          "5848:     let mut stream = FakeStream(client_hello_followed_by_close_notify_alert);",
          "5849:     assert_eq!(",
          "5850:         server",
          "5851:             .complete_io(&mut stream)",
          "5852:             .unwrap_err()",
          "5853:             .kind(),",
          "5854:         io::ErrorKind::UnexpectedEof",
          "5855:     );",
          "5856: }",
          "5858: struct FakeStream<'a>(&'a [u8]);",
          "5860: impl<'a> io::Read for FakeStream<'a> {",
          "5861:     fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {",
          "5862:         let take = core::cmp::min(b.len(), self.0.len());",
          "5863:         let (taken, remain) = self.0.split_at(take);",
          "5864:         b[..take].copy_from_slice(taken);",
          "5865:         self.0 = remain;",
          "5866:         Ok(take)",
          "5867:     }",
          "5868: }",
          "5870: impl<'a> io::Write for FakeStream<'a> {",
          "5871:     fn write(&mut self, b: &[u8]) -> io::Result<usize> {",
          "5872:         Ok(b.len())",
          "5873:     }",
          "5875:     fn flush(&mut self) -> io::Result<()> {",
          "5876:         Ok(())",
          "5877:     }",
          "5878: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}