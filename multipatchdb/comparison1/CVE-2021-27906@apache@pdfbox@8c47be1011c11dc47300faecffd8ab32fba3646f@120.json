{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e97bc3a30e47594ddb0db50154ff009ea0c2ef71",
      "candidate_info": {
        "commit_hash": "e97bc3a30e47594ddb0db50154ff009ea0c2ef71",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e97bc3a30e47594ddb0db50154ff009ea0c2ef71",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ],
        "message": "PDFBOX-5190: abort parsing a corrupt COSArray to avoid an infinite loop/stack overflow\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889741 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:     private boolean parseCOSDictionaryNameValuePair(COSDictionary obj) throws IOException",
          "286:     {",
          "287:         COSName key = parseCOSName();",
          "293:         COSBase value = parseCOSDictionaryValue();",
          "294:         skipSpaces();",
          "295:         if (value == null)",
          "",
          "[Removed Lines]",
          "288:         if (key == null)",
          "289:         {",
          "290:             LOG.warn(\"Empty COSName at offset \" + seqSource.getPosition());",
          "291:             return false;",
          "292:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "657:             else",
          "658:             {",
          "665:                 String isThisTheEnd = readString();",
          "666:                 seqSource.unread(isThisTheEnd.getBytes(ISO_8859_1));",
          "667:                 if(ENDOBJ_STRING.equals(isThisTheEnd) || ENDSTREAM_STRING.equals(isThisTheEnd))",
          "668:                 {",
          "669:                     return po;",
          "",
          "[Removed Lines]",
          "660:                 LOG.warn(\"Corrupt object reference at offset \" +",
          "661:                         seqSource.getPosition() + \", start offset: \" + startPosition);",
          "",
          "[Added Lines]",
          "655:                 LOG.warn(\"Corrupt array element at offset \"",
          "656:                         + seqSource.getPosition() + \", start offset: \" + startPosition);",
          "660:                 if (isThisTheEnd.isEmpty() && seqSource.peek() == '[')",
          "661:                 {",
          "662:                     return po;",
          "663:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd14ad83b95ea7e7c5323e7fd34db955156b2d60",
      "candidate_info": {
        "commit_hash": "cd14ad83b95ea7e7c5323e7fd34db955156b2d60",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cd14ad83b95ea7e7c5323e7fd34db955156b2d60",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java"
        ],
        "message": "PDFBOX-5055: remove public from interface methods, as suggested by Arturo Bernal\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884697 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/PDDocumentFixup.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: public interface PDDocumentFixup",
          "20: {",
          "22: }",
          "",
          "[Removed Lines]",
          "21:     public void apply();",
          "",
          "[Added Lines]",
          "21:     void apply();",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fixup/processor/PDDocumentProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: public interface PDDocumentProcessor",
          "20: {",
          "22: }",
          "",
          "[Removed Lines]",
          "21:     public void process();",
          "",
          "[Added Lines]",
          "21:     void process();",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/ScriptingHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript;",
          "",
          "[Removed Lines]",
          "20: public interface ScriptingHandler {",
          "",
          "[Added Lines]",
          "20: public interface ScriptingHandler",
          "21: {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "28:     public String keyboard(PDActionJavaScript javaScriptAction, String value);",
          "",
          "[Added Lines]",
          "29:     String keyboard(PDActionJavaScript javaScriptAction, String value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "37:     public String format(PDActionJavaScript javaScriptAction, String value);",
          "",
          "[Added Lines]",
          "38:     String format(PDActionJavaScript javaScriptAction, String value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "46:     public boolean validate(PDActionJavaScript javaScriptAction, String value);",
          "",
          "[Added Lines]",
          "47:     boolean validate(PDActionJavaScript javaScriptAction, String value);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "56: }",
          "",
          "[Removed Lines]",
          "55:     public String calculate(PDActionJavaScript javaScriptAction, String value);",
          "",
          "[Added Lines]",
          "56:     String calculate(PDActionJavaScript javaScriptAction, String value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "503d712ad1fb8505c7f6c660fbc59748debbc4f1",
      "candidate_info": {
        "commit_hash": "503d712ad1fb8505c7f6c660fbc59748debbc4f1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/503d712ad1fb8505c7f6c660fbc59748debbc4f1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java"
        ],
        "message": "PDFBOX-5164: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889065 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java"
        ]
      }
    },
    {
      "candidate_hash": "f1ae52727d013abbf8d58d45e7ef72b72915f101",
      "candidate_info": {
        "commit_hash": "f1ae52727d013abbf8d58d45e7ef72b72915f101",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f1ae52727d013abbf8d58d45e7ef72b72915f101",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java"
        ],
        "message": "PDFBOX-5236: add assertion to test case, sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891444 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:         PDPage page = new PDPage();",
          "192:         doc.addPage(page);",
          "193:         PDPageContentStream contentStream = new PDPageContentStream(doc, page);",
          "209:         contentStream.close();",
          "210:     }",
          "",
          "[Removed Lines]",
          "194:         contentStream.beginText();",
          "196:         contentStream.setLineCapStyle(0);",
          "198:         contentStream.setLineJoinStyle(0);",
          "200:         contentStream.setLineWidth(10f);",
          "202:         contentStream.setLineDashPattern(new float[] { 2, 1 }, 0f);",
          "204:         contentStream.setMiterLimit(1.0f);",
          "206:         contentStream.setGraphicsStateParameters(new PDExtendedGraphicsState());",
          "208:         contentStream.endText();",
          "",
          "[Added Lines]",
          "194:         try",
          "195:         {",
          "196:             contentStream.beginText();",
          "198:             contentStream.setLineCapStyle(0);",
          "200:             contentStream.setLineJoinStyle(0);",
          "202:             contentStream.setLineWidth(10f);",
          "204:             contentStream.setLineDashPattern(new float[] { 2, 1 }, 0f);",
          "206:             contentStream.setMiterLimit(1.0f);",
          "208:             contentStream.setGraphicsStateParameters(new PDExtendedGraphicsState());",
          "210:             contentStream.endText();",
          "211:         }",
          "212:         catch (IllegalArgumentException exception)",
          "213:         {",
          "214:             fail(exception.getCause().getMessage());",
          "215:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a55fb8ac7c9a8acfead63d6757279af88c51191a",
      "candidate_info": {
        "commit_hash": "a55fb8ac7c9a8acfead63d6757279af88c51191a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a55fb8ac7c9a8acfead63d6757279af88c51191a",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java"
        ],
        "message": "PDFBOX-4892: use parametrized constructor, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887267 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/cert/CertificateVerifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:                 throw new CertificateVerificationException(\"The certificate is self-signed.\");",
          "114:             }",
          "",
          "[Removed Lines]",
          "116:             Set<X509Certificate> certSet = new HashSet<X509Certificate>();",
          "117:             certSet.addAll(additionalCerts);",
          "",
          "[Added Lines]",
          "116:             Set<X509Certificate> certSet = new HashSet<X509Certificate>(additionalCerts);",
          "",
          "---------------"
        ]
      }
    }
  ]
}