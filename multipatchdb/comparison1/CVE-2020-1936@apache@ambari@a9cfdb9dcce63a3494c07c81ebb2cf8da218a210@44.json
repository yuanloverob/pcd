{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c2bc7abd66cf7c5930a52b192196d8cc2ffdbbf",
      "candidate_info": {
        "commit_hash": "3c2bc7abd66cf7c5930a52b192196d8cc2ffdbbf",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/3c2bc7abd66cf7c5930a52b192196d8cc2ffdbbf",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ],
        "message": "AMBARI-24784. Ambari-agent cannot register sometimes (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py": [
          "File: ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py -> ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:         self.commands_for_component_in_progress[cluster_id][command['role']] += 1",
          "416:         incremented_commands_for_component = True",
          "421:       for py_file, current_base_dir in filtered_py_file_list:",
          "422:         log_info_on_failure = command_name not in self.DONT_DEBUG_FAILURES_FOR_COMMANDS",
          "",
          "[Removed Lines]",
          "418:         # reset status which was reported, so agent re-reports it after command finished",
          "419:         self.initializer_module.component_status_executor.reported_component_status[cluster_id][command['role']]['STATUS'] = None",
          "",
          "[Added Lines]",
          "418:         if 'serviceName' in command:",
          "419:           service_component_name = command['serviceName'] + \"/\" + command['role']",
          "420:           # reset status which was reported, so agent re-reports it after command finished",
          "421:           self.initializer_module.component_status_executor.reported_component_status[cluster_id][service_component_name]['STATUS'] = None",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81aa4dbc7b6fd086af28e9f6c70ef5616b478f63",
      "candidate_info": {
        "commit_hash": "81aa4dbc7b6fd086af28e9f6c70ef5616b478f63",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/81aa4dbc7b6fd086af28e9f6c70ef5616b478f63",
        "files": [
          "ambari-agent/src/main/package/deb/control/preinst",
          "ambari-agent/src/main/package/rpm/preinstall.sh",
          "ambari-server/src/main/package/deb/control/preinst",
          "ambari-server/src/main/package/rpm/preinstall.sh",
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ],
        "message": "AMBARI-24488. Ambari Server Upgrade is failing with IndexError: tuple index out of range while running ambari-server upgrade command. (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/package/rpm/preinstall.sh||ambari-agent/src/main/package/rpm/preinstall.sh",
          "ambari-server/src/main/package/rpm/preinstall.sh||ambari-server/src/main/package/rpm/preinstall.sh",
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/package/rpm/preinstall.sh||ambari-agent/src/main/package/rpm/preinstall.sh": [
          "File: ambari-agent/src/main/package/rpm/preinstall.sh -> ambari-agent/src/main/package/rpm/preinstall.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: sudoers:Please restore the file if you were using it for ambari-agent non-root functionality:${sudoers_dir}/ambari-agent:${sudoers_dir}/ambari-agent.bak\"",
          "28:   echo \"${backup_folders}\" | while IFS=: read title notes source target; do",
          "30:       echo -n \"Moving ${title}: ${source} -> ${target}\"",
          "32:       if [ ! -z ${notes} ]; then",
          "",
          "[Removed Lines]",
          "29:     if [ -d \"${source}\" ] || [ -f \"${source}\" ]; then",
          "",
          "[Added Lines]",
          "29:     if [ -e \"${source}\" ]; then",
          "",
          "---------------"
        ],
        "ambari-server/src/main/package/rpm/preinstall.sh||ambari-server/src/main/package/rpm/preinstall.sh": [
          "File: ambari-server/src/main/package/rpm/preinstall.sh -> ambari-server/src/main/package/rpm/preinstall.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   # data format:  \"title:source:destination\"; each new record on new line",
          "31:   local backup_folders=\"configs:${etc_dir}/conf.save:${etc_dir}/conf_$(date '+%d_%m_%y_%H_%M').save",
          "33: Ambari properties:${var_dir}/ambari-env.sh:${var_dir}/ambari-env.sh.rpmsave",
          "34: JAAS login file:${etc_dir}/conf/krb5JAASLogin.conf:${etc_dir}/conf/krb5JAASLogin.conf.rpmsave",
          "35: stacks directory:${var_dir}/resources/stacks:${stacks_backup_folder}",
          "36: common-services directory:${var_dir}/resources/common-services:${common_service_backup_folder}\"",
          "38:  echo \"${backup_folders}\"| while IFS=: read title source destination; do",
          "40:      echo \"Backing up ${title}: ${source} -> ${destination}\"",
          "41:      mv -f \"${source}\" \"${destination}\"",
          "42:    fi",
          "",
          "[Removed Lines]",
          "32: Ambari properties:${etc_dir}/conf/ambari.properties:${etc_dir}/conf/ambari.propertie.rpmsave",
          "39:    if [ -d \"${source}\" ]; then",
          "",
          "[Added Lines]",
          "32: Ambari properties:${etc_dir}/conf/ambari.properties:${etc_dir}/conf/ambari.properties.rpmsave",
          "39:    if [ -e \"${source}\" ]; then",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:   done",
          "104: }",
          "",
          "[Removed Lines]",
          "106: do_backups",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py": [
          "File: ambari-server/src/main/python/ambari_server/serverConfiguration.py -> ambari-server/src/main/python/ambari_server/serverConfiguration.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "840:     if properties == -1:",
          "841:       err = \"Error getting ambari properties\"",
          "842:       raise FatalException(-1, err)",
          "844:     properties.process_pair(JDBC_DATABASE_NAME_PROPERTY, configDefaults.DEFAULT_DB_NAME)",
          "845:     conf_file = find_properties_file()",
          "846:     try:",
          "",
          "[Removed Lines]",
          "843:     print_warning_msg(\"{0} property isn't set in {1} . Setting it to default value - {3}\".format(JDBC_DATABASE_NAME_PROPERTY, AMBARI_PROPERTIES_FILE, configDefaults.DEFAULT_DB_NAME))",
          "",
          "[Added Lines]",
          "843:     print_warning_msg(\"{0} property isn't set in {1} . Setting it to default value - {2}\".format(JDBC_DATABASE_NAME_PROPERTY, AMBARI_PROPERTIES_FILE, configDefaults.DEFAULT_DB_NAME))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57f13ae1a21c623eaec8a7727ca01bd74cdef7d3",
      "candidate_info": {
        "commit_hash": "57f13ae1a21c623eaec8a7727ca01bd74cdef7d3",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/57f13ae1a21c623eaec8a7727ca01bd74cdef7d3",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java"
        ],
        "message": "[AMBARI-25297] : Host names array to string conversion improvement (Backport to branch-2.7) (#3004)\n\n* [AMBARI-25297] : Host names array to string conversion improvement (Backport to branch-2.7)\n\n* minor changes",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java||ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java||ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java||ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java -> ambari-server/src/main/java/org/apache/ambari/server/bootstrap/BSRunner.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import org.apache.ambari.server.bootstrap.BootStrapStatus.BSStat;",
          "34: import org.apache.commons.io.FileUtils;",
          "35: import org.slf4j.Logger;",
          "36: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.apache.commons.lang.StringUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:   }",
          "109:   private String createHostString(List<String> list) {",
          "122:   }",
          "",
          "[Removed Lines]",
          "110:     StringBuilder ret = new StringBuilder();",
          "111:     if (list == null) {",
          "112:       return \"\";",
          "113:     }",
          "115:     int i = 0;",
          "116:     for (String host: list) {",
          "117:       ret.append(host);",
          "118:       if (i++ != list.size()-1)",
          "119:         ret.append(\",\");",
          "120:     }",
          "121:     return ret.toString();",
          "",
          "[Added Lines]",
          "111:     return list != null ? String.join(\",\", list) : StringUtils.EMPTY;",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "692:     }",
          "694:     if (!duplicates.isEmpty()) {",
          "704:       String msg;",
          "705:       if (duplicates.size() == 1) {",
          "706:         msg = \"Attempted to create a host_component which already exists: \";",
          "",
          "[Removed Lines]",
          "695:       StringBuilder names = new StringBuilder();",
          "696:       boolean first = true;",
          "697:       for (String hName : duplicates) {",
          "698:         if (!first) {",
          "699:           names.append(\",\");",
          "700:         }",
          "701:         first = false;",
          "702:         names.append(hName);",
          "703:       }",
          "",
          "[Added Lines]",
          "695:       final String names = String.join(\",\", duplicates);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java||ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/ClusterRequest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.ambari.server.controller.internal.ClusterResourceProvider;",
          "26: import org.apache.ambari.server.state.SecurityType;",
          "28: import io.swagger.annotations.ApiModelProperty;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import org.apache.commons.lang.StringUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:         .append(\", securityType=\").append(securityType)",
          "145:         .append(\", stackVersion=\").append(stackVersion)",
          "146:         .append(\", desired_scv=\").append(serviceConfigVersionRequest)",
          "159:     return sb.toString();",
          "160:   }",
          "",
          "[Removed Lines]",
          "147:         .append(\", hosts=[\");",
          "148:     if (hostNames != null) {",
          "149:       int i = 0;",
          "150:       for (String hostName : hostNames) {",
          "151:         if (i != 0) {",
          "152:           sb.append(\",\");",
          "153:         }",
          "154:         ++i;",
          "155:         sb.append(hostName);",
          "156:       }",
          "157:     }",
          "158:     sb.append(\"] }\");",
          "",
          "[Added Lines]",
          "148:         .append(\", hosts=[\")",
          "149:         .append(hostNames != null ? String.join(\",\", hostNames) : StringUtils.EMPTY)",
          "150:         .append(\"] }\");",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "510:     }",
          "512:     if (!duplicates.isEmpty()) {",
          "525:     }",
          "527:     if (!unknowns.isEmpty()) {",
          "538:       throw new IllegalArgumentException(\"Attempted to add unknown hosts to a cluster.  \" +",
          "540:     }",
          "542:     Map<String, Set<String>> hostClustersMap = new HashMap<>();",
          "",
          "[Removed Lines]",
          "513:       StringBuilder names = new StringBuilder();",
          "514:       boolean first = true;",
          "515:       for (String hName : duplicates) {",
          "516:         if (!first) {",
          "517:           names.append(\",\");",
          "518:         }",
          "519:         first = false;",
          "520:         names.append(hName);",
          "521:       }",
          "522:       throw new IllegalArgumentException(\"Invalid request contains\"",
          "523:           + \" duplicate hostnames\"",
          "524:           + \", hostnames=\" + names);",
          "528:       StringBuilder names = new StringBuilder();",
          "529:       boolean first = true;",
          "530:       for (String hName : unknowns) {",
          "531:         if (!first) {",
          "532:           names.append(\",\");",
          "533:         }",
          "534:         first = false;",
          "535:         names.append(hName);",
          "536:       }",
          "539:           \"These hosts have not been registered with the server: \" + names);",
          "",
          "[Added Lines]",
          "513:       throw new IllegalArgumentException(\"Invalid request contains duplicate hostnames\"",
          "514:               + \", hostnames=\" + String.join(\",\", duplicates));",
          "519:               \"These hosts have not been registered with the server: \" +",
          "520:               String.join(\",\", unknowns));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d564ecded8d2bbce3524ac7aad68dda5979e1efd",
      "candidate_info": {
        "commit_hash": "d564ecded8d2bbce3524ac7aad68dda5979e1efd",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/d564ecded8d2bbce3524ac7aad68dda5979e1efd",
        "files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ],
        "message": "Fix the missing brackets in datasource.js\n\nChange-Id: Ia00ac6a1c04db74346e2e822bdd6f2f7a926b81e",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:                 } else if (table.selected) {",
          "451:                   allTables.push(table.value);",
          "452:                 }",
          "454:               while (allTable.length > 0) {",
          "455:                 splitTables.push(allTable.splice(0, 20));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453:               }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28976bd70ddee9cd1c29a6630043761ccee8068c",
      "candidate_info": {
        "commit_hash": "28976bd70ddee9cd1c29a6630043761ccee8068c",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/28976bd70ddee9cd1c29a6630043761ccee8068c",
        "files": [
          "ambari-web/app/models/host_component.js"
        ],
        "message": "AMBARI-25318. Regenerate Key tabs action is missing from Service Action list",
        "before_after_code_files": [
          "ambari-web/app/models/host_component.js||ambari-web/app/models/host_component.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/models/host_component.js||ambari-web/app/models/host_component.js": [
          "File: ambari-web/app/models/host_component.js -> ambari-web/app/models/host_component.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "372:         action: 'regenerateKeytabFileOperations',",
          "373:         label: Em.I18n.t('admin.kerberos.button.regenerateKeytabs'),",
          "374:         cssClass: 'glyphicon glyphicon-repeat',",
          "376:       },",
          "377:       REFRESHQUEUES: {",
          "378:         action: 'refreshYarnQueues',",
          "",
          "[Removed Lines]",
          "375:         isHidden: !App.get('isKerberosEnabled') || Em.computed.bool('App.router.mainAdminKerberosController.isManualKerberos')",
          "",
          "[Added Lines]",
          "375:         isHidden: !App.get('isKerberosEnabled') || App.get('router.mainAdminKerberosController.isManualKerberos')",
          "",
          "---------------"
        ]
      }
    }
  ]
}