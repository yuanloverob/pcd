{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "82311475464a6f917b9dfecde76d49f2643a7b71",
      "candidate_info": {
        "commit_hash": "82311475464a6f917b9dfecde76d49f2643a7b71",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/82311475464a6f917b9dfecde76d49f2643a7b71",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java"
        ],
        "message": "PDFBOX-5204: adjust rectangle if needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890392 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.pdfbox.io.IOUtils;",
          "26: import org.apache.pdfbox.pdmodel.PDAppearanceContentStream;",
          "27: import org.apache.pdfbox.pdmodel.PDDocument;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.pdfbox.pdmodel.common.PDRectangle;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             return;",
          "65:         }",
          "67:         PDAppearanceContentStream cs = null;",
          "69:         try",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:         float minX = Float.MAX_VALUE;",
          "72:         float minY = Float.MAX_VALUE;",
          "73:         float maxX = Float.MIN_VALUE;",
          "74:         float maxY = Float.MIN_VALUE;",
          "75:         for (float[] pathArray : ink.getInkList())",
          "76:         {",
          "77:             int nPoints = pathArray.length / 2;",
          "78:             for (int i = 0; i < nPoints; ++i)",
          "79:             {",
          "80:                 float x = pathArray[i * 2];",
          "81:                 float y = pathArray[i * 2 + 1];",
          "82:                 minX = Math.min(minX, x);",
          "83:                 minY = Math.min(minY, y);",
          "84:                 maxX = Math.max(maxX, x);",
          "85:                 maxY = Math.max(maxY, y);",
          "86:             }",
          "87:         }",
          "88:         PDRectangle rect = ink.getRectangle();",
          "89:         rect.setLowerLeftX(Math.min(minX - ab.width * 2, rect.getLowerLeftX()));",
          "90:         rect.setLowerLeftY(Math.min(minY - ab.width * 2, rect.getLowerLeftY()));",
          "91:         rect.setUpperRightX(Math.max(maxX + ab.width * 2, rect.getUpperRightX()));",
          "92:         rect.setUpperRightY(Math.max(maxY + ab.width * 2, rect.getUpperRightY()));",
          "93:         ink.setRectangle(rect);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3314c3f014f9bbe8d67f9d168ec793411a61122d",
      "candidate_info": {
        "commit_hash": "3314c3f014f9bbe8d67f9d168ec793411a61122d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3314c3f014f9bbe8d67f9d168ec793411a61122d",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java"
        ],
        "message": "PDFBOX-3017: avoid NPE; refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882741 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: import org.bouncycastle.operator.OperatorCreationException;",
          "69: import org.bouncycastle.tsp.TSPException;",
          "70: import org.bouncycastle.tsp.TimeStampToken;",
          "71: import org.bouncycastle.util.CollectionStore;",
          "72: import org.bouncycastle.util.Selector;",
          "73: import org.bouncycastle.util.Store;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: import org.bouncycastle.tsp.TimeStampTokenInfo;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "352:             TSPException, NoSuchAlgorithmException, CertificateVerificationException",
          "353:     {",
          "354:         TimeStampToken timeStampToken = new TimeStampToken(new CMSSignedData(contents));",
          "358:         CertificateFactory factory = CertificateFactory.getInstance(\"X.509\");",
          "359:         ByteArrayInputStream certStream = new ByteArrayInputStream(contents);",
          "360:         Collection<? extends Certificate> certs = factory.generateCertificates(certStream);",
          "361:         System.out.println(\"certs=\" + certs);",
          "365:         if (Arrays.equals(MessageDigest.getInstance(hashAlgorithm).digest(buf),",
          "367:         {",
          "368:             System.out.println(\"ETSI.RFC3161 timestamp signature verified\");",
          "369:         }",
          "",
          "[Removed Lines]",
          "355:         System.out.println(\"Time stamp gen time: \" + timeStampToken.getTimeStampInfo().getGenTime());",
          "356:         System.out.println(\"Time stamp tsa name: \" + timeStampToken.getTimeStampInfo().getTsa().getName());",
          "363:         String hashAlgorithm = timeStampToken.getTimeStampInfo().getMessageImprintAlgOID().getId();",
          "366:                 timeStampToken.getTimeStampInfo().getMessageImprintDigest()))",
          "",
          "[Added Lines]",
          "356:         TimeStampTokenInfo timeStampInfo = timeStampToken.getTimeStampInfo();",
          "357:         System.out.println(\"Time stamp gen time: \" + timeStampInfo.getGenTime());",
          "358:         if (timeStampInfo.getTsa() != null)",
          "359:         {",
          "360:             System.out.println(\"Time stamp tsa name: \" + timeStampInfo.getTsa().getName());",
          "361:         }",
          "368:         String hashAlgorithm = timeStampInfo.getMessageImprintAlgOID().getId();",
          "371:                 timeStampInfo.getMessageImprintDigest()))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "377:         SigUtils.validateTimestampToken(timeStampToken);",
          "378:                 SigUtils.verifyCertificateChain(timeStampToken.getCertificates(),",
          "379:                 certFromTimeStamp,",
          "381:     }",
          "",
          "[Removed Lines]",
          "380:                 timeStampToken.getTimeStampInfo().getGenTime());",
          "",
          "[Added Lines]",
          "385:                 timeStampInfo.getGenTime());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d81378f5eaf0d403ddb14a132605b9ec13316183",
      "candidate_info": {
        "commit_hash": "d81378f5eaf0d403ddb14a132605b9ec13316183",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d81378f5eaf0d403ddb14a132605b9ec13316183",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java"
        ],
        "message": "PDFBOX-4892: fix typo, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889415 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java||preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java||preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java -> preflight/src/main/java/org/apache/pdfbox/preflight/PreflightDocument.java"
        ]
      }
    },
    {
      "candidate_hash": "93a66ab75399e17843b13ca752c9cd17ced2d5a0",
      "candidate_info": {
        "commit_hash": "93a66ab75399e17843b13ca752c9cd17ced2d5a0",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/93a66ab75399e17843b13ca752c9cd17ced2d5a0",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java"
        ],
        "message": "PDFBOX-5177: improve test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889177 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.IOException;",
          "20: import java.io.OutputStream;",
          "21: import org.apache.pdfbox.cos.COSBoolean;",
          "22: import org.apache.pdfbox.cos.COSInteger;",
          "23: import org.apache.pdfbox.cos.COSName;",
          "24: import org.apache.pdfbox.cos.COSStream;",
          "25: import org.junit.Assert;",
          "26: import org.junit.Test;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.List;",
          "26: import org.apache.pdfbox.cos.COSObject;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     public void testOffsetParsing() throws IOException",
          "35:     {",
          "36:         COSStream stream = new COSStream();",
          "39:         OutputStream outputStream = stream.createOutputStream();",
          "41:         outputStream.close();",
          "42:         PDFObjectStreamParser objectStreamParser = new PDFObjectStreamParser(stream, null);",
          "43:         objectStreamParser.parse();",
          "45:     }",
          "46: }",
          "",
          "[Removed Lines]",
          "37:         stream.setItem(COSName.N, COSInteger.ONE);",
          "38:         stream.setItem(COSName.FIRST, COSInteger.ZERO);",
          "40:         outputStream.write(\"0 7 -1 true\".getBytes());",
          "44:         Assert.assertEquals(COSBoolean.TRUE, objectStreamParser.getObjects().get(0).getObject());",
          "",
          "[Added Lines]",
          "40:         stream.setItem(COSName.N, COSInteger.TWO);",
          "41:         stream.setItem(COSName.FIRST, COSInteger.get(8));",
          "43:         outputStream.write(\"1 0 2 5 true false\".getBytes());",
          "47:         List<COSObject> objects = objectStreamParser.getObjects();",
          "48:         Assert.assertEquals(2, objects.size());",
          "49:         Assert.assertEquals(COSBoolean.TRUE, objects.get(0).getObject());",
          "50:         Assert.assertEquals(COSBoolean.FALSE, objects.get(1).getObject());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5007a34bc781decc5f0a6b26a7506e22513e762",
      "candidate_info": {
        "commit_hash": "a5007a34bc781decc5f0a6b26a7506e22513e762",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a5007a34bc781decc5f0a6b26a7506e22513e762",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ],
        "message": "PDFBOX-5078: make mediabox and cropbox a copy and not a reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885530 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "769:         PDStream dest = new PDStream(this, page.getContents(), COSName.FLATE_DECODE);",
          "770:         importedPage.setContents(dest);",
          "771:         addPage(importedPage);",
          "774:         importedPage.setRotation(page.getRotation());",
          "775:         if (page.getResources() != null && !page.getCOSObject().containsKey(COSName.RESOURCES))",
          "776:         {",
          "",
          "[Removed Lines]",
          "772:         importedPage.setCropBox(page.getCropBox());",
          "773:         importedPage.setMediaBox(page.getMediaBox());",
          "",
          "[Added Lines]",
          "772:         importedPage.setCropBox(new PDRectangle(page.getCropBox().getCOSArray()));",
          "773:         importedPage.setMediaBox(new PDRectangle(page.getMediaBox().getCOSArray()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}