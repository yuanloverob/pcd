{
  "cve_id": "CVE-2019-10901",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the LDSS dissector could crash. This was addressed in epan/dissectors/packet-ldss.c by handling file digests properly.",
  "repo": "wireshark/wireshark",
  "patch_hash": "6c3467945cd9bf1242a2dcd4a8fbff32b885391e",
  "patch_info": {
    "commit_hash": "6c3467945cd9bf1242a2dcd4a8fbff32b885391e",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/6c3467945cd9bf1242a2dcd4a8fbff32b885391e",
    "files": [
      "epan/dissectors/packet-ldss.c"
    ],
    "message": "ldss: add checks on file digest.\n\nBug: 15620\nChange-Id: I600c262f42414dd50c0cf4c1230acfb2a8042212\nReviewed-on: https://code.wireshark.org/review/32520\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
      "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "468:   guint offset = 0;",
      "471:   col_set_str(pinfo->cinfo, COL_INFO, \"LDSS File Transfer (Requesting file - pull)\");",
      "473:   if (transfer_info->req == NULL) {",
      "476:    transfer_info->req = wmem_new0(wmem_file_scope(), ldss_file_request_t);",
      "477:    transfer_info->req->file = wmem_new0(wmem_file_scope(), ldss_file_t);",
      "478:   }",
      "",
      "[Removed Lines]",
      "469:   gboolean already_dissected = TRUE;",
      "475:    already_dissected = FALSE;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "490:    gint next_offset;",
      "491:    const guint8 *line;",
      "492:    int linelen;",
      "496:    linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
      "",
      "[Removed Lines]",
      "493:    gboolean is_digest_line;",
      "494:    guint digest_type_len;",
      "",
      "[Added Lines]",
      "490:    guint digest_type_len = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "502:         ett_ldss_transfer_req, NULL,",
      "503:         tvb_format_text(tvb, offset, next_offset-offset));",
      "510:    if (strncmp(line,\"md5:\",4)==0) {",
      "512:     digest_type_len = 4;",
      "513:     transfer_info->file->digest_type = DIGEST_TYPE_MD5;",
      "514:    }",
      "515:    else if (strncmp(line, \"sha1:\", 5)==0) {",
      "517:     digest_type_len = 5;",
      "518:     transfer_info->file->digest_type = DIGEST_TYPE_SHA1;",
      "519:    }",
      "520:    else if (strncmp(line, \"sha256:\", 7)==0) {",
      "522:     digest_type_len = 7;",
      "523:     transfer_info->file->digest_type = DIGEST_TYPE_SHA256;",
      "524:    }",
      "525:    else if (strncmp(line, \"unknown:\", 8)==0) {",
      "527:     digest_type_len = 8;",
      "528:     transfer_info->file->digest_type = DIGEST_TYPE_UNKNOWN;",
      "529:    }",
      "",
      "[Removed Lines]",
      "508:    is_digest_line = FALSE;",
      "511:     is_digest_line = TRUE;",
      "516:     is_digest_line = TRUE;",
      "521:     is_digest_line = TRUE;",
      "526:     is_digest_line = TRUE;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "555:     proto_tree_add_expert(line_tree, pinfo, &ei_ldss_unrecognized_line, tvb, offset, linelen);",
      "556:    }",
      "559:     proto_item *tii = NULL;",
      "564:      GByteArray *digest_bytes;",
      "566:      digest_bytes = g_byte_array_new();",
      "",
      "[Removed Lines]",
      "558:    if (is_digest_line) {",
      "563:     if (!already_dissected) {",
      "",
      "[Added Lines]",
      "545:    if (digest_type_len > 0) {",
      "550:     if (!transfer_info->file->digest) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf801a25074f76dc3ae62d8ec53ace75f56ce2cd",
      "candidate_info": {
        "commit_hash": "cf801a25074f76dc3ae62d8ec53ace75f56ce2cd",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cf801a25074f76dc3ae62d8ec53ace75f56ce2cd",
        "files": [
          "epan/dissectors/packet-ldss.c"
        ],
        "message": "ldss: add checks on file digest.\n\nBug: 15620\nChange-Id: I600c262f42414dd50c0cf4c1230acfb2a8042212\nReviewed-on: https://code.wireshark.org/review/32520\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 6c3467945cd9bf1242a2dcd4a8fbff32b885391e)\nReviewed-on: https://code.wireshark.org/review/32697",
        "before_after_code_files": [
          "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
          "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:   guint offset = 0;",
          "483:   col_set_str(pinfo->cinfo, COL_INFO, \"LDSS File Transfer (Requesting file - pull)\");",
          "485:   if (transfer_info->req == NULL) {",
          "488:    transfer_info->req = wmem_new0(wmem_file_scope(), ldss_file_request_t);",
          "489:    transfer_info->req->file = wmem_new0(wmem_file_scope(), ldss_file_t);",
          "490:   }",
          "",
          "[Removed Lines]",
          "481:   gboolean already_dissected = TRUE;",
          "487:    already_dissected = FALSE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "502:    gint next_offset;",
          "503:    const guint8 *line;",
          "504:    int linelen;",
          "508:    linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "505:    gboolean is_digest_line;",
          "506:    guint digest_type_len;",
          "",
          "[Added Lines]",
          "502:    guint digest_type_len = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "514:         ett_ldss_transfer_req, NULL,",
          "515:         tvb_format_text(tvb, offset, next_offset-offset));",
          "522:    if (strncmp(line,\"md5:\",4)==0) {",
          "524:     digest_type_len = 4;",
          "525:     transfer_info->file->digest_type = DIGEST_TYPE_MD5;",
          "526:    }",
          "527:    else if (strncmp(line, \"sha1:\", 5)==0) {",
          "529:     digest_type_len = 5;",
          "530:     transfer_info->file->digest_type = DIGEST_TYPE_SHA1;",
          "531:    }",
          "532:    else if (strncmp(line, \"sha256:\", 7)==0) {",
          "534:     digest_type_len = 7;",
          "535:     transfer_info->file->digest_type = DIGEST_TYPE_SHA256;",
          "536:    }",
          "537:    else if (strncmp(line, \"unknown:\", 8)==0) {",
          "539:     digest_type_len = 8;",
          "540:     transfer_info->file->digest_type = DIGEST_TYPE_UNKNOWN;",
          "541:    }",
          "",
          "[Removed Lines]",
          "520:    is_digest_line = FALSE;",
          "523:     is_digest_line = TRUE;",
          "528:     is_digest_line = TRUE;",
          "533:     is_digest_line = TRUE;",
          "538:     is_digest_line = TRUE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "567:     proto_tree_add_expert(line_tree, pinfo, &ei_ldss_unrecognized_line, tvb, offset, linelen);",
          "568:    }",
          "571:     proto_item *tii = NULL;",
          "576:      GByteArray *digest_bytes;",
          "578:      digest_bytes = g_byte_array_new();",
          "",
          "[Removed Lines]",
          "570:    if (is_digest_line) {",
          "575:     if (!already_dissected) {",
          "",
          "[Added Lines]",
          "557:    if (digest_type_len > 0) {",
          "562:     if (!transfer_info->file->digest) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cf349ddb207629b3751db855d8a4fe95b896c6b",
      "candidate_info": {
        "commit_hash": "1cf349ddb207629b3751db855d8a4fe95b896c6b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1cf349ddb207629b3751db855d8a4fe95b896c6b",
        "files": [
          "epan/dissectors/packet-ldss.c"
        ],
        "message": "ldss: add checks on file digest.\n\nBug: 15620\nChange-Id: I600c262f42414dd50c0cf4c1230acfb2a8042212\nReviewed-on: https://code.wireshark.org/review/32520\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 6c3467945cd9bf1242a2dcd4a8fbff32b885391e)\nReviewed-on: https://code.wireshark.org/review/32695",
        "before_after_code_files": [
          "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
          "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:   guint offset = 0;",
          "471:   col_set_str(pinfo->cinfo, COL_INFO, \"LDSS File Transfer (Requesting file - pull)\");",
          "473:   if (transfer_info->req == NULL) {",
          "476:    transfer_info->req = wmem_new0(wmem_file_scope(), ldss_file_request_t);",
          "477:    transfer_info->req->file = wmem_new0(wmem_file_scope(), ldss_file_t);",
          "478:   }",
          "",
          "[Removed Lines]",
          "469:   gboolean already_dissected = TRUE;",
          "475:    already_dissected = FALSE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "490:    gint next_offset;",
          "491:    const guint8 *line;",
          "492:    int linelen;",
          "496:    linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "493:    gboolean is_digest_line;",
          "494:    guint digest_type_len;",
          "",
          "[Added Lines]",
          "490:    guint digest_type_len = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502:         ett_ldss_transfer_req, NULL,",
          "503:         tvb_format_text(tvb, offset, next_offset-offset));",
          "510:    if (strncmp(line,\"md5:\",4)==0) {",
          "512:     digest_type_len = 4;",
          "513:     transfer_info->file->digest_type = DIGEST_TYPE_MD5;",
          "514:    }",
          "515:    else if (strncmp(line, \"sha1:\", 5)==0) {",
          "517:     digest_type_len = 5;",
          "518:     transfer_info->file->digest_type = DIGEST_TYPE_SHA1;",
          "519:    }",
          "520:    else if (strncmp(line, \"sha256:\", 7)==0) {",
          "522:     digest_type_len = 7;",
          "523:     transfer_info->file->digest_type = DIGEST_TYPE_SHA256;",
          "524:    }",
          "525:    else if (strncmp(line, \"unknown:\", 8)==0) {",
          "527:     digest_type_len = 8;",
          "528:     transfer_info->file->digest_type = DIGEST_TYPE_UNKNOWN;",
          "529:    }",
          "",
          "[Removed Lines]",
          "508:    is_digest_line = FALSE;",
          "511:     is_digest_line = TRUE;",
          "516:     is_digest_line = TRUE;",
          "521:     is_digest_line = TRUE;",
          "526:     is_digest_line = TRUE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "555:     proto_tree_add_expert(line_tree, pinfo, &ei_ldss_unrecognized_line, tvb, offset, linelen);",
          "556:    }",
          "559:     proto_item *tii = NULL;",
          "564:      GByteArray *digest_bytes;",
          "566:      digest_bytes = g_byte_array_new();",
          "",
          "[Removed Lines]",
          "558:    if (is_digest_line) {",
          "563:     if (!already_dissected) {",
          "",
          "[Added Lines]",
          "545:    if (digest_type_len > 0) {",
          "550:     if (!transfer_info->file->digest) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d368eed19265cfb0c39d5cb790f88d3ec211d2ba",
      "candidate_info": {
        "commit_hash": "d368eed19265cfb0c39d5cb790f88d3ec211d2ba",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d368eed19265cfb0c39d5cb790f88d3ec211d2ba",
        "files": [
          "epan/dissectors/packet-ldss.c"
        ],
        "message": "ldss: add checks on file digest.\n\nBug: 15620\nChange-Id: I600c262f42414dd50c0cf4c1230acfb2a8042212\nReviewed-on: https://code.wireshark.org/review/32520\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 6c3467945cd9bf1242a2dcd4a8fbff32b885391e)\nReviewed-on: https://code.wireshark.org/review/32696",
        "before_after_code_files": [
          "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
          "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:   guint offset = 0;",
          "471:   col_set_str(pinfo->cinfo, COL_INFO, \"LDSS File Transfer (Requesting file - pull)\");",
          "473:   if (transfer_info->req == NULL) {",
          "476:    transfer_info->req = wmem_new0(wmem_file_scope(), ldss_file_request_t);",
          "477:    transfer_info->req->file = wmem_new0(wmem_file_scope(), ldss_file_t);",
          "478:   }",
          "",
          "[Removed Lines]",
          "469:   gboolean already_dissected = TRUE;",
          "475:    already_dissected = FALSE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "490:    gint next_offset;",
          "491:    const guint8 *line;",
          "492:    int linelen;",
          "496:    linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "493:    gboolean is_digest_line;",
          "494:    guint digest_type_len;",
          "",
          "[Added Lines]",
          "490:    guint digest_type_len = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502:         ett_ldss_transfer_req, NULL,",
          "503:         tvb_format_text(tvb, offset, next_offset-offset));",
          "510:    if (strncmp(line,\"md5:\",4)==0) {",
          "512:     digest_type_len = 4;",
          "513:     transfer_info->file->digest_type = DIGEST_TYPE_MD5;",
          "514:    }",
          "515:    else if (strncmp(line, \"sha1:\", 5)==0) {",
          "517:     digest_type_len = 5;",
          "518:     transfer_info->file->digest_type = DIGEST_TYPE_SHA1;",
          "519:    }",
          "520:    else if (strncmp(line, \"sha256:\", 7)==0) {",
          "522:     digest_type_len = 7;",
          "523:     transfer_info->file->digest_type = DIGEST_TYPE_SHA256;",
          "524:    }",
          "525:    else if (strncmp(line, \"unknown:\", 8)==0) {",
          "527:     digest_type_len = 8;",
          "528:     transfer_info->file->digest_type = DIGEST_TYPE_UNKNOWN;",
          "529:    }",
          "",
          "[Removed Lines]",
          "508:    is_digest_line = FALSE;",
          "511:     is_digest_line = TRUE;",
          "516:     is_digest_line = TRUE;",
          "521:     is_digest_line = TRUE;",
          "526:     is_digest_line = TRUE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "555:     proto_tree_add_expert(line_tree, pinfo, &ei_ldss_unrecognized_line, tvb, offset, linelen);",
          "556:    }",
          "559:     proto_item *tii = NULL;",
          "564:      GByteArray *digest_bytes;",
          "566:      digest_bytes = g_byte_array_new();",
          "",
          "[Removed Lines]",
          "558:    if (is_digest_line) {",
          "563:     if (!already_dissected) {",
          "",
          "[Added Lines]",
          "545:    if (digest_type_len > 0) {",
          "550:     if (!transfer_info->file->digest) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}