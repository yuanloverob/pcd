{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d92311c50e58dee074bbbf7fa390e592ee8df77",
      "candidate_info": {
        "commit_hash": "8d92311c50e58dee074bbbf7fa390e592ee8df77",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8d92311c50e58dee074bbbf7fa390e592ee8df77",
        "files": [
          "Configurations/unix-Makefile.tmpl",
          "doc/crypto/ASN1_STRING_print_ex.pod",
          "doc/crypto/BN_BLINDING_new.pod",
          "doc/crypto/BN_CTX_new.pod",
          "doc/crypto/BN_add.pod",
          "doc/crypto/BN_add_word.pod",
          "doc/crypto/BN_bn2bin.pod",
          "doc/crypto/BN_cmp.pod",
          "doc/crypto/BN_copy.pod",
          "doc/crypto/BN_generate_prime.pod",
          "doc/crypto/BN_mod_inverse.pod",
          "doc/crypto/BN_mod_mul_montgomery.pod",
          "doc/crypto/BN_mod_mul_reciprocal.pod",
          "doc/crypto/BN_new.pod",
          "doc/crypto/BN_num_bytes.pod",
          "doc/crypto/BN_rand.pod",
          "doc/crypto/BN_set_bit.pod",
          "doc/crypto/BN_swap.pod",
          "doc/crypto/BN_zero.pod",
          "doc/crypto/CONF_modules_load_file.pod",
          "doc/crypto/CRYPTO_get_ex_new_index.pod",
          "doc/crypto/ECPKParameters_print.pod",
          "doc/crypto/EC_GFp_simple_method.pod",
          "doc/crypto/EC_GROUP_copy.pod",
          "doc/crypto/EC_GROUP_new.pod",
          "doc/crypto/EC_KEY_get_enc_flags.pod",
          "doc/crypto/EC_KEY_new.pod",
          "doc/crypto/EC_POINT_add.pod",
          "doc/crypto/EC_POINT_new.pod",
          "doc/crypto/OPENSSL_init_crypto.pod",
          "doc/crypto/SCT_new.pod",
          "doc/crypto/SMIME_read_PKCS7.pod",
          "doc/crypto/UI_new.pod",
          "doc/crypto/X509_LOOKUP_hash_dir.pod",
          "doc/crypto/X509_digest.pod",
          "doc/crypto/ct.pod",
          "doc/crypto/d2i_PrivateKey.pod",
          "doc/crypto/x509.pod",
          "doc/ssl/SSL_CTX_set_ct_validation_callback.pod",
          "doc/ssl/SSL_CTX_set_verify.pod",
          "doc/ssl/SSL_set_bio.pod",
          "doc/ssl/ssl.pod",
          "util/find-doc-nits",
          "util/find-doc-nits.pl"
        ],
        "message": "Fix many doc L<> errors\n\nAdd 2017 copyright year\nAdd missing typedef to NAME\nRemove ec(7) and bn(7) doc links\nRemove .pod link errors, bogus links, make a few typo corrections\nFix some typo's in links and some missing items.\nDon't link to C runtime functions (See OPENSSL_malloc for example/precedent)\nDocument ASN1_tag2str(), add a few typedef's that were missing from NAME\nUpdate doc-nits target; addresses\n    https://github.com/openssl/openssl/pull/1900#issuecomment-259943891,\nMerge check-doc-links into find-doc-nits; if run regularly, would have found\n    https://github.com/openssl/openssl/pull/2825\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2862)\n(cherry picked from commit 9e183d2271653cbba2d9cf56d40c1356705207aa)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:  -$(RM) `find . -name '*{- $depext -}' -a \\! -path \"./.git/*\"`",
          "285:  -$(RM) `find . -name '*{- $objext -}' -a \\! -path \"./.git/*\"`",
          "286:  $(RM) core",
          "288:  $(RM) test/.rnd",
          "289:  $(RM) openssl.pc libcrypto.pc libssl.pc",
          "290:  -$(RM) `find . -type l -a \\! -path \"./.git/*\"`",
          "",
          "[Removed Lines]",
          "287:  $(RM) tags TAGS",
          "",
          "[Added Lines]",
          "287:  $(RM) tags TAGS doc-nits",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "581: generate: generate_apps generate_crypto_bn generate_crypto_objects \\",
          "582:           generate_crypto_conf generate_crypto_asn1",
          "584: # Test coverage is a good idea for the future",
          "585: #coverage: $(PROGRAMS) $(TESTPROGRAMS)",
          "586: # ...",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "584: doc-nits:",
          "585:  (cd $(SRCDIR); $(PERL) util/find-doc-nits.pl -n ) >doc-nits",
          "586:  if [ -s doc-nits ] ; then cat doc-nits; rm doc-nits ; exit 1; fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
      "candidate_info": {
        "commit_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "files": [
          "apps/req.c",
          "doc/apps/req.pod"
        ],
        "message": "Fix parsing of serial# in req\n\nReported by Jakub Wilk.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2556)\n(cherry picked from commit be4c82aa767998ce2a5717fc895482052373f1b1)",
        "before_after_code_files": [
          "apps/req.c||apps/req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/req.c||apps/req.c": [
          "File: apps/req.c -> apps/req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     {\"multivalue-rdn\", OPT_MULTIVALUE_RDN, '-',",
          "122:      \"Enable support for multivalued RDNs\"},",
          "123:     {\"days\", OPT_DAYS, 'p', \"Number of days cert is valid for\"},",
          "125:     {\"extensions\", OPT_EXTENSIONS, 's',",
          "126:      \"Cert extension section (override value in config file)\"},",
          "127:     {\"reqexts\", OPT_REQEXTS, 's',",
          "",
          "[Removed Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 'p', \"Serial number to use\"},",
          "",
          "[Added Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 's', \"Serial number to use\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72afe2fdc7ae856155aea0efb8a33ad8bc128233",
      "candidate_info": {
        "commit_hash": "72afe2fdc7ae856155aea0efb8a33ad8bc128233",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/72afe2fdc7ae856155aea0efb8a33ad8bc128233",
        "files": [
          "crypto/x509/x509_lu.c"
        ],
        "message": "Remove duplicate X509_OBJECT free function.\n\nThese two functions do the same thing.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3001)\n(cherry picked from commit b6ef12c4baa3a2c1ff0e3ac71270588dfcfe8cbd)",
        "before_after_code_files": [
          "crypto/x509/x509_lu.c||crypto/x509/x509_lu.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x509_lu.c||crypto/x509/x509_lu.c": [
          "File: crypto/x509/x509_lu.c -> crypto/x509/x509_lu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:     return NULL;",
          "173: }",
          "190: void X509_STORE_free(X509_STORE *vfy)",
          "191: {",
          "192:     int i;",
          "",
          "[Removed Lines]",
          "175: static void cleanup(X509_OBJECT *a)",
          "176: {",
          "177:     if (!a)",
          "178:         return;",
          "179:     if (a->type == X509_LU_X509) {",
          "180:         X509_free(a->data.x509);",
          "181:     } else if (a->type == X509_LU_CRL) {",
          "182:         X509_CRL_free(a->data.crl);",
          "183:     } else {",
          "185:     }",
          "187:     OPENSSL_free(a);",
          "188: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:         X509_LOOKUP_free(lu);",
          "210:     }",
          "211:     sk_X509_LOOKUP_free(sk);",
          "214:     CRYPTO_free_ex_data(CRYPTO_EX_INDEX_X509_STORE, vfy, &vfy->ex_data);",
          "215:     X509_VERIFY_PARAM_free(vfy->param);",
          "",
          "[Removed Lines]",
          "212:     sk_X509_OBJECT_pop_free(vfy->objs, cleanup);",
          "",
          "[Added Lines]",
          "197:     sk_X509_OBJECT_pop_free(vfy->objs, X509_OBJECT_free);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "027211787a0388bae578f153e7b15b4eb30f352e",
      "candidate_info": {
        "commit_hash": "027211787a0388bae578f153e7b15b4eb30f352e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/027211787a0388bae578f153e7b15b4eb30f352e",
        "files": [
          "test/recipes/04-test_pem.t",
          "test/recipes/04-test_pem_data/beermug.pem"
        ],
        "message": "Add AGL's \"beer mug\" PEM file as another test input\n\nAGL has a history of pointing out the idiosynchronies/laxness of the\nopenssl PEM parser in amusing ways.  If we want this functionality to\nstay present, we should test that it works.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2756)\n(cherry picked from commit a00b9560f7ece1e51bd7a8dc6a7ffb7a3d20cf86)",
        "before_after_code_files": [
          "test/recipes/04-test_pem.t||test/recipes/04-test_pem.t",
          "test/recipes/04-test_pem_datbeermug.pem||test/recipes/04-test_pem_data/beermug.pem"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/04-test_pem.t||test/recipes/04-test_pem.t": [
          "File: test/recipes/04-test_pem.t -> test/recipes/04-test_pem.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     \"dsa.pem\" => 1",
          "77: );",
          "81: foreach my $input (keys %cert_expected) {",
          "82:     my @common = ($cmd, \"x509\", \"-text\", \"-noout\", \"-inform\", \"PEM\", \"-in\");",
          "",
          "[Removed Lines]",
          "79: plan tests =>  scalar keys(%cert_expected) + scalar keys(%dsa_expected);",
          "",
          "[Added Lines]",
          "79: plan tests =>  scalar keys(%cert_expected) + scalar keys(%dsa_expected) + 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:         is((scalar @match > 0 ? 1 : 0), $dsa_expected{$input});",
          "94:     }",
          "95: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: SKIP: {",
          "97:     skip \"RSA support disabled, skipping...\", 1 unless !disabled(\"rsa\");",
          "98:     my @common = ($cmd, \"pkey\", \"-inform\", \"PEM\", \"-noout\", \"-text\", \"-in\");",
          "99:     my @data = run(app([@common, data_file(\"beermug.pem\")], stderr => undef), capture => 1);",
          "100:     my @match = grep /00:a0:3a:21:14:5d:cd:b6:d5:a0:3e:49:23:c1:3a:/, @data;",
          "101:     ok(scalar @match > 0 ? 1 : 0);",
          "102: }",
          "",
          "---------------"
        ],
        "test/recipes/04-test_pem_datbeermug.pem||test/recipes/04-test_pem_data/beermug.pem": [
          "File: test/recipes/04-test_pem_datbeermug.pem -> test/recipes/04-test_pem_data/beermug.pem",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN RSA PRIVATE KEY-----",
          "2: MIICXQIBAAKBgQC+qeXl4ZUfQZFmcGAPwdt7Mza4NQ6mJHehc4V/hVYc6eepvL/5",
          "3: uyyflzuhVy5ufctdi92FlXcIct5nNPdqK0PPdWH5Uzw0t/OjI5y/SJh8ur20krqw",
          "4: j/N1IOs63AcGLIVSkwx89iQbxj+2tV+YxFpGunUYyR/bJJWczuDMA/CujQIDAQAB",
          "5: AoGBAKA6IRRdzbbVoD5JI8E6NZtEP7DwDZ57uPk6Hq86u1JTEzcmguJ4dJitPBRr",
          "6: Mn7yQgwcNQ5EvCKifdqXvXBAaZuiiPFuCS/gfUw04jVHXWvG8ZvBQC3dutUYnFW7",
          "7: hdun8QU/Z6a1BethvESi1J1vgY2+XC4cBIvbutTc9HhMhbQ1AkEA8YTKGsVEYoKE",
          "8: d7sSx4qjeN4bgzeVgIwRt01wJ1EJN62LhwO+pYSXvTt14aHxiascejJqUhtuWvzR",
          "9: nuwydqiDpwJBAMoYgUoWdgW4O/C5ZXjiSia54jzrt7upxSq88njTRo/MCQfuJVbc",
          "10: 3GUD+15V0zNhx9D7lcI+1uxhfcD7jWbJEqsCQBrE/SG6e7nvfX9H3O0BEN10wNfq",
          "11: cUeuPshybNvuv3bMZYqxf5AZAjiXPpmjuYHo1V8191Lid3jeTN2wkGdWhkECQQCI",
          "12: Rj3oV3z+Hl1M1bc27GBT/MQxkEE0qiXpy780+kJ6dHsifdNv3z4+X5EA656e5zB2",
          "13: Gy/A697BRnwlxXpz9OJBAkAUe7Ap0yU8aO6g5g+gsH+18bF0MftWh81VLOo09rRp",
          "14: SOHxNGGJLE5As5XkCGUZVIass1r8Q4N22Wip0QzeSWDi",
          "16: -          .   *   ..  . *  *",
          "18: -            (Q@*0CG*O()  ___",
          "19: -           |\\_________/|/ _ \\",
          "20: -           |  |  |  |  | / | |",
          "21: -           |  |  |  |  | | | |",
          "22: -           |  |  |  |  | | | |",
          "23: -           |  |  |  |  | | | |",
          "24: -           |  |  |  |  | | | |",
          "25: -           |  |  |  |  | \\_| |",
          "26: -           |  |  |  |  |\\___/",
          "27: -           |\\_|__|__|_/|",
          "28: -            \\_________/",
          "30: -----END RSA PRIVATE KEY-----",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
      "candidate_info": {
        "commit_hash": "3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
        "files": [
          "test/recipes/80-test_ssl_new.t",
          "test/recipes/80-test_sslcorrupt.t"
        ],
        "message": "Fix the no-tls option\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/recipes/80-test_sslcorrupt.t||test/recipes/80-test_sslcorrupt.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:   # We should review this once we have TLS 1.3.",
          "72:   \"13-fragmentation.conf\" => disabled(\"tls1_2\"),",
          "73:   \"14-curves.conf\" => disabled(\"tls1_2\") || $no_ec || $no_ec2m,",
          "75:   \"16-dtls-certstatus.conf\" => $no_dtls || $no_ocsp,",
          "76:   \"18-dtls-renegotiate.conf\" => $no_dtls,",
          "77: );",
          "",
          "[Removed Lines]",
          "74:   \"15-certstatus.conf\" => $no_ocsp,",
          "",
          "[Added Lines]",
          "74:   \"15-certstatus.conf\" => $no_tls || $no_ocsp,",
          "",
          "---------------"
        ],
        "test/recipes/80-test_sslcorrupt.t||test/recipes/80-test_sslcorrupt.t": [
          "File: test/recipes/80-test_sslcorrupt.t -> test/recipes/80-test_sslcorrupt.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "9: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "11: setup(\"test_sslcorrupt\");",
          "13: plan tests => 1;",
          "15: ok(run(test([\"sslcorrupttest\", srctop_file(\"apps\", \"server.pem\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: use OpenSSL::Test::Utils;",
          "14: plan skip_all => \"No TLS protocols are supported by this OpenSSL build\"",
          "15:     if alldisabled(available_protocols(\"tls\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}