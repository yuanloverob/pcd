{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "093589de5e339d6ad39e06b79eb9305fa2112127",
      "candidate_info": {
        "commit_hash": "093589de5e339d6ad39e06b79eb9305fa2112127",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/093589de5e339d6ad39e06b79eb9305fa2112127",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeInt.h"
        ],
        "message": "Fix a faulty assert() statement in the sqlite3VdbeMemExpandBlob() routine.\n\nFossilOrigin-Name: 69a26eade2f92029e722a5a654214b1e2a3fc7ed497ce9aa5a7dce944f90e502",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeInt.h||src/vdbeInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3cde82c86b963fa75192907d548febd3882c7d8fc7daf1903fadd5ca46623be1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "288: #define MemNullNochng(X) \\",
          "",
          "[Removed Lines]",
          "289:   ((X)->flags==(MEM_Null|MEM_Zero) && (X)->n==0 && (X)->u.nZero==0)",
          "",
          "[Added Lines]",
          "289:   (((X)->flags&MEM_TypeMask)==(MEM_Null|MEM_Zero) \\",
          "290:     && (X)->n==0 && (X)->u.nZero==0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efb699fc7cbd00b5a41403e4cbc108860beb3949",
      "candidate_info": {
        "commit_hash": "efb699fc7cbd00b5a41403e4cbc108860beb3949",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/efb699fc7cbd00b5a41403e4cbc108860beb3949",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Prevent the use of subroutines to implement the RHS of IN operators within CHECK constraints.\n\nFossilOrigin-Name: 6b24d3fb94e787d25e49501714780dfb0c0c99077102056aa68445f4808cdd57",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6c44838adbe5dc482bc010e91a6dd7a0f777c989f443dd600740d2c783208e0d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2688:   if( !ExprHasProperty(pExpr, EP_VarSelect) ){",
          "",
          "[Added Lines]",
          "2688:   if( !ExprHasProperty(pExpr, EP_VarSelect) && pParse->iSelfTab==0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31046a9f1ff573fc435bf9c5319ec101a91c57c1",
      "candidate_info": {
        "commit_hash": "31046a9f1ff573fc435bf9c5319ec101a91c57c1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/31046a9f1ff573fc435bf9c5319ec101a91c57c1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vtab.c"
        ],
        "message": "The xDestroy method of a module might be NULL if the schema is corrupt.\n\nFossilOrigin-Name: 0457e7d1961ab1f63e31d9028a9064a895f5c3fcfb56ba25e4f37e90197e3a9f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vtab.c||src/vtab.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 136cdefb2f7b582ff1771ac7f9e733dc24c357605526cbfb1834937697c8a922",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vtab.c||src/vtab.c": [
          "File: src/vtab.c -> src/vtab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "892:     }",
          "893:     p = vtabDisconnectAll(db, pTab);",
          "894:     xDestroy = p->pMod->pModule->xDestroy;",
          "896:     pTab->nTabRef++;",
          "899:     if( rc==SQLITE_OK ){",
          "900:       assert( pTab->pVTable==p && p->pNext==0 );",
          "",
          "[Removed Lines]",
          "897:     rc = xDestroy(p->pVtab);",
          "",
          "[Added Lines]",
          "896:     rc = xDestroy ? xDestroy(p->pVtab) : SQLITE_OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ea557e0e7d289b28c05c1797f900ee224fc9471",
      "candidate_info": {
        "commit_hash": "3ea557e0e7d289b28c05c1797f900ee224fc9471",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3ea557e0e7d289b28c05c1797f900ee224fc9471",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in",
          "src/test1.c"
        ],
        "message": "Changes to the --hexdb decoder option in the shell (and also in the TCL test code) so that it works on systems where sscanf() does not recognize \"%hhx\" as wanting to delivery results into a character-size variable.\n\nFossilOrigin-Name: 4258e42d92b0113ba59f407197fc24f21734900e5b02952deed07818be3e3e5d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in",
          "src/test1.c||src/test1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 69bad9257f8db6a2a761bdd298d972eb48d4f845ec11dedc802ba3bafb979915",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3858:   int j, k;",
          "3859:   int rc;",
          "3860:   FILE *in;",
          "3862:   char zLine[1000];",
          "3863:   if( p->zDbFilename ){",
          "3864:     in = fopen(p->zDbFilename, \"r\");",
          "",
          "[Removed Lines]",
          "3861:   unsigned char x[16];",
          "",
          "[Added Lines]",
          "3861:   unsigned int x[16];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3896:     if( strncmp(zLine, \"| end \", 6)==0 ){",
          "3897:       break;",
          "3898:     }",
          "3901:                 &j, &x[0], &x[1], &x[2], &x[3], &x[4], &x[5], &x[6], &x[7],",
          "3902:                 &x[8], &x[9], &x[10], &x[11], &x[12], &x[13], &x[14], &x[15]);",
          "3903:     if( rc==17 ){",
          "3904:       k = iOffset+j;",
          "3905:       if( k+16<=n ){",
          "3907:       }",
          "3908:     }",
          "3909:   }",
          "",
          "[Removed Lines]",
          "3899:     rc = sscanf(zLine,\"| %d: %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\"",
          "3900:                       \"  %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\",",
          "3906:         memcpy(a+k, x, 16);",
          "",
          "[Added Lines]",
          "3899:     rc = sscanf(zLine,\"| %d: %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\",",
          "3905:         int ii;",
          "3906:         for(ii=0; ii<16; ii++) a[k+ii] = x[ii]&0xff;",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7699:   int iOffset = 0;",
          "7700:   int j, k;",
          "7701:   int rc;",
          "7703:   if( objc!=2 ){",
          "7704:     Tcl_WrongNumArgs(interp, 1, objv, \"HEXDB\");",
          "7705:     return TCL_ERROR;",
          "",
          "[Removed Lines]",
          "7702:   unsigned char x[16];",
          "",
          "[Added Lines]",
          "7702:   unsigned int x[16];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7731:       iOffset = k;",
          "7732:       continue;",
          "7733:     }",
          "7736:                 &j, &x[0], &x[1], &x[2], &x[3], &x[4], &x[5], &x[6], &x[7],",
          "7737:                 &x[8], &x[9], &x[10], &x[11], &x[12], &x[13], &x[14], &x[15]);",
          "7738:     if( rc==17 ){",
          "7739:       k = iOffset+j;",
          "7740:       if( k+16<=n ){",
          "7742:       }",
          "7743:       continue;",
          "7744:     }",
          "",
          "[Removed Lines]",
          "7734:     rc = sscanf(zIn+i,\"| %d: %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\"",
          "7735:                       \"  %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\",",
          "7741:         memcpy(a+k, x, 16);",
          "",
          "[Added Lines]",
          "7734:     rc = sscanf(zIn+i,\"| %d: %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\",",
          "7740:         int ii;",
          "7741:         for(ii=0; ii<16; ii++) a[k+ii] = x[ii]&0xff;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a7e9a25b64489a9d7e8f1d84f0e50cbbb4a7735",
      "candidate_info": {
        "commit_hash": "4a7e9a25b64489a9d7e8f1d84f0e50cbbb4a7735",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a7e9a25b64489a9d7e8f1d84f0e50cbbb4a7735",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/ossfuzz.c"
        ],
        "message": "Set a low limit on the length of strings and blobs in the OSSFuzz module, in an effort to avoid timeouts when the fuzzer does things like \"randomblob(1e12)\".\n\nFossilOrigin-Name: 119d1609fa415894fdd0aa19440ca1c658bd01910838a4cfadbe0e304b033bfd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/ossfuzz.c||test/ossfuzz.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2c886f3d49c9569e9f6ee28b89b57e2d4004c8972d11da0c23f7b2d2e0c9900a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/ossfuzz.c||test/ossfuzz.c": [
          "File: test/ossfuzz.c -> test/ossfuzz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   sqlite3_limit(cx.db, SQLITE_LIMIT_VDBE_OP, 25000);",
          "159:   sqlite3_db_config(cx.db, SQLITE_DBCONFIG_ENABLE_FKEY, uSelector&1, &rc);",
          "160:   uSelector >>= 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:   sqlite3_limit(cx.db, SQLITE_LIMIT_LENGTH, 50000);",
          "",
          "---------------"
        ]
      }
    }
  ]
}