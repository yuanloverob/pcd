{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
      "candidate_info": {
        "commit_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e464802d49013ea759c30be7106976cbc2cde1e5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeblob.c",
          "test/close.test"
        ],
        "message": "Fix a problem that could cause a crash if a blob handle were closed after the associated database handle was closed using sqlite3_close_v2().\n\nFossilOrigin-Name: 52f463d29407fad691c42b13462880e7605603c9be9f480d18e953a0ef78149a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeblob.c||src/vdbeblob.c",
          "test/close.test||test/close.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fff105a3e501fd91877d67761459eb0323e6cf79916242027cce0d05697f554",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeblob.c||src/vdbeblob.c": [
          "File: src/vdbeblob.c -> src/vdbeblob.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   sqlite3 *db;",
          "357:   if( p ){",
          "358:     db = p->db;",
          "359:     sqlite3_mutex_enter(db->mutex);",
          "361:     sqlite3DbFree(db, p);",
          "362:     sqlite3_mutex_leave(db->mutex);",
          "363:   }else{",
          "364:     rc = SQLITE_OK;",
          "365:   }",
          "",
          "[Removed Lines]",
          "360:     rc = sqlite3_finalize(p->pStmt);",
          "",
          "[Added Lines]",
          "358:     sqlite3_stmt *pStmt = p->pStmt;",
          "363:     rc = sqlite3_finalize(pStmt);",
          "",
          "---------------"
        ],
        "test/close.test||test/close.test": [
          "File: test/close.test -> test/close.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   sqlite3_finalize $STMT",
          "80: } {SQLITE_OK}",
          "82: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: do_test 1.5 {",
          "83:   set DB [sqlite3_open test.db]",
          "84:   sqlite3_blob_open $DB main t1 x 2 0 BLOB",
          "85:   sqlite3_close_v2 $DB",
          "86:   sqlite3_blob_close $BLOB",
          "87: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
      "candidate_info": {
        "commit_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38a59af41766695f2e1aa6581781bb222e56a8b9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Use \"long double\" literals to initialize an array of \"long double\" objects.\n\nFossilOrigin-Name: 2e2ebad3ab636c4c65814ad41d417b105be8e254d609d0e08fbba4c5bd107bf3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b84e7057c05338347b4267f7ccc1d7b9b6d4e9a941ce8b76bf2c27c26772000c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "359: static LONGDOUBLE_TYPE sqlite3Pow10(int E){",
          "360: #if defined(_MSC_VER)",
          "361:   static const LONGDOUBLE_TYPE x[] = {",
          "371:   };",
          "372:   LONGDOUBLE_TYPE r = 1.0;",
          "373:   int i;",
          "",
          "[Removed Lines]",
          "362:     1.0e+001,",
          "363:     1.0e+002,",
          "364:     1.0e+004,",
          "365:     1.0e+008,",
          "366:     1.0e+016,",
          "367:     1.0e+032,",
          "368:     1.0e+064,",
          "369:     1.0e+128,",
          "370:     1.0e+256",
          "",
          "[Added Lines]",
          "362:     1.0e+001L,",
          "363:     1.0e+002L,",
          "364:     1.0e+004L,",
          "365:     1.0e+008L,",
          "366:     1.0e+016L,",
          "367:     1.0e+032L,",
          "368:     1.0e+064L,",
          "369:     1.0e+128L,",
          "370:     1.0e+256L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
      "candidate_info": {
        "commit_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a015d3c82f295994186f1b95b1f0004ad2004d03",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a problem in the legacy \".explain on\" formatting when it is used on a query with more than 8 output columns.\n\nFossilOrigin-Name: 070b49825c5f87cce15be4b758f0dfdd65226ec379465ca527a18706a1f3b8f4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 346bdd49fb93aa58e8bd14250974d8c0c32cc7e8317c8b12da1fa44db10d8a3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:       const int *colWidth;",
          "1856:       int showHdr;",
          "1857:       char *rowSep;",
          "1858:       if( p->cMode==MODE_Column ){",
          "1859:         colWidth = p->colWidth;",
          "1860:         showHdr = p->showHeader;",
          "1861:         rowSep = p->rowSeparator;",
          "1862:       }else{",
          "1863:         colWidth = aExplainWidths;",
          "1864:         showHdr = 1;",
          "1865:         rowSep = SEP_Row;",
          "1866:       }",
          "1867:       if( p->cnt++==0 ){",
          "1868:         for(i=0; i<nArg; i++){",
          "1869:           int w, n;",
          "1871:             w = colWidth[i];",
          "1872:           }else{",
          "1873:             w = 0;",
          "",
          "[Removed Lines]",
          "1870:           if( i<ArraySize(p->colWidth) ){",
          "",
          "[Added Lines]",
          "1858:       int nWidth;",
          "1861:         nWidth = ArraySize(p->colWidth);",
          "1866:         nWidth = ArraySize(aExplainWidths);",
          "1873:           if( i<nWidth ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfe3b583159900285febfeb141b6e75c3fa1411e",
      "candidate_info": {
        "commit_hash": "dfe3b583159900285febfeb141b6e75c3fa1411e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dfe3b583159900285febfeb141b6e75c3fa1411e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix a typo in a comment used to generate documentation.  No functional changes.\n\nFossilOrigin-Name: ccc4f7424bc8f37c168333091dd9e3d6f80ccff9e2b06f182df65be59a7e3349",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0888fc2e881d56ccd5222383d1a08cdf16fbd15c40da7ebfc14346be69ffb26a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c"
        ]
      }
    },
    {
      "candidate_hash": "c86b23bfbc6e4371814a8653504f2d56e9fd85d9",
      "candidate_info": {
        "commit_hash": "c86b23bfbc6e4371814a8653504f2d56e9fd85d9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c86b23bfbc6e4371814a8653504f2d56e9fd85d9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "In order to avoid exporting a symbol, use a macro instead of a function to replace sqlite3_complete() in the shell code when SQLITE_OMIT_COMPLETE is defined.\n\nFossilOrigin-Name: d584a0cb512815945ef06ee3b5ebadbf2a543b008487f6d098e1e8ab79f61d2d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 684013cef6bfcfd920a4aec645df9f5d41ace8b34e75fca61759c1b4f82cc89e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "8067: #ifdef SQLITE_OMIT_COMPLETE",
          "8069: #endif",
          "",
          "[Removed Lines]",
          "8068: int sqlite3_complete(const char *zSql){ return 1; }",
          "",
          "[Added Lines]",
          "8068: #define sqlite3_complete(x) 1",
          "",
          "---------------"
        ]
      }
    }
  ]
}