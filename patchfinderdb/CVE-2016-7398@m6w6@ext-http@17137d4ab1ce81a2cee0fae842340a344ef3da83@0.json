{
  "cve_id": "CVE-2016-7398",
  "cve_desc": "A type confusion vulnerability in the merge_param() function of php_http_params.c in PHP's pecl-http extension 3.1.0beta2 (PHP 7) and earlier as well as 2.6.0beta2 (PHP 5) and earlier allows attackers to crash PHP and possibly execute arbitrary code via crafted HTTP requests.",
  "repo": "m6w6/ext-http",
  "patch_hash": "17137d4ab1ce81a2cee0fae842340a344ef3da83",
  "patch_info": {
    "commit_hash": "17137d4ab1ce81a2cee0fae842340a344ef3da83",
    "repo": "m6w6/ext-http",
    "commit_url": "https://github.com/m6w6/ext-http/commit/17137d4ab1ce81a2cee0fae842340a344ef3da83",
    "files": [
      ".gitignore",
      "package.xml",
      "src/php_http_params.c"
    ],
    "message": "fix bug #73055",
    "before_after_code_files": [
      "src/php_http_params.c||src/php_http_params.c"
    ]
  },
  "patch_diff": {
    "src/php_http_params.c||src/php_http_params.c": [
      "File: src/php_http_params.c -> src/php_http_params.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "470:    while (Z_TYPE_PP(zdata_ptr) == IS_ARRAY",
      "471:    && SUCCESS == zend_hash_get_current_data(Z_ARRVAL_PP(zdata_ptr), (void *) &test_ptr)",
      "472:    ) {",
      "476:      if (HASH_KEY_IS_STRING == zend_hash_get_current_key_ex(Z_ARRVAL_PP(zdata_ptr), &hkey.str, &hkey.len, &hkey.num, hkey.dup, NULL)) {",
      "",
      "[Removed Lines]",
      "473:     if (Z_TYPE_PP(test_ptr) == IS_ARRAY) {",
      "",
      "[Added Lines]",
      "473:     if (Z_TYPE_PP(test_ptr) == IS_ARRAY && Z_TYPE_PP(ptr) == IS_ARRAY) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "635a882456da2800b93bac83bbbd33404ffd0798",
      "candidate_info": {
        "commit_hash": "635a882456da2800b93bac83bbbd33404ffd0798",
        "repo": "m6w6/ext-http",
        "commit_url": "https://github.com/m6w6/ext-http/commit/635a882456da2800b93bac83bbbd33404ffd0798",
        "files": [
          "tests/client012.phpt"
        ],
        "message": "release 3.1.0\n\n+ Added http\\Client\\Curl\\User interface for userland event loops\n+ Added http\\Url::IGNORE_ERRORS, http\\Url::SILENT_ERRORS and\n  http\\Url::STDFLAGS\n+ Added http\\Client::setDebug(callable $debug)\n+ Added http\\Client\\Curl\\FEATURES constants and namespace\n+ Added http\\Client\\Curl\\VERSIONS constants and namespace\n+ Added share_cookies and share_ssl (libcurl >= 7.23.0) options to\n  http\\Client::configure()\n+ http\\Client uses curl_share handles to properly share cookies and\n  SSL/TLS sessions between requests\n+ Improved configure checks for default CA bundles\n+ Improved negotiation precision\n* Fixed regression introduced by http\\Params::PARSE_RFC5987: negotiation\n  using the params parser would receive param keys without the trailing\n  asterisk, stripped by http\\Params::PARSE_RFC5987.\n* Fix gh-issue #50: http\\Client::dequeue() within\n  http\\Client::setDebug() causes segfault (Mike, Maik Wagner)\n* Fix gh-issue #47: http\\Url: Null pointer deref in sanitize_value()\n  (Mike, @rc0r)\n* Fix gh-issue #45: HTTP/2 response message parsing broken with\n  libcurl >= 7.49.1 (Mike)\n* Fix gh-issue #43: Joining query with empty original variable in query\n  (Mike, Sander Backus)\n* Fix gh-issue #42: fatal error when using punycode in URLs\n  (Mike, Sebastian Thielen)\n* Fix gh-issue #41: Use curl_version_info_data.features when\n  initializing options (Mike)\n* Fix gh-issue #40: determinde the SSL backend used by curl at runtime\n  (Mike, @rcanavan)\n* Fix gh-issue #39: Notice: http\\Client::enqueue(): Could not set option\n  proxy_service_name (Mike, @rcanavan)\n* Fix gh-issue #38: Persistent curl handles: error code not properly\n  reset (Mike, @afflerbach)\n* Fix gh-issue #36: Unexpected cookies sent if persistent_handle_id is\n  used (Mike, @rcanavan, @afflerbach)\n* Fix gh-issue #34: allow setting multiple headers with the same name\n  (Mike, @rcanavan)\n* Fix gh-issue #33: allow setting prodyhost request option to NULL\n  (Mike, @rcanavan)\n* Fix gh-issue #31: add/improve configure checks for default\n  CA bundle/path (Mike, @rcanavan)\n\nChanges from beta1:\n* Fixed recursive calls to the event loop dispatcher\n\nChanges from beta2:\n+ Improved configure checks for IDNA libraries (added\n  --with-http-libicu-dir, --with-http-libidnkit{,2}-dir,\n  --with-http-libidn2-dir)\n* Fix bug #73055: crash in http\\QueryString (Mike, @rc0r)\n  (CVE-2016-7398)\n* Fix bug #73185: Buffer overflow in HTTP parse_hostinfo() (Mike, @rc0r)\n  (CVE-2016-7961)\n* Fix HTTP/2 version parser for older libcurl versions (Mike)\n* Fix gh-issue #52: Underscores in host names: libidn Failed to parse\n  IDN (Mike, @canavan)",
        "before_after_code_files": [
          "tests/client012.phpt||tests/client012.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/client012.phpt||tests/client012.phpt": [
          "File: tests/client012.phpt -> tests/client012.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: $ti = (array) $client->getTransferInfo($req);",
          "28: var_dump(array_key_exists(\"ssl_engines\", $ti));",
          "30: ?>",
          "31: Done",
          "32: --EXPECTF--",
          "",
          "[Removed Lines]",
          "29: var_dump(0 < count($ti[\"ssl_engines\"] || $ti[\"tls_session\"][\"backend\"] != \"openssl\"));",
          "",
          "[Added Lines]",
          "29: var_dump(0 < count($ti[\"ssl_engines\"]) || $ti[\"tls_session\"][\"backend\"] != \"openssl\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}