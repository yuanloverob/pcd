{
  "cve_id": "CVE-2019-15222",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.2.8. There is a NULL pointer dereference caused by a malicious USB device in the sound/usb/helper.c (motu_microbookii) driver.",
  "repo": "torvalds/linux",
  "patch_hash": "5d78e1c2b7f4be00bbe62141603a631dc7812f35",
  "patch_info": {
    "commit_hash": "5d78e1c2b7f4be00bbe62141603a631dc7812f35",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/5d78e1c2b7f4be00bbe62141603a631dc7812f35",
    "files": [
      "sound/usb/helper.c"
    ],
    "message": "ALSA: usb-audio: Fix gpf in snd_usb_pipe_sanity_check\n\nsyzbot found the following crash on:\n\n  general protection fault: 0000 [#1] SMP KASAN\n  RIP: 0010:snd_usb_pipe_sanity_check+0x80/0x130 sound/usb/helper.c:75\n  Call Trace:\n    snd_usb_motu_microbookii_communicate.constprop.0+0xa0/0x2fb  sound/usb/quirks.c:1007\n    snd_usb_motu_microbookii_boot_quirk sound/usb/quirks.c:1051 [inline]\n    snd_usb_apply_boot_quirk.cold+0x163/0x370 sound/usb/quirks.c:1280\n    usb_audio_probe+0x2ec/0x2010 sound/usb/card.c:576\n    usb_probe_interface+0x305/0x7a0 drivers/usb/core/driver.c:361\n    really_probe+0x281/0x650 drivers/base/dd.c:548\n    ....\n\nIt was introduced in commit 801ebf1043ae for checking pipe and endpoint\ntypes. It is fixed by adding a check of the ep pointer in question.\n\nBugLink: https://syzkaller.appspot.com/bug?extid=d59c4387bfb6eced94e2\nReported-by: syzbot <syzbot+d59c4387bfb6eced94e2@syzkaller.appspotmail.com>\nFixes: 801ebf1043ae (\"ALSA: usb-audio: Sanity checks for each pipe and EP types\")\nCc: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Hillf Danton <hdanton@sina.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/usb/helper.c||sound/usb/helper.c"
    ]
  },
  "patch_diff": {
    "sound/usb/helper.c||sound/usb/helper.c": [
      "File: sound/usb/helper.c -> sound/usb/helper.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:  struct usb_host_endpoint *ep;",
      "74:  ep = usb_pipe_endpoint(dev, pipe);",
      "76:   return -EINVAL;",
      "77:  return 0;",
      "78: }",
      "",
      "[Removed Lines]",
      "75:  if (usb_pipetype(pipe) != pipetypes[usb_endpoint_type(&ep->desc)])",
      "",
      "[Added Lines]",
      "75:  if (!ep || usb_pipetype(pipe) != pipetypes[usb_endpoint_type(&ep->desc)])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d94211b8bad3787e0655a67284105f57db728cb1",
      "candidate_info": {
        "commit_hash": "d94211b8bad3787e0655a67284105f57db728cb1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d94211b8bad3787e0655a67284105f57db728cb1",
        "files": [
          "drivers/nvme/host/rdma.c"
        ],
        "message": "nvme-rdma: fix possible use-after-free in connect error flow\n\nWhen start_queue fails, we need to make sure to drain the\nqueue cq before freeing the rdma resources because we might\nstill race with the completion path. Have start_queue() error\npath safely stop the queue.\n\n--\n[30371.808111] nvme nvme1: Failed reconnect attempt 11\n[30371.808113] nvme nvme1: Reconnecting in 10 seconds...\n[...]\n[30382.069315] nvme nvme1: creating 4 I/O queues.\n[30382.257058] nvme nvme1: Connect Invalid SQE Parameter, qid 4\n[30382.257061] nvme nvme1: failed to connect queue: 4 ret=386\n[30382.305001] BUG: unable to handle kernel NULL pointer dereference at 0000000000000018\n[30382.305022] IP: qedr_poll_cq+0x8a3/0x1170 [qedr]\n[30382.305028] PGD 0 P4D 0\n[30382.305037] Oops: 0000 [#1] SMP PTI\n[...]\n[30382.305153] Call Trace:\n[30382.305166]  ? __switch_to_asm+0x34/0x70\n[30382.305187]  __ib_process_cq+0x56/0xd0 [ib_core]\n[30382.305201]  ib_poll_handler+0x26/0x70 [ib_core]\n[30382.305213]  irq_poll_softirq+0x88/0x110\n[30382.305223]  ? sort_range+0x20/0x20\n[30382.305232]  __do_softirq+0xde/0x2c6\n[30382.305241]  ? sort_range+0x20/0x20\n[30382.305249]  run_ksoftirqd+0x1c/0x60\n[30382.305258]  smpboot_thread_fn+0xef/0x160\n[30382.305265]  kthread+0x113/0x130\n[30382.305273]  ? kthread_create_worker_on_cpu+0x50/0x50\n[30382.305281]  ret_from_fork+0x35/0x40\n--\n\nReported-by: Nicolas Morey-Chaisemartin <NMoreyChaisemartin@suse.com>\nReviewed-by: Max Gurtovoy <maxg@mellanox.com>\nReviewed-by: Hannes Reinecke <hare@suse.com>\nSigned-off-by: Sagi Grimberg <sagi@grimberg.me>",
        "before_after_code_files": [
          "drivers/nvme/host/rdma.c||drivers/nvme/host/rdma.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/nvme/host/rdma.c||drivers/nvme/host/rdma.c": [
          "File: drivers/nvme/host/rdma.c -> drivers/nvme/host/rdma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "562:  return ret;",
          "563: }",
          "565: static void nvme_rdma_stop_queue(struct nvme_rdma_queue *queue)",
          "566: {",
          "567:  if (!test_and_clear_bit(NVME_RDMA_Q_LIVE, &queue->flags))",
          "568:   return;",
          "572: }",
          "574: static void nvme_rdma_free_queue(struct nvme_rdma_queue *queue)",
          "",
          "[Removed Lines]",
          "570:  rdma_disconnect(queue->cm_id);",
          "571:  ib_drain_qp(queue->qp);",
          "",
          "[Added Lines]",
          "565: static void __nvme_rdma_stop_queue(struct nvme_rdma_queue *queue)",
          "566: {",
          "567:  rdma_disconnect(queue->cm_id);",
          "568:  ib_drain_qp(queue->qp);",
          "569: }",
          "575:  __nvme_rdma_stop_queue(queue);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607:  else",
          "608:   ret = nvmf_connect_admin_queue(&ctrl->ctrl);",
          "611:   set_bit(NVME_RDMA_Q_LIVE, &queue->flags);",
          "613:   dev_info(ctrl->ctrl.device,",
          "614:    \"failed to connect queue: %d ret=%d\\n\", idx, ret);",
          "615:  return ret;",
          "616: }",
          "",
          "[Removed Lines]",
          "610:  if (!ret)",
          "612:  else",
          "",
          "[Added Lines]",
          "614:  if (!ret) {",
          "616:  } else {",
          "617:   __nvme_rdma_stop_queue(queue);",
          "620:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b82feb6c5e1996513d0fb0bbb475417088b4954",
      "candidate_info": {
        "commit_hash": "1b82feb6c5e1996513d0fb0bbb475417088b4954",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1b82feb6c5e1996513d0fb0bbb475417088b4954",
        "files": [
          "drivers/crypto/qat/qat_common/adf_common_drv.h"
        ],
        "message": "crypto: qat - Silence smp_processor_id() warning\n\nIt seems that smp_processor_id() is only used for a best-effort\nload-balancing, refer to qat_crypto_get_instance_node(). It's not feasible\nto disable preemption for the duration of the crypto requests. Therefore,\njust silence the warning. This commit is similar to e7a9b05ca4\n(\"crypto: cavium - Fix smp_processor_id() warnings\").\n\nSilences the following splat:\nBUG: using smp_processor_id() in preemptible [00000000] code: cryptomgr_test/2904\ncaller is qat_alg_ablkcipher_setkey+0x300/0x4a0 [intel_qat]\nCPU: 1 PID: 2904 Comm: cryptomgr_test Tainted: P           O    4.14.69 #1\n...\nCall Trace:\n dump_stack+0x5f/0x86\n check_preemption_disabled+0xd3/0xe0\n qat_alg_ablkcipher_setkey+0x300/0x4a0 [intel_qat]\n skcipher_setkey_ablkcipher+0x2b/0x40\n __test_skcipher+0x1f3/0xb20\n ? cpumask_next_and+0x26/0x40\n ? find_busiest_group+0x10e/0x9d0\n ? preempt_count_add+0x49/0xa0\n ? try_module_get+0x61/0xf0\n ? crypto_mod_get+0x15/0x30\n ? __kmalloc+0x1df/0x1f0\n ? __crypto_alloc_tfm+0x116/0x180\n ? crypto_skcipher_init_tfm+0xa6/0x180\n ? crypto_create_tfm+0x4b/0xf0\n test_skcipher+0x21/0xa0\n alg_test_skcipher+0x3f/0xa0\n alg_test.part.6+0x126/0x2a0\n ? finish_task_switch+0x21b/0x260\n ? __schedule+0x1e9/0x800\n ? __wake_up_common+0x8d/0x140\n cryptomgr_test+0x40/0x50\n kthread+0xff/0x130\n ? cryptomgr_notify+0x540/0x540\n ? kthread_create_on_node+0x70/0x70\n ret_from_fork+0x24/0x50\n\nFixes: ed8ccaef52 (\"crypto: qat - Add support for SRIOV\")\nCc: stable@vger.kernel.org\nSigned-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "drivers/crypto/qat/qat_common/adf_common_drv.h||drivers/crypto/qat/qat_common/adf_common_drv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/crypto/qat/qat_common/adf_common_drv.h||drivers/crypto/qat/qat_common/adf_common_drv.h": [
          "File: drivers/crypto/qat/qat_common/adf_common_drv.h -> drivers/crypto/qat/qat_common/adf_common_drv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: static inline int get_current_node(void)",
          "97: {",
          "99: }",
          "101: int adf_service_register(struct service_hndl *service);",
          "",
          "[Removed Lines]",
          "98:  return topology_physical_package_id(smp_processor_id());",
          "",
          "[Added Lines]",
          "98:  return topology_physical_package_id(raw_smp_processor_id());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "944a83a2669ae8aa2c7664e79376ca7468eb0a2b",
      "candidate_info": {
        "commit_hash": "944a83a2669ae8aa2c7664e79376ca7468eb0a2b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/944a83a2669ae8aa2c7664e79376ca7468eb0a2b",
        "files": [
          "drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c"
        ],
        "message": "mvpp2: fix panic on module removal\n\nmvpp2 uses a delayed workqueue to gather traffic statistics.\nOn module removal the workqueue can be destroyed before calling\ncancel_delayed_work_sync() on its works.\nFix it by moving the destroy_workqueue() call after mvpp2_port_remove().\nAlso remove an unneeded call to flush_workqueue()\n\n    # rmmod mvpp2\n    [ 2743.311722] mvpp2 f4000000.ethernet eth1: phy link down 10gbase-kr/10Gbps/Full\n    [ 2743.320063] mvpp2 f4000000.ethernet eth1: Link is Down\n    [ 2743.572263] mvpp2 f4000000.ethernet eth2: phy link down sgmii/1Gbps/Full\n    [ 2743.580076] mvpp2 f4000000.ethernet eth2: Link is Down\n    [ 2744.102169] mvpp2 f2000000.ethernet eth0: phy link down 10gbase-kr/10Gbps/Full\n    [ 2744.110441] mvpp2 f2000000.ethernet eth0: Link is Down\n    [ 2744.115614] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n    [ 2744.115615] Mem abort info:\n    [ 2744.115616]   ESR = 0x96000005\n    [ 2744.115617]   Exception class = DABT (current EL), IL = 32 bits\n    [ 2744.115618]   SET = 0, FnV = 0\n    [ 2744.115619]   EA = 0, S1PTW = 0\n    [ 2744.115620] Data abort info:\n    [ 2744.115621]   ISV = 0, ISS = 0x00000005\n    [ 2744.115622]   CM = 0, WnR = 0\n    [ 2744.115624] user pgtable: 4k pages, 39-bit VAs, pgdp=0000000422681000\n    [ 2744.115626] [0000000000000000] pgd=0000000000000000, pud=0000000000000000\n    [ 2744.115630] Internal error: Oops: 96000005 [#1] SMP\n    [ 2744.115632] Modules linked in: mvpp2(-) algif_hash af_alg nls_iso8859_1 nls_cp437 vfat fat xhci_plat_hcd m25p80 spi_nor xhci_hcd mtd usbcore i2c_mv64xxx sfp usb_common marvell10g phy_generic spi_orion mdio_i2c i2c_core mvmdio phylink sbsa_gwdt ip_tables x_tables autofs4 [last unloaded: mvpp2]\n    [ 2744.115654] CPU: 3 PID: 8357 Comm: kworker/3:2 Not tainted 5.3.0-rc2 #1\n    [ 2744.115655] Hardware name: Marvell 8040 MACCHIATOBin Double-shot (DT)\n    [ 2744.115665] Workqueue: events_power_efficient phylink_resolve [phylink]\n    [ 2744.115669] pstate: a0000085 (NzCv daIf -PAN -UAO)\n    [ 2744.115675] pc : __queue_work+0x9c/0x4d8\n    [ 2744.115677] lr : __queue_work+0x170/0x4d8\n    [ 2744.115678] sp : ffffff801001bd50\n    [ 2744.115680] x29: ffffff801001bd50 x28: ffffffc422597600\n    [ 2744.115684] x27: ffffff80109ae6f0 x26: ffffff80108e4018\n    [ 2744.115688] x25: 0000000000000003 x24: 0000000000000004\n    [ 2744.115691] x23: ffffff80109ae6e0 x22: 0000000000000017\n    [ 2744.115694] x21: ffffffc42c030000 x20: ffffffc42209e8f8\n    [ 2744.115697] x19: 0000000000000000 x18: 0000000000000000\n    [ 2744.115699] x17: 0000000000000000 x16: 0000000000000000\n    [ 2744.115701] x15: 0000000000000010 x14: ffffffffffffffff\n    [ 2744.115702] x13: ffffff8090e2b95f x12: ffffff8010e2b967\n    [ 2744.115704] x11: ffffff8010906000 x10: 0000000000000040\n    [ 2744.115706] x9 : ffffff80109223b8 x8 : ffffff80109223b0\n    [ 2744.115707] x7 : ffffffc42bc00068 x6 : 0000000000000000\n    [ 2744.115709] x5 : ffffffc42bc00000 x4 : 0000000000000000\n    [ 2744.115710] x3 : 0000000000000000 x2 : 0000000000000000\n    [ 2744.115712] x1 : 0000000000000008 x0 : ffffffc42c030000\n    [ 2744.115714] Call trace:\n    [ 2744.115716]  __queue_work+0x9c/0x4d8\n    [ 2744.115718]  delayed_work_timer_fn+0x28/0x38\n    [ 2744.115722]  call_timer_fn+0x3c/0x180\n    [ 2744.115723]  expire_timers+0x60/0x168\n    [ 2744.115724]  run_timer_softirq+0xbc/0x1e8\n    [ 2744.115727]  __do_softirq+0x128/0x320\n    [ 2744.115731]  irq_exit+0xa4/0xc0\n    [ 2744.115734]  __handle_domain_irq+0x70/0xc0\n    [ 2744.115735]  gic_handle_irq+0x58/0xa8\n    [ 2744.115737]  el1_irq+0xb8/0x140\n    [ 2744.115738]  console_unlock+0x3a0/0x568\n    [ 2744.115740]  vprintk_emit+0x200/0x2a0\n    [ 2744.115744]  dev_vprintk_emit+0x1c8/0x1e4\n    [ 2744.115747]  dev_printk_emit+0x6c/0x7c\n    [ 2744.115751]  __netdev_printk+0x104/0x1d8\n    [ 2744.115752]  netdev_printk+0x60/0x70\n    [ 2744.115756]  phylink_resolve+0x38c/0x3c8 [phylink]\n    [ 2744.115758]  process_one_work+0x1f8/0x448\n    [ 2744.115760]  worker_thread+0x54/0x500\n    [ 2744.115762]  kthread+0x12c/0x130\n    [ 2744.115764]  ret_from_fork+0x10/0x1c\n    [ 2744.115768] Code: aa1403e0 97fffbbe aa0003f5 b4000700 (f9400261)\n\nFixes: 118d6298f6f0 (\"net: mvpp2: add ethtool GOP statistics\")\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Matteo Croce <mcroce@redhat.com>\nAcked-by: Antoine Tenart <antoine.tenart@bootlin.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c||drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c||drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c": [
          "File: drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c -> drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5754:  mvpp2_dbgfs_cleanup(priv);",
          "5759:  fwnode_for_each_available_child_node(fwnode, port_fwnode) {",
          "5760:   if (priv->port_list[i]) {",
          "5761:    mutex_destroy(&priv->port_list[i]->gather_stats_lock);",
          "",
          "[Removed Lines]",
          "5756:  flush_workqueue(priv->stats_queue);",
          "5757:  destroy_workqueue(priv->stats_queue);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5764:   i++;",
          "5765:  }",
          "5767:  for (i = 0; i < MVPP2_BM_POOLS_NUM; i++) {",
          "5768:   struct mvpp2_bm_pool *bm_pool = &priv->bm_pools[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5764:  destroy_workqueue(priv->stats_queue);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2948a1fcd77a8bb11604387e3fc52f0ebf5729e9",
      "candidate_info": {
        "commit_hash": "2948a1fcd77a8bb11604387e3fc52f0ebf5729e9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2948a1fcd77a8bb11604387e3fc52f0ebf5729e9",
        "files": [
          "net/tipc/socket.c"
        ],
        "message": "tipc: fix unitilized skb list crash\n\nOur test suite somtimes provokes the following crash:\n\nDescription of problem:\n[ 1092.597234] BUG: unable to handle kernel NULL pointer dereference at 00000000000000e8\n[ 1092.605072] PGD 0 P4D 0\n[ 1092.607620] Oops: 0000 [#1] SMP PTI\n[ 1092.611118] CPU: 37 PID: 0 Comm: swapper/37 Kdump: loaded Not tainted 4.18.0-122.el8.x86_64 #1\n[ 1092.619724] Hardware name: Dell Inc. PowerEdge R740/08D89F, BIOS 1.3.7 02/08/2018\n[ 1092.627215] RIP: 0010:tipc_mcast_filter_msg+0x93/0x2d0 [tipc]\n[ 1092.632955] Code: 0f 84 aa 01 00 00 89 cf 4d 01 ca 4c 8b 26 c1 ef 19 83 e7 0f 83 ff 0c 4d 0f 45 d1 41 8b 6a 10 0f cd 4c 39 e6 0f 84 81 01 00 00 <4d> 8b 9c 24 e8 00 00 00 45 8b 13 41 0f ca 44 89 d7 c1 ef 13 83 e7\n[ 1092.651703] RSP: 0018:ffff929e5fa83a18 EFLAGS: 00010282\n[ 1092.656927] RAX: ffff929e3fb38100 RBX: 00000000069f29ee RCX: 00000000416c0045\n[ 1092.664058] RDX: ffff929e5fa83a88 RSI: ffff929e31a28420 RDI: 0000000000000000\n[ 1092.671209] RBP: 0000000029b11821 R08: 0000000000000000 R09: ffff929e39b4407a\n[ 1092.678343] R10: ffff929e39b4407a R11: 0000000000000007 R12: 0000000000000000\n[ 1092.685475] R13: 0000000000000001 R14: ffff929e3fb38100 R15: ffff929e39b4407a\n[ 1092.692614] FS:  0000000000000000(0000) GS:ffff929e5fa80000(0000) knlGS:0000000000000000\n[ 1092.700702] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1092.706447] CR2: 00000000000000e8 CR3: 000000031300a004 CR4: 00000000007606e0\n[ 1092.713579] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 1092.720712] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 1092.727843] PKRU: 55555554\n[ 1092.730556] Call Trace:\n[ 1092.733010]  <IRQ>\n[ 1092.735034]  tipc_sk_filter_rcv+0x7ca/0xb80 [tipc]\n[ 1092.739828]  ? __kmalloc_node_track_caller+0x1cb/0x290\n[ 1092.744974]  ? dev_hard_start_xmit+0xa5/0x210\n[ 1092.749332]  tipc_sk_rcv+0x389/0x640 [tipc]\n[ 1092.753519]  tipc_sk_mcast_rcv+0x23c/0x3a0 [tipc]\n[ 1092.758224]  tipc_rcv+0x57a/0xf20 [tipc]\n[ 1092.762154]  ? ktime_get_real_ts64+0x40/0xe0\n[ 1092.766432]  ? tpacket_rcv+0x50/0x9f0\n[ 1092.770098]  tipc_l2_rcv_msg+0x4a/0x70 [tipc]\n[ 1092.774452]  __netif_receive_skb_core+0xb62/0xbd0\n[ 1092.779164]  ? enqueue_entity+0xf6/0x630\n[ 1092.783084]  ? kmem_cache_alloc+0x158/0x1c0\n[ 1092.787272]  ? __build_skb+0x25/0xd0\n[ 1092.790849]  netif_receive_skb_internal+0x42/0xf0\n[ 1092.795557]  napi_gro_receive+0xba/0xe0\n[ 1092.799417]  mlx5e_handle_rx_cqe+0x83/0xd0 [mlx5_core]\n[ 1092.804564]  mlx5e_poll_rx_cq+0xd5/0x920 [mlx5_core]\n[ 1092.809536]  mlx5e_napi_poll+0xb2/0xce0 [mlx5_core]\n[ 1092.814415]  ? __wake_up_common_lock+0x89/0xc0\n[ 1092.818861]  net_rx_action+0x149/0x3b0\n[ 1092.822616]  __do_softirq+0xe3/0x30a\n[ 1092.826193]  irq_exit+0x100/0x110\n[ 1092.829512]  do_IRQ+0x85/0xd0\n[ 1092.832483]  common_interrupt+0xf/0xf\n[ 1092.836147]  </IRQ>\n[ 1092.838255] RIP: 0010:cpuidle_enter_state+0xb7/0x2a0\n[ 1092.843221] Code: e8 3e 79 a5 ff 80 7c 24 03 00 74 17 9c 58 0f 1f 44 00 00 f6 c4 02 0f 85 d7 01 00 00 31 ff e8 a0 6b ab ff fb 66 0f 1f 44 00 00 <48> b8 ff ff ff ff f3 01 00 00 4c 29 f3 ba ff ff ff 7f 48 39 c3 7f\n[ 1092.861967] RSP: 0018:ffffaa5ec6533e98 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffdd\n[ 1092.869530] RAX: ffff929e5faa3100 RBX: 000000fe63dd2092 RCX: 000000000000001f\n[ 1092.876665] RDX: 000000fe63dd2092 RSI: 000000003a518aaa RDI: 0000000000000000\n[ 1092.883795] RBP: 0000000000000003 R08: 0000000000000004 R09: 0000000000022940\n[ 1092.890929] R10: 0000040cb0666b56 R11: ffff929e5faa20a8 R12: ffff929e5faade78\n[ 1092.898060] R13: ffffffffb59258f8 R14: 000000fe60f3228d R15: 0000000000000000\n[ 1092.905196]  ? cpuidle_enter_state+0x92/0x2a0\n[ 1092.909555]  do_idle+0x236/0x280\n[ 1092.912785]  cpu_startup_entry+0x6f/0x80\n[ 1092.916715]  start_secondary+0x1a7/0x200\n[ 1092.920642]  secondary_startup_64+0xb7/0xc0\n[...]\n\nThe reason is that the skb list tipc_socket::mc_method.deferredq only\nis initialized for connectionless sockets, while nothing stops arriving\nmulticast messages from being filtered by connection oriented sockets,\nwith subsequent access to the said list.\n\nWe fix this by initializing the list unconditionally at socket creation.\nThis eliminates the crash, while the message still is dropped further\ndown in tipc_sk_filter_rcv() as it should be.\n\nReported-by: Li Shuang <shuali@redhat.com>\nSigned-off-by: Jon Maloy <jon.maloy@ericsson.com>\nReviewed-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/tipc/socket.c||net/tipc/socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/tipc/socket.c||net/tipc/socket.c": [
          "File: net/tipc/socket.c -> net/tipc/socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "485:   tsk_set_unreturnable(tsk, true);",
          "486:   if (sock->type == SOCK_DGRAM)",
          "487:    tsk_set_unreliable(tsk, true);",
          "489:  }",
          "491:  trace_tipc_sk_create(sk, NULL, TIPC_DUMP_NONE, \" \");",
          "492:  return 0;",
          "493: }",
          "",
          "[Removed Lines]",
          "488:   __skb_queue_head_init(&tsk->mc_method.deferredq);",
          "",
          "[Added Lines]",
          "489:  __skb_queue_head_init(&tsk->mc_method.deferredq);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4562a7393996bb28bf629277903a561bfefea177",
      "candidate_info": {
        "commit_hash": "4562a7393996bb28bf629277903a561bfefea177",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4562a7393996bb28bf629277903a561bfefea177",
        "files": [
          "tools/perf/lib/evlist.c",
          "tools/perf/lib/include/perf/evlist.h",
          "tools/perf/lib/libperf.map",
          "tools/perf/util/evlist.c"
        ],
        "message": "libperf: Add perf_evlist__init() function\n\nAdd the perf_evlist__init() function to initialize a perf_evlist struct.\n\nCommitter testing:\n\nFix a change in init ordering that was causing this backtrace:\n\n  (gdb) run stat sleep 1\n  Starting program: /root/bin/perf stat sleep 1\n  Program received signal SIGSEGV, Segmentation fault.\n  0x00000000004f6b55 in __perf_evlist__propagate_maps (evlist=0xbb34c0, evsel=0x0) at util/evlist.c:161\n  161\t\tif (!evsel->own_cpus || evlist->has_user_cpus) {\n  Missing separate debuginfos, use: dnf debuginfo-install bzip2-libs-1.0.6-29.fc30.x86_64 elfutils-libelf-0.176-3.fc30.x86_64 elfutils-libs-0.176-3.fc30.x86_64 glib2-2.60.4-1.fc30.x86_64 libbabeltrace-1.5.6-2.fc30.x86_64 libgcc-9.1.1-1.fc30.x86_64 libunwind-1.3.1-2.fc30.x86_64 libuuid-2.33.2-1.fc30.x86_64 libxcrypt-4.4.6-2.fc30.x86_64 libzstd-1.4.0-1.fc30.x86_64 numactl-libs-2.0.12-2.fc30.x86_64 pcre-8.43-2.fc30.x86_64 perl-libs-5.28.2-436.fc30.x86_64 popt-1.16-17.fc30.x86_64 python2-libs-2.7.16-2.fc30.x86_64 slang-2.3.2-5.fc30.x86_64 xz-libs-5.2.4-5.fc30.x86_64 zlib-1.2.11-15.fc30.x86_64\n  (gdb) bt\n  #0  0x00000000004f6b55 in __perf_evlist__propagate_maps (evlist=0xbb34c0, evsel=0x0) at util/evlist.c:161\n  #1  0x00000000004f6c7a in perf_evlist__propagate_maps (evlist=0xbb34c0) at util/evlist.c:178\n  #2  0x00000000004f955e in perf_evlist__set_maps (evlist=0xbb34c0, cpus=0x0, threads=0x0) at util/evlist.c:1128\n  #3  0x00000000004f66f8 in evlist__init (evlist=0xbb34c0, cpus=0x0, threads=0x0) at util/evlist.c:52\n  #4  0x00000000004f6790 in evlist__new () at util/evlist.c:64\n  #5  0x0000000000456071 in cmd_stat (argc=3, argv=0x7fffffffd670) at builtin-stat.c:1705\n  #6  0x00000000004dd0fa in run_builtin (p=0xa21e00 <commands+288>, argc=3, argv=0x7fffffffd670) at perf.c:304\n  #7  0x00000000004dd367 in handle_internal_command (argc=3, argv=0x7fffffffd670) at perf.c:356\n  #8  0x00000000004dd4ae in run_argv (argcp=0x7fffffffd4cc, argv=0x7fffffffd4c0) at perf.c:400\n  #9  0x00000000004dd81a in main (argc=3, argv=0x7fffffffd670) at perf.c:522\n  (gdb) bt\n\nSo move the initialization of the core evlist (calling\nperf_evlist__init()) to before perf_evlist__set_maps() in\nevlist__init().\n\nSigned-off-by: Jiri Olsa <jolsa@kernel.org>\nTested-by: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Alexey Budankov <alexey.budankov@linux.intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Michael Petlan <mpetlan@redhat.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: http://lkml.kernel.org/r/20190721112506.12306-39-jolsa@kernel.org\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/lib/evlist.c||tools/perf/lib/evlist.c",
          "tools/perf/lib/include/perf/evlist.h||tools/perf/lib/include/perf/evlist.h",
          "tools/perf/lib/libperf.map||tools/perf/lib/libperf.map",
          "tools/perf/util/evlist.c||tools/perf/util/evlist.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/lib/evlist.c||tools/perf/lib/evlist.c": [
          "File: tools/perf/lib/evlist.c -> tools/perf/lib/evlist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #include <perf/evlist.h>",
          "3: #include <linux/list.h>",
          "4: #include <internal/evlist.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: void perf_evlist__init(struct perf_evlist *evlist)",
          "7: {",
          "8:  INIT_LIST_HEAD(&evlist->entries);",
          "9: }",
          "",
          "---------------"
        ],
        "tools/perf/lib/include/perf/evlist.h||tools/perf/lib/include/perf/evlist.h": [
          "File: tools/perf/lib/include/perf/evlist.h -> tools/perf/lib/include/perf/evlist.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #ifndef __LIBPERF_EVLIST_H",
          "3: #define __LIBPERF_EVLIST_H",
          "5: struct perf_evlist;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: #include <perf/core.h>",
          "9: LIBPERF_API void perf_evlist__init(struct perf_evlist *evlist);",
          "",
          "---------------"
        ],
        "tools/perf/lib/libperf.map||tools/perf/lib/libperf.map": [
          "File: tools/perf/lib/libperf.map -> tools/perf/lib/libperf.map",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   perf_thread_map__get;",
          "11:   perf_thread_map__put;",
          "12:   perf_evsel__init;",
          "13:  local:",
          "15: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:   perf_evlist__init;",
          "",
          "---------------"
        ],
        "tools/perf/util/evlist.c||tools/perf/util/evlist.c": [
          "File: tools/perf/util/evlist.c -> tools/perf/util/evlist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include <linux/log2.h>",
          "34: #include <linux/err.h>",
          "35: #include <linux/zalloc.h>",
          "37: #ifdef LACKS_SIGQUEUE_PROTOTYPE",
          "38: int sigqueue(pid_t pid, int sig, const union sigval value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #include <perf/evlist.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  for (i = 0; i < PERF_EVLIST__HLIST_SIZE; ++i)",
          "50:   INIT_HLIST_HEAD(&evlist->heads[i]);",
          "52:  perf_evlist__set_maps(evlist, cpus, threads);",
          "53:  fdarray__init(&evlist->pollfd, 64);",
          "54:  evlist->workload.pid = -1;",
          "",
          "[Removed Lines]",
          "51:  INIT_LIST_HEAD(&evlist->core.entries);",
          "",
          "[Added Lines]",
          "52:  perf_evlist__init(&evlist->core);",
          "",
          "---------------"
        ]
      }
    }
  ]
}