{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
      "candidate_info": {
        "commit_hash": "342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
        "files": [
          "capstone.pc.in"
        ],
        "message": "CMake: fix pkgconfig file",
        "before_after_code_files": [
          "capstone.pc.in||capstone.pc.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "capstone.pc.in||capstone.pc.in": [
          "File: capstone.pc.in -> capstone.pc.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: Name: capstone",
          "2: Description: Capstone disassembly engine",
          "4: URL: http://www.capstone-engine.org",
          "5: Libs: -L@CMAKE_INSTALL_PREFIX@/lib -lcapstone",
          "6: Cflags: -I@CMAKE_INSTALL_PREFIX@/include/capstone",
          "",
          "[Removed Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MAJOR@.@VERSION_PATCH@",
          "",
          "[Added Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@",
          "5: archive=@CMAKE_INSTALL_PREFIX@/lib/libcapstone.a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
      "candidate_info": {
        "commit_hash": "3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
        "files": [
          "include/windowsce/intrin.h",
          "include/windowsce/stdint.h",
          "windowsce/.gitignore",
          "windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat"
        ],
        "message": "Added support for building binaries for Windows CE 7 on ARMv7 (a.k.a., Windows Embedded Compact 7) and for Windows CE 8 on ARMv7 (a.k.a., Windows Embedded Compact 2013).",
        "before_after_code_files": [
          "include/windowsce/intrin.h||include/windowsce/intrin.h",
          "include/windowsce/stdint.h||include/windowsce/stdint.h",
          "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/windowsce/intrin.h||include/windowsce/intrin.h": [
          "File: include/windowsce/intrin.h -> include/windowsce/intrin.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #if defined(_MSC_VER) && defined(_WIN32_WCE) && (_WIN32_WCE < 0x800) && !defined(__INTRIN_H_) && !defined(_INTRIN)",
          "3: #define _STDINT",
          "5: #ifdef _M_ARM",
          "6: #include <armintr.h>",
          "7: #if (_WIN32_WCE >= 0x700) && defined(__ARM_ARCH_7__) || defined(__ARM_ARCH_7A__)",
          "8: #include <arm_neon.h>",
          "9: #endif",
          "10: #endif // _M_ARM",
          "12: #endif",
          "",
          "---------------"
        ],
        "include/windowsce/stdint.h||include/windowsce/stdint.h": [
          "File: include/windowsce/stdint.h -> include/windowsce/stdint.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #if defined(_MSC_VER) && defined(_WIN32_WCE) && (_WIN32_WCE < 0x800) && !defined(_STDINT_H_) && !defined(_STDINT)",
          "3: #define _STDINT",
          "5: typedef __int8",
          "6:  int8_t,",
          "7:  int_least8_t;",
          "9: typedef __int16",
          "10:  int16_t,",
          "11:  int_least16_t;",
          "13: typedef __int32",
          "14:  int32_t,",
          "15:  int_least32_t,",
          "16:  int_fast8_t,",
          "17:  int_fast16_t,",
          "18:  int_fast32_t;",
          "20: typedef __int64",
          "21:  int64_t,",
          "22:  intmax_t,",
          "23:  int_least64_t,",
          "24:  int_fast64_t;",
          "26: typedef unsigned __int8",
          "27:  uint8_t,",
          "28:  uint_least8_t;",
          "30: typedef unsigned __int16",
          "31:  uint16_t,",
          "32:  uint_least16_t;",
          "34: typedef unsigned __int32",
          "35:  uint32_t,",
          "36:  uint_least32_t,",
          "37:  uint_fast8_t,",
          "38:  uint_fast16_t,",
          "39:  uint_fast32_t;",
          "41: typedef unsigned __int64",
          "42:  uint64_t,",
          "43:  uintmax_t,",
          "44:  uint_least64_t,",
          "45:  uint_fast64_t;",
          "47: #ifndef _INTPTR_T_DEFINED",
          "48: #define _INTPTR_T_DEFINED",
          "49: typedef __int32 intptr_t;",
          "50: #endif",
          "52: #ifndef _UINTPTR_T_DEFINED",
          "53: #define _UINTPTR_T_DEFINED",
          "54: typedef unsigned __int32 uintptr_t;",
          "55: #endif",
          "57: #define INT8_MIN         (-127i8 - 1)",
          "58: #define INT16_MIN        (-32767i16 - 1)",
          "59: #define INT32_MIN        (-2147483647i32 - 1)",
          "60: #define INT64_MIN        (-9223372036854775807i64 - 1)",
          "61: #define INT8_MAX         127i8",
          "62: #define INT16_MAX        32767i16",
          "63: #define INT32_MAX        2147483647i32",
          "64: #define INT64_MAX        9223372036854775807i64",
          "65: #define UINT8_MAX        0xffui8",
          "66: #define UINT16_MAX       0xffffui16",
          "67: #define UINT32_MAX       0xffffffffui32",
          "68: #define UINT64_MAX       0xffffffffffffffffui64",
          "70: #define INT_LEAST8_MIN   INT8_MIN",
          "71: #define INT_LEAST16_MIN  INT16_MIN",
          "72: #define INT_LEAST32_MIN  INT32_MIN",
          "73: #define INT_LEAST64_MIN  INT64_MIN",
          "74: #define INT_LEAST8_MAX   INT8_MAX",
          "75: #define INT_LEAST16_MAX  INT16_MAX",
          "76: #define INT_LEAST32_MAX  INT32_MAX",
          "77: #define INT_LEAST64_MAX  INT64_MAX",
          "78: #define UINT_LEAST8_MAX  UINT8_MAX",
          "79: #define UINT_LEAST16_MAX UINT16_MAX",
          "80: #define UINT_LEAST32_MAX UINT32_MAX",
          "81: #define UINT_LEAST64_MAX UINT64_MAX",
          "83: #define INT_FAST8_MIN    INT8_MIN",
          "84: #define INT_FAST16_MIN   INT32_MIN",
          "85: #define INT_FAST32_MIN   INT32_MIN",
          "86: #define INT_FAST64_MIN   INT64_MIN",
          "87: #define INT_FAST8_MAX    INT8_MAX",
          "88: #define INT_FAST16_MAX   INT32_MAX",
          "89: #define INT_FAST32_MAX   INT32_MAX",
          "90: #define INT_FAST64_MAX   INT64_MAX",
          "91: #define UINT_FAST8_MAX   UINT8_MAX",
          "92: #define UINT_FAST16_MAX  UINT32_MAX",
          "93: #define UINT_FAST32_MAX  UINT32_MAX",
          "94: #define UINT_FAST64_MAX  UINT64_MAX",
          "96: #define INTPTR_MIN      INT32_MIN",
          "97: #define INTPTR_MAX      INT32_MAX",
          "98: #define UINTPTR_MAX     UINT32_MAX",
          "100: #define INTMAX_MIN       INT64_MIN",
          "101: #define INTMAX_MAX       INT64_MAX",
          "102: #define UINTMAX_MAX      UINT64_MAX",
          "104: #define PTRDIFF_MIN      INTPTR_MIN",
          "105: #define PTRDIFF_MAX      INTPTR_MAX",
          "107: #ifndef SIZE_MAX",
          "108: #define SIZE_MAX        UINTPTR_MAX",
          "109: #endif",
          "111: #define SIG_ATOMIC_MIN   INT32_MIN",
          "112: #define SIG_ATOMIC_MAX   INT32_MAX",
          "114: #define WCHAR_MIN        0x0000",
          "115: #define WCHAR_MAX        0xffff",
          "117: #define WINT_MIN         0x0000",
          "118: #define WINT_MAX         0xffff",
          "120: #define INT8_C(x)    (x)",
          "121: #define INT16_C(x)   (x)",
          "122: #define INT32_C(x)   (x)",
          "123: #define INT64_C(x)   (x ## LL)",
          "125: #define UINT8_C(x)   (x)",
          "126: #define UINT16_C(x)  (x)",
          "127: #define UINT32_C(x)  (x ## U)",
          "128: #define UINT64_C(x)  (x ## ULL)",
          "130: #define INTMAX_C(x)  INT64_C(x)",
          "131: #define UINTMAX_C(x) UINT64_C(x)",
          "133: #endif",
          "",
          "---------------"
        ],
        "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat": [
          "File: windowsce/make_windowsce7-armv7.bat -> windowsce/make_windowsce7-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @echo off",
          "3: rem ***************************************************************************",
          "4: rem *                       VARIABLES TO SET FOR BUILDING                     *",
          "5: rem ***************************************************************************",
          "7: set WINCE_TOOLCHAIN_ROOT=C:\\WINCE700\\sdk",
          "8: set TOOLCHAIN=%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386\\Arm;%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386",
          "9: set INCLUDE=C:\\Program Files (x86)\\Windows CE Tools\\SDKs\\Symbol MC3200c70 Windows CE 7.0 PSDK\\Include\\Armv4i;C:\\WINCE700\\public\\common\\sdk\\inc",
          "10: set LIBPATH=C:\\Program Files (x86)\\Windows CE Tools\\SDKs\\Symbol MC3200c70 Windows CE 7.0 PSDK\\Lib\\ARMv4I",
          "11: set LIBS=-nodefaultlib:oldnames.lib -nodefaultlib:libcmtd.lib -nodefaultlib:libcmt.lib coredll.lib corelibc.lib",
          "13: rem ***************************************************************************",
          "14: rem *                           CAPSTONE CONFIGURATION                        *",
          "15: rem ***************************************************************************",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "21: set USE_SYS_DYN_MEM=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "29: rem ***************************************************************************",
          "31: setlocal ENABLEDELAYEDEXPANSION",
          "33: if \"%WINCE_TOOLCHAIN_ROOT%\"==\"\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "34: if not exist \"%WINCE_TOOLCHAIN_ROOT%\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "36: if \"%TOOLCHAIN%\"==\"\" goto check_dir_exist_TOOLCHAIN",
          "38: set CC=",
          "39: set LD=",
          "40: set AR=",
          "41: for /f \"tokens=1-8 delims=;\" %%a in (\"%TOOLCHAIN%\") do (",
          "42:   for %%i in (%%a %%b %%c %%d %%e %%f %%g %%h) do (",
          "43:     if not \"%%i\"==\"\" (",
          "44:       if not exist \"%%i\" goto check_dir_exist_TOOLCHAIN",
          "45:       if \"%CC%\"==\"\" if exist \"%%i\\cl.exe\" set CC=%%i\\cl.exe",
          "46:       if \"%LD%\"==\"\" if exist \"%%i\\link.exe\" set LD=%%i\\link.exe",
          "47:       if \"%AR%\"==\"\" if exist \"%%i\\lib.exe\" set AR=%%i\\lib.exe",
          "48:     )",
          "49:   )",
          "50: )",
          "52: if \"%CC%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "53: if \"%LD%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "54: if \"%AR%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "56: if \"%INCLUDE%\"==\"\" goto check_dir_exist_INCLUDE",
          "58: set WINDOWS_H=",
          "60: set INCLUDE_SC=%INCLUDE%",
          "61: set INCLUDE=",
          "62: for /f \"tokens=1-8 delims=;\" %%a in (\"%INCLUDE_SC%\") do (",
          "63:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "64:     if not %%i==\"\" (",
          "65:       set INCLUDE=!INCLUDE! -I %%i",
          "66:     )",
          "67:   )",
          "68: )",
          "70: if \"%LIBPATH%\"==\"\" goto check_dir_exist_LIBPATH",
          "72: set LIBPATH_SC=%LIBPATH%",
          "73: set LIBPATH=",
          "74: for /f \"tokens=1-8 delims=;\" %%a in (\"%LIBPATH_SC%\") do (",
          "75:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "76:     if not %%i==\"\" (",
          "77:       set LIBPATH=!LIBPATH! -libpath:%%i",
          "78:     )",
          "79:   )",
          "80: )",
          "82: rem ***************************************************************************",
          "83: rem *                            COMPILATION OPTIONS                          *",
          "84: rem ***************************************************************************",
          "86: set OS=windowsce",
          "87: set OS_VERSION=7.0",
          "88: set OS_VERSION_NUMBER=0x700",
          "89: set LIBARCH=arm",
          "90: set MACH=THUMB",
          "92: for /f \"delims=\" %%i in ('cd') do set THIS_DIR=%%i",
          "94: set SOURCES_ROOT=%THIS_DIR%\\..",
          "95: set TARGET_DIR=%THIS_DIR%\\bin\\%OS%_%OS_VERSION%_%LIBARCH%",
          "97: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MAJOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MAJOR=%%i",
          "98: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MINOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MINOR=%%i",
          "100: set TARGET_VERSION=%CS_API_MAJOR%.%CS_API_MINOR%",
          "101: set TAREGET_NAME=capstone-%TARGET_VERSION%",
          "103: set CPPFLAGS=-D LIBARCH_%LIBARCH% -D LIBARCH=L\\\"%LIBARCH%\\\"",
          "104: set CPPFLAGS=%CPPFLAGS% -D _CRT_SECURE_NO_DEPRECATE -D _WINDOWS -D WINVER=%OS_VERSION_NUMBER% -D UNDER_CE=%OS_VERSION_NUMBER% -D _WIN32_WCE=%OS_VERSION_NUMBER% -D WINCE -D _UNICODE -D UNICODE -D STANDARDSHELL_UI_MODEL -D _USE_MATH_DEFINES -D ARM -D _ARM -D _ARM_ -D __ARM_ARCH_7__ -D __ARM_ARCH_7A__ -D __VFP_FP__=1",
          "106: for %%a in (%DISASM_ARCH_LIST%) do set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_HAS_%%a",
          "108: if %SHARED%==0 (",
          "109:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_STATIC -D LIB_EXT=L\\\".lib\\\"",
          "110: ) else (",
          "111:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_SHARED -D LIB_EXT=L\\\".dll\\\"",
          "112: )",
          "114: if not %USE_SYS_DYN_MEM%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_USE_SYS_DYN_MEM )",
          "115: if not %DIET_MODE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_DIET )",
          "116: if not %X86_REDUCE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_REDUCE )",
          "117: if not %X86_ATT_DISABLE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_ATT_DISABLE )",
          "119: set INCLUDE=-I %SOURCES_ROOT%\\include -I %SOURCES_ROOT% %INCLUDE%",
          "120: set INCLUDE=%INCLUDE% -I %SOURCES_ROOT%\\include\\windowsce",
          "122: set CFLAGS=%CPPFLAGS% %INCLUDE% -nologo -Zi -MT -Oi -GS -GF -QRarch7 -arch:VFPv3-D32 -QRfpe- -fp:fast -Oy- -W3 -WX",
          "124: set LDFLAGS=-nologo -debug -incremental:no -manifest:no -version:%TARGET_VERSION% -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "126: set ARFLAGS=-nologo -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "128: set SOURCES=",
          "129: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "130: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "132: rem ***************************************************************************",
          "133: rem *                           COMPILATION COMMANDS                          *",
          "134: rem ***************************************************************************",
          "136: rd /q /s \"%TARGET_DIR%\"",
          "137: md \"%TARGET_DIR%\"",
          "139: set PATH=%TOOLCHAIN%;%PATH%",
          "141: rem %CC% -c %CFLAGS% -D DEBUG -D _DEBUG -Od -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "142: %CC% -c %CFLAGS% -D NDEBUG -Ox -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "143: if errorlevel 1 goto compilation_failed",
          "145: if %SHARED%==0 (",
          "146:   %AR% -out:%TARGET_DIR%\\%TAREGET_NAME%.lib %ARFLAGS% %TARGET_DIR%\\*.obj",
          "147: ) else (",
          "148:   %LD% -dll -out:%TARGET_DIR%\\%TAREGET_NAME%.dll -map:\"%TARGET_DIR%\\%TAREGET_NAME%.map\" -pdb:\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %LDFLAGS% -opt:REF -opt:ICF %TARGET_DIR%\\*.obj",
          "149: )",
          "151: endlocal",
          "152: goto done",
          "154: rem ***************************************************************************",
          "155: rem *                             ERROR REPORTING                             *",
          "156: rem ***************************************************************************",
          "158: :check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "159: echo ERROR: WINCE_TOOLCHAIN_ROOT does not specify an existing directory.",
          "160: goto done",
          "162: :check_dir_exist_TOOLCHAIN",
          "163: echo ERROR: TOOLCHAIN does not specify an existing directory.",
          "164: goto done",
          "166: :check_dir_exist_CC_LD_AR",
          "167: echo ERROR: TOOLCHAIN does not specify a valid toolchain directory.",
          "168: goto done",
          "170: :check_dir_exist_INCLUDE",
          "171: echo ERROR: INCLUDE does not specify an existing directory.",
          "172: goto done",
          "174: :check_dir_exist_LIBPATH",
          "175: echo ERROR: LIBPATH does not specify an existing directory.",
          "176: goto done",
          "178: :compilation_failed",
          "179: echo ERROR: Compilation failed.",
          "180: goto done",
          "182: :done",
          "183: pause",
          "",
          "---------------"
        ],
        "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat": [
          "File: windowsce/make_windowsce8-armv7.bat -> windowsce/make_windowsce8-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @echo off",
          "3: rem ***************************************************************************",
          "4: rem *                       VARIABLES TO SET FOR BUILDING                     *",
          "5: rem ***************************************************************************",
          "7: set WINCE_TOOLCHAIN_ROOT=C:\\Windows_CE_Tools\\SDKs\\SDK_HW90270\\Sdk",
          "8: set TOOLCHAIN=%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386\\Arm;%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386",
          "9: set INCLUDE=%WINCE_TOOLCHAIN_ROOT%\\Inc;%WINCE_TOOLCHAIN_ROOT%\\crt\\Include",
          "10: set LIBPATH=%WINCE_TOOLCHAIN_ROOT%\\Lib\\ARMV7\\retail;%WINCE_TOOLCHAIN_ROOT%\\Crt\\Lib\\ARM",
          "11: set LIBS=coredll.lib",
          "13: rem ***************************************************************************",
          "14: rem *                           CAPSTONE CONFIGURATION                        *",
          "15: rem ***************************************************************************",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "21: set USE_SYS_DYN_MEM=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "29: rem ***************************************************************************",
          "31: setlocal ENABLEDELAYEDEXPANSION",
          "33: if \"%WINCE_TOOLCHAIN_ROOT%\"==\"\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "34: if not exist \"%WINCE_TOOLCHAIN_ROOT%\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "36: if \"%TOOLCHAIN%\"==\"\" goto check_dir_exist_TOOLCHAIN",
          "38: set CC=",
          "39: set LD=",
          "40: set AR=",
          "41: for /f \"tokens=1-8 delims=;\" %%a in (\"%TOOLCHAIN%\") do (",
          "42:   for %%i in (%%a %%b %%c %%d %%e %%f %%g %%h) do (",
          "43:     if not \"%%i\"==\"\" (",
          "44:       if not exist \"%%i\" goto check_dir_exist_TOOLCHAIN",
          "45:       if \"%CC%\"==\"\" if exist \"%%i\\cl.exe\" set CC=%%i\\cl.exe",
          "46:       if \"%LD%\"==\"\" if exist \"%%i\\link.exe\" set LD=%%i\\link.exe",
          "47:       if \"%AR%\"==\"\" if exist \"%%i\\lib.exe\" set AR=%%i\\lib.exe",
          "48:     )",
          "49:   )",
          "50: )",
          "52: if \"%CC%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "53: if \"%LD%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "54: if \"%AR%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "56: if \"%INCLUDE%\"==\"\" goto check_dir_exist_INCLUDE",
          "58: set WINDOWS_H=",
          "60: set INCLUDE_SC=%INCLUDE%",
          "61: set INCLUDE=",
          "62: for /f \"tokens=1-8 delims=;\" %%a in (\"%INCLUDE_SC%\") do (",
          "63:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "64:     if not %%i==\"\" (",
          "65:       set INCLUDE=!INCLUDE! -I %%i",
          "66:     )",
          "67:   )",
          "68: )",
          "70: if \"%LIBPATH%\"==\"\" goto check_dir_exist_LIBPATH",
          "72: set LIBPATH_SC=%LIBPATH%",
          "73: set LIBPATH=",
          "74: for /f \"tokens=1-8 delims=;\" %%a in (\"%LIBPATH_SC%\") do (",
          "75:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "76:     if not %%i==\"\" (",
          "77:       set LIBPATH=!LIBPATH! -libpath:%%i",
          "78:     )",
          "79:   )",
          "80: )",
          "82: rem ***************************************************************************",
          "83: rem *                            COMPILATION OPTIONS                          *",
          "84: rem ***************************************************************************",
          "86: set OS=windowsce",
          "87: set OS_VERSION=8.0",
          "88: set OS_VERSION_NUMBER=0x800",
          "89: set LIBARCH=arm",
          "90: set MACH=ARM",
          "92: for /f \"delims=\" %%i in ('cd') do set THIS_DIR=%%i",
          "94: set SOURCES_ROOT=%THIS_DIR%\\..",
          "95: set TARGET_DIR=%THIS_DIR%\\bin\\%OS%_%OS_VERSION%_%LIBARCH%",
          "97: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MAJOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MAJOR=%%i",
          "98: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MINOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MINOR=%%i",
          "100: set TARGET_VERSION=%CS_API_MAJOR%.%CS_API_MINOR%",
          "101: set TAREGET_NAME=capstone-%TARGET_VERSION%",
          "103: set CPPFLAGS=-D LIBARCH_%LIBARCH% -D LIBARCH=L\\\"%LIBARCH%\\\"",
          "104: set CPPFLAGS=%CPPFLAGS% -D _CRT_SECURE_NO_DEPRECATE -D _WINDOWS -D WINVER=%OS_VERSION_NUMBER% -D UNDER_CE=%OS_VERSION_NUMBER% -D _WIN32_WCE=%OS_VERSION_NUMBER% -D WINCE -D _UNICODE -D UNICODE -D STANDARDSHELL_UI_MODEL -D _USE_MATH_DEFINES -D ARM -D _ARM -D _ARM_ -D __ARM_ARCH_7__ -D __ARM_ARCH_7A__ -D __VFP_FP__=1",
          "106: for %%a in (%DISASM_ARCH_LIST%) do set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_HAS_%%a",
          "108: if %SHARED%==0 (",
          "109:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_STATIC -D LIB_EXT=L\\\".lib\\\"",
          "110: ) else (",
          "111:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_SHARED -D LIB_EXT=L\\\".dll\\\"",
          "112: )",
          "114: if not %USE_SYS_DYN_MEM%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_USE_SYS_DYN_MEM )",
          "115: if not %DIET_MODE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_DIET )",
          "116: if not %X86_REDUCE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_REDUCE )",
          "117: if not %X86_ATT_DISABLE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_ATT_DISABLE )",
          "119: set INCLUDE=-I %SOURCES_ROOT%\\include -I %SOURCES_ROOT% %INCLUDE%",
          "121: set CFLAGS=%CPPFLAGS% %INCLUDE% -nologo -MP -Zi -MT -Oi -GS -fp:fast -Oy- -W3 -WX",
          "123: set LDFLAGS=-nologo -debug -incremental:no -manifest:no -version:%TARGET_VERSION% -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "125: set ARFLAGS=-nologo -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "127: set SOURCES=",
          "128: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "129: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "131: rem ***************************************************************************",
          "132: rem *                           COMPILATION COMMANDS                          *",
          "133: rem ***************************************************************************",
          "135: rd /q /s \"%TARGET_DIR%\"",
          "136: md \"%TARGET_DIR%\"",
          "138: set PATH=%TOOLCHAIN%;%PATH%",
          "140: rem %CC% -c %CFLAGS% -D DEBUG -D _DEBUG -Od -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "141: %CC% -c %CFLAGS% -D NDEBUG -Ox -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "142: if errorlevel 1 goto compilation_failed",
          "144: if %SHARED%==0 (",
          "145:   %AR% -out:%TARGET_DIR%\\%TAREGET_NAME%.lib %ARFLAGS% %TARGET_DIR%\\*.obj",
          "146: ) else (",
          "147:   %LD% -dll -out:%TARGET_DIR%\\%TAREGET_NAME%.dll -map:\"%TARGET_DIR%\\%TAREGET_NAME%.map\" -pdb:\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %LDFLAGS% -opt:REF -opt:ICF %TARGET_DIR%\\*.obj",
          "148: )",
          "150: endlocal",
          "151: goto done",
          "153: rem ***************************************************************************",
          "154: rem *                             ERROR REPORTING                             *",
          "155: rem ***************************************************************************",
          "157: :check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "158: echo ERROR: WINCE_TOOLCHAIN_ROOT does not specify an existing directory.",
          "159: goto done",
          "161: :check_dir_exist_TOOLCHAIN",
          "162: echo ERROR: TOOLCHAIN does not specify an existing directory.",
          "163: goto done",
          "165: :check_dir_exist_CC_LD_AR",
          "166: echo ERROR: TOOLCHAIN does not specify a valid toolchain directory.",
          "167: goto done",
          "169: :check_dir_exist_INCLUDE",
          "170: echo ERROR: INCLUDE does not specify an existing directory.",
          "171: goto done",
          "173: :check_dir_exist_LIBPATH",
          "174: echo ERROR: LIBPATH does not specify an existing directory.",
          "175: goto done",
          "177: :compilation_failed",
          "178: echo ERROR: Compilation failed.",
          "179: goto done",
          "181: :done",
          "182: pause",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15344de74c42e6601f94cb12bc1392338e5dec65",
      "candidate_info": {
        "commit_hash": "15344de74c42e6601f94cb12bc1392338e5dec65",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/15344de74c42e6601f94cb12bc1392338e5dec65",
        "files": [
          "windows/winkernel_mm.c"
        ],
        "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
        "before_after_code_files": [
          "windows/winkernel_mm.c||windows/winkernel_mm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "windows/winkernel_mm.c||windows/winkernel_mm.c": [
          "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include \"winkernel_mm.h\"",
          "5: #include <ntddk.h>",
          "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #include <Ntintsafe.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
          "38:  if (!block) {",
          "39:   return NULL;",
          "40:  }",
          "",
          "[Removed Lines]",
          "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
          "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
          "",
          "[Added Lines]",
          "37:  size_t number_of_bytes = 0;",
          "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
          "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
          "43:   return NULL;",
          "44:  }",
          "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
          "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c86e78fce7831116f7ee912db1d652e83651a165",
      "candidate_info": {
        "commit_hash": "c86e78fce7831116f7ee912db1d652e83651a165",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c86e78fce7831116f7ee912db1d652e83651a165",
        "files": [
          "arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86GenAsmWriter.inc",
          "cstool/Makefile"
        ],
        "message": "x86: fix movw instruction in #789",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:     }",
          "729:    }",
          "730:   } else {",
          "732:   }",
          "733:  }",
          "",
          "[Removed Lines]",
          "731:    SStream_concat0(O, \"0\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "14168:   uint64_t Bits2 = OpInfo2[opcode];",
          "14169:   uint64_t Bits = (Bits2 << 32) | Bits1;",
          "14172: #ifndef CAPSTONE_DIET",
          "14176: #endif",
          "",
          "[Removed Lines]",
          "14171:   if (!X86_lockrep(MI, O))",
          "14173:     SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "14174: #else",
          "14175:  ;",
          "",
          "[Added Lines]",
          "14171:   if (!X86_lockrep(MI, O)) {",
          "14174:     if (opcode == X86_MOV32sm) {",
          "14175:       SStream_concat0(O, \"movw\\t\");",
          "14176:     } else",
          "14177:       SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "14179:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a93cff84edfb158d25efeb16d5ee57e72686a77c",
      "candidate_info": {
        "commit_hash": "a93cff84edfb158d25efeb16d5ee57e72686a77c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a93cff84edfb158d25efeb16d5ee57e72686a77c",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c"
        ],
        "message": "fix oob write in arch/AArch64/AArch64InstPrinter.c",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: #ifndef CAPSTONE_DIET",
          "71:   uint8_t access;",
          "72:   access = get_op_access(MI->csh, MCInst_getOpcode(MI), MI->ac_idx);",
          "74:   MI->ac_idx++;",
          "75: #endif",
          "76:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].type = ARM64_OP_MEM;",
          "",
          "[Removed Lines]",
          "73:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm.op_count].access = access;",
          "",
          "[Added Lines]",
          "73:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].access = access;",
          "",
          "---------------"
        ]
      }
    }
  ]
}