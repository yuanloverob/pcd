{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
      "candidate_info": {
        "commit_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/495ed62e850f449e566a06ff827db1447cf03fcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Frame range comparisons can never be NULL because the values will have been checked for NULL prior to the test.\n\nFossilOrigin-Name: fa37cf9a6aa3e4325674cb6af68f617d25e349c3f694d0117a19a36fc42daf15",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a69bb4f257500e40ef4056d5628ef25266def5bcef07eebdb471a79fffe80237",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2543:   if( pMWin->eStart==pMWin->eEnd && regStart ){",
          "2544:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2545:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "2549:     windowAggFinal(&s, 0);",
          "2550:     sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2551:     VdbeCoverageNeverTaken(v);",
          "",
          "[Removed Lines]",
          "2546:     VdbeCoverage(v);",
          "2547:     VdbeCoverageIf(v, op==OP_Ge);",
          "2548:     VdbeCoverageIf(v, op==OP_Le);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
      "candidate_info": {
        "commit_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c"
        ],
        "message": "Avoid using non-ANSI return statement in void function sqlite3WalSnapshotUnlock().\n\nFossilOrigin-Name: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7b41222428dcebaae2e9a0e8192e091b6fdee5b1163a5fa14ca1cd4f06354983",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7698: void sqlite3PagerSnapshotUnlock(Pager *pPager){",
          "7699:   assert( pPager->pWal );",
          "7701: }",
          "",
          "[Removed Lines]",
          "7700:   return sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "[Added Lines]",
          "7700:   sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
      "candidate_info": {
        "commit_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7dc3547eeb691d5397e9dc55206daab0927937d8",
        "files": [
          "Makefile.linux-gcc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Updates to the default settings in Makefile.linux-gcc.\n\nFossilOrigin-Name: 3044cf6917ea8324175fc91657e9a5978af9748f72e1914bc361753f0b2d897d",
        "before_after_code_files": [
          "Makefile.linux-gcc||Makefile.linux-gcc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.linux-gcc||Makefile.linux-gcc": [
          "File: Makefile.linux-gcc -> Makefile.linux-gcc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #### C Compiler and options for use in building executables that",
          "20: #    will run on the platform that is doing the build.",
          "21: #",
          "23: #BCC = /opt/ancic/bin/c89 -0",
          "25: #### If the target operating system supports the \"usleep()\" system",
          "",
          "[Removed Lines]",
          "22: BCC = gcc -g -O2",
          "",
          "[Added Lines]",
          "22: BCC = gcc -g -O0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: #### Specify any extra linker options needed to make the library",
          "39: #    thread safe",
          "40: #",
          "44: #### Specify any extra libraries needed to access required functions.",
          "45: #",
          "",
          "[Removed Lines]",
          "41: #THREADLIB = -lpthread",
          "42: THREADLIB =",
          "",
          "[Added Lines]",
          "41: THREADLIB = -lpthread -lm -ldl",
          "42: #THREADLIB =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #    You can make the library go almost twice as fast if you compile",
          "55: #    with -DNDEBUG=1",
          "56: #",
          "63: #### The suffix to add to executable files.  \".exe\" for windows.",
          "64: #    Nothing for unix.",
          "",
          "[Removed Lines]",
          "57: #OPTS = -DSQLITE_DEBUG=2",
          "58: #OPTS = -DSQLITE_DEBUG=1",
          "59: #OPTS =",
          "60: OPTS = -DNDEBUG=1",
          "61: OPTS += -DHAVE_FDATASYNC=1",
          "",
          "[Added Lines]",
          "57: OPTS += -DSQLITE_DEBUG=1",
          "58: OPTS += -DSQLITE_ENABLE_WHERETRACE",
          "59: OPTS += -DSQLITE_ENABLE_SELECTTRACE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70: #    will run on the target platform.  This is usually the same",
          "71: #    as BCC, unless you are cross-compiling.",
          "72: #",
          "74: #TCC = gcc -g -O0 -Wall",
          "75: #TCC = gcc -g -O0 -Wall -fprofile-arcs -ftest-coverage",
          "76: #TCC = /opt/mingw/bin/i386-mingw32-gcc -O6",
          "",
          "[Removed Lines]",
          "73: TCC = gcc -O6",
          "",
          "[Added Lines]",
          "71: TCC = gcc -O0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92: #### Extra compiler options needed for programs that use the TCL library.",
          "93: #",
          "100: #### Linker options needed to link against the TCL library.",
          "101: #",
          "102: #LIBTCL = -ltcl -lm -ldl",
          "107: #### Additional objects for SQLite library when TCL support is enabled.",
          "108: #TCLOBJ =",
          "",
          "[Removed Lines]",
          "94: #TCL_FLAGS =",
          "95: #TCL_FLAGS = -DSTATIC_BUILD=1",
          "96: TCL_FLAGS = -I/home/drh/tcltk/8.5linux",
          "97: #TCL_FLAGS = -I/home/drh/tcltk/8.5win -DSTATIC_BUILD=1",
          "98: #TCL_FLAGS = -I/home/drh/tcltk/8.3hpux",
          "103: LIBTCL = /home/drh/tcltk/8.5linux/libtcl8.5g.a -lm -ldl",
          "104: #LIBTCL = /home/drh/tcltk/8.5win/libtcl85s.a -lmsvcrt",
          "105: #LIBTCL = /home/drh/tcltk/8.3hpux/libtcl8.3.a -ldld -lm -lc",
          "",
          "[Added Lines]",
          "92: TCL_FLAGS = -I/home/drh/tcl/include/tcl8.6",
          "97: LIBTCL = /home/drh/tcl/lib/libtcl8.6.a -lm -lpthread -ldl -lz",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5351e920f489562f959ab8a376ff720f845ea165e0cdc7c3a271aac53c2aa64a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
      "candidate_info": {
        "commit_hash": "f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
        "files": [
          "ext/fts5/fts5_tokenize.c",
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/vdbe.h"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: b57c545a384ab5d62becf3164945b32b1e108b2fb4c8dbd939a1706c2079e18b",
        "before_after_code_files": [
          "ext/fts5/fts5_tokenize.c||ext/fts5/fts5_tokenize.c",
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/vdbe.h||src/vdbe.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_tokenize.c||ext/fts5/fts5_tokenize.c": [
          "File: ext/fts5/fts5_tokenize.c -> ext/fts5/fts5_tokenize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "274:           if( bToken!=bTokenChars && sqlite3Fts5UnicodeIsdiacritic(iCode)==0 ){",
          "275:             int i;",
          "276:             for(i=0; i<nNew; i++){",
          "278:             }",
          "279:             memmove(&aNew[i+1], &aNew[i], (nNew-i)*sizeof(int));",
          "280:             aNew[i] = iCode;",
          "",
          "[Removed Lines]",
          "277:               if( aNew[i]>iCode ) break;",
          "",
          "[Added Lines]",
          "277:               if( (u32)aNew[i]>iCode ) break;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e130319317e761193890ef75787a3c114b61166f518df019697be8e2c820ec54",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2693:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2695:       if( ExprHasProperty(pExpr, EP_xIsSelect) ){",
          "2696:         ExplainQueryPlan((pParse, 0, \"REUSE LIST SUBQUERY %d\",",
          "2697:               pExpr->x.pSelect->selId));",
          "",
          "[Removed Lines]",
          "2694:       int addr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "2694:       addrOnce = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2699:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2700:                         pExpr->y.sub.iAddr);",
          "2701:       sqlite3VdbeAddOp2(v, OP_OpenDup, iTab, pExpr->iTable);",
          "2703:       return;",
          "2704:     }",
          "",
          "[Removed Lines]",
          "2702:       sqlite3VdbeJumpHere(v, addr);",
          "",
          "[Added Lines]",
          "2702:       sqlite3VdbeJumpHere(v, addrOnce);",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:   void sqlite3VdbeExplain(Parse*,u8,const char*,...);",
          "208:   void sqlite3VdbeExplainPop(Parse*);",
          "209:   int sqlite3VdbeExplainParent(Parse*);",
          "211: # define ExplainQueryPlan(P)        sqlite3VdbeExplain P",
          "212: # define ExplainQueryPlanPop(P)     sqlite3VdbeExplainPop(P)",
          "213: # define ExplainQueryPlanParent(P)  sqlite3VdbeExplainParent(P)",
          "",
          "[Removed Lines]",
          "210:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
      "candidate_info": {
        "commit_hash": "7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Fix the previous check-in [db9acef14d492121] so that the amalgamation build works for systems for which lack HAVE_ISNAN.\n\nFossilOrigin-Name: 3cc55e09e6c1de2059d97bdddf2fdfbdcc62c584b513f56faf9d3a39ef80cddd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: db9acef14d49212108c8082cc15a9b9b4a56b8afe4fe1104ddf62783739c1fbe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"sqliteInt.h\"",
          "19: #include <stdarg.h>",
          "",
          "[Removed Lines]",
          "20: #if HAVE_ISNAN || SQLITE_HAVE_ISNAN",
          "21: # include <math.h>",
          "22: #endif",
          "",
          "[Added Lines]",
          "20: #include <math.h>",
          "",
          "---------------"
        ]
      }
    }
  ]
}