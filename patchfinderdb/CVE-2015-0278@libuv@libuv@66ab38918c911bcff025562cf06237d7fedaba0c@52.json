{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "35ea88cf6ba99309cb85eb9bb6fd0057f0dfef71",
      "candidate_info": {
        "commit_hash": "35ea88cf6ba99309cb85eb9bb6fd0057f0dfef71",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/35ea88cf6ba99309cb85eb9bb6fd0057f0dfef71",
        "files": [
          "configure.ac"
        ],
        "message": "build: disable parallel automake tests\n\nOur tests are not parallelizable and besides, they're one big test\nfrom the perspective of the automake test driver anyway. Turn on\nserial mode.",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: AC_PREREQ(2.57)",
          "16: AC_INIT([libuv], [0.11.5], [https://github.com/joyent/libuv/issues])",
          "18: AC_CONFIG_MACRO_DIR([m4])",
          "19: AC_CANONICAL_HOST",
          "20: AC_ENABLE_SHARED",
          "",
          "[Removed Lines]",
          "17: AM_INIT_AUTOMAKE([foreign subdir-objects -Wall -Werror])",
          "",
          "[Added Lines]",
          "17: AM_INIT_AUTOMAKE([foreign serial-tests subdir-objects -Wall -Werror])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "666aa2f0683dc8b80954c01e5799d476e4068350",
      "candidate_info": {
        "commit_hash": "666aa2f0683dc8b80954c01e5799d476e4068350",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/666aa2f0683dc8b80954c01e5799d476e4068350",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/version.c"
        ],
        "message": "Now working on v0.11.19",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "17: AC_CONFIG_MACRO_DIR([m4])",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "",
          "[Removed Lines]",
          "16: AC_INIT([libuv], [0.11.18], [https://github.com/joyent/libuv/issues])",
          "",
          "[Added Lines]",
          "16: AC_INIT([libuv], [0.11.19], [https://github.com/joyent/libuv/issues])",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "34: #define UV_VERSION_PATCH 18",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "34: #define UV_VERSION_PATCH 19",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ad61807ffa893f610f1cc87007e332582617dbf",
      "candidate_info": {
        "commit_hash": "1ad61807ffa893f610f1cc87007e332582617dbf",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1ad61807ffa893f610f1cc87007e332582617dbf",
        "files": [
          "test/test-spawn.c"
        ],
        "message": "test: fix spawn_stdout_and_stderr_to_file test\n\nS_IREAD and S_IWRITE are obsolete in GNU libs and\nnot included in the Android NDK's libc. See\nhttp://www.gnu.org/savannah-checkouts/gnu/libc\n/manual/html_node/Permission-Bits.html",
        "before_after_code_files": [
          "test/test-spawn.c||test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-spawn.c||test/test-spawn.c": [
          "File: test/test-spawn.c -> test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:   init_process_options(\"spawn_helper6\", exit_cb);",
          "292:   r = uv_fs_open(uv_default_loop(), &fs_req, \"stdout_file\", O_CREAT | O_RDWR,",
          "294:   ASSERT(r != -1);",
          "295:   uv_fs_req_cleanup(&fs_req);",
          "",
          "[Removed Lines]",
          "293:       S_IREAD | S_IWRITE, NULL);",
          "",
          "[Added Lines]",
          "293:       S_IRUSR | S_IWUSR, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a8cff4b34c6dbaf6d31a2c9dda8afa3b1509cf0",
      "candidate_info": {
        "commit_hash": "8a8cff4b34c6dbaf6d31a2c9dda8afa3b1509cf0",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/8a8cff4b34c6dbaf6d31a2c9dda8afa3b1509cf0",
        "files": [
          "src/unix/core.c",
          "src/win/util.c"
        ],
        "message": "unix, windows: don't include null byte in uv_cwd size\n\nMake it consistent with uv_exepath",
        "before_after_code_files": [
          "src/unix/core.c||src/unix/core.c",
          "src/win/util.c||src/win/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/core.c||src/unix/core.c": [
          "File: src/unix/core.c -> src/unix/core.c"
        ],
        "src/win/util.c||src/win/util.c": [
          "File: src/win/util.c -> src/win/util.c"
        ]
      }
    },
    {
      "candidate_hash": "0c726e76a09efb4b27b0b2ca18b489053c1b50ad",
      "candidate_info": {
        "commit_hash": "0c726e76a09efb4b27b0b2ca18b489053c1b50ad",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/0c726e76a09efb4b27b0b2ca18b489053c1b50ad",
        "files": [
          "src/win/signal.c"
        ],
        "message": "windows: fix console signal handler refcount",
        "before_after_code_files": [
          "src/win/signal.c||src/win/signal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/signal.c||src/win/signal.c": [
          "File: src/win/signal.c -> src/win/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     return 0;",
          "136:   if (!SetConsoleCtrlHandler(uv__signal_control_handler, TRUE))",
          "137:     return GetLastError();",
          "",
          "[Removed Lines]",
          "133:   if (uv__signal_control_handler_refs > 0)",
          "",
          "[Added Lines]",
          "133:   if (uv__signal_control_handler_refs > 0) {",
          "134:     uv__signal_control_handler_refs++;",
          "136:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}