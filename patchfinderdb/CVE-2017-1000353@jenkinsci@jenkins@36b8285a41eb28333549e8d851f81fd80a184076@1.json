{
  "cve_id": "CVE-2017-1000353",
  "cve_desc": "Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an unauthenticated remote code execution. An unauthenticated remote code execution vulnerability allowed attackers to transfer a serialized Java `SignedObject` object to the Jenkins CLI, that would be deserialized using a new `ObjectInputStream`, bypassing the existing blacklist-based protection mechanism. We're fixing this issue by adding `SignedObject` to the blacklist. We're also backporting the new HTTP CLI protocol from Jenkins 2.54 to LTS 2.46.2, and deprecating the remoting-based (i.e. Java serialization) CLI protocol, disabling it by default.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "36b8285a41eb28333549e8d851f81fd80a184076",
  "patch_info": {
    "commit_hash": "36b8285a41eb28333549e8d851f81fd80a184076",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/36b8285a41eb28333549e8d851f81fd80a184076",
    "files": [
      "core/src/main/java/jenkins/model/Jenkins.java",
      "pom.xml",
      "test/src/test/java/jenkins/security/Security218CliTest.java"
    ],
    "message": "[SECURITY-429] Fixing by blacklisting SignedObject.",
    "before_after_code_files": [
      "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java",
      "test/src/test/java/jenkins/security/Security218CliTest.java||test/src/test/java/jenkins/security/Security218CliTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
      "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "296: import static hudson.Util.*;",
      "297: import static hudson.init.InitMilestone.*;",
      "298: import hudson.util.LogTaskListener;",
      "299: import static java.util.logging.Level.*;",
      "300: import static javax.servlet.http.HttpServletResponse.*;",
      "301: import org.kohsuke.stapler.WebMethod;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "298: import hudson.remoting.ClassFilter;",
      "301: import java.util.regex.Pattern;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "813:             adjuncts = new AdjunctManager(servletContext, pluginManager.uberClassLoader,\"adjuncts/\"+SESSION_HASH, TimeUnit2.DAYS.toMillis(365));",
      "816:             executeReactor( is,",
      "817:                     pluginManager.initTasks(is),    // loading and preparing plugins",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "817:             ClassFilter.appendDefaultFilter(Pattern.compile(\"java[.]security[.]SignedObject\")); // TODO move to standard blacklist",
      "",
      "---------------"
    ],
    "test/src/test/java/jenkins/security/Security218CliTest.java||test/src/test/java/jenkins/security/Security218CliTest.java": [
      "File: test/src/test/java/jenkins/security/Security218CliTest.java -> test/src/test/java/jenkins/security/Security218CliTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: import java.io.PrintStream;",
      "33: import jenkins.security.security218.Payload;",
      "34: import org.jenkinsci.remoting.RoleChecker;",
      "36: import org.junit.Test;",
      "37: import static org.junit.Assert.*;",
      "38: import org.junit.Rule;",
      "",
      "[Removed Lines]",
      "35: import org.junit.Ignore;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "170:         probe(Payload.Ldap, PayloadCaller.EXIT_CODE_REJECTED);",
      "171:     }",
      "174:     @PresetData(PresetData.DataSet.ANONYMOUS_READONLY)",
      "175:     @Test",
      "176:     @Issue(\"SECURITY-429\")",
      "",
      "[Removed Lines]",
      "173:     @Ignore(\"TODO fails unless ^java[.]security[.]SignedObject is blacklisted\")",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d2c443d14b05670e41c367673bd5346a16272d75",
      "candidate_info": {
        "commit_hash": "d2c443d14b05670e41c367673bd5346a16272d75",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d2c443d14b05670e41c367673bd5346a16272d75",
        "files": [
          "core/src/main/java/jenkins/model/Jenkins.java"
        ],
        "message": "@oleg-nenashev wants an error message",
        "before_after_code_files": [
          "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
          "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "840:                         }",
          "841:                     }",
          "842:                 } catch (NoSuchFieldException | IllegalAccessException x) {",
          "844:                 }",
          "845:             }",
          "",
          "[Removed Lines]",
          "843:                     throw new Error(x);",
          "",
          "[Added Lines]",
          "843:                     throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a64f10163f1900efdac28108f285628d2aab2bbd",
      "candidate_info": {
        "commit_hash": "a64f10163f1900efdac28108f285628d2aab2bbd",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a64f10163f1900efdac28108f285628d2aab2bbd",
        "files": [
          "core/src/main/java/jenkins/model/Jenkins.java"
        ],
        "message": "Deleting now-dead code path.",
        "before_after_code_files": [
          "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
          "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "928:                 try {",
          "929:                     Field blacklistPatternsF = ClassFilter.DEFAULT.getClass().getDeclaredField(\"blacklistPatterns\");",
          "930:                     blacklistPatternsF.setAccessible(true);",
          "948:                         }",
          "949:                     }",
          "950:                 } catch (NoSuchFieldException | IllegalAccessException x) {",
          "951:                     throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);",
          "952:                 }",
          "",
          "[Removed Lines]",
          "931:                     Object blacklistPatterns = blacklistPatternsF.get(ClassFilter.DEFAULT);",
          "932:                     if (blacklistPatterns instanceof List) {",
          "933:                         @SuppressWarnings(\"unchecked\")",
          "934:                         List<Pattern> blacklistPatternsL = (List) blacklistPatterns;",
          "935:                         blacklistPatternsL.add(Pattern.compile(\"java[.]security[.]SignedObject\"));",
          "936:                     } else { // remoting 2.62+",
          "937:                         Object[] blacklistPatternsA = (Object[]) blacklistPatterns;",
          "938:                         boolean found = false;",
          "939:                         for (int i = 0; i < blacklistPatternsA.length; i++) {",
          "940:                             if (blacklistPatternsA[i] instanceof Pattern) {",
          "941:                                 blacklistPatternsA[i] = Pattern.compile(\"(\" + blacklistPatternsA[i] + \")|(java[.]security[.]SignedObject)\");",
          "942:                                 found = true;",
          "943:                                 break;",
          "944:                             }",
          "945:                         }",
          "946:                         if (!found) {",
          "947:                             throw new Error(\"no Pattern found among \" + Arrays.toString(blacklistPatternsA));",
          "",
          "[Added Lines]",
          "931:                     Object[] blacklistPatternsA = (Object[]) blacklistPatternsF.get(ClassFilter.DEFAULT);",
          "932:                     boolean found = false;",
          "933:                     for (int i = 0; i < blacklistPatternsA.length; i++) {",
          "934:                         if (blacklistPatternsA[i] instanceof Pattern) {",
          "935:                             blacklistPatternsA[i] = Pattern.compile(\"(\" + blacklistPatternsA[i] + \")|(java[.]security[.]SignedObject)\");",
          "936:                             found = true;",
          "937:                             break;",
          "940:                     if (!found) {",
          "941:                         throw new Error(\"no Pattern found among \" + Arrays.toString(blacklistPatternsA));",
          "942:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1700464921c1171d56eab4cc8f8ee4ff57ac5f1a",
      "candidate_info": {
        "commit_hash": "1700464921c1171d56eab4cc8f8ee4ff57ac5f1a",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1700464921c1171d56eab4cc8f8ee4ff57ac5f1a",
        "files": [
          "core/src/main/java/jenkins/model/Jenkins.java",
          "pom.xml"
        ],
        "message": "Using reflection rather than calling a type-safe method in ClassFilter.",
        "before_after_code_files": [
          "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
          "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "121: import hudson.model.listeners.SCMListener;",
          "122: import hudson.model.listeners.SaveableListener;",
          "123: import hudson.remoting.Callable;",
          "124: import hudson.remoting.LocalChannel;",
          "125: import hudson.remoting.VirtualChannel;",
          "126: import hudson.scm.RepositoryBrowser;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124: import hudson.remoting.ClassFilter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256: import java.io.InputStream;",
          "257: import java.io.PrintWriter;",
          "258: import java.io.StringWriter;",
          "259: import java.net.BindException;",
          "260: import java.net.HttpURLConnection;",
          "261: import java.net.URL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260: import java.lang.reflect.Field;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "292: import java.util.logging.Level;",
          "293: import java.util.logging.LogRecord;",
          "294: import java.util.logging.Logger;",
          "296: import static hudson.Util.*;",
          "297: import static hudson.init.InitMilestone.*;",
          "299: import hudson.util.LogTaskListener;",
          "300: import static java.util.logging.Level.*;",
          "302: import static javax.servlet.http.HttpServletResponse.*;",
          "303: import org.kohsuke.stapler.WebMethod;",
          "",
          "[Removed Lines]",
          "298: import hudson.remoting.ClassFilter;",
          "301: import java.util.regex.Pattern;",
          "",
          "[Added Lines]",
          "297: import java.util.regex.Pattern;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "815:             adjuncts = new AdjunctManager(servletContext, pluginManager.uberClassLoader,\"adjuncts/\"+SESSION_HASH, TimeUnit2.DAYS.toMillis(365));",
          "820:             executeReactor( is,",
          "",
          "[Removed Lines]",
          "817:             ClassFilter.appendDefaultFilter(Pattern.compile(\"java[.]security[.]SignedObject\")); // TODO move to standard blacklist",
          "",
          "[Added Lines]",
          "819:             if (System.getProperty(ClassFilter.FILE_OVERRIDE_LOCATION_PROPERTY) == null) {",
          "820:                 try {",
          "821:                     Field blacklistPatternsF = ClassFilter.DEFAULT.getClass().getDeclaredField(\"blacklistPatterns\");",
          "822:                     blacklistPatternsF.setAccessible(true);",
          "823:                     @SuppressWarnings(\"unchecked\")",
          "824:                     List<Pattern> blacklistPatterns = (List) blacklistPatternsF.get(ClassFilter.DEFAULT);",
          "825:                     blacklistPatterns.add(Pattern.compile(\"java[.]security[.]SignedObject\"));",
          "826:                 } catch (NoSuchFieldException | IllegalAccessException x) {",
          "827:                     throw new Error(x);",
          "828:                 }",
          "829:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6ef88211b22d0aec54431820cfb5e5a9fa91610",
      "candidate_info": {
        "commit_hash": "f6ef88211b22d0aec54431820cfb5e5a9fa91610",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f6ef88211b22d0aec54431820cfb5e5a9fa91610",
        "files": [
          "core/src/main/java/hudson/slaves/SlaveComputer.java",
          "core/src/main/java/jenkins/model/Jenkins.java",
          "pom.xml"
        ],
        "message": "[JENKINS-46754] Revert \"Upgrade Remoting to 3.11 (#2988)\"\n\nThis reverts commit dc8000cc1e36399595883858c3aae8f135177d49.",
        "before_after_code_files": [
          "core/src/main/java/hudson/slaves/SlaveComputer.java||core/src/main/java/hudson/slaves/SlaveComputer.java",
          "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/slaves/SlaveComputer.java||core/src/main/java/hudson/slaves/SlaveComputer.java": [
          "File: core/src/main/java/hudson/slaves/SlaveComputer.java -> core/src/main/java/hudson/slaves/SlaveComputer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "454:         }",
          "455:         @Override public Integer call() {",
          "456:             Channel c = Channel.current();",
          "460:             return resource ? c.resourceLoadingCount.get() : c.classLoadingCount.get();",
          "461:         }",
          "462:     }",
          "",
          "[Removed Lines]",
          "457:             if (c == null) {",
          "458:                 return -1;",
          "459:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "474:         }",
          "475:         @Override public Long call() {",
          "476:             Channel c = Channel.current();",
          "480:             return resource ? c.resourceLoadingTime.get() : c.classLoadingTime.get();",
          "481:         }",
          "482:     }",
          "",
          "[Removed Lines]",
          "477:             if (c == null) {",
          "478:                 return Long.valueOf(-1);",
          "479:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
          "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "251: import java.io.IOException;",
          "252: import java.io.InputStream;",
          "253: import java.io.PrintWriter;",
          "254: import java.net.BindException;",
          "255: import java.net.HttpURLConnection;",
          "256: import java.net.URL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254: import java.lang.reflect.Field;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "903:             adjuncts = new AdjunctManager(servletContext, pluginManager.uberClassLoader,\"adjuncts/\"+SESSION_HASH, TimeUnit2.DAYS.toMillis(365));",
          "909:             }",
          "",
          "[Removed Lines]",
          "905:             try {",
          "906:                 ClassFilter.appendDefaultFilter(Pattern.compile(\"java[.]security[.]SignedObject\")); // TODO move to standard blacklist",
          "907:             } catch (ClassFilter.ClassFilterException ex) {",
          "908:                 throw new IOException(\"Remoting library rejected the java[.]security[.]SignedObject blacklist pattern\", ex);",
          "",
          "[Added Lines]",
          "907:             if (System.getProperty(ClassFilter.FILE_OVERRIDE_LOCATION_PROPERTY) == null) { // not using SystemProperties since ClassFilter does not either",
          "908:                 try {",
          "909:                     Field blacklistPatternsF = ClassFilter.DEFAULT.getClass().getDeclaredField(\"blacklistPatterns\");",
          "910:                     blacklistPatternsF.setAccessible(true);",
          "911:                     Object[] blacklistPatternsA = (Object[]) blacklistPatternsF.get(ClassFilter.DEFAULT);",
          "912:                     boolean found = false;",
          "913:                     for (int i = 0; i < blacklistPatternsA.length; i++) {",
          "914:                         if (blacklistPatternsA[i] instanceof Pattern) {",
          "915:                             blacklistPatternsA[i] = Pattern.compile(\"(\" + blacklistPatternsA[i] + \")|(java[.]security[.]SignedObject)\");",
          "916:                             found = true;",
          "917:                             break;",
          "918:                         }",
          "919:                     }",
          "920:                     if (!found) {",
          "921:                         throw new Error(\"no Pattern found among \" + Arrays.toString(blacklistPatternsA));",
          "922:                     }",
          "923:                 } catch (NoSuchFieldException | IllegalAccessException x) {",
          "924:                     throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);",
          "925:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9ad963d1fb7e9840cd79bf084c3ab180708aca0",
      "candidate_info": {
        "commit_hash": "f9ad963d1fb7e9840cd79bf084c3ab180708aca0",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f9ad963d1fb7e9840cd79bf084c3ab180708aca0",
        "files": [
          "core/src/main/java/hudson/slaves/SlaveComputer.java",
          "core/src/main/java/jenkins/model/Jenkins.java",
          "pom.xml"
        ],
        "message": "Revert \"[JENKINS-46754] Revert \"Upgrade Remoting to 3.11 (#2988)\"\"\n\nThis reverts commit f6ef88211b22d0aec54431820cfb5e5a9fa91610.",
        "before_after_code_files": [
          "core/src/main/java/hudson/slaves/SlaveComputer.java||core/src/main/java/hudson/slaves/SlaveComputer.java",
          "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/slaves/SlaveComputer.java||core/src/main/java/hudson/slaves/SlaveComputer.java": [
          "File: core/src/main/java/hudson/slaves/SlaveComputer.java -> core/src/main/java/hudson/slaves/SlaveComputer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "454:         }",
          "455:         @Override public Integer call() {",
          "456:             Channel c = Channel.current();",
          "457:             return resource ? c.resourceLoadingCount.get() : c.classLoadingCount.get();",
          "458:         }",
          "459:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457:             if (c == null) {",
          "458:                 return -1;",
          "459:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "471:         }",
          "472:         @Override public Long call() {",
          "473:             Channel c = Channel.current();",
          "474:             return resource ? c.resourceLoadingTime.get() : c.classLoadingTime.get();",
          "475:         }",
          "476:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477:             if (c == null) {",
          "478:                 return Long.valueOf(-1);",
          "479:             }",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/model/Jenkins.java||core/src/main/java/jenkins/model/Jenkins.java": [
          "File: core/src/main/java/jenkins/model/Jenkins.java -> core/src/main/java/jenkins/model/Jenkins.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "251: import java.io.IOException;",
          "252: import java.io.InputStream;",
          "253: import java.io.PrintWriter;",
          "255: import java.net.BindException;",
          "256: import java.net.HttpURLConnection;",
          "257: import java.net.URL;",
          "",
          "[Removed Lines]",
          "254: import java.lang.reflect.Field;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "904:             adjuncts = new AdjunctManager(servletContext, pluginManager.uberClassLoader,\"adjuncts/\"+SESSION_HASH, TimeUnit2.DAYS.toMillis(365));",
          "926:             }",
          "",
          "[Removed Lines]",
          "907:             if (System.getProperty(ClassFilter.FILE_OVERRIDE_LOCATION_PROPERTY) == null) { // not using SystemProperties since ClassFilter does not either",
          "908:                 try {",
          "909:                     Field blacklistPatternsF = ClassFilter.DEFAULT.getClass().getDeclaredField(\"blacklistPatterns\");",
          "910:                     blacklistPatternsF.setAccessible(true);",
          "911:                     Object[] blacklistPatternsA = (Object[]) blacklistPatternsF.get(ClassFilter.DEFAULT);",
          "912:                     boolean found = false;",
          "913:                     for (int i = 0; i < blacklistPatternsA.length; i++) {",
          "914:                         if (blacklistPatternsA[i] instanceof Pattern) {",
          "915:                             blacklistPatternsA[i] = Pattern.compile(\"(\" + blacklistPatternsA[i] + \")|(java[.]security[.]SignedObject)\");",
          "916:                             found = true;",
          "917:                             break;",
          "918:                         }",
          "919:                     }",
          "920:                     if (!found) {",
          "921:                         throw new Error(\"no Pattern found among \" + Arrays.toString(blacklistPatternsA));",
          "922:                     }",
          "923:                 } catch (NoSuchFieldException | IllegalAccessException x) {",
          "924:                     throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);",
          "925:                 }",
          "",
          "[Added Lines]",
          "905:             try {",
          "906:                 ClassFilter.appendDefaultFilter(Pattern.compile(\"java[.]security[.]SignedObject\")); // TODO move to standard blacklist",
          "907:             } catch (ClassFilter.ClassFilterException ex) {",
          "908:                 throw new IOException(\"Remoting library rejected the java[.]security[.]SignedObject blacklist pattern\", ex);",
          "",
          "---------------"
        ]
      }
    }
  ]
}