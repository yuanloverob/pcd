{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "59cbe183897344270341ae4ec8fed1125b5a9f38",
      "candidate_info": {
        "commit_hash": "59cbe183897344270341ae4ec8fed1125b5a9f38",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/59cbe183897344270341ae4ec8fed1125b5a9f38",
        "files": [
          "include/platform.h"
        ],
        "message": "add *_MIN *_MAX defines for system has no stdint.h",
        "before_after_code_files": [
          "include/platform.h||include/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/platform.h||include/platform.h": [
          "File: include/platform.h -> include/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: typedef unsigned int   uint32_t;",
          "42: typedef signed long long   int64_t;",
          "43: typedef unsigned long long uint64_t;",
          "44: #endif",
          "46: #define __PRI_8_LENGTH_MODIFIER__ \"hh\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: #define INT8_MIN         (-127i8 - 1)",
          "47: #define INT16_MIN        (-32767i16 - 1)",
          "48: #define INT32_MIN        (-2147483647i32 - 1)",
          "49: #define INT64_MIN        (-9223372036854775807i64 - 1)",
          "50: #define INT8_MAX         127i8",
          "51: #define INT16_MAX        32767i16",
          "52: #define INT32_MAX        2147483647i32",
          "53: #define INT64_MAX        9223372036854775807i64",
          "54: #define UINT8_MAX        0xffui8",
          "55: #define UINT16_MAX       0xffffui16",
          "56: #define UINT32_MAX       0xffffffffui32",
          "57: #define UINT64_MAX       0xffffffffffffffffui64",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9ace1c70a894eb344abd8bbc73fca3a28008402",
      "candidate_info": {
        "commit_hash": "e9ace1c70a894eb344abd8bbc73fca3a28008402",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e9ace1c70a894eb344abd8bbc73fca3a28008402",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool version 2",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:  }",
          "230:  if (!strcmp(mode, \"x16\")) {",
          "231:   arch = \"x86\";",
          "232:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "233:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:         md = CS_MODE_64;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "035214b1947dd349fe561eecd05f56d8d0963df9",
      "candidate_info": {
        "commit_hash": "035214b1947dd349fe561eecd05f56d8d0963df9",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/035214b1947dd349fe561eecd05f56d8d0963df9",
        "files": [
          "include/capstone/arm64.h"
        ],
        "message": "arm64: change access field type to uint8_t",
        "before_after_code_files": [
          "include/capstone/arm64.h||include/capstone/arm64.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/arm64.h||include/capstone/arm64.h": [
          "File: include/capstone/arm64.h -> include/capstone/arm64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "656: } cs_arm64_op;",
          "",
          "[Removed Lines]",
          "655:  cs_ac_type access;",
          "",
          "[Added Lines]",
          "655:  uint8_t access;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56aa0ac3944cbd945cd503c26c22674ba821b8e8",
      "candidate_info": {
        "commit_hash": "56aa0ac3944cbd945cd503c26c22674ba821b8e8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/56aa0ac3944cbd945cd503c26c22674ba821b8e8",
        "files": [
          "cs.c"
        ],
        "message": "arm: reset IT block before cs_disasm(). this fixes issue #643",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "563:  handle->errnum = CS_ERR_OK;",
          "565: #ifdef CAPSTONE_USE_SYS_DYN_MEM",
          "566:  if (count > 0 && count <= INSN_CACHE_SIZE)",
          "567:   cache_size = (unsigned int) count;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:  handle->ITBlock.size = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e7f1d04e71aa84ba4effb7c25c2c662e739b9ef",
      "candidate_info": {
        "commit_hash": "8e7f1d04e71aa84ba4effb7c25c2c662e739b9ef",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8e7f1d04e71aa84ba4effb7c25c2c662e739b9ef",
        "files": [
          "arch/ARM/ARMInstPrinter.c",
          "arch/ARM/ARMMappingInsnOp.inc"
        ],
        "message": "arm: fix issue #747",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "739:         if (MI->csh->detail) {",
          "740:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].type = ARM_OP_REG;",
          "741:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].reg = BaseReg;",
          "743:          MI->flat_insn->detail->arm.op_count++;",
          "744:         }",
          "745:         if (Writeback) {",
          "746:          MI->writeback = true;",
          "",
          "[Removed Lines]",
          "742:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].access = CS_AC_READ;",
          "",
          "[Added Lines]",
          "742:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].access = CS_AC_READ | CS_AC_WRITE;",
          "744:                                  printf(\"count = %u, reg = %u\\n\", MI->flat_insn->detail->arm.op_count, BaseReg);",
          "",
          "---------------"
        ],
        "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc": [
          "File: arch/ARM/ARMMappingInsnOp.inc -> arch/ARM/ARMMappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:  { CS_AC_READ, CS_AC_WRITE, 0 }",
          "315: },",
          "318: },",
          "320:  { CS_AC_READ, CS_AC_WRITE, 0 }",
          "",
          "[Removed Lines]",
          "317:  { CS_AC_WRITE, CS_AC_WRITE, 0 }",
          "",
          "[Added Lines]",
          "317:  { CS_AC_READ | CS_AC_WRITE, CS_AC_WRITE, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6506:  { 0 }",
          "6507: },",
          "6510: },",
          "6512:  { CS_AC_WRITE, 0 }",
          "",
          "[Removed Lines]",
          "6509:  { CS_AC_READ, CS_AC_WRITE, 0 }",
          "",
          "[Added Lines]",
          "6509:  { CS_AC_WRITE, 0 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}