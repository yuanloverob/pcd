{
  "cve_id": "CVE-2012-0045",
  "cve_desc": "The em_syscall function in arch/x86/kvm/emulate.c in the KVM implementation in the Linux kernel before 3.2.14 does not properly handle the 0f05 (aka syscall) opcode, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application, as demonstrated by an NASM file.",
  "repo": "torvalds/linux",
  "patch_hash": "c2226fc9e87ba3da060e47333657cd6616652b84",
  "patch_info": {
    "commit_hash": "c2226fc9e87ba3da060e47333657cd6616652b84",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c2226fc9e87ba3da060e47333657cd6616652b84",
    "files": [
      "arch/x86/include/asm/kvm_emulate.h",
      "arch/x86/kvm/emulate.c"
    ],
    "message": "KVM: x86: fix missing checks in syscall emulation\n\nOn hosts without this patch, 32bit guests will crash (and 64bit guests\nmay behave in a wrong way) for example by simply executing following\nnasm-demo-application:\n\n    [bits 32]\n    global _start\n    SECTION .text\n    _start: syscall\n\n(I tested it with winxp and linux - both always crashed)\n\n    Disassembly of section .text:\n\n    00000000 <_start>:\n       0:   0f 05                   syscall\n\nThe reason seems a missing \"invalid opcode\"-trap (int6) for the\nsyscall opcode \"0f05\", which is not available on Intel CPUs\nwithin non-longmodes, as also on some AMD CPUs within legacy-mode.\n(depending on CPU vendor, MSR_EFER and cpuid)\n\nBecause previous mentioned OSs may not engage corresponding\nsyscall target-registers (STAR, LSTAR, CSTAR), they remain\nNULL and (non trapping) syscalls are leading to multiple\nfaults and finally crashs.\n\nDepending on the architecture (AMD or Intel) pretended by\nguests, various checks according to vendor's documentation\nare implemented to overcome the current issue and behave\nlike the CPUs physical counterparts.\n\n[mtosatti: cleanup/beautify code]\n\nSigned-off-by: Stephan Baerwolf <stephan.baerwolf@tu-ilmenau.de>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
    "before_after_code_files": [
      "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
      "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
    ]
  },
  "patch_diff": {
    "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h": [
      "File: arch/x86/include/asm/kvm_emulate.h -> arch/x86/include/asm/kvm_emulate.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "301: #define X86EMUL_MODE_PROT     (X86EMUL_MODE_PROT16|X86EMUL_MODE_PROT32| \\",
      "302:           X86EMUL_MODE_PROT64)",
      "304: enum x86_intercept_stage {",
      "306:  X86_ICPT_PRE_EXCEPT,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "305: #define X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx 0x68747541",
      "306: #define X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx 0x444d4163",
      "307: #define X86EMUL_CPUID_VENDOR_AuthenticAMD_edx 0x69746e65",
      "309: #define X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx 0x69444d41",
      "310: #define X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx 0x21726574",
      "311: #define X86EMUL_CPUID_VENDOR_AMDisbetterI_edx 0x74656273",
      "313: #define X86EMUL_CPUID_VENDOR_GenuineIntel_ebx 0x756e6547",
      "314: #define X86EMUL_CPUID_VENDOR_GenuineIntel_ecx 0x6c65746e",
      "315: #define X86EMUL_CPUID_VENDOR_GenuineIntel_edx 0x49656e69",
      "",
      "---------------"
    ],
    "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c": [
      "File: arch/x86/kvm/emulate.c -> arch/x86/kvm/emulate.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1891:  ss->p = 1;",
      "1892: }",
      "1894: static int em_syscall(struct x86_emulate_ctxt *ctxt)",
      "1895: {",
      "1896:  struct x86_emulate_ops *ops = ctxt->ops;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1894: static bool em_syscall_is_enabled(struct x86_emulate_ctxt *ctxt)",
      "1895: {",
      "1896:  struct x86_emulate_ops *ops = ctxt->ops;",
      "1897:  u32 eax, ebx, ecx, edx;",
      "1903:  if (ctxt->mode == X86EMUL_MODE_PROT64)",
      "1904:   return true;",
      "1906:  eax = 0x00000000;",
      "1907:  ecx = 0x00000000;",
      "1908:  if (ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx)) {",
      "1917:   if (ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx &&",
      "1918:       ecx == X86EMUL_CPUID_VENDOR_GenuineIntel_ecx &&",
      "1919:       edx == X86EMUL_CPUID_VENDOR_GenuineIntel_edx)",
      "1920:    return false;",
      "1923:   if (ebx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx &&",
      "1924:       ecx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx &&",
      "1925:       edx == X86EMUL_CPUID_VENDOR_AuthenticAMD_edx)",
      "1926:    return true;",
      "1929:   if (ebx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx &&",
      "1930:       ecx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx &&",
      "1931:       edx == X86EMUL_CPUID_VENDOR_AMDisbetterI_edx)",
      "1932:    return true;",
      "1933:  }",
      "1936:  return false;",
      "1937: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1904:      ctxt->mode == X86EMUL_MODE_VM86)",
      "1905:   return emulate_ud(ctxt);",
      "1907:  ops->get_msr(ctxt, MSR_EFER, &efer);",
      "1908:  setup_syscalls_segments(ctxt, &cs, &ss);",
      "1910:  ops->get_msr(ctxt, MSR_STAR, &msr_data);",
      "1911:  msr_data >>= 32;",
      "1912:  cs_sel = (u16)(msr_data & 0xfffc);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1952:  if (!(em_syscall_is_enabled(ctxt)))",
      "1953:   return emulate_ud(ctxt);",
      "1958:  if (!(efer & EFER_SCE))",
      "1959:   return emulate_ud(ctxt);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0225fb509d51fcf777eb0aa31c304c582e3248fd",
      "candidate_info": {
        "commit_hash": "0225fb509d51fcf777eb0aa31c304c582e3248fd",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0225fb509d51fcf777eb0aa31c304c582e3248fd",
        "files": [
          "arch/x86/include/asm/kvm_emulate.h",
          "arch/x86/kvm/emulate.c",
          "arch/x86/kvm/x86.c"
        ],
        "message": "KVM: x86 emulator: constify emulate_ops\n\nWe never change emulate_ops[] at runtime so it should be r/o.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Avi Kivity <avi@redhat.com>",
        "before_after_code_files": [
          "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
          "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c",
          "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
            "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
          ],
          "candidate": [
            "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
            "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h": [
          "File: arch/x86/include/asm/kvm_emulate.h -> arch/x86/include/asm/kvm_emulate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "250: };",
          "252: struct x86_emulate_ctxt {",
          "256:  unsigned long eflags;",
          "",
          "[Removed Lines]",
          "253:  struct x86_emulate_ops *ops;",
          "",
          "[Added Lines]",
          "253:  const struct x86_emulate_ops *ops;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c": [
          "File: arch/x86/kvm/emulate.c -> arch/x86/kvm/emulate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1325: static void get_descriptor_table_ptr(struct x86_emulate_ctxt *ctxt,",
          "1326:          u16 selector, struct desc_ptr *dt)",
          "1327: {",
          "1330:  if (selector & 1 << 2) {",
          "1331:   struct desc_struct desc;",
          "",
          "[Removed Lines]",
          "1328:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "1328:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1748: static int __emulate_int_real(struct x86_emulate_ctxt *ctxt, int irq)",
          "1749: {",
          "1751:  int rc;",
          "1752:  struct desc_ptr dt;",
          "1753:  gva_t cs_addr;",
          "",
          "[Removed Lines]",
          "1750:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "1750:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2130: static bool em_syscall_is_enabled(struct x86_emulate_ctxt *ctxt)",
          "2131: {",
          "2133:  u32 eax, ebx, ecx, edx;",
          "",
          "[Removed Lines]",
          "2132:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2132:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2174: static int em_syscall(struct x86_emulate_ctxt *ctxt)",
          "2175: {",
          "2177:  struct desc_struct cs, ss;",
          "2178:  u64 msr_data;",
          "2179:  u16 cs_sel, ss_sel;",
          "",
          "[Removed Lines]",
          "2176:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2176:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2232: static int em_sysenter(struct x86_emulate_ctxt *ctxt)",
          "2233: {",
          "2235:  struct desc_struct cs, ss;",
          "2236:  u64 msr_data;",
          "2237:  u16 cs_sel, ss_sel;",
          "",
          "[Removed Lines]",
          "2234:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2234:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2295: static int em_sysexit(struct x86_emulate_ctxt *ctxt)",
          "2296: {",
          "2298:  struct desc_struct cs, ss;",
          "2299:  u64 msr_data;",
          "2300:  int usermode;",
          "",
          "[Removed Lines]",
          "2297:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2297:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2357: static bool emulator_io_port_access_allowed(struct x86_emulate_ctxt *ctxt,",
          "2358:          u16 port, u16 len)",
          "2359: {",
          "2361:  struct desc_struct tr_seg;",
          "2362:  u32 base3;",
          "2363:  int r;",
          "",
          "[Removed Lines]",
          "2360:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2360:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2476:      u16 tss_selector, u16 old_tss_sel,",
          "2477:      ulong old_tss_base, struct desc_struct *new_desc)",
          "2478: {",
          "2480:  struct tss_segment_16 tss_seg;",
          "2481:  int ret;",
          "2482:  u32 new_tss_base = get_desc_base(new_desc);",
          "",
          "[Removed Lines]",
          "2479:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2479:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2623:      u16 tss_selector, u16 old_tss_sel,",
          "2624:      ulong old_tss_base, struct desc_struct *new_desc)",
          "2625: {",
          "2627:  struct tss_segment_32 tss_seg;",
          "2628:  int ret;",
          "2629:  u32 new_tss_base = get_desc_base(new_desc);",
          "",
          "[Removed Lines]",
          "2626:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2626:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2667:        u16 tss_selector, int idt_index, int reason,",
          "2668:        bool has_error_code, u32 error_code)",
          "2669: {",
          "2671:  struct desc_struct curr_tss_desc, next_tss_desc;",
          "2672:  int ret;",
          "2673:  u16 old_tss_sel = get_segment_selector(ctxt, VCPU_SREG_TR);",
          "",
          "[Removed Lines]",
          "2670:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "2670:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4340: int x86_emulate_insn(struct x86_emulate_ctxt *ctxt)",
          "4341: {",
          "4343:  int rc = X86EMUL_CONTINUE;",
          "4344:  int saved_dst_type = ctxt->dst.type;",
          "",
          "[Removed Lines]",
          "4342:  struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "[Added Lines]",
          "4342:  const struct x86_emulate_ops *ops = ctxt->ops;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
          "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4323:  kvm_register_write(emul_to_vcpu(ctxt), reg, val);",
          "4324: }",
          "4327:  .read_gpr            = emulator_read_gpr,",
          "4328:  .write_gpr           = emulator_write_gpr,",
          "4329:  .read_std            = kvm_read_guest_virt_system,",
          "",
          "[Removed Lines]",
          "4326: static struct x86_emulate_ops emulate_ops = {",
          "",
          "[Added Lines]",
          "4326: static const struct x86_emulate_ops emulate_ops = {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0017f93a2776597b798ec1a9594e41dfd96d3c11",
      "candidate_info": {
        "commit_hash": "0017f93a2776597b798ec1a9594e41dfd96d3c11",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0017f93a2776597b798ec1a9594e41dfd96d3c11",
        "files": [
          "arch/x86/include/asm/kvm_emulate.h",
          "arch/x86/kvm/emulate.c",
          "arch/x86/kvm/x86.c"
        ],
        "message": "KVM: x86 emulator: change ->get_cpuid() accessor to use the x86 semantics\n\nInstead of getting an exact leaf, follow the spec and fall back to the last\nmain leaf instead.  This lets us easily emulate the cpuid instruction in the\nemulator.\n\nSigned-off-by: Avi Kivity <avi@redhat.com>",
        "before_after_code_files": [
          "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
          "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c",
          "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
            "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
          ],
          "candidate": [
            "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h",
            "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/kvm_emulate.h||arch/x86/include/asm/kvm_emulate.h": [
          "File: arch/x86/include/asm/kvm_emulate.h -> arch/x86/include/asm/kvm_emulate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:     struct x86_instruction_info *info,",
          "193:     enum x86_intercept_stage stage);",
          "197: };",
          "199: typedef u32 __attribute__((vector_size(16))) sse128_t;",
          "",
          "[Removed Lines]",
          "195:  bool (*get_cpuid)(struct x86_emulate_ctxt *ctxt,",
          "196:     u32 *eax, u32 *ebx, u32 *ecx, u32 *edx);",
          "",
          "[Added Lines]",
          "195:  void (*get_cpuid)(struct x86_emulate_ctxt *ctxt,",
          "196:      u32 *eax, u32 *ebx, u32 *ecx, u32 *edx);",
          "",
          "---------------"
        ],
        "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c": [
          "File: arch/x86/kvm/emulate.c -> arch/x86/kvm/emulate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1993:  u32 eax, ebx, ecx, edx;",
          "1995:  eax = ecx = 0;",
          "1998:   && ecx == X86EMUL_CPUID_VENDOR_GenuineIntel_ecx",
          "1999:   && edx == X86EMUL_CPUID_VENDOR_GenuineIntel_edx;",
          "2000: }",
          "",
          "[Removed Lines]",
          "1996:  return ctxt->ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx)",
          "1997:   && ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx",
          "",
          "[Added Lines]",
          "1996:  ctxt->ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx);",
          "1997:  return ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2014:  eax = 0x00000000;",
          "2015:  ecx = 0x00000000;",
          "2044:  return false;",
          "",
          "[Removed Lines]",
          "2016:  if (ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx)) {",
          "2025:   if (ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx &&",
          "2026:       ecx == X86EMUL_CPUID_VENDOR_GenuineIntel_ecx &&",
          "2027:       edx == X86EMUL_CPUID_VENDOR_GenuineIntel_edx)",
          "2028:    return false;",
          "2031:   if (ebx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx &&",
          "2032:       ecx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx &&",
          "2033:       edx == X86EMUL_CPUID_VENDOR_AuthenticAMD_edx)",
          "2034:    return true;",
          "2037:   if (ebx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx &&",
          "2038:       ecx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx &&",
          "2039:       edx == X86EMUL_CPUID_VENDOR_AMDisbetterI_edx)",
          "2040:    return true;",
          "2041:  }",
          "",
          "[Added Lines]",
          "2016:  ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx);",
          "2025:  if (ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx &&",
          "2026:      ecx == X86EMUL_CPUID_VENDOR_GenuineIntel_ecx &&",
          "2027:      edx == X86EMUL_CPUID_VENDOR_GenuineIntel_edx)",
          "2028:   return false;",
          "2031:  if (ebx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx &&",
          "2032:      ecx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx &&",
          "2033:      edx == X86EMUL_CPUID_VENDOR_AuthenticAMD_edx)",
          "2034:   return true;",
          "2037:  if (ebx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx &&",
          "2038:      ecx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx &&",
          "2039:      edx == X86EMUL_CPUID_VENDOR_AMDisbetterI_edx)",
          "2040:   return true;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
          "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4302:  return kvm_x86_ops->check_intercept(emul_to_vcpu(ctxt), info, stage);",
          "4303: }",
          "4306:           u32 *eax, u32 *ebx, u32 *ecx, u32 *edx)",
          "4307: {",
          "4325: }",
          "4327: static struct x86_emulate_ops emulate_ops = {",
          "",
          "[Removed Lines]",
          "4305: static bool emulator_get_cpuid(struct x86_emulate_ctxt *ctxt,",
          "4308:  struct kvm_cpuid_entry2 *cpuid = NULL;",
          "4310:  if (eax && ecx)",
          "4311:   cpuid = kvm_find_cpuid_entry(emul_to_vcpu(ctxt),",
          "4314:  if (cpuid) {",
          "4317:   if (ebx)",
          "4319:   if (edx)",
          "4321:   return true;",
          "4322:  }",
          "4324:  return false;",
          "",
          "[Added Lines]",
          "4305: static void emulator_get_cpuid(struct x86_emulate_ctxt *ctxt,",
          "4308:  kvm_cpuid(emul_to_vcpu(ctxt), eax, ebx, ecx, edx);",
          "",
          "---------------"
        ]
      }
    }
  ]
}