{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a920b209ffd83fb080e1a335e4b6e99b6168c4ca",
      "candidate_info": {
        "commit_hash": "a920b209ffd83fb080e1a335e4b6e99b6168c4ca",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a920b209ffd83fb080e1a335e4b6e99b6168c4ca",
        "files": [
          "ext/session/sqlite3session.c",
          "ext/session/sqlite3session.h",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix typos in the comments of the sessions extension, one of which affects the generated documentation. No code changes.\n\nFossilOrigin-Name: 040d5d515bcb37bea05e0d156dbaf066c68052ac574f1b0b2cb118d473a353e0",
        "before_after_code_files": [
          "ext/session/sqlite3session.c||ext/session/sqlite3session.c",
          "ext/session/sqlite3session.h||ext/session/sqlite3session.h",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/sqlite3session.c||ext/session/sqlite3session.c": [
          "File: ext/session/sqlite3session.c -> ext/session/sqlite3session.c"
        ],
        "ext/session/sqlite3session.h||ext/session/sqlite3session.h": [
          "File: ext/session/sqlite3session.h -> ext/session/sqlite3session.h"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 965cbcea117835d2c6d2ec58c8025b227f491c35805e282cb31228436bc6bec1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f4f6823ac81ca47056367153b851ae96888708b",
      "candidate_info": {
        "commit_hash": "3f4f6823ac81ca47056367153b851ae96888708b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3f4f6823ac81ca47056367153b851ae96888708b",
        "files": [
          "ext/fts3/fts3_aux.c",
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 9a93c68a7673bda2e6c308d3b2798d0fb12fde399996cae24b1f0d5864adf355",
        "before_after_code_files": [
          "ext/fts3/fts3_aux.c||ext/fts3/fts3_aux.c",
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_aux.c||ext/fts3/fts3_aux.c": [
          "File: ext/fts3/fts3_aux.c -> ext/fts3/fts3_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:     if( zStr ){",
          "418:       pCsr->filter.zTerm = sqlite3_mprintf(\"%s\", zStr);",
          "419:       if( pCsr->filter.zTerm==0 ) return SQLITE_NOMEM;",
          "421:     }",
          "422:   }",
          "424:   if( iLe>=0 ){",
          "425:     pCsr->zStop = sqlite3_mprintf(\"%s\", sqlite3_value_text(apVal[iLe]));",
          "426:     if( pCsr->zStop==0 ) return SQLITE_NOMEM;",
          "428:   }",
          "430:   if( iLangid>=0 ){",
          "",
          "[Removed Lines]",
          "420:       pCsr->filter.nTerm = strlen(pCsr->filter.zTerm);",
          "427:     pCsr->nStop = strlen(pCsr->zStop);",
          "",
          "[Added Lines]",
          "420:       pCsr->filter.nTerm = (int)strlen(pCsr->filter.zTerm);",
          "427:     pCsr->nStop = (int)strlen(pCsr->zStop);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e744d2dd93a78235e6c1d938b08232183b5ce7e355d1b7daf2199e585b03c106",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6825:   assert( i<iEnd );",
          "6826:   j = get2byte(&aData[hdr+5]);",
          "6828:   memcpy(&pTmp[j], &aData[j], usableSize - j);",
          "6830:   for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}",
          "",
          "[Removed Lines]",
          "6827:   if( NEVER(j>usableSize) ){ j = 0; }",
          "",
          "[Added Lines]",
          "6827:   if( NEVER(j>(u32)usableSize) ){ j = 0; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2b9d7c60502581bfd2908fbdb0dd00017d26cb0",
      "candidate_info": {
        "commit_hash": "f2b9d7c60502581bfd2908fbdb0dd00017d26cb0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f2b9d7c60502581bfd2908fbdb0dd00017d26cb0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Fix a potential use-after-free bug that follows an OOM error in code added two days ago by check-in [84e02d773d60cffe].  Problem discovered by OSSFuzz.\n\nFossilOrigin-Name: 0a2eb949f8a759e5745d9468c8183d3c0b4b30e0fa2a14b3062620eb9e1d5c1d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 32df5edcfef2605009f45d6ef1b97c63a99df07c7b4e00dc70f93001cfb8d81f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:   pCtx->pVdbe = 0;",
          "369:   pCtx->isError = 0;",
          "370:   pCtx->argc = nArg;",
          "371:   addr = sqlite3VdbeAddOp4(v, eCallCtx ? OP_PureFunc : OP_Function,",
          "372:                            p1, p2, p3, (char*)pCtx, P4_FUNCCTX);",
          "373:   sqlite3VdbeChangeP5(v, eCallCtx & NC_SelfRef);",
          "375:   return addr;",
          "376: }",
          "",
          "[Removed Lines]",
          "374:   pCtx->iOp = addr;",
          "",
          "[Added Lines]",
          "371:   pCtx->iOp = sqlite3VdbeCurrentAddr(v);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8357c662b3b0110b7ba0eda82d9fbb787dd20b03",
      "candidate_info": {
        "commit_hash": "8357c662b3b0110b7ba0eda82d9fbb787dd20b03",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8357c662b3b0110b7ba0eda82d9fbb787dd20b03",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Do not invoke btreeComputeFreeSpace() when not necessary.\n\nFossilOrigin-Name: f11b0ed47402034378ded2c60b82841b81cd1319cdb72d1ef052faef29a5294d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 16eb0fc8f8cce51eaa5305ebc9f3bd8c8d935dd3ebebab6820e5629f9292eec2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7397:     pTo->isInit = 0;",
          "7398:     rc = btreeInitPage(pTo);",
          "7399:     if( rc!=SQLITE_OK ){",
          "7401:       return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7399:     if( rc==SQLITE_OK ) rc = btreeComputeFreeSpace(pTo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8294:     int iPage = pCur->iPage;",
          "8295:     MemPage *pPage = pCur->pPage;",
          "8301:     if( iPage==0 ){",
          "8302:       if( pPage->nOverflow ){",
          "",
          "[Removed Lines]",
          "8297:     if( pPage->nFree<0 ){",
          "8298:       rc = btreeComputeFreeSpace(pPage);",
          "8299:       if( rc ) break;",
          "8300:     }",
          "",
          "[Added Lines]",
          "8298:     assert( pPage->nFree>=0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ec796d00228854511e3e19772a477e19c99aaac",
      "candidate_info": {
        "commit_hash": "7ec796d00228854511e3e19772a477e19c99aaac",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7ec796d00228854511e3e19772a477e19c99aaac",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/in.test"
        ],
        "message": "Add ALWAYS() to an always true conditional that results from the previous check-in.  Add a test case for ticket [dbaf8a6820be1ece] to supplement those already checked into TH3.\n\nFossilOrigin-Name: aff209804722ac902c7abfde80ad2677e0f51beb2c7f28f65d51105d984a1640",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7f5168a76a400fc2e1e40c6950470b1bfb38a0be54fc5518c17c29fdae7d8f1f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "802:         idxCols |= cMask;",
          "803:         pIdx->aiColumn[n] = pTerm->u.leftColumn;",
          "804:         pColl = sqlite3BinaryCompareCollSeq(pParse, pX->pLeft, pX->pRight);",
          "806:         n++;",
          "807:       }",
          "808:     }",
          "",
          "[Removed Lines]",
          "805:         pIdx->azColl[n] = pColl ? pColl->zName : sqlite3StrBINARY;",
          "",
          "[Added Lines]",
          "805:         pIdx->azColl[n] = ALWAYS(pColl) ? pColl->zName : sqlite3StrBINARY;",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "750:   SELECT 1 IN (CAST('1' AS text) COLLATE nocase);",
          "751: } 0",
          "753: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753: # 2019-08-27 ticket https://sqlite.org/src/info/dbaf8a6820be1ece",
          "754: #",
          "755: do_execsql_test in-18.1 {",
          "756:   DROP TABLE IF EXISTS t0;",
          "757:   CREATE TABLE t0(c0 INT UNIQUE);",
          "758:   INSERT INTO t0(c0) VALUES (1);",
          "759:   SELECT * FROM t0 WHERE '1' IN (t0.c0);",
          "760: } {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}