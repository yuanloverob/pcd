{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b6cb6ce0d329c7b359dea403139c8759d952ea16",
      "candidate_info": {
        "commit_hash": "b6cb6ce0d329c7b359dea403139c8759d952ea16",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b6cb6ce0d329c7b359dea403139c8759d952ea16",
        "files": [
          "lib/_debugger.js",
          "lib/repl.js"
        ],
        "message": "debugger: remove 'repl' command from builtinLibs\n\n* It was displaying useless warning",
        "before_after_code_files": [
          "lib/_debugger.js||li_debugger.js",
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/_debugger.js||li_debugger.js": [
          "File: lib/_debugger.js -> li_debugger.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "754:   this.repl = new repl.REPLServer('debug> ', streams,",
          "755:                                   this.controlEval.bind(this), false, true);",
          "758:   this.repl.on('exit', function() {",
          "759:     process.exit(0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: exports.writer = util.inspect;",
          "73:   'crypto', 'dgram', 'dns', 'events', 'fs', 'http', 'https', 'net',",
          "74:   'os', 'path', 'punycode', 'querystring', 'readline', 'repl',",
          "75:   'string_decoder', 'tls', 'tty', 'url', 'util', 'vm', 'zlib'];",
          "",
          "[Removed Lines]",
          "72: var builtinLibs = ['assert', 'buffer', 'child_process', 'cluster',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185:       var lib = require(cmd);",
          "186:       if (cmd in self.context && lib !== self.context[cmd]) {",
          "187:         self.outputStream.write('A different \"' + cmd +",
          "",
          "[Removed Lines]",
          "184:     if (~builtinLibs.indexOf(cmd)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456:     }",
          "458:     if (!subdir) {",
          "460:     }",
          "462:     completionGroupsLoaded();",
          "",
          "[Removed Lines]",
          "459:       completionGroups.push(builtinLibs);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb76999bad6f20f3643fd6a052511fdca51f0efa",
      "candidate_info": {
        "commit_hash": "cb76999bad6f20f3643fd6a052511fdca51f0efa",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cb76999bad6f20f3643fd6a052511fdca51f0efa",
        "files": [
          "deps/uv/src/unix/ev/ev.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/udp.c",
          "deps/uv/src/win/tty.c",
          "deps/uv/test/runner.c"
        ],
        "message": "deps: upgrade libuv to 06e0319",
        "before_after_code_files": [
          "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c",
          "deps/uv/test/runner.c||deps/uv/test/runner.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c": [
          "File: deps/uv/src/unix/ev/ev.c -> deps/uv/src/unix/ev/ev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2554: ev_unref (EV_P)",
          "2555: {",
          "2556:   --activecnt;",
          "2558: }",
          "2560: void",
          "",
          "[Removed Lines]",
          "2557:   if (activecnt < 0) abort();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "523:   struct cmsghdr* cmsg;",
          "524:   char cmsg_space[64];",
          "525:   struct ev_loop* ev = stream->loop->ev;",
          "532:     assert(stream->alloc_cb);",
          "533:     buf = stream->alloc_cb((uv_handle_t*)stream, 64 * 1024);",
          "",
          "[Removed Lines]",
          "530:   while ((stream->read_cb || stream->read2_cb) &&",
          "531:          stream->flags & UV_READING) {",
          "",
          "[Added Lines]",
          "526:   int count;",
          "531:   count = 32;",
          "536:   while ((stream->read_cb || stream->read2_cb)",
          "537:       && (stream->flags & UV_READING)",
          "538:       && (count-- > 0)) {",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c": [
          "File: deps/uv/src/unix/udp.c -> deps/uv/src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:   ssize_t nread;",
          "209:   uv_buf_t buf;",
          "210:   int flags;",
          "212:   assert(handle->recv_cb != NULL);",
          "213:   assert(handle->alloc_cb != NULL);",
          "215:   do {",
          "217:     buf = handle->alloc_cb((uv_handle_t*)handle, 64 * 1024);",
          "218:     assert(buf.len > 0);",
          "219:     assert(buf.base != NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   int count;",
          "219:   count = 32;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "254:   }",
          "256:   while (nread != -1",
          "257:       && handle->fd != -1",
          "258:       && handle->recv_cb != NULL);",
          "259: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:       && count-- > 0",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:   if (!REQ_SUCCESS(req)) {",
          "690:     if ((handle->flags & UV_HANDLE_READING) &&",
          "693:       handle->flags &= ~UV_HANDLE_READING;",
          "694:       uv__set_sys_error(loop, GET_REQ_ERROR(req));",
          "",
          "[Removed Lines]",
          "691:         !(handle->flags & UV_HANDLE_TTY_RAW)) {",
          "",
          "[Added Lines]",
          "691:         handle->read_line_handle != NULL) {",
          "",
          "---------------"
        ],
        "deps/uv/test/runner.c||deps/uv/test/runner.c": [
          "File: deps/uv/test/runner.c -> deps/uv/test/runner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   int i;",
          "88:   status = 255;",
          "89:   process_count = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:   main_proc = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9f58cc5956840848532fe8804a8c77c734019c1",
      "candidate_info": {
        "commit_hash": "c9f58cc5956840848532fe8804a8c77c734019c1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c9f58cc5956840848532fe8804a8c77c734019c1",
        "files": [
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/win/error.c",
          "deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c",
          "deps/uv/src/win/tty.c",
          "deps/uv/src/win/winsock.h",
          "deps/uv/test/run-tests.c",
          "deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-ping-pong.c",
          "deps/uv/uv.gyp"
        ],
        "message": "upgrade uv to f9be43a564",
        "before_after_code_files": [
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c",
          "deps/uv/src/win/winsock.h||deps/uv/src/win/winsock.h",
          "deps/uv/test/run-tests.c||deps/uv/test/run-tests.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-ping-pong.c||deps/uv/test/test-ping-pong.c",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:   XX( 47, EEXIST, \"file already exists\") \\",
          "118:   XX( 48, ESRCH, \"no such process\") \\",
          "119:   XX( 49, ENAMETOOLONG, \"name too long\") \\",
          "123: #define UV_ERRNO_GEN(val, name, s) UV_##name = val,",
          "",
          "[Removed Lines]",
          "120:   XX( 50, EPERM, \"operation not permitted\")",
          "",
          "[Added Lines]",
          "120:   XX( 50, EPERM, \"operation not permitted\") \\",
          "121:   XX( 51, ELOOP, \"too many symbolic links encountered\") \\",
          "122:   XX( 52, EXDEV, \"cross-device link not permitted\")",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     case EMSGSIZE: return UV_EMSGSIZE;",
          "75:     case ENAMETOOLONG: return UV_ENAMETOOLONG;",
          "76:     case EINVAL: return UV_EINVAL;",
          "77:     case ECONNREFUSED: return UV_ECONNREFUSED;",
          "78:     case EADDRINUSE: return UV_EADDRINUSE;",
          "79:     case EADDRNOTAVAIL: return UV_EADDRNOTAVAIL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     case ECONNABORTED: return UV_ECONNABORTED;",
          "78:     case ELOOP: return UV_ELOOP;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     case EAI_NONAME: return UV_ENOENT;",
          "86:     case ESRCH: return UV_ESRCH;",
          "87:     case ETIMEDOUT: return UV_ETIMEDOUT;",
          "88:     default: return UV_UNKNOWN;",
          "89:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     case EXDEV: return UV_EXDEV;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "966: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971: int uv_is_readable(uv_stream_t* stream) {",
          "972:   return stream->flags & UV_READABLE;",
          "973: }",
          "976: int uv_is_writable(uv_stream_t* stream) {",
          "977:   return stream->flags & UV_WRITABLE;",
          "978: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     case WSAEHOSTUNREACH:                   return UV_EHOSTUNREACH;",
          "90:     case ERROR_INVALID_DATA:                return UV_EINVAL;",
          "91:     case WSAEINVAL:                         return UV_EINVAL;",
          "92:     case ERROR_TOO_MANY_OPEN_FILES:         return UV_EMFILE;",
          "93:     case WSAEMFILE:                         return UV_EMFILE;",
          "94:     case WSAEMSGSIZE:                       return UV_EMSGSIZE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     case ERROR_CANT_RESOLVE_FILENAME:       return UV_ELOOP;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c": [
          "File: deps/uv/src/win/pipe.c -> deps/uv/src/win/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: }",
          "101: int uv_stdio_pipe_server(uv_loop_t* loop, uv_pipe_t* handle, DWORD access,",
          "102:     char* name, size_t nameSize) {",
          "103:   HANDLE pipeHandle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: static int open_named_pipe(uv_pipe_t* handle) {",
          "106:   handle->handle = CreateFileW(handle->name,",
          "107:                                GENERIC_READ | GENERIC_WRITE,",
          "108:                                0,",
          "109:                                NULL,",
          "110:                                OPEN_EXISTING,",
          "111:                                FILE_FLAG_OVERLAPPED,",
          "112:                                NULL);",
          "114:   if (handle->handle != INVALID_HANDLE_VALUE) {",
          "115:     return 0;",
          "116:   }",
          "123:   if (GetLastError() == ERROR_ACCESS_DENIED) {",
          "124:     handle->handle = CreateFileW(handle->name,",
          "125:                                  GENERIC_READ | FILE_WRITE_ATTRIBUTES,",
          "126:                                  0,",
          "127:                                  NULL,",
          "128:                                  OPEN_EXISTING,",
          "129:                                  FILE_FLAG_OVERLAPPED,",
          "130:                                  NULL);",
          "132:     if (handle->handle != INVALID_HANDLE_VALUE) {",
          "133:       handle->flags |= UV_HANDLE_SHUT;",
          "134:       return 0;",
          "135:     }",
          "136:   }",
          "138:   if (GetLastError() == ERROR_ACCESS_DENIED) {",
          "139:     handle->handle = CreateFileW(handle->name,",
          "140:                                  GENERIC_WRITE | FILE_READ_ATTRIBUTES,",
          "141:                                  0,",
          "142:                                  NULL,",
          "143:                                  OPEN_EXISTING,",
          "144:                                  FILE_FLAG_OVERLAPPED,",
          "145:                                  NULL);",
          "147:     if (handle->handle != INVALID_HANDLE_VALUE) {",
          "148:       handle->flags |= UV_HANDLE_EOF;",
          "149:       return 0;",
          "150:     }",
          "151:   }",
          "153:   return -1;",
          "154: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "438:   while (WaitNamedPipeW(handle->name, 30000)) {",
          "449:       break;",
          "450:     }",
          "",
          "[Removed Lines]",
          "440:     pipeHandle = CreateFileW(handle->name,",
          "441:                             GENERIC_READ | GENERIC_WRITE,",
          "442:                             0,",
          "443:                             NULL,",
          "444:                             OPEN_EXISTING,",
          "445:                             FILE_FLAG_OVERLAPPED,",
          "446:                             NULL);",
          "448:     if (pipeHandle != INVALID_HANDLE_VALUE) {",
          "",
          "[Added Lines]",
          "496:     if (open_named_pipe(handle) == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "471:     const char* name, uv_connect_cb cb) {",
          "472:   uv_loop_t* loop = handle->loop;",
          "473:   int errno, nameSize;",
          "476:   handle->handle = INVALID_HANDLE_VALUE;",
          "",
          "[Removed Lines]",
          "474:   HANDLE pipeHandle;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "492:     goto error;",
          "493:   }",
          "504:     if (GetLastError() == ERROR_PIPE_BUSY) {",
          "506:       if (!QueueUserWorkItem(&pipe_connect_thread_proc,",
          "",
          "[Removed Lines]",
          "495:   pipeHandle = CreateFileW(handle->name,",
          "496:                           GENERIC_READ | GENERIC_WRITE,",
          "497:                           0,",
          "498:                           NULL,",
          "499:                           OPEN_EXISTING,",
          "500:                           FILE_FLAG_OVERLAPPED,",
          "501:                           NULL);",
          "503:   if (pipeHandle == INVALID_HANDLE_VALUE) {",
          "",
          "[Added Lines]",
          "542:   if (open_named_pipe(handle) != 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "519:     goto error;",
          "520:   }",
          "523:     errno = GetLastError();",
          "524:     goto error;",
          "525:   }",
          "529:   SET_REQ_SUCCESS(req);",
          "530:   uv_insert_pending_req(loop, (uv_req_t*) req);",
          "531:   handle->reqs_pending++;",
          "",
          "[Removed Lines]",
          "522:   if (uv_set_pipe_handle(loop, (uv_pipe_t*)req->handle, pipeHandle)) {",
          "527:   handle->handle = pipeHandle;",
          "",
          "[Added Lines]",
          "561:   assert(handle->handle != INVALID_HANDLE_VALUE);",
          "563:   if (uv_set_pipe_handle(loop, (uv_pipe_t*)req->handle, handle->handle)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "537:     handle->name = NULL;",
          "538:   }",
          "542:   }",
          "",
          "[Removed Lines]",
          "540:   if (pipeHandle != INVALID_HANDLE_VALUE) {",
          "541:     CloseHandle(pipeHandle);",
          "",
          "[Added Lines]",
          "579:   if (handle->handle != INVALID_HANDLE_VALUE) {",
          "580:     CloseHandle(handle->handle);",
          "581:     handle->handle = INVALID_HANDLE_VALUE;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c": [
          "File: deps/uv/src/win/stream.c -> deps/uv/src/win/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   return bytes;",
          "188: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191: int uv_is_readable(uv_stream_t* handle) {",
          "192:   return !(handle->flags & UV_HANDLE_EOF);",
          "193: }",
          "196: int uv_is_writable(uv_stream_t* handle) {",
          "197:   return !(handle->flags & UV_HANDLE_SHUT);",
          "198: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1096:     } else if (arg == 39) {",
          "1098:       fg_color = 7;",
          "1100:     } else if (arg >= 40 && arg <= 47) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099:       fg_bright = 0;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/winsock.h||deps/uv/src/win/winsock.h": [
          "File: deps/uv/src/win/winsock.h -> deps/uv/src/win/winsock.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:   #define IPV6_V6ONLY 27",
          "46: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #ifndef IPV6_HOPLIMIT",
          "49:   #define IPV6_HOPLIMIT 21",
          "50: #endif",
          "",
          "---------------"
        ],
        "deps/uv/test/run-tests.c||deps/uv/test/run-tests.c": [
          "File: deps/uv/test/run-tests.c -> deps/uv/test/run-tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   uv_pipe_open(&channel, 0);",
          "132:   r = uv_tcp_init(uv_default_loop(), &tcp_server);",
          "133:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:   ASSERT(uv_is_readable(&channel));",
          "133:   ASSERT(uv_is_writable(&channel));",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "432:   uv_fs_req_cleanup(req);",
          "433: }",
          "436: TEST_IMPL(fs_file_noent) {",
          "437:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "435: static void open_loop_cb(uv_fs_t* req) {",
          "436:   ASSERT(req->fs_type == UV_FS_OPEN);",
          "437:   ASSERT(req->errorno == UV_ELOOP);",
          "438:   ASSERT(req->result == -1);",
          "439:   open_cb_count++;",
          "440:   uv_fs_req_cleanup(req);",
          "441: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:   return 0;",
          "484: }",
          "486: static void check_utime(const char* path, double atime, double mtime) {",
          "487:   struct stat* s;",
          "488:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494: TEST_IMPL(fs_file_loop) {",
          "495:   uv_fs_t req;",
          "496:   int r;",
          "498:   loop = uv_default_loop();",
          "500:   unlink(\"test_symlink\");",
          "501:   uv_fs_symlink(loop, &req, \"test_symlink\", \"test_symlink\", 0, NULL);",
          "502:   uv_fs_req_cleanup(&req);",
          "504:   r = uv_fs_open(loop, &req, \"test_symlink\", O_RDONLY, 0, NULL);",
          "505:   ASSERT(r == -1);",
          "506:   ASSERT(req.result == -1);",
          "507:   ASSERT(uv_last_error(loop).code == UV_ELOOP);",
          "508:   uv_fs_req_cleanup(&req);",
          "510:   r = uv_fs_open(loop, &req, \"test_symlink\", O_RDONLY, 0, open_loop_cb);",
          "511:   ASSERT(r == 0);",
          "513:   ASSERT(open_cb_count == 0);",
          "514:   uv_run(loop);",
          "515:   ASSERT(open_cb_count == 1);",
          "517:   unlink(\"test_symlink\");",
          "519:   return 0;",
          "520: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: TEST_DECLARE   (tcp_bind6_localhost_ok)",
          "48: TEST_DECLARE   (udp_send_and_recv)",
          "49: TEST_DECLARE   (udp_multicast_join)",
          "50: TEST_DECLARE   (udp_dgram_too_big)",
          "51: TEST_DECLARE   (udp_dual_stack)",
          "52: TEST_DECLARE   (udp_ipv6_only)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: TEST_DECLARE   (udp_multicast_ttl)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105: TEST_DECLARE   (kill)",
          "106: TEST_DECLARE   (fs_file_noent)",
          "107: TEST_DECLARE   (fs_file_nametoolong)",
          "108: TEST_DECLARE   (fs_file_async)",
          "109: TEST_DECLARE   (fs_file_sync)",
          "110: TEST_DECLARE   (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: TEST_DECLARE   (fs_file_loop)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:   TEST_ENTRY  (udp_ipv6_only)",
          "191:   TEST_ENTRY  (udp_options)",
          "192:   TEST_ENTRY  (udp_multicast_join)",
          "194:   TEST_ENTRY  (pipe_bind_error_addrinuse)",
          "195:   TEST_ENTRY  (pipe_bind_error_addrnotavail)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:   TEST_ENTRY  (udp_multicast_ttl)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "276:   TEST_ENTRY  (fs_file_noent)",
          "277:   TEST_ENTRY  (fs_file_nametoolong)",
          "278:   TEST_ENTRY  (fs_file_async)",
          "279:   TEST_ENTRY  (fs_file_sync)",
          "280:   TEST_ENTRY  (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281:   TEST_ENTRY  (fs_file_loop)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ping-pong.c||deps/uv/test/test-ping-pong.c": [
          "File: deps/uv/test/test-ping-pong.c -> deps/uv/test/test-ping-pong.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:   ASSERT(status == 0);",
          "141:   pinger_write_ping(pinger);",
          "143:   uv_read_start((uv_stream_t*)(req->handle), alloc_cb, pinger_read_cb);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:   ASSERT(uv_is_readable(req->handle));",
          "142:   ASSERT(uv_is_writable(req->handle));",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:         'test/test-udp-send-and-recv.c',",
          "322:         'test/test-udp-multicast-join.c',",
          "323:         'test/test-counters-init.c',",
          "324:       ],",
          "325:       'conditions': [",
          "326:         [ 'OS==\"win\"', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:         'test/test-udp-multicast-ttl.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2851b62345c59ab5d41d8e3d0da1bad8a9c59d3",
      "candidate_info": {
        "commit_hash": "a2851b62345c59ab5d41d8e3d0da1bad8a9c59d3",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a2851b62345c59ab5d41d8e3d0da1bad8a9c59d3",
        "files": [
          "lib/net.js",
          "test/simple/test-cluster-bind-twice-v1.js",
          "test/simple/test-cluster-bind-twice-v2.js"
        ],
        "message": "Revert \"cluster: propagate bind errors\"\n\nThis reverts commit 30e462e91937ced3847af3fe9c393ebd32294b68.",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-cluster-bind-twice-v1.js||test/simple/test-cluster-bind-twice-v1.js",
          "test/simple/test-cluster-bind-twice-v2.js||test/simple/test-cluster-bind-twice-v2.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "758: function listen(self, address, port, addressType) {",
          "760:     self._listen2(address, port, addressType);",
          "762:   }",
          "779: }",
          "",
          "[Removed Lines]",
          "759:   if (!process.env.NODE_WORKER_ID) {",
          "761:     return;",
          "764:   require('cluster')._getServer(address, port, addressType, function(handle) {",
          "771:     if (port && port != handle.getsockname().port) {",
          "772:       self.emit('error', errnoException('EADDRINUSE', 'bind'));",
          "773:       return;",
          "774:     }",
          "776:     self._handle = handle;",
          "777:     self._listen2(address, port, addressType);",
          "778:   });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-bind-twice-v1.js||test/simple/test-cluster-bind-twice-v1.js": [
          "File: test/simple/test-cluster-bind-twice-v1.js -> test/simple/test-cluster-bind-twice-v1.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-bind-twice-v2.js||test/simple/test-cluster-bind-twice-v2.js": [
          "File: test/simple/test-cluster-bind-twice-v2.js -> test/simple/test-cluster-bind-twice-v2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8351a2ef45756fb3458d3cdf964955e39fe4a76",
      "candidate_info": {
        "commit_hash": "d8351a2ef45756fb3458d3cdf964955e39fe4a76",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d8351a2ef45756fb3458d3cdf964955e39fe4a76",
        "files": [
          "lib/fs.js"
        ],
        "message": "Automatically close FSWatcher on error\n\nCloses #3250",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "660:   this._handle.onchange = function(status, event, filename) {",
          "661:     if (status) {",
          "662:       self.emit('error', errnoException(errno, 'watch'));",
          "663:     } else {",
          "664:       self.emit('change', event, filename);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}