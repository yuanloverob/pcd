{
  "cve_id": "CVE-2019-18622",
  "cve_desc": "An issue was discovered in phpMyAdmin before 4.9.2. A crafted database/table name can be used to trigger a SQL injection attack through the designer feature.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "ff541af95d7155d8dd326f331b5e248fea8e7111",
  "patch_info": {
    "commit_hash": "ff541af95d7155d8dd326f331b5e248fea8e7111",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ff541af95d7155d8dd326f331b5e248fea8e7111",
    "files": [
      "js/designer/move.js",
      "templates/database/designer/database_tables.twig"
    ],
    "message": "Security patch for Designer and Designer visual mode\n\nCloses: phpmyadmin-security#286\nRef: CVE-2019-18622\nRef: PMASA-2019-5\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>",
    "before_after_code_files": [
      "js/designer/move.js||js/designer/move.js",
      "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
    ]
  },
  "patch_diff": {
    "js/designer/move.js||js/designer/move.js": [
      "File: js/designer/move.js -> js/designer/move.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "576:         '            />' +",
      "577:         '    </td>' +",
      "578:         '    <td class=\"designer_Tabs\"' +",
      "580:         '</tr>');",
      "581:     $('#id_scroll_tab table').first().append($new_table_line);",
      "582:     $($new_table_line).find('.scroll_tab_struct').click(function () {",
      "",
      "[Removed Lines]",
      "579:         '        designer_url_table_name=\"' + db_encoded + '.' + table_encoded + '\">' + db + '.' + table + '</td>' +",
      "",
      "[Added Lines]",
      "579:         '        designer_url_table_name=\"' + db_encoded + '.' + table_encoded + '\">' + $('<div/>').text(db + '.' + table).html() + '</td>' +",
      "",
      "---------------"
    ],
    "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig": [
      "File: templates/database/designer/database_tables.twig -> templates/database/designer/database_tables.twig",
      "--- Hunk 1 ---",
      "[Context before]",
      "50:                     table_name=\"{{ t_n_url }}\"",
      "51:                     query_set=\"{{ has_query ? 1 : 0 }}\">",
      "52:                     <span class=\"owner\">{{ designerTable.getDatabaseName() }}</span>",
      "54:                 </td>",
      "55:                 {% if has_query %}",
      "56:                     <td class=\"tab_zag tab_zag_query\"",
      "",
      "[Removed Lines]",
      "53:                     {{ designerTable.getTableName()|raw }}",
      "",
      "[Added Lines]",
      "53:                     {{ designerTable.getTableName() }}",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "122:                     </td>",
      "123:                     {% if has_query %}",
      "124:                         <td class=\"small_tab_pref small_tab_pref_click_opt\"",
      "126:                             db_name=\"{{ db }}\"",
      "127:                             table_name=\"{{ table_name }}\"",
      "128:                             col_name=\"{{ col_name }}\"",
      "",
      "[Removed Lines]",
      "125:                             option_col_name_modal=\"<strong>{{ 'Add an option for column \"%s\".'|trans|format(col_name) }}</strong>\"",
      "",
      "[Added Lines]",
      "125:                             {# Escaped 2 times to be able to use it in innerHtml #}",
      "126:                             option_col_name_modal=\"<strong>{{ 'Add an option for column \"%s\".'|trans|format(col_name)|escape('html')|escape('html') }}</strong>\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2adf0ba1ac47772f69ff3587951de989668e6d52",
      "candidate_info": {
        "commit_hash": "2adf0ba1ac47772f69ff3587951de989668e6d52",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/2adf0ba1ac47772f69ff3587951de989668e6d52",
        "files": [
          "db_designer.php",
          "js/designer/history.js",
          "js/designer/move.js",
          "js/messages.php",
          "templates/database/designer/database_tables.twig",
          "templates/database/designer/options_panel.twig"
        ],
        "message": "Remove some hacks and strange things from designer\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>",
        "before_after_code_files": [
          "db_designer.php||db_designer.php",
          "js/designer/history.js||js/designer/history.js",
          "js/designer/move.js||js/designer/move.js",
          "js/messages.php||js/messages.php",
          "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig",
          "templates/database/designer/options_panel.twig||templates/database/designer/options_panel.twig"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/designer/move.js||js/designer/move.js",
            "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
          ],
          "candidate": [
            "js/designer/move.js||js/designer/move.js",
            "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
          ]
        }
      },
      "candidate_diff": {
        "db_designer.php||db_designer.php": [
          "File: db_designer.php -> db_designer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "201: $response->addHTML('<div id=\"canvas_outer\">');",
          "202: $response->addHTML(",
          "204: );",
          "206: $response->addHTML($databaseDesigner->getHtmlCanvas());",
          "",
          "[Removed Lines]",
          "203:     '<form action=\"\" id=\"container-form\" method=\"post\" name=\"form1\">'",
          "",
          "[Added Lines]",
          "203:     '<form action=\"\" id=\"container-form\" method=\"post\">'",
          "",
          "---------------"
        ],
        "js/designer/history.js||js/designer/history.js": [
          "File: js/designer/history.js -> js/designer/history.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:             } else {",
          "96:                 str += '<img src=\"' + pmaThemeImage + 'designer/and_icon.png\" onclick=\"and_or(' + i + ')\" title=\"AND\"/></td>';",
          "97:             }",
          "100:             if (history_array[i].get_type() === 'GroupBy' || history_array[i].get_type() === 'OrderBy') {",
          "101:                 str += '<td class=\"center\">' + PMA_getImage('s_info', detail(i)) + '</td>' +",
          "103:                     '<td onclick=history_delete(' + i + ')>' + PMA_getImage('b_drop', PMA_messages.strDelete) + '</td>';",
          "104:             } else {",
          "105:                 str += '<td class=\"center\">' + PMA_getImage('s_info', detail(i)) + '</td>' +",
          "107:                     '<td onclick=history_edit(' + i + ')>' + PMA_getImage('b_edit', PMA_messages.strEdit) + '</td>' +",
          "108:                     '<td onclick=history_delete(' + i + ')>' + PMA_getImage('b_drop', PMA_messages.strDelete) + '</td>';",
          "109:             }",
          "",
          "[Removed Lines]",
          "98:             str += '<td style=\"padding-left: 5px;\" class=\"right\">' + PMA_getImage('b_sbrowse', 'column name') + '</td>' +",
          "99:                 '<td width=\"175\" style=\"padding-left: 5px\">' + history_array[i].get_column_name() + '<td>';",
          "102:                     '<td title=\"' + detail(i) + '\">' + history_array[i].get_type() + '</td>' +",
          "106:                     '<td title=\"' + detail(i) + '\">' + history_array[i].get_type() + '</td>' +",
          "",
          "[Added Lines]",
          "98:             str += '<td style=\"padding-left: 5px;\" class=\"right\">' + PMA_getImage('b_sbrowse', PMA_messages.strColumnName) + '</td>' +",
          "99:                 '<td width=\"175\" style=\"padding-left: 5px\">' + $('<div/>').text(history_array[i].get_column_name()).html() + '<td>';",
          "101:                 var detailDesc = $('<div/>').text(detail(i)).html();",
          "103:                     '<td title=\"' + detailDesc + '\">' + history_array[i].get_type() + '</td>' +",
          "106:                 var detailDesc = $('<div/>').text(detail(i)).html();",
          "108:                     '<td title=\"' + detailDesc + '\">' + history_array[i].get_type() + '</td>' +",
          "",
          "---------------"
        ],
        "js/designer/move.js||js/designer/move.js": [
          "File: js/designer/move.js -> js/designer/move.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "708:         document.getElementById('t_v_' + key + '_').value = document.getElementById('id_tbody_' + key).style.display === 'none' ? 0 : 1;",
          "709:         document.getElementById('t_h_' + key + '_').value = document.getElementById('check_vis_' + key).checked ? 1 : 0;",
          "710:     }",
          "713: }",
          "715: function Get_url_pos (forceString) {",
          "",
          "[Removed Lines]",
          "711:     document.form1.action = url;",
          "712:     $(document.form1).submit();",
          "",
          "[Added Lines]",
          "711:     document.getElementById('container-form').action = url;",
          "712:     $('#container-form').submit();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1618:         id_this.alt = 'v';",
          "1619:         id_this.src = id_this.dataset.down;",
          "1620:     }",
          "1622:     for (var i = 0; i < E.elements.length; i++) {",
          "1623:         if (E.elements[i].type === 'checkbox' && E.elements[i].id.substring(0, 10) === 'check_vis_') {",
          "1624:             if (id_this.alt === 'v') {",
          "",
          "[Removed Lines]",
          "1621:     var E = document.form1;",
          "",
          "[Added Lines]",
          "1621:     var E = document.getElementById('container-form');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1670:         id_this.alt = 'v';",
          "1671:         id_this.src = id_this.dataset.down;",
          "1672:     }",
          "1674:     for (var i = 0; i < E.elements.length; i++) {",
          "1675:         if (E.elements[i].type === 'checkbox' && E.elements[i].id.substring(0, 10) === 'check_vis_') {",
          "1676:             if (!in_array_k(E.elements[i].value, a)) {",
          "",
          "[Removed Lines]",
          "1673:     var E = document.form1;",
          "",
          "[Added Lines]",
          "1673:     var E = document.getElementById('container-form');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1822:     return color;",
          "1823: }",
          "1834: }",
          "1836: function Close_option () {",
          "",
          "[Removed Lines]",
          "1825: function Click_option (id_this, column_name, table_name) {",
          "1826:     var left = Glob_X - (document.getElementById(id_this).offsetWidth >> 1);",
          "1827:     document.getElementById(id_this).style.left = left + 'px';",
          "1829:     document.getElementById(id_this).style.top  = (screen.height / 4) + 'px';",
          "1830:     document.getElementById(id_this).style.display = 'block';",
          "1831:     document.getElementById('option_col_name').innerHTML = '<strong>' + PMA_sprintf(PMA_messages.strAddOption, decodeURI(column_name)) + '</strong>';",
          "1832:     col_name = column_name;",
          "1833:     tab_name = table_name;",
          "",
          "[Added Lines]",
          "1825: function Click_option (dbName, tableName, columnName, tableDbNameUrl, optionColNameString) {",
          "1826:     var designerOptions = document.getElementById('designer_optionse');",
          "1827:     var left = Glob_X - (designerOptions.offsetWidth >> 1);",
          "1828:     designerOptions.style.left = left + 'px';",
          "1830:     designerOptions.style.top  = (screen.height / 4) + 'px';",
          "1831:     designerOptions.style.display = 'block';",
          "1832:     document.getElementById('ok_add_object_db_and_table_name_url').value = tableDbNameUrl;",
          "1833:     document.getElementById('ok_add_object_db_name').value = dbName;",
          "1834:     document.getElementById('ok_add_object_table_name').value = tableName;",
          "1835:     document.getElementById('ok_add_object_col_name').value = columnName;",
          "1836:     document.getElementById('option_col_name').innerHTML = optionColNameString;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1935:     var p;",
          "1936:     var where_obj;",
          "1937:     var rel = document.getElementById('rel_opt');",
          "",
          "[Removed Lines]",
          "1934: function add_object () {",
          "",
          "[Added Lines]",
          "1937: function add_object (dbName, tableName, colName, dbTableNameUrl) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1944:         }",
          "1945:         p = document.getElementById('Query');",
          "1946:         where_obj = new where(rel.value, p.value);// make where object",
          "1948:         sum = sum + 1;",
          "1949:     }",
          "1950:     if (document.getElementById('new_name').value !== '') {",
          "1951:         var rename_obj = new rename(document.getElementById('new_name').value);// make Rename object",
          "1953:         sum = sum + 1;",
          "1954:     }",
          "1955:     if (document.getElementById('operator').value !== '---') {",
          "1956:         var aggregate_obj = new aggregate(document.getElementById('operator').value);",
          "1958:         sum = sum + 1;",
          "1960:     }",
          "1961:     if (document.getElementById('groupby').checked === true) {",
          "1963:         sum = sum + 1;",
          "1965:     }",
          "",
          "[Removed Lines]",
          "1947:         history_array.push(new history_obj(col_name, where_obj, tab_name, h_tabs[downer + '.' + tab_name], 'Where'));",
          "1952:         history_array.push(new history_obj(col_name, rename_obj, tab_name, h_tabs[downer + '.' + tab_name], 'Rename'));",
          "1957:         history_array.push(new history_obj(col_name, aggregate_obj, tab_name, h_tabs[downer + '.' + tab_name], 'Aggregate'));",
          "1962:         history_array.push(new history_obj(col_name, 'GroupBy', tab_name, h_tabs[downer + '.' + tab_name], 'GroupBy'));",
          "",
          "[Added Lines]",
          "1950:         history_array.push(new history_obj(colName, where_obj, tableName, h_tabs[dbTableNameUrl], 'Where'));",
          "1955:         history_array.push(new history_obj(colName, rename_obj, tableName, h_tabs[dbTableNameUrl], 'Rename'));",
          "1960:         history_array.push(new history_obj(colName, aggregate_obj, tableName, h_tabs[dbTableNameUrl], 'Aggregate'));",
          "1965:         history_array.push(new history_obj(colName, 'GroupBy', tableName, h_tabs[dbTableNameUrl], 'GroupBy'));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1972:             document.getElementById('having').value,",
          "1973:             document.getElementById('h_operator').value",
          "1974:         );// make where object",
          "1976:         sum = sum + 1;",
          "1978:     }",
          "1979:     if (document.getElementById('orderby').value !== '---') {",
          "1980:         var oderby_obj = new orderby(document.getElementById('orderby').value);",
          "1982:         sum = sum + 1;",
          "1984:     }",
          "",
          "[Removed Lines]",
          "1975:         history_array.push(new history_obj(col_name, where_obj, tab_name, h_tabs[downer + '.' + tab_name], 'Having'));",
          "1981:         history_array.push(new history_obj(col_name, oderby_obj, tab_name, h_tabs[downer + '.' + tab_name], 'OrderBy'));",
          "",
          "[Added Lines]",
          "1978:         history_array.push(new history_obj(col_name, where_obj, tableName, h_tabs[dbTableNameUrl], 'Having'));",
          "1984:         history_array.push(new history_obj(col_name, oderby_obj, tableName, h_tabs[dbTableNameUrl], 'OrderBy'));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2017:         store_column($(this).attr('table_name'), $(this).attr('col_name'), $(this).attr('id'));",
          "2018:     });",
          "2019:     $(element).on('click', '.small_tab_pref_click_opt', function () {",
          "2022:     });",
          "2023:     $(element).on('click', '.tab_field_2,.tab_field_3,.tab_field', function () {",
          "2024:         var params = ($(this).attr('click_field_param')).split(',');",
          "",
          "[Removed Lines]",
          "2020:         var params = ($(this).attr('Click_option_param')).split(',');",
          "2021:         Click_option(params[0], params[1], params[2]);",
          "",
          "[Added Lines]",
          "2023:         Click_option(",
          "2024:             $(this).attr('db_name'),",
          "2025:             $(this).attr('table_name'),",
          "2026:             $(this).attr('col_name'),",
          "2027:             $(this).attr('db_table_name_url'),",
          "2028:             $(this).attr('option_col_name_modal')",
          "2029:         );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2204:         Re_load();",
          "2205:     });",
          "2206:     $('input#ok_add_object').click(function () {",
          "2208:     });",
          "2209:     $('input#cancel_close_option').click(function () {",
          "2210:         Close_option();",
          "",
          "[Removed Lines]",
          "2207:         add_object();",
          "",
          "[Added Lines]",
          "2215:         add_object(",
          "2216:             $('#ok_add_object_db_name').val(),",
          "2217:             $('#ok_add_object_table_name').val(),",
          "2218:             $('#ok_add_object_col_name').val(),",
          "2219:             $('#ok_add_object_db_and_table_name_url').val()",
          "2220:         );",
          "",
          "---------------"
        ],
        "js/messages.php||js/messages.php": [
          "File: js/messages.php -> js/messages.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "578: $js_messages['strModificationSaved'] = __('Modifications have been saved');",
          "582: $js_messages['strObjectsCreated'] = __('%d object(s) created.');",
          "583: $js_messages['strSubmit'] = __('Submit');",
          "",
          "[Removed Lines]",
          "581: $js_messages['strAddOption'] = __('Add an option for column \"%s\".');",
          "",
          "[Added Lines]",
          "582: $js_messages['strColumnName'] = __('Column name');",
          "",
          "---------------"
        ],
        "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig": [
          "File: templates/database/designer/database_tables.twig -> templates/database/designer/database_tables.twig",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:                     </td>",
          "123:                     {% if has_query %}",
          "124:                         <td class=\"small_tab_pref small_tab_pref_click_opt\"",
          "129:                         </td>",
          "130:                     {% endif %}",
          "131:                 </tr>",
          "",
          "[Removed Lines]",
          "125:                             click_option_param=\"designer_optionse,",
          "126:                                 {{- tab_column[t_n]['COLUMN_NAME'][j]|url_encode }},",
          "127:                                 {{- t_n }}\">",
          "128:                             <img src=\"{{ theme.getImgPath('designer/exec_small.png') }}\" title=\"options\" />",
          "",
          "[Added Lines]",
          "125:                             option_col_name_modal=\"<strong>{{ 'Add an option for column \"%s\".'|trans|format(col_name) }}</strong>\"",
          "126:                             db_name=\"{{ db }}\"",
          "127:                             table_name=\"{{ table_name }}\"",
          "128:                             col_name=\"{{ col_name }}\"",
          "129:                             db_table_name_url=\"{{ t_n_url }}\">",
          "130:                             <img src=\"{{ theme.getImgPath('designer/exec_small.png') }}\" title=\"{% trans 'Options'  %}\" />",
          "",
          "---------------"
        ],
        "templates/database/designer/options_panel.twig||templates/database/designer/options_panel.twig": [
          "File: templates/database/designer/options_panel.twig -> templates/database/designer/options_panel.twig",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:                     <tbody>",
          "248:                         <tr>",
          "249:                             <td colspan=\"2\" class=\"center nowrap\">",
          "250:                                 <input type=\"button\" id=\"ok_add_object\" class=\"butt\"",
          "251:                                     name=\"Button\" value=\"{% trans 'OK' %}\" />",
          "252:                                 <input type=\"button\" id=\"cancel_close_option\" class=\"butt\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:                                 <input type=\"hidden\" id=\"ok_add_object_db_and_table_name_url\" />",
          "251:                                 <input type=\"hidden\" id=\"ok_add_object_db_name\" />",
          "252:                                 <input type=\"hidden\" id=\"ok_add_object_table_name\" />",
          "253:                                 <input type=\"hidden\" id=\"ok_add_object_col_name\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a23f2ba51a93af0c5eedf91646aa9e04b9bc3a12",
      "candidate_info": {
        "commit_hash": "a23f2ba51a93af0c5eedf91646aa9e04b9bc3a12",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/a23f2ba51a93af0c5eedf91646aa9e04b9bc3a12",
        "files": [
          "db_designer.php",
          "js/designer/move.js",
          "libraries/classes/Database/Designer.php",
          "libraries/classes/Database/Designer/Common.php",
          "libraries/classes/Database/Designer/DesignerTable.php",
          "libraries/classes/Export.php",
          "libraries/classes/Plugins/Schema/ExportRelationSchema.php",
          "libraries/classes/Plugins/Schema/TableStats.php",
          "schema_export.php",
          "templates/database/designer/database_tables.twig"
        ],
        "message": "Fix some bugs with strange table and database names\n\n- Fix export\n- Fix split on . to have db and table\n- Replace some $_REQUEST occurences\n- Add translations to \"add tables from another database\" : \"None\" > strNone\n- Refactor the ugly code that used globals to use an object \"DesignerTable\"\n- Fix save a new added table\n- Fix delete page items\n- Fix more bugs\n\nFixes: #15446\nFixes: #13370\nFixes: #14945\nCloses: #15438\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>",
        "before_after_code_files": [
          "db_designer.php||db_designer.php",
          "js/designer/move.js||js/designer/move.js",
          "libraries/classes/Database/Designer.php||libraries/classes/Database/Designer.php",
          "libraries/classes/Database/Designer/Common.php||libraries/classes/Database/Designer/Common.php",
          "libraries/classes/Database/Designer/DesignerTable.php||libraries/classes/Database/Designer/DesignerTable.php",
          "libraries/classes/Export.php||libraries/classes/Export.php",
          "libraries/classes/Plugins/SchemExportRelationSchema.php||libraries/classes/Plugins/Schema/ExportRelationSchema.php",
          "libraries/classes/Plugins/SchemTableStats.php||libraries/classes/Plugins/Schema/TableStats.php",
          "schema_export.php||schema_export.php",
          "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/designer/move.js||js/designer/move.js",
            "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
          ],
          "candidate": [
            "js/designer/move.js||js/designer/move.js",
            "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig"
          ]
        }
      },
      "candidate_diff": {
        "db_designer.php||db_designer.php": [
          "File: db_designer.php -> db_designer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: if (isset($_POST['dialog'])) {",
          "21:     if ($_POST['dialog'] == 'edit') {",
          "23:     } elseif ($_POST['dialog'] == 'delete') {",
          "25:     } elseif ($_POST['dialog'] == 'save_as') {",
          "27:     } elseif ($_POST['dialog'] == 'export') {",
          "28:         $html = $databaseDesigner->getHtmlForSchemaExport(",
          "30:         );",
          "31:     } elseif ($_POST['dialog'] == 'add_table') {",
          "48:         $html = $databaseDesigner->getDatabaseTables(",
          "49:             array(), -1, $tab_column,",
          "50:             $tables_all_keys, $tables_pk_or_unique_keys",
          "51:         );",
          "",
          "[Removed Lines]",
          "22:         $html = $databaseDesigner->getHtmlForEditOrDeletePages($GLOBALS['db'], 'editPage');",
          "24:         $html = $databaseDesigner->getHtmlForEditOrDeletePages($GLOBALS['db'], 'deletePage');",
          "26:         $html = $databaseDesigner->getHtmlForPageSaveAs($GLOBALS['db']);",
          "29:             $GLOBALS['db'], $_POST['selected_page']",
          "32:         $script_display_field = $designerCommon->getTablesInfo();",
          "33:         $required = $GLOBALS['db'] . '.' . $GLOBALS['table'];",
          "34:         $tab_column = $designerCommon->getColumnsInfo();",
          "35:         $tables_all_keys = $designerCommon->getAllKeys();",
          "36:         $tables_pk_or_unique_keys = $designerCommon->getPkOrUniqueKeys();",
          "38:         $req_key = array_search($required, $GLOBALS['designer']['TABLE_NAME']);",
          "40:         $GLOBALS['designer']['TABLE_NAME'] = array($GLOBALS['designer']['TABLE_NAME'][$req_key]);",
          "41:         $GLOBALS['designer_url']['TABLE_NAME'] = array($GLOBALS['designer_url']['TABLE_NAME'][$req_key]);",
          "42:         $GLOBALS['designer_url']['TABLE_NAME_SMALL'] = array($GLOBALS['designer_url']['TABLE_NAME_SMALL'][$req_key]);",
          "43:         $GLOBALS['designer']['TABLE_NAME_SMALL'] = array($GLOBALS['designer']['TABLE_NAME_SMALL'][$req_key]);",
          "44:         $GLOBALS['designer_out']['TABLE_NAME_SMALL'] = array($GLOBALS['designer_out']['TABLE_NAME_SMALL'][$req_key]);",
          "45:         $GLOBALS['designer']['TABLE_TYPE'] = array($GLOBALS['designer_url']['TABLE_TYPE'][$req_key]);",
          "46:         $GLOBALS['designer_out']['OWNER'] = array($GLOBALS['designer_out']['OWNER'][$req_key]);",
          "",
          "[Added Lines]",
          "22:         $html = $databaseDesigner->getHtmlForEditOrDeletePages($_POST['db'], 'editPage');",
          "24:         $html = $databaseDesigner->getHtmlForEditOrDeletePages($_POST['db'], 'deletePage');",
          "26:         $html = $databaseDesigner->getHtmlForPageSaveAs($_POST['db']);",
          "29:             $_POST['db'], $_POST['selected_page']",
          "33:         $script_display_field = $designerCommon->getTablesInfo($_POST['db'], $_POST['table']);",
          "34:         $tab_column = $designerCommon->getColumnsInfo($script_display_field);",
          "35:         $tables_all_keys = $designerCommon->getAllKeys($script_display_field);",
          "36:         $tables_pk_or_unique_keys = $designerCommon->getPkOrUniqueKeys($script_display_field);",
          "39:             $_POST['db'],",
          "40:             $script_display_field,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:         if ($_POST['save_page'] == 'same') {",
          "67:             $page = $_POST['selected_page'];",
          "68:         } else { // new",
          "70:             $response->addJSON('id', $page);",
          "71:         }",
          "72:         $success = $designerCommon->saveTablePositions($page);",
          "",
          "[Removed Lines]",
          "69:             $page = $designerCommon->createNewPage($_POST['selected_value'], $GLOBALS['db']);",
          "",
          "[Added Lines]",
          "61:             $page = $designerCommon->createNewPage($_POST['selected_value'], $_POST['db']);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110: require 'libraries/db_common.inc.php';",
          "112: $script_display_field = $designerCommon->getTablesInfo();",
          "119: $display_page = -1;",
          "120: $selected_page = null;",
          "",
          "[Removed Lines]",
          "113: $tab_column = $designerCommon->getColumnsInfo();",
          "114: $script_tables = $designerCommon->getScriptTabs();",
          "115: $tables_pk_or_unique_keys = $designerCommon->getPkOrUniqueKeys();",
          "116: $tables_all_keys = $designerCommon->getAllKeys();",
          "117: $classes_side_menu = $databaseDesigner->returnClassNamesFromMenuButtons();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:     $selected_page = $designerCommon->getPageName($display_page);",
          "133: }",
          "134: $tab_pos = $designerCommon->getTablePositions($display_page);",
          "137: $params = array('lang' => $GLOBALS['lang']);",
          "138: if (isset($_GET['db'])) {",
          "",
          "[Removed Lines]",
          "135: $script_contr = $designerCommon->getScriptContr();",
          "",
          "[Added Lines]",
          "123: $fullTableNames = [];",
          "125: foreach($script_display_field as $designerTable) {",
          "126:     $fullTableNames[] = $designerTable->getDbTableString();",
          "127: }",
          "129: foreach($tab_pos as $position) {",
          "130:     if (! in_array($position['dbName'] . '.' . $position['tableName'], $fullTableNames)) {",
          "131:         foreach($designerCommon->getTablesInfo($position['dbName'], $position['tableName']) as $designerTable) {",
          "132:             $script_display_field[] = $designerTable;",
          "133:         }",
          "134:     }",
          "135: }",
          "138: $tab_column = $designerCommon->getColumnsInfo($script_display_field);",
          "139: $script_tables = $designerCommon->getScriptTabs($script_display_field);",
          "140: $tables_pk_or_unique_keys = $designerCommon->getPkOrUniqueKeys($script_display_field);",
          "141: $tables_all_keys = $designerCommon->getAllKeys($script_display_field);",
          "142: $classes_side_menu = $databaseDesigner->returnClassNamesFromMenuButtons();",
          "145: $script_contr = $designerCommon->getScriptContr($script_display_field);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "193: $response->addHTML(",
          "194:     $databaseDesigner->getDatabaseTables(",
          "195:         $tab_pos, $display_page, $tab_column,",
          "196:         $tables_all_keys, $tables_pk_or_unique_keys",
          "197:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:         $_GET['db'],",
          "206:         $script_display_field,",
          "",
          "---------------"
        ],
        "js/designer/move.js||js/designer/move.js": [
          "File: js/designer/move.js -> js/designer/move.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:     saveValueInConfig('full_screen', value_sent);",
          "550: }",
          "553:     var db = $(table_dom).find('.small_tab_pref').attr('db');",
          "557:     var $new_table_line = $('<tr>' +",
          "558:         '    <td title=\"' + PMA_messages.strStructure + '\"' +",
          "559:         '        width=\"1px\"' +",
          "560:         '        class=\"L_butt2_1\">' +",
          "561:         '        <img alt=\"\"' +",
          "564:         '            class=\"scroll_tab_struct\"' +",
          "565:         '            src=\"' + pmaThemeImage + 'designer/exec.png\"/>' +",
          "566:         '    </td>' +",
          "567:         '    <td width=\"1px\">' +",
          "568:         '        <input class=\"scroll_tab_checkbox\"' +",
          "569:         '            title=\"' + PMA_messages.strHide + '\"' +",
          "571:         '            style=\"margin:0;\"' +",
          "572:         '            type=\"checkbox\"' +",
          "573:         '            value=\"' + db_encoded + '.' + table_encoded + '\"' +",
          "",
          "[Removed Lines]",
          "552: function addTableToTablesList(index, table_dom) {",
          "554:     var table = $(table_dom).find('.small_tab_pref').attr('table_name_small');",
          "555:     var db_encoded = encodeURIComponent(db);",
          "556:     var table_encoded = encodeURIComponent(table);",
          "562:         '            db=\"' + db + '\"' +",
          "563:         '            table_name=\"' + table + '\"' +",
          "570:         '            id=\"check_vis_' + encodeURI(db) + '.' + table_encoded + '\"' +",
          "",
          "[Added Lines]",
          "552: function addTableToTablesList (index, table_dom) {",
          "554:     var table = $(table_dom).find('.small_tab_pref').attr('table_name');",
          "555:     var db_encoded = $(table_dom).find('.small_tab_pref').attr('db_url');",
          "556:     var table_encoded = $(table_dom).find('.small_tab_pref').attr('table_name_url');",
          "562:         '            db=\"' + db_encoded + '\"' +",
          "563:         '            table_name=\"' + table_encoded + '\"' +",
          "570:         '            id=\"check_vis_' + db_encoded + '.' + table_encoded + '\"' +",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "615:             'table' : table,",
          "616:             'server': PMA_commonParams.get('server')",
          "617:         }, function (data) {",
          "623:         });",
          "624:         $(this).dialog('close');",
          "625:     };",
          "",
          "[Removed Lines]",
          "618:             var $new_table_dom = $(data.message);",
          "619:             $new_table_dom.find('a').first().remove();",
          "620:             $('#container-form').append($new_table_dom);",
          "621:             enableTableEvents(null, $new_table_dom);",
          "622:             addTableToTablesList(null, $new_table_dom);",
          "",
          "[Added Lines]",
          "618:             var $newTableDom = $(data.message);",
          "619:             $newTableDom.find('a').first().remove();",
          "620:             $('#container-form').append($newTableDom);",
          "621:             enableTableEvents(null, $newTableDom);",
          "622:             addTableToTablesList(null, $newTableDom);",
          "623:             var dbEncoded = $($newTableDom).find('.small_tab_pref').attr('db_url');",
          "624:             var tableEncoded = $($newTableDom).find('.small_tab_pref').attr('table_name_url');",
          "625:             j_tabs[dbEncoded + '.' + tableEncoded] = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "628:     };",
          "630:     var $select_db = $('<select id=\"add_table_from\"></select>');",
          "633:     var $select_table = $('<select id=\"add_table\"></select>');",
          "636:     $.post('sql.php', {",
          "637:         'ajax_request' : true,",
          "",
          "[Removed Lines]",
          "631:     $select_db.append('<option value=\"\">None</option>');",
          "634:     $select_table.append('<option value=\"\">None</option>');",
          "",
          "[Added Lines]",
          "634:     $select_db.append('<option value=\"\">' + PMA_messages.strNone + '</option>');",
          "637:     $select_table.append('<option value=\"\">' + PMA_messages.strNone + '</option>');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "670:                 'server': PMA_commonParams.get('server')",
          "671:             }, function (data) {",
          "672:                 $select_table.html('');",
          "674:                     var val = $(this)[0].innerHTML;",
          "675:                     $select_table.append('<option value=\"' + val + '\">' + val + '</option>');",
          "676:                 });",
          "",
          "[Removed Lines]",
          "673:                 $(data.message).find('table.table_results.data.ajax').find('td.data').each(function () {",
          "",
          "[Added Lines]",
          "676:                 var rows = $(data.message).find('table.table_results.data.ajax').find('td.data');",
          "677:                 if (rows.length === 0) {",
          "678:                     $select_table.append('<option value=\"\">' + PMA_messages.strNone + '</option>');",
          "679:                 }",
          "680:                 rows.each(function () {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "705:     if (designer_tables_enabled || forceString) {",
          "706:         var poststr = '';",
          "707:         var argsep = PMA_commonParams.get('arg_separator');",
          "708:         for (var key in j_tabs) {",
          "713:         }",
          "714:         return poststr;",
          "715:     } else {",
          "",
          "[Removed Lines]",
          "709:             poststr += argsep + 't_x[' + decodeURIComponent(key) + ']=' + parseInt(document.getElementById(key).style.left, 10);",
          "710:             poststr += argsep + 't_y[' + decodeURIComponent(key) + ']=' + parseInt(document.getElementById(key).style.top, 10);",
          "711:             poststr += argsep + 't_v[' + decodeURIComponent(key) + ']=' + (document.getElementById('id_tbody_' + key).style.display === 'none' ? 0 : 1);",
          "712:             poststr += argsep + 't_h[' + decodeURIComponent(key) + ']=' + (document.getElementById('check_vis_' + key).checked ? 1 : 0);",
          "",
          "[Added Lines]",
          "715:         var i = 1;",
          "717:             poststr += argsep + 't_x[' + i + ']=' + parseInt(document.getElementById(key).style.left, 10);",
          "718:             poststr += argsep + 't_y[' + i + ']=' + parseInt(document.getElementById(key).style.top, 10);",
          "719:             poststr += argsep + 't_v[' + i + ']=' + (document.getElementById('id_tbody_' + key).style.display === 'none' ? 0 : 1);",
          "720:             poststr += argsep + 't_h[' + i + ']=' + (document.getElementById('check_vis_' + key).checked ? 1 : 0);",
          "721:             poststr += argsep + 't_db[' + i + ']=' + $(document.getElementById(key)).attr('db_url');",
          "722:             poststr += argsep + 't_tbl[' + i + ']=' + $(document.getElementById(key)).attr('table_name_url');",
          "723:             i++;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "718:             if (document.getElementById('check_vis_' + key).checked) {",
          "719:                 var x = parseInt(document.getElementById(key).style.left, 10);",
          "720:                 var y = parseInt(document.getElementById(key).style.top, 10);",
          "722:                 coords.push(tbCoords);",
          "723:             }",
          "724:         }",
          "",
          "[Removed Lines]",
          "721:                 var tbCoords = new TableCoordinate(db, key.split('.')[1], -1, x, y);",
          "",
          "[Added Lines]",
          "732:                 var tbCoords = new TableCoordinate(",
          "733:                     $(document.getElementById(key)).attr('db_url'),",
          "734:                     $(document.getElementById(key)).attr('table_name_url'),",
          "735:                     -1, x, y);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "729: function Save2 (callback) {",
          "730:     if (designer_tables_enabled) {",
          "731:         var argsep = PMA_commonParams.get('arg_separator');",
          "734:         poststr += Get_url_pos();",
          "736:         var $msgbox = PMA_ajaxShowMessage(PMA_messages.strProcessingRequest);",
          "",
          "[Removed Lines]",
          "732:         var poststr = argsep + 'operation=savePage' + argsep + 'save_page=same' + argsep + 'ajax_request=true';",
          "733:         poststr += argsep + 'server=' + server + argsep + 'db=' + db + argsep + 'selected_page=' + selected_page;",
          "",
          "[Added Lines]",
          "746:         var poststr = 'operation=savePage' + argsep + 'save_page=same' + argsep + 'ajax_request=true';",
          "747:         poststr += argsep + 'server=' + server + argsep + 'db=' + encodeURIComponent(db) + argsep + 'selected_page=' + selected_page;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1176:         if (page !== null) {",
          "1177:             param_page = argsep + 'page=' + page;",
          "1178:         }",
          "1180:             .appendTo($('#page_content'))",
          "1181:             .click();",
          "1182:     } else {",
          "",
          "[Removed Lines]",
          "1179:         $('<a href=\"db_designer.php?server=' + server + argsep + 'db=' + encodeURI(db) + param_page + '\"></a>')",
          "",
          "[Added Lines]",
          "1193:         $('<a href=\"db_designer.php?server=' + server + argsep + 'db=' + encodeURIComponent(db) + param_page + '\"></a>')",
          "",
          "---------------"
        ],
        "libraries/classes/Database/Designer.php||libraries/classes/Database/Designer.php": [
          "File: libraries/classes/Database/Designer.php -> libraries/classes/Database/Designer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "291:     {",
          "292:         return Template::get('database/designer/table_list')->render([",
          "293:             'theme' => $GLOBALS['PMA_Theme'],",
          "295:         ]);",
          "296:     }",
          "309:     public function getDatabaseTables(",
          "310:         array $tab_pos,",
          "311:         $display_page,",
          "312:         array $tab_column,",
          "",
          "[Removed Lines]",
          "294:             'table_names' => $GLOBALS['designer']['TABLE_NAME'],",
          "",
          "[Added Lines]",
          "311:         $db,",
          "312:         array $designerTables,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:     ) {",
          "316:         return Template::get('database/designer/database_tables')->render([",
          "317:             'db' => $GLOBALS['db'],",
          "319:             'has_query' => isset($_REQUEST['query']),",
          "320:             'tab_pos' => $tab_pos,",
          "321:             'display_page' => $display_page,",
          "322:             'tab_column' => $tab_column,",
          "323:             'tables_all_keys' => $tables_all_keys,",
          "324:             'tables_pk_or_unique_keys' => $tables_pk_or_unique_keys,",
          "332:             'theme' => $GLOBALS['PMA_Theme'],",
          "333:         ]);",
          "334:     }",
          "",
          "[Removed Lines]",
          "318:             'get_db' => $_GET['db'],",
          "325:             'table_names' => $GLOBALS['designer']['TABLE_NAME'],",
          "326:             'table_names_url' => $GLOBALS['designer_url']['TABLE_NAME'],",
          "327:             'table_names_small' => $GLOBALS['designer']['TABLE_NAME_SMALL'],",
          "328:             'table_names_small_url' => $GLOBALS['designer_url']['TABLE_NAME_SMALL'],",
          "329:             'table_names_small_out' => $GLOBALS['designer_out']['TABLE_NAME_SMALL'],",
          "330:             'table_types' => $GLOBALS['designer']['TABLE_TYPE'],",
          "331:             'owner_out' => $GLOBALS['designer_out']['OWNER'],",
          "",
          "[Added Lines]",
          "321:             'get_db' => $db,",
          "328:             'tables' => $designerTables,",
          "",
          "---------------"
        ],
        "libraries/classes/Database/Designer/Common.php||libraries/classes/Database/Designer/Common.php": [
          "File: libraries/classes/Database/Designer/Common.php -> libraries/classes/Database/Designer/Common.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: use PhpMyAdmin\\Relation;",
          "13: use PhpMyAdmin\\Table;",
          "14: use PhpMyAdmin\\Util;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use PhpMyAdmin\\Database\\Designer\\DesignerTable;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     }",
          "42:     {",
          "96:         }",
          "99:     }",
          "107:     {",
          "112:                 $GLOBALS['dbi']->getColumnsSql(",
          "115:                     null,",
          "116:                     true",
          "117:                 ),",
          "118:                 DatabaseInterface::CONNECT_USER,",
          "119:                 DatabaseInterface::QUERY_STORE",
          "120:             );",
          "122:             $j = 0;",
          "128:                 $j++;",
          "129:             }",
          "130:         }",
          "132:     }",
          "140:     {",
          "141:         $GLOBALS['dbi']->selectDb($GLOBALS['db']);",
          "142:         $con = array();",
          "",
          "[Removed Lines]",
          "41:     public function getTablesInfo()",
          "43:         $retval = array();",
          "45:         $GLOBALS['designer']['TABLE_NAME'] = array();// that foreach no error",
          "46:         $GLOBALS['designer']['OWNER'] = array();",
          "47:         $GLOBALS['designer']['TABLE_NAME_SMALL'] = array();",
          "48:         $GLOBALS['designer']['TABLE_TYPE'] = array();",
          "50:         $GLOBALS['designer_url']['TABLE_NAME'] = array();",
          "51:         $GLOBALS['designer_url']['OWNER'] = array();",
          "52:         $GLOBALS['designer_url']['TABLE_NAME_SMALL'] = array();",
          "54:         $GLOBALS['designer_out']['TABLE_NAME'] = array();",
          "55:         $GLOBALS['designer_out']['OWNER'] = array();",
          "56:         $GLOBALS['designer_out']['TABLE_NAME_SMALL'] = array();",
          "57:         $tables = $GLOBALS['dbi']->getTablesFull($GLOBALS['db']);",
          "59:         $GLOBALS['dbi']->selectDb($GLOBALS['db']);",
          "60:         $i = 0;",
          "61:         foreach ($tables as $one_table) {",
          "62:             $GLOBALS['designer']['TABLE_NAME'][$i]",
          "63:                 = $GLOBALS['db'] . \".\" . $one_table['TABLE_NAME'];",
          "64:             $GLOBALS['designer']['OWNER'][$i] = $GLOBALS['db'];",
          "65:             $GLOBALS['designer']['TABLE_NAME_SMALL'][$i] = htmlspecialchars(",
          "66:                 $one_table['TABLE_NAME'], ENT_QUOTES",
          "67:             );",
          "69:             $GLOBALS['designer_url']['TABLE_NAME'][$i]",
          "70:                 = $GLOBALS['db'] . \".\" . $one_table['TABLE_NAME'];",
          "71:             $GLOBALS['designer_url']['OWNER'][$i] = $GLOBALS['db'];",
          "72:             $GLOBALS['designer_url']['TABLE_NAME_SMALL'][$i]",
          "73:                 = $one_table['TABLE_NAME'];",
          "75:             $GLOBALS['designer_out']['TABLE_NAME'][$i] = htmlspecialchars(",
          "76:                 $GLOBALS['db'] . \".\" . $one_table['TABLE_NAME'], ENT_QUOTES",
          "77:             );",
          "78:             $GLOBALS['designer_out']['OWNER'][$i] = htmlspecialchars(",
          "79:                 $GLOBALS['db'], ENT_QUOTES",
          "80:             );",
          "81:             $GLOBALS['designer_out']['TABLE_NAME_SMALL'][$i] = htmlspecialchars(",
          "82:                 $one_table['TABLE_NAME'], ENT_QUOTES",
          "83:             );",
          "85:             $GLOBALS['designer']['TABLE_TYPE'][$i] = mb_strtoupper(",
          "86:                 $one_table['ENGINE']",
          "87:             );",
          "89:             $DF = $this->relation->getDisplayField($GLOBALS['db'], $one_table['TABLE_NAME']);",
          "90:             if ($DF != '') {",
          "91:                 $DF = rawurlencode((string)$DF);",
          "92:                 $retval[rawurlencode($GLOBALS['designer_url'][\"TABLE_NAME_SMALL\"][$i])] = $DF;",
          "93:             }",
          "95:             $i++;",
          "98:         return $retval;",
          "106:     public function getColumnsInfo()",
          "108:         $GLOBALS['dbi']->selectDb($GLOBALS['db']);",
          "109:         $tab_column = array();",
          "110:         for ($i = 0, $cnt = count($GLOBALS['designer'][\"TABLE_NAME\"]); $i < $cnt; $i++) {",
          "111:             $fields_rs = $GLOBALS['dbi']->query(",
          "113:                     $GLOBALS['db'],",
          "114:                     $GLOBALS['designer_url'][\"TABLE_NAME_SMALL\"][$i],",
          "121:             $tbl_name_i = $GLOBALS['designer']['TABLE_NAME'][$i];",
          "123:             while ($row = $GLOBALS['dbi']->fetchAssoc($fields_rs)) {",
          "124:                 $tab_column[$tbl_name_i]['COLUMN_ID'][$j]   = $j;",
          "125:                 $tab_column[$tbl_name_i]['COLUMN_NAME'][$j] = $row['Field'];",
          "126:                 $tab_column[$tbl_name_i]['TYPE'][$j]        = $row['Type'];",
          "127:                 $tab_column[$tbl_name_i]['NULLABLE'][$j]    = $row['Null'];",
          "131:         return $tab_column;",
          "139:     public function getScriptContr()",
          "",
          "[Added Lines]",
          "44:     public function getTablesInfo($db = null, $table = null)",
          "46:         $designerTables = array();",
          "47:         $db = ($db === null) ? $GLOBALS['db'] : $db;",
          "49:         $GLOBALS['dbi']->selectDb($db);",
          "50:         if ($db === null && $table === null) {",
          "51:             $tables = $GLOBALS['dbi']->getTablesFull($db);",
          "52:         } else {",
          "53:             $tables = $GLOBALS['dbi']->getTablesFull($db, $table);",
          "54:         }",
          "57:         foreach ($tables as $one_table) {",
          "58:             $DF = $this->relation->getDisplayField($db, $one_table['TABLE_NAME']);",
          "59:             $DF = ($DF !== '') ? $DF : null;",
          "60:             $designerTables[] = new DesignerTable(",
          "61:                                     $db,",
          "62:                                     $one_table['TABLE_NAME'],",
          "63:                                     $one_table['ENGINE'],",
          "64:                                     $DF",
          "65:                                 );",
          "68:         return $designerTables;",
          "77:     public function getColumnsInfo($designerTables)",
          "80:         $tabColumn = array();",
          "82:         foreach($designerTables as $designerTable) {",
          "83:             $fieldsRs = $GLOBALS['dbi']->query(",
          "85:                     $designerTable->getDatabaseName(),",
          "86:                     $designerTable->getTableName(),",
          "94:             while ($row = $GLOBALS['dbi']->fetchAssoc($fieldsRs)) {",
          "95:                 if (! isset($tabColumn[$designerTable->getDbTableString()])) {",
          "96:                     $tabColumn[$designerTable->getDbTableString()] = [];",
          "97:                 }",
          "98:                 $tabColumn[$designerTable->getDbTableString()]['COLUMN_ID'][$j]   = $j;",
          "99:                 $tabColumn[$designerTable->getDbTableString()]['COLUMN_NAME'][$j] = $row['Field'];",
          "100:                 $tabColumn[$designerTable->getDbTableString()]['TYPE'][$j]        = $row['Type'];",
          "101:                 $tabColumn[$designerTable->getDbTableString()]['NULLABLE'][$j]    = $row['Null'];",
          "106:         return $tabColumn;",
          "115:     public function getScriptContr($designerTables)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:             }",
          "184:         }",
          "186:         $ti = 0;",
          "187:         $retval = array();",
          "188:         for ($i = 0, $cnt = count($con[\"C_NAME\"]); $i < $cnt; $i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:         $tableDbNames = [];",
          "163:         foreach($designerTables as $designerTable) {",
          "164:             $tableDbNames[] = $designerTable->getDbTableString();",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "190:             $dtn_i = $con['DTN'][$i];",
          "191:             $retval[$ti] = array();",
          "192:             $retval[$ti][$c_name_i] = array();",
          "196:                 $retval[$ti][$c_name_i][$dtn_i] = array();",
          "197:                 $retval[$ti][$c_name_i][$dtn_i][$con['DCN'][$i]] = array(",
          "198:                     0 => $con['STN'][$i],",
          "",
          "[Removed Lines]",
          "193:             if (in_array(rawurldecode($dtn_i), $GLOBALS['designer_url'][\"TABLE_NAME\"])",
          "194:                 && in_array(rawurldecode($con['STN'][$i]), $GLOBALS['designer_url'][\"TABLE_NAME\"])",
          "195:             ) {",
          "",
          "[Added Lines]",
          "174:             if (in_array($dtn_i, $tableDbNames) && in_array($con['STN'][$i], $tableDbNames)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "213:     {",
          "215:     }",
          "225:     {",
          "226:         $keys = array();",
          "232:                 if ($unique_only && ! $index->isUnique()) {",
          "233:                     continue;",
          "234:                 }",
          "235:                 $columns = $index->getColumns();",
          "236:                 foreach ($columns as $column_name => $dummy) {",
          "238:                 }",
          "239:             }",
          "240:         }",
          "",
          "[Removed Lines]",
          "212:     public function getPkOrUniqueKeys()",
          "214:         return $this->getAllKeys(true);",
          "224:     public function getAllKeys($unique_only = false)",
          "228:         foreach ($GLOBALS['designer']['TABLE_NAME_SMALL'] as $I => $table) {",
          "229:             $schema = $GLOBALS['designer']['OWNER'][$I];",
          "231:             foreach (Index::getFromTable($table, $schema) as $index) {",
          "237:                     $keys[$schema . '.' . $table . '.' . $column_name] = 1;",
          "",
          "[Added Lines]",
          "192:     public function getPkOrUniqueKeys($designerTables)",
          "194:         return $this->getAllKeys($designerTables, true);",
          "205:     public function getAllKeys($designerTables, $unique_only = false)",
          "209:         foreach ($designerTables as $designerTable) {",
          "210:             $schema = $designerTable->getDatabaseName();",
          "212:             foreach (Index::getFromTable($designerTable->getTableName(), $schema) as $index) {",
          "218:                     $keys[$schema . '.' . $designerTable->getTableName() . '.' . $column_name] = 1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "242:     }",
          "250:     {",
          "251:         $retval = array(",
          "252:             'j_tabs' => array(),",
          "253:             'h_tabs' => array()",
          "254:         );",
          "263:         }",
          "264:         return $retval;",
          "265:     }",
          "",
          "[Removed Lines]",
          "249:     public function getScriptTabs()",
          "256:         for ($i = 0, $cnt = count($GLOBALS['designer']['TABLE_NAME']); $i < $cnt; $i++) {",
          "257:             $j = 0;",
          "258:             if (Util::isForeignKeySupported($GLOBALS['designer']['TABLE_TYPE'][$i])) {",
          "259:                 $j = 1;",
          "260:             }",
          "261:             $retval['j_tabs'][\\rawurlencode($GLOBALS['designer_url']['TABLE_NAME'][$i])] = $j;",
          "262:             $retval['h_tabs'][\\rawurlencode($GLOBALS['designer_url']['TABLE_NAME'][$i])] = 1;",
          "",
          "[Added Lines]",
          "231:     public function getScriptTabs($designerTables)",
          "238:         foreach($designerTables as $designerTable) {",
          "239:             $key = rawurlencode($designerTable->getDbTableString());",
          "240:             $retval['j_tabs'][$key] = $designerTable->supportsForeignkeys() ? 1 : 0;",
          "241:             $retval['h_tabs'][$key] = 1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "281:         $query = \"",
          "282:             SELECT CONCAT_WS('.', `db_name`, `table_name`) AS `name`,",
          "283:                 `x` AS `X`,",
          "284:                 `y` AS `Y`,",
          "285:                 1 AS `V`,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:                 `db_name` as `dbName`, `table_name` as `tableName`,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "466:     public function saveTablePositions($pg)",
          "467:     {",
          "468:         $cfgRelation = $this->relation->getRelationsParam();",
          "469:         if (! $cfgRelation['pdfwork']) {",
          "470:             return false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "449:         $pageId = $GLOBALS['dbi']->escapeString($pg);",
          "451:         $db = $GLOBALS['dbi']->escapeString($_POST['db']);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "475:             . \".\" . Util::backquote(",
          "476:                 $GLOBALS['cfgRelation']['table_coords']",
          "477:             )",
          "483:         $res = $this->relation->queryAsControlUser(",
          "484:             $query,",
          "",
          "[Removed Lines]",
          "478:             . \" WHERE `db_name` = '\" . $GLOBALS['dbi']->escapeString($_REQUEST['db'])",
          "479:             . \"'\"",
          "480:             . \" AND `pdf_page_number` = '\" . $GLOBALS['dbi']->escapeString($pg)",
          "481:             . \"'\";",
          "",
          "[Added Lines]",
          "463:             . \" WHERE `pdf_page_number` = '\" . $pageId . \"'\";",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "490:             return (boolean)$res;",
          "491:         }",
          "495:             if (!$value) {",
          "496:                 continue;",
          "497:             }",
          "",
          "[Removed Lines]",
          "493:         foreach ($_REQUEST['t_h'] as $key => $value) {",
          "494:             list($DB, $TAB) = explode(\".\", $key);",
          "",
          "[Added Lines]",
          "475:         foreach ($_POST['t_h'] as $key => $value) {",
          "476:             $DB = $_POST['t_db'][$key];",
          "477:             $TAB = $_POST['t_tbl'][$key];",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "503:                 . \" VALUES (\"",
          "504:                 . \"'\" . $GLOBALS['dbi']->escapeString($DB) . \"', \"",
          "505:                 . \"'\" . $GLOBALS['dbi']->escapeString($TAB) . \"', \"",
          "510:             $res = $this->relation->queryAsControlUser(",
          "511:                 $query,  true, DatabaseInterface::QUERY_STORE",
          "",
          "[Removed Lines]",
          "506:                 . \"'\" . $GLOBALS['dbi']->escapeString($pg) . \"', \"",
          "507:                 . \"'\" . $GLOBALS['dbi']->escapeString($_REQUEST['t_x'][$key]) . \"', \"",
          "508:                 . \"'\" . $GLOBALS['dbi']->escapeString($_REQUEST['t_y'][$key]) . \"')\";",
          "",
          "[Added Lines]",
          "489:                 . \"'\" . $pageId . \"', \"",
          "490:                 . \"'\" . $GLOBALS['dbi']->escapeString($_POST['t_x'][$key]) . \"', \"",
          "491:                 . \"'\" . $GLOBALS['dbi']->escapeString($_POST['t_y'][$key]) . \"')\";",
          "",
          "---------------"
        ],
        "libraries/classes/Database/Designer/DesignerTable.php||libraries/classes/Database/Designer/DesignerTable.php": [
          "File: libraries/classes/Database/Designer/DesignerTable.php -> libraries/classes/Database/Designer/DesignerTable.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "8: namespace PhpMyAdmin\\Database\\Designer;",
          "10: use PhpMyAdmin\\Util;",
          "17: class DesignerTable",
          "18: {",
          "19:     private $tableName;",
          "20:     private $databaseName;",
          "21:     private $tableEngine;",
          "22:     private $displayField;",
          "32:     public function __construct(",
          "33:         $databaseName,",
          "34:         $tableName,",
          "35:         $tableEngine,",
          "36:         $displayField",
          "37:     ) {",
          "38:         $this->databaseName = $databaseName;",
          "39:         $this->tableName = $tableName;",
          "40:         $this->tableEngine = $tableEngine;",
          "41:         $this->displayField = $displayField;",
          "42:     }",
          "49:     public function supportsForeignkeys() {",
          "50:         return Util::isForeignKeySupported($this->tableEngine);",
          "51:     }",
          "58:     public function getDatabaseName() {",
          "59:         return $this->databaseName;",
          "60:     }",
          "67:     public function getTableName() {",
          "68:         return $this->tableName;",
          "69:     }",
          "76:     public function getTableEngine() {",
          "77:         return $this->tableEngine;",
          "78:     }",
          "85:     public function getDbTableString() {",
          "86:         return $this->databaseName . '.' . $this->tableName;",
          "87:     }",
          "88: }",
          "",
          "---------------"
        ],
        "libraries/classes/Export.php||libraries/classes/Export.php": [
          "File: libraries/classes/Export.php -> libraries/classes/Export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1095:             Core::fatalError(__('Bad type!'));",
          "1096:         }",
          "1100:     }",
          "1101: }",
          "",
          "[Removed Lines]",
          "1098:         $GLOBALS['dbi']->selectDb($GLOBALS['db']);",
          "1099:         $export_plugin->exportSchema($GLOBALS['db']);",
          "",
          "[Added Lines]",
          "1098:         $GLOBALS['dbi']->selectDb($_POST['db']);",
          "1099:         $export_plugin->exportSchema($_POST['db']);",
          "",
          "---------------"
        ],
        "libraries/classes/Plugins/SchemExportRelationSchema.php||libraries/classes/Plugins/Schema/ExportRelationSchema.php": [
          "File: libraries/classes/Plugins/SchemExportRelationSchema.php -> libraries/classes/Plugins/Schema/ExportRelationSchema.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248:         $tables = [];",
          "249:         if (isset($_POST['t_tbl'])) {",
          "250:             foreach($_POST['t_tbl'] as $table) {",
          "251:                 $tables[] = rawurldecode($table);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:             , Url::getCommon(array('db' => $GLOBALS['db'], 'server' => $GLOBALS['server']))",
          "",
          "---------------"
        ],
        "libraries/classes/Plugins/SchemTableStats.php||libraries/classes/Plugins/Schema/TableStats.php": [
          "File: libraries/classes/Plugins/SchemTableStats.php -> libraries/classes/Plugins/Schema/TableStats.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:         if (isset($_POST['t_h'])) {",
          "134:             foreach ($_POST['t_h'] as $key => $value) {",
          "135:                 $db = rawurldecode($_POST['t_db'][$key]);",
          "136:                 $tbl = rawurldecode($_POST['t_tbl'][$key]);",
          "137:                 if ($this->db . '.' . $this->tableName === $db . '.' . $tbl) {",
          "138:                     $this->x = (double) $_POST['t_x'][$key];",
          "139:                     $this->y = (double) $_POST['t_y'][$key];",
          "140:                     break;",
          "141:                 }",
          "",
          "---------------"
        ],
        "schema_export.php||schema_export.php": [
          "File: schema_export.php -> schema_export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: $relation = new Relation();",
          "23: $cfgRelation = $relation->getRelationsParam();",
          "26:     Util::checkParameters(array('export_type'));",
          "27: }",
          "",
          "[Removed Lines]",
          "25: if (! isset($_REQUEST['export_type'])) {",
          "",
          "[Added Lines]",
          "25: if (! isset($_POST['export_type'])) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "33: Export::processExportSchema($_REQUEST['export_type']);",
          "",
          "[Added Lines]",
          "33: Export::processExportSchema($_POST['export_type']);",
          "",
          "---------------"
        ],
        "templates/database/designer/database_tables.twig||templates/database/designer/database_tables.twig": [
          "File: templates/database/designer/database_tables.twig -> templates/database/designer/database_tables.twig",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:     {% set i = loop.index0 %}",
          "9:         cellpadding=\"0\"",
          "10:         cellspacing=\"0\"",
          "11:         class=\"designer_tab\"",
          "",
          "[Removed Lines]",
          "1: {% for t_n in table_names %}",
          "3:     {% set t_n_url = table_names_url[i] %}",
          "4:     <input name=\"t_x[{{ t_n_url|url_encode }}]\" type=\"hidden\" id=\"t_x_{{ t_n_url|url_encode }}_\" />",
          "5:     <input name=\"t_y[{{ t_n_url|url_encode }}]\" type=\"hidden\" id=\"t_y_{{ t_n_url|url_encode }}_\" />",
          "6:     <input name=\"t_v[{{ t_n_url|url_encode }}]\" type=\"hidden\" id=\"t_v_{{ t_n_url|url_encode }}_\" />",
          "7:     <input name=\"t_h[{{ t_n_url|url_encode }}]\" type=\"hidden\" id=\"t_h_{{ t_n_url|url_encode }}_\" />",
          "8:     <table id=\"{{ t_n_url|url_encode }}\"",
          "",
          "[Added Lines]",
          "1: {% for designerTable in tables %}",
          "3:     {% set t_n_url = designerTable.getDbTableString()|escape('url') %}",
          "4:     {% set t_n = designerTable.getDbTableString() %}",
          "5:     <input name=\"t_x[{{ t_n_url }}]\" type=\"hidden\" id=\"t_x_{{ t_n_url }}_\" />",
          "6:     <input name=\"t_y[{{ t_n_url }}]\" type=\"hidden\" id=\"t_y_{{ t_n_url }}_\" />",
          "7:     <input name=\"t_v[{{ t_n_url }}]\" type=\"hidden\" id=\"t_v_{{ t_n_url }}_\" />",
          "8:     <input name=\"t_h[{{ t_n_url }}]\" type=\"hidden\" id=\"t_h_{{ t_n_url }}_\" />",
          "9:     <table id=\"{{ t_n_url }}\"",
          "10:         db_url=\"{{ designerTable.getDatabaseName()|escape('url') }}\"",
          "11:         table_name_url=\"{{ designerTable.getTableName()|escape('url') }}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:                         <input class=\"select_all_1\"",
          "21:                             type=\"checkbox\"",
          "22:                             style=\"margin: 0;\"",
          "25:                             title=\"select all\"",
          "28:                     </td>",
          "29:                 {% endif %}",
          "30:                 <td class=\"small_tab\"",
          "31:                     title=\"{% trans 'Show/hide columns' %}\"",
          "34:                 <td class=\"small_tab_pref small_tab_pref_1\"",
          "37:                     <img src=\"{{ theme.getImgPath('designer/exec_small.png') }}\"",
          "38:                         title=\"{% trans 'See table structure' %}\" />",
          "39:                 </td>",
          "41:                     class=\"tab_zag nowrap tab_zag_noquery\"",
          "43:                     query_set=\"{{ has_query ? 1 : 0 }}\">",
          "48:                 </td>",
          "49:                 {% if has_query %}",
          "50:                     <td class=\"tab_zag tab_zag_query\"",
          "53:                     </td>",
          "54:                {% endif %}",
          "55:             </tr>",
          "56:         </thead>",
          "58:             {{- tab_pos[t_n] is defined and tab_pos[t_n]['V'] is empty ? ' style=\"display: none\"' }}>",
          "60:             {% for j in 0..tab_column[t_n]['COLUMN_ID']|length - 1 %}",
          "61:                 {% set tmp_column = t_n ~ '.' ~ tab_column[t_n]['COLUMN_NAME'][j] %}",
          "62:                 {% set click_field_param = [",
          "64:                     tab_column[t_n]['COLUMN_NAME'][j]|url_encode",
          "65:                 ] %}",
          "67:                     {% set click_field_param = click_field_param|merge([tables_pk_or_unique_keys[tmp_column] is defined ? 1 : 0]) %}",
          "68:                 {% else %}",
          "69:                     {# if foreign keys are supported, it's not necessary that the",
          "",
          "[Removed Lines]",
          "23:                             value=\"select_all_{{ t_n_url|url_encode }}\"",
          "24:                             id=\"select_all_{{ t_n_url|url_encode }}\"",
          "26:                             designer_url_table_name=\"{{ t_n_url|url_encode }}\"",
          "27:                             designer_out_owner=\"{{ owner_out[i]|raw }}\">",
          "32:                     id=\"id_hide_tbody_{{ t_n_url|url_encode }}\"",
          "33:                     table_name=\"{{ t_n_url|url_encode }}\">{{ tab_pos[t_n] is not defined or tab_pos[t_n]['V'] is not empty ? 'v' : '&gt;' }}</td>",
          "35:                     db=\"{{ db }}\"",
          "36:                     table_name_small=\"{{ table_names_small_url[i] }}\">",
          "40:                 <td id=\"id_zag_{{ t_n_url|url_encode }}\"",
          "42:                     table_name=\"{{ t_n_url|url_encode }}\"",
          "44:                     <span class=\"owner\">",
          "45:                         {{ owner_out[i]|raw }}",
          "46:                     </span>",
          "47:                     {{ table_names_small_out[i]|raw }}",
          "51:                         id=\"id_zag_{{ t_n_url|url_encode }}_2\"",
          "52:                         table_name=\"{{ t_n_url|url_encode }}\">",
          "57:         <tbody id=\"id_tbody_{{ t_n_url|url_encode }}\"",
          "59:             {% set display_field = Relation_getDisplayField(get_db, table_names_small[i]) %}",
          "63:                     table_names_small_url[i],",
          "66:                 {% if not Util_isForeignKeySupported(table_types[i]) %}",
          "",
          "[Added Lines]",
          "26:                             value=\"select_all_{{ t_n_url }}\"",
          "27:                             id=\"select_all_{{ t_n_url }}\"",
          "29:                             designer_url_table_name=\"{{ t_n_url }}\"",
          "30:                             designer_out_owner=\"{{ designerTable.getDatabaseName() }}\">",
          "35:                     id=\"id_hide_tbody_{{ t_n_url }}\"",
          "36:                     table_name=\"{{ t_n_url }}\">{{ tab_pos[t_n] is not defined or tab_pos[t_n]['V'] is not empty ? 'v' : '&gt;' }}</td>",
          "38:                     db=\"{{ designerTable.getDatabaseName() }}\"",
          "39:                     db_url=\"{{ designerTable.getDatabaseName()|escape('url') }}\"",
          "40:                     table_name=\"{{ designerTable.getTableName() }}\"",
          "41:                     table_name_url=\"{{ designerTable.getTableName()|escape('url') }}\">",
          "45:                 <td id=\"id_zag_{{ t_n_url }}\"",
          "47:                     table_name=\"{{ t_n_url }}\"",
          "49:                     <span class=\"owner\">{{ designerTable.getDatabaseName() }}</span>",
          "50:                     {{ designerTable.getTableName()|raw }}",
          "54:                         id=\"id_zag_{{ t_n_url }}_2\"",
          "55:                         table_name=\"{{ t_n_url }}\">",
          "60:         <tbody id=\"id_tbody_{{ t_n_url }}\"",
          "62:             {% set display_field = Relation_getDisplayField(get_db, t_n) %}",
          "66:                     t_n,",
          "69:                 {% if not designerTable.supportsForeignkeys() %}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:                     {% set click_field_param = click_field_param|merge([tables_all_keys[tmp_column] is defined ? 1 : 0]) %}",
          "72:                 {% endif %}",
          "73:                 {% set click_field_param = click_field_param|merge([db]) %}",
          "75:                     {{- display_field == tab_column[t_n]['COLUMN_NAME'][j] ? '_3' }}\" click_field_param=\"",
          "76:                     {{- click_field_param|join(',') }}\">",
          "77:                     {% if has_query %}",
          "78:                         <td class=\"select_all\">",
          "79:                             <input class=\"select_all_store_col\"",
          "81:                                 type=\"checkbox\"",
          "83:                                 style=\"margin: 0;\"",
          "84:                                 title=\"select_{{ tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\"",
          "86:                                     {{- owner_out[i] }},",
          "87:                                     {{- tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\">",
          "88:                         </td>",
          "89:                     {% endif %}",
          "91:                         {{- tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\">",
          "92:                         <div class=\"nowrap\">",
          "93:                             {% if tables_pk_or_unique_keys[t_n ~ '.' ~ tab_column[t_n]['COLUMN_NAME'][j]] is defined %}",
          "",
          "[Removed Lines]",
          "74:                 <tr id=\"id_tr_{{ table_names_small_url[i] }}.{{ tab_column[t_n]['COLUMN_NAME'][j] }}\" class=\"tab_field",
          "80:                                 value=\"{{ t_n_url|url_encode }}{{ tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\"",
          "82:                                 id=\"select_{{ t_n_url|url_encode }}._{{ tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\"",
          "85:                                 store_column_param=\"{{ table_names_small_out[i]|url_encode }},",
          "90:                     <td width=\"10px\" colspan=\"3\" id=\"{{ t_n_url|url_encode }}.",
          "",
          "[Added Lines]",
          "77:                 <tr id=\"id_tr_{{ t_n }}.{{ tab_column[t_n]['COLUMN_NAME'][j] }}\" class=\"tab_field",
          "83:                                 value=\"{{ t_n_url }}{{ tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\"",
          "85:                                 id=\"select_{{ t_n_url }}._{{ tab_column[t_n]['COLUMN_NAME'][j]|url_encode }}\"",
          "88:                                 store_column_param=\"{{ t_n_url }},",
          "93:                     <td width=\"10px\" colspan=\"3\" id=\"{{ t_n_url }}.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:                         <td class=\"small_tab_pref small_tab_pref_click_opt\"",
          "117:                             click_option_param=\"designer_optionse,",
          "118:                                 {{- tab_column[t_n]['COLUMN_NAME'][j]|url_encode }},",
          "120:                             <img src=\"{{ theme.getImgPath('designer/exec_small.png') }}\" title=\"options\" />",
          "121:                         </td>",
          "122:                     {% endif %}",
          "",
          "[Removed Lines]",
          "119:                                 {{- table_names_small_out[i] }}\">",
          "",
          "[Added Lines]",
          "122:                                 {{- t_n }}\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de57539fb71beacba54b18283893ca3cba6f01cf",
      "candidate_info": {
        "commit_hash": "de57539fb71beacba54b18283893ca3cba6f01cf",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/de57539fb71beacba54b18283893ca3cba6f01cf",
        "files": [
          "db_designer.php",
          "js/designer/move.js",
          "js/messages.php",
          "libraries/classes/Database/Designer.php",
          "templates/database/designer/table_list.twig"
        ],
        "message": "Build \"tables list\" in JS\n\nThis will allow to have the list generation in only one place, as the tables can now be added on the fly. So JS also needs to add items to this list.\n\nSigned-off-by: Hugues Peccatte <hugues.peccatte@gmail.com>",
        "before_after_code_files": [
          "db_designer.php||db_designer.php",
          "js/designer/move.js||js/designer/move.js",
          "js/messages.php||js/messages.php",
          "libraries/classes/Database/Designer.php||libraries/classes/Database/Designer.php",
          "templates/database/designer/table_list.twig||templates/database/designer/table_list.twig"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/designer/move.js||js/designer/move.js"
          ],
          "candidate": [
            "js/designer/move.js||js/designer/move.js"
          ]
        }
      },
      "candidate_diff": {
        "db_designer.php||db_designer.php": [
          "File: db_designer.php -> db_designer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "188: );",
          "190: $response->addHTML($databaseDesigner->getHtmlCanvas());",
          "193: $response->addHTML(",
          "194:     $databaseDesigner->getDatabaseTables(",
          "",
          "[Removed Lines]",
          "191: $response->addHTML($databaseDesigner->getHtmlTableList($tab_pos, $display_page));",
          "",
          "[Added Lines]",
          "191: $response->addHTML($databaseDesigner->getHtmlTableList());",
          "",
          "---------------"
        ],
        "js/designer/move.js||js/designer/move.js": [
          "File: js/designer/move.js -> js/designer/move.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:     saveValueInConfig('full_screen', value_sent);",
          "550: }",
          "552: function Add_Other_db_tables () {",
          "553:     var button_options = {};",
          "554:     button_options[PMA_messages.strGo] = function () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "552: function addTableToTablesList(index, table_dom) {",
          "553:     var db = $(table_dom).find('.small_tab_pref').attr('db');",
          "554:     var table = $(table_dom).find('.small_tab_pref').attr('table_name_small');",
          "555:     var db_encoded = encodeURI(db);",
          "556:     var table_encoded = encodeURI(table);",
          "557:     var $new_table_line = $('<tr>' +",
          "558:         '    <td title=\"' + PMA_messages.strStructure + '\"' +",
          "559:         '        width=\"1px\"' +",
          "560:         '        class=\"L_butt2_1\">' +",
          "561:         '        <img alt=\"\"' +",
          "562:         '            db=\"' + db + '\"' +",
          "563:         '            table_name=\"' + table + '\"' +",
          "564:         '            class=\"scroll_tab_struct\"' +",
          "565:         '            src=\"' + pmaThemeImage + 'designer/exec.png\"/>' +",
          "566:         '    </td>' +",
          "567:         '    <td width=\"1px\">' +",
          "568:         '        <input class=\"scroll_tab_checkbox\"' +",
          "569:         '            title=\"' + PMA_messages.strHide + '\"' +",
          "570:         '            id=\"check_vis_' + encodeURI(db) + '.' + table_encoded + '\"' +",
          "571:         '            style=\"margin:0;\"' +",
          "572:         '            type=\"checkbox\"' +",
          "573:         '            value=\"' + db_encoded + '.' + table_encoded + '\"' +",
          "574:         '            checked=\"checked\"' +",
          "575:         '            />' +",
          "576:         '    </td>' +",
          "577:         '    <td class=\"designer_Tabs\"' +",
          "578:         '        designer_url_table_name=\"' + db_encoded + '.' + table_encoded + '\">' + db + '.' + table + '</td>' +",
          "579:         '</tr>');",
          "580:     $('#id_scroll_tab table').first().append($new_table_line);",
          "581:     $($new_table_line).find('.scroll_tab_struct').click(function () {",
          "582:         Start_tab_upd(db, table);",
          "583:     });",
          "584:     $($new_table_line).on('click', '.designer_Tabs2,.designer_Tabs', function () {",
          "585:         Select_tab($(this).attr('designer_url_table_name'));",
          "586:     });",
          "587:     $($new_table_line).find('.scroll_tab_checkbox').click(function () {",
          "588:         VisibleTab(this,$(this).val());",
          "589:     });",
          "590:     var $tables_counter = $('#tables_counter');",
          "591:     $tables_counter.text(parseInt($tables_counter.text(), 10) + 1);",
          "592: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "565:             $new_table_dom.find('a').first().remove();",
          "566:             $('#container-form').append($new_table_dom);",
          "567:             enableTableEvents(null, $new_table_dom);",
          "568:         });",
          "569:         $(this).dialog('close');",
          "570:     };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "610:             addTableToTablesList(null, $new_table_dom);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2092:         No_have_constr(this);",
          "2093:         return false;",
          "2094:     });",
          "2105:     $('.designer_tab').each(enableTableEvents);",
          "2107:     $('.tab_zag_noquery').mouseover(function () {",
          "2108:         Table_onover($(this).attr('table_name'),0, $(this).attr('query_set'));",
          "",
          "[Removed Lines]",
          "2095:     $('.scroll_tab_struct').click(function () {",
          "2096:         Start_tab_upd($(this).attr('db'), $(this).attr('table_name'));",
          "2097:     });",
          "2098:     $('.scroll_tab_checkbox').click(function () {",
          "2099:         VisibleTab(this,$(this).val());",
          "2100:     });",
          "2101:     $('#id_scroll_tab').find('tr').on('click', '.designer_Tabs2,.designer_Tabs', function () {",
          "2102:         Select_tab($(this).attr('designer_url_table_name'));",
          "2103:     });",
          "",
          "[Added Lines]",
          "2140:     $('.designer_tab').each(addTableToTablesList);",
          "",
          "---------------"
        ],
        "js/messages.php||js/messages.php": [
          "File: js/messages.php -> js/messages.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "751: $js_messages['strU2FTimeout'] = __('Timed out waiting for security key activation.');",
          "752: $js_messages['strU2FError'] = __('Failed security key activation (%s).');",
          "754: echo \"var PMA_messages = new Array();\\n\";",
          "755: foreach ($js_messages as $name => $js_message) {",
          "756:     Sanitize::printJsValue(\"PMA_messages['\" . $name . \"']\", $js_message);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755: $js_messages['strHide'] = __('Hide');",
          "756: $js_messages['strStructure'] = __('Structure');",
          "",
          "---------------"
        ],
        "libraries/classes/Database/Designer.php||libraries/classes/Database/Designer.php": [
          "File: libraries/classes/Database/Designer.php -> libraries/classes/Database/Designer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:     {",
          "295:         return Template::get('database/designer/table_list')->render([",
          "299:             'theme' => $GLOBALS['PMA_Theme'],",
          "300:             'table_names' => $GLOBALS['designer']['TABLE_NAME'],",
          "304:         ]);",
          "305:     }",
          "",
          "[Removed Lines]",
          "293:     public function getHtmlTableList(array $tab_pos, $display_page)",
          "296:             'db' => $GLOBALS['db'],",
          "297:             'tab_pos' => $tab_pos,",
          "298:             'display_page' => $display_page,",
          "301:             'table_names_url' => $GLOBALS['designer_url']['TABLE_NAME'],",
          "302:             'table_names_small_url' => $GLOBALS['designer_url']['TABLE_NAME_SMALL'],",
          "303:             'table_names_out' => $GLOBALS['designer_out']['TABLE_NAME'],",
          "",
          "[Added Lines]",
          "290:     public function getHtmlTableList()",
          "",
          "---------------"
        ],
        "templates/database/designer/table_list.twig||templates/database/designer/table_list.twig": [
          "File: templates/database/designer/table_list.twig -> templates/database/designer/table_list.twig",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:         </a>",
          "19:     </div>",
          "20:     <div id=\"id_scroll_tab\" class=\"scroll_tab\">",
          "53:     </div>",
          "54:     {# end id_scroll_tab #}",
          "55:     <div class=\"center\">",
          "57:     </div>",
          "58:     <div id=\"layer_menu_sizer\">",
          "59:         <div class=\"floatleft\">",
          "",
          "[Removed Lines]",
          "21:         <table width=\"100%\" style=\"padding-left: 3px;\">",
          "22:             {% for i in 0..table_names|length - 1 %}",
          "23:                 <tr>",
          "24:                     <td title=\"{% trans 'Structure' %}\"",
          "25:                         width=\"1px\"",
          "26:                         class=\"L_butt2_1\">",
          "27:                         <img alt=\"\"",
          "28:                             db=\"{{ db }}\"",
          "29:                             table_name=\"{{ table_names_small_url[i] }}\"",
          "30:                             class=\"scroll_tab_struct\"",
          "31:                             src=\"{{ theme.getImgPath('designer/exec.png') }}\"/>",
          "32:                     </td>",
          "33:                     <td width=\"1px\">",
          "34:                         <input class=\"scroll_tab_checkbox\"",
          "35:                             title=\"{% trans 'Hide' %}\"",
          "36:                             id=\"check_vis_{{ table_names_url[i]|url_encode }}\"",
          "37:                             style=\"margin:0;\"",
          "38:                             type=\"checkbox\"",
          "39:                             value=\"{{ table_names_url[i]|url_encode }}\"",
          "40:                             {% if (tab_pos[table_names[i]] is defined",
          "41:                                 and tab_pos[table_names[i]]['H'])",
          "42:                                 or display_page == -1 -%}",
          "43:                                 checked=\"checked\"",
          "44:                             {%- endif %} />",
          "45:                     </td>",
          "46:                     <td class=\"designer_Tabs\"",
          "47:                         designer_url_table_name=\"{{ table_names_url[i]|url_encode }}\">",
          "48:                         {{ table_names_out[i]|raw }}",
          "49:                     </td>",
          "50:                 </tr>",
          "51:             {% endfor %}",
          "52:         </table>",
          "56:         {% trans 'Number of tables:' %} {{ table_names|length }}",
          "",
          "[Added Lines]",
          "21:         <table width=\"100%\" style=\"padding-left: 3px;\"></table>",
          "25:         {% trans 'Number of tables:' %} <span id=\"tables_counter\">0</span>",
          "",
          "---------------"
        ]
      }
    }
  ]
}