{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
      "candidate_info": {
        "commit_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/misc1.test"
        ],
        "message": "Do not set the Cursor.seekOp test variable in the OP_NotExists opcode. This is a change to test logic only and does not affect deliverable builds.\n\nFossilOrigin-Name: 98f343077887c4d3fc2ca3bbc7f20c80ec37b0e521d70af9c986ab80bb2c7903",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/misc1.test||test/misc1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 16fff05347f42fe9fa0f3150290b98b59a9bb921e49dc07ca397aa1de7a7e17d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4342:   pC = p->apCsr[pOp->p1];",
          "4343:   assert( pC!=0 );",
          "4344: #ifdef SQLITE_DEBUG",
          "4346: #endif",
          "4347:   assert( pC->isTable );",
          "4348:   assert( pC->eCurType==CURTYPE_BTREE );",
          "",
          "[Removed Lines]",
          "4345:   pC->seekOp = OP_SeekRowid;",
          "",
          "[Added Lines]",
          "4345:   if( pOp->opcode==OP_SeekRowid ) pC->seekOp = OP_SeekRowid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5250:   assert( pOp->opcode!=OP_Next",
          "5251:        || pC->seekOp==OP_SeekGT || pC->seekOp==OP_SeekGE",
          "5252:        || pC->seekOp==OP_Rewind || pC->seekOp==OP_Found",
          "5254:   assert( pOp->opcode!=OP_Prev",
          "5255:        || pC->seekOp==OP_SeekLT || pC->seekOp==OP_SeekLE",
          "5256:        || pC->seekOp==OP_Last",
          "",
          "[Removed Lines]",
          "5253:        || pC->seekOp==OP_NullRow);",
          "",
          "[Added Lines]",
          "5253:        || pC->seekOp==OP_NullRow|| pC->seekOp==OP_SeekRowid);",
          "",
          "---------------"
        ],
        "test/misc1.test||test/misc1.test": [
          "File: test/misc1.test -> test/misc1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:   SELECT a,b,c FROM dup1;",
          "745: } {10 11 12}",
          "748: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747: # 2018-12-20",
          "748: #",
          "749: # The Cursor.seekOp debugging value set incorrectly",
          "750: # in OP_NotExists.",
          "751: #",
          "752: sqlite3 db :memory:",
          "753: do_execsql_test misc1-28.0 {",
          "754:   CREATE TABLE t1(x);",
          "755:   CREATE UNIQUE INDEX t1x ON t1(x) WHERE x=1;",
          "756:   INSERT OR ABORT INTO t1 DEFAULT VALUES;",
          "757:   UPDATE OR REPLACE t1 SET x = 1;",
          "758:   PRAGMA integrity_check;",
          "759:   SELECT * FROM t1;",
          "760: } {ok 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
      "candidate_info": {
        "commit_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/546738f855d8c7e01c1d04b287040938ffeed81c",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/nulls1.test"
        ],
        "message": "Further tests for the special null-handling on this branch.\n\nFossilOrigin-Name: 0dbbb51f4d39cafb01d625d65c12dcb232a9c1da7ed5a9397bf55cfea1b980d2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09d660ecde723fb30f3bb3684bbb7f95825d78da6a6f33ddf57846054cd563e0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:   `--SEARCH TABLE t4 USING INDEX t4ab (a=?)",
          "202: }",
          "204: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: #-------------------------------------------------------------------------",
          "205: #",
          "206: do_execsql_test 6.0 {",
          "207:   CREATE TABLE t5(a, b, c);",
          "208:   WITH s(i) AS (",
          "209:     VALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<200",
          "210:   )",
          "211:   INSERT INTO t5 SELECT i%2, CASE WHEN (i%10)==0 THEN NULL ELSE i END, i FROM s;",
          "212: }",
          "214: set res1 [db eval { SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c }]",
          "215: set res2 [db eval {",
          "216:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "217: }]",
          "219: do_execsql_test 6.1.1 {",
          "220:   CREATE INDEX t5ab ON t5(a, b, c);",
          "221:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "222: } $res1",
          "223: do_eqp_test 6.1.2 {",
          "224:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "228: }",
          "229: do_execsql_test 6.2.1 {",
          "230:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "231: } $res2",
          "232: do_eqp_test 6.2.2 {",
          "233:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "234: } {",
          "235:   QUERY PLAN",
          "236:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "237: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd6bf04bba8035836e8f92771d277a4e868c6299",
      "candidate_info": {
        "commit_hash": "fd6bf04bba8035836e8f92771d277a4e868c6299",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fd6bf04bba8035836e8f92771d277a4e868c6299",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Remove a reachable NEVER() in FTS3.\n\nFossilOrigin-Name: 8bd75bf636f72f32d66c6c38e1918f27daf2f13290f00a001f41d50838bbda47",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3851:     nPrefix = fts3PrefixCompress(pNode->key.a, pNode->key.n, zTerm, nTerm);",
          "3852:     nSuffix = nTerm - nPrefix;",
          "3854:     nSpace  = sqlite3Fts3VarintLen(nPrefix);",
          "3855:     nSpace += sqlite3Fts3VarintLen(nSuffix) + nSuffix;",
          "",
          "[Removed Lines]",
          "3853:     if( NEVER(nSuffix<=0) ) return FTS_CORRUPT_VTAB;",
          "",
          "[Added Lines]",
          "3853:     if(nSuffix<=0 ) return FTS_CORRUPT_VTAB;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 51525f9c3235967bc00a090e84c70a6400698c897aa4742e817121c725b8c99d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
      "candidate_info": {
        "commit_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/recover.test"
        ],
        "message": "Fix an incompatibility with auto-vacuum mode in new test script recover.test.\n\nFossilOrigin-Name: 36dd5b0804797a35d0dc596b6ca4f71813a155c5a470237ab6e3d1bcd9ccc6be",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/recover.test||test/recover.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 07e527d781838412b2a434e64baaa49cbf7410a51c7393f54adc7b8eaffd5229",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recover.test||test/recover.test": [
          "File: test/recover.test -> test/recover.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "91: #-------------------------------------------------------------------------",
          "92: reset_db",
          "93: do_execsql_test 2.1.0 {",
          "94:   CREATE TABLE t1(a, b, c, PRIMARY KEY(b, c)) WITHOUT ROWID;",
          "95:   INSERT INTO t1 VALUES(1, 2, 3);",
          "96:   INSERT INTO t1 VALUES(4, 5, 6);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:   PRAGMA auto_vacuum = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
      "candidate_info": {
        "commit_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "Remove some stale references to the addopcodes.tcl script from documentation.\n\nFossilOrigin-Name: c0381b0bc90aa3c2415c4b3ac338cfe6d308bb5d4247bc6f2b6e919f549c254c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d272819298083ebbde57962a2938925b1aaa1caf03e48bb3ea26ad91e0461d84",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y"
        ]
      }
    }
  ]
}