{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4cbd847a910091a2da56b0bc0a631b240ff52784",
      "candidate_info": {
        "commit_hash": "4cbd847a910091a2da56b0bc0a631b240ff52784",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4cbd847a910091a2da56b0bc0a631b240ff52784",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "src/vdbemem.c",
          "test/fuzzdata8.db"
        ],
        "message": "Fix the OP_Move opcode so that it correctly manages dependency tracking. This change impacts debugging builds only.\n\nFossilOrigin-Name: 5377add4b8af8c52d0a32f5273835ac6bdc42cfb2a95ffcb335b987437a91aa6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9886cb4b7987f720aa9d701222ab0987caa0ab8c5d216cb6e523c4a45366dfe5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1371:     memAboutToChange(p, pOut);",
          "1372:     sqlite3VdbeMemMove(pOut, pIn1);",
          "1373: #ifdef SQLITE_DEBUG",
          "1376:     }",
          "1377: #endif",
          "1378:     Deephemeralize(pOut);",
          "",
          "[Removed Lines]",
          "1374:     if( pOut->pScopyFrom>=&aMem[p1] && pOut->pScopyFrom<pOut ){",
          "1375:       pOut->pScopyFrom += pOp->p2 - p1;",
          "",
          "[Added Lines]",
          "1374:     pIn1->pScopyFrom = 0;",
          "1375:     { int i;",
          "1376:       for(i=1; i<p->nMem; i++){",
          "1377:         if( aMem[i].pScopyFrom==pIn1 ){",
          "1378:           aMem[i].pScopyFrom = pOut;",
          "1379:         }",
          "1380:       }",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "954: void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){",
          "955:   int i;",
          "956:   Mem *pX;",
          "958:     if( pX->pScopyFrom==pMem ){",
          "959:       if( pVdbe->db->flags & SQLITE_VdbeTrace ){",
          "960:         sqlite3DebugPrintf(\"Invalidate R[%d] due to change in R[%d]\\n\",",
          "",
          "[Removed Lines]",
          "957:   for(i=0, pX=pVdbe->aMem; i<pVdbe->nMem; i++, pX++){",
          "",
          "[Added Lines]",
          "957:   for(i=1, pX=pVdbe->aMem+1; i<pVdbe->nMem; i++, pX++){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6b0464e3662ba06a2dafc39df6826a9b804e9f7",
      "candidate_info": {
        "commit_hash": "f6b0464e3662ba06a2dafc39df6826a9b804e9f7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f6b0464e3662ba06a2dafc39df6826a9b804e9f7",
        "files": [
          "ext/fts5/fts5_hash.c",
          "ext/fts5/fts5_index.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix some fts5 problems with signed integer overflow causing segfaults in -ftrapv builds.\n\nFossilOrigin-Name: 7e17c2f4b7dc9b563d0b4da949bb134dc7c4fc9c86ce03891432a884ca6409d5",
        "before_after_code_files": [
          "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c": [
          "File: ext/fts5/fts5_hash.c -> ext/fts5/fts5_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:   if( iRowid!=p->iRowid ){",
          "341:     fts5HashAddPoslistSize(pHash, p, 0);",
          "343:     p->iRowid = iRowid;",
          "344:     bNew = 1;",
          "345:     p->iSzPoslist = p->nData;",
          "",
          "[Removed Lines]",
          "342:     p->nData += sqlite3Fts5PutVarint(&pPtr[p->nData], iRowid - p->iRowid);",
          "",
          "[Added Lines]",
          "341:     u64 iDiff = (u64)iRowid - (u64)p->iRowid;",
          "343:     p->nData += sqlite3Fts5PutVarint(&pPtr[p->nData], iDiff);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1755:   ASSERT_SZLEAF_OK(pIter->pLeaf);",
          "1756:   while( 1 ){",
          "1759:     if( eDetail==FTS5_DETAIL_NONE ){",
          "",
          "[Removed Lines]",
          "1757:     i64 iDelta = 0;",
          "",
          "[Added Lines]",
          "1757:     u64 iDelta = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1769:       i += nPos;",
          "1770:     }",
          "1771:     if( i>=n ) break;",
          "1773:     pIter->iRowid += iDelta;",
          "",
          "[Removed Lines]",
          "1772:     i += fts5GetVarint(&a[i], (u64*)&iDelta);",
          "",
          "[Added Lines]",
          "1772:     i += fts5GetVarint(&a[i], &iDelta);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1868:   if( pIter->iRowidOffset>0 ){",
          "1869:     u8 *a = pIter->pLeaf->p;",
          "1870:     int iOff;",
          "1873:     pIter->iRowidOffset--;",
          "1874:     pIter->iLeafOffset = pIter->aRowidOffset[pIter->iRowidOffset];",
          "",
          "[Removed Lines]",
          "1871:     i64 iDelta;",
          "",
          "[Added Lines]",
          "1871:     u64 iDelta;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1877:     if( p->pConfig->eDetail!=FTS5_DETAIL_NONE ){",
          "1878:       iOff += pIter->nPos;",
          "1879:     }",
          "1881:     pIter->iRowid -= iDelta;",
          "1882:   }else{",
          "1883:     fts5SegIterReverseNewPage(p, pIter);",
          "",
          "[Removed Lines]",
          "1880:     fts5GetVarint(&a[iOff], (u64*)&iDelta);",
          "",
          "[Added Lines]",
          "1880:     fts5GetVarint(&a[iOff], &iDelta);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ce97b56d63d6e03b909e049a0a62251d98c7bf643448193a28b42a5871899387",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec9a25c7c701aaab2040ae3f500d9008de011c90",
      "candidate_info": {
        "commit_hash": "ec9a25c7c701aaab2040ae3f500d9008de011c90",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ec9a25c7c701aaab2040ae3f500d9008de011c90",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/loadext.c"
        ],
        "message": "Fix an issue with check-in [bc3bf7c6681a96bc] when compiling on Windows.\n\nFossilOrigin-Name: 57b16d8ca3d1ede3b411389256bec6686433aae716f47bca309ee7c8e5fe3128",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/loadext.c||src/loadext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bc3bf7c6681a96bc18a1ed02f0ccced4731d5dab45f60c347dd1841706e6b62a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/loadext.c||src/loadext.c": [
          "File: src/loadext.c -> src/loadext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "582:     }",
          "583:     memcpy(zAltEntry, \"sqlite3_\", 8);",
          "584: #if SQLITE_OS_WIN",
          "586: #else",
          "587:     for(iFile=ncFile-1; iFile>=0 && zFile[iFile]!='/'; iFile--){}",
          "588: #endif",
          "",
          "[Removed Lines]",
          "585:     for(iFile=ncFile-1; iFile>=0 && ((c=zFile[iFile]!='/')||c=='\\\\'); iFile--){}",
          "",
          "[Added Lines]",
          "585:     for(iFile=ncFile-1; iFile>=0 && ((c=zFile[iFile]!='/')&&c!='\\\\'); iFile--){}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f71eb2091fdb165ab97f7e50cb8cbdc6d39a0a86",
      "candidate_info": {
        "commit_hash": "f71eb2091fdb165ab97f7e50cb8cbdc6d39a0a86",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f71eb2091fdb165ab97f7e50cb8cbdc6d39a0a86",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c"
        ],
        "message": "Do not use memcpy() of zero bytes when initializing a pager.  This avoids a warning.\n\nFossilOrigin-Name: cca437788e092b21ed1784dd94d4b1c7204ff1717538d276a10880d1345904bd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3c63f68e12af36e9fd9a3dd4daec9402e75e80bcd819d39c0215a427fd0d7803",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4912:   pPtr[0] = '\\003'; pPtr[1] = 0;          pPtr += 2;",
          "4913:   pPager->zFilename = (char*)pPtr;",
          "4917:   }",
          "4920:   if( nPathname ) sqlite3DbFree(0, zPathname);",
          "4921:   pPager->pVfs = pVfs;",
          "",
          "[Removed Lines]",
          "4914:   memcpy(pPtr, zPathname, nPathname);     pPtr += nPathname + 1;",
          "4915:   if( zUri ){",
          "",
          "[Added Lines]",
          "4914:   if( nPathname>0 ){",
          "4915:     memcpy(pPtr, zPathname, nPathname);   pPtr += nPathname + 1;",
          "4916:     if( zUri ){",
          "4918:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6664744c01005a3e6024351b14a2437e4f2fd0a",
      "candidate_info": {
        "commit_hash": "b6664744c01005a3e6024351b14a2437e4f2fd0a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b6664744c01005a3e6024351b14a2437e4f2fd0a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Fix the build for when SQLITE_VDBE_COVERAGE is used.\n\nFossilOrigin-Name: 084381649edf374ccc5664f136055109a31d4c3a19c4ae2ee5275f630507a2a3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bcf876e67e75f6709f2b25683a3952bbbb87c672bb9d7af456feebc0ab9f6c31",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c"
        ]
      }
    }
  ]
}