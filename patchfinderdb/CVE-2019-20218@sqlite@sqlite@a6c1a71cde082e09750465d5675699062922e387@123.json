{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7a1d7c39682f332bd3660ea6a4ae079b9d0a8041",
      "candidate_info": {
        "commit_hash": "7a1d7c39682f332bd3660ea6a4ae079b9d0a8041",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7a1d7c39682f332bd3660ea6a4ae079b9d0a8041",
        "files": [
          "ext/fts5/test/fts5integrity.test",
          "manifest",
          "manifest.uuid",
          "src/pager.c",
          "test/pragma3.test"
        ],
        "message": "Fix \"PRAGMA data_version\" so that it works the same way with locking_mode=PERSIST and journal_mode=PERSIST configured. Fix for 7a458c2a5f.\n\nFossilOrigin-Name: 45748e2db028ffbda5d3e747493721a5a89af3fbc06823081a2f27f570e40e73",
        "before_after_code_files": [
          "ext/fts5/test/fts5integrity.test||ext/fts5/test/fts5integrity.test",
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c",
          "test/pragma3.test||test/pragma3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/test/fts5integrity.test||ext/fts5/test/fts5integrity.test": [
          "File: ext/fts5/test/fts5integrity.test -> ext/fts5/test/fts5integrity.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "211: }",
          "213: #-------------------------------------------------------------------------",
          "214: reset_db",
          "215: do_execsql_test 7.0 {",
          "216:   PRAGMA encoding = 'UTF-16';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "235: }",
          "237: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238: #-------------------------------------------------------------------------",
          "239: # Ticket 7a458c2a5f4",
          "240: #",
          "241: reset_db",
          "242: do_execsql_test 8.0 {",
          "243:   PRAGMA locking_mode = EXCLUSIVE;",
          "244:   PRAGMA journal_mode = PERSIST;",
          "245:   CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
          "246: } {exclusive persist}",
          "247: do_execsql_test 8.1 {",
          "248:   PRAGMA data_version",
          "249: } {1}",
          "250: do_execsql_test 8.2 {",
          "251:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "252:   PRAGMA data_version;",
          "253: } {1}",
          "254: do_execsql_test 8.1 {",
          "255:   INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2);",
          "256: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 70815e273f511481c310dc33b3b49079901d891078fad49b663fbce06c77ecc2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6629:   if( NEVER(pPager->errCode) ) return pPager->errCode;",
          "6631:   assert( pPager->eState==PAGER_WRITER_LOCKED",
          "6632:        || pPager->eState==PAGER_WRITER_FINISHED",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6630:   pPager->iDataVersion++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6655:   }",
          "6657:   PAGERTRACE((\"COMMIT %d\\n\", PAGERID(pPager)));",
          "6659:   rc = pager_end_transaction(pPager, pPager->setMaster, 1);",
          "6660:   return pager_error(pPager, rc);",
          "6661: }",
          "",
          "[Removed Lines]",
          "6658:   pPager->iDataVersion++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/pragma3.test||test/pragma3.test": [
          "File: test/pragma3.test -> test/pragma3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "255: }",
          "256: }",
          "258: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258: #-------------------------------------------------------------------------",
          "259: # Check that empty write transactions do not cause the return of \"PRAGMA",
          "260: # data_version\" to be decremented with journal_mode=PERSIST and",
          "261: # locking_mode=EXCLUSIVE",
          "262: #",
          "263: foreach {tn sql} {",
          "264:   A {",
          "265:   }",
          "266:   B {",
          "267:     PRAGMA journal_mode = PERSIST;",
          "268:     PRAGMA locking_mode = EXCLUSIVE;",
          "269:   }",
          "270: } {",
          "271:   reset_db",
          "272:   execsql $sql",
          "274:   do_execsql_test pragma3-510$tn {",
          "275:     CREATE TABLE t1(x, y);",
          "276:     INSERT INTO t1 VALUES(1, 2);",
          "277:     PRAGMA data_version;",
          "278:   } {1}",
          "280:   do_execsql_test pragma3-520$tn {",
          "281:     BEGIN EXCLUSIVE;",
          "282:     COMMIT;",
          "283:     PRAGMA data_version;",
          "284:   } {1}",
          "285: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51a75aaa76c300b3826e434013ddaf73c49e57c1",
      "candidate_info": {
        "commit_hash": "51a75aaa76c300b3826e434013ddaf73c49e57c1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/51a75aaa76c300b3826e434013ddaf73c49e57c1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/windowB.test"
        ],
        "message": "Fix a problem with using json1 window functions with an EXCLUDE clause.\n\nFossilOrigin-Name: 4a1978814da41608a16f6953bd575c97d587a34bd80b7ac0e619d62bfdc903d2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/windowB.test||test/windowB.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 807975c76b36347f02aa0ce9661d608adbffe1f7e77c15f8da677e47e1187153",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1481:       int addrIf = 0;",
          "1482:       if( pWin->pFilter ){",
          "1483:         int regTmp;",
          "1486:         regTmp = sqlite3GetTempReg(pParse);",
          "1487:         sqlite3VdbeAddOp3(v, OP_Column, csr, pWin->iArgCol+nArg,regTmp);",
          "1488:         addrIf = sqlite3VdbeAddOp3(v, OP_IfNot, regTmp, 0, 1);",
          "",
          "[Removed Lines]",
          "1484:         assert( nArg==0 || nArg==pWin->pOwner->x.pList->nExpr );",
          "1485:         assert( nArg || pWin->pOwner->x.pList==0 );",
          "",
          "[Added Lines]",
          "1484:         assert( pWin->bExprArgs || !nArg ||nArg==pWin->pOwner->x.pList->nExpr );",
          "1485:         assert( pWin->bExprArgs || nArg  ||pWin->pOwner->x.pList==0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1490:         sqlite3ReleaseTempReg(pParse, regTmp);",
          "1491:       }",
          "1492:       if( pWin->bExprArgs ){",
          "1493:         nArg = pWin->pOwner->x.pList->nExpr;",
          "1494:         regArg = sqlite3GetTempRange(pParse, nArg);",
          "1495:         sqlite3ExprCodeExprList(pParse, pWin->pOwner->x.pList, regArg, 0, 0);",
          "1496:       }",
          "1497:       if( pFunc->funcFlags & SQLITE_FUNC_NEEDCOLL ){",
          "1498:         CollSeq *pColl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1493:         int iStart = sqlite3VdbeCurrentAddr(v);",
          "1494:         VdbeOp *pOp, *pEnd;",
          "1500:         pEnd = sqlite3VdbeGetOp(v, -1);",
          "1501:         for(pOp=sqlite3VdbeGetOp(v, iStart); pOp<=pEnd; pOp++){",
          "1502:           if( pOp->opcode==OP_Column && pOp->p1==pWin->iEphCsr ){",
          "1503:             pOp->p1 = csr;",
          "1504:           }",
          "1505:         }",
          "",
          "---------------"
        ],
        "test/windowB.test||test/windowB.test": [
          "File: test/windowB.test -> test/windowB.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: }",
          "82: #-------------------------------------------------------------------------",
          "90: ifcapable json1 {",
          "91:   do_execsql_test 3.1 {",
          "92:     SELECT json_group_array(json(j)) FROM testjson;",
          "93:   } {",
          "95:   }",
          "97:   do_execsql_test 3.2 {",
          "98:     SELECT json_group_array(json(j)) OVER (ORDER BY id) FROM testjson;",
          "99:   } {",
          "100:     {[{\"a\":1}]}",
          "101:     {[{\"a\":1},{\"b\":2}]}",
          "102:   }",
          "103: }",
          "",
          "[Removed Lines]",
          "83: reset_db",
          "84: do_execsql_test 3.0 {",
          "85:   CREATE TABLE testjson(id INTEGER PRIMARY KEY, j TEXT);",
          "86:   INSERT INTO testjson VALUES(1, '{\"a\":1}');",
          "87:   INSERT INTO testjson VALUES(2, '{\"b\":2}');",
          "88: }",
          "94:     {[{\"a\":1},{\"b\":2}]}",
          "",
          "[Added Lines]",
          "84:   reset_db",
          "85:   do_execsql_test 3.0 {",
          "86:     CREATE TABLE testjson(id INTEGER PRIMARY KEY, j TEXT);",
          "87:     INSERT INTO testjson VALUES(1, '{\"a\":1}');",
          "88:     INSERT INTO testjson VALUES(2, '{\"b\":2}');",
          "89:     INSERT INTO testjson VALUES(3, '{\"c\":3}');",
          "90:     INSERT INTO testjson VALUES(4, '{\"d\":4}');",
          "91:   }",
          "96:     {[{\"a\":1},{\"b\":2},{\"c\":3},{\"d\":4}]}",
          "104:     {[{\"a\":1},{\"b\":2},{\"c\":3}]}",
          "105:     {[{\"a\":1},{\"b\":2},{\"c\":3},{\"d\":4}]}",
          "106:   }",
          "108:   do_execsql_test 3.3 {",
          "109:     SELECT json_group_array(json(j)) OVER (",
          "110:       ORDER BY id RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE TIES",
          "111:     ) FROM testjson;",
          "112:   } {",
          "113:     {[{\"a\":1}]}",
          "114:     {[{\"a\":1},{\"b\":2}]}",
          "115:     {[{\"a\":1},{\"b\":2},{\"c\":3}]}",
          "116:     {[{\"a\":1},{\"b\":2},{\"c\":3},{\"d\":4}]}",
          "117:   }",
          "119:   do_execsql_test 3.4 {",
          "120:     SELECT json_group_array(json(j)) OVER (",
          "121:       ORDER BY id ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING",
          "122:     ) FROM testjson;",
          "123:   } {",
          "124:     {[{\"a\":1},{\"b\":2}]}",
          "125:     {[{\"a\":1},{\"b\":2},{\"c\":3}]}",
          "126:     {[{\"b\":2},{\"c\":3},{\"d\":4}]}",
          "127:     {[{\"c\":3},{\"d\":4}]}",
          "128:   }",
          "130:   do_execsql_test 3.5 {",
          "131:     SELECT json_group_array(json(j)) OVER (",
          "132:       ORDER BY id ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING",
          "133:     ) FROM testjson;",
          "134:   } {",
          "135:     {[]}",
          "136:     {[{\"a\":1}]}",
          "137:     {[{\"a\":1},{\"b\":2}]}",
          "138:     {[{\"b\":2},{\"c\":3}]}",
          "139:   }",
          "141:   if 0 {",
          "143:   do_execsql_test 3.5 {",
          "144:     SELECT json_group_array(json(j)) OVER (",
          "145:       ORDER BY id ROWS BETWEEN 1 FOLLOWING AND 2 FOLLOWING",
          "146:     ) FROM testjson;",
          "147:   } {",
          "148:     {[]}",
          "149:     {[{\"a\":1}]}",
          "150:     {[{\"a\":1},{\"b\":2}]}",
          "151:     {[{\"b\":2},{\"c\":3}]}",
          "152:   }",
          "154:   explain_i {",
          "155:     SELECT json_group_array(json(j)) FILTER (WHERE id!=2) OVER (",
          "156:       ORDER BY id ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING",
          "157:     ) FROM testjson;",
          "158:   }",
          "159:   do_execsql_test 3.7 {",
          "160:   PRAGMA vdbe_trace = 1;",
          "161:     SELECT json_group_array(json(j)) FILTER (WHERE id!=2) OVER (",
          "162:       ORDER BY id ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING",
          "163:     ) FROM testjson;",
          "164:   } {",
          "165:     {[]}",
          "166:     {[{\"a\":1}]}",
          "167:     {[{\"a\":1}]}",
          "168:     {[{\"c\":3}]}",
          "169:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5748a550244deea5b0a0e1c09b240f85b7a0299",
      "candidate_info": {
        "commit_hash": "e5748a550244deea5b0a0e1c09b240f85b7a0299",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e5748a550244deea5b0a0e1c09b240f85b7a0299",
        "files": [
          "ext/rtree/rtree.c",
          "ext/rtree/rtree1.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Further enhancements to RTREE, following up to check-in [f898d04cf272ef01] so that constraints are allowed to be compared to strings that look like numbers.  Ticket [aa573a787b8f1fdf]\n\nFossilOrigin-Name: 32772dfd50b602c049d8c30bc28cde60a18b7495a997d728081f689ff417c956",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "ext/rtree/rtree1.test||ext/rtree/rtree1.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:                 || (idxStr && (int)strlen(idxStr)==argc*2) );",
          "1856:         for(ii=0; ii<argc; ii++){",
          "1857:           RtreeConstraint *p = &pCsr->aConstraint[ii];",
          "1859:           p->op = idxStr[ii*2];",
          "1860:           p->iCoord = idxStr[ii*2+1]-'0';",
          "1861:           if( p->op>=RTREE_MATCH ){",
          "",
          "[Removed Lines]",
          "1858:           int eType = sqlite3_value_type(argv[ii]);",
          "",
          "[Added Lines]",
          "1858:           int eType = sqlite3_value_numeric_type(argv[ii]);",
          "",
          "---------------"
        ],
        "ext/rtree/rtree1.test||ext/rtree/rtree1.test": [
          "File: ext/rtree/rtree1.test -> ext/rtree/rtree1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "380: do_test rtree-8.1.5 { execsql { SELECT ii FROM t6 WHERE x1>5 } }   {}",
          "381: do_test rtree-8.1.6 { execsql { SELECT ii FROM t6 WHERE x1>''} }   {}",
          "382: do_test rtree-8.1.7 { execsql { SELECT ii FROM t6 WHERE x1>null}}  {}",
          "383: do_test rtree-8.2.2 { execsql { SELECT ii FROM t6 WHERE x1>=2 } }  {1 2}",
          "384: do_test rtree-8.2.3 { execsql { SELECT ii FROM t6 WHERE x1>=3 } }  {1 2}",
          "385: do_test rtree-8.2.4 { execsql { SELECT ii FROM t6 WHERE x1>=4 } }  {2}",
          "386: do_test rtree-8.2.5 { execsql { SELECT ii FROM t6 WHERE x1>=5 } }  {}",
          "387: do_test rtree-8.2.6 { execsql { SELECT ii FROM t6 WHERE x1>=''} }  {}",
          "388: do_test rtree-8.2.7 { execsql { SELECT ii FROM t6 WHERE x1>=null}} {}",
          "389: do_test rtree-8.3.2 { execsql { SELECT ii FROM t6 WHERE x1<2 } }   {}",
          "390: do_test rtree-8.3.3 { execsql { SELECT ii FROM t6 WHERE x1<3 } }   {}",
          "391: do_test rtree-8.3.4 { execsql { SELECT ii FROM t6 WHERE x1<4 } }   {1}",
          "392: do_test rtree-8.3.5 { execsql { SELECT ii FROM t6 WHERE x1<5 } }   {1 2}",
          "393: do_test rtree-8.3.6 { execsql { SELECT ii FROM t6 WHERE x1<''} }   {1 2}",
          "394: do_test rtree-8.3.7 { execsql { SELECT ii FROM t6 WHERE x1<null}}  {}",
          "395: do_test rtree-8.4.2 { execsql { SELECT ii FROM t6 WHERE x1<=2 } }  {}",
          "396: do_test rtree-8.4.3 { execsql { SELECT ii FROM t6 WHERE x1<=3 } }  {1}",
          "397: do_test rtree-8.4.4 { execsql { SELECT ii FROM t6 WHERE x1<=4 } }  {1 2}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383: do_test rtree-8.1.8 { execsql { SELECT ii FROM t6 WHERE x1>'2'} }   {1 2}",
          "384: do_test rtree-8.1.9 { execsql { SELECT ii FROM t6 WHERE x1>'3'} }   {2}",
          "391: do_test rtree-8.2.8 { execsql { SELECT ii FROM t6 WHERE x1>='4'} } {2}",
          "392: do_test rtree-8.2.9 { execsql { SELECT ii FROM t6 WHERE x1>='5'} } {}",
          "399: do_test rtree-8.3.8 { execsql { SELECT ii FROM t6 WHERE x1<'3'} }  {}",
          "400: do_test rtree-8.3.9 { execsql { SELECT ii FROM t6 WHERE x1<'4'} }  {1}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ebf897e861c19e214c57f1e73841b505182202cc8d7d39e24d5a1e5625e26b4a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "471e88f73255169ed00649f32ad92f4237044775",
      "candidate_info": {
        "commit_hash": "471e88f73255169ed00649f32ad92f4237044775",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/471e88f73255169ed00649f32ad92f4237044775",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a segfault in fts3 that could occur when processing corrupt fts records.\n\nFossilOrigin-Name: dff24c6c7a4e7623984b5bb24c2ff14fe079dc49a0ad048cbfc66f84c08875b0",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4560:   blobGrowBuffer(pNew, nNode, &rc);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4559:   if( nNode<1 ) return FTS_CORRUPT_VTAB;",
          "4560:   bLeaf = aNode[0]=='\\0';",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2da0eea02d128c37f2fbe764227ac526d3e993284516544adc0a216a035c5676",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4845: do_catchsql_test 27.6 {",
          "4846:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4847: } {0 {}}",
          "4849: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4849: #-------------------------------------------------------------------------",
          "4850: reset_db",
          "4851: do_test 28.0 {",
          "4852:   sqlite3 db {}",
          "4853:   db deserialize [decode_hexdb {",
          "4854: .open --hexdb",
          "4855: | size 28672 pagesize 4096 filename crash-159ac1ca51ed55.db",
          "4856: | page 1 offset 0",
          "4857: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4858: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "4859: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "4860: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "4861: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "4862: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "4863: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "4864: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "4865: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "4866: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "4867: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "4868: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "4869: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "4870: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "4871: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "4872: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "4873: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "4874: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "4875: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "4876: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "4877: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "4878: |   3760: 06 0f c7 00 08 00 10 00 00 66 04 07 17 23 23 01   .........f...##.",
          "4879: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "4880: |   3792: 64 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   dst1_segments.CR",
          "4881: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "4882: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "4883: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "4884: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "4885: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "4886: |   3888: 31 4f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1Ocontentt1_cont",
          "4887: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "4888: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "4889: |   3936: 63 69 64 20 49 4e 54 45 43 a5 52 20 50 52 39 4d   cid INTEC.R PR9M",
          "4890: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "4891: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "4892: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4893: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4894: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "4895: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "4896: | page 3 offset 8192",
          "4897: |      0: 0d 00 00 00 26 0b 48 00 00 00 00 00 00 00 00 00   ....&.H.........",
          "4898: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 72 7f 00   .........?%..r..",
          "4899: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "4900: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 55 42   4.0 20160609 DUB",
          "4901: |   2928: 55 47 20 45 4e 41 e4 7c 45 20 44 42 53 54 41 54   UG ENA.|E DBSTAT",
          "4902: |   2944: e4 46 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53   .FTAB ENABLE FTS",
          "4903: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "4904: |   2976: 41 42 1f 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   AB.E GEOPOLY ENA",
          "4905: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "4906: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "4907: |   3024: 42 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   BTREE MAX MEMORY",
          "4908: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4c 49 54 20 4c   =50000000 OLIT L",
          "4909: |   3056: 4f 41 43 20 45 58 54 45 4e 53 49 4f 4e 21 54 48   OAC EXTENSION!TH",
          "4910: |   3072: 52 45 41 44 53 41 46 45 3d 2f 18 24 05 00 25 0f   READSAFE=/.$..%.",
          "4911: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4912: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4913: |   3120: 44 53 41 4b 75 3d 30 58 4d 4f 43 41 53 45 17 22   DSAKu=0XMOCASE..",
          "4914: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 46 3d   ..%..THREADSAFF=",
          "4915: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4916: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 52 49 4f   IT LOAD EXTENRIO",
          "4917: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "4918: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4919: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4920: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4921: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4922: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "4923: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4924: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "4925: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "4926: |   3328: 0f 17 4d 42 b8 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MB. MEMORY=500",
          "4927: |   3344: 30 30 30 30 30 58 52 54 52 4a 4d 18 1b 05 00 25   00000XRTRJM....%",
          "4928: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4929: |   3376: 49 4e 41 52 59 18 1a 05 0d a5 0f 19 45 4e 41 42   INARY.......ENAB",
          "4930: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "4931: |   3408: 19 1c 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4932: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4933: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4934: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4935: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4936: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4937: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 14 05 01 25   MSYS5XRTRIM....%",
          "4938: |   3520: 0f 19 45 4e 12 42 4c 45 20 4a 53 4f 4e 31 58 42   ..EN.BLE JSON1XB",
          "4939: |   3536: 49 4e 41 52 59 18 14 05 00 25 09 d9 45 4e 41 42   INARY....%..ENAB",
          "4940: |   3552: 4c 45 20 4a 53 4f 3e 31 58 4e 4f 43 41 53 45 17   LE JSO>1XNOCASE.",
          "4941: |   3568: 13 05 00 25 0f 17 44 4e 40 42 4c 45 20 4a 53 4f   ...%..DN@BLE JSO",
          "4942: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 82 29 0f 19 45   N1XRTRIM....)..E",
          "4943: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4944: |   3616: 4e 41 52 59 1a 11 05 c9 29 e8 19 46 4e 41 42 4c   NARY....)..FNABL",
          "4945: |   3632: 48 c0 47 45 4f 50 4f 4c 59 58 4e 74 43 41 53 45   H.GEOPOLYXNtCASE",
          "4946: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4947: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "4948: |   3680: 0f 19 45 4e 41 42 4c 45 30 46 54 53 35 58 42 49   ..ENABLE0FTS5XBI",
          "4949: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4950: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0e 05   E FTS5XNOCASE...",
          "4951: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4952: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4953: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4954: |   3776: 04 ff 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "4955: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "4956: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "4957: |   3824: 09 05 00 31 0f 19 45 4e 42 42 4c 45 20 44 42 53   ...1..ENBBLE DBS",
          "4958: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "4959: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4960: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4961: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4962: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 4a 4d 11 06   TAT VTABXRTRJM..",
          "4963: |   3920: 05 f0 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4964: |   3936: 59 11 05 09 b0 17 0e 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4965: |   3952: 43 41 53 45 10 04 05 00 17 0f 16 44 45 42 55 47   CASE.......DEBUG",
          "4966: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4967: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4968: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "4969: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 4d 67   ...C..COMPILERMg",
          "4970: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4971: |   4048: 39 58 4e 4f 43 41 53 45 26 01 06 00 43 0f 17 43   9XNOCASE&...C..C",
          "4972: |   4064: 4f 4d 50 49 4b 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPIKER=gcc-5.4.",
          "4973: |   4080: 30 20 32 30 31 36 30 36 40 39 58 29 54 52 49 4d   0 201606@9X)TRIM",
          "4974: | page 4 offset 12288",
          "4975: |      0: 0d 00 10 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "4976: | page 5 offset 16384",
          "4977: |      0: 0d 00 00 00 02 0b a0 00 00 00 00 00 00 00 00 00   ................",
          "4978: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "4979: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "4980: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "4981: |   3024: 03 25 04 00 4d 07 30 30 30 30 30 30 30 03 25 1a   .%..M.0000000.%.",
          "4982: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "4983: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "4984: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "4985: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4986: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "4987: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "4988: |   3136: 06 65 6f 70 6f 6c 79 03 25 10 ff ff f5 6a 73 6f   .eopoly.%....jso",
          "4989: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "4990: |   3168: 00 03 6d 71 78 03 25 18 00 01 05 65 6e 6f 72 79   ..mqx.%....enory",
          "4991: |   3184: 03 25 19 00 03 04 ce 79 73 4d 03 25 15 00 00 04   .%.....ysM.%....",
          "4992: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "4993: |   3216: 25 17 00 00 0a 7f 08 72 65 61 64 73 61 66 65 03   %......readsafe.",
          "4994: |   3232: 25 0e 00 00 04 76 75 61 62 03 25 0b 00 86 50 01   %....vuab.%...P.",
          "4995: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "4996: |   3264: 12 01 06 00 01 06 00 01 06 00 1f 03 00 01 03 09   ................",
          "4997: |   3280: 51 03 00 00 09 32 30 31 36 30 36 30 39 09 01 07   Q....20160609...",
          "4998: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "4999: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 03 ff 01 04   ......5.........",
          "5000: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "5001: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "5002: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "5003: |   3376: 00 03 01 02 02 00 02 f1 02 02 00 03 01 02 02 00   ................",
          "5004: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "5005: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "5006: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 67   ler............g",
          "5007: |   3440: d2 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   .stat...........",
          "5008: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "5009: |   3472: 06 65 6e 6f 82 6c 65 3f 07 02 00 01 02 00 01 02   .eno.le?........",
          "5010: |   3488: b0 01 02 00 00 f2 00 11 02 00 01 02 00 01 02 00   ................",
          "5011: |   3504: 01 02 00 01 02 00 01 02 00 01 a6 00 01 02 00 01   ................",
          "5012: |   3520: 02 05 51 02 00 01 02 00 01 02 00 01 02 00 01 02   ..Q.............",
          "5013: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "5014: |   3552: 6e 09 1f 04 00 01 04 00 00 04 00 00 04 66 74 73   n............fts",
          "5015: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "5016: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "5017: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 73 6c 79 09   .........eopsly.",
          "5018: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "5019: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "5020: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "5021: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "5022: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "5023: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "5024: |   3712: 73 65 3c 02 01 02 02 00 03 01 12 02 00 03 01 02   se<.............",
          "5025: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "5026: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "5027: |   3760: 0f 71 02 02 00 03 01 02 02 00 03 6f 02 02 00 00   .q.........o....",
          "5028: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "5029: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "5030: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "5031: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "5032: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "5033: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "5034: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "5035: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "5036: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "5037: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "5038: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "5039: |   3952: 01 01 02 00 01 01 01 07 30 01 01 01 02 00 01 01   ........0.......",
          "5040: |   3968: 01 02 00 11 01 01 02 00 01 01 01 02 00 11 01 01   ................",
          "5041: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "5042: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "5043: |   4016: 01 01 01 01 ff 01 01 01 02 00 01 01 01 02 00 01   ................",
          "5044: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "5045: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "5046: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "5047: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "5048: | page 6 offset 20480",
          "5049: |      0: 0a 00 00 00 02 0f f5 00 00 00 00 00 00 00 00 00   ................",
          "5050: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "5051: | page 7 offset 24576",
          "5052: |      0: 0d 00 00 00 05 0f b8 00 0e f4 0f e9 10 d6 0f c7   ................",
          "5053: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "5054: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "5055: |   4048: 3d 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00   =1..............",
          "5056: | end crash-159ac1ca51ed55.db",
          "5057: }]} {}",
          "5059: do_catchsql_test 28.1 {",
          "5060:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "5061:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5062: } {0 {}}",
          "5064: do_catchsql_test 28.1 {",
          "5065:   UPDATE t1 SET b=quote((true) ) WHERE t1 MATCH 'h';",
          "5066: } {0 {}}",
          "5068: do_catchsql_test 28.1 {",
          "5069:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "5070:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5071: } {0 {}}",
          "5073: do_catchsql_test 28.1 {",
          "5074:   WITH c(x) AS (VALUES(1) UNION ALL SELECT 3<<x FROM c WHERE x<72)",
          "5075:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5076: } {0 {}}",
          "5078: do_catchsql_test 28.1 {",
          "5079:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "5080:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5081: } {0 {}}",
          "5083: do_catchsql_test 28.1 {",
          "5084:   WITH c(x) AS (VALUES(1) UNION ALL SELECT 3<<x FROM c WHERE x<72)",
          "5085:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5086: } {0 {}}",
          "5088: do_catchsql_test 28.1 {",
          "5089:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+3 FROM c WHERE x<72)",
          "5090:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5091: } {0 {}}",
          "5093: do_catchsql_test 28.1 {",
          "5094:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "5095: } {0 {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5f9f42a0e4e58911ec26b7180dd1e098cdd00ca",
      "candidate_info": {
        "commit_hash": "a5f9f42a0e4e58911ec26b7180dd1e098cdd00ca",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a5f9f42a0e4e58911ec26b7180dd1e098cdd00ca",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab3.test"
        ],
        "message": "Fix a problem with renaming a table within a schema that contains a composite query that uses a column alias as an ORDER BY term.\n\nFossilOrigin-Name: 2ca6b8f84ec07e313aa4e1c0894827401b418dcc4221e9c54c384f1c3893952a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 12713f320b2c1def273dd8b7833dddaaad5331aba779d4b1ec9aa949814f38fe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1160:             assert(pDup);",
          "1161:             iCol = resolveOrderByTermToExprList(pParse, pSelect, pDup);",
          "1162:           }",
          "1169:             sqlite3ExprDelete(db, pDup);",
          "1170:           }",
          "1171:         }",
          "",
          "[Removed Lines]",
          "1163:           if( IN_RENAME_OBJECT ){",
          "1164:             if( iCol>0 ){",
          "1165:               pItem->done = 1;",
          "1166:               continue;",
          "1167:             }",
          "1168:           }else{",
          "",
          "[Added Lines]",
          "1163:           if( !IN_RENAME_OBJECT ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1173:       if( iCol>0 ){",
          "1188:         }",
          "1191:         pItem->done = 1;",
          "1192:       }else{",
          "1193:         moreToDo = 1;",
          "",
          "[Removed Lines]",
          "1176:         Expr *pNew = sqlite3Expr(db, TK_INTEGER, 0);",
          "1177:         if( pNew==0 ) return 1;",
          "1178:         pNew->flags |= EP_IntValue;",
          "1179:         pNew->u.iValue = iCol;",
          "1180:         if( pItem->pExpr==pE ){",
          "1181:           pItem->pExpr = pNew;",
          "1182:         }else{",
          "1183:           Expr *pParent = pItem->pExpr;",
          "1184:           assert( pParent->op==TK_COLLATE );",
          "1185:           while( pParent->pLeft->op==TK_COLLATE ) pParent = pParent->pLeft;",
          "1186:           assert( pParent->pLeft==pE );",
          "1187:           pParent->pLeft = pNew;",
          "1189:         sqlite3ExprDelete(db, pE);",
          "1190:         pItem->u.x.iOrderByCol = (u16)iCol;",
          "",
          "[Added Lines]",
          "1171:         if( !IN_RENAME_OBJECT ){",
          "1172:           Expr *pNew = sqlite3Expr(db, TK_INTEGER, 0);",
          "1173:           if( pNew==0 ) return 1;",
          "1174:           pNew->flags |= EP_IntValue;",
          "1175:           pNew->u.iValue = iCol;",
          "1176:           if( pItem->pExpr==pE ){",
          "1177:             pItem->pExpr = pNew;",
          "1178:           }else{",
          "1179:             Expr *pParent = pItem->pExpr;",
          "1180:             assert( pParent->op==TK_COLLATE );",
          "1181:             while( pParent->pLeft->op==TK_COLLATE ) pParent = pParent->pLeft;",
          "1182:             assert( pParent->pLeft==pE );",
          "1183:             pParent->pLeft = pNew;",
          "1184:           }",
          "1185:           sqlite3ExprDelete(db, pE);",
          "1186:           pItem->u.x.iOrderByCol = (u16)iCol;",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   INSERT INTO t1 VALUES(1, 2);",
          "42: }",
          "45: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: #-------------------------------------------------------------------------",
          "45: reset_db",
          "46: do_execsql_test 2.0 {",
          "47:   CREATE TABLE t1(a,b,c);",
          "48:   CREATE TABLE t2(a,b,c);",
          "49:   CREATE TRIGGER r1 AFTER INSERT ON t1 WHEN new.a NOT NULL BEGIN",
          "50:     SELECT a,b, a name FROM t1",
          "51:       INTERSECT",
          "52:     SELECT a,b,c FROM t1 WHERE b>='d' ORDER BY name;",
          "53:     SELECT new.c;",
          "54:   END;",
          "55: }",
          "57: do_execsql_test 2.1 {",
          "58:   ALTER TABLE t1 RENAME TO t1x;",
          "59:   SELECT sql FROM sqlite_master WHERE name = 'r1';",
          "60: } {{CREATE TRIGGER r1 AFTER INSERT ON \"t1x\" WHEN new.a NOT NULL BEGIN",
          "61:     SELECT a,b, a name FROM \"t1x\"",
          "62:       INTERSECT",
          "63:     SELECT a,b,c FROM \"t1x\" WHERE b>='d' ORDER BY name;",
          "64:     SELECT new.c;",
          "65:   END}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}