{
  "cve_id": "CVE-2017-6800",
  "cve_desc": "An issue was discovered in ytnef before 1.9.2. An invalid memory access (heap-based buffer over-read) can occur during handling of LONG data types, related to MAPIPrint() in libytnef.",
  "repo": "Yeraze/ytnef",
  "patch_hash": "f98f5d4adc1c4bd4033638f6167c1bb95d642f89",
  "patch_info": {
    "commit_hash": "f98f5d4adc1c4bd4033638f6167c1bb95d642f89",
    "repo": "Yeraze/ytnef",
    "commit_url": "https://github.com/Yeraze/ytnef/commit/f98f5d4adc1c4bd4033638f6167c1bb95d642f89",
    "files": [
      "lib/ytnef.c"
    ],
    "message": "BugFix - data length\n\nEven tho this is a \"LONG\" type, it's actually only 4 bytes. Typecasting\nit to a long* caused a dereference beyond the end of the allocated\nregion.\n\nissues#28",
    "before_after_code_files": [
      "lib/ytnef.c||lib/ytnef.c"
    ]
  },
  "patch_diff": {
    "lib/ytnef.c||lib/ytnef.c": [
      "File: lib/ytnef.c -> lib/ytnef.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1390:           printf(\"] (%llu)\\n\", ddword_tmp);",
      "1391:           break;",
      "1392:         case PT_LONG:",
      "1394:           break;",
      "1395:         case PT_I2:",
      "1396:           printf(\"    Value: %hi\\n\", *((short int*)mapidata->data));",
      "",
      "[Removed Lines]",
      "1393:           printf(\"    Value: %li\\n\", *((long*)mapidata->data));",
      "",
      "[Added Lines]",
      "1393:           printf(\"    Value: %i\\n\", *((int*)mapidata->data));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3dfd05bdcfb47ea1b08dae8c7fa85d383cc9770d",
      "candidate_info": {
        "commit_hash": "3dfd05bdcfb47ea1b08dae8c7fa85d383cc9770d",
        "repo": "Yeraze/ytnef",
        "commit_url": "https://github.com/Yeraze/ytnef/commit/3dfd05bdcfb47ea1b08dae8c7fa85d383cc9770d",
        "files": [
          "ChangeLog",
          "configure.ac"
        ],
        "message": "Rev up to 1.9.2",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Yeraze/ytnef/pull/32"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: # PATCH version when you make backwards-compatible bug fixes.",
          "5: m4_define([version_major],1)",
          "6: m4_define([version_minor],9)",
          "8: m4_define([version_triplet],version_major.version_minor.version_micro)",
          "10: AC_PREREQ([2.63])",
          "",
          "[Removed Lines]",
          "7: m4_define([version_micro],1)",
          "",
          "[Added Lines]",
          "7: m4_define([version_micro],2)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b84a563e96bb103fc0cd06c6112b3ca3f495322",
      "candidate_info": {
        "commit_hash": "9b84a563e96bb103fc0cd06c6112b3ca3f495322",
        "repo": "Yeraze/ytnef",
        "commit_url": "https://github.com/Yeraze/ytnef/commit/9b84a563e96bb103fc0cd06c6112b3ca3f495322",
        "files": [
          "travis-build.sh"
        ],
        "message": "Add address sanitization to Travis build\n\nTo detect future memory bugs, make this a standard part of the Travis\nCI run.",
        "before_after_code_files": [
          "travis-build.sh||travis-build.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Yeraze/ytnef/pull/32"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "travis-build.sh||travis-build.sh": [
          "File: travis-build.sh -> travis-build.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: mkdir -p m4",
          "4: autoreconf -vfi",
          "5: ./configure --disable-dependency-tracking",
          "7: sudo make install",
          "9: export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}",
          "",
          "[Removed Lines]",
          "6: make",
          "",
          "[Added Lines]",
          "6: make CFLAGS=\"-fsanitize=address -g\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "19818f382cdfc301ea5ce0762eb50800e1d16528",
      "candidate_info": {
        "commit_hash": "19818f382cdfc301ea5ce0762eb50800e1d16528",
        "repo": "Yeraze/ytnef",
        "commit_url": "https://github.com/Yeraze/ytnef/commit/19818f382cdfc301ea5ce0762eb50800e1d16528",
        "files": [
          "travis-build.sh"
        ],
        "message": "Seems the -fsanitize option isn't in GCC\n\nonly in clang, so only run this when using clang\nor on OSX (where even gcc is just clang)",
        "before_after_code_files": [
          "travis-build.sh||travis-build.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Yeraze/ytnef/pull/32"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "travis-build.sh||travis-build.sh": [
          "File: travis-build.sh -> travis-build.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: mkdir -p m4",
          "4: autoreconf -vfi",
          "5: ./configure --disable-dependency-tracking",
          "7: sudo make install",
          "9: export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}",
          "",
          "[Removed Lines]",
          "6: make CFLAGS=\"-fsanitize=address -g\"",
          "",
          "[Added Lines]",
          "6: if [ \"$TRAVIS_OS_NAME\" == \"osx\" ] || [ \"$CC\" == \"clang\" ]; then",
          "7:   make CFLAGS=\"-fsanitize=address -g\"",
          "8: else",
          "9:   make",
          "10: fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cb0f914d6427073f262e1b2b5fd973e3043cdf7",
      "candidate_info": {
        "commit_hash": "3cb0f914d6427073f262e1b2b5fd973e3043cdf7",
        "repo": "Yeraze/ytnef",
        "commit_url": "https://github.com/Yeraze/ytnef/commit/3cb0f914d6427073f262e1b2b5fd973e3043cdf7",
        "files": [
          "lib/ytnef.c",
          "test-data/test.sh",
          "test-data/ytnef-oob-TNEFVersion-SwapWord"
        ],
        "message": "BugFix - Potential OOB with Fields of Size 0\n\nThanks to @hannob for contributing a malformed TNEF stream with\na Version field of size 0.  Now such files will return an error\nindicating invalid data.",
        "before_after_code_files": [
          "lib/ytnef.c||lib/ytnef.c",
          "test-data/test.sh||test-data/test.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Yeraze/ytnef/pull/32"
        ],
        "olp_code_files": {
          "patch": [
            "lib/ytnef.c||lib/ytnef.c"
          ],
          "candidate": [
            "lib/ytnef.c||lib/ytnef.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/ytnef.c||lib/ytnef.c": [
          "File: lib/ytnef.c -> lib/ytnef.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1147:   while (TNEFGetHeader(TNEF, &type, &size) == 0) {",
          "1148:     DEBUG2(TNEF->Debug, 2, \"Header says type=0x%X, size=%u\", type, size);",
          "1149:     DEBUG2(TNEF->Debug, 2, \"Header says type=%u, size=%u\", type, size);",
          "1150:     data = calloc(size, sizeof(BYTE));",
          "1151:     ALLOCCHECK(data);",
          "1152:     if (TNEFRawRead(TNEF, data, size, &header_checksum) < 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1150:     if(size == 0) {",
          "1151:       printf(\"ERROR: Field with size of 0\\n\");",
          "1152:       return YTNEF_ERROR_READING_DATA;",
          "1153:     }",
          "",
          "---------------"
        ],
        "test-data/test.sh||test-data/test.sh": [
          "File: test-data/test.sh -> test-data/test.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 1 PR_RTF_SYNC_BODY_CRC     | grep 872404792",
          "22: ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 1 PR_RTF_SYNC_BODY_COUNT   | grep 90",
          "23: ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 18 PR_RTF_COMPRESSED       | grep '\\pard Casdasdfasdfasd\\\\par'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: ../ytnefprint/ytnefprint ./ytnef-oob-TNEFVersion-SwapWord | grep 'ERROR: Field with size of 0'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22f8346c8d4f0020a40d9f258fdb3bfc097359cc",
      "candidate_info": {
        "commit_hash": "22f8346c8d4f0020a40d9f258fdb3bfc097359cc",
        "repo": "Yeraze/ytnef",
        "commit_url": "https://github.com/Yeraze/ytnef/commit/22f8346c8d4f0020a40d9f258fdb3bfc097359cc",
        "files": [
          "ChangeLog",
          "lib/ytnef.c"
        ],
        "message": "Added safety check for Compressed RTF Streams\n\nYou could potentially overflow the input pointer.\n\nin response to #34",
        "before_after_code_files": [
          "lib/ytnef.c||lib/ytnef.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Yeraze/ytnef/pull/32"
        ],
        "olp_code_files": {
          "patch": [
            "lib/ytnef.c||lib/ytnef.c"
          ],
          "candidate": [
            "lib/ytnef.c||lib/ytnef.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/ytnef.c||lib/ytnef.c": [
          "File: lib/ytnef.c -> lib/ytnef.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1541:     ALLOCCHECK_CHAR(dst);",
          "1542:     memcpy(dst, comp_Prebuf.data, comp_Prebuf.size);",
          "1543:     out = comp_Prebuf.size;",
          "1546:       flags = (flagCount++ % 8 == 0) ? src[in++] : flags >> 1;",
          "1547:       if ((flags & 1) == 1) { // each flag bit is 1 for reference, 0 for literal",
          "",
          "[Removed Lines]",
          "1544:     while (out < (comp_Prebuf.size + uncompressedSize)) {",
          "",
          "[Added Lines]",
          "1544:     while ((out < (comp_Prebuf.size + uncompressedSize)) && (in < p->size)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}