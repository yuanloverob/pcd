{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dcfd572710e05eacdead26f6402dda83e09cc3ef",
      "candidate_info": {
        "commit_hash": "dcfd572710e05eacdead26f6402dda83e09cc3ef",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/dcfd572710e05eacdead26f6402dda83e09cc3ef",
        "files": [
          "arch/X86/X86GenAsmWriter.inc"
        ],
        "message": "x86: fix (AT&T) instruction lgs for issue #805",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19252:       case X86_ROL32r1:",
          "19253:         SStream_concat0(O, \"rol\\t$1, \");",
          "19254:         break;",
          "19255:     }",
          "19256: #endif",
          "19257:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19255:       case X86_LGS64rm:",
          "19256:         SStream_concat0(O, \"lgs\\t\");",
          "19257:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "97ae4c3f706a54f1a844e61442b7f112dfd52f68",
      "candidate_info": {
        "commit_hash": "97ae4c3f706a54f1a844e61442b7f112dfd52f68",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/97ae4c3f706a54f1a844e61442b7f112dfd52f68",
        "files": [
          "arch/M68K/M68KDisassembler.c"
        ],
        "message": "bugfix: use proper order for operands in M68K movem",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "901:  op1 = &ext->operands[1];",
          "903:  op0->type = M68K_OP_REG_BITS;",
          "906:  get_ea_mode_op(info, op1, info->ir, size);",
          "907: }",
          "909: static void build_movem_er(m68k_info *info, int opcode, int size)",
          "",
          "[Removed Lines]",
          "904:  op0->register_bits = reverse_bits(read_imm_16(info));",
          "",
          "[Added Lines]",
          "904:  op0->register_bits = read_imm_16(info);",
          "908:         if (op1->address_mode == M68K_AM_REGI_ADDR_PRE_DEC)",
          "909:                 op0->register_bits = reverse_bits(op0->register_bits);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "915:  op0 = &ext->operands[0];",
          "916:  op1 = &ext->operands[1];",
          "920:  op1->type = M68K_OP_REG_BITS;",
          "921:  op1->register_bits = read_imm_16(info);",
          "922: }",
          "924: static void build_imm(m68k_info *info, int opcode, int data)",
          "",
          "[Removed Lines]",
          "918:  get_ea_mode_op(info, op0, info->ir, size);",
          "",
          "[Added Lines]",
          "924:  get_ea_mode_op(info, op0, info->ir, size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c1c1b1af421f4ddd53eb902301f59c2cba5f288",
      "candidate_info": {
        "commit_hash": "2c1c1b1af421f4ddd53eb902301f59c2cba5f288",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2c1c1b1af421f4ddd53eb902301f59c2cba5f288",
        "files": [
          "arch/X86/X86IntelInstPrinter.c"
        ],
        "message": "Fix assigned value with undefined (#893)",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "733:  reg = X86_insn_reg_intel(MCInst_getOpcode(MI), &access1);",
          "734:  if (MI->csh->detail) {",
          "735: #ifndef CAPSTONE_DIET",
          "737: #endif",
          "",
          "[Removed Lines]",
          "736:   uint8_t access[6];",
          "",
          "[Added Lines]",
          "736:   uint8_t access[6] = {0};",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "969f78466070622c88ec8f610bea08d99d6408da",
      "candidate_info": {
        "commit_hash": "969f78466070622c88ec8f610bea08d99d6408da",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/969f78466070622c88ec8f610bea08d99d6408da",
        "files": [
          "include/capstone/arm.h"
        ],
        "message": "arm: change data type of cs_arm_op.reg back to int because this field can also take arm_sysreg value",
        "before_after_code_files": [
          "include/capstone/arm.h||include/capstone/arm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/arm.h||include/capstone/arm.h": [
          "File: include/capstone/arm.h -> include/capstone/arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:  arm_op_type type; // operand type",
          "400:  union {",
          "402:   int32_t imm;   // immediate value for C-IMM, P-IMM or IMM operand",
          "403:   double fp;   // floating point value for FP operand",
          "404:   arm_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "",
          "[Removed Lines]",
          "401:   arm_reg reg; // register value for REG/SYSREG operand",
          "",
          "[Added Lines]",
          "401:   int reg; // register value for REG/SYSREG operand",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4015dfa619577e129d54eb6dc795cbff8163f460",
      "candidate_info": {
        "commit_hash": "4015dfa619577e129d54eb6dc795cbff8163f460",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4015dfa619577e129d54eb6dc795cbff8163f460",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "Add X86_REG_EFLAGS for X86_STC and X86_STD for full x86 instructions \u2026 (#800)\n\n* Add X86_REG_EFLAGS for X86_STC and X86_STD for full x86 instructions ; Add X86_REG_EFLAGS for X86_CLD, X86_CMC for reduce and full x86 instructions\n\n* Add trailing zero for regs write in X86_CLC ; X86_CLD ; X86_CMC",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4040:  {",
          "4041:   X86_CLC, X86_INS_CLC,",
          "4042: #ifndef CAPSTONE_DIET",
          "4044: #endif",
          "4045:  },",
          "4046:  {",
          "4047:   X86_CLD, X86_INS_CLD,",
          "4048: #ifndef CAPSTONE_DIET",
          "4050: #endif",
          "4051:  },",
          "4052:  {",
          "",
          "[Removed Lines]",
          "4043:   { 0 }, { 0 }, { 0 }, 0, 0",
          "4049:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "4043:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "4049:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4076:  {",
          "4077:   X86_CMC, X86_INS_CMC,",
          "4078: #ifndef CAPSTONE_DIET",
          "4080: #endif",
          "4081:  },",
          "4082:  {",
          "",
          "[Removed Lines]",
          "4079:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "4079:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17036:  {",
          "17037:   X86_STC, X86_INS_STC,",
          "17038: #ifndef CAPSTONE_DIET",
          "17040: #endif",
          "17041:  },",
          "17042:  {",
          "17043:   X86_STD, X86_INS_STD,",
          "17044: #ifndef CAPSTONE_DIET",
          "17046: #endif",
          "17047:  },",
          "17048:  {",
          "",
          "[Removed Lines]",
          "17039:   { 0 }, { 0 }, { 0 }, 0, 0",
          "17045:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "17039:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "17045:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "39283:  {",
          "39284:   X86_CLC, X86_INS_CLC,",
          "39285: #ifndef CAPSTONE_DIET",
          "39287: #endif",
          "39288:  },",
          "39289:  {",
          "39290:   X86_CLD, X86_INS_CLD,",
          "39291: #ifndef CAPSTONE_DIET",
          "39293: #endif",
          "39294:  },",
          "39295:  {",
          "",
          "[Removed Lines]",
          "39286:   { 0 }, { 0 }, { 0 }, 0, 0",
          "39292:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "39286:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "39292:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "39313:  {",
          "39314:   X86_CMC, X86_INS_CMC,",
          "39315: #ifndef CAPSTONE_DIET",
          "39317: #endif",
          "39318:  },",
          "39319:  {",
          "",
          "[Removed Lines]",
          "39316:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "39316:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}