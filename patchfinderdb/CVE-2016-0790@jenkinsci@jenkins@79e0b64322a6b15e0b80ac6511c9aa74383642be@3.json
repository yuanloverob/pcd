{
  "cve_id": "CVE-2016-0790",
  "cve_desc": "Jenkins before 1.650 and LTS before 1.642.2 do not use a constant-time algorithm to verify API tokens, which makes it easier for remote attackers to determine API tokens via a brute-force approach.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "79e0b64322a6b15e0b80ac6511c9aa74383642be",
  "patch_info": {
    "commit_hash": "79e0b64322a6b15e0b80ac6511c9aa74383642be",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/79e0b64322a6b15e0b80ac6511c9aa74383642be",
    "files": [
      "core/src/main/java/jenkins/security/ApiTokenProperty.java"
    ],
    "message": "[FIX SECURITY-241] Compare API tokens in constant time",
    "before_after_code_files": [
      "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java": [
      "File: core/src/main/java/jenkins/security/ApiTokenProperty.java -> core/src/main/java/jenkins/security/ApiTokenProperty.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: import org.kohsuke.stapler.StaplerResponse;",
      "43: import java.io.IOException;",
      "44: import java.security.SecureRandom;",
      "45: import javax.annotation.Nonnull;",
      "46: import org.apache.commons.lang.StringUtils;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44: import java.security.MessageDigest;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:     }",
      "111:     public boolean matchesPassword(String password) {",
      "113:     }",
      "115:     private boolean hasPermissionToSeeToken() {",
      "",
      "[Removed Lines]",
      "112:         return  getApiTokenInsecure().equals(password);",
      "",
      "[Added Lines]",
      "113:         String token = getApiTokenInsecure();",
      "114:         return MessageDigest.isEqual(password.getBytes(), token.getBytes());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aa8b855af393543d490c879ea037bfced0cf4b61",
      "candidate_info": {
        "commit_hash": "aa8b855af393543d490c879ea037bfced0cf4b61",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/aa8b855af393543d490c879ea037bfced0cf4b61",
        "files": [
          "test/src/test/java/hudson/util/XStream2Security247Test.java",
          "test/src/test/resources/hudson/util/XStream2Security247Test/config.xml"
        ],
        "message": "[SECURITY-247] Added doCreateItem test, improved loading test",
        "before_after_code_files": [
          "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java": [
          "File: test/src/test/java/hudson/util/XStream2Security247Test.java -> test/src/test/java/hudson/util/XStream2Security247Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package hudson.util;",
          "4: import hudson.model.Items;",
          "6: import org.junit.Rule;",
          "7: import org.junit.Test;",
          "8: import org.jvnet.hudson.test.Issue;",
          "9: import org.jvnet.hudson.test.JenkinsRule;",
          "11: import java.io.File;",
          "13: import static org.junit.Assert.assertFalse;",
          "15: public class XStream2Security247Test {",
          "17:     @Rule",
          "18:     public JenkinsRule j = new JenkinsRule();",
          "20:     @Test",
          "21:     @Issue(\"SECURITY-247\")",
          "25:         try {",
          "27:             if (exploitFile.exists() && !exploitFile.delete()) {",
          "28:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
          "29:             }",
          "30:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
          "33:             try {",
          "34:                 Items.load(j.jenkins, tempJobDir);",
          "35:             } catch (Exception e) {",
          "",
          "[Removed Lines]",
          "3: import hudson.Functions;",
          "5: import org.apache.commons.io.FileUtils;",
          "22:     public void dontUnmarshalMethodClosure() throws Exception {",
          "23:         if (Functions.isWindows())  return;",
          "24:         File exploitFile = new File(\"/tmp/jenkins-security247test\");",
          "31:             FileUtils.copyInputStreamToFile(XStream2Security247Test.class.getResourceAsStream(\"/hudson/util/XStream2Security247Test/config.xml\"),",
          "32:                     new File(tempJobDir, \"config.xml\"));",
          "",
          "[Added Lines]",
          "4: import org.apache.commons.io.*;",
          "5: import org.apache.commons.io.IOUtils;",
          "6: import org.junit.Before;",
          "9: import org.junit.rules.TemporaryFolder;",
          "12: import org.kohsuke.stapler.StaplerRequest;",
          "13: import org.kohsuke.stapler.StaplerResponse;",
          "14: import org.mockito.Mock;",
          "15: import org.mockito.MockitoAnnotations;",
          "17: import javax.servlet.ServletInputStream;",
          "19: import java.io.IOException;",
          "20: import java.io.InputStream;",
          "23: import static org.mockito.Mockito.when;",
          "30:     @Rule",
          "31:     public TemporaryFolder f = new TemporaryFolder();",
          "33:     @Mock",
          "34:     private StaplerRequest req;",
          "36:     @Mock",
          "37:     private StaplerResponse rsp;",
          "39:     @Before",
          "40:     public void setUp() throws Exception {",
          "41:         MockitoAnnotations.initMocks(this);",
          "42:     }",
          "46:     public void testXmlLoad() throws Exception {",
          "47:         File exploitFile = f.newFile();",
          "55:             String exploitXml = org.apache.commons.io.IOUtils.toString(",
          "56:                     XStream2Security247Test.class.getResourceAsStream(",
          "57:                             \"/hudson/util/XStream2Security247Test/config.xml\"), \"UTF-8\");",
          "59:             exploitXml = exploitXml.replace(\"@TOKEN@\", exploitFile.getAbsolutePath());",
          "61:             FileUtils.write(new File(tempJobDir, \"config.xml\"), exploitXml);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:             exploitFile.delete();",
          "41:         }",
          "42:     }",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     @Test",
          "75:     @Issue(\"SECURITY-247\")",
          "76:     public void testPostJobXml() throws Exception {",
          "77:         File exploitFile = f.newFile();",
          "78:         try {",
          "80:             if (exploitFile.exists() && !exploitFile.delete()) {",
          "81:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
          "82:             }",
          "83:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
          "85:             String exploitXml = org.apache.commons.io.IOUtils.toString(",
          "86:                     XStream2Security247Test.class.getResourceAsStream(",
          "87:                             \"/hudson/util/XStream2Security247Test/config.xml\"), \"UTF-8\");",
          "89:             exploitXml = exploitXml.replace(\"@TOKEN@\", exploitFile.getAbsolutePath());",
          "91:             when(req.getMethod()).thenReturn(\"POST\");",
          "92:             when(req.getInputStream()).thenReturn(new Stream(IOUtils.toInputStream(exploitXml)));",
          "93:             when(req.getContentType()).thenReturn(\"application/xml\");",
          "94:             when(req.getParameter(\"name\")).thenReturn(\"foo\");",
          "96:             try {",
          "97:                 j.jenkins.doCreateItem(req, rsp);",
          "98:             } catch (Exception e) {",
          "100:             }",
          "102:             assertFalse(\"no file should be created here\", exploitFile.exists());",
          "103:         } finally {",
          "104:             exploitFile.delete();",
          "105:         }",
          "106:     }",
          "108:     private static class Stream extends ServletInputStream {",
          "109:         private final InputStream inner;",
          "111:         public Stream(final InputStream inner) {",
          "112:             this.inner = inner;",
          "113:         }",
          "115:         @Override",
          "116:         public int read() throws IOException {",
          "117:             return inner.read();",
          "118:         }",
          "119:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76d1958ebe17bc89a5e8b249ecc965de728bd669",
      "candidate_info": {
        "commit_hash": "76d1958ebe17bc89a5e8b249ecc965de728bd669",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/76d1958ebe17bc89a5e8b249ecc965de728bd669",
        "files": [
          "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
        ],
        "message": "[SECURITY-245] Use US-ASCII to prevent charset issues",
        "before_after_code_files": [
          "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java": [
          "File: core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java -> core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: package hudson.security.csrf;",
          "8: import java.security.MessageDigest;",
          "9: import java.security.NoSuchAlgorithmException;",
          "10: import java.util.logging.Level;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import java.nio.charset.Charset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:             String newCrumb = issueCrumb(request, salt);",
          "97:             if ((newCrumb != null) && (crumb != null)) {",
          "100:             }",
          "101:         }",
          "102:         return false;",
          "",
          "[Removed Lines]",
          "99:                 return MessageDigest.isEqual(newCrumb.getBytes(), crumb.getBytes());",
          "",
          "[Added Lines]",
          "100:                 return MessageDigest.isEqual(newCrumb.getBytes(Charset.forName(\"US-ASCII\")),",
          "101:                         crumb.getBytes(Charset.forName(\"US-ASCII\")));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "679da79f5492249c713e3f887ccfa37d56043cba",
      "candidate_info": {
        "commit_hash": "679da79f5492249c713e3f887ccfa37d56043cba",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/679da79f5492249c713e3f887ccfa37d56043cba",
        "files": [
          "core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html"
        ],
        "message": "Update German localization\n\nRemoves mention of http.proxyHost property",
        "before_after_code_files": [
          "core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html||core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html||core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html": [
          "File: core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html -> core/src/main/resources/hudson/ProxyConfiguration/help-name_de.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:   und Plugins herunterzuladen.",
          "11:   <p>",
          "16:   <p>",
          "17:   Wenn Sie sich nicht sicher sind, was Sie hier eintragen sollen, schauen Sie",
          "18:   in der Proxy-Konfiguration Ihres Browsers nach.",
          "",
          "[Removed Lines]",
          "12:   Der Wert, den Sie hier angeben, wird als Systemeigenschaft <tt>http.proxyHost</tt>",
          "13:   gesetzt. Wenn Sie dieses Feld freilassen, wird die Systemeigenschaft gel\u00f6scht.",
          "14:   Jenkins versucht dann, das Update-Center direkt zu kontaktieren.",
          "19: </div>",
          "",
          "[Added Lines]",
          "12:   Wenn Sie dieses Feld freilassen, versucht Jenkins, das Update-Center direkt zu kontaktieren.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
      "candidate_info": {
        "commit_hash": "39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
        "files": [
          "changelog.html"
        ],
        "message": "[FIXED JENKINS-33068] Recording merge",
        "before_after_code_files": [
          "changelog.html||changelog.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "changelog.html||changelog.html": [
          "File: changelog.html -> changelog.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: <!-- Record your changes in the trunk here. -->",
          "56: <div id=\"trunk\" style=\"display:none\"><!--=TRUNK-BEGIN=-->",
          "57: <ul class=image>",
          "59: </ul>",
          "60: </div><!--=TRUNK-END=-->",
          "61: <h3><a name=v1.650>What's new in 1.650</a> (2016/02/24)</h3>",
          "",
          "[Removed Lines]",
          "58:   <li class=>",
          "",
          "[Added Lines]",
          "58:   <li class=\"rfe\">",
          "59:     Move periodic task logfiles from <code>JENKINS_HOME/*.log</code> to <code>JENKINS_HOME/logs/tasks/*.log</code> and rotate them periodically rather than overwrite every execution",
          "60:     (<a href-\"https://issues.jenkins-ci.org/browse/JENKINS-33068\">issue 33068</a>)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "919001c84670f9d35c4eb72003640c4a990aaf2f",
      "candidate_info": {
        "commit_hash": "919001c84670f9d35c4eb72003640c4a990aaf2f",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/919001c84670f9d35c4eb72003640c4a990aaf2f",
        "files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ],
        "message": "[SECURITY-241] Add explanation for chosen implementation",
        "before_after_code_files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java": [
          "File: core/src/main/java/jenkins/security/ApiTokenProperty.java -> core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ]
      }
    }
  ]
}