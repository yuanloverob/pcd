{
  "cve_id": "CVE-2013-1833",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in the File Picker module in Moodle 2.x through 2.1.10, 2.2.x before 2.2.8, 2.3.x before 2.3.5, and 2.4.x before 2.4.2 allow remote authenticated users to inject arbitrary web script or HTML via a crafted filename.",
  "repo": "moodle/moodle",
  "patch_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
  "patch_info": {
    "commit_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/954b35451112c333c0ae77dff25dafbf41587c26",
    "files": [
      "lib/form/filemanager.js",
      "lib/outputrequirementslib.php",
      "repository/filepicker.js",
      "repository/filepicker.php"
    ],
    "message": "MDL-37507 repositories: improved formatting of external resources",
    "before_after_code_files": [
      "lib/form/filemanager.js||lib/form/filemanager.js",
      "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
      "repository/filepicker.js||repository/filepicker.js",
      "repository/filepicker.php||repository/filepicker.php"
    ]
  },
  "patch_diff": {
    "lib/form/filemanager.js||lib/form/filemanager.js": [
      "File: lib/form/filemanager.js -> lib/form/filemanager.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "255:             this.msg_dlg.set('headerContent', header);",
      "256:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "258:             this.msg_dlg.show();",
      "259:         },",
      "260:         is_disabled: function() {",
      "",
      "[Removed Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "325:                     }",
      "326:                     this.mkdir_dialog.show();",
      "327:                     Y.one('#fm-newname-'+scope.client_id).focus();",
      "329:                 }, this);",
      "330:             } else {",
      "331:                 this.filemanager.addClass('fm-nomkdir');",
      "",
      "[Removed Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(this.currentpath)",
      "",
      "[Added Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(Y.Escape.html(this.currentpath))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "412:                     } else {",
      "413:                         el.addClass('odd');",
      "414:                     }",
      "416:                         on('click', function(e, path) {",
      "417:                             e.preventDefault();",
      "418:                             if (!this.is_disabled()) {",
      "",
      "[Removed Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(p[i].name).",
      "",
      "[Added Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name)).",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "602:             for (var i in licenses) {",
      "603:                 var option = Y.Node.create('<option/>').",
      "604:                     set('value', licenses[i].shortname).",
      "606:                 node.appendChild(option)",
      "607:             }",
      "608:         },",
      "",
      "[Removed Lines]",
      "605:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "605:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "621:             node.setContent('');",
      "622:             for (var i in list) {",
      "623:                 node.appendChild(Y.Node.create('<option/>').",
      "625:             }",
      "626:         },",
      "627:         update_file: function(confirmed) {",
      "",
      "[Removed Lines]",
      "624:                     set('value', list[i]).setContent(list[i]))",
      "",
      "[Added Lines]",
      "624:                     set('value', list[i]).setContent(Y.Escape.html(list[i])));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "923:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "924:                     var value = (node[attrs[i]+'_f']) ? node[attrs[i]+'_f'] : (node[attrs[i]] ? node[attrs[i]] : '');",
      "925:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "927:                 }",
      "928:             }",
      "",
      "[Removed Lines]",
      "926:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "926:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "948:                             selectnode.one('.fp-original').removeClass('fp-loading');",
      "949:                             if (obj.original) {",
      "950:                                 node.original = obj.original;",
      "952:                             } else {",
      "953:                                 selectnode.one('.fp-original .fp-value').setContent(M.str.repository.unknownsource);",
      "954:                             }",
      "",
      "[Removed Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(node.original);",
      "",
      "[Added Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(Y.Escape.html(node.original));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "976:                                 for (var i in obj.references) {",
      "977:                                     node.reflist += '<li>'+obj.references[i]+'</li>';",
      "978:                                 }",
      "980:                             } else {",
      "981:                                 selectnode.one('.fp-reflist .fp-value').setContent('');",
      "982:                             }",
      "",
      "[Removed Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(node.reflist);",
      "",
      "[Added Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(Y.Escape.html(node.reflist));",
      "",
      "---------------"
    ],
    "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
      "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:                 case 'core_filepicker':",
      "396:                     $module = array('name'     => 'core_filepicker',",
      "397:                                     'fullpath' => '/repository/filepicker.js',",
      "399:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
      "400:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
      "401:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
      "",
      "[Removed Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'moodle-core_filepicker'),",
      "",
      "[Added Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape', 'moodle-core_filepicker'),",
      "",
      "---------------"
    ],
    "repository/filepicker.js||repository/filepicker.js": [
      "File: repository/filepicker.js -> repository/filepicker.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "176:         var file_get_filename = function(node) {",
      "177:             return node.title ? node.title : node.fullname;",
      "180:         var file_get_displayname = function(node) {",
      "184:         var file_get_description = function(node) {",
      "188:         var build_tree = function(node, level) {",
      "",
      "[Removed Lines]",
      "178:         }",
      "181:             return node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:         }",
      "185:             return node.description ? node.description : (node.thumbnail_title ? node.thumbnail_title : file_get_filename(node));",
      "186:         }",
      "",
      "[Added Lines]",
      "178:         };",
      "181:             var displayname = node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:             return Y.Escape.html(displayname);",
      "183:         };",
      "186:             var description = '';",
      "187:             if (node.description) {",
      "188:                 description = node.description;",
      "189:             } else if (node.thumbnail_title) {",
      "190:                 description = node.thumbnail_title;",
      "191:             } else {",
      "192:                 description = file_get_filename(node);",
      "193:             }",
      "194:             return Y.Escape.html(description);",
      "195:         };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "401:                 imgdiv.setStyleAdv('width', width).setStyleAdv('height', height);",
      "402:                 var img = Y.Node.create('<img/>').setAttrs({",
      "403:                         title: file_get_description(node),",
      "405:                     setStyle('maxWidth', ''+width+'px').",
      "406:                     setStyle('maxHeight', ''+height+'px');",
      "407:                 img.setImgSrc(src, node.realthumbnail, lazyloading);",
      "",
      "[Removed Lines]",
      "404:                         alt: node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node)}).",
      "",
      "[Added Lines]",
      "413:                         alt: Y.Escape.html(node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node))}).",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "738:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.error);",
      "739:             this.fpnode.one('.fp-content .fp-error').",
      "740:                 addClass(errorcode).",
      "742:         },",
      "744:         print_msg: function(msg, type) {",
      "",
      "[Removed Lines]",
      "741:                 setContent(errortext);",
      "",
      "[Added Lines]",
      "750:                 setContent(Y.Escape.html(errortext));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "769:             this.msg_dlg.set('headerContent', header);",
      "770:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "772:             this.msg_dlg.show();",
      "773:         },",
      "774:         view_files: function(appenditems) {",
      "",
      "[Removed Lines]",
      "771:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "780:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1106:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "1107:                     var value = (args[attrs[i]+'_f']) ? args[attrs[i]+'_f'] : (args[attrs[i]] ? args[attrs[i]] : '');",
      "1108:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "1110:                 }",
      "1111:             }",
      "1112:         },",
      "",
      "[Removed Lines]",
      "1109:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "1118:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1354:                             this.hide_header();",
      "1355:                             this.list({'repo_id':repository_id});",
      "1356:                         }, this /*handler running scope*/, repository.id/*second argument of handler*/);",
      "1358:                     node.one('.fp-repo-icon').set('src', repository.icon);",
      "1359:                     if (i==0) {",
      "1360:                         node.addClass('first');",
      "",
      "[Removed Lines]",
      "1357:                     node.one('.fp-repo-name').setContent(repository.name);",
      "",
      "[Added Lines]",
      "1366:                     node.one('.fp-repo-name').setContent(Y.Escape.html(repository.name));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1609:                 var option = Y.Node.create('<option/>').",
      "1610:                     set('selected', (this.options.defaultlicense==licenses[i].shortname)).",
      "1611:                     set('value', licenses[i].shortname).",
      "1613:                 node.appendChild(option)",
      "1614:             }",
      "1615:         },",
      "",
      "[Removed Lines]",
      "1612:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "1621:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1869:                     } else {",
      "1870:                         el.addClass('odd');",
      "1871:                     }",
      "1873:                     el.on('click',",
      "1874:                             function(e, path) {",
      "1875:                                 e.preventDefault();",
      "",
      "[Removed Lines]",
      "1872:                     el.all('.fp-path-folder-name').setContent(p[i].name);",
      "",
      "[Added Lines]",
      "1881:                     el.all('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name));",
      "",
      "---------------"
    ],
    "repository/filepicker.php||repository/filepicker.php": [
      "File: repository/filepicker.php -> repository/filepicker.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:             if (isset($item['thumbnail_width'])) {",
      "143:                 $style .= 'max-width:'.$item['thumbnail_width'].'px;';",
      "144:             }",
      "146:             echo '</td><td>';",
      "147:             if (!empty($item['url'])) {",
      "149:             } else {",
      "151:             }",
      "152:             echo '</td>';",
      "153:             echo '<td>';",
      "",
      "[Removed Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "150:                 echo $item['title'];",
      "",
      "[Added Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'alt' => '', 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "150:                 echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "204:                         'draftpath'=>$draftpath,",
      "205:                         'savepath'=>$savepath",
      "206:                         ));",
      "208:                     echo '<span> / </span>';",
      "209:                 }",
      "210:             }",
      "",
      "[Removed Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, $p['name']) . '</strong>';",
      "",
      "[Added Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, s($p['name'])) . '</strong>';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "241:                 echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "242:                 echo '</td><td>';",
      "243:                 if (!empty($item['url'])) {",
      "245:                 } else {",
      "247:                 }",
      "248:                 echo '</td>';",
      "249:                 echo '<td>';",
      "",
      "[Removed Lines]",
      "244:                     echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "246:                     echo $item['title'];",
      "",
      "[Added Lines]",
      "244:                     echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "246:                     echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "393:         $aurl->params(array('savepath'=>$savepath, 'action' => 'list', 'repo_id' => $info->id, 'draftpath'=>$draftpath));",
      "395:         echo '<li>';",
      "398:         echo '</li>';",
      "399:     }",
      "400:     echo '</ul>';",
      "",
      "[Removed Lines]",
      "396:         echo '<img src=\"'.$info->icon.'\" alt=\"'.$info->name.'\" width=\"16\" height=\"16\" /> ';",
      "397:         echo html_writer::link($aurl, $info->name);",
      "",
      "[Added Lines]",
      "396:         echo html_writer::empty_tag('img', array('src'=>$info->icon, 'alt'=>$info->name, 'class'=>'icon icon-pre'));",
      "397:         echo html_writer::link($aurl, s($info->name));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "694beb548ccb09536ca11a95374aa79baab10a99",
      "candidate_info": {
        "commit_hash": "694beb548ccb09536ca11a95374aa79baab10a99",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/694beb548ccb09536ca11a95374aa79baab10a99",
        "files": [
          "files/renderer.php",
          "lib/form/filemanager.js"
        ],
        "message": "MDL-31901: FileManager uses more YUI3 windows and more renderers\n\n- Add folder dialog in FileManager now uses YUI3 and renderer;\n- Fixed bug with remembering current folder in Tree view;\n- Display error messages in FileManager using YUI3 and not using 'alert'",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "265:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "266:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281:     private function fm_js_template_mkdir() {",
          "282:         $rv = '<div class=\"fp-mkdir-dlg\">",
          "283:             <span class=\"{!}fp-dlg-curpath\"></span>",
          "284:             <input type=\"text\">",
          "285:             <button class=\"{!}fp-dlg-butcreate\">'.get_string('create').'</button><button class=\"{!}fp-dlg-butcancel\">'.get_string('cancel').'</button>",
          "286: </div>';",
          "287:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "288:     }",
          "296:     private function fm_js_template_message() {",
          "297:         return $this->fp_js_template_message();",
          "298:     }",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:             this.refresh(this.currentpath); // MDL-31113 get latest list from server",
          "119:         },",
          "122:            this.filemanager.addClass('fm-updating');",
          "123:         },",
          "124:         request: function(args, redraw) {",
          "",
          "[Removed Lines]",
          "121:         wait: function(client_id) {",
          "",
          "[Added Lines]",
          "121:         wait: function() {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:                             data = Y.JSON.parse(o.responseText);",
          "151:                         } catch(e) {",
          "155:                             return;",
          "156:                         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:                             scope.print_msg(M.str.repository.invalidjson, 'error');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "174:             }",
          "175:             Y.io(api, cfg);",
          "176:             if (redraw) {",
          "178:             }",
          "179:         },",
          "180:         filepicker_callback: function(obj) {",
          "",
          "[Removed Lines]",
          "177:                 this.wait(this.client_id);",
          "",
          "[Added Lines]",
          "177:                 this.wait();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:                 }",
          "213:             }, true);",
          "214:         },",
          "215:         setup_buttons: function() {",
          "216:             var button_download = this.filemanager.one('.fp-btn-download');",
          "217:             var button_create   = this.filemanager.one('.fp-btn-mkdir');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:         print_msg: function(msg, type) {",
          "217:             var header = M.str.moodle.error;",
          "218:             if (type != 'error') {",
          "219:                 type = 'info'; // one of only two types excepted",
          "220:                 header = M.str.moodle.info;",
          "221:             }",
          "222:             if (!this.msg_dlg) {",
          "223:                 var node = Y.Node.create(M.form_filemanager.templates.message);",
          "224:                 this.filemanager.appendChild(node);",
          "226:                 this.msg_dlg = new Y.Panel({",
          "227:                     srcNode      : node,",
          "228:                     zIndex       : 800000,",
          "229:                     centered     : true,",
          "230:                     modal        : true,",
          "231:                     visible      : false,",
          "232:                     render       : true",
          "233:                 });",
          "234:                 node.one('.fp-msg-butok').on('click', function(e) {",
          "235:                     e.preventDefault();",
          "236:                     this.msg_dlg.hide();",
          "237:                 }, this);",
          "238:             }",
          "240:             this.msg_dlg.set('headerContent', header);",
          "241:             this.filemanager.one('.fp-msg').removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "242:             this.filemanager.one('.fp-msg .fp-msg-text').setContent(msg);",
          "243:             this.msg_dlg.show();",
          "244:         },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "235:                     e.preventDefault();",
          "236:                     var scope = this;",
          "240:                         if (!foldername) {",
          "241:                             return;",
          "242:                         }",
          "243:                         scope.request({",
          "",
          "[Removed Lines]",
          "238:                     function perform_action(e) {",
          "239:                         var foldername = Y.one('#fm-newname').get('value');",
          "",
          "[Added Lines]",
          "268:                     var perform_action = function(e) {",
          "269:                         e.preventDefault();",
          "270:                         var foldername = Y.one('#fm-newname-'+scope.client_id).get('value');",
          "272:                             scope.mkdir_dialog.hide();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "247:                                 var filepath = obj.filepath;",
          "248:                                 scope.mkdir_dialog.hide();",
          "249:                                 scope.refresh(filepath);",
          "251:                                 if (typeof M.core_formchangechecker != 'undefined') {",
          "252:                                     M.core_formchangechecker.set_form_changed();",
          "253:                                 }",
          "254:                             }",
          "255:                         });",
          "256:                     }",
          "268:                     }",
          "274:                     this.mkdir_dialog.show();",
          "275:                 }, this);",
          "276:             } else {",
          "277:                 this.filemanager.addClass('fm-nomkdir');",
          "",
          "[Removed Lines]",
          "250:                                 Y.one('#fm-newname').set('value', '');",
          "257:                     if (!Y.one('#fm-mkdir-dlg')) {",
          "258:                         var dialog = Y.Node.create('<div id=\"fm-mkdir-dlg\"><div class=\"hd\">'+M.str.repository.entername+'</div><div class=\"bd\"><input type=\"text\" id=\"fm-newname\" /></div></div>');",
          "259:                         Y.one(document.body).appendChild(dialog);",
          "260:                         this.mkdir_dialog = new YAHOO.widget.Dialog(\"fm-mkdir-dlg\", {",
          "261:                              width: \"300px\",",
          "262:                              visible: true,",
          "263:                              x:e.pageX,",
          "264:                              y:e.pageY,",
          "265:                              constraintoviewport : true",
          "266:                              });",
          "269:                     var buttons = [ { text:M.str.moodle.ok, handler:perform_action, isDefault:true },",
          "270:                                   { text:M.str.moodle.cancel, handler:function(){this.cancel();}}];",
          "272:                     this.mkdir_dialog.cfg.queueProperty(\"buttons\", buttons);",
          "273:                     this.mkdir_dialog.render();",
          "",
          "[Added Lines]",
          "282:                                 Y.one('#fm-newname-'+scope.client_id).set('value', '');",
          "289:                     if (!this.mkdir_dialog) {",
          "290:                         var node = Y.Node.create(M.form_filemanager.templates.mkdir);",
          "291:                         this.filemanager.appendChild(node);",
          "292:                         this.mkdir_dialog = new Y.Panel({",
          "293:                             srcNode      : node,",
          "294:                             zIndex       : 800000,",
          "295:                             centered     : true,",
          "296:                             modal        : true,",
          "297:                             visible      : false,",
          "298:                             render       : true",
          "299:                         });",
          "300:                         node.one('.fp-dlg-butcreate').on('click', perform_action, this);",
          "301:                         node.one('input').set('id', 'fm-newname-'+this.client_id).",
          "302:                             on('keydown', function(e){",
          "303:                                 if (e.keyCode == 13) {Y.bind(perform_action, this)(e);}",
          "304:                             }, this);",
          "305:                         node.all('.fp-dlg-butcancel').on('click', function(e){e.preventDefault();this.mkdir_dialog.hide();}, this);",
          "306:                         node.all('.fp-dlg-curpath').set('id', 'fm-curpath-'+this.client_id);",
          "309:                     Y.one('#fm-newname-'+scope.client_id).focus();",
          "310:                     Y.all('#fm-curpath-'+scope.client_id).setContent(this.currentpath)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "291:                             scope.refresh(obj.filepath);",
          "292:                             var win = window.open(obj.fileurl, 'fm-download-folder');",
          "293:                             if (!win) {",
          "295:                             }",
          "296:                         } else {",
          "298:                         }",
          "299:                     }",
          "300:                 });",
          "",
          "[Removed Lines]",
          "294:                                 alert(M.str.repository.popupblockeddownload);",
          "297:                             alert(M.str.repository.draftareanofiles);",
          "",
          "[Added Lines]",
          "330:                                 scope.print_msg(M.str.repository.popupblockeddownload, 'error');",
          "333:                             scope.print_msg(M.str.repository.draftareanofiles, 'error');",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "376:                     }",
          "377:                     if (cb != null) { // (in manual mode do not update current path)",
          "378:                         scope.options = obj;",
          "379:                     }",
          "380:                     node.highlight(false);",
          "381:                     node.origlist = obj.list?obj.list:null;",
          "382:                     node.origpath = obj.path?obj.path:null;",
          "383:                     node.children = [];",
          "384:                     for(k in list) {",
          "385:                         if (list[k].type == 'folder' && retrieved_children[list[k].filepath]) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:                         scope.currentpath = node.path?node.path:'/';",
          "420:                     node.origcurrentpath = node.path?node.path:'/';",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "447:                             this.options.list = e.node.parent.origlist;",
          "448:                             this.print_path();",
          "449:                         }",
          "450:                         this.select_file(node);",
          "451:                     } else {",
          "453:                         this.options.path = e.node.origpath;",
          "454:                         this.options.list = e.node.origlist;",
          "455:                         this.print_path();",
          "457:                     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:                         this.currentpath = node.filepath;",
          "494:                         this.currentpath = e.node.origcurrentpath;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "531:                     scope: this,",
          "532:                     params: params,",
          "533:                     callback: function(id, obj, args) {",
          "535:                         if (obj == false) {",
          "537:                         } else {",
          "538:                             args.scope.refresh(obj.filepath);",
          "539:                             if (typeof M.core_formchangechecker != 'undefined') {",
          "540:                                 M.core_formchangechecker.set_form_changed();",
          "",
          "[Removed Lines]",
          "534:                         args.scope.selectui.hide();",
          "536:                             alert(M.str.repository.fileexists); // TODO!",
          "",
          "[Added Lines]",
          "575:                             selectnode.removeClass('loading');",
          "576:                             args.scope.print_msg(M.str.repository.fileexists, 'error');",
          "578:                             args.scope.selectui.hide();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4325db53ab5acef9f99315c0251bf9468e160655",
      "candidate_info": {
        "commit_hash": "4325db53ab5acef9f99315c0251bf9468e160655",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/4325db53ab5acef9f99315c0251bf9468e160655",
        "files": [
          "files/renderer.php",
          "lib/form/filemanager.js",
          "lib/outputrequirementslib.php",
          "repository/filepicker.js"
        ],
        "message": "MDL-31901: Filemanager and Filepicker, cleaned up requirements and strings",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
          "repository/filepicker.js||repository/filepicker.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         $module = array(",
          "102:             'name'=>'form_filemanager',",
          "103:             'fullpath'=>'/lib/form/filemanager.js',",
          "114:             )",
          "115:         );",
          "116:         if (empty($filemanagertemplateloaded)) {",
          "",
          "[Removed Lines]",
          "104:             'requires' => array('core_filepicker', 'base', 'io-base', 'node', 'json', 'yui2-button', 'yui2-container', 'yui2-layout', 'yui2-menu', 'yui2-treeview', 'core_dndupload'),",
          "105:             'strings' => array(array('loading', 'repository'), array('nomorefiles', 'repository'), array('confirmdeletefile', 'repository'),",
          "106:                  array('add', 'repository'), array('accessiblefilepicker', 'repository'), array('move', 'moodle'),",
          "107:                  array('cancel', 'moodle'), array('download', 'moodle'), array('ok', 'moodle'),",
          "108:                  array('emptylist', 'repository'), array('nofilesattached', 'repository'), array('entername', 'repository'), array('enternewname', 'repository'),",
          "109:                  array('zip', 'editor'), array('unzip', 'moodle'), array('rename', 'moodle'), array('delete', 'moodle'),",
          "110:                  array('cannotdeletefile', 'error'), array('confirmdeletefile', 'repository'),",
          "111:                  array('nopathselected', 'repository'), array('popupblockeddownload', 'repository'),",
          "112:                  array('draftareanofiles', 'repository'), array('path', 'moodle'), array('setmainfile', 'repository'),",
          "113:                  array('moving', 'repository'), array('files', 'moodle'), array('serverconnection', 'error')",
          "",
          "[Added Lines]",
          "104:             'requires' => array('core_filepicker', 'base', 'io-base', 'node', 'json', 'core_dndupload', 'panel', 'resize-plugin', 'dd-plugin'),",
          "105:             'strings' => array(",
          "106:                 array('error', 'moodle'), array('info', 'moodle'), array('confirmdeletefile', 'repository'),",
          "107:                 array('draftareanofiles', 'repository'), array('entername', 'repository'), array('enternewname', 'repository'),",
          "108:                 array('invalidjson', 'repository'), array('popupblockeddownload', 'repository')",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:                 close        : true,",
          "108:                 render       : true",
          "109:             });",
          "110:             this.selectui.hide();",
          "111:             this.setup_select_file();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:             this.selectui.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "231:                     visible      : false,",
          "232:                     render       : true",
          "233:                 });",
          "234:                 node.one('.fp-msg-butok').on('click', function(e) {",
          "235:                     e.preventDefault();",
          "236:                     this.msg_dlg.hide();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:                 this.msg_dlg.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "297:                             visible      : false,",
          "298:                             render       : true",
          "299:                         });",
          "300:                         node.one('.fp-dlg-butcreate').on('click', perform_action, this);",
          "301:                         node.one('input').set('id', 'fm-newname-'+this.client_id).",
          "302:                             on('keydown', function(e){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:                         this.mkdir_dialog.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "",
          "---------------"
        ],
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:                 case 'core_filepicker':",
          "440:                     $module = array('name'     => 'core_filepicker',",
          "441:                                     'fullpath' => '/repository/filepicker.js',",
          "460:                                                         array('fileexistsdialogheader', 'repository'), array('fileexistsdialog_editor', 'repository'),",
          "463:                                                     ));",
          "464:                     break;",
          "465:                 case 'core_comment':",
          "",
          "[Removed Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-menu', 'yui2-treeview', 'yui2-dragdrop', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'moodle-core_filepicker'),",
          "444:                                     'strings'  => array(array('add', 'repository'), array('back', 'repository'), array('cancel', 'moodle'), array('close', 'repository'),",
          "445:                                                         array('cleancache', 'repository'), array('copying', 'repository'), array('date', 'repository'), array('downloadsucc', 'repository'),",
          "446:                                                         array('emptylist', 'repository'), array('error', 'repository'), array('federatedsearch', 'repository'),",
          "447:                                                         array('filenotnull', 'repository'), array('getfile', 'repository'), array('help', 'moodle'), array('iconview', 'repository'),",
          "448:                                                         array('invalidjson', 'repository'), array('linkexternal', 'repository'), array('listview', 'repository'), array('detailview', 'repository'),",
          "449:                                                         array('loading', 'repository'), array('login', 'repository'), array('logout', 'repository'), array('noenter', 'repository'),",
          "450:                                                         array('noresult', 'repository'), array('manageurl', 'repository'), array('popup', 'repository'), array('preview', 'repository'),",
          "451:                                                         array('refresh', 'repository'), array('save', 'repository'), array('saveas', 'repository'), array('saved', 'repository'),",
          "452:                                                         array('saving', 'repository'), array('search', 'repository'), array('searching', 'repository'), array('size', 'repository'),",
          "453:                                                         array('submit', 'repository'), array('sync', 'repository'), array('title', 'repository'), array('upload', 'repository'),",
          "454:                                                         array('uploading', 'repository'), array('xhtmlerror', 'repository'),",
          "455:                                                         array('cancel'), array('chooselicense', 'repository'), array('author', 'repository'),array('next', 'moodle'),",
          "456:                                                         array('ok', 'moodle'), array('error', 'moodle'), array('info', 'moodle'), array('norepositoriesavailable', 'repository'), array('norepositoriesexternalavailable', 'repository'),",
          "457:                                                         array('attachment', 'repository'), array('nofilesattached', 'repository'), array('filepicker', 'repository'),",
          "458:                                                         array('nofilesavailable', 'repository'), array('overwrite', 'repository'),",
          "459:                                                         array('renameto', 'repository'), array('fileexists', 'repository'),",
          "461:                                                         array('fileexistsdialog_filemanager', 'repository'), array('uselatestfile', 'repository')",
          "462:                                                         array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository')",
          "",
          "[Added Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'moodle-core_filepicker'),",
          "443:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
          "444:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
          "445:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
          "446:                                                         array('nofilesavailable', 'repository'), array('norepositoriesavailable', 'repository'),",
          "448:                                                         array('fileexistsdialog_filemanager', 'repository'), array('renameto', 'repository')",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "385:     }",
          "386: }, '@VERSION@', {",
          "388: });",
          "390: M.core_filepicker = M.core_filepicker || {};",
          "",
          "[Removed Lines]",
          "387:     requires:['base','node'] // TODO TreeView, Table, etc.",
          "",
          "[Added Lines]",
          "387:     requires:['base', 'node', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort']",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5e11746696099345f44062e84c61ae47793bc2bb",
      "candidate_info": {
        "commit_hash": "5e11746696099345f44062e84c61ae47793bc2bb",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5e11746696099345f44062e84c61ae47793bc2bb",
        "files": [
          "files/renderer.php",
          "lib/form/filemanager.js",
          "repository/filepicker.js",
          "theme/base/style/filemanager.css"
        ],
        "message": "MDL-33218 fixing filemanager/filepicker look in IE\n\nnow all YUI dialogues are under the div with id #filesskin. This way we can avoid using !important in CSS and use #filesskin instead. It will have priority over YUI skin in all browswers including IE (!important does not work in IE).\n\nConflicts:\n\n\tfiles/renderer.php\n\ttheme/base/style/filemanager.css",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/filepicker.js||repository/filepicker.js",
          "theme/base/style/filemanager.css||theme/base/style/filemanager.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "303:     private function fm_js_template_mkdir() {",
          "304:         $rv = '",
          "306:     <div class=\"fp-mkdir-dlg-text\">New folder name:<br/><input type=\"text\" /></div>",
          "307:     <a class=\"{!}fp-dlg-butcreate fp-panel-button\" href=\"#\">'.get_string('create').'</a>",
          "308:     <a class=\"{!}fp-dlg-butcancel fp-panel-button\" href=\"#\">'.get_string('cancel').'</a>",
          "",
          "[Removed Lines]",
          "305: <div class=\"fp-mkdir-dlg\">",
          "",
          "[Added Lines]",
          "305: <div class=\"filemanager fp-mkdir-dlg\">",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:                 this.pathbar.removeChild(this.pathnode);",
          "101:             }",
          "104:             this.selectnode.generateID();",
          "106:             this.selectui = new Y.Panel({",
          "107:                 srcNode      : this.selectnode,",
          "108:                 zIndex       : 600000,",
          "",
          "[Removed Lines]",
          "103:             this.selectnode = Y.Node.create(M.form_filemanager.templates.fileselectlayout);",
          "105:             Y.one(document.body).appendChild(this.selectnode);",
          "",
          "[Added Lines]",
          "103:             this.selectnode = Y.Node.createWithFilesSkin(M.form_filemanager.templates.fileselectlayout);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:                 header = M.str.moodle.info;",
          "235:             }",
          "236:             if (!this.msg_dlg) {",
          "240:                 this.msg_dlg = new Y.Panel({",
          "242:                     zIndex       : 800000,",
          "243:                     centered     : true,",
          "244:                     modal        : true,",
          "245:                     visible      : false,",
          "246:                     render       : true",
          "247:                 });",
          "250:                     e.preventDefault();",
          "251:                     this.msg_dlg.hide();",
          "252:                 }, this);",
          "253:             }",
          "255:             this.msg_dlg.set('headerContent', header);",
          "258:             this.msg_dlg.show();",
          "259:         },",
          "260:         setup_buttons: function() {",
          "",
          "[Removed Lines]",
          "237:                 var node = Y.Node.create(M.form_filemanager.templates.message);",
          "238:                 this.filemanager.appendChild(node);",
          "241:                     srcNode      : node,",
          "248:                 this.msg_dlg.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "249:                 node.one('.fp-msg-butok').on('click', function(e) {",
          "256:             this.filemanager.one('.fp-msg').removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "257:             this.filemanager.one('.fp-msg .fp-msg-text').setContent(msg);",
          "",
          "[Added Lines]",
          "236:                 this.msg_dlg_node = Y.Node.createWithFilesSkin(M.form_filemanager.templates.message);",
          "237:                 var nodeid = this.msg_dlg_node.generateID();",
          "240:                     srcNode      : this.msg_dlg_node,",
          "247:                 this.msg_dlg.plug(Y.Plugin.Drag,{handles:['#'+nodeid+' .yui3-widget-hd']});",
          "248:                 this.msg_dlg_node.one('.fp-msg-butok').on('click', function(e) {",
          "255:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "256:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:                         });",
          "303:                     }",
          "304:                     if (!this.mkdir_dialog) {",
          "307:                         this.mkdir_dialog = new Y.Panel({",
          "308:                             srcNode      : node,",
          "309:                             zIndex       : 800000,",
          "",
          "[Removed Lines]",
          "305:                         var node = Y.Node.create(M.form_filemanager.templates.mkdir);",
          "306:                         this.filemanager.appendChild(node);",
          "",
          "[Added Lines]",
          "304:                         var node = Y.Node.createWithFilesSkin(M.form_filemanager.templates.mkdir);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "679:         show_confirm_dialog: function(dialog_options) {",
          "681:             if (!this.confirm_dlg) {",
          "683:                 var node = this.confirm_dlg_node;",
          "684:                 node.generateID();",
          "686:                 this.confirm_dlg = new Y.Panel({",
          "687:                     srcNode      : node,",
          "688:                     zIndex       : 800000,",
          "",
          "[Removed Lines]",
          "682:                 this.confirm_dlg_node = Y.Node.create(M.form_filemanager.templates.confirmdialog);",
          "685:                 Y.one(document.body).appendChild(node);",
          "",
          "[Added Lines]",
          "680:                 this.confirm_dlg_node = Y.Node.createWithFilesSkin(M.form_filemanager.templates.confirmdialog);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "867:             this.selectui.fileinfo = node;",
          "868:             selectnode.one('.fp-saveas input').set('value', node.fullname);",
          "869:             var foldername = this.get_parent_folder_name(node);",
          "871:             selectnode.all('.fp-license select option[selected]').set('selected', false);",
          "872:             selectnode.all('.fp-license select option[value='+node.license+']').set('selected', true);",
          "873:             selectnode.all('.fp-path select option[selected]').set('selected', false);",
          "",
          "[Removed Lines]",
          "870:             selectnode.all('.fp-author input').set('value', node.author);",
          "",
          "[Added Lines]",
          "867:             selectnode.all('.fp-author input').set('value', node.author ? node.author : '');",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "443:         }",
          "445:     }",
          "446: }, '@VERSION@', {",
          "447:     requires:['base', 'node', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort']",
          "448: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "451:     Y.Node.createWithFilesSkin = function(node) {",
          "452:         if (!Y.one('#filesskin')) {",
          "453:             Y.one(document.body).appendChild(Y.Node.create('<div/>').set('id', 'filesskin'));",
          "454:         }",
          "455:         return Y.one('#filesskin').appendChild(Y.Node.create(node));",
          "456:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "692:                 this.selectui.hide();",
          "693:             }",
          "694:             if (!this.process_dlg) {",
          "696:                 var node = this.process_dlg_node;",
          "697:                 node.generateID();",
          "699:                 this.process_dlg = new Y.Panel({",
          "700:                     srcNode      : node,",
          "701:                     headerContent: M.str.repository.fileexistsdialogheader,",
          "",
          "[Removed Lines]",
          "695:                 this.process_dlg_node = Y.Node.create(M.core_filepicker.templates.processexistingfile);",
          "698:                 Y.one(document.body).appendChild(node);",
          "",
          "[Added Lines]",
          "706:                 this.process_dlg_node = Y.Node.createWithFilesSkin(M.core_filepicker.templates.processexistingfile);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "736:                 header = M.str.moodle.info;",
          "737:             }",
          "738:             if (!this.msg_dlg) {",
          "740:                 this.msg_dlg_node.generateID();",
          "743:                 this.msg_dlg = new Y.Panel({",
          "744:                     srcNode      : this.msg_dlg_node,",
          "",
          "[Removed Lines]",
          "739:                 this.msg_dlg_node = Y.Node.create(M.core_filepicker.templates.message);",
          "741:                 Y.one(document.body).appendChild(this.msg_dlg_node);",
          "",
          "[Added Lines]",
          "749:                 this.msg_dlg_node = Y.Node.createWithFilesSkin(M.core_filepicker.templates.message);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1215:         },",
          "1216:         render: function() {",
          "1217:             var client_id = this.options.client_id;",
          "1219:                 set('id', 'filepicker-'+client_id);",
          "1222:             this.mainui = new Y.Panel({",
          "1223:                 srcNode      : this.fpnode,",
          "1224:                 headerContent: M.str.repository.filepicker,",
          "",
          "[Removed Lines]",
          "1218:             this.fpnode = Y.Node.create(M.core_filepicker.templates.generallayout).",
          "1220:             this.selectnode = Y.Node.create(M.core_filepicker.templates.selectlayout);",
          "1221:             Y.one(document.body).appendChild(this.fpnode);",
          "",
          "[Added Lines]",
          "1227:             this.fpnode = Y.Node.createWithFilesSkin(M.core_filepicker.templates.generallayout).",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1239:                 this.mainui.set('y', 0);",
          "1240:             }",
          "1243:                 set('id', 'filepicker-select-'+client_id);",
          "1245:             this.selectui = new Y.Panel({",
          "1246:                 srcNode      : this.selectnode,",
          "1247:                 zIndex       : 600000,",
          "",
          "[Removed Lines]",
          "1242:             this.selectnode = Y.Node.create(M.core_filepicker.templates.selectlayout).",
          "1244:             Y.one(document.body).appendChild(this.selectnode);",
          "",
          "[Added Lines]",
          "1249:             this.selectnode = Y.Node.createWithFilesSkin(M.core_filepicker.templates.selectlayout).",
          "",
          "---------------"
        ],
        "theme/base/style/filemanager.css||theme/base/style/filemanager.css": [
          "File: theme/base/style/filemanager.css -> theme/base/style/filemanager.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "320: .filemanager .fp-mkdir-dlg {text-align: center;}",
          "321: .filemanager .fp-mkdir-dlg .fp-mkdir-dlg-text {text-align: left;margin: 40px 20px 20px;}",
          "",
          "[Added Lines]",
          "320: .filemanager.fp-mkdir-dlg {text-align: center;}",
          "321: .filemanager.fp-mkdir-dlg .fp-mkdir-dlg-text {text-align: left;margin: 40px 20px 20px;}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a0d7194f7dc30cc26f810b4d0306cbbc311cdc8",
      "candidate_info": {
        "commit_hash": "6a0d7194f7dc30cc26f810b4d0306cbbc311cdc8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6a0d7194f7dc30cc26f810b4d0306cbbc311cdc8",
        "files": [
          "lib/form/filemanager.js",
          "repository/filepicker.js"
        ],
        "message": "MDL-31901: filemanager/picker.js - match coding style\n\n* No inline ifs\n* Spacing between ternary operators\n* Missing ;'s",
        "before_after_code_files": [
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/filepicker.js||repository/filepicker.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:             }",
          "194:         },",
          "195:         check_buttons: function() {",
          "201:         },",
          "202:         refresh: function(filepath) {",
          "203:             var scope = this;",
          "",
          "[Removed Lines]",
          "196:             if (this.filecount>0) {this.filemanager.removeClass('fm-nofiles');}",
          "197:             else {this.filemanager.addClass('fm-nofiles');}",
          "198:             if (this.filecount >= this.maxfiles && this.maxfiles!=-1)",
          "199:                 {this.filemanager.addClass('fm-maxfiles');}",
          "200:             else {this.filemanager.removeClass('fm-maxfiles');}",
          "",
          "[Added Lines]",
          "196:             if (this.filecount>0) {",
          "197:                 this.filemanager.removeClass('fm-nofiles');",
          "198:             } else {",
          "199:                 this.filemanager.addClass('fm-nofiles');",
          "200:             }",
          "201:             if (this.filecount >= this.maxfiles && this.maxfiles!=-1) {",
          "202:                 this.filemanager.addClass('fm-maxfiles');",
          "203:             }",
          "204:             else {",
          "205:                 this.filemanager.removeClass('fm-maxfiles');",
          "206:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "372:                 for(var i = 0; i < p.length; i++) {",
          "373:                     var el = this.pathnode.cloneNode(true);",
          "374:                     this.pathbar.appendChild(el);",
          "378:                     el.one('.fp-path-folder-name').setContent(p[i].name).",
          "379:                         on('click', function(e, path) {",
          "380:                             e.preventDefault();",
          "",
          "[Removed Lines]",
          "375:                     if (i == 0) {el.addClass('first');}",
          "376:                     if (i == p.length-1) {el.addClass('last');}",
          "377:                     if (i%2) {el.addClass('even');} else {el.addClass('odd');}",
          "",
          "[Added Lines]",
          "382:                     if (i == 0) {",
          "383:                         el.addClass('first');",
          "384:                     }",
          "385:                     if (i == p.length-1) {",
          "386:                         el.addClass('last');",
          "387:                     }",
          "389:                     if (i%2) {",
          "390:                         el.addClass('even');",
          "391:                     } else {",
          "392:                         el.addClass('odd');",
          "393:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "420:                         scope.currentpath = node.path?node.path:'/';",
          "421:                     }",
          "422:                     node.highlight(false);",
          "425:                     node.children = [];",
          "426:                     for(k in list) {",
          "427:                         if (list[k].type == 'folder' && retrieved_children[list[k].filepath]) {",
          "",
          "[Removed Lines]",
          "423:                     node.origlist = obj.list?obj.list:null;",
          "424:                     node.origpath = obj.path?obj.path:null;",
          "",
          "[Added Lines]",
          "439:                     node.origlist = obj.list ? obj.list : null;",
          "440:                     node.origpath = obj.path ? obj.path : null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "546:                     }",
          "547:                 };",
          "548:             }",
          "550:             this.filemanager.one('.fp-content').fp_display_filelist(options, list, this.lazyloading);",
          "551:             this.content_scrolled();",
          "552:         },",
          "553:         populate_licenses_select: function(node) {",
          "555:             node.setContent('');",
          "556:             var licenses = this.options.licenses;",
          "557:             for (var i in licenses) {",
          "",
          "[Removed Lines]",
          "549:             if (!this.lazyloading) {this.lazyloading={};}",
          "554:             if (!node) {return;}",
          "",
          "[Added Lines]",
          "565:             if (!this.lazyloading) {",
          "566:                 this.lazyloading={};",
          "567:             }",
          "572:             if (!node) {",
          "573:                 return;",
          "574:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "674:                     buttons      : {}",
          "675:                 });",
          "676:                 this.confirm_dlg.plug(Y.Plugin.Drag,{handles:['#'+node.get('id')+' .yui3-widget-hd']});",
          "678:                     var dlgopt = this.confirm_dlg.dlgopt;",
          "679:                     ev.preventDefault();",
          "680:                     this.confirm_dlg.hide();",
          "",
          "[Removed Lines]",
          "677:                 var handleConfirm = function(ev) {",
          "",
          "[Added Lines]",
          "697:                 var handle_confirm = function(ev) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "686:                         }",
          "687:                     }",
          "688:                 }",
          "690:                     ev.preventDefault();",
          "691:                     this.confirm_dlg.hide();",
          "692:                 }",
          "695:             }",
          "696:             this.confirm_dlg.dlgopt = dialog_options;",
          "697:             this.confirm_dlg_node.one('.fp-dlg-text').setContent(dialog_options.message);",
          "",
          "[Removed Lines]",
          "689:                 var handleCancel = function(ev) {",
          "693:                 node.one('.fp-dlg-butconfirm').on('click', handleConfirm, this);",
          "694:                 node.one('.fp-dlg-butcancel').on('click', handleCancel, this);",
          "",
          "[Added Lines]",
          "709:                 var handle_cancel = function(ev) {",
          "713:                 node.one('.fp-dlg-butconfirm').on('click', handle_confirm, this);",
          "714:                 node.one('.fp-dlg-butcancel').on('click', handle_cancel, this);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "823:             }, this);",
          "824:         },",
          "825:         get_parent_folder_name: function(node) {",
          "827:             var basedir = node.filepath.substr(0, node.filepath.length - node.fullname.length - 1);",
          "828:             var lastdir = node.filepath.substr(node.filepath.length - node.fullname.length - 2);",
          "830:             return node.filepath;",
          "831:         },",
          "832:         select_file: function(node) {",
          "833:             var selectnode = this.selectnode;",
          "834:             selectnode.removeClass('loading').removeClass('fp-folder').",
          "835:                 removeClass('fp-file').removeClass('fp-zip').removeClass('fp-cansetmain');",
          "838:             if (this.enablemainfile && (node.sortorder != 1) && node.type == 'file') {",
          "839:                 selectnode.addClass('fp-cansetmain');",
          "840:             }",
          "",
          "[Removed Lines]",
          "826:             if (node.type != 'folder' || node.filepath.length < node.fullname.length+1) { return node.filepath; }",
          "829:             if (lastdir == '/' + node.fullname + '/') { return basedir; }",
          "836:             if (node.type == 'folder' || node.type == 'zip') {selectnode.addClass('fp-'+node.type);}",
          "837:             else {selectnode.addClass('fp-file');}",
          "",
          "[Added Lines]",
          "846:             if (node.type != 'folder' || node.filepath.length < node.fullname.length+1) {",
          "847:                 return node.filepath;",
          "848:             }",
          "851:             if (lastdir == '/' + node.fullname + '/') {",
          "852:                 return basedir;",
          "853:             }",
          "860:             if (node.type == 'folder' || node.type == 'zip') {",
          "861:                 selectnode.addClass('fp-'+node.type);",
          "862:             } else {",
          "863:                 selectnode.addClass('fp-file');",
          "864:             }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "846:             selectnode.all('.fp-license select option[value='+node.license+']').set('selected', true);",
          "847:             selectnode.all('.fp-path select option[selected]').set('selected', false);",
          "848:             selectnode.all('.fp-path select option').each(function(el){",
          "850:             });",
          "851:             selectnode.all('.fp-author input, .fp-license select').set('disabled',(node.type == 'folder')?'disabled':'');",
          "",
          "[Removed Lines]",
          "849:                 if (el.get('value') == foldername) {el.set('selected', true);}",
          "",
          "[Added Lines]",
          "876:                 if (el.get('value') == foldername) {",
          "877:                     el.set('selected', true);",
          "878:                 }",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:         }",
          "253:         var sortFoldersFirst = function(a, b, desc) {",
          "257:             return (aa > bb) ? dir : ((aa < bb) ? -dir : 0);",
          "258:         }",
          "",
          "[Removed Lines]",
          "254:             if (a.get('isfolder') && !b.get('isfolder')) {return -1;}",
          "255:             if (!a.get('isfolder') && b.get('isfolder')) {return 1;}",
          "256:             var aa = a.get(this.key), bb = b.get(this.key), dir = desc?-1:1;",
          "",
          "[Added Lines]",
          "254:             if (a.get('isfolder') && !b.get('isfolder')) {",
          "255:                 return -1;",
          "256:             }",
          "257:             if (!a.get('isfolder') && b.get('isfolder')) {",
          "258:                 return 1;",
          "259:             }",
          "260:             var aa = a.get(this.key), bb = b.get(this.key), dir = desc ? -1 : 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "455:         },",
          "457:         request: function(args, redraw) {",
          "459:             var params = {};",
          "461:             params['repo_id']=args.repository_id;",
          "462:             params['p'] = args.path?args.path:'';",
          "463:             params['page'] = args.page?args.page:'';",
          "",
          "[Removed Lines]",
          "458:             var api = (args.api?args.api:this.api) + '?action='+args.action;",
          "460:             var scope = args['scope']?args['scope']:this;",
          "",
          "[Added Lines]",
          "462:             var api = (args.api ? args.api : this.api) + '?action='+args.action;",
          "464:             var scope = args['scope'] ? args['scope'] : this;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "733:         },",
          "734:         content_scrolled: function(e) {",
          "735:             setTimeout(Y.bind(function() {",
          "737:                 this.processingimages = true;",
          "738:                 var scope = this,",
          "739:                     fpcontent = this.fpnode.one('.fp-content'),",
          "",
          "[Removed Lines]",
          "736:                 if (this.processingimages) {return;}",
          "",
          "[Added Lines]",
          "740:                 if (this.processingimages) {",
          "741:                     return;",
          "742:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "789:                         scope.parse_repository_options(obj);",
          "790:                     }",
          "791:                     node.highlight(false);",
          "794:                     node.children = [];",
          "795:                     for(k in list) {",
          "796:                         if (list[k].children && retrieved_children[list[k].path]) {",
          "",
          "[Removed Lines]",
          "792:                     node.origlist = obj.list?obj.list:null;",
          "793:                     node.origpath = obj.path?obj.path:null;",
          "",
          "[Added Lines]",
          "798:                     node.origlist = obj.list ? obj.list : null;",
          "799:                     node.origpath = obj.path ? obj.path : null;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "872:                 filenode : element_template,",
          "873:                 callbackcontext : this,",
          "874:                 callback : function(e, node) {",
          "876:                     if(node.children) {",
          "877:                         if (this.active_repo.dynload) {",
          "878:                             this.list({'path':node.path});",
          "",
          "[Removed Lines]",
          "875:                     if (e.preventDefault) {e.preventDefault();}",
          "",
          "[Added Lines]",
          "881:                     if (e.preventDefault) {",
          "882:                         e.preventDefault();",
          "883:                     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "990:             for (var linktype in filelink) {",
          "991:                 var el = selectnode.one('.fp-linktype-'+linktype);",
          "992:                 el.addClassIf('uneditable', !(filelink[linktype] && filelinkcount>1));",
          "994:                     set('checked', (firstfilelink == linktype) ? 'checked' : '').simulate('change')",
          "995:             }",
          "999:             this.set_selected_license(selectnode.one('.fp-setlicense'), args.license);",
          "1000:             selectnode.one('form #filesource-'+client_id).set('value', args.source);",
          "",
          "[Removed Lines]",
          "993:                 el.one('input').set('disabled', (filelink[linktype] && filelinkcount>1)?'':'disabled').",
          "998:             selectnode.one('.fp-setauthor input').set('value', args.author?args.author:this.options.author);",
          "",
          "[Added Lines]",
          "1001:                 el.one('input').set('disabled', (filelink[linktype] && filelinkcount>1) ? '' : 'disabled').",
          "1006:             selectnode.one('.fp-setauthor input').set('value', args.author ? args.author : this.options.author);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1046:                 if (license) {",
          "1047:                     params['license'] = license.get('value');",
          "1048:                     var origlicense = selectnode.one('.fp-license .fp-value');",
          "1050:                     var newlicenseval = license.get('value');",
          "1051:                     if (newlicenseval && this.options.licenses[newlicenseval] != origlicense) {",
          "1052:                         Y.Cookie.set('recentlicense', newlicenseval);",
          "",
          "[Removed Lines]",
          "1049:                     if (origlicense) { origlicense = origlicense.getContent(); }",
          "",
          "[Added Lines]",
          "1057:                     if (origlicense) {",
          "1058:                         origlicense = origlicense.getContent();",
          "1059:                     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1167:             this.mainui.plug(Y.Plugin.Drag,{handles:['#filepicker-'+client_id+' .yui3-widget-hd']});",
          "1168:             this.mainui.show();",
          "1171:             this.selectnode = Y.Node.create(M.core_filepicker.templates.selectlayout).",
          "1172:                 set('id', 'filepicker-select-'+client_id);",
          "",
          "[Removed Lines]",
          "1169:             if (this.mainui.get('y')<0) {this.mainui.set('y', 0);}",
          "",
          "[Added Lines]",
          "1179:             if (this.mainui.get('y') < 0) {",
          "1180:                 this.mainui.set('y', 0);",
          "1181:             }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1204:             for (var i in this.options.repositories) {",
          "1206:             }",
          "1210:             var reponode = this.fpnode.one('.fp-repo');",
          "",
          "[Removed Lines]",
          "1203:             var sorted_repositories = []",
          "1205:                 sorted_repositories[i] = this.options.repositories[i]",
          "1207:             sorted_repositories.sort(function(a,b){return a.sortorder-b.sortorder})",
          "",
          "[Added Lines]",
          "1215:             var sorted_repositories = [];",
          "1217:                 sorted_repositories[i] = this.options.repositories[i];",
          "1219:             sorted_repositories.sort(function(a,b){return a.sortorder-b.sortorder});",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1212:                 var list = reponode.get('parentNode');",
          "1213:                 list.removeChild(reponode);",
          "1214:                 for (i in sorted_repositories) {",
          "1216:                     var node = reponode.cloneNode(true);",
          "1217:                     list.appendChild(node);",
          "1218:                     node.",
          "",
          "[Removed Lines]",
          "1215:                     var repository = sorted_repositories[i]",
          "",
          "[Added Lines]",
          "1227:                     var repository = sorted_repositories[i];",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1223:                             this.hide_header();",
          "1224:                             this.list({'repo_id':repository_id});",
          "1225:                         }, this /*handler running scope*/, repository.id/*second argument of handler*/);",
          "1231:                 }",
          "1232:             }",
          "",
          "[Removed Lines]",
          "1226:                     node.one('.fp-repo-name').setContent(repository.name)",
          "1227:                     node.one('.fp-repo-icon').set('src', repository.icon)",
          "1228:                     if (i==0) {node.addClass('first');}",
          "1229:                     if (i==sorted_repositories.length-1) {node.addClass('last');}",
          "1230:                     if (i%2) {node.addClass('even');} else {node.addClass('odd');}",
          "",
          "[Added Lines]",
          "1238:                     node.one('.fp-repo-name').setContent(repository.name);",
          "1239:                     node.one('.fp-repo-icon').set('src', repository.icon);",
          "1240:                     if (i==0) {",
          "1241:                         node.addClass('first');",
          "1242:                     }",
          "1243:                     if (i==sorted_repositories.length-1) {",
          "1244:                         node.addClass('last');",
          "1245:                     }",
          "1246:                     if (i%2) {",
          "1247:                         node.addClass('even');",
          "1248:                     } else {",
          "1249:                         node.addClass('odd');",
          "1250:                     }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1240:         parse_repository_options: function(data, appendtolist) {",
          "1241:             if (appendtolist) {",
          "1242:                 if (data.list) {",
          "1244:                     for (var i in data.list) {",
          "1245:                         this.filelist[this.filelist.length] = data.list[i];",
          "1246:                     }",
          "",
          "[Removed Lines]",
          "1243:                     if (!this.filelist) { this.filelist = []; }",
          "",
          "[Added Lines]",
          "1263:                     if (!this.filelist) {",
          "1264:                         this.filelist = [];",
          "1265:                     }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1252:             this.filepath = data.path?data.path:null;",
          "1253:             this.objecttag = data.object?data.object:null;",
          "1254:             this.active_repo = {};",
          "1256:             this.active_repo.dynload = data.dynload?data.dynload:false;",
          "1257:             this.active_repo.pages = Number(data.pages?data.pages:null);",
          "1258:             this.active_repo.page = Number(data.page?data.page:null);",
          "",
          "[Removed Lines]",
          "1255:             this.active_repo.issearchresult = data.issearchresult?true:false;",
          "",
          "[Added Lines]",
          "1277:             this.active_repo.issearchresult = data.issearchresult ? true : false;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1291:             for (var i in templates) {",
          "1292:                 if (templates[i]) {",
          "1293:                     container = templates[i].get('parentNode');",
          "1295:                 }",
          "1296:             }",
          "",
          "[Removed Lines]",
          "1294:                     container.removeChild(templates[i])",
          "",
          "[Added Lines]",
          "1316:                     container.removeChild(templates[i]);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1318:                     }, this);",
          "1319:                     loginform_node.all('.fp-login-submit').remove();",
          "1320:                     action = 'popup';",
          "1324:                     node.one('textarea').setAttrs({id:l[k].id, name:l[k].name});",
          "1328:                     node.one('select').setAttrs({id:l[k].id, name:l[k].name}).setContent('');",
          "1329:                     for (i in l[k].options) {",
          "1330:                         node.one('select').appendChild(",
          "1331:                             Y.Node.create('<option/>').",
          "1332:                                 set('value', l[k].options[i].value).",
          "1334:                     }",
          "1337:                     node.all('label').setContent(l[k].label);",
          "1338:                     var list = l[k].value.split('|');",
          "",
          "[Removed Lines]",
          "1321:                 }else if(l[k].type=='textarea') {",
          "1323:                     if (node.one('label')) { node.one('label').set('for', l[k].id).setContent(l[k].label) }",
          "1325:                 }else if(l[k].type=='select') {",
          "1327:                     if (node.one('label')) { node.one('label').set('for', l[k].id).setContent(l[k].label) }",
          "1333:                                 setContent(l[k].options[i].label))",
          "1335:                 }else if(l[k].type=='radio') {",
          "",
          "[Added Lines]",
          "1343:                 } else if(l[k].type=='textarea') {",
          "1345:                     if (node.one('label')) {",
          "1346:                         node.one('label').set('for', l[k].id).setContent(l[k].label);",
          "1347:                     }",
          "1349:                 } else if(l[k].type=='select') {",
          "1351:                     if (node.one('label')) {",
          "1352:                         node.one('label').set('for', l[k].id).setContent(l[k].label);",
          "1353:                     }",
          "1359:                                 setContent(l[k].options[i].label));",
          "1361:                 } else if(l[k].type=='radio') {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1355:                     if (radionode == null) {",
          "1356:                         node.one('.fp-login-radio').remove();",
          "1357:                     }",
          "1360:                     if (node.one('label')) { node.one('label').set('for', l[k].id).setContent(l[k].label) }",
          "1361:                     node.one('input').",
          "",
          "[Removed Lines]",
          "1358:                 }else {",
          "",
          "[Added Lines]",
          "1384:                 } else {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1665:             enable_tb_control(toolbar.one('.fp-tb-logout'), !r.nologin);",
          "1668:                 toolbar.one('.fp-tb-logout').one('a,button').setContent(label)",
          "1669:             }",
          "",
          "[Removed Lines]",
          "1666:             if(!r.nologin) {",
          "1667:                 var label = r.logouttext?r.logouttext:M.str.repository.logout;",
          "",
          "[Added Lines]",
          "1692:             if (!r.nologin) {",
          "1693:                 var label = r.logouttext ? r.logouttext : M.str.repository.logout;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1677:             Y.one('#fp-tb-help-'+client_id+'-link').set('href', r.help);",
          "1678:         },",
          "1679:         print_path: function() {",
          "1681:             this.pathbar.setContent('').addClass('empty');",
          "1682:             var p = this.filepath;",
          "1683:             if (p && p.length!=0 && this.viewmode != 2) {",
          "1684:                 for(var i = 0; i < p.length; i++) {",
          "1685:                     var el = this.pathnode.cloneNode(true);",
          "1686:                     this.pathbar.appendChild(el);",
          "1690:                     el.all('.fp-path-folder-name').setContent(p[i].name);",
          "1691:                     el.on('click',",
          "1692:                             function(e, path) {",
          "",
          "[Removed Lines]",
          "1680:             if (!this.pathbar) { return; }",
          "1687:                     if (i == 0) {el.addClass('first');}",
          "1688:                     if (i == p.length-1) {el.addClass('last');}",
          "1689:                     if (i%2) {el.addClass('even');} else {el.addClass('odd');}",
          "",
          "[Added Lines]",
          "1706:             if (!this.pathbar) {",
          "1707:                 return;",
          "1708:             }",
          "1715:                     if (i == 0) {",
          "1716:                         el.addClass('first');",
          "1717:                     }",
          "1718:                     if (i == p.length-1) {",
          "1719:                         el.addClass('last');",
          "1720:                     }",
          "1721:                     if (i%2) {",
          "1722:                         el.addClass('even');",
          "1723:                     } else {",
          "1724:                         el.addClass('odd');",
          "1725:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a62f7799bb3dd654057af2f49b7e399d914b3b6",
      "candidate_info": {
        "commit_hash": "9a62f7799bb3dd654057af2f49b7e399d914b3b6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/9a62f7799bb3dd654057af2f49b7e399d914b3b6",
        "files": [
          "files/renderer.php",
          "lang/en/repository.php",
          "lib/filelib.php",
          "lib/form/filemanager.js",
          "repository/draftfiles_ajax.php",
          "theme/base/style/filemanager.css"
        ],
        "message": "MDL-32867 Working with external references in filemanager\n\n- Files that are references to external resources have special shortcut icon in filemanager\n- When user selects a REF file in filemanager, he can see the 'Original' of the file in the way that original repository wants to show it, it is loaded dynamically via AJAX request\n- Files that are themselves the source of references of other files in the system have 'link' icon in filemanager. When user tries to remove/rename/overwrite SRC file he is warned that all ## existing references will be updated/converted to copies.\n- Changed confirmation messages for deleting, moving/renaming of the folders\n- confirmation dialog in filemanager is using YUI3 now",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lang/en/repository.php||lang/en/repository.php",
          "lib/filelib.php||lib/filelib.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php",
          "theme/base/style/filemanager.css||theme/base/style/filemanager.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:             'strings' => array(",
          "106:                 array('error', 'moodle'), array('info', 'moodle'), array('confirmdeletefile', 'repository'),",
          "107:                 array('draftareanofiles', 'repository'), array('entername', 'repository'), array('enternewname', 'repository'),",
          "109:             )",
          "110:         );",
          "111:         if (empty($filemanagertemplateloaded)) {",
          "",
          "[Removed Lines]",
          "108:                 array('invalidjson', 'repository'), array('popupblockeddownload', 'repository')",
          "",
          "[Added Lines]",
          "108:                 array('invalidjson', 'repository'), array('popupblockeddownload', 'repository'),",
          "109:                 array('unknownoriginal', 'repository'), array('confirmdeletefolder', 'repository'),",
          "110:                 array('confirmdeletefilewithhref', 'repository'), array('confirmrenamefolder', 'repository'),",
          "111:                 array('confirmrenamefile', 'repository')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:     private function fm_js_template_iconfilename() {",
          "235:         $rv = '<div class=\"fp-file\" style=\"position:relative\">",
          "236:         <a href=\"#\">",
          "237:     <div class=\"{!}fp-thumbnail\"></div>",
          "238:     <div class=\"{!}fp-filename\"></div></a>",
          "239:     <a class=\"{!}fp-contextmenu\" href=\"#\">'.$this->pix_icon('i/menu', '\u25b6').'</a>",
          "240: </div>';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:     <div style=\"position:relative;\">",
          "242:     <div class=\"fp-reficons\"></div>",
          "243:     </div>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "328:     private function fm_js_template_fileselectlayout() {",
          "329:         $rv = '<div class=\"filemanager fp-select\">",
          "330: <div class=\"fp-select-loading\">",
          "331: <img src=\"'.$this->pix_url('i/loading').'\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:         $strloading  = get_string('loading', 'repository');",
          "339:         $icon_progress = $this->pix_icon('i/loading_small', $strloading).'';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "343: <tr class=\"{!}fp-path\"><td class=\"mdl-right\"><label>'.get_string('path', 'moodle').'</label>:</td>",
          "344: <td class=\"mdl-left\"><select></select></td></tr>",
          "345: <tr class=\"{!}fp-original\"><td class=\"mdl-right\"><label>'.get_string('original', 'repository').'</label>:</td>",
          "347: </table>",
          "348: <p><button class=\"{!}fp-file-update\" >'.get_string('update', 'moodle').'</button>",
          "349: <button class=\"{!}fp-file-download\" >'.get_string('download').'</button>",
          "",
          "[Removed Lines]",
          "346: <td class=\"mdl-left\"><span class=\"fp-value\"/></td></tr>",
          "",
          "[Added Lines]",
          "357: <td class=\"mdl-left\"><span class=\"fp-originloading\">'.$icon_progress.' '.$strloading.'</span><span class=\"fp-value\"/></td></tr>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "362:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "363:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "387:     private function fm_js_template_confirmdialog() {",
          "388:         $rv = '<div class=\"fp-dlg\"><div class=\"{!}fp-dlg-text\"></div>",
          "389: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butconfirm\" >'.get_string('ok').'</button></div>",
          "390: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butcancel\" >'.get_string('cancel').'</button></div>",
          "391: </div>';",
          "392:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "393:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "699:     private function fp_js_template_message() {",
          "701:                     <div class=\"{!}fp-msg-text\"></div>",
          "702:                     <div><button class=\"{!}fp-msg-butok\">'.get_string('ok').'</button></div>",
          "703:                 </div>';",
          "",
          "[Removed Lines]",
          "700:         $rv = '<div class=\"{!}fp-msg\">",
          "",
          "[Added Lines]",
          "730:         $rv = '<div class=\"fp-msg\">",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "722:     private function fp_js_template_processexistingfile() {",
          "724: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butoverwrite\" >'.get_string('overwrite', 'repository').'</button></div>",
          "725: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butrename\" /></div>",
          "726: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butcancel\" >'.get_string('cancel').'</button></div>",
          "",
          "[Removed Lines]",
          "723:         $rv = '<div class=\"{!}fp-dlg\"><div class=\"{!}fp-dlg-text\"></div>",
          "",
          "[Added Lines]",
          "752:         $rv = '<div class=\"fp-dlg\"><div class=\"{!}fp-dlg-text\"></div>",
          "",
          "---------------"
        ],
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: $string['configsaved'] = 'Configuration saved!';",
          "64: $string['confirmdelete'] = 'Are you sure you want to delete this repository - {$a}? If you choose \"Continue and download\", file references to external contents will be downloaded to moodle, but it could take long time to process.';",
          "65: $string['confirmdeletefile'] = 'Are you sure you want to delete this file?';",
          "66: $string['confirmremove'] = 'Are you sure you want to remove this repository plugin, its options and <strong>all of its instances</strong> - {$a}? If you choose \"Continue and download\", file references to external contents will be downloaded to moodle, but it could take long time to process.';",
          "67: $string['continueuninstall'] = 'Continue';",
          "68: $string['continueuninstallanddownload'] = 'Continue and download';",
          "69: $string['copying'] = 'Copying';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: $string['confirmrenamefile'] = 'Are you sure you want to rename/move this file? There are {$a} alias/shortcut files that use this file as their source. If you proceed then those aliases will be converted to true copies.';",
          "67: $string['confirmdeletefilewithhref'] = 'Are you sure you want to delete this file? There are {$a} alias/shortcut files that use this file as their source. If you proceed then those aliases will be converted to true copies.';",
          "68: $string['confirmdeletefolder'] = 'Are you sure you want to delete this folder? All files and subfolders will be deleted.';",
          "70: $string['confirmrenamefolder'] = ' Are you sure you want to move/rename this folder? Any alias/shortcut files that reference files in this folder will be converted into true copies.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191: $string['title'] = 'Choose a file...';",
          "192: $string['type'] = 'Type';",
          "193: $string['typenotvisible'] = 'Type not visible';",
          "194: $string['upload'] = 'Upload this file';",
          "195: $string['uploading'] = 'Uploading...';",
          "196: $string['uploadsucc'] = 'The file has been uploaded successfully';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198: $string['unknownoriginal'] = 'Unknown';",
          "",
          "---------------"
        ],
        "lib/filelib.php||lib/filelib.php": [
          "File: lib/filelib.php -> lib/filelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "597:             $item->license = $file->get_license();",
          "598:             $item->datemodified = $file->get_timemodified();",
          "599:             $item->datecreated = $file->get_timecreated();",
          "601:             if ($icon == 'zip') {",
          "602:                 $item->type = 'zip';",
          "603:             } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "600:             $item->isref = $file->is_external_file();",
          "601:             $item->refcount = $fs->get_reference_count($file);",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:                     if (node.filename || node.filepath || (node.path && node.path != '/')) {",
          "492:                         classname = classname + ' fp-hascontextmenu';",
          "493:                     }",
          "494:                     if (node.sortorder == 1) { classname = classname + ' fp-mainfile';}",
          "495:                     return Y.Lang.trim(classname);",
          "496:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494:                     if (node.isref) {",
          "495:                         classname = classname + ' fp-isreference';",
          "496:                     }",
          "497:                     if (node.refcount) {",
          "498:                         classname = classname + ' fp-hasreferences';",
          "499:                     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:                     set('value', list[i]).setContent(list[i]))",
          "555:             }",
          "556:         },",
          "558:             var selectnode = this.selectnode;",
          "559:             var fileinfo = this.selectui.fileinfo;",
          "",
          "[Removed Lines]",
          "557:         update_file: function() {",
          "",
          "[Added Lines]",
          "563:         update_file: function(confirmed) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "572:             var licensechanged = (newlicense != fileinfo.license);",
          "574:             var params, action;",
          "575:             if (fileinfo.type == 'folder') {",
          "576:                 if (!newfilename) {",
          "577:                     this.print_msg(M.str.repository.entername, 'error');",
          "578:                     return;",
          "579:                 }",
          "580:                 if (filenamechanged || filepathchanged) {",
          "581:                     params = {filepath:fileinfo.filepath, newdirname:newfilename, newfilepath:targetpath};",
          "582:                     action = 'updatedir';",
          "583:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "581:             var dialog_options = {callback:this.update_file, callbackargs:[true], scope:this};",
          "588:                     if (!confirmed) {",
          "589:                         dialog_options.message = M.str.repository.confirmrenamefolder;",
          "590:                         this.show_confirm_dialog(dialog_options);",
          "591:                         return;",
          "592:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "586:                     this.print_msg(M.str.repository.enternewname, 'error');",
          "587:                     return;",
          "588:                 }",
          "589:                 if (filenamechanged || filepathchanged || licensechanged || authorchanged) {",
          "590:                     params = {filepath:fileinfo.filepath, filename:fileinfo.fullname,",
          "591:                         newfilename:newfilename, newfilepath:targetpath,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "601:                 if ((filenamechanged || filepathchanged) && !confirmed && fileinfo.refcount) {",
          "602:                     dialog_options.message = M.util.get_string('confirmrenamefile', 'repository', fileinfo.refcount);",
          "603:                     this.show_confirm_dialog(dialog_options);",
          "604:                     return;",
          "605:                 }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "617:                 }",
          "618:             });",
          "619:         },",
          "620:         setup_select_file: function() {",
          "621:             var selectnode = this.selectnode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "641:         show_confirm_dialog: function(dialog_options) {",
          "643:             if (!this.confirm_dlg) {",
          "644:                 this.confirm_dlg_node = Y.Node.create(M.form_filemanager.templates.confirmdialog);",
          "645:                 var node = this.confirm_dlg_node;",
          "646:                 node.generateID();",
          "647:                 Y.one(document.body).appendChild(node);",
          "648:                 this.confirm_dlg = new Y.Panel({",
          "649:                     srcNode      : node,",
          "650:                     zIndex       : 800000,",
          "651:                     centered     : true,",
          "652:                     modal        : true,",
          "653:                     visible      : false,",
          "654:                     render       : true,",
          "655:                     buttons      : {}",
          "656:                 });",
          "657:                 this.confirm_dlg.plug(Y.Plugin.Drag,{handles:['#'+node.get('id')+' .yui3-widget-hd']});",
          "658:                 var handleConfirm = function(ev) {",
          "659:                     var dlgopt = this.confirm_dlg.dlgopt;",
          "660:                     ev.preventDefault();",
          "661:                     this.confirm_dlg.hide();",
          "662:                     if (dlgopt.callback) {",
          "663:                         if (dlgopt.callbackargs) {",
          "664:                             dlgopt.callback.apply(dlgopt.scope || this, dlgopt.callbackargs);",
          "665:                         } else {",
          "666:                             dlgopt.callback.apply(dlgopt.scope || this);",
          "667:                         }",
          "668:                     }",
          "669:                 }",
          "670:                 var handleCancel = function(ev) {",
          "671:                     ev.preventDefault();",
          "672:                     this.confirm_dlg.hide();",
          "673:                 }",
          "674:                 node.one('.fp-dlg-butconfirm').on('click', handleConfirm, this);",
          "675:                 node.one('.fp-dlg-butcancel').on('click', handleCancel, this);",
          "676:             }",
          "677:             this.confirm_dlg.dlgopt = dialog_options;",
          "678:             this.confirm_dlg_node.one('.fp-dlg-text').setContent(dialog_options.message);",
          "679:             this.confirm_dlg.show();",
          "680:         },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "639:                 e.preventDefault();",
          "640:                 var dialog_options = {};",
          "641:                 var params = {};",
          "643:                 dialog_options.scope = this;",
          "645:                     params.filename = '.';",
          "647:                 } else {",
          "649:                 }",
          "650:                 dialog_options.callbackargs = [params];",
          "651:                 dialog_options.callback = function(params) {",
          "",
          "[Removed Lines]",
          "642:                 dialog_options.message = M.str.repository.confirmdeletefile;",
          "644:                 if (this.selectui.fileinfo.type == 'folder') {",
          "646:                     params.filepath = this.selectui.fileinfo.filepath;",
          "648:                     params.filename = this.selectui.fileinfo.fullname;",
          "",
          "[Added Lines]",
          "703:                 var fileinfo = this.selectui.fileinfo;",
          "705:                 params.filepath = fileinfo.filepath;",
          "706:                 if (fileinfo.type == 'folder') {",
          "708:                     dialog_options.message = M.str.repository.confirmdeletefolder;",
          "710:                     params.filename = fileinfo.fullname;",
          "711:                     if (fileinfo.refcount) {",
          "712:                         dialog_options.message = M.util.get_string('confirmdeletefilewithhref', 'repository', fileinfo.refcount);",
          "713:                     } else {",
          "714:                         dialog_options.message = M.str.repository.confirmdeletefile;",
          "715:                     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "665:                     });",
          "666:                 };",
          "667:                 this.selectui.hide(); // TODO remove this after confirm dialog is replaced with YUI3",
          "669:             }, this);",
          "670:             selectnode.one('.fp-file-zip').on('click', function(e) {",
          "671:                 e.preventDefault();",
          "",
          "[Removed Lines]",
          "668:                 M.util.show_confirm_dialog(e, dialog_options);",
          "",
          "[Added Lines]",
          "735:                 this.show_confirm_dialog(dialog_options);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "778:                 setStyle('maxHeight', ''+(node.thumbnail_height ? node.thumbnail_height : 90)+'px').",
          "779:                 setStyle('maxWidth', ''+(node.thumbnail_width ? node.thumbnail_width : 90)+'px');",
          "780:             selectnode.one('.fp-thumbnail').setContent('').appendChild(imgnode);",
          "782:             this.selectui.show();",
          "783:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "849:             if (node.isref && !node.original) {",
          "850:                 selectnode.one('.fp-original').removeClass('fp-unknown').addClass('fp-loading');",
          "851:                 this.request({",
          "852:                     action: 'getoriginal',",
          "853:                     scope: this,",
          "854:                     params: {'filepath':node.filepath,'filename':node.fullname},",
          "855:                     callback: function(id, obj, args) {",
          "857:                         var scope = args.scope;",
          "858:                         if (scope.selectui.fileinfo && node &&",
          "859:                                 scope.selectui.fileinfo.filepath == node.filepath &&",
          "860:                                 scope.selectui.fileinfo.fullname == node.fullname) {",
          "861:                             selectnode.one('.fp-original').removeClass('fp-loading');",
          "862:                             if (obj.original) {",
          "863:                                 node.original = obj.original;",
          "864:                                 selectnode.one('.fp-original .fp-value').setContent(node.original);",
          "865:                             } else {",
          "866:                                 selectnode.one('.fp-original .fp-value').setContent(M.str.repository.unknownsource);",
          "867:                             }",
          "868:                         }",
          "869:                     }",
          "870:                 }, false);",
          "871:             }",
          "",
          "---------------"
        ],
        "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
          "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "383:         }",
          "384:         die;",
          "386:     default:",
          "388:         echo json_encode(false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "386:     case 'getoriginal':",
          "387:         $filename    = required_param('filename', PARAM_FILE);",
          "388:         $filepath    = required_param('filepath', PARAM_PATH);",
          "390:         $fs = get_file_storage();",
          "391:         $file = $fs->get_file($user_context->id, 'user', 'draft', $draftid, $filepath, $filename);",
          "392:         if (!$file) {",
          "393:             echo json_encode(false);",
          "394:         } else {",
          "395:             $return = array('filename' => $filename, 'filepath' => $filepath, 'original' => $file->get_reference_details());",
          "396:             echo json_encode((object)$return);",
          "397:         }",
          "398:         die;",
          "",
          "---------------"
        ],
        "theme/base/style/filemanager.css||theme/base/style/filemanager.css": [
          "File: theme/base/style/filemanager.css -> theme/base/style/filemanager.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "262: .filemanager.fp-select.fp-cansetmain .fp-file-setmain {display:inline-block;}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265: .filemanager .fp-iconview .fp-reficons {position:absolute;height:100%;width:100%;top:0;left:0;z-index:1000;}",
          "266: .filemanager .fp-iconview .fp-file.fp-hasreferences .fp-reficons {background: url([[pix:moodle|t/lock]]) no-repeat;background-position:bottom left;}",
          "267: .filemanager .fp-iconview .fp-file.fp-isreference .fp-reficons {background: url([[pix:moodle|t/right]]) no-repeat;background-position:bottom right;}",
          "269: .filemanager.fp-select .fp-original.fp-unknown {display:none;}",
          "270: .filemanager.fp-select .fp-original .fp-originloading {display:none;}",
          "271: .filemanager.fp-select .fp-original.fp-loading .fp-originloading {display:inline;}",
          "",
          "---------------"
        ]
      }
    }
  ]
}