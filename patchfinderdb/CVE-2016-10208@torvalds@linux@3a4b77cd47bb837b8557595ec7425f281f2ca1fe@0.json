{
  "cve_id": "CVE-2016-10208",
  "cve_desc": "The ext4_fill_super function in fs/ext4/super.c in the Linux kernel through 4.9.8 does not properly validate meta block groups, which allows physically proximate attackers to cause a denial of service (out-of-bounds read and system crash) via a crafted ext4 image.",
  "repo": "torvalds/linux",
  "patch_hash": "3a4b77cd47bb837b8557595ec7425f281f2ca1fe",
  "patch_info": {
    "commit_hash": "3a4b77cd47bb837b8557595ec7425f281f2ca1fe",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/3a4b77cd47bb837b8557595ec7425f281f2ca1fe",
    "files": [
      "fs/ext4/super.c"
    ],
    "message": "ext4: validate s_first_meta_bg at mount time\n\nRalf Spenneberg reported that he hit a kernel crash when mounting a\nmodified ext4 image. And it turns out that kernel crashed when\ncalculating fs overhead (ext4_calculate_overhead()), this is because\nthe image has very large s_first_meta_bg (debug code shows it's\n842150400), and ext4 overruns the memory in count_overhead() when\nsetting bitmap buffer, which is PAGE_SIZE.\n\next4_calculate_overhead():\n  buf = get_zeroed_page(GFP_NOFS);  <=== PAGE_SIZE buffer\n  blks = count_overhead(sb, i, buf);\n\ncount_overhead():\n  for (j = ext4_bg_num_gdb(sb, grp); j > 0; j--) { <=== j = 842150400\n          ext4_set_bit(EXT4_B2C(sbi, s++), buf);   <=== buffer overrun\n          count++;\n  }\n\nThis can be reproduced easily for me by this script:\n\n  #!/bin/bash\n  rm -f fs.img\n  mkdir -p /mnt/ext4\n  fallocate -l 16M fs.img\n  mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img\n  debugfs -w -R \"ssv first_meta_bg 842150400\" fs.img\n  mount -o loop fs.img /mnt/ext4\n\nFix it by validating s_first_meta_bg first at mount time, and\nrefusing to mount if its value exceeds the largest possible meta_bg\nnumber.\n\nReported-by: Ralf Spenneberg <ralf@os-t.de>\nSigned-off-by: Eryu Guan <guaneryu@gmail.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nReviewed-by: Andreas Dilger <adilger@dilger.ca>",
    "before_after_code_files": [
      "fs/ext4/super.c||fs/ext4/super.c"
    ]
  },
  "patch_diff": {
    "fs/ext4/super.c||fs/ext4/super.c": [
      "File: fs/ext4/super.c -> fs/ext4/super.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3842:    (EXT4_MAX_BLOCK_FILE_PHYS / EXT4_BLOCKS_PER_GROUP(sb)));",
      "3843:  db_count = (sbi->s_groups_count + EXT4_DESC_PER_BLOCK(sb) - 1) /",
      "3844:      EXT4_DESC_PER_BLOCK(sb);",
      "3845:  sbi->s_group_desc = ext4_kvmalloc(db_count *",
      "3846:        sizeof(struct buffer_head *),",
      "3847:        GFP_KERNEL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3845:  if (ext4_has_feature_meta_bg(sb)) {",
      "3846:   if (le32_to_cpu(es->s_first_meta_bg) >= db_count) {",
      "3847:    ext4_msg(sb, KERN_WARNING,",
      "3848:      \"first meta block group too large: %u \"",
      "3849:      \"(group descriptor block count %u)\",",
      "3850:      le32_to_cpu(es->s_first_meta_bg), db_count);",
      "3851:    goto failed_mount;",
      "3852:   }",
      "3853:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2ba3e6e8afc9b6188b471f27cf2b5e3cf34e7af2",
      "candidate_info": {
        "commit_hash": "2ba3e6e8afc9b6188b471f27cf2b5e3cf34e7af2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2ba3e6e8afc9b6188b471f27cf2b5e3cf34e7af2",
        "files": [
          "fs/ext4/super.c"
        ],
        "message": "ext4: fix fencepost in s_first_meta_bg validation\n\nIt is OK for s_first_meta_bg to be equal to the number of block group\ndescriptor blocks.  (It rarely happens, but it shouldn't cause any\nproblems.)\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=194567\n\nFixes: 3a4b77cd47bb837b8557595ec7425f281f2ca1fe\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nCc: stable@vger.kernel.org",
        "before_after_code_files": [
          "fs/ext4/super.c||fs/ext4/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/super.c||fs/ext4/super.c"
          ],
          "candidate": [
            "fs/ext4/super.c||fs/ext4/super.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/super.c||fs/ext4/super.c": [
          "File: fs/ext4/super.c -> fs/ext4/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3860:  db_count = (sbi->s_groups_count + EXT4_DESC_PER_BLOCK(sb) - 1) /",
          "3861:      EXT4_DESC_PER_BLOCK(sb);",
          "3862:  if (ext4_has_feature_meta_bg(sb)) {",
          "3864:    ext4_msg(sb, KERN_WARNING,",
          "3865:      \"first meta block group too large: %u \"",
          "3866:      \"(group descriptor block count %u)\",",
          "",
          "[Removed Lines]",
          "3863:   if (le32_to_cpu(es->s_first_meta_bg) >= db_count) {",
          "",
          "[Added Lines]",
          "3863:   if (le32_to_cpu(es->s_first_meta_bg) > db_count) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}