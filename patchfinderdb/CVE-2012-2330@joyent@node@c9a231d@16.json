{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "09be360a0fee2c7619bae8c4248f9ed3d79d1b30",
      "candidate_info": {
        "commit_hash": "09be360a0fee2c7619bae8c4248f9ed3d79d1b30",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/09be360a0fee2c7619bae8c4248f9ed3d79d1b30",
        "files": [
          "src/node.cc"
        ],
        "message": "Inherited FDs should not accidentally be inherited by child processes\n\nThis makes test-child-process-detached pass on Windows.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2703:   uv_uptime(&prog_start_time);",
          "2706:   node::ParseArgs(argc, argv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2706:   uv_disable_stdio_inheritance();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f80513974ec525fe8e1a3aab7054af167d862d99",
      "candidate_info": {
        "commit_hash": "f80513974ec525fe8e1a3aab7054af167d862d99",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f80513974ec525fe8e1a3aab7054af167d862d99",
        "files": [
          "tools/installer.js"
        ],
        "message": "build: fix `make install DESTDIR=/path`\n\nInstall to $DESTDIR, not $DESTDIR/$PREFIX.\n\nExample: if DESTDIR=/opt/node, install to /opt/node, not /opt/node/usr/local.",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: var variables = process.config.variables,",
          "17: var queue = [],",
          "",
          "[Removed Lines]",
          "14:     node_prefix = variables.node_prefix || '/usr/local';",
          "",
          "[Added Lines]",
          "14:     node_prefix = dest_dir || variables.node_prefix || '/usr/local';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     return;",
          "28:   }",
          "31:   var dir = dst.replace(/\\/[^\\/]*$/, '/');",
          "",
          "[Removed Lines]",
          "30:   dst = path.join(dest_dir, node_prefix, dst);",
          "",
          "[Added Lines]",
          "30:   dst = path.join(node_prefix, dst);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44: function remove(files) {",
          "45:   files.forEach(function(file) {",
          "47:     queue.push('rm -rf ' + file);",
          "48:   });",
          "49: }",
          "",
          "[Removed Lines]",
          "46:     file = path.join(dest_dir, node_prefix, file);",
          "",
          "[Added Lines]",
          "46:     file = path.join(node_prefix, file);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "146:     if (!isSymlink) {",
          "147:       copy('deps/npm', 'lib/node_modules/npm');",
          "148:       queue.push('ln -sf ../lib/node_modules/npm/bin/npm-cli.js ' +",
          "150:       queue.push([shebang, '#!' + path.join(node_prefix, 'bin/node'),",
          "152:                            'lib/node_modules/npm/bin/npm-cli.js')]);",
          "153:     }",
          "154:   }",
          "",
          "[Removed Lines]",
          "149:                  path.join(dest_dir, node_prefix, 'bin/npm'));",
          "151:                  path.join(dest_dir, node_prefix,",
          "",
          "[Added Lines]",
          "149:                  path.join(node_prefix, 'bin/npm'));",
          "151:                  path.join(node_prefix,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd33fea732fa74d23fc31855631eba14a03a0c49",
      "candidate_info": {
        "commit_hash": "bd33fea732fa74d23fc31855631eba14a03a0c49",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bd33fea732fa74d23fc31855631eba14a03a0c49",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "Unbreak the Windows build\n\nThe v8 team apparently decided that all build products should go\ninto ./build/\u00abtype\u00bb, and updated their common.gypi file to do so.\nUnfortunately v8's common.gypi is only used for some targets. All\nthe other targets would still look in the old place to find their\ntheir dependencies, which effectively broke the build.\n\nIn the long run it would be good for node to send all build\noutput to ./build too, on all platforms.\n\nConflicts:\n\n\tdeps/v8/build/common.gypi",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:         'defines': [",
          "273:           'WIN32',",
          "274:         ],",
          "275:       }],",
          "276:       ['OS==\"win\" and v8_enable_prof==1', {",
          "277:         'msvs_settings': {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "275:         'msvs_configuration_attributes': {",
          "276:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "277:           'CharacterSet': '1',",
          "278:         },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b31969913240ab5d8fc2d570202ee86f0500f28f",
      "candidate_info": {
        "commit_hash": "b31969913240ab5d8fc2d570202ee86f0500f28f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b31969913240ab5d8fc2d570202ee86f0500f28f",
        "files": [
          "lib/child_process.js",
          "test/simple/test-child-process-fork.js",
          "test/simple/test-isolates2.js"
        ],
        "message": "Add isolate version of test-child-process-fork",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "test/simple/test-child-process-fork.js||test/simple/test-child-process-fork.js",
          "test/simple/test-isolates2.js||test/simple/test-isolates2.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:   args = args ? args.slice(0) : [];",
          "154:   args.unshift(modulePath);",
          "156:   if (options.stdinStream) {",
          "157:     throw new Error('stdinStream not allowed for fork()');",
          "158:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-fork.js||test/simple/test-child-process-fork.js": [
          "File: test/simple/test-child-process-fork.js -> test/simple/test-child-process-fork.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: var fork = require('child_process').fork;",
          "25: var args = ['foo', 'bar'];",
          "28: assert.deepEqual(args, ['foo', 'bar']);",
          "30: var messageCount = 0;",
          "",
          "[Removed Lines]",
          "27: var n = fork(common.fixturesDir + '/child-process-spawn-node.js', args);",
          "",
          "[Added Lines]",
          "27: var options = {",
          "28:   thread: process.TEST_ISOLATE ? true : false",
          "29: };",
          "31: var n = fork(common.fixturesDir + '/child-process-spawn-node.js',",
          "32:              args,",
          "33:              options);",
          "",
          "---------------"
        ],
        "test/simple/test-isolates2.js||test/simple/test-isolates2.js": [
          "File: test/simple/test-isolates2.js -> test/simple/test-isolates2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: if (!process.features.isolates) return;",
          "4: var assert = require('assert');",
          "9: process.TEST_ISOLATE = true;",
          "10: require('./test-child-process-fork');",
          "12: var numThreads = process.binding('isolates').count();",
          "13: assert.ok(numThreads > 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae7a3cddae67ac3d10df8a41e1ac4b8cc2f5d2f5",
      "candidate_info": {
        "commit_hash": "ae7a3cddae67ac3d10df8a41e1ac4b8cc2f5d2f5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ae7a3cddae67ac3d10df8a41e1ac4b8cc2f5d2f5",
        "files": [
          "deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c",
          "deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs-poll.c"
        ],
        "message": "uv: upgrade to da59427",
        "before_after_code_files": [
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c",
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs-poll.c||deps/uv/test/test-fs-poll.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "317: typedef void (*uv_fs_poll_cb)(uv_fs_poll_t* handle,",
          "318:                               int status,",
          "322: typedef enum {",
          "323:   UV_LEAVE_GROUP = 0,",
          "",
          "[Removed Lines]",
          "319:                               uv_statbuf_t* prev,",
          "320:                               uv_statbuf_t* curr);",
          "",
          "[Added Lines]",
          "319:                               const uv_statbuf_t* prev,",
          "320:                               const uv_statbuf_t* curr);",
          "",
          "---------------"
        ],
        "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c": [
          "File: deps/uv/src/fs-poll.c -> deps/uv/src/fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: static void timer_cb(uv_timer_t* timer, int status);",
          "31: static void poll_cb(uv_fs_t* req);",
          "34: int uv_fs_poll_init(uv_loop_t* loop, uv_fs_poll_t* handle) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: static uv_statbuf_t zero_statbuf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:   if (req->result != 0) {",
          "142:     if (handle->busy_polling != -req->errorno) {",
          "143:       uv__set_artificial_error(handle->loop, req->errorno);",
          "145:       handle->busy_polling = -req->errorno;",
          "146:     }",
          "147:     goto out;",
          "",
          "[Removed Lines]",
          "144:       handle->poll_cb(handle, -1, NULL, NULL);",
          "",
          "[Added Lines]",
          "146:       handle->poll_cb(handle, -1, &handle->statbuf, &zero_statbuf);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: #define QUEUE_FS_TP_JOB(loop, req)                                          \\",
          "57:   if (!QueueUserWorkItem(&uv_fs_thread_proc,                                \\",
          "58:                          req,                                               \\",
          "60:     uv__set_sys_error((loop), GetLastError());                              \\",
          "61:     return -1;                                                              \\",
          "62:   }                                                                         \\",
          "",
          "[Removed Lines]",
          "59:                          WT_EXECUTELONGFUNCTION)) {                         \\",
          "",
          "[Added Lines]",
          "59:                          WT_EXECUTEDEFAULT)) {                              \\",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs-poll.c||deps/uv/test/test-fs-poll.c": [
          "File: deps/uv/test/test-fs-poll.c -> deps/uv/test/test-fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: static void close_cb(uv_handle_t* handle);",
          "31: static void poll_cb(uv_fs_poll_t* handle,",
          "32:                     int status,",
          "36: static uv_fs_poll_t poll_handle;",
          "37: static uv_timer_t timer_handle;",
          "",
          "[Removed Lines]",
          "33:                     uv_statbuf_t* prev,",
          "34:                     uv_statbuf_t* curr);",
          "",
          "[Added Lines]",
          "33:                     const uv_statbuf_t* prev,",
          "34:                     const uv_statbuf_t* curr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75: static void poll_cb(uv_fs_poll_t* handle,",
          "76:                     int status,",
          "79:   ASSERT(handle == &poll_handle);",
          "80:   ASSERT(uv_is_active((uv_handle_t*)handle));",
          "82:   switch (poll_cb_called++) {",
          "83:   case 0:",
          "84:     ASSERT(status == -1);",
          "87:     ASSERT(uv_last_error(loop).code == UV_ENOENT);",
          "88:     touch_file(FIXTURE);",
          "89:     break;",
          "91:   case 1:",
          "92:     ASSERT(status == 0);",
          "100:     ASSERT(0 == uv_timer_start(&timer_handle, timer_cb, 20, 0));",
          "101:     break;",
          "103:   case 2:",
          "104:     ASSERT(status == 0);",
          "107:     ASSERT(0 == uv_timer_start(&timer_handle, timer_cb, 200, 0));",
          "108:     break;",
          "110:   case 3:",
          "111:     ASSERT(status == 0);",
          "114:     remove(FIXTURE);",
          "115:     break;",
          "117:   case 4:",
          "118:     ASSERT(status == -1);",
          "121:     ASSERT(uv_last_error(loop).code == UV_ENOENT);",
          "122:     uv_close((uv_handle_t*)handle, close_cb);",
          "123:     break;",
          "",
          "[Removed Lines]",
          "77:                     uv_statbuf_t* prev,",
          "78:                     uv_statbuf_t* curr) {",
          "85:     ASSERT(prev == NULL);",
          "86:     ASSERT(curr == NULL);",
          "93:     ASSERT(prev != NULL);",
          "94:     ASSERT(curr != NULL);",
          "95:     {",
          "96:       uv_statbuf_t buf;",
          "97:       memset(&buf, 0, sizeof(buf));",
          "98:       ASSERT(0 == memcmp(&buf, prev, sizeof(buf)));",
          "99:     }",
          "105:     ASSERT(prev != NULL);",
          "106:     ASSERT(curr != NULL);",
          "112:     ASSERT(prev != NULL);",
          "113:     ASSERT(curr != NULL);",
          "119:     ASSERT(prev == NULL);",
          "120:     ASSERT(curr == NULL);",
          "",
          "[Added Lines]",
          "77:                     const uv_statbuf_t* prev,",
          "78:                     const uv_statbuf_t* curr) {",
          "79:   const static uv_statbuf_t zero_statbuf;",
          "83:   ASSERT(prev != NULL);",
          "84:   ASSERT(curr != NULL);",
          "90:     ASSERT(0 == memcmp(prev, &zero_statbuf, sizeof(zero_statbuf)));",
          "91:     ASSERT(0 == memcmp(curr, &zero_statbuf, sizeof(zero_statbuf)));",
          "97:     ASSERT(0 == memcmp(prev, &zero_statbuf, sizeof(zero_statbuf)));",
          "98:     ASSERT(0 != memcmp(curr, &zero_statbuf, sizeof(zero_statbuf)));",
          "104:     ASSERT(0 != memcmp(prev, &zero_statbuf, sizeof(zero_statbuf)));",
          "105:     ASSERT(0 != memcmp(curr, &zero_statbuf, sizeof(zero_statbuf)));",
          "111:     ASSERT(0 != memcmp(prev, &zero_statbuf, sizeof(zero_statbuf)));",
          "112:     ASSERT(0 != memcmp(curr, &zero_statbuf, sizeof(zero_statbuf)));",
          "118:     ASSERT(0 != memcmp(prev, &zero_statbuf, sizeof(zero_statbuf)));",
          "119:     ASSERT(0 == memcmp(curr, &zero_statbuf, sizeof(zero_statbuf)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}