{
  "cve_id": "CVE-2013-1958",
  "cve_desc": "The scm_check_creds function in net/core/scm.c in the Linux kernel before 3.8.6 does not properly enforce capability requirements for controlling the PID value associated with a UNIX domain socket, which allows local users to bypass intended access restrictions by leveraging the time interval during which a user namespace has been created but a PID namespace has not been created.",
  "repo": "torvalds/linux",
  "patch_hash": "92f28d973cce45ef5823209aab3138eb45d8b349",
  "patch_info": {
    "commit_hash": "92f28d973cce45ef5823209aab3138eb45d8b349",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/92f28d973cce45ef5823209aab3138eb45d8b349",
    "files": [
      "net/core/scm.c"
    ],
    "message": "scm: Require CAP_SYS_ADMIN over the current pidns to spoof pids.\n\nDon't allow spoofing pids over unix domain sockets in the corner\ncases where a user has created a user namespace but has not yet\ncreated a pid namespace.\n\nCc: stable@vger.kernel.org\nReported-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "before_after_code_files": [
      "net/core/scm.c||net/core/scm.c"
    ]
  },
  "patch_diff": {
    "net/core/scm.c||net/core/scm.c": [
      "File: net/core/scm.c -> net/core/scm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: #include <linux/interrupt.h>",
      "25: #include <linux/netdevice.h>",
      "26: #include <linux/security.h>",
      "27: #include <linux/pid.h>",
      "28: #include <linux/nsproxy.h>",
      "29: #include <linux/slab.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: #include <linux/pid_namespace.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:  if (!uid_valid(uid) || !gid_valid(gid))",
      "53:   return -EINVAL;",
      "56:      ((uid_eq(uid, cred->uid)   || uid_eq(uid, cred->euid) ||",
      "57:        uid_eq(uid, cred->suid)) || nsown_capable(CAP_SETUID)) &&",
      "58:      ((gid_eq(gid, cred->gid)   || gid_eq(gid, cred->egid) ||",
      "",
      "[Removed Lines]",
      "55:  if ((creds->pid == task_tgid_vnr(current) || nsown_capable(CAP_SYS_ADMIN)) &&",
      "",
      "[Added Lines]",
      "56:  if ((creds->pid == task_tgid_vnr(current) ||",
      "57:       ns_capable(current->nsproxy->pid_ns->user_ns, CAP_SYS_ADMIN)) &&",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d661684cf6820331feae71146c35da83d794467e",
      "candidate_info": {
        "commit_hash": "d661684cf6820331feae71146c35da83d794467e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d661684cf6820331feae71146c35da83d794467e",
        "files": [
          "net/core/scm.c"
        ],
        "message": "net: Check the correct namespace when spoofing pid over SCM_RIGHTS\n\nThis is a security bug.\n\nThe follow-up will fix nsproxy to discourage this type of issue from\nhappening again.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nReviewed-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/core/scm.c||net/core/scm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/core/scm.c||net/core/scm.c"
          ],
          "candidate": [
            "net/core/scm.c||net/core/scm.c"
          ]
        }
      },
      "candidate_diff": {
        "net/core/scm.c||net/core/scm.c": [
          "File: net/core/scm.c -> net/core/scm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   return -EINVAL;",
          "56:  if ((creds->pid == task_tgid_vnr(current) ||",
          "58:      ((uid_eq(uid, cred->uid)   || uid_eq(uid, cred->euid) ||",
          "59:        uid_eq(uid, cred->suid)) || nsown_capable(CAP_SETUID)) &&",
          "60:      ((gid_eq(gid, cred->gid)   || gid_eq(gid, cred->egid) ||",
          "",
          "[Removed Lines]",
          "57:       ns_capable(current->nsproxy->pid_ns->user_ns, CAP_SYS_ADMIN)) &&",
          "",
          "[Added Lines]",
          "57:       ns_capable(task_active_pid_ns(current)->user_ns, CAP_SYS_ADMIN)) &&",
          "",
          "---------------"
        ]
      }
    }
  ]
}