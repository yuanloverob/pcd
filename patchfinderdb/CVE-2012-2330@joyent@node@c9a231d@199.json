{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0c010e39beae175ecfdb213ec898dd88aefbb03",
      "candidate_info": {
        "commit_hash": "d0c010e39beae175ecfdb213ec898dd88aefbb03",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d0c010e39beae175ecfdb213ec898dd88aefbb03",
        "files": [
          "test/simple/test-net-pipe-connect-errors.js"
        ],
        "message": "test: root can connect to chmod'd pipes",
        "before_after_code_files": [
          "test/simple/test-net-pipe-connect-errors.js||test/simple/test-net-pipe-connect-errors.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-net-pipe-connect-errors.js||test/simple/test-net-pipe-connect-errors.js": [
          "File: test/simple/test-net-pipe-connect-errors.js -> test/simple/test-net-pipe-connect-errors.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: });",
          "59:   var accessServer = net.createServer(function() {",
          "60:     assert.ok(false);",
          "",
          "[Removed Lines]",
          "57: if (process.platform !== 'win32') {",
          "",
          "[Added Lines]",
          "57: if (process.platform !== 'win32' && process.getuid() !== 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: process.on('exit', function() {",
          "80:   assert.ok(notSocketErrorFired);",
          "81:   assert.ok(noEntErrorFired);",
          "83:     assert.ok(accessErrorFired);",
          "84:   }",
          "85: });",
          "",
          "[Removed Lines]",
          "82:   if (process.platform !== 'win32') {",
          "",
          "[Added Lines]",
          "82:   if (process.platform !== 'win32' && process.getuid() !== 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21aa0df8b2f4fb8715943c4b0bdc944554be43e8",
      "candidate_info": {
        "commit_hash": "21aa0df8b2f4fb8715943c4b0bdc944554be43e8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/21aa0df8b2f4fb8715943c4b0bdc944554be43e8",
        "files": [
          "lib/fs.js",
          "test/simple/test-fs-realpath.js"
        ],
        "message": "realpath: No sync cb() calling allowed.",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-fs-realpath.js||test/simple/test-fs-realpath.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1070:   p = pathModule.resolve(p);",
          "1072:   if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {",
          "1074:   }",
          "1076:   var original = p,",
          "",
          "[Removed Lines]",
          "1073:     return cb(null, cache[p]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1092:   function LOOP() {",
          "1094:     if (pos >= p.length) {",
          "",
          "[Removed Lines]",
          "1091:   LOOP();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-fs-realpath.js||test/simple/test-fs-realpath.js": [
          "File: test/simple/test-fs-realpath.js -> test/simple/test-fs-realpath.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "515:   var rps = fs.realpathSync(bluff, cache);",
          "516:   assert.equal(cache[bluff], rps);",
          "517:   var nums = path.resolve('/1/2/3/4/5/6/7');",
          "518:   fs.realpath(nums, cache, function(er, rp) {",
          "519:     assert.equal(cache[nums], rp);",
          "520:     if (--n === 0) cb();",
          "521:   });",
          "523:   var test = path.resolve('/a/b/c/d'),",
          "524:       expect = path.resolve('/a/b/d');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518:   var called = false; // no sync cb calling!",
          "520:     called = true;",
          "524:   assert(called === false);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38651521a8649f113e851e9ea1a8e81eaf2f0db6",
      "candidate_info": {
        "commit_hash": "38651521a8649f113e851e9ea1a8e81eaf2f0db6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/38651521a8649f113e851e9ea1a8e81eaf2f0db6",
        "files": [
          "test/simple/test-tty-stdout-end.js"
        ],
        "message": "stdout ending test message correction",
        "before_after_code_files": [
          "test/simple/test-tty-stdout-end.js||test/simple/test-tty-stdout-end.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-tty-stdout-end.js||test/simple/test-tty-stdout-end.js": [
          "File: test/simple/test-tty-stdout-end.js -> test/simple/test-tty-stdout-end.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: } catch (e) {",
          "31:   exceptionCaught = true;",
          "32:   assert.ok(common.isError(e));",
          "34: }",
          "36: assert.ok(exceptionCaught);",
          "",
          "[Removed Lines]",
          "33:   assert.equal('process.stdout cannot be closed', e.message);",
          "",
          "[Added Lines]",
          "33:   assert.equal('process.stdout cannot be closed.', e.message);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8652c11031cf89d042aa9f0b9c0f33e60ab18c97",
      "candidate_info": {
        "commit_hash": "8652c11031cf89d042aa9f0b9c0f33e60ab18c97",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8652c11031cf89d042aa9f0b9c0f33e60ab18c97",
        "files": [
          "test/simple/test-repl-.save.load.js",
          "test/simple/test-repl-autolibs.js",
          "test/simple/test-repl-tab-complete.js"
        ],
        "message": "test: make the ArrayStream in repl tests write a '\\n'\n\nThis is more correct.\nFixes them from failing with the updated readline behavior.",
        "before_after_code_files": [
          "test/simple/test-repl-.save.load.js||test/simple/test-repl-.save.load.js",
          "test/simple/test-repl-autolibs.js||test/simple/test-repl-autolibs.js",
          "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-repl-.save.load.js||test/simple/test-repl-.save.load.js": [
          "File: test/simple/test-repl-.save.load.js -> test/simple/test-repl-.save.load.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   this.run = function(data) {",
          "33:     var self = this;",
          "34:     data.forEach(function(line) {",
          "36:     });",
          "37:   }",
          "38: }",
          "",
          "[Removed Lines]",
          "35:       self.emit('data', line);",
          "",
          "[Added Lines]",
          "35:       self.emit('data', line + '\\n');",
          "",
          "---------------"
        ],
        "test/simple/test-repl-autolibs.js||test/simple/test-repl-autolibs.js": [
          "File: test/simple/test-repl-autolibs.js -> test/simple/test-repl-autolibs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   this.run = function (data) {",
          "29:     var self = this;",
          "30:     data.forEach(function (line) {",
          "32:     });",
          "33:   }",
          "34: }",
          "",
          "[Removed Lines]",
          "31:       self.emit('data', line);",
          "",
          "[Added Lines]",
          "31:       self.emit('data', line + '\\n');",
          "",
          "---------------"
        ],
        "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js": [
          "File: test/simple/test-repl-tab-complete.js -> test/simple/test-repl-tab-complete.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   this.run = function(data) {",
          "31:     var self = this;",
          "32:     data.forEach(function(line) {",
          "34:     });",
          "35:   }",
          "36: }",
          "",
          "[Removed Lines]",
          "33:       self.emit('data', line);",
          "",
          "[Added Lines]",
          "33:       self.emit('data', line + '\\n');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6e916db587f4f2f237e440eb0cebe06f3a3c717",
      "candidate_info": {
        "commit_hash": "b6e916db587f4f2f237e440eb0cebe06f3a3c717",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b6e916db587f4f2f237e440eb0cebe06f3a3c717",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.6.21",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 20",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 21",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}