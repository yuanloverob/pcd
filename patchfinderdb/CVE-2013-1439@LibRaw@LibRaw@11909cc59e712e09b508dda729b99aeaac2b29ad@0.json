{
  "cve_id": "CVE-2013-1439",
  "cve_desc": "The \"faster LJPEG decoder\" in libraw 0.13.x, 0.14.x, and 0.15.x before 0.15.4 allows context-dependent attackers to cause a denial of service (NULL pointer dereference) via a crafted photo file.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
  "patch_info": {
    "commit_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/11909cc59e712e09b508dda729b99aeaac2b29ad",
    "files": [
      "Changelog.txt",
      "Makefile.devel",
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h",
      "src/libraw_datastream.cpp"
    ],
    "message": "cumulated data checks patch",
    "before_after_code_files": [
      "Makefile.devel||Makefile.devel",
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h||libraw/libraw_version.h",
      "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
    ]
  },
  "patch_diff": {
    "Makefile.devel||Makefile.devel": [
      "File: Makefile.devel -> Makefile.devel",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: CC=gcc",
      "6: CXX=g++",
      "8: # RawSpeed Support",
      "19: # LCMS support",
      "",
      "[Removed Lines]",
      "9: CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "10: LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "14: CC=gcc48",
      "15: CXX=g++48",
      "16: CFLAGS+= -O4 -g -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "[Added Lines]",
      "7: CFLAGS+= -O -g -I.",
      "10: #CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "11: #LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "12: #RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "15: #CC=gcc48",
      "16: #CXX=g++48",
      "17: #CFLAGS+= -O -g -I. -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "---------------"
    ],
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "877: {",
      "878:   int len, diff;",
      "880:   len = gethuff(huff);",
      "881:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "882:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "880: #ifdef LIBRAW_LIBRARY_BUILD",
      "881:   if(!huff)",
      "882:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "883: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "891: {",
      "892:   int len, diff;",
      "894:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "895:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "896:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:   if(!huff || !buf)",
      "900:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1010:   }",
      "1011: #endif",
      "1014:   if (!ljpeg_start (&jh, 0)) return;",
      "1015:   jwide = jh.wide * jh.clrs;",
      "1017: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1022: #ifdef LIBRAW_LIBRARY_BUILD",
      "1023:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "1024:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1025: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1028:       }",
      "1030:   slices = slicesWcnt * jh.high;",
      "1031:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "1033:   for(slice=0;slice<slices;slice++)",
      "1034:       {",
      "1035:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "1036:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "1037:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "1038:           t_y++;",
      "1039:           if(t_y == jh.high)",
      "1040:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if(!slices)",
      "1043:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1051:             {",
      "1052:               free(offset);",
      "1054:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1087:               pixno++;",
      "1088:               if (0 == --pixelsInSlice)",
      "1089:                   {",
      "1090:                       unsigned o = offset[slice++];",
      "1091:                       pixno = o & 0x0fffffff;",
      "1092:                       pixelsInSlice = slicesW[o>>28];",
      "1093:                   }",
      "1094:           }",
      "1095: #endif",
      "1096:       if (raw_width == 3984 && (col -= 2) < 0)",
      "1097:  col += (row--,raw_width);",
      "1098:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1107:                     if(slice > slices)",
      "1108:                       {",
      "1109:                         free(offset);",
      "1110:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1111:                       }",
      "1119:       if(row>raw_height)",
      "1120: #ifdef LIBRAW_LIBRARY_BUILD",
      "1121:       {",
      "1122:         free(offset);",
      "1123:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1124:       }",
      "1125: #else",
      "1126:         longjmp (failure, 3);",
      "1127: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "6513:  break;",
      "6517:    num += getreal(type);",
      "6518:  black += num/len + 0.5;",
      "6519:  break;",
      "",
      "[Removed Lines]",
      "6516:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "6549:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "6646:   if (thumb_offset) {",
      "6647:     fseek (ifp, thumb_offset, SEEK_SET);",
      "6648:     if (ljpeg_start (&jh, 1)) {",
      "6652:     }",
      "6653:   }",
      "6654:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "6649:       thumb_misc   = jh.bits;",
      "6650:       thumb_width  = jh.wide;",
      "6651:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "6682:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "6683:         {",
      "6684:           thumb_misc   = jh.bits;",
      "6685:           thumb_width  = jh.wide;",
      "6686:           thumb_height = jh.high;",
      "6687:         }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "6656:  max_samp = tiff_ifd[i].samples;",
      "6657:     if (max_samp > 3) max_samp = 3;",
      "6658:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "6660:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "6661:       raw_width     = tiff_ifd[i].t_width;",
      "6662:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "6659:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "6695:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "6696:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "6743:       is_raw = 0;",
      "6744:   for (i=0; i < tiff_nifds; i++)",
      "6745:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "6746:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "6747:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "6748:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6783:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "6784:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "611: {",
      "612:   int len, diff;",
      "614:   len = gethuff(huff);",
      "615:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "616:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "614: #ifdef LIBRAW_LIBRARY_BUILD",
      "615:   if(!huff)",
      "616:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "617: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "625: {",
      "626:   int len, diff;",
      "628:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "629:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "630:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "633:   if(!huff || !buf)",
      "634:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "744:   }",
      "745: #endif",
      "748:   if (!ljpeg_start (&jh, 0)) return;",
      "749:   jwide = jh.wide * jh.clrs;",
      "751: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "756: #ifdef LIBRAW_LIBRARY_BUILD",
      "757:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "758:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "759: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "762:       }",
      "764:   slices = slicesWcnt * jh.high;",
      "765:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "767:   for(slice=0;slice<slices;slice++)",
      "768:       {",
      "769:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "770:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "771:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "772:           t_y++;",
      "773:           if(t_y == jh.high)",
      "774:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "776:   if(!slices)",
      "777:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "785:             {",
      "786:               free(offset);",
      "788:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "821:               pixno++;",
      "822:               if (0 == --pixelsInSlice)",
      "823:                   {",
      "824:                       unsigned o = offset[slice++];",
      "825:                       pixno = o & 0x0fffffff;",
      "826:                       pixelsInSlice = slicesW[o>>28];",
      "827:                   }",
      "828:           }",
      "829: #endif",
      "830:       if (raw_width == 3984 && (col -= 2) < 0)",
      "831:  col += (row--,raw_width);",
      "832:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:                     if(slice > slices)",
      "842:                       {",
      "843:                         free(offset);",
      "844:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "845:                       }",
      "853:       if(row>raw_height)",
      "854: #ifdef LIBRAW_LIBRARY_BUILD",
      "855:       {",
      "856:         free(offset);",
      "857:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "858:       }",
      "859: #else",
      "860:         longjmp (failure, 3);",
      "861: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1283:     if (tail[i]) nz++;",
      "1284:   return nz > 20;",
      "1285: }",
      "1287: void CLASS ppm_thumb()",
      "1288: {",
      "1289:   char *thumb;",
      "",
      "[Removed Lines]",
      "1286: #line 1557 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "1318: #line 1589 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2865:   jas_stream_close (in);",
      "2866: #endif",
      "2867: }",
      "2869: void CLASS crop_masked_pixels()",
      "2870: {",
      "2871:   int row, col;",
      "",
      "[Removed Lines]",
      "2868: #line 3846 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "2900: #line 3878 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2965:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
      "2966: #endif",
      "2967: }",
      "2969: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
      "2970: {",
      "2971:   int i;",
      "",
      "[Removed Lines]",
      "2968: #line 4111 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "3000: #line 4143 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "4460:     fseek (ifp, save, SEEK_SET);",
      "4461:   }",
      "4462: }",
      "4464: void CLASS parse_makernote (int base, int uptag)",
      "4465: {",
      "4466:   static const uchar xlat[2][256] = {",
      "",
      "[Removed Lines]",
      "4463: #line 5610 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "4495: #line 5642 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4975:     fseek (ifp, save, SEEK_SET);",
      "4976:   }",
      "4977: }",
      "4979: int CLASS parse_tiff_ifd (int base)",
      "4980: {",
      "4981:   unsigned entries, tag, type, len, plen=16, save;",
      "",
      "[Removed Lines]",
      "4978: #line 6130 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "5010: #line 6162 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "5362:  break;",
      "5366:    num += getreal(type);",
      "5367:  black += num/len + 0.5;",
      "5368:  break;",
      "",
      "[Removed Lines]",
      "5365:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "5398:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "5495:   if (thumb_offset) {",
      "5496:     fseek (ifp, thumb_offset, SEEK_SET);",
      "5497:     if (ljpeg_start (&jh, 1)) {",
      "5501:     }",
      "5502:   }",
      "5503:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "5498:       thumb_misc   = jh.bits;",
      "5499:       thumb_width  = jh.wide;",
      "5500:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "5531:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "5532:         {",
      "5533:           thumb_misc   = jh.bits;",
      "5534:           thumb_width  = jh.wide;",
      "5535:           thumb_height = jh.high;",
      "5536:         }",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "5505:  max_samp = tiff_ifd[i].samples;",
      "5506:     if (max_samp > 3) max_samp = 3;",
      "5507:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "5509:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "5510:       raw_width     = tiff_ifd[i].t_width;",
      "5511:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "5508:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "5544:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "5545:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "5592:       is_raw = 0;",
      "5593:   for (i=0; i < tiff_nifds; i++)",
      "5594:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "5595:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "5596:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "5597:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5632:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "5633:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "6233:     data_offset = get4();",
      "6234:   }",
      "6235: }",
      "6237: char * CLASS foveon_gets (int offset, char *str, int len)",
      "6238: {",
      "6239:   int i;",
      "",
      "[Removed Lines]",
      "6236: #line 7390 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6275: #line 7429 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "6334:   }",
      "6335:   is_foveon = 1;",
      "6336: }",
      "6339:    All matrices are from Adobe DNG Converter unless otherwise noted.",
      "",
      "[Removed Lines]",
      "6337: #line 7493 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6376: #line 7532 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "8981: }",
      "8985: void CLASS convert_to_rgb()",
      "8986: {",
      "8987: #ifndef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "8984: #line 10231 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9023: #line 10270 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "9212:   if (flip & 1) col = iwidth  - 1 - col;",
      "9213:   return row * iwidth + col;",
      "9214: }",
      "9216: void CLASS tiff_set (ushort *ntag,",
      "9217:  ushort tag, ushort type, int count, int val)",
      "9218: {",
      "",
      "[Removed Lines]",
      "9215: #line 10487 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9254: #line 10526 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
      "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "21:    for more information",
      "25: #include <math.h>",
      "26: #define CLASS LibRaw::",
      "27: #include \"libraw/libraw_types.h\"",
      "",
      "[Removed Lines]",
      "24: #line 3948 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "24: #line 3980 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29: #include \"libraw/libraw.h\"",
      "30: #include \"internal/defines.h\"",
      "31: #include \"internal/var_defines.h\"",
      "34:    Seach from the current directory up to the root looking for",
      "35:    a \".badpixels\" file, and fix those pixels now.",
      "",
      "[Removed Lines]",
      "32: #line 3959 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "32: #line 3991 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "54: #endif",
      "55:   if (cfname)",
      "56:     fp = fopen (cfname, \"r\");",
      "58:   if (!fp)",
      "59:       {",
      "60: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "57: #line 4009 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "57: #line 4041 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
      "155: #endif",
      "156: }",
      "158: #ifndef NO_LCMS",
      "159: void CLASS apply_profile (const char *input, const char *output)",
      "160: {",
      "",
      "[Removed Lines]",
      "157: #line 10142 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "157: #line 10181 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "libraw/libraw_version.h||libraw/libraw_version.h": [
      "File: libraw/libraw_version.h -> libraw/libraw_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #define LIBRAW_MAJOR_VERSION  0",
      "27: #define LIBRAW_MINOR_VERSION  15",
      "29: #define LIBRAW_VERSION_TAIL   Release",
      "31: #define LIBRAW_SHLIB_CURRENT   9",
      "",
      "[Removed Lines]",
      "28: #define LIBRAW_PATCH_VERSION  3",
      "",
      "[Added Lines]",
      "28: #define LIBRAW_PATCH_VERSION  4",
      "",
      "---------------"
    ],
    "src/libraw_datastream.cpp||src/libraw_datastream.cpp": [
      "File: src/libraw_datastream.cpp -> src/libraw_datastream.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: LibRaw_byte_buffer *LibRaw_abstract_datastream::make_byte_buffer(unsigned int sz)",
      "66: {",
      "67:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(sz);",
      "68:     read(ret->get_buffer(),sz,1);",
      "69:     return ret;",
      "70: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67:   if(INT64(sz)>size())",
      "68:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "71:     if(!ret) // failed new should throw std::exception",
      "72:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "442: LibRaw_byte_buffer *LibRaw_buffer_datastream::make_byte_buffer(unsigned int sz)",
      "443: {",
      "444:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(0);",
      "445:     if(streampos + sz > streamsize)",
      "446:         sz = streamsize - streampos;",
      "447:     ret->set_buffer(buf+streampos,sz);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "449:   if(INT64(sz)>size())",
      "450:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "453:     if(!ret) // failed new should throw std::exception",
      "454:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "78562255c443f904b69364564ac8e0ce561ca36a",
      "candidate_info": {
        "commit_hash": "78562255c443f904b69364564ac8e0ce561ca36a",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/78562255c443f904b69364564ac8e0ce561ca36a",
        "files": [
          "Changelog.rus",
          "Changelog.txt",
          "libraw/libraw_version.h",
          "src/libraw_cxx.cpp"
        ],
        "message": "LibRaw 0.15.1",
        "before_after_code_files": [
          "Changelog.rus||Changelog.rus",
          "libraw/libraw_version.h||libraw/libraw_version.h",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ],
          "candidate": [
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ]
        }
      },
      "candidate_diff": {
        "Changelog.rus||Changelog.rus": [
          "File: Changelog.rus -> Changelog.rus",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   LibRaw 0.15.0 Release:",
          "",
          "[Removed Lines]",
          "1: \ufeff2013-05-23 Alex Tutubalin <lexa@lexa.ru>",
          "",
          "[Added Lines]",
          "1: \ufeff2013-05-25 Alex Tutubalin <lexa@lexa.ru>",
          "6: 2013-05-23 Alex Tutubalin <lexa@lexa.ru>",
          "",
          "---------------"
        ],
        "libraw/libraw_version.h||libraw/libraw_version.h": [
          "File: libraw/libraw_version.h -> libraw/libraw_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define LIBRAW_MAJOR_VERSION  0",
          "27: #define LIBRAW_MINOR_VERSION  15",
          "29: #define LIBRAW_VERSION_TAIL   Release",
          "31: #define LIBRAW_SHLIB_CURRENT   9",
          "",
          "[Removed Lines]",
          "28: #define LIBRAW_PATCH_VERSION  0",
          "",
          "[Added Lines]",
          "28: #define LIBRAW_PATCH_VERSION  1",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2336: #define MAX(a,b) ((a) > (b) ? (a) : (b))",
          "2337: #define LIM(x,min,max) MAX(min,MIN(x,max))",
          "2338: #define CLIP(x) LIM(x,0,65535)",
          "2341:               {",
          "2342:                 int val = imgdata.image[0][i];",
          "2343:                 val -= cblk[i & 3];",
          "2344:                 imgdata.image[0][i] = CLIP(val);",
          "2346:               }",
          "2347: #undef MIN",
          "2348: #undef MAX",
          "2349: #undef LIM",
          "",
          "[Removed Lines]",
          "2340:             for(i=0; i< size*4; i++)",
          "2345:                 if(C.data_maximum < val) C.data_maximum = val;",
          "",
          "[Added Lines]",
          "2339:       int dmax = 0;",
          "2340:       for(i=0; i< size*4; i++)",
          "2345:                 if(dmax < val) dmax = val;",
          "2347:              C.data_maximum = dmax & 0xffff;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2360:           int idx;",
          "2361:           ushort *p = (ushort*)imgdata.image;",
          "2363:           for(idx=0;idx<S.iheight*S.iwidth*4;idx++)",
          "2365:         }",
          "2366:   return 0;",
          "2367:  }",
          "",
          "[Removed Lines]",
          "2362:           C.data_maximum = 0;",
          "2364:             if(C.data_maximum < p[idx]) C.data_maximum = p[idx];",
          "",
          "[Added Lines]",
          "2363:           int dmax = 0;",
          "2365:             if(dmax < p[idx]) dmax = p[idx];",
          "2366:    C.data_maximum = dmax;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2421:             imgdata.image[i][3] = lut[imgdata.image[i][3]];",
          "2422:         }",
          "2427:     free(lut);",
          "2428: }",
          "",
          "[Removed Lines]",
          "2424:     C.data_maximum = lut[C.data_maximum];",
          "2425:     C.maximum = lut[C.maximum];",
          "",
          "[Added Lines]",
          "2426:     if(C.data_maximum <=TBLN)",
          "2427:       C.data_maximum = lut[C.data_maximum];",
          "2428:     if(C.maximum <= TBLN)",
          "2429:       C.maximum = lut[C.maximum];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "285ea466a961f9e029ce30854e0019e8af6b79f8",
      "candidate_info": {
        "commit_hash": "285ea466a961f9e029ce30854e0019e8af6b79f8",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/285ea466a961f9e029ce30854e0019e8af6b79f8",
        "files": [
          "Changelog.rus",
          "Changelog.txt",
          "Makefile.devel",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "internal/defines.h",
          "internal/libraw_internal_funcs.h",
          "libraw/libraw_version.h",
          "src/libraw_cxx.cpp"
        ],
        "message": "0.15-beta3",
        "before_after_code_files": [
          "Changelog.rus||Changelog.rus",
          "Makefile.devel||Makefile.devel",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "internal/defines.h||internal/defines.h",
          "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h",
          "libraw/libraw_version.h||libraw/libraw_version.h",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Makefile.devel||Makefile.devel",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ],
          "candidate": [
            "Makefile.devel||Makefile.devel",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ]
        }
      },
      "candidate_diff": {
        "Changelog.rus||Changelog.rus": [
          "File: Changelog.rus -> Changelog.rus",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:       Canon: G15, S110, SX50",
          "4:       Fujifilm: F800EXR, XF1",
          "",
          "[Removed Lines]",
          "1: \ufeff2012-12-03  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "[Added Lines]",
          "1: \ufeff2012-12-24  Alex Tutubalin <lexa@lexa.ru>",
          "3:      Canon 6D \u0438 EOS M, Casio EX-ZR100, Fujifilm X-E1, Leica D-LUX6 \u0438 V-LUX4,",
          "4:      Nikon P7700, Olympus XZ-2, Panasonic G5, Samsung EX2F, Sony RX-1",
          "6:      \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0443\u0436\u0435\u043d \u0432\u044b\u0437\u043e\u0432 fuji_rotate() \u043d\u0430 \u0441\u0442\u0430\u0434\u0438\u0438 \u043f\u043e\u0441\u0442\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433\u0430",
          "9: 2012-12-03  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "---------------"
        ],
        "Makefile.devel||Makefile.devel": [
          "File: Makefile.devel -> Makefile.devel",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: CXX=g++",
          "8: # RawSpeed Support",
          "14: CC=gcc46",
          "",
          "[Removed Lines]",
          "9: CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
          "10: LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
          "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
          "",
          "[Added Lines]",
          "9: #CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
          "10: #LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
          "11: #RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "922:  else ip[col][c] = (ip[col-1][c] + ip[col+1][c] + 1) >> 1;",
          "923:   }",
          "924:   for ( ; rp < ip[0]; rp+=4) {",
          "933:       rp[1] = (rp[1] << 2) + hue;",
          "934:       rp[2] = (rp[2] << 2) + hue;",
          "935:       pix[0] = rp[0] + ((   50*rp[1] + 22929*rp[2]) >> 14);",
          "936:       pix[1] = rp[0] + ((-5640*rp[1] - 11751*rp[2]) >> 14);",
          "937:       pix[2] = rp[0] + ((29040*rp[1] -   101*rp[2]) >> 14);",
          "938:     }",
          "939:     FORC3 rp[c] = CLIP(pix[c] * sraw_mul[c] >> 10);",
          "940:   }",
          "",
          "[Removed Lines]",
          "925:     if (unique_id < 0x80000218) {",
          "926:       rp[0] -= 512;",
          "927:       goto next;",
          "928:     } else if (unique_id == 0x80000285) {",
          "929: next: pix[0] = rp[0] + rp[2];",
          "930:       pix[2] = rp[0] + rp[1];",
          "931:       pix[1] = rp[0] + ((-778*rp[1] - (rp[2] << 11)) >> 12);",
          "932:     } else {",
          "",
          "[Added Lines]",
          "925:     if (unique_id == 0x80000218 ||",
          "926:  unique_id == 0x80000250 ||",
          "927:  unique_id == 0x80000261 ||",
          "928:  unique_id == 0x80000281 ||",
          "929:  unique_id == 0x80000287) {",
          "935:     } else {",
          "936:       if (unique_id < 0x80000218) rp[0] -= 512;",
          "937:       pix[0] = rp[0] + rp[2];",
          "938:       pix[2] = rp[0] + rp[1];",
          "939:       pix[1] = rp[0] + ((-778*rp[1] - (rp[2] << 11)) >> 12);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1236:   free (huff);",
          "1237: }",
          "1257:    Returns 1 for a Coolpix 995, 0 for anything else.",
          "",
          "[Removed Lines]",
          "1240:    Figure out if a NEF file is compressed.  These fancy heuristics",
          "1241:    are only needed for the D100, thanks to a bug in some cameras",
          "1242:    that tags all images as \"compressed\".",
          "1244: int CLASS nikon_is_compressed()",
          "1245: {",
          "1246:   uchar test[256];",
          "1247:   int i;",
          "1249:   fseek (ifp, data_offset, SEEK_SET);",
          "1250:   fread (test, 1, 256, ifp);",
          "1251:   for (i=15; i < 256; i+=16)",
          "1252:     if (test[i]) return 1;",
          "1253:   return 0;",
          "1254: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1326:     if (tail[i]) nz++;",
          "1327:   return nz > 20;",
          "1328: }",
          "1330: void CLASS ppm_thumb()",
          "1331: {",
          "1332:   char *thumb;",
          "",
          "[Removed Lines]",
          "1329: #line 1600 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "1314: #line 1585 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1714:  if ((diff & (1 << (len[c]-1))) == 0)",
          "1715:    diff -= (1 << len[c]) - 1;",
          "1716:  if (diff == 65535) diff = -32768;",
          "1720:       }",
          "1721:     }",
          "1722:   }",
          "",
          "[Removed Lines]",
          "1717:  pred[c] += diff;",
          "1718:  if (row >= 0 && (unsigned)(col+c) < width)",
          "1719:    RAW(row,col+c) = pred[c];",
          "",
          "[Added Lines]",
          "1702:  RAW(row,col+c) = pred[c] += diff;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1915:  }",
          "1916:       } else if ((nonz[i & 1] = pana_bits(8)) || i > 11)",
          "1917:  pred[i & 1] = nonz[i & 1] << 4 | pana_bits(4);",
          "1920:     }",
          "1921: }",
          "",
          "[Removed Lines]",
          "1918:       if (col < width)",
          "1919:  if ((RAW(row,col) = pred[col & 1]) > 4098) derror();",
          "",
          "[Added Lines]",
          "1901:       if ((RAW(row,col) = pred[col & 1]) > 4098 && col < width) derror();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2682:           }",
          "2683: #else",
          "2684:       for (i=0; i < 16; i++, col+=2)",
          "2686: #endif",
          "2687:       col -= col & 1 ? 1:31;",
          "2688:     }",
          "",
          "[Removed Lines]",
          "2685:  if (col < width) RAW(row,col) = curve[pix[i] << 1] >> 2;",
          "",
          "[Added Lines]",
          "2667:  RAW(row,col) = curve[pix[i] << 1] >> 2;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2897:   jas_stream_close (in);",
          "2898: #endif",
          "2899: }",
          "2901: void CLASS crop_masked_pixels()",
          "2902: {",
          "2903:   int row, col;",
          "",
          "[Removed Lines]",
          "2900: #line 3878 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2882: #line 3860 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2938:     mask[0][3] = -2;",
          "2939:     goto sides;",
          "2940:   }",
          "2945:   if (load_raw == &CLASS canon_600_load_raw ||",
          "2946:      (load_raw == &CLASS eight_bit_load_raw && strncmp(model,\"DC2\",3)) ||",
          "2947:       load_raw == &CLASS kodak_262_load_raw ||",
          "2948:      (load_raw == &CLASS packed_load_raw && (load_flags & 32))) {",
          "",
          "[Removed Lines]",
          "2941:   if (load_raw == &CLASS sony_load_raw) {",
          "2942:     mask[0][3] = 9;",
          "2943:     goto sides;",
          "2944:   }",
          "",
          "[Added Lines]",
          "2924:       load_raw == &CLASS sony_load_raw ||",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3000:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
          "3001: #endif",
          "3002: }",
          "3004: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
          "3005: {",
          "3006:   int i;",
          "",
          "[Removed Lines]",
          "3003: #line 4146 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2982: #line 4125 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4495:     fseek (ifp, save, SEEK_SET);",
          "4496:   }",
          "4497: }",
          "4499: void CLASS parse_makernote (int base, int uptag)",
          "4500: {",
          "4501:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4498: #line 5645 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4477: #line 5624 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4789:       fseek (ifp, i, SEEK_CUR);",
          "4790: get2_rggb:",
          "4791:       FORC4 cam_mul[c ^ (c >> 1)] = get2();",
          "4793:       fseek (ifp, i, SEEK_CUR);",
          "4794:       FORC4 sraw_mul[c ^ (c >> 1)] = get2();",
          "4795:     }",
          "",
          "[Removed Lines]",
          "4792:       i = len == 1312 ? 112:22;",
          "",
          "[Added Lines]",
          "4771:       i = len >> 3 == 164 ? 112:22;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5010:     fseek (ifp, save, SEEK_SET);",
          "5011:   }",
          "5012: }",
          "5014: int CLASS parse_tiff_ifd (int base)",
          "5015: {",
          "5016:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5013: #line 6165 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4992: #line 6144 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5591:       case 262:",
          "5592:  load_raw = &CLASS kodak_262_load_raw;   break;",
          "5593:       case 34713:",
          "5595:       case 34892:",
          "5597:       case 65535:",
          "5598:  load_raw = &CLASS pentax_load_raw;   break;",
          "5599:       case 65000:",
          "",
          "[Removed Lines]",
          "5594:  load_raw = &CLASS nikon_load_raw;   break;",
          "5596:  load_raw = &CLASS lossy_dng_load_raw;  break;",
          "",
          "[Added Lines]",
          "5573:  if ((raw_width+9)/10*16*raw_height == tiff_ifd[raw].bytes) {",
          "5574:    load_raw = &CLASS packed_load_raw;",
          "5575:    load_flags = 1;",
          "5576:  } else if (raw_width*raw_height*2 == tiff_ifd[raw].bytes) {",
          "5577:    load_raw = &CLASS unpacked_load_raw;",
          "5578:    load_flags = 4;",
          "5579:    order = 0x4d4d;",
          "5580:  } else",
          "5581:    load_raw = &CLASS nikon_load_raw;   break;",
          "5583:  load_raw = &CLASS lossy_dng_load_raw;   break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5607:     }",
          "5608:   if (!dng_version)",
          "5609:     if ( (tiff_samples == 3 && tiff_ifd[raw].bytes &&",
          "5611:       || (tiff_bps == 8 && !strstr(make,\"KODAK\") && !strstr(make,\"Kodak\") &&",
          "5612:    !strstr(model2,\"DEBUG RAW\")))",
          "5613:       is_raw = 0;",
          "",
          "[Removed Lines]",
          "5610:    tiff_bps != 14 && tiff_bps != 2048 && tiff_compress != 32770)",
          "",
          "[Added Lines]",
          "5597:    tiff_bps != 14 && tiff_bps != 2048 &&",
          "5598:    tiff_compress != 32769 && tiff_compress != 32770)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6080:     } else if (tag == 0xc000) {",
          "6081:       c = order;",
          "6082:       order = 0x4949;",
          "6084:       height = get4();",
          "6085:       order = c;",
          "6086:     }",
          "",
          "[Removed Lines]",
          "6083:       width  = get4();",
          "",
          "[Added Lines]",
          "6071:       if ((width = get4()) > 10000) width = get4();",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6254:     data_offset = get4();",
          "6255:   }",
          "6256: }",
          "6258: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6259: {",
          "6260:   int i;",
          "",
          "[Removed Lines]",
          "6257: #line 7411 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6245: #line 7399 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "6355:   }",
          "6356:   is_foveon = 1;",
          "6357: }",
          "6360:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6358: #line 7514 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6346: #line 7502 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "6383:  { 4716,603,-830,-7798,15474,2480,-1496,1937,6651 } },",
          "6384:     { \"Canon EOS 5D\", 0, 0xe6c,",
          "6385:  { 6347,-479,-972,-8297,15954,2480,-1968,2131,7649 } },",
          "6386:     { \"Canon EOS 7D\", 0, 0x3510,",
          "6387:  { 6844,-996,-856,-3876,11761,2396,-593,1772,6198 } },",
          "6388:     { \"Canon EOS 10D\", 0, 0xfa0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6374:     { \"Canon EOS 6D\", 0, 0x3c82,",
          "6375:  { 7034,-804,-1014,-4420,12564,2058,-851,1994,5758 } },",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "6419:  { 6771,-1139,-977,-7818,15123,2928,-1244,1437,7533 } },",
          "6420:     { \"Canon EOS 1100D\", 0, 0x3510,",
          "6421:  { 6444,-904,-893,-4563,12308,2535,-903,2016,6728 } },",
          "6422:     { \"Canon EOS-1Ds Mark III\", 0, 0x3bb0,",
          "6423:  { 5859,-211,-930,-8255,16017,2353,-1732,1887,7448 } },",
          "6424:     { \"Canon EOS-1Ds Mark II\", 0, 0xe80,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6412:     { \"Canon EOS M\", 0, 0,",
          "6413:  { 6602,-841,-939,-4472,12458,2247,-975,2039,6148 } },",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6452:     { \"Canon PowerShot G12\", 0, 0,",
          "6453:  { 13244,-5501,-1248,-1508,9858,1935,-270,1083,4366 } },",
          "6454:     { \"Canon PowerShot G15\", 0, 0,",
          "6456:     { \"Canon PowerShot G1 X\", 0, 0,",
          "6457:  { 7378,-1255,-1043,-4088,12251,2048,-876,1946,5805 } },",
          "6458:     { \"Canon PowerShot G1\", 0, 0,",
          "",
          "[Removed Lines]",
          "6455:  { 7474,-2301,-567,-4056,11456,2975,-222,716,4181} },",
          "",
          "[Added Lines]",
          "6447:  { 7474,-2301,-567,-4056,11456,2975,-222,716,4181 } },",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "6493:  { 8039,-2643,-654,-3783,11230,2930,-206,690,4194 } },",
          "6494:     { \"Canon PowerShot S100\", 0, 0,",
          "6495:  { 7968,-2565,-636,-2873,10697,2513,180,667,4211 } },",
          "6497:  { 12513,-4407,-1242,-2680,10276,2405,-878,2215,4734 } },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6488:     { \"Canon PowerShot S110\", 0, 0,",
          "6489:  { 8039,-2643,-654,-3783,11230,2930,-206,690,4194 } },",
          "6490:     { \"Canon PowerShot SX1 IS\", 0, 0,",
          "6491:  { 6578,-259,-502,-5974,13030,3309,-308,1058,4970 } },",
          "6492:     { \"Canon PowerShot SX50 HS\", 0, 0,",
          "6493:  { 12432,-4753,-1247,-2110,10691,1629,-412,1623,4926 } },",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "6509:  { 14573,-5482,-1546,-1266,9799,1468,-1040,1912,3810 } },",
          "6511:  { 14062,-5199,-1446,-4712,12470,2243,-1286,2028,4836 } },",
          "6515:  { 14134,-5576,-1527,-1991,10719,1273,-1158,1929,3581 } },",
          "",
          "[Removed Lines]",
          "6512:     { \"Canon PowerShot SX1 IS\", 0, 0,",
          "6513:  { 6578,-259,-502,-5974,13030,3309,-308,1058,4970 } },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "6541:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6542:     { \"FUJIFILM F6\", 0, 0,",
          "6543:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6545:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6546:     { \"FUJIFILM F7\", 0, 0,",
          "6547:  { 10004,-3219,-1201,-7036,15047,2107,-1863,2565,7736 } },",
          "6548:     { \"FUJIFILM F800\", 0, 0,",
          "6549:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6550:     { \"FUJIFILM F8\", 0, 0,",
          "6552:     { \"FUJIFILM S100FS\", 514, 0,",
          "6553:  { 11521,-4355,-1065,-6524,13767,3058,-1466,1984,6045 } },",
          "6554:     { \"FUJIFILM S200EXR\", 512, 0x3fff,",
          "",
          "[Removed Lines]",
          "6544:     { \"FUJIFILM F77\", 0, 0,",
          "6551:  { 11044,-3888,-1120,-7248,15168,2208,-1531,2277,8069 } },",
          "",
          "[Added Lines]",
          "6540:     { \"FUJIFILM F77\", 0, 0xfe9,",
          "6547:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "6601:  { 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },",
          "6602:     { \"FUJIFILM X-Pro1\", 0, 0,",
          "6603:  { 10413,-3996,-993,-3721,11640,2361,-733,1540,6011 } },",
          "6604:     { \"FUJIFILM X-S1\", 0, 0,",
          "6605:  { 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6600:     { \"FUJIFILM X-E1\", 0, 0,",
          "6601:  { 10413,-3996,-993,-3721,11640,2361,-733,1540,6011 } },",
          "6602:     { \"FUJIFILM XF1\", 0, 0,",
          "6603:  { 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6619:  { 10592,-2206,-967,-1944,11685,230,2206,670,1273 } },",
          "6620:     { \"KODAK EOSDCS3B\", 0, 0,",
          "6621:  { 9898,-2700,-940,-2478,12219,206,1985,634,1031 } },",
          "6623:  { 24542,-10860,-3401,-1490,11370,-297,2858,-605,3225 } },",
          "6625:  { 20482,-7172,-3125,-1033,10410,-285,2542,226,3136 } },",
          "6627:  { 23617,-10175,-3149,-2054,11749,-272,2586,-489,3453 } },",
          "6629:  { 13095,-6231,154,12221,-21,-2137,895,4602,2258 } },",
          "6631:  { 18244,-6351,-2739,-791,11193,-521,3711,-129,2802 } },",
          "6632:     { \"Kodak DCS720X\", 0, 0,",
          "6633:  { 11775,-5884,950,9556,1846,-1286,-1019,6221,2728 } },",
          "",
          "[Removed Lines]",
          "6622:     { \"Kodak DCS520C\", 180, 0,",
          "6624:     { \"Kodak DCS560C\", 188, 0,",
          "6626:     { \"Kodak DCS620C\", 180, 0,",
          "6628:     { \"Kodak DCS620X\", 185, 0,",
          "6630:     { \"Kodak DCS660C\", 214, 0,",
          "",
          "[Added Lines]",
          "6622:     { \"Kodak DCS520C\", 178, 0,",
          "6624:     { \"Kodak DCS560C\", 177, 0,",
          "6626:     { \"Kodak DCS620C\", 177, 0,",
          "6628:     { \"Kodak DCS620X\", 176, 0,",
          "6630:     { \"Kodak DCS660C\", 173, 0,",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6711:  { 8736,-2458,-935,-9075,16894,2251,-1354,1242,8263 } },",
          "6712:     { \"NIKON D3100\", 0, 0,",
          "6713:  { 7911,-2167,-813,-5327,13150,2408,-1288,2483,7968 } },",
          "6715:  { 7013,-1408,-635,-5268,12902,2640,-1470,2801,7379 } },",
          "6716:     { \"NIKON D300\", 0, 0,",
          "6717:  { 9030,-1992,-715,-8465,16302,2255,-2689,3217,8069 } },",
          "",
          "[Removed Lines]",
          "6714:     { \"NIKON D3200\", 0, 0,",
          "",
          "[Added Lines]",
          "6714:     { \"NIKON D3200\", 0, 0xfb9,",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6733:  { 8198,-2239,-724,-4871,12389,2798,-1043,2050,7181 } },",
          "6734:     { \"NIKON D50\", 0, 0,",
          "6735:  { 7732,-2422,-789,-8238,15884,2498,-859,783,7330 } },",
          "6736:     { \"NIKON D60\", 0, 0,",
          "6737:  { 8736,-2458,-935,-9075,16894,2251,-1354,1242,8263 } },",
          "6738:     { \"NIKON D7000\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6736:     { \"NIKON D600\", 0, 0x3e07,",
          "6737:  { 8178,-2245,-609,-4857,12394,2776,-1207,2086,7298 } },",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "6779:  { 11432,-3679,-1111,-3169,11239,2202,-791,1380,4455 } },",
          "6780:     { \"NIKON COOLPIX P7100\", 0, 0,",
          "6781:  { 11053,-4269,-1024,-1976,10182,2088,-526,1263,4469 } },",
          "6783:  { 10321,-3920,-931,-2750,11146,1824,-442,1545,5539 } },",
          "6784:     { \"NIKON 1 \", 0, 0,",
          "6785:  { 8994,-2667,-865,-4594,12324,2552,-699,1786,6260 } },",
          "6786:     { \"OLYMPUS C5050\", 0, 0,",
          "",
          "[Removed Lines]",
          "6782:     { \"NIKON COOLPIX P7700\", 0, 0,",
          "",
          "[Added Lines]",
          "6784:     { \"NIKON COOLPIX P7700\", 200, 0,",
          "6786:     { \"NIKON 1 V2\", 0, 0,",
          "6787:  { 6588,-1305,-693,-3277,10987,2634,-355,2016,5106 } },",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "6821:  { 8785,-2529,-1033,-7639,15624,2112,-1783,2300,7817 } },",
          "6822:     { \"OLYMPUS E-520\", 0, 0xfd2,",
          "6823:  { 8344,-2322,-1020,-7596,15635,2048,-1748,2269,7287 } },",
          "6825:  { 11200,-3783,-1325,-4576,12593,2206,-695,1742,7504 } },",
          "6826:     { \"OLYMPUS E-600\", 0, 0xfaf,",
          "6827:  { 8453,-2198,-1092,-7609,15681,2008,-1725,2337,7824 } },",
          "",
          "[Removed Lines]",
          "6824:     { \"OLYMPUS E-5\", 0, 0,",
          "",
          "[Added Lines]",
          "6828:     { \"OLYMPUS E-5\", 0, 0xeec,",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "6841:  { 15030,-5552,-1806,-3987,12387,1767,-592,1670,7023 } },",
          "6842:     { \"OLYMPUS E-PL3\", 0, 0,",
          "6843:  { 7575,-2159,-571,-3722,11341,2725,-1434,2819,6271 } },",
          "6845:  { 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },",
          "6846:     { \"OLYMPUS E-PM1\", 0, 0,",
          "6847:  { 7575,-2159,-571,-3722,11341,2725,-1434,2819,6271 } },",
          "6848:     { \"OLYMPUS E-PM2\", 0, 0,",
          "6849:  { 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },",
          "6851:  { 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },",
          "6852:     { \"OLYMPUS SP350\", 0, 0,",
          "6853:  { 12078,-4836,-1069,-6671,14306,2578,-786,939,7418 } },",
          "",
          "[Removed Lines]",
          "6844:     { \"OLYMPUS E-PL5\", 0, 0,",
          "6850:     { \"OLYMPUS E-M5\", 0, 0,",
          "",
          "[Added Lines]",
          "6848:     { \"OLYMPUS E-PL5\", 0, 0xfcb,",
          "6854:     { \"OLYMPUS E-M5\", 0, 0xfe1,",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6951:  { 10148,-3743,-991,-2837,11366,1659,-701,1893,4899 } },",
          "6952:     { \"LEICA D-LUX 5\", 143, 0,",
          "6953:  { 10909,-4295,-948,-1333,9306,2399,22,1738,4582 } },",
          "6954:     { \"Panasonic DMC-FZ100\", 143, 0xfff,",
          "6955:  { 16197,-6146,-1761,-2393,10765,1869,366,2238,5248 } },",
          "6956:     { \"LEICA V-LUX 2\", 143, 0xfff,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6958:     { \"Panasonic DMC-LX7\", 143, 0,",
          "6959:  { 10148,-3743,-991,-2837,11366,1659,-701,1893,4899 } },",
          "6960:     { \"LEICA D-LUX 6\", 143, 0,",
          "6961:  { 10148,-3743,-991,-2837,11366,1659,-701,1893,4899 } },",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6961:  { 11904,-4541,-1189,-2355,10899,1662,-296,1586,4289 } },",
          "6962:     { \"Panasonic DMC-FZ200\", 143, 0xfff,",
          "6963:  { 8112,-2563,-740,-3730,11784,2197,-941,2075,4933 } },",
          "6964:     { \"Panasonic DMC-FX150\", 15, 0xfff,",
          "6965:  { 9082,-2907,-925,-6119,13377,3058,-1797,2641,5609 } },",
          "6966:     { \"Panasonic DMC-G10\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6972:     { \"LEICA V-LUX 4\", 143, 0xfff,",
          "6973:  { 8112,-2563,-740,-3730,11784,2197,-941,2075,4933 } },",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "6971:  { 10113,-3400,-1114,-4765,12683,2317,-377,1437,6710 } },",
          "6972:     { \"Panasonic DMC-G3\", 143, 0xfff,",
          "6973:  { 6763,-1919,-863,-3868,11515,2684,-1216,2387,5879 } },",
          "6974:     { \"Panasonic DMC-GF1\", 15, 0xf92,",
          "6975:  { 7888,-1902,-1011,-8106,16085,2099,-2353,2866,7330 } },",
          "6976:     { \"Panasonic DMC-GF2\", 143, 0xfff,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6984:     { \"Panasonic DMC-G5\", 143, 0xfff,",
          "6985:  { 7798,-2562,-740,-3879,11584,2613,-1055,2248,5434 } },",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "6983:  { 6299,-1466,-532,-6535,13852,2969,-2331,3112,5984 } },",
          "6984:     { \"Panasonic DMC-GH2\", 15, 0xf95,",
          "6985:  { 7780,-2410,-806,-3913,11724,2484,-1018,2390,5298 } },",
          "6987:  { 6559,-1752,-491,-3672,11407,2586,-962,1875,5130 } },",
          "6988:     { \"Panasonic DMC-GX1\", 143, 0,",
          "6989:  { 6763,-1919,-863,-3868,11515,2684,-1216,2387,5879 } },",
          "",
          "[Removed Lines]",
          "6986:     { \"Panasonic DMC-GH3\", 144, 0xf95,",
          "",
          "[Added Lines]",
          "6998:     { \"Panasonic DMC-GH3\", 144, 0,",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "7005:  { 21014,-7891,-2613,-3056,12201,856,-2203,5125,8042 } },",
          "7006:     { \"SAMSUNG EX1\", 0, 0x3e00,",
          "7007:  { 8898,-2498,-994,-3144,11328,2066,-760,1381,4576 } },",
          "7009:  { 6933,-2268,-753,-4921,13387,1647,-803,1641,6096 } },",
          "7010:     { \"SAMSUNG NX1000\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7020:     { \"SAMSUNG EX2F\", 0, 0x7ff,",
          "7021:  { 10648,-3897,-1055,-2022,10573,1668,-492,1611,4742 } },",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "7019:  { 11885,-3968,-1473,-4214,12299,1916,-835,1655,5549 } },",
          "7021:  { 16442,-2956,-2422,-2877,12128,750,-1136,6066,4559 } },",
          "7023:  { 7924,-1910,-777,-8226,15459,2998,-1517,2199,6818,-7242,11401,3481 } },",
          "7024:     { \"SONY DSC-R1\", 512, 0,",
          "7025:  { 8512,-2641,-694,-8042,15670,2526,-1821,2117,7414 } },",
          "7026:     { \"SONY DSC-V3\", 0, 0,",
          "7027:  { 7511,-2571,-692,-7894,15088,3060,-948,1111,8128 } },",
          "7030:     { \"SONY DSLR-A100\", 0, 0xfeb,",
          "7031:  { 9437,-2811,-774,-8405,16215,2290,-710,596,7181 } },",
          "7032:     { \"SONY DSLR-A290\", 0, 0,",
          "",
          "[Removed Lines]",
          "7022:     { \"SONY DSC-F828\", 491, 0,",
          "7029:  { 7329,-2746,-405,-2691,9338,3354,-136,1259,5051 } },",
          "",
          "[Added Lines]",
          "7036:     { \"SONY DSC-F828\", 0, 0,",
          "7042:     { \"SONY DSC-RX100\", 200, 0,",
          "7043:  { 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },",
          "7044:     { \"SONY DSC-RX1\", 128, 0,",
          "7045:  { 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "7063:  { 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },",
          "7065:  { 6549,-1550,-436,-4880,12435,2753,-854,1868,6976 } },",
          "7067:  { 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },",
          "7068:     { \"SONY NEX-7\", 128, 0,",
          "7069:  { 5491,-1192,-363,-4951,12342,2948,-911,1722,7192 } },",
          "",
          "[Removed Lines]",
          "7066:     { \"SONY NEX-6\", 128, 0,",
          "",
          "[Added Lines]",
          "7082:     { \"SONY NEX-6\", 128, 0,",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "7078:     { \"SONY SLT-A55\", 128, 0,",
          "7079:  { 5932,-1492,-411,-4813,12285,2856,-741,1524,6739 } },",
          "7080:     { \"SONY SLT-A57\", 128, 0,",
          "7082:     { \"SONY SLT-A65\", 128, 0,",
          "7083:  { 5491,-1192,-363,-4951,12342,2948,-911,1722,7192 } },",
          "7084:     { \"SONY SLT-A77\", 128, 0,",
          "",
          "[Removed Lines]",
          "7081:         { 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },",
          "",
          "[Added Lines]",
          "7097:  { 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "7261:     { 12310144, \"CASIO\",    \"EX-Z850\"         ,1 },",
          "7262:     { 12489984, \"CASIO\",    \"EX-Z8\"           ,1 },",
          "7263:     { 15499264, \"CASIO\",    \"EX-Z1050\"        ,1 },",
          "7264:     {  7426656, \"CASIO\",    \"EX-P505\"         ,1 },",
          "7265:     {  9313536, \"CASIO\",    \"EX-P600\"         ,1 },",
          "7266:     { 10979200, \"CASIO\",    \"EX-P700\"         ,1 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7280:     { 18702336, \"CASIO\",    \"EX-ZR100\"        ,1 },",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "7475:     { height  = 3124;   width  = 4688; filters = 0x16161616; }",
          "7476:   if (width == 4352 && (!strcmp(model,\"K-r\") || !strcmp(model,\"K-x\")))",
          "7477:     {   width  = 4309; filters = 0x16161616; }",
          "7479:     { left_margin = 10; width  = 4950; filters = 0x16161616; }",
          "7480:   if (width >= 4960 && !strncmp(model,\"K-5 II\",6))",
          "7481:     { left_margin = 10; width  = 4948; filters = 0x16161616; }",
          "",
          "[Removed Lines]",
          "7478:   if (width >= 4960 && !strcmp(model,\"K-5\"))",
          "",
          "[Added Lines]",
          "7495:   if (width >= 4960 && !strncmp(model,\"K-5\",3))",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "7522:       case 3344: width -= 66;",
          "7523:       case 3872: width -= 6;",
          "7524:     }",
          "7525:     filters = 0;",
          "7526:     load_raw = &CLASS canon_sraw_load_raw;",
          "7527:   } else if (!strcmp(model,\"PowerShot 600\")) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7542:     if (height > width) SWAP(height,width);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "7805:     width  = 4048;",
          "7806:     top_margin  = 11;",
          "7807:     left_margin = 104;",
          "7808:   } else if (is_canon && raw_width == 4312) {",
          "7809:     top_margin  = 18;",
          "7810:     left_margin = 22;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7826:   } else if (is_canon && raw_width == 4176) {",
          "7827:     height = 3045;",
          "7828:     width  = 4072;",
          "7829:     left_margin = 96;",
          "7830:     mask[0][0] = top_margin = 17;",
          "7831:     mask[0][2] = raw_height;",
          "7832:     mask[0][3] = 80;",
          "7833:     filters = 0x49494949;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "7871:     top_margin = 51;",
          "7872:     left_margin = 158;",
          "7873:     goto canon_cr2;",
          "7874:   } else if (is_canon && raw_width == 5712) {",
          "7875:     height = 3752;",
          "7876:     width  = 5640;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7900:   } else if (is_canon && raw_width == 5568) {",
          "7901:     top_margin = 38;",
          "7902:     left_margin = 72;",
          "7903:     goto canon_cr2;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "7915:     width -= 44;",
          "7916:   } else if (!strcmp(model,\"D3200\") ||",
          "7917:       !strcmp(model,\"D800E\") ||",
          "7918:       !strcmp(model,\"D800\")) {",
          "7919:     width -= 46;",
          "7920:   } else if (!strcmp(model,\"D4\")) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7948:       !strcmp(model,\"D600\")  ||",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "7927:       !strncmp(model,\"D70\",3)) {",
          "7928:     width--;",
          "7929:   } else if (!strcmp(model,\"D100\")) {",
          "7933:       raw_width = (width += 3) + 3;",
          "7935:   } else if (!strcmp(model,\"D200\")) {",
          "7936:     left_margin = 1;",
          "7937:     width -= 4;",
          "",
          "[Removed Lines]",
          "7930:     if (tiff_compress == 34713 && !nikon_is_compressed()) {",
          "7931:       load_raw = &CLASS packed_load_raw;",
          "7932:       load_flags |= 1;",
          "7934:     }",
          "",
          "[Added Lines]",
          "7961:     if (load_flags)",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "7944:     else width -= 8;",
          "7945:   } else if (!strncmp(model,\"D300\",4)) {",
          "7946:     width -= 32;",
          "7947:   } else if (!strncmp(model,\"COOLPIX P\",9)) {",
          "7948:     load_flags = 24;",
          "7949:     filters = 0x94949494;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7975:   } else if (!strcmp(make,\"NIKON\") && raw_width == 4032) {",
          "7976:     adobe_coeff (\"NIKON\",\"COOLPIX P7700\");",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "8059:       maximum = (is_raw == 2 && shot_select) ? 0x2f00 : 0x3e00;",
          "8060:     top_margin = (raw_height - height) >> 2 << 1;",
          "8061:     left_margin = (raw_width - width ) >> 2 << 1;",
          "8062:     if (width == 3328) {",
          "8063:       width = 3262;",
          "8064:       left_margin = 34;",
          "8065:     }",
          "8069:       left_margin = 0;",
          "8070:       filters = 2;",
          "8071:     }",
          "",
          "[Removed Lines]",
          "8066:     if (!strcmp(model,\"X10\") || !strcmp(model,\"X-S1\"))",
          "8067:       filters = 0x16161616;",
          "8068:     if (!strcmp(model,\"X-Pro1\")) {",
          "",
          "[Added Lines]",
          "8092:     if (width == 2848) filters = 0x16161616;",
          "8097:     if (width == 4952) {",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "8201:     load_raw = &CLASS unpacked_load_raw;",
          "8202:     load_flags = 6;",
          "8203:     maximum = 0x3df;",
          "8204:   } else if (!strcmp(model,\"STV680 VGA\")) {",
          "8205:     height = 484;",
          "8206:     width  = 644;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8233:   } else if (!strcmp(model,\"EX2F\")) {",
          "8234:     height = 3045;",
          "8235:     width  = 4070;",
          "8236:     top_margin = 3;",
          "8237:     order = 0x4949;",
          "8238:     filters = 0x49494949;",
          "8239:     load_raw = &CLASS unpacked_load_raw;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "8508:       thumb_length = flen - (thumb_offset = 0xa39800);",
          "8509:       thumb_height = 480;",
          "8510:       thumb_width  = 640;",
          "8511:     }",
          "8512:   } else if (!strcmp(model,\"N Digital\")) {",
          "8513:     height = 2047;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8547:     } else if (!strcmp(model,\"XZ-2\")) {",
          "8548:       load_raw = &CLASS packed_load_raw;",
          "8549:       load_flags = 24;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "8518:   } else if (!strcmp(model,\"DSC-F828\")) {",
          "8519:     width = 3288;",
          "8520:     left_margin = 5;",
          "8521:     data_offset = 862144;",
          "8522:     load_raw = &CLASS sony_load_raw;",
          "8523:     filters = 0x9c9c9c9c;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8560:     mask[1][3] = -17;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "8526:   } else if (!strcmp(model,\"DSC-V3\")) {",
          "8527:     width = 3109;",
          "8528:     left_margin = 59;",
          "8529:     data_offset = 787392;",
          "8530:     load_raw = &CLASS sony_load_raw;",
          "8531:   } else if (!strcmp(make,\"SONY\") && raw_width == 3984) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8569:     mask[0][1] = 9;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "8795:     height = 2752;",
          "8796:     width  = 3672;",
          "8797:     raw_width = 5632;",
          "8798:   } else if (!strcmp(model,\"EX-P505\")) {",
          "8799:     height = 1928;",
          "8800:     width  = 2568;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8839:   } else if (!strcmp(model,\"EX-ZR100\")) {",
          "8840:     height = 3044;",
          "8841:     width  = 4072;",
          "8842:     raw_width = 4096;",
          "8843:     load_flags = 80;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "8845: }",
          "8849: void CLASS convert_to_rgb()",
          "8850: {",
          "8851: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8848: #line 10095 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8894: #line 10141 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "9076:   if (flip & 1) col = iwidth  - 1 - col;",
          "9077:   return row * iwidth + col;",
          "9078: }",
          "9080: void CLASS tiff_set (ushort *ntag,",
          "9081:  ushort tag, ushort type, int count, int val)",
          "9082: {",
          "",
          "[Removed Lines]",
          "9079: #line 10351 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9125: #line 10397 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:    for more information",
          "25: #include <math.h>",
          "26: #define CLASS LibRaw::",
          "27: #include \"libraw/libraw_types.h\"",
          "",
          "[Removed Lines]",
          "24: #line 3983 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "24: #line 3962 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #include \"libraw/libraw.h\"",
          "30: #include \"internal/defines.h\"",
          "31: #include \"internal/var_defines.h\"",
          "34:    Seach from the current directory up to the root looking for",
          "35:    a \".badpixels\" file, and fix those pixels now.",
          "",
          "[Removed Lines]",
          "32: #line 3994 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "32: #line 3973 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #endif",
          "55:   if (cfname)",
          "56:     fp = fopen (cfname, \"r\");",
          "58:   if (!fp)",
          "59:       {",
          "60: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "57: #line 4044 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "57: #line 4023 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10006 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10052 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/defines.h||internal/defines.h": [
          "File: internal/defines.h -> internal/defines.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NO_JASPER",
          "30: #endif",
          "31: #line 38 \"dcraw/dcraw.c\"",
          "34: #ifndef _GNU_SOURCE",
          "35: #define _GNU_SOURCE",
          "",
          "[Removed Lines]",
          "32: #define DCRAW_VERSION \"9.16\"",
          "",
          "[Added Lines]",
          "32: #define DCRAW_VERSION \"9.17\"",
          "",
          "---------------"
        ],
        "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h": [
          "File: internal/libraw_internal_funcs.h -> internal/libraw_internal_funcs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     void        nikon_load_raw();",
          "89:     int         nikon_e995();",
          "90:     int         nikon_e2100();",
          "91:     void        nikon_3700();",
          "",
          "[Removed Lines]",
          "88:     int         nikon_is_compressed();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libraw/libraw_version.h||libraw/libraw_version.h": [
          "File: libraw/libraw_version.h -> libraw/libraw_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define LIBRAW_MAJOR_VERSION  0",
          "27: #define LIBRAW_MINOR_VERSION  15",
          "28: #define LIBRAW_PATCH_VERSION  0",
          "31: #define LIBRAW_SHLIB_CURRENT   8",
          "32: #define LIBRAW_SHLIB_REVISION  0",
          "",
          "[Removed Lines]",
          "29: #define LIBRAW_VERSION_TAIL   Beta2",
          "",
          "[Added Lines]",
          "29: #define LIBRAW_VERSION_TAIL   Beta3",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2698: \"Canon PowerShot S100\",",
          "2699: \"Canon PowerShot S110\",",
          "2700: \"Canon PowerShot SX1 IS\",",
          "2702: \"Canon PowerShot SX110 IS (CHDK hack)\",",
          "2703: \"Canon PowerShot SX120 IS (CHDK hack)\",",
          "2704: \"Canon PowerShot SX220 HS (CHDK hack)\",",
          "",
          "[Removed Lines]",
          "2701: \"Canon PowerShot SX50 IS\",",
          "",
          "[Added Lines]",
          "2701: \"Canon PowerShot SX50 HS\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2709: \"Canon EOS 5D\",",
          "2710: \"Canon EOS 5D Mark II\",",
          "2711: \"Canon EOS 5D Mark III\",",
          "2712: \"Canon EOS 7D\",",
          "2713: \"Canon EOS 10D\",",
          "2714: \"Canon EOS 20D\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: \"Canon EOS 6D\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2727: \"Canon EOS 1000D / Digital Rebel XS / Kiss Digital F\",",
          "2728: \"Canon EOS 1100D / Digital Rebel T3 / Kiss Digital X50\",",
          "2729: \"Canon EOS D2000C\",",
          "2730: \"Canon EOS-1D\",",
          "2731: \"Canon EOS-1DS\",",
          "2732: \"Canon EOS-1D X\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2731: \"Canon EOS M\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2757: \"Casio EX-Z850\",",
          "2758: \"Casio EX-Z1050\",",
          "2759: \"Casio EX-Z1080\",",
          "2760: \"Casio Exlim Pro 505\",",
          "2761: \"Casio Exlim Pro 600\",",
          "2762: \"Casio Exlim Pro 700\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2762: \"Casio EX-ZR100\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2794: \"Fuji X-S1\",",
          "2795: \"Fuji X100\",",
          "2796: \"Fuji X10\",",
          "2797: \"Fuji XF1\",",
          "2798: \"Fuji IS-1\",",
          "2799: \"Hasselblad CFV\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2800: \"Fuji X-E1\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2876: \"Leica D-LUX3\",",
          "2877: \"Leica D-LUX4\",",
          "2878: \"Leica D-LUX5\",",
          "2879: \"Leica V-LUX1\",",
          "2880: \"Leica V-LUX2\",",
          "2881: \"Leica V-LUX3\",",
          "2882: \"Logitech Fotoman Pixtura\",",
          "2883: \"Mamiya ZD\",",
          "2884: \"Micron 2010\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2883: \"Leica D-LUX6\",",
          "2887: \"Leica V-LUX4\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2957: \"Nikon Coolpix P6000\",",
          "2958: \"Nikon Coolpix P7000\",",
          "2959: \"Nikon Coolpix P7100\",",
          "2960: \"Nikon Coolpix S6 (\\\"DIAG RAW\\\" hack)\",",
          "2961: \"Nokia N95\",",
          "2962: \"Nokia X2\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2966: \"Nikon Coolpix P7700\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3004: \"Olympus SP560UZ\",",
          "3005: \"Olympus SP570UZ\",",
          "3006: \"Olympus XZ-1\",",
          "3007: \"Panasonic DMC-FZ8\",",
          "3008: \"Panasonic DMC-FZ18\",",
          "3009: \"Panasonic DMC-FZ28\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3014: \"Olympus XZ-2\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3019: \"Panasonic DMC-G10\",",
          "3020: \"Panasonic DMC-G2\",",
          "3021: \"Panasonic DMC-G3\",",
          "3022: \"Panasonic DMC-GF1\",",
          "3023: \"Panasonic DMC-GF2\",",
          "3024: \"Panasonic DMC-GF3\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3030: \"Panasonic DMC-G5\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3079: \"Rollei d530flex\",",
          "3080: \"RoverShot 3320af\",",
          "3081: \"Samsung EX1\",",
          "3082: \"Samsung GX-1S\",",
          "3083: \"Samsung GX10\",",
          "3084: \"Samsung GX20\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3091: \"Samsung EX2F\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3102: \"Sigma SD1\",",
          "3103: \"Sigma SD1 Merill\",",
          "3104: \"Sigma DP1\",",
          "3105: \"Sigma DP1S\",",
          "3106: \"Sigma DP1X\",",
          "3107: \"Sigma DP2\",",
          "3108: \"Sigma DP2S\",",
          "3109: \"Sigma DP2X\",",
          "3110: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3115: \"Sigma DP1 Merill\",",
          "3119: \"Sigma DP2 Merill\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3117: \"SMaL Ultra-Pocket 5\",",
          "3118: \"Sony DSC-F828\",",
          "3119: \"Sony DSC-R1\",",
          "3120: \"Sony DSC-RX100\",",
          "3121: \"Sony DSC-V3\",",
          "3122: \"Sony DSLR-A100\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3132: \"Sony DSC-RX1\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60d701d9807fa9a45582ff4047b4a8be7d680ff9",
      "candidate_info": {
        "commit_hash": "60d701d9807fa9a45582ff4047b4a8be7d680ff9",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/60d701d9807fa9a45582ff4047b4a8be7d680ff9",
        "files": [
          "Changelog.txt",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "internal/defines.h",
          "src/libraw_cxx.cpp"
        ],
        "message": "row_pitch used only in LibRaw own code, not in dcraw imported one",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "internal/defines.h||internal/defines.h",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143: unsigned black, cblack[4], maximum, mix_green, raw_color, zero_is_bad;",
          "144: unsigned zero_after_ff, is_raw, dng_version, is_foveon, data_error;",
          "145: unsigned tile_width, tile_length, gpsdata[32], load_flags;",
          "147: ushort shrink, iheight, iwidth, fuji_width, thumb_width, thumb_height;",
          "148: ushort *raw_image, (*image)[4];",
          "149: ushort white[8][8], curve[0x10000], cr2_slice[3], sraw_mul[4];",
          "",
          "[Removed Lines]",
          "146: ushort raw_height, raw_width, raw_pitch, height, width, top_margin, left_margin;",
          "",
          "[Added Lines]",
          "146: ushort raw_height, raw_width, height, width, top_margin, left_margin;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240: #define RAW(row,col) \\",
          "244: #define FC(row,col) \\",
          "",
          "[Removed Lines]",
          "241:  raw_image[(row)*raw_pitch+(col)]",
          "",
          "[Added Lines]",
          "241:  raw_image[(row)*raw_width+(col)]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "530:   for (irow=row=0; irow < height; irow++) {",
          "531:     if (fread (data, 1, 1120, ifp) < 1120) derror();",
          "533:     for (dp=data; dp < data+1120;  dp+=10, pix+=8) {",
          "534:       pix[0] = (dp[0] << 2) + (dp[1] >> 6    );",
          "535:       pix[1] = (dp[2] << 2) + (dp[1] >> 4 & 3);",
          "",
          "[Removed Lines]",
          "532:     pix = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "532:     pix = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "762:   zero_after_ff = 1;",
          "763:   getbits(-1);",
          "764:   for (row=0; row < raw_height; row+=8) {",
          "766:     nblocks = MIN (8, raw_height-row) * raw_width >> 6;",
          "767:     for (block=0; block < nblocks; block++) {",
          "768:       memset (diffbuf, 0, sizeof diffbuf);",
          "",
          "[Removed Lines]",
          "765:     pixel = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "765:     pixel = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1675:       todo[i+1] = buffer >> (14-i)*5;",
          "1676:     }",
          "1677:     for (i=0; i < 16; i+=2)",
          "1683:   }",
          "1684:   maximum = 0x3ff;",
          "1685: }",
          "",
          "[Removed Lines]",
          "1678:       {",
          "1679:         int row = todo[i]/raw_width;",
          "1680:         int col = todo[i]%raw_width;",
          "1681:         RAW(row,col) = (todo[i+1] & 0x3ff);",
          "1682:       }",
          "",
          "[Added Lines]",
          "1678:       raw_image[todo[i]] = (todo[i+1] & 0x3ff);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1868:   bkey = get2();",
          "1869:   t_mask = ph1.format == 1 ? 0x5555:0x1354;",
          "1870:   fseek (ifp, data_offset, SEEK_SET);",
          "1877:   if (ph1.format)",
          "1878:     for (i=0; i < raw_width*raw_height; i+=2) {",
          "1880:       a = raw_image[i+0] ^ akey;",
          "1881:       b = raw_image[i+1] ^ bkey;",
          "1882:       raw_image[i+0] = (a & t_mask) | (b & ~t_mask);",
          "1883:       raw_image[i+1] = (b & t_mask) | (a & ~t_mask);",
          "1892:     }",
          "1893: }",
          "",
          "[Removed Lines]",
          "1871: #if 0",
          "1872:   read_shorts (raw_image, raw_width*raw_height); // raw_pitch should be exactly raw_width",
          "1873: #else",
          "1874:   for(int row = 0; row < raw_height; row++)",
          "1875:     read_shorts(raw_image+row*raw_pitch,raw_width);",
          "1876: #endif",
          "1879: #if 0",
          "1884: #else",
          "1885:       int row = i/raw_width;",
          "1886:       int col = i%raw_height;",
          "1887:       a = RAW(row,col) ^ akey;",
          "1888:       b = RAW(row,col+1) ^ bkey;",
          "1889:       RAW(row,col) = (a & t_mask) | (b & ~t_mask);",
          "1890:       RAW(row,col+1) = (b & t_mask) | (a & ~t_mask);",
          "1891: #endif",
          "",
          "[Added Lines]",
          "1867:   read_shorts (raw_image, raw_width*raw_height);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1935:   pixel = (ushort *) calloc (raw_width + raw_height*4, 2);",
          "1936:   merror (pixel, \"phase_one_load_raw_c()\");",
          "1938:   fseek (ifp, strip_offset, SEEK_SET);",
          "1939:   for (row=0; row < raw_height; row++)",
          "1940:     offset[row] = get4();",
          "",
          "[Removed Lines]",
          "1937:   offset = (int *) (pixel + raw_width);",
          "",
          "[Added Lines]",
          "1919:   offset = (int *) (pixel + raw_width);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2027:  fseek (ifp, get4(), SEEK_SET);",
          "2028:       }",
          "2029:       if (filters && c != shot_select) continue;",
          "2031:       read_shorts (pixel, raw_width);",
          "2032:       if (!filters && (row = r - top_margin) < height)",
          "2033:  for (col=0; col < width; col++)",
          "",
          "[Removed Lines]",
          "2030:       if (filters) pixel = raw_image + r*raw_pitch;",
          "",
          "[Added Lines]",
          "2012:       if (filters) pixel = raw_image + r*raw_width;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2045:   int row, col, bits=0;",
          "2047:   while (1 << ++bits < maximum);",
          "2049:   read_shorts (raw_image, raw_width*raw_height);",
          "2054:   for (row=0; row < raw_height; row++)",
          "2055:     for (col=0; col < raw_width; col++)",
          "2056:       if ((RAW(row,col) >>= load_flags) >> bits",
          "",
          "[Removed Lines]",
          "2048: #if 0",
          "2050: #else",
          "2051:   for(row=0;row<raw_height;row++)",
          "2052:     read_shorts(raw_image+row*raw_pitch,raw_width);",
          "2053: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2469:    RAW(y,x) = val;",
          "2470:  }",
          "2471:   }",
          "2473:   for (i=0; i < height*width; i++)",
          "2474:     raw_image[i] = curve[raw_image[i]];",
          "2483:   maximum = 0x3fff;",
          "2484: }",
          "",
          "[Removed Lines]",
          "2472: #if 0",
          "2475: #else",
          "2476:   for (i=0; i < height*width; i++)",
          "2477:     {",
          "2478:       int row = i/width;",
          "2479:       int col = i%width;",
          "2480:       RAW(row,col) = curve[RAW(row,col)];",
          "2481:     }",
          "2482: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2887:     key = key << 8 | head[i];",
          "2888:   fseek (ifp, data_offset, SEEK_SET);",
          "2889:   for (row=0; row < raw_height; row++) {",
          "2891:     if (fread (pixel, 2, raw_width, ifp) < raw_width) derror();",
          "2892:     sony_decrypt ((unsigned int *) pixel, raw_width/2, !row, key);",
          "2893:     for (col=0; col < raw_width; col++)",
          "",
          "[Removed Lines]",
          "2890:     pixel = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "2858:     pixel = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3056:       diff = diff ? -diff : 0x80;",
          "3057:     if (ftell(ifp) + 12 >= seg[1][1])",
          "3058:       diff = 0;",
          "3060:     raw_image[pix] = pred[pix & 1] += diff;",
          "3064:     if (!(pix & 1) && HOLE(pix / raw_width)) pix += 2;",
          "3065:   }",
          "3066:   maximum = 0xff;",
          "",
          "[Removed Lines]",
          "3059: #if 0",
          "3061: #else",
          "3062:     RAW(pix/raw_width,pix%raw_width) = pred[pix & 1] += diff;",
          "3063: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "10832:       merror (meta_data, \"main()\");",
          "10833:     }",
          "10834:     if (filters || colors == 1) {",
          "10838:       merror (raw_image, \"main()\");",
          "10839:     }",
          "10840:     if (verbose)",
          "",
          "[Removed Lines]",
          "10835:       raw_pitch = ((raw_width*2+15)/16)*8; // !!! CHANGE ME",
          "10836:       printf(\"ifname=%s raw_width=%d raw_pitch=%d\\n\",ifname,raw_width,raw_pitch);",
          "10837:       raw_image = (ushort *) calloc ((raw_height+7)*raw_pitch, 2);",
          "",
          "[Added Lines]",
          "10799:       raw_image = (ushort *) calloc ((raw_height+7)*raw_width, 2);",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:   for (irow=row=0; irow < height; irow++) {",
          "277:     if (fread (data, 1, 1120, ifp) < 1120) derror();",
          "279:     for (dp=data; dp < data+1120;  dp+=10, pix+=8) {",
          "280:       pix[0] = (dp[0] << 2) + (dp[1] >> 6    );",
          "281:       pix[1] = (dp[2] << 2) + (dp[1] >> 4 & 3);",
          "",
          "[Removed Lines]",
          "278:     pix = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "278:     pix = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "508:   zero_after_ff = 1;",
          "509:   getbits(-1);",
          "510:   for (row=0; row < raw_height; row+=8) {",
          "512:     nblocks = MIN (8, raw_height-row) * raw_width >> 6;",
          "513:     for (block=0; block < nblocks; block++) {",
          "514:       memset (diffbuf, 0, sizeof diffbuf);",
          "",
          "[Removed Lines]",
          "511:     pixel = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "511:     pixel = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1406:       todo[i+1] = buffer >> (14-i)*5;",
          "1407:     }",
          "1408:     for (i=0; i < 16; i+=2)",
          "1414:   }",
          "1415:   maximum = 0x3ff;",
          "1416: }",
          "",
          "[Removed Lines]",
          "1409:       {",
          "1410:         int row = todo[i]/raw_width;",
          "1411:         int col = todo[i]%raw_width;",
          "1412:         RAW(row,col) = (todo[i+1] & 0x3ff);",
          "1413:       }",
          "",
          "[Added Lines]",
          "1409:       raw_image[todo[i]] = (todo[i+1] & 0x3ff);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1599:   bkey = get2();",
          "1600:   t_mask = ph1.format == 1 ? 0x5555:0x1354;",
          "1601:   fseek (ifp, data_offset, SEEK_SET);",
          "1608:   if (ph1.format)",
          "1609:     for (i=0; i < raw_width*raw_height; i+=2) {",
          "1611:       a = raw_image[i+0] ^ akey;",
          "1612:       b = raw_image[i+1] ^ bkey;",
          "1613:       raw_image[i+0] = (a & t_mask) | (b & ~t_mask);",
          "1614:       raw_image[i+1] = (b & t_mask) | (a & ~t_mask);",
          "1623:     }",
          "1624: }",
          "",
          "[Removed Lines]",
          "1602: #if 0",
          "1603:   read_shorts (raw_image, raw_width*raw_height); // raw_pitch should be exactly raw_width",
          "1604: #else",
          "1605:   for(int row = 0; row < raw_height; row++)",
          "1606:     read_shorts(raw_image+row*raw_pitch,raw_width);",
          "1607: #endif",
          "1610: #if 0",
          "1615: #else",
          "1616:       int row = i/raw_width;",
          "1617:       int col = i%raw_height;",
          "1618:       a = RAW(row,col) ^ akey;",
          "1619:       b = RAW(row,col+1) ^ bkey;",
          "1620:       RAW(row,col) = (a & t_mask) | (b & ~t_mask);",
          "1621:       RAW(row,col+1) = (b & t_mask) | (a & ~t_mask);",
          "1622: #endif",
          "",
          "[Added Lines]",
          "1598:   read_shorts (raw_image, raw_width*raw_height);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1666:   pixel = (ushort *) calloc (raw_width + raw_height*4, 2);",
          "1667:   merror (pixel, \"phase_one_load_raw_c()\");",
          "1669:   fseek (ifp, strip_offset, SEEK_SET);",
          "1670:   for (row=0; row < raw_height; row++)",
          "1671:     offset[row] = get4();",
          "",
          "[Removed Lines]",
          "1668:   offset = (int *) (pixel + raw_width);",
          "",
          "[Added Lines]",
          "1650:   offset = (int *) (pixel + raw_width);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1758:  fseek (ifp, get4(), SEEK_SET);",
          "1759:       }",
          "1760:       if (filters && c != shot_select) continue;",
          "1762:       read_shorts (pixel, raw_width);",
          "1763:       if (!filters && (row = r - top_margin) < height)",
          "1764:  for (col=0; col < width; col++)",
          "",
          "[Removed Lines]",
          "1761:       if (filters) pixel = raw_image + r*raw_pitch;",
          "",
          "[Added Lines]",
          "1743:       if (filters) pixel = raw_image + r*raw_width;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1776:   int row, col, bits=0;",
          "1778:   while (1 << ++bits < maximum);",
          "1780:   read_shorts (raw_image, raw_width*raw_height);",
          "1785:   for (row=0; row < raw_height; row++)",
          "1786:     for (col=0; col < raw_width; col++)",
          "1787:       if ((RAW(row,col) >>= load_flags) >> bits",
          "",
          "[Removed Lines]",
          "1779: #if 0",
          "1781: #else",
          "1782:   for(row=0;row<raw_height;row++)",
          "1783:     read_shorts(raw_image+row*raw_pitch,raw_width);",
          "1784: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2200:    RAW(y,x) = val;",
          "2201:  }",
          "2202:   }",
          "2204:   for (i=0; i < height*width; i++)",
          "2205:     raw_image[i] = curve[raw_image[i]];",
          "2214:   maximum = 0x3fff;",
          "2215: }",
          "",
          "[Removed Lines]",
          "2203: #if 0",
          "2206: #else",
          "2207:   for (i=0; i < height*width; i++)",
          "2208:     {",
          "2209:       int row = i/width;",
          "2210:       int col = i%width;",
          "2211:       RAW(row,col) = curve[RAW(row,col)];",
          "2212:     }",
          "2213: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2618:     key = key << 8 | head[i];",
          "2619:   fseek (ifp, data_offset, SEEK_SET);",
          "2620:   for (row=0; row < raw_height; row++) {",
          "2622:     if (fread (pixel, 2, raw_width, ifp) < raw_width) derror();",
          "2623:     sony_decrypt ((unsigned int *) pixel, raw_width/2, !row, key);",
          "2624:     for (col=0; col < raw_width; col++)",
          "",
          "[Removed Lines]",
          "2621:     pixel = raw_image + row*raw_pitch;",
          "",
          "[Added Lines]",
          "2589:     pixel = raw_image + row*raw_width;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2787:       diff = diff ? -diff : 0x80;",
          "2788:     if (ftell(ifp) + 12 >= seg[1][1])",
          "2789:       diff = 0;",
          "2791:     raw_image[pix] = pred[pix & 1] += diff;",
          "2795:     if (!(pix & 1) && HOLE(pix / raw_width)) pix += 2;",
          "2796:   }",
          "2797:   maximum = 0xff;",
          "",
          "[Removed Lines]",
          "2790: #if 0",
          "2792: #else",
          "2793:     RAW(pix/raw_width,pix%raw_width) = pred[pix & 1] += diff;",
          "2794: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2933:   jas_stream_close (in);",
          "2934: #endif",
          "2935: }",
          "2937: void CLASS crop_masked_pixels()",
          "2938: {",
          "2939:   int row, col;",
          "",
          "[Removed Lines]",
          "2936: #line 3913 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2900: #line 3877 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3036:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
          "3037: #endif",
          "3038: }",
          "3040: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
          "3041: {",
          "3042:   int i;",
          "",
          "[Removed Lines]",
          "3039: #line 4181 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "3003: #line 4145 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4534:     fseek (ifp, save, SEEK_SET);",
          "4535:   }",
          "4536: }",
          "4538: void CLASS parse_makernote (int base, int uptag)",
          "4539: {",
          "4540:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4537: #line 5683 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4501: #line 5647 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5049:     fseek (ifp, save, SEEK_SET);",
          "5050:   }",
          "5051: }",
          "5053: int CLASS parse_tiff_ifd (int base)",
          "5054: {",
          "5055:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5052: #line 6203 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5016: #line 6167 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6293:     data_offset = get4();",
          "6294:   }",
          "6295: }",
          "6297: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6298: {",
          "6299:   int i;",
          "",
          "[Removed Lines]",
          "6296: #line 7449 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6260: #line 7413 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6394:   }",
          "6395:   is_foveon = 1;",
          "6396: }",
          "6399:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6397: #line 7552 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6361: #line 7516 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "8837: }",
          "8841: void CLASS convert_to_rgb()",
          "8842: {",
          "8843: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8840: #line 10086 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8804: #line 10050 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9068:   if (flip & 1) col = iwidth  - 1 - col;",
          "9069:   return row * iwidth + col;",
          "9070: }",
          "9072: void CLASS tiff_set (ushort *ntag,",
          "9073:  ushort tag, ushort type, int count, int val)",
          "9074: {",
          "",
          "[Removed Lines]",
          "9071: #line 10342 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9035: #line 10306 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:    for more information",
          "25: #include <math.h>",
          "26: #define CLASS LibRaw::",
          "27: #include \"libraw/libraw_types.h\"",
          "",
          "[Removed Lines]",
          "24: #line 4018 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "24: #line 3982 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #include \"libraw/libraw.h\"",
          "30: #include \"internal/defines.h\"",
          "31: #include \"internal/var_defines.h\"",
          "34:    Seach from the current directory up to the root looking for",
          "35:    a \".badpixels\" file, and fix those pixels now.",
          "",
          "[Removed Lines]",
          "32: #line 4029 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "32: #line 3993 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #endif",
          "55:   if (cfname)",
          "56:     fp = fopen (cfname, \"r\");",
          "58:   if (!fp)",
          "59:       {",
          "60: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "57: #line 4079 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "57: #line 4043 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 9997 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 9961 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/defines.h||internal/defines.h": [
          "File: internal/defines.h -> internal/defines.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "151: #define RAW(row,col) \\",
          "153: #line 248 \"dcraw/dcraw.c\"",
          "154: #define BAYER(row,col) \\",
          "155:  image[((row) >> shrink)*iwidth + ((col) >> shrink)][FC(row,col)]",
          "",
          "[Removed Lines]",
          "152:  raw_image[(row)*raw_pitch+(col)]",
          "",
          "[Added Lines]",
          "152:  raw_image[(row)*raw_width+(col)]",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "798:         S.raw_pitch = S.raw_width;",
          "799:         if(decoder_info.decoder_flags &  LIBRAW_DECODER_FLATFIELD)",
          "800:             {",
          "805:               imgdata.rawdata.raw_image = (ushort*) imgdata.rawdata.raw_alloc;",
          "806:             }",
          "807:         else if (decoder_info.decoder_flags & LIBRAW_DECODER_LEGACY)",
          "",
          "[Removed Lines]",
          "801:               S.raw_pitch = ((rwidth*2+15)/16)*8;",
          "802:               if(S.raw_pitch!=S.raw_width)",
          "803:                 fprintf(stderr,\"File %s pitch=%d width=%d\\n\",ID.input->fname(),S.raw_pitch,S.raw_width);",
          "804:               imgdata.rawdata.raw_alloc = malloc(S.raw_pitch*(rheight+7)*sizeof(imgdata.rawdata.raw_image[0]));",
          "",
          "[Added Lines]",
          "801:               imgdata.rawdata.raw_alloc = malloc(rwidth*(rheight+7)*sizeof(imgdata.rawdata.raw_image[0]));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e38f8cad76f0a6d0f674aa39c1af45f8e3500049",
      "candidate_info": {
        "commit_hash": "e38f8cad76f0a6d0f674aa39c1af45f8e3500049",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/e38f8cad76f0a6d0f674aa39c1af45f8e3500049",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "pentax pef decoder final fixes",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1390:       RAW(row,col) = hpred[col & 1];",
          "1391:       if (hpred[col & 1] >> tiff_bps) derror();",
          "1392:     }",
          "1394: }",
          "1396: void CLASS nikon_load_raw()",
          "",
          "[Removed Lines]",
          "1393:   delete buf;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:   return diff;",
          "635: }",
          "650: ushort * CLASS ljpeg_row_new (int jrow, struct jhead *jh, LibRaw_bit_buffer& bits,LibRaw_byte_buffer* bytes)",
          "651: {",
          "652:   int col, c, diff, pred, spred=0;",
          "",
          "[Removed Lines]",
          "637: int CLASS ljpeg_diff_pef (LibRaw_bit_buffer& bits, LibRaw_byte_buffer* buf,ushort *huff)",
          "638: {",
          "639:   int len, diff;",
          "641:   len = bits._gethuff(buf,*huff,huff+1,zero_after_ff);",
          "642:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
          "643:     return -32768;",
          "644:   diff = bits._getbits(buf,len,zero_after_ff);",
          "645:   if ((diff & (1 << (len-1))) == 0)",
          "646:     diff -= (1 << len) - 1;",
          "647:   return diff;",
          "648: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1128:       huff[++i] = bit[1][c] << 8 | c;",
          "1129:   huff[0] = 12;",
          "1130:   fseek (ifp, data_offset, SEEK_SET);",
          "1138:   getbits(-1);",
          "1140:   for (row=0; row < raw_height; row++)",
          "1141:     for (col=0; col < raw_width; col++) {",
          "1145:       diff = ljpeg_diff (huff);",
          "1147:       if (col < 2) hpred[col] = vpred[row & 1][col] += diff;",
          "1148:       else    hpred[col & 1] += diff;",
          "1149:       RAW(row,col) = hpred[col & 1];",
          "1150:       if (hpred[col & 1] >> tiff_bps) derror();",
          "1151:     }",
          "1155: }",
          "1157: void CLASS nikon_load_raw()",
          "",
          "[Removed Lines]",
          "1131: #ifdef LIBRAW_LIBRARY_BUILDA",
          "1132:   if(!data_size)",
          "1133:       throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "1134:   LibRaw_byte_buffer *buf = ifp->make_byte_buffer(data_size);",
          "1135:   LibRaw_bit_buffer bits;",
          "1136:   bits.reset();",
          "1137: #else",
          "1139: #endif",
          "1142: #ifdef LIBRAW_LIBRARY_BUILDA",
          "1143:       diff = ljpeg_diff_pef(bits,buf,huff);",
          "1144: #else",
          "1146: #endif",
          "1152: #ifdef LIBRAW_LIBRARY_BUILDA",
          "1153:   delete buf;",
          "1154: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1311:     if (tail[i]) nz++;",
          "1312:   return nz > 20;",
          "1313: }",
          "1315: void CLASS ppm_thumb()",
          "1316: {",
          "1317:   char *thumb;",
          "",
          "[Removed Lines]",
          "1314: #line 1585 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "1286: #line 1557 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2893:   jas_stream_close (in);",
          "2894: #endif",
          "2895: }",
          "2897: void CLASS crop_masked_pixels()",
          "2898: {",
          "2899:   int row, col;",
          "",
          "[Removed Lines]",
          "2896: #line 3874 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2868: #line 3846 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2993:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
          "2994: #endif",
          "2995: }",
          "2997: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
          "2998: {",
          "2999:   int i;",
          "",
          "[Removed Lines]",
          "2996: #line 4139 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2968: #line 4111 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4488:     fseek (ifp, save, SEEK_SET);",
          "4489:   }",
          "4490: }",
          "4492: void CLASS parse_makernote (int base, int uptag)",
          "4493: {",
          "4494:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4491: #line 5638 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4463: #line 5610 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5003:     fseek (ifp, save, SEEK_SET);",
          "5004:   }",
          "5005: }",
          "5007: int CLASS parse_tiff_ifd (int base)",
          "5008: {",
          "5009:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5006: #line 6158 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4978: #line 6130 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6261:     data_offset = get4();",
          "6262:   }",
          "6263: }",
          "6265: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6266: {",
          "6267:   int i;",
          "",
          "[Removed Lines]",
          "6264: #line 7418 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6236: #line 7390 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6362:   }",
          "6363:   is_foveon = 1;",
          "6364: }",
          "6367:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6365: #line 7521 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6337: #line 7493 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8999: }",
          "9003: void CLASS convert_to_rgb()",
          "9004: {",
          "9005: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "9002: #line 10249 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8974: #line 10221 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9230:   if (flip & 1) col = iwidth  - 1 - col;",
          "9231:   return row * iwidth + col;",
          "9232: }",
          "9234: void CLASS tiff_set (ushort *ntag,",
          "9235:  ushort tag, ushort type, int count, int val)",
          "9236: {",
          "",
          "[Removed Lines]",
          "9233: #line 10505 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9205: #line 10477 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:    for more information",
          "25: #include <math.h>",
          "26: #define CLASS LibRaw::",
          "27: #include \"libraw/libraw_types.h\"",
          "",
          "[Removed Lines]",
          "24: #line 3976 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "24: #line 3948 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #include \"libraw/libraw.h\"",
          "30: #include \"internal/defines.h\"",
          "31: #include \"internal/var_defines.h\"",
          "34:    Seach from the current directory up to the root looking for",
          "35:    a \".badpixels\" file, and fix those pixels now.",
          "",
          "[Removed Lines]",
          "32: #line 3987 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "32: #line 3959 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #endif",
          "55:   if (cfname)",
          "56:     fp = fopen (cfname, \"r\");",
          "58:   if (!fp)",
          "59:       {",
          "60: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "57: #line 4037 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "57: #line 4009 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10160 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10132 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ecc82a63821ba9a6754f46a0c02efe73f5b3190",
      "candidate_info": {
        "commit_hash": "6ecc82a63821ba9a6754f46a0c02efe73f5b3190",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/6ecc82a63821ba9a6754f46a0c02efe73f5b3190",
        "files": [
          "Changelog.txt",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "src/libraw_cxx.cpp"
        ],
        "message": "new cameras, RawSpeed uncropped size import",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7535:  { 4920,616,-593,-6493,13964,2784,-1774,3178,7005 } },",
          "7536:     { \"Canon EOS 60D\", 0, 0x2ff7,",
          "7537:  { 6719,-994,-925,-4408,12426,2211,-887,2129,6051 } },",
          "7538:     { \"Canon EOS 300D\", 0, 0xfa0,",
          "7539:  { 8197,-2000,-1118,-6714,14335,2592,-2536,3178,8266 } },",
          "7540:     { \"Canon EOS 350D\", 0, 0xfff,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7538:     { \"Canon EOS 70D\", 0, 0x3c80,",
          "7539:  { 7034,-804,-1014,-4420,12564,2058,-851,1994,5758 } },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8011:  { 8343,-2050,-1021,-7715,15705,2103,-1831,2380,8235 } },",
          "8012:     { \"OLYMPUS E-P3\", 0, 0,",
          "8013:  { 7575,-2159,-571,-3722,11341,2725,-1434,2819,6271 } },",
          "8014:     { \"OLYMPUS E-PL1s\", 0, 0,",
          "8015:  { 11409,-3872,-1393,-4572,12757,2003,-709,1810,7415 } },",
          "8016:     { \"OLYMPUS E-PL1\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8016:     { \"OLYMPUS E-P5\", 0, 0,",
          "8017:  { 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8117:  { 11340,-4069,-1275,-7555,15266,2448,-2960,3426,7685 } },",
          "8118:     { \"LEICA DIGILUX 2\", 0, 0,",
          "8119:  { 11340,-4069,-1275,-7555,15266,2448,-2960,3426,7685 } },",
          "8120:     { \"Panasonic DMC-LX1\", 0, 0xf7f,",
          "8121:  { 10704,-4187,-1230,-8314,15952,2501,-920,945,8927 } },",
          "8122:     { \"LEICA D-LUX2\", 0, 0xf7f,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8124:     { \"Panasonic DMC-LF1\", 143, 0,",
          "8125:  { 9379,-3267,-816,-3227,11560,1881,-926,1928,5340 } },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8223:  { 8512,-2641,-694,-8042,15670,2526,-1821,2117,7414 } },",
          "8224:     { \"SONY DSC-V3\", 0, 0,",
          "8225:  { 7511,-2571,-692,-7894,15088,3060,-948,1111,8128 } },",
          "8226:     { \"SONY DSC-RX100\", 200, 0,",
          "8227:  { 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },",
          "8228:     { \"SONY DSC-RX1\", 128, 0,",
          "8229:  { 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },",
          "8230:     { \"SONY DSLR-A100\", 0, 0xfeb,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8232:     { \"SONY DSC-RX100M2\", 200, 0,",
          "8233:  { 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },",
          "8236:     { \"SONY DSC-RX1R\", 128, 0,",
          "8237:  { 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6380:  { 4920,616,-593,-6493,13964,2784,-1774,3178,7005 } },",
          "6381:     { \"Canon EOS 60D\", 0, 0x2ff7,",
          "6382:  { 6719,-994,-925,-4408,12426,2211,-887,2129,6051 } },",
          "6383:     { \"Canon EOS 300D\", 0, 0xfa0,",
          "6384:  { 8197,-2000,-1118,-6714,14335,2592,-2536,3178,8266 } },",
          "6385:     { \"Canon EOS 350D\", 0, 0xfff,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6383:     { \"Canon EOS 70D\", 0, 0x3c80,",
          "6384:  { 7034,-804,-1014,-4420,12564,2058,-851,1994,5758 } },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6856:  { 8343,-2050,-1021,-7715,15705,2103,-1831,2380,8235 } },",
          "6857:     { \"OLYMPUS E-P3\", 0, 0,",
          "6858:  { 7575,-2159,-571,-3722,11341,2725,-1434,2819,6271 } },",
          "6859:     { \"OLYMPUS E-PL1s\", 0, 0,",
          "6860:  { 11409,-3872,-1393,-4572,12757,2003,-709,1810,7415 } },",
          "6861:     { \"OLYMPUS E-PL1\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6861:     { \"OLYMPUS E-P5\", 0, 0,",
          "6862:  { 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6962:  { 11340,-4069,-1275,-7555,15266,2448,-2960,3426,7685 } },",
          "6963:     { \"LEICA DIGILUX 2\", 0, 0,",
          "6964:  { 11340,-4069,-1275,-7555,15266,2448,-2960,3426,7685 } },",
          "6965:     { \"Panasonic DMC-LX1\", 0, 0xf7f,",
          "6966:  { 10704,-4187,-1230,-8314,15952,2501,-920,945,8927 } },",
          "6967:     { \"LEICA D-LUX2\", 0, 0xf7f,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6969:     { \"Panasonic DMC-LF1\", 143, 0,",
          "6970:  { 9379,-3267,-816,-3227,11560,1881,-926,1928,5340 } },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7068:  { 8512,-2641,-694,-8042,15670,2526,-1821,2117,7414 } },",
          "7069:     { \"SONY DSC-V3\", 0, 0,",
          "7070:  { 7511,-2571,-692,-7894,15088,3060,-948,1111,8128 } },",
          "7071:     { \"SONY DSC-RX100\", 200, 0,",
          "7072:  { 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },",
          "7073:     { \"SONY DSC-RX1\", 128, 0,",
          "7074:  { 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },",
          "7075:     { \"SONY DSLR-A100\", 0, 0xfeb,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7077:     { \"SONY DSC-RX100M2\", 200, 0,",
          "7078:  { 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },",
          "7081:     { \"SONY DSC-RX1R\", 128, 0,",
          "7082:  { 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8971: }",
          "8975: void CLASS convert_to_rgb()",
          "8976: {",
          "8977: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8974: #line 10221 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8984: #line 10231 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9202:   if (flip & 1) col = iwidth  - 1 - col;",
          "9203:   return row * iwidth + col;",
          "9204: }",
          "9206: void CLASS tiff_set (ushort *ntag,",
          "9207:  ushort tag, ushort type, int count, int val)",
          "9208: {",
          "",
          "[Removed Lines]",
          "9205: #line 10477 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9215: #line 10487 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10132 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10142 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:               _rawspeed_decoder = static_cast<void*>(d);",
          "1090:               imgdata.rawdata.raw_image = (ushort*) r->getDataUncropped(0,0);",
          "1095:             } else if(r->getCpp()==4) {",
          "1096:               _rawspeed_decoder = static_cast<void*>(d);",
          "1097:               imgdata.rawdata.color4_image = (ushort(*)[4]) r->getDataUncropped(0,0);",
          "1103:             } else if(r->getCpp() == 3)",
          "1104:               {",
          "1105:                 _rawspeed_decoder = static_cast<void*>(d);",
          "1106:                 imgdata.rawdata.color3_image = (ushort(*)[3]) r->getDataUncropped(0,0);",
          "1112:               }",
          "1113:             else",
          "1114:               {",
          "1115:                 delete d;",
          "1116:               }",
          "1117:             free(_rawspeed_buffer);",
          "1118:             imgdata.process_warnings |= LIBRAW_WARN_RAWSPEED_PROCESSED;",
          "",
          "[Removed Lines]",
          "1091:               S.raw_pitch = r->pitch;",
          "1092:               S.raw_width = r->dim.x;",
          "1093:               S.raw_height = r->dim.y;",
          "1094:               fix_after_rawspeed(r->blackLevel);",
          "1098:               S.raw_pitch = r->pitch;",
          "1099:               S.raw_width = r->dim.x;",
          "1100:               S.raw_height = r->dim.y;",
          "1101:               C.maximum = r->whitePoint;",
          "1102:               fix_after_rawspeed(r->blackLevel);",
          "1107:                 S.raw_pitch = r->pitch;",
          "1108:                 S.raw_width = r->dim.x;",
          "1109:                 S.raw_height = r->dim.y;",
          "1110:                 C.maximum = r->whitePoint;",
          "1111:                 fix_after_rawspeed(r->blackLevel);",
          "",
          "[Added Lines]",
          "1102:                 d = NULL;",
          "1103:               }",
          "1104:             if(d) // not deleted",
          "1105:               {",
          "1106:                 iPoint2D rsdim = r->getUncroppedDim();",
          "1107:                 S.raw_pitch = r->pitch;",
          "1108:                 S.raw_width = rsdim.x;",
          "1109:                 S.raw_height = rsdim.y;",
          "1110:                 C.maximum = r->whitePoint;",
          "1111:                 fix_after_rawspeed(r->blackLevel);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2814: \"Canon EOS 40D\",",
          "2815: \"Canon EOS 50D\",",
          "2816: \"Canon EOS 60D\",",
          "2817: \"Canon EOS 100D/ Digital Rebel SL1\",",
          "2818: \"Canon EOS 300D / Digital Rebel / Kiss Digital\",",
          "2819: \"Canon EOS 350D / Digital Rebel XT / Kiss Digital N\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2813: \"Canon EOS 70D\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3103: \"Olympus E-P1\",",
          "3104: \"Olympus E-P2\",",
          "3105: \"Olympus E-P3\",",
          "3106: \"Olympus E-PL1\",",
          "3107: \"Olympus E-PL1s\",",
          "3108: \"Olympus E-PL2\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3103: \"Olympus E-P5\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3151: \"Panasonic DMC-L1\",",
          "3152: \"Panasonic DMC-L10\",",
          "3153: \"Panasonic DMC-LC1\",",
          "3154: \"Panasonic DMC-LX1\",",
          "3155: \"Panasonic DMC-LX2\",",
          "3156: \"Panasonic DMC-LX3\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3152: \"Panasonic DMC-LF1\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3243: \"Sony DSC-F828\",",
          "3244: \"Sony DSC-R1\",",
          "3245: \"Sony DSC-RX1\",",
          "3246: \"Sony DSC-RX100\",",
          "3247: \"Sony DSC-V3\",",
          "3248: \"Sony DSLR-A100\",",
          "3249: \"Sony DSLR-A200\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3245: \"Sony DSC-RX1R\",",
          "3247: \"Sony DSC-RX100II\",",
          "",
          "---------------"
        ]
      }
    }
  ]
}