{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "29ddbbbf36cd67743d25dd6280c1788de8e4c021",
      "candidate_info": {
        "commit_hash": "29ddbbbf36cd67743d25dd6280c1788de8e4c021",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29ddbbbf36cd67743d25dd6280c1788de8e4c021",
        "files": [
          "ext/fts3/fts3_tokenizer.c",
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in",
          "src/test_func.c",
          "src/vdbe.c",
          "src/vdbeInt.h",
          "src/vdbeapi.c",
          "src/vdbemem.c",
          "test/fts3atoken.test",
          "test/func.test"
        ],
        "message": "Add the sqlite3_value_frombind() interface.  Use that interface to improve fts3_tokenizer().\n\nFossilOrigin-Name: b3f2c3205a28dc21ea7080e5e1ba246ce9c9b90c1309262ca11d8e40943ed677",
        "before_after_code_files": [
          "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c",
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/test_func.c||src/test_func.c",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbeInt.h||src/vdbeInt.h",
          "src/vdbeapi.c||src/vdbeapi.c",
          "src/vdbemem.c||src/vdbemem.c",
          "test/fts3atoken.test||test/fts3atoken.test",
          "test/func.test||test/func.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c": [
          "File: ext/fts3/fts3_tokenizer.c -> ext/fts3/fts3_tokenizer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   nName = sqlite3_value_bytes(argv[0])+1;",
          "81:   if( argc==2 ){",
          "83:       void *pOld;",
          "84:       int n = sqlite3_value_bytes(argv[1]);",
          "85:       if( zName==0 || n!=sizeof(pPtr) ){",
          "",
          "[Removed Lines]",
          "82:     if( fts3TokenizerEnabled(context) ){",
          "",
          "[Added Lines]",
          "82:     if( fts3TokenizerEnabled(context) || sqlite3_value_frombind(argv[1]) ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:       return;",
          "107:     }",
          "108:   }",
          "110:     sqlite3_result_blob(context, (void *)&pPtr, sizeof(pPtr), SQLITE_TRANSIENT);",
          "111:   }",
          "112: }",
          "",
          "[Removed Lines]",
          "109:   if( fts3TokenizerEnabled(context) ){",
          "",
          "[Added Lines]",
          "109:   if( fts3TokenizerEnabled(context) || sqlite3_value_frombind(argv[0]) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3fde627616030ca0de87169467e2e453fdc91154942e3a3a92a221df5923b2d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "5085: int sqlite3_value_type(sqlite3_value*);",
          "5086: int sqlite3_value_numeric_type(sqlite3_value*);",
          "5087: int sqlite3_value_nochange(sqlite3_value*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5095: int sqlite3_value_frombind(sqlite3_value*);",
          "",
          "---------------"
        ],
        "src/test_func.c||src/test_func.c": [
          "File: src/test_func.c -> src/test_func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:   sqlite3_result_int(context, (int)sqlite3_value_subtype(argv[0]));",
          "631: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638: static void test_frombind(",
          "639:   sqlite3_context *context,",
          "640:   int argc,",
          "641:   sqlite3_value **argv",
          "642: ){",
          "643:   sqlite3_uint64 m = 0;",
          "644:   int i;",
          "645:   for(i=0; i<argc && i<63; i++){",
          "646:     if( sqlite3_value_frombind(argv[i]) ) m |= ((sqlite3_uint64)1)<<i;",
          "647:   }",
          "648:   sqlite3_result_int64(context, (sqlite3_int64)m);",
          "649: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:     { \"test_zeroblob\",  1, SQLITE_UTF8|SQLITE_DETERMINISTIC, test_zeroblob},",
          "676:     { \"test_getsubtype\",       1, SQLITE_UTF8, test_getsubtype},",
          "677:     { \"test_setsubtype\",       2, SQLITE_UTF8, test_setsubtype},",
          "678:   };",
          "679:   int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "696:     { \"test_frombind\",        -1, SQLITE_UTF8, test_frombind},",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1256:     goto too_big;",
          "1257:   }",
          "1258:   pOut = &aMem[pOp->p2];",
          "1260:   UPDATE_MAX_BLOBSIZE(pOut);",
          "1261:   break;",
          "1262: }",
          "",
          "[Removed Lines]",
          "1259:   sqlite3VdbeMemShallowCopy(pOut, pVar, MEM_Static);",
          "",
          "[Added Lines]",
          "1259:   if( VdbeMemDynamic(pOut) ) sqlite3VdbeMemSetNull(pOut);",
          "1260:   memcpy(pOut, pVar, MEMCELLSIZE);",
          "1261:   pOut->flags &= ~(MEM_Dyn|MEM_Ephem);",
          "1262:   pOut->flags |= MEM_Static|MEM_FromBind;",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   return (pVal->flags&(MEM_Null|MEM_Zero))==(MEM_Null|MEM_Zero);",
          "276: }",
          "280: sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279: int sqlite3_value_frombind(sqlite3_value *pVal){",
          "280:   return (pVal->flags&MEM_FromBind)!=0;",
          "281: }",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:               ((p->flags&MEM_Static)!=0 ? 1 : 0) <= 1 );",
          "61:                            |MEM_Dyn|MEM_Ephem|MEM_Static))==0 );",
          "62:     }else{",
          "",
          "[Removed Lines]",
          "60:       assert( (p->flags & ~(MEM_Null|MEM_Term|MEM_Subtype",
          "",
          "[Added Lines]",
          "60:       assert( (p->flags & ~(MEM_Null|MEM_Term|MEM_Subtype|MEM_FromBind",
          "",
          "---------------"
        ],
        "test/fts3atoken.test||test/fts3atoken.test": [
          "File: test/fts3atoken.test -> test/fts3atoken.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   }",
          "87: } {{There was movement at the station}}",
          "89: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 0",
          "90: do_catchsql_test 1.6 {",
          "91:   SELECT fts3_tokenizer('blah', fts3_tokenizer('simple')) IS NULL;",
          "92: } {1 {fts3tokenize disabled}}",
          "95: #--------------------------------------------------------------------------",
          "96: # Test cases fts3atoken-2.* test error cases in the scalar function based",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: unset -nocomplain simple blah2name simplename",
          "90: set simplename \"simple\"",
          "91: set blah2name \"blah2\"",
          "92: set simple [db one {SELECT fts3_tokenizer('simple')}]",
          "97: do_test fts3atoken-1.7 {",
          "98:   execsql {",
          "99:     SELECT fts3_tokenizer('blah2', $simple) IS NULL;",
          "100:   }",
          "101: } {1}",
          "103: # With ENABLE_FTS3_TOKENIZER off, the fts3_tokenzer(1) function",
          "104: # returns NULL unless the first parameter is a bound parameter.",
          "105: # If the first parameter is a bound parameter, then fts3_tokenizer(1)",
          "106: # returns the actual pointer value as a BLOB.",
          "107: #",
          "108: do_test fts3atoken-1.8 {",
          "109:   execsql {",
          "110:     SELECT fts3_tokenizer($blah2name) == fts3_tokenizer($simplename),",
          "111:            typeof(fts3_tokenizer($blah2name)),",
          "112:            typeof(fts3_tokenizer('blah2')),",
          "113:            typeof(fts3_tokenizer($simplename)),",
          "114:            typeof(fts3_tokenizer('simple'));",
          "115:   }",
          "116: } {1 blob null blob null}",
          "118: # With ENABLE_FTS3_TOKENIZER on, fts3_tokenizer() always returns",
          "119: # the BLOB pointer, regardless the parameter",
          "120: #",
          "121: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 1",
          "122: do_test fts3atoken-1.9 {",
          "123:   execsql {",
          "124:     SELECT fts3_tokenizer('blah2') == fts3_tokenizer('simple'),",
          "125:            typeof(fts3_tokenizer($blah2name)),",
          "126:            typeof(fts3_tokenizer('blah2')),",
          "127:            typeof(fts3_tokenizer($simplename)),",
          "128:            typeof(fts3_tokenizer('simple'));",
          "129:   }",
          "130: } {1 blob blob blob blob}",
          "",
          "---------------"
        ],
        "test/func.test||test/func.test": [
          "File: test/func.test -> test/func.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391: do_execsql_test func-31.1 {",
          "1392:   SELECT char(), length(char()), typeof(char())",
          "1393: } {{} 0 text}",
          "1394: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395: # sqlite3_value_frombind()",
          "1396: #",
          "1397: do_execsql_test func-32.100 {",
          "1398:   SELECT test_frombind(1,2,3,4);",
          "1399: } {0}",
          "1400: do_execsql_test func-32.110 {",
          "1401:   SELECT test_frombind(1,2,?,4);",
          "1402: } {4}",
          "1403: do_execsql_test func-32.120 {",
          "1404:   SELECT test_frombind(1,(?),4,?+7);",
          "1405: } {2}",
          "1406: do_execsql_test func-32.130 {",
          "1407:   DROP TABLE IF EXISTS t1;",
          "1408:   CREATE TABLE t1(a,b,c,e,f);",
          "1409:   INSERT INTO t1 VALUES(1,2.5,'xyz',x'e0c1b2a3',null);",
          "1410:   SELECT test_frombind(a,b,c,e,f,$xyz) FROM t1;",
          "1411: } {32}",
          "1412: do_execsql_test func-32.140 {",
          "1413:   SELECT test_frombind(a,b,c,e,f,$xyz+f) FROM t1;",
          "1414: } {0}",
          "1415: do_execsql_test func-32.150 {",
          "1416:   SELECT test_frombind(x.a,y.b,x.c,:123,y.e,x.f,$xyz+y.f) FROM t1 x, t1 y;",
          "1417: } {8}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c2db5def64f97e8b5e79578fd73ce4a0d277338",
      "candidate_info": {
        "commit_hash": "3c2db5def64f97e8b5e79578fd73ce4a0d277338",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3c2db5def64f97e8b5e79578fd73ce4a0d277338",
        "files": [
          "ext/fts3/fts3_unicode2.c",
          "ext/fts5/fts5_unicode2.c",
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "src/whereexpr.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 27221c69901d2b4546167639c4a3c8f54b2e18820f1346870fa26b7c919027db",
        "before_after_code_files": [
          "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c",
          "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "src/whereexpr.c||src/whereexpr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c": [
          "File: ext/fts3/fts3_unicode2.c -> ext/fts3/fts3_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "179:     63182, 63242, 63274, 63310, 63368, 63390,",
          "180:   };",
          "181:   char aChar[] = {",
          "203:   };",
          "205:   unsigned int key = (((unsigned int)c)<<3) | 0x00000007;",
          "",
          "[Removed Lines]",
          "182:     '\\0',      'a'|0x00,  'c'|0x00,  'e'|0x00,  'i'|0x00,  'n'|0x00,",
          "183:     'o'|0x00,  'u'|0x00,  'y'|0x00,  'y'|0x00,  'a'|0x00,  'c'|0x00,",
          "184:     'd'|0x00,  'e'|0x00,  'e'|0x00,  'g'|0x00,  'h'|0x00,  'i'|0x00,",
          "185:     'j'|0x00,  'k'|0x00,  'l'|0x00,  'n'|0x00,  'o'|0x00,  'r'|0x00,",
          "186:     's'|0x00,  't'|0x00,  'u'|0x00,  'u'|0x00,  'w'|0x00,  'y'|0x00,",
          "187:     'z'|0x00,  'o'|0x00,  'u'|0x00,  'a'|0x00,  'i'|0x00,  'o'|0x00,",
          "188:     'u'|0x00,  'u'|0x80,  'a'|0x80,  'g'|0x00,  'k'|0x00,  'o'|0x00,",
          "189:     'o'|0x80,  'j'|0x00,  'g'|0x00,  'n'|0x00,  'a'|0x80,  'a'|0x00,",
          "190:     'e'|0x00,  'i'|0x00,  'o'|0x00,  'r'|0x00,  'u'|0x00,  's'|0x00,",
          "191:     't'|0x00,  'h'|0x00,  'a'|0x00,  'e'|0x00,  'o'|0x80,  'o'|0x00,",
          "192:     'o'|0x80,  'y'|0x00,  '\\0',      '\\0',      '\\0',      '\\0',",
          "193:     '\\0',      '\\0',      '\\0',      '\\0',      'a'|0x00,  'b'|0x00,",
          "194:     'c'|0x80,  'd'|0x00,  'd'|0x00,  'e'|0x80,  'e'|0x00,  'e'|0x80,",
          "195:     'f'|0x00,  'g'|0x00,  'h'|0x00,  'h'|0x00,  'i'|0x00,  'i'|0x80,",
          "196:     'k'|0x00,  'l'|0x00,  'l'|0x80,  'l'|0x00,  'm'|0x00,  'n'|0x00,",
          "197:     'o'|0x80,  'p'|0x00,  'r'|0x00,  'r'|0x80,  'r'|0x00,  's'|0x00,",
          "198:     's'|0x80,  't'|0x00,  'u'|0x00,  'u'|0x80,  'v'|0x00,  'w'|0x00,",
          "199:     'w'|0x00,  'x'|0x00,  'y'|0x00,  'z'|0x00,  'h'|0x00,  't'|0x00,",
          "200:     'w'|0x00,  'y'|0x00,  'a'|0x00,  'a'|0x80,  'a'|0x80,  'a'|0x80,",
          "201:     'e'|0x00,  'e'|0x80,  'e'|0x80,  'i'|0x00,  'o'|0x00,  'o'|0x80,",
          "202:     'o'|0x80,  'o'|0x80,  'u'|0x00,  'u'|0x80,  'u'|0x80,  'y'|0x00,",
          "",
          "[Added Lines]",
          "181: #define HIBIT ((char)0x80)",
          "183:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "184:     'o',       'u',       'y',       'y',       'a',       'c',",
          "185:     'd',       'e',       'e',       'g',       'h',       'i',",
          "186:     'j',       'k',       'l',       'n',       'o',       'r',",
          "187:     's',       't',       'u',       'u',       'w',       'y',",
          "188:     'z',       'o',       'u',       'a',       'i',       'o',",
          "189:     'u',       'u'|HIBIT, 'a'|HIBIT, 'g',       'k',       'o',",
          "190:     'o'|HIBIT, 'j',       'g',       'n',       'a'|HIBIT, 'a',",
          "191:     'e',       'i',       'o',       'r',       'u',       's',",
          "192:     't',       'h',       'a',       'e',       'o'|HIBIT, 'o',",
          "193:     'o'|HIBIT, 'y',       '\\0',      '\\0',      '\\0',      '\\0',",
          "194:     '\\0',      '\\0',      '\\0',      '\\0',      'a',       'b',",
          "195:     'c'|HIBIT, 'd',       'd',       'e'|HIBIT, 'e',       'e'|HIBIT,",
          "196:     'f',       'g',       'h',       'h',       'i',       'i'|HIBIT,",
          "197:     'k',       'l',       'l'|HIBIT, 'l',       'm',       'n',",
          "198:     'o'|HIBIT, 'p',       'r',       'r'|HIBIT, 'r',       's',",
          "199:     's'|HIBIT, 't',       'u',       'u'|HIBIT, 'v',       'w',",
          "200:     'w',       'x',       'y',       'z',       'h',       't',",
          "201:     'w',       'y',       'a',       'a'|HIBIT, 'a'|HIBIT, 'a'|HIBIT,",
          "202:     'e',       'e'|HIBIT, 'e'|HIBIT, 'i',       'o',       'o'|HIBIT,",
          "203:     'o'|HIBIT, 'o'|HIBIT, 'u',       'u'|HIBIT, 'u'|HIBIT, 'y',",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
          "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "48:     63182, 63242, 63274, 63310, 63368, 63390,",
          "49:   };",
          "50:   char aChar[] = {",
          "72:   };",
          "74:   unsigned int key = (((unsigned int)c)<<3) | 0x00000007;",
          "",
          "[Removed Lines]",
          "51:     '\\0',      'a'|0x00,  'c'|0x00,  'e'|0x00,  'i'|0x00,  'n'|0x00,",
          "52:     'o'|0x00,  'u'|0x00,  'y'|0x00,  'y'|0x00,  'a'|0x00,  'c'|0x00,",
          "53:     'd'|0x00,  'e'|0x00,  'e'|0x00,  'g'|0x00,  'h'|0x00,  'i'|0x00,",
          "54:     'j'|0x00,  'k'|0x00,  'l'|0x00,  'n'|0x00,  'o'|0x00,  'r'|0x00,",
          "55:     's'|0x00,  't'|0x00,  'u'|0x00,  'u'|0x00,  'w'|0x00,  'y'|0x00,",
          "56:     'z'|0x00,  'o'|0x00,  'u'|0x00,  'a'|0x00,  'i'|0x00,  'o'|0x00,",
          "57:     'u'|0x00,  'u'|0x80,  'a'|0x80,  'g'|0x00,  'k'|0x00,  'o'|0x00,",
          "58:     'o'|0x80,  'j'|0x00,  'g'|0x00,  'n'|0x00,  'a'|0x80,  'a'|0x00,",
          "59:     'e'|0x00,  'i'|0x00,  'o'|0x00,  'r'|0x00,  'u'|0x00,  's'|0x00,",
          "60:     't'|0x00,  'h'|0x00,  'a'|0x00,  'e'|0x00,  'o'|0x80,  'o'|0x00,",
          "61:     'o'|0x80,  'y'|0x00,  '\\0',      '\\0',      '\\0',      '\\0',",
          "62:     '\\0',      '\\0',      '\\0',      '\\0',      'a'|0x00,  'b'|0x00,",
          "63:     'c'|0x80,  'd'|0x00,  'd'|0x00,  'e'|0x80,  'e'|0x00,  'e'|0x80,",
          "64:     'f'|0x00,  'g'|0x00,  'h'|0x00,  'h'|0x00,  'i'|0x00,  'i'|0x80,",
          "65:     'k'|0x00,  'l'|0x00,  'l'|0x80,  'l'|0x00,  'm'|0x00,  'n'|0x00,",
          "66:     'o'|0x80,  'p'|0x00,  'r'|0x00,  'r'|0x80,  'r'|0x00,  's'|0x00,",
          "67:     's'|0x80,  't'|0x00,  'u'|0x00,  'u'|0x80,  'v'|0x00,  'w'|0x00,",
          "68:     'w'|0x00,  'x'|0x00,  'y'|0x00,  'z'|0x00,  'h'|0x00,  't'|0x00,",
          "69:     'w'|0x00,  'y'|0x00,  'a'|0x00,  'a'|0x80,  'a'|0x80,  'a'|0x80,",
          "70:     'e'|0x00,  'e'|0x80,  'e'|0x80,  'i'|0x00,  'o'|0x00,  'o'|0x80,",
          "71:     'o'|0x80,  'o'|0x80,  'u'|0x00,  'u'|0x80,  'u'|0x80,  'y'|0x00,",
          "",
          "[Added Lines]",
          "50: #define HIBIT ((char)0x80)",
          "52:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "53:     'o',       'u',       'y',       'y',       'a',       'c',",
          "54:     'd',       'e',       'e',       'g',       'h',       'i',",
          "55:     'j',       'k',       'l',       'n',       'o',       'r',",
          "56:     's',       't',       'u',       'u',       'w',       'y',",
          "57:     'z',       'o',       'u',       'a',       'i',       'o',",
          "58:     'u',       'u'|HIBIT, 'a'|HIBIT, 'g',       'k',       'o',",
          "59:     'o'|HIBIT, 'j',       'g',       'n',       'a'|HIBIT, 'a',",
          "60:     'e',       'i',       'o',       'r',       'u',       's',",
          "61:     't',       'h',       'a',       'e',       'o'|HIBIT, 'o',",
          "62:     'o'|HIBIT, 'y',       '\\0',      '\\0',      '\\0',      '\\0',",
          "63:     '\\0',      '\\0',      '\\0',      '\\0',      'a',       'b',",
          "64:     'c'|HIBIT, 'd',       'd',       'e'|HIBIT, 'e',       'e'|HIBIT,",
          "65:     'f',       'g',       'h',       'h',       'i',       'i'|HIBIT,",
          "66:     'k',       'l',       'l'|HIBIT, 'l',       'm',       'n',",
          "67:     'o'|HIBIT, 'p',       'r',       'r'|HIBIT, 'r',       's',",
          "68:     's'|HIBIT, 't',       'u',       'u'|HIBIT, 'v',       'w',",
          "69:     'w',       'x',       'y',       'z',       'h',       't',",
          "70:     'w',       'y',       'a',       'a'|HIBIT, 'a'|HIBIT, 'a'|HIBIT,",
          "71:     'e',       'e'|HIBIT, 'e'|HIBIT, 'i',       'o',       'o'|HIBIT,",
          "72:     'o'|HIBIT, 'o'|HIBIT, 'u',       'u'|HIBIT, 'u'|HIBIT, 'y',",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 395599116d801324f0763e59bc5e2fc8622aa5b7572e0c1c9a982efbb3cc8280",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "779:     for(j=0; j<2 && !okToChngToIN; j++){",
          "781:       Expr *pLeft = 0;",
          "782:       for(i=pOrWc->nTerm-1; i>=0; i--, pOrTerm++){",
          "783:         assert( pOrTerm->eOperator & WO_EQ );",
          "784:         pOrTerm->wtFlags &= ~TERM_OR_OK;",
          "",
          "[Removed Lines]",
          "780:       pOrTerm = pOrWc->a;",
          "",
          "[Added Lines]",
          "781:       pOrTerm = pOrWc->a;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d683394f1d27561cbf22c56e3c6be2413f1eb5d",
      "candidate_info": {
        "commit_hash": "7d683394f1d27561cbf22c56e3c6be2413f1eb5d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7d683394f1d27561cbf22c56e3c6be2413f1eb5d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeInt.h",
          "src/vdbemem.c",
          "test/fuzzdata8.db"
        ],
        "message": "Fix a faulty assert() in the sqlite3VdbeMemExpandBlob() routine.\n\nFossilOrigin-Name: df58774e994bd306b1a2e1f259e7e4408f01c5b1dc104673698168bbf8a63ce5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeInt.h||src/vdbeInt.h",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: edb095a9a679c8c702abd0a487e55ed4b09110b54bcd7d5275020576f2713a39",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: #define MemSetTypeFlag(p, f) \\",
          "283:    ((p)->flags = ((p)->flags&~(MEM_TypeMask|MEM_Zero))|f)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288: #define MemNullNochng(X) \\",
          "289:   ((X)->flags==(MEM_Null|MEM_Zero) && (X)->n==0 && (X)->u.nZero==0)",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:   testcase( bPreserve && pMem->z==0 );",
          "198:   assert( pMem->szMalloc==0",
          "",
          "[Removed Lines]",
          "195:   assert( bPreserve==0 || pMem->flags&(MEM_Blob|MEM_Str) );",
          "",
          "[Added Lines]",
          "195:   assert( bPreserve==0",
          "196:        || pMem->flags&(MEM_Blob|MEM_Str)",
          "197:        || MemNullNochng(pMem)",
          "198:   );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "298: int sqlite3VdbeMemExpandBlob(Mem *pMem){",
          "299:   int nByte;",
          "300:   assert( pMem->flags & MEM_Zero );",
          "302:   assert( !sqlite3VdbeMemIsRowSet(pMem) );",
          "303:   assert( pMem->db==0 || sqlite3_mutex_held(pMem->db->mutex) );",
          "",
          "[Removed Lines]",
          "301:   assert( pMem->flags&MEM_Blob );",
          "",
          "[Added Lines]",
          "304:   assert( (pMem->flags&MEM_Blob)!=0 || MemNullNochng(pMem) );",
          "305:   testcase( MemNullNochng(pMem) )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "746461f1b81fc952a2793f5f0b19099dc06e9510",
      "candidate_info": {
        "commit_hash": "746461f1b81fc952a2793f5f0b19099dc06e9510",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/746461f1b81fc952a2793f5f0b19099dc06e9510",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "src/pager.c",
          "src/sqliteInt.h"
        ],
        "message": "Ensure that the main filename and the journal filenames in the pager object are all correctly double-zero terminated.\n\nFossilOrigin-Name: df51ae19c1aa4c26f2dcd427eddc1c9cc24b698e1ab0a948b198a57432e25e1e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "src/pager.c||src/pager.c",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 28091a48aa6994f8d7c142b5851bcd6b4e9a93a7bbef6c927a6182d24f3245b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4187:   return rc;",
          "4188: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4190: #ifdef SQLITE_DEBUG",
          "4196: int sqlite3UriCount(const char *z){",
          "4197:   int n = 0;",
          "4198:   if( z==0 ) return 0;",
          "4199:   z += strlen(z)+1;",
          "4200:   while( z[0] ){",
          "4201:     z += strlen(z)+1;",
          "4202:     z += strlen(z)+1;",
          "4203:     n++;",
          "4204:   }",
          "4205:   return n;",
          "4206: }",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4764: #ifdef SQLITE_DEBUG",
          "4766: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4797:     nPathname = sqlite3Strlen30(zPathname);",
          "4798:     z = zUri = &zFilename[sqlite3Strlen30(zFilename)+1];",
          "4799:     while( *z ){",
          "4802:     }",
          "4805:     if( rc==SQLITE_OK && nPathname+8>pVfs->mxPathname ){",
          "",
          "[Removed Lines]",
          "4800:       z += sqlite3Strlen30(z)+1;",
          "4801:       z += sqlite3Strlen30(z)+1;",
          "4803:     nUri = (int)(&z[1] - zUri);",
          "4804:     assert( nUri>=0 );",
          "",
          "[Added Lines]",
          "4803:       z += strlen(z)+1;",
          "4804:       z += strlen(z)+1;",
          "4805: #ifdef SQLITE_DEBUG",
          "4806:       nUri++;",
          "4807: #endif",
          "4809:     nUriByte = (int)(&z[2] - zUri);",
          "4810:     assert( nUriByte>=1 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4857:   if( zPathname ){",
          "4858:     assert( nPathname>0 );",
          "4860:     memcpy(pPager->zFilename, zPathname, nPathname);",
          "4862:     memcpy(pPager->zJournal, zPathname, nPathname);",
          "4864:     sqlite3FileSuffix3(pPager->zFilename, pPager->zJournal);",
          "4865: #ifndef SQLITE_OMIT_WAL",
          "4867:     memcpy(pPager->zWal, zPathname, nPathname);",
          "4869:     sqlite3FileSuffix3(pPager->zFilename, pPager->zWal);",
          "4870: #endif",
          "4871:     sqlite3DbFree(0, zPathname);",
          "4872:   }",
          "4873:   pPager->pVfs = pVfs;",
          "",
          "[Removed Lines]",
          "4859:     pPager->zJournal =   (char*)(pPtr += nPathname + 1 + nUri);",
          "4861:     if( nUri ) memcpy(&pPager->zFilename[nPathname+1], zUri, nUri);",
          "4863:     memcpy(&pPager->zJournal[nPathname], \"-journal\\000\", 8+2);",
          "4866:     pPager->zWal = &pPager->zJournal[nPathname+8+1];",
          "4868:     memcpy(&pPager->zWal[nPathname], \"-wal\\000\", 4+1);",
          "",
          "[Added Lines]",
          "4866:     if( nUri ) memcpy(&pPager->zFilename[nPathname+1], zUri, nUriByte);",
          "4867:     pPager->zJournal =   (char*)(pPtr += nPathname + 1 + nUriByte);",
          "4869:     memcpy(&pPager->zJournal[nPathname], \"-journal\", 8);",
          "4872:     pPager->zWal = (char*)(pPtr += nPathname + 8 + 2);",
          "4874:     memcpy(&pPager->zWal[nPathname], \"-wal\", 4);",
          "4876:     assert( sqlite3UriCount(pPager->zWal)==0 );",
          "4878:     assert( sqlite3UriCount(pPager->zFilename)==nUri );",
          "4879:     assert( sqlite3UriCount(pPager->zJournal)==0 );",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3992: void sqlite3AddCollateType(Parse*, Token*);",
          "3993: void sqlite3AddGenerated(Parse*,Expr*,Token*);",
          "3994: void sqlite3EndTable(Parse*,Token*,Token*,u8,Select*);",
          "3995: int sqlite3ParseUri(const char*,const char*,unsigned int*,",
          "3996:                     sqlite3_vfs**,char**,char **);",
          "3997: #ifdef SQLITE_HAS_CODEC",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3995: #ifdef SQLITE_DEBUG",
          "3996:   int sqlite3UriCount(const char*);",
          "3997: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29fa6b6642793aef1ed50a82046f586ef0c60e9d",
      "candidate_info": {
        "commit_hash": "29fa6b6642793aef1ed50a82046f586ef0c60e9d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29fa6b6642793aef1ed50a82046f586ef0c60e9d",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test",
          "test/fts3corrupt5.test"
        ],
        "message": "Fix a buffer overread that could in fts3 when dealing with corrupt records.\n\nFossilOrigin-Name: 1660d7733eb443ab085ddef7666b998a1c75ac81cc54a9620960a8d3b377e28e",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test",
          "test/fts3corrupt5.test||test/fts3corrupt5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2620:     nList -= (int)(p - pList);",
          "2621:     pList = p;",
          "2623:       break;",
          "2624:     }",
          "2625:     p = &pList[1];",
          "2626:     p += fts3GetVarint32(p, &iCurrent);",
          "2627:   }",
          "2630:     memset(&pList[nList], 0, pEnd - &pList[nList]);",
          "2631:   }",
          "",
          "[Removed Lines]",
          "2622:     if( nList==0 ){",
          "2629:   if( bZero && &pList[nList]!=pEnd ){",
          "",
          "[Added Lines]",
          "2622:     if( nList<=0 ){",
          "2629:   if( bZero && (pEnd - &pList[nList])>0){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b3692c406f7ba62587c9d3256f888748393519680e9e2db53f59557f1a300e05",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1947: do_catchsql_test 13.1 {",
          "1948:   SELECT quote(matchinfo(t1,'pcxybs'))==0 FROM t1 WHERE b MATCH 'e*';",
          "1951: #-------------------------------------------------------------------------",
          "1952: reset_db",
          "",
          "[Removed Lines]",
          "1949: } {0 {0 0}}",
          "",
          "[Added Lines]",
          "1949: } {0 {}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2827: do_catchsql_test 18.1 {",
          "2828:   SELECT quote(matchinfo(t1,'pcxybs'))==0 FROM t1 WHERE b MATCH 'e*';",
          "2831: #-------------------------------------------------------------------------",
          "2832: reset_db",
          "",
          "[Removed Lines]",
          "2829: } {0 0}",
          "",
          "[Added Lines]",
          "2829: } {0 {}}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4400:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4401:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4402: } {1 {database disk image is malformed}}",
          "4404: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4404: #-------------------------------------------------------------------------",
          "4405: reset_db",
          "4406: do_test 26.0 {",
          "4407:   sqlite3 db {}",
          "4408:   db deserialize [decode_hexdb {",
          "4409: .open --hexdb",
          "4410: | size 28672 pagesize 4096 filename crash-26682721375870.db",
          "4411: | page 1 offset 0",
          "4412: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4413: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "4414: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "4415: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "4416: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "4417: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "4418: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "4419: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "4420: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "4421: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "4422: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 51   r'(level INTEGEQ",
          "4423: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "4424: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "4425: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "4426: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "4427: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 62 2c 72 6f 6f 74   ock INTEGEb,root",
          "4428: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "4429: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "4430: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "4431: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "4432: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "4433: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "4434: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 66 6d 65 6e   ..tablet1_sefmen",
          "4435: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "4436: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "4437: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "4438: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "4439: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "4440: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "4441: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "4442: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "4443: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "4444: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "4445: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "4446: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "4447: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4448: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4449: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "4450: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "4451: | page 3 offset 8192",
          "4452: |      0: 0d 00 00 00 25 0b 48 00 0f d8 0f af 0f 86 0f 74   ....%.H........t",
          "4453: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "4454: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 00 00   ...t.[.@.$......",
          "4455: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 00   .........?%.....",
          "4456: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "4457: |   2912: 34 23 00 20 32 2f 31 36 30 36 30 39 20 44 45 42   4#. 2/160609 DEB",
          "4458: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "4459: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "4460: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "4461: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "4462: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "4463: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "4464: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "4465: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "4466: |   3056: 4f 41 44 20 45 58 54 45 4e 53 59 4f 4e 20 54 48   OAD EXTENSYON TH",
          "4467: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 25 0f   READSAFE=0.$..%.",
          "4468: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4469: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4470: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "4471: |   3136: 05 00 25 0f 17 54 38 52 45 41 44 53 41 46 45 3d   ..%..T8READSAFE=",
          "4472: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4473: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 fc 53 49 4f   IT LOAD EXTE.SIO",
          "4474: |   3184: 4e 68 42 49 4e 4a c2 59 1f 20 05 00 33 0f 19 4f   NhBINJ.Y. ..3..O",
          "4475: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4476: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4477: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4478: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4479: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 2f 30 30   MAX MEMORY=50/00",
          "4480: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4481: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "4482: |   3312: 30 30 30 30 48 4e 4f 43 41 53 45 1e 1c 05 00 33   0000HNOCASE....3",
          "4483: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "4484: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4485: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4486: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4487: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 53 41 53 45 17   LE RTREEXNOSASE.",
          "4488: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4489: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4490: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4491: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4492: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4493: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4494: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "4495: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "4496: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 42 42   INARY....%..ENBB",
          "4497: |   3552: 4d 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   ME JSON1XNOCASE.",
          "4498: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "4499: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "4500: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4501: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 1e 4c   NARY....)..ENA.L",
          "4502: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "4503: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4504: |   3664: 4f 50 4f 4c 59 58 62 54 52 49 4d 17 0f 05 00 23   OPOLYXbTRIM....#",
          "4505: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "4506: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4507: |   3712: 45 20 46 54 fc 35 58 4e 4f 43 41 53 45 16 0d 05   E FT.5XNOCASE...",
          "4508: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4509: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4510: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4511: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 35   ..#..ENABLE FTS5",
          "4512: |   3792: 58 4e 4f 43 40 53 45 16 0a 05 00 23 0f 17 45 4e   XNOC@SE....#..EN",
          "4513: |   3808: 41 42 4c 45 20 56 54 53 34 58 52 54 52 49 4d 1e   ABLE VTS4XRTRIM.",
          "4514: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4515: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 b3 58 1e   TAT VTABXBINA.X.",
          "4516: |   3856: 08 05 00 31 0f 19 45 4e 40 42 4c 45 20 44 42 53   ...1..EN@BLE DBS",
          "4517: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4518: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 45 42 53   ...1..ENABLE EBS",
          "4519: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "4520: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4521: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4522: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "4523: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4524: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4525: |   4000: 32 30 31 36 30 36 30 39 58 4b 19 4e 41 52 59 27   20160609XK.NARY'",
          "4526: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4527: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4528: | page 5 offset 16384",
          "4529: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "4530: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 34 33   ...........0 243",
          "4531: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "4532: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "4533: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "4534: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "4535: |   3056: 06 64 62 73 74 51 74 03 25 0a 00 01 04 65 62 75   .dbstQt.%....ebu",
          "4536: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "4537: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4538: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "4539: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "4540: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "4541: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "4542: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "4543: |   3184: 03 25 19 00 03 04 73 79 73 35 03 25 15 00 00 04   .%....sys5.%....",
          "4544: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "4545: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "4546: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "4547: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "4548: |   3264: 12 01 06 00 01 06 00 01 06 00 1e f3 00 01 03 00   ................",
          "4549: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   .....20160609...",
          "4550: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "4551: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "4552: |   3328: 00 01 07 30 30 30 30 2f 30 30 09 1c 04 00 01 04   ...0000/00......",
          "4553: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "4554: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4555: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "4556: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "4557: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "4558: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "4559: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "4560: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "4561: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "4562: |   3488: 00 01 02 00 01 02 00 01 01 f0 01 02 00 57 02 00   .............W..",
          "4563: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 10 01   ................",
          "4564: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "4565: |   3536: 00 00 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4566: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "4567: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "4568: |   3584: 03 00 01 03 00 a9 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "4569: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "4570: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "4571: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "4572: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "4573: |   3664: 1c 02 0b 31 02 00 01 02 00 01 05 65 6d 6f 72 79   ...1.......emory",
          "4574: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "4575: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "4576: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "4577: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4578: |   3744: 00 03 01 02 02 00 f3 01 02 02 00 03 01 02 02 00   ................",
          "4579: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "4580: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "4581: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "4582: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "4583: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "4584: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "4585: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4586: |   3872: 00 00 0a 74 68 72 65 61 64 63 61 66 65 09 22 02   ...threadcafe...",
          "4587: |   3888: 00 01 02 00 02 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "4588: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "4589: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4590: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4591: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "4592: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "4593: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4594: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4595: |   4016: 01 01 01 02 00 01 01 01 02 00 01 00 01 02 00 01   ................",
          "4596: |   4032: 01 01 02 00 01 01 00 e2 00 01 01 01 02 00 01 01   ................",
          "4597: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "4598: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4599: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4600: | page 6 offset 20480",
          "4601: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "4602: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "4603: | page 7 offset 24576",
          "4604: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "4605: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 00 00 00   ...........#a...",
          "4606: | end crash-26682721375870.db",
          "4607: }]} {}",
          "4609: do_execsql_test 26.1 {",
          "4610:   SELECT count(*) FROM (",
          "4611:     SELECT t1, (t1) FROM t1 WHERE b MATCH 'x'",
          "4612:   )",
          "4613: } 34",
          "",
          "---------------"
        ],
        "test/fts3corrupt5.test||test/fts3corrupt5.test": [
          "File: test/fts3corrupt5.test -> test/fts3corrupt5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019 May 22",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #*************************************************************************",
          "11: #",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: source $testdir/fts3_common.tcl",
          "17: set testprefix fts3corrupt5",
          "19: # If SQLITE_ENABLE_FTS3 is defined, omit this file.",
          "20: ifcapable !fts3 {",
          "21:   finish_test",
          "22:   return",
          "23: }",
          "25: sqlite3_fts3_may_be_corrupt 1",
          "27: do_execsql_test 1.0 {",
          "28:   BEGIN;",
          "29:     CREATE VIRTUAL TABLE ft USING fts3(a, b, c);",
          "30:     INSERT INTO ft VALUES('one', 'one', 'one');",
          "31:   COMMIT;",
          "32: }",
          "34: do_execsql_test 1.1 {",
          "35:   SELECT * FROM ft WHERE ft MATCH 'b:one'",
          "36: } {one one one}",
          "38: do_execsql_test 1.2 {",
          "39:   SELECT quote(root) FROM ft_segdir;",
          "40: } {X'00036F6E6509010201010201020200'}",
          "42: breakpoint",
          "43: foreach {tn val q bCorrupt} {",
          "44:   1 X'00036F6E650901'                   'b:one'  1",
          "45:   2 X'00036F6E6509010201010201FFFFFF'   'c:one'  1",
          "46:   3 X'00036F6E6501'                     'b:one'  1",
          "47:   4 X'00036F6E650101'                   'b:one'  1",
          "48:   5 X'00036F6E650100'                   'b:one'  0",
          "49: } {",
          "50:   do_execsql_test 1.3.$tn.1 \"UPDATE ft_segdir SET root = $val\"",
          "52:   set res {0 {}}",
          "53:   if {$bCorrupt} { set res {1 {database disk image is malformed}}}",
          "54:   do_catchsql_test 1.3.$tn.2 {",
          "55:     SELECT * FROM ft WHERE ft MATCH $q",
          "56:   } $res",
          "57: }",
          "59: finish_test",
          "",
          "---------------"
        ]
      }
    }
  ]
}