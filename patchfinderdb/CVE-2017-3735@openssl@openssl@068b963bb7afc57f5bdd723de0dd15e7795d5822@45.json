{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cffda9f3b76e1b85739984bce6146d792499cce2",
      "candidate_info": {
        "commit_hash": "cffda9f3b76e1b85739984bce6146d792499cce2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cffda9f3b76e1b85739984bce6146d792499cce2",
        "files": [
          "apps/s_socket.c"
        ],
        "message": "Use constant value 1 instead of SHUT_WR in do_server\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5072)\n\n(cherry picked from commit 803141f6100ca8d756928328a262e1dc52daef2d)",
        "before_after_code_files": [
          "apps/s_socket.c||apps/s_socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_socket.c||apps/s_socket.c": [
          "File: apps/s_socket.c -> apps/s_socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:             BIO_closesocket(sock);",
          "199:         } else {",
          "200:             i = (*cb)(asock, type, context);",
          "",
          "[Removed Lines]",
          "191: #ifdef _WIN32",
          "192: # ifdef SD_SEND",
          "193:             shutdown(sock, SD_SEND);",
          "194: # endif",
          "195: #elif defined(SHUT_WR)",
          "196:             shutdown(sock, SHUT_WR);",
          "197: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "effdcf6c2a10afea8041addb8ccce2367ecaac0d",
      "candidate_info": {
        "commit_hash": "effdcf6c2a10afea8041addb8ccce2367ecaac0d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/effdcf6c2a10afea8041addb8ccce2367ecaac0d",
        "files": [
          "crypto/dh/dh_lib.c",
          "doc/crypto/DH_get0_pqg.pod",
          "test/dhtest.c"
        ],
        "message": "Allow DH_set0_key with only private key.\n\nThe pub_key field for DH isn't actually used in DH_compute_key at all.\n(Note the peer public key is passed in as as BIGNUM.) It's mostly there\nso the caller may extract it from DH_generate_key. It doesn't\nparticularly need to be present if filling in a DH from external\nparameters.\n\nThe check in DH_set0_key conflicts with adding OpenSSL 1.1.0 to Node.\nTheir public API is a thin wrapper over the old OpenSSL one:\nhttps://nodejs.org/api/crypto.html#crypto_class_diffiehellman\n\nThey have separate setPrivateKey and setPublicKey methods, so the public\nkey may be set last or not at all. In 1.0.2, either worked fine since\noperations on DH objects generally didn't use the public key.  (Like\nwith OpenSSL, Node's setPublicKey method is also largely a no-op, but so\nit goes.) In 1.1.0, DH_set0_key prevents create a private-key-only DH\nobject.\n\n(cherry picked from commit d58ad9a2a287d1c0bc99ba63c997eed88cc161b5)\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4425)",
        "before_after_code_files": [
          "crypto/dh/dh_lib.c||crypto/dh/dh_lib.c",
          "test/dhtest.c||test/dhtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_lib.c||crypto/dh/dh_lib.c": [
          "File: crypto/dh/dh_lib.c -> crypto/dh/dh_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231: int DH_set0_key(DH *dh, BIGNUM *pub_key, BIGNUM *priv_key)",
          "232: {",
          "240:     if (pub_key != NULL) {",
          "241:         BN_free(dh->pub_key);",
          "242:         dh->pub_key = pub_key;",
          "",
          "[Removed Lines]",
          "237:     if (dh->pub_key == NULL && pub_key == NULL)",
          "238:         return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dhtest.c||test/dhtest.c": [
          "File: test/dhtest.c -> test/dhtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     BN_GENCB *_cb = NULL;",
          "41:     DH *a = NULL;",
          "42:     DH *b = NULL;",
          "43:     const BIGNUM *ap = NULL, *ag = NULL, *apub_key = NULL, *priv_key = NULL;",
          "44:     const BIGNUM *bpub_key = NULL;",
          "46:     char buf[12] = {0};",
          "47:     unsigned char *abuf = NULL;",
          "48:     unsigned char *bbuf = NULL;",
          "50:     int ret = 1;",
          "51:     BIO *out = NULL;",
          "",
          "[Removed Lines]",
          "45:     BIGNUM *bp = NULL, *bg = NULL;",
          "49:     int i, alen, blen, aout, bout;",
          "",
          "[Added Lines]",
          "43:     DH *c = NULL;",
          "46:     BIGNUM *bp = NULL, *bg = NULL, *cpriv_key = NULL;",
          "50:     unsigned char *cbuf = NULL;",
          "51:     int i, alen, blen, clen, aout, bout, cout;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:     BN_print(out, bpub_key);",
          "115:     BIO_puts(out, \"\\n\");",
          "117:     alen = DH_size(a);",
          "118:     abuf = OPENSSL_malloc(alen);",
          "119:     if (abuf == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:     if ((c = DHparams_dup(b)) == NULL",
          "121:             || (cpriv_key = BN_dup(priv_key)) == NULL",
          "122:             || !DH_set0_key(c, NULL, cpriv_key))",
          "123:         goto err;",
          "124:     cpriv_key = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:         BIO_puts(out, buf);",
          "142:     }",
          "143:     BIO_puts(out, \"\\n\");",
          "145:         fprintf(stderr, \"Error in DH routines\\n\");",
          "146:         ret = 1;",
          "147:     } else",
          "",
          "[Removed Lines]",
          "144:     if ((aout < 4) || (bout != aout) || (memcmp(abuf, bbuf, aout) != 0)) {",
          "",
          "[Added Lines]",
          "154:     clen = DH_size(c);",
          "155:     cbuf = OPENSSL_malloc(clen);",
          "156:     if (cbuf == NULL)",
          "157:         goto err;",
          "159:     cout = DH_compute_key(cbuf, apub_key, c);",
          "161:     BIO_puts(out, \"key3 =\");",
          "162:     for (i = 0; i < cout; i++) {",
          "163:         sprintf(buf, \"%02X\", cbuf[i]);",
          "164:         BIO_puts(out, buf);",
          "165:     }",
          "166:     BIO_puts(out, \"\\n\");",
          "168:     if ((aout < 4) || (bout != aout) || (memcmp(abuf, bbuf, aout) != 0)",
          "169:         || (cout != aout) || (memcmp(abuf, cbuf, aout) != 0)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "155:     OPENSSL_free(abuf);",
          "156:     OPENSSL_free(bbuf);",
          "157:     DH_free(b);",
          "158:     DH_free(a);",
          "159:     BN_free(bp);",
          "160:     BN_free(bg);",
          "161:     BN_GENCB_free(_cb);",
          "162:     BIO_free(out);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:     OPENSSL_free(cbuf);",
          "185:     DH_free(c);",
          "188:     BN_free(cpriv_key);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2087582d0455111d6627a142668fdf0ebff1d89f",
      "candidate_info": {
        "commit_hash": "2087582d0455111d6627a142668fdf0ebff1d89f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2087582d0455111d6627a142668fdf0ebff1d89f",
        "files": [
          "crypto/mem_sec.c"
        ],
        "message": "Only implement secure malloc if _POSIX_VERSION allows\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5060)\n\n(cherry picked from commit e44c7d02ddac975ec6abff7901e77a0c37f9949d)",
        "before_after_code_files": [
          "crypto/mem_sec.c||crypto/mem_sec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem_sec.c||crypto/mem_sec.c": [
          "File: crypto/mem_sec.c -> crypto/mem_sec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <string.h>",
          "28: # define IMPLEMENTED",
          "29: # include <stdlib.h>",
          "30: # include <assert.h>",
          "",
          "[Removed Lines]",
          "27: #if defined(OPENSSL_SYS_LINUX) || defined(OPENSSL_SYS_UNIX)",
          "",
          "[Added Lines]",
          "28: #if defined(OPENSSL_SYS_UNIX) \\",
          "29:     && defined(_POSIX_VERSION) && _POSIX_VERSION >= 200112L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f0af52b423368e8fa7a6f532f945812e88c809d",
      "candidate_info": {
        "commit_hash": "2f0af52b423368e8fa7a6f532f945812e88c809d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2f0af52b423368e8fa7a6f532f945812e88c809d",
        "files": [
          "apps/engine.c",
          "apps/verify.c",
          "crypto/bf/bf_locl.h",
          "crypto/bio/b_print.c",
          "crypto/bio/bss_fd.c",
          "crypto/bn/bn_lib.c",
          "crypto/bn/bn_mul.c",
          "crypto/cast/cast_lcl.h",
          "crypto/cms/cms_asn1.c",
          "crypto/des/des_locl.h",
          "crypto/evp/e_aes.c",
          "crypto/idea/idea_lcl.h",
          "crypto/ocsp/ocsp_ht.c",
          "crypto/pem/pvkfmt.c",
          "crypto/pkcs7/pk7_asn1.c",
          "crypto/rc2/rc2_locl.h",
          "crypto/rc5/rc5_locl.h",
          "ssl/t1_lib.c"
        ],
        "message": "Fix gcc-7 warnings about missing fall thru comments.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3936)",
        "before_after_code_files": [
          "apps/engine.c||apps/engine.c",
          "apps/verify.c||apps/verify.c",
          "crypto/bf/bf_locl.h||crypto/bf/bf_locl.h",
          "crypto/bio/b_print.c||crypto/bio/b_print.c",
          "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c",
          "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/cast/cast_lcl.h||crypto/cast/cast_lcl.h",
          "crypto/cms/cms_asn1.c||crypto/cms/cms_asn1.c",
          "crypto/des/des_locl.h||crypto/des/des_locl.h",
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
          "crypto/ideidea_lcl.h||crypto/idea/idea_lcl.h",
          "crypto/ocsp/ocsp_ht.c||crypto/ocsp/ocsp_ht.c",
          "crypto/pem/pvkfmt.c||crypto/pem/pvkfmt.c",
          "crypto/pkcs7/pk7_asn1.c||crypto/pkcs7/pk7_asn1.c",
          "crypto/rc2/rc2_locl.h||crypto/rc2/rc2_locl.h",
          "crypto/rc5/rc5_locl.h||crypto/rc5/rc5_locl.h",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/engine.c||apps/engine.c": [
          "File: apps/engine.c -> apps/engine.c"
        ],
        "apps/verify.c||apps/verify.c": [
          "File: apps/verify.c -> apps/verify.c"
        ],
        "crypto/bf/bf_locl.h||crypto/bf/bf_locl.h": [
          "File: crypto/bf/bf_locl.h -> crypto/bf/bf_locl.h"
        ],
        "crypto/bio/b_print.c||crypto/bio/b_print.c": [
          "File: crypto/bio/b_print.c -> crypto/bio/b_print.c"
        ],
        "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c": [
          "File: crypto/bio/bss_fd.c -> crypto/bio/bss_fd.c"
        ],
        "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c": [
          "File: crypto/bn/bn_lib.c -> crypto/bn/bn_lib.c"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c"
        ],
        "crypto/cast/cast_lcl.h||crypto/cast/cast_lcl.h": [
          "File: crypto/cast/cast_lcl.h -> crypto/cast/cast_lcl.h"
        ],
        "crypto/cms/cms_asn1.c||crypto/cms/cms_asn1.c": [
          "File: crypto/cms/cms_asn1.c -> crypto/cms/cms_asn1.c"
        ],
        "crypto/des/des_locl.h||crypto/des/des_locl.h": [
          "File: crypto/des/des_locl.h -> crypto/des/des_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:                         l1=l2=0; \\",
          "42:                         switch (n) { \\",
          "43:                         case 8: l2 =((DES_LONG)(*(--(c))))<<24L; \\",
          "44:                         case 7: l2|=((DES_LONG)(*(--(c))))<<16L; \\",
          "45:                         case 6: l2|=((DES_LONG)(*(--(c))))<< 8L; \\",
          "47:                         case 4: l1 =((DES_LONG)(*(--(c))))<<24L; \\",
          "48:                         case 3: l1|=((DES_LONG)(*(--(c))))<<16L; \\",
          "49:                         case 2: l1|=((DES_LONG)(*(--(c))))<< 8L; \\",
          "51:                                 } \\",
          "52:                         }",
          "",
          "[Removed Lines]",
          "46:                         case 5: l2|=((DES_LONG)(*(--(c))));     \\",
          "50:                         case 1: l1|=((DES_LONG)(*(--(c))));     \\",
          "",
          "[Added Lines]",
          "49:                         case 5: l2|=((DES_LONG)(*(--(c))));      \\",
          "57:                         case 1: l1|=((DES_LONG)(*(--(c))));      \\",
          "",
          "---------------"
        ],
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c"
        ],
        "crypto/ideidea_lcl.h||crypto/idea/idea_lcl.h": [
          "File: crypto/ideidea_lcl.h -> crypto/idea/idea_lcl.h"
        ],
        "crypto/ocsp/ocsp_ht.c||crypto/ocsp/ocsp_ht.c": [
          "File: crypto/ocsp/ocsp_ht.c -> crypto/ocsp/ocsp_ht.c"
        ],
        "crypto/pem/pvkfmt.c||crypto/pem/pvkfmt.c": [
          "File: crypto/pem/pvkfmt.c -> crypto/pem/pvkfmt.c"
        ],
        "crypto/pkcs7/pk7_asn1.c||crypto/pkcs7/pk7_asn1.c": [
          "File: crypto/pkcs7/pk7_asn1.c -> crypto/pkcs7/pk7_asn1.c"
        ],
        "crypto/rc2/rc2_locl.h||crypto/rc2/rc2_locl.h": [
          "File: crypto/rc2/rc2_locl.h -> crypto/rc2/rc2_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:                         l1=l2=0; \\",
          "21:                         switch (n) { \\",
          "22:                         case 8: l2 =((unsigned long)(*(--(c))))<<24L; \\",
          "23:                         case 7: l2|=((unsigned long)(*(--(c))))<<16L; \\",
          "24:                         case 6: l2|=((unsigned long)(*(--(c))))<< 8L; \\",
          "26:                         case 4: l1 =((unsigned long)(*(--(c))))<<24L; \\",
          "27:                         case 3: l1|=((unsigned long)(*(--(c))))<<16L; \\",
          "28:                         case 2: l1|=((unsigned long)(*(--(c))))<< 8L; \\",
          "30:                                 } \\",
          "31:                         }",
          "",
          "[Removed Lines]",
          "25:                         case 5: l2|=((unsigned long)(*(--(c))));     \\",
          "29:                         case 1: l1|=((unsigned long)(*(--(c))));     \\",
          "",
          "[Added Lines]",
          "28:                         case 5: l2|=((unsigned long)(*(--(c))));      \\",
          "36:                         case 1: l1|=((unsigned long)(*(--(c))));      \\",
          "",
          "---------------"
        ],
        "crypto/rc5/rc5_locl.h||crypto/rc5/rc5_locl.h": [
          "File: crypto/rc5/rc5_locl.h -> crypto/rc5/rc5_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:                         l1=l2=0; \\",
          "23:                         switch (n) { \\",
          "24:                         case 8: l2 =((unsigned long)(*(--(c))))<<24L; \\",
          "25:                         case 7: l2|=((unsigned long)(*(--(c))))<<16L; \\",
          "26:                         case 6: l2|=((unsigned long)(*(--(c))))<< 8L; \\",
          "28:                         case 4: l1 =((unsigned long)(*(--(c))))<<24L; \\",
          "29:                         case 3: l1|=((unsigned long)(*(--(c))))<<16L; \\",
          "30:                         case 2: l1|=((unsigned long)(*(--(c))))<< 8L; \\",
          "32:                                 } \\",
          "33:                         }",
          "",
          "[Removed Lines]",
          "27:                         case 5: l2|=((unsigned long)(*(--(c))));     \\",
          "31:                         case 1: l1|=((unsigned long)(*(--(c))));     \\",
          "",
          "[Added Lines]",
          "30:                         case 5: l2|=((unsigned long)(*(--(c))));      \\",
          "38:                         case 1: l1|=((unsigned long)(*(--(c))));      \\",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c"
        ]
      }
    },
    {
      "candidate_hash": "89fb0fb2a5391bd6cfd78bd201616ee68b5f5d34",
      "candidate_info": {
        "commit_hash": "89fb0fb2a5391bd6cfd78bd201616ee68b5f5d34",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/89fb0fb2a5391bd6cfd78bd201616ee68b5f5d34",
        "files": [
          "include/openssl/ssl.h",
          "ssl/ssl_sess.c"
        ],
        "message": "remove horrible pragma macro and remove __owur from SSL_CTX_add_session() declaration\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4014)\n\n(cherry picked from commit 5bd05e579994c756cd994b5e0ff5f395aae6bfff)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/ssl_sess.c||ssl/ssl_sess.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1444: void SSL_SESSION_free(SSL_SESSION *ses);",
          "1445: __owur int i2d_SSL_SESSION(SSL_SESSION *in, unsigned char **pp);",
          "1446: __owur int SSL_set_session(SSL *to, SSL_SESSION *session);",
          "1448: int SSL_CTX_remove_session(SSL_CTX *, SSL_SESSION *c);",
          "1449: __owur int SSL_CTX_set_generate_session_id(SSL_CTX *, GEN_SESSION_CB);",
          "1450: __owur int SSL_set_generate_session_id(SSL *, GEN_SESSION_CB);",
          "",
          "[Removed Lines]",
          "1447: __owur int SSL_CTX_add_session(SSL_CTX *s, SSL_SESSION *c);",
          "",
          "[Added Lines]",
          "1447: int SSL_CTX_add_session(SSL_CTX *s, SSL_SESSION *c);",
          "",
          "---------------"
        ],
        "ssl/ssl_sess.c||ssl/ssl_sess.c": [
          "File: ssl/ssl_sess.c -> ssl/ssl_sess.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:                 SSL_CTX_add_session(s->session_ctx, ret);",
          "542:             }",
          "543:         }",
          "544:     }",
          "",
          "[Removed Lines]",
          "538: #pragma GCC diagnostic push",
          "539: #pragma GCC diagnostic ignored \"-Wunused-result\"",
          "541: #pragma GCC diagnostic pop",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}