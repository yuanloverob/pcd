{
  "cve_id": "CVE-2016-9685",
  "cve_desc": "Multiple memory leaks in error paths in fs/xfs/xfs_attr_list.c in the Linux kernel before 4.5.1 allow local users to cause a denial of service (memory consumption) via crafted XFS filesystem operations.",
  "repo": "torvalds/linux",
  "patch_hash": "2e83b79b2d6c78bf1b4aa227938a214dcbddc83f",
  "patch_info": {
    "commit_hash": "2e83b79b2d6c78bf1b4aa227938a214dcbddc83f",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/2e83b79b2d6c78bf1b4aa227938a214dcbddc83f",
    "files": [
      "fs/xfs/xfs_attr_list.c"
    ],
    "message": "xfs: fix two memory leaks in xfs_attr_list.c error paths\n\nThis plugs 2 trivial leaks in xfs_attr_shortform_list and\nxfs_attr3_leaf_list_int.\n\nSigned-off-by: Mateusz Guzik <mguzik@redhat.com>\nCc: <stable@vger.kernel.org>\nReviewed-by: Eric Sandeen <sandeen@redhat.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>",
    "before_after_code_files": [
      "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
    ]
  },
  "patch_diff": {
    "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
      "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "202:      sbp->namelen,",
      "203:      sbp->valuelen,",
      "204:      &sbp->name[sbp->namelen]);",
      "206:    return error;",
      "207:   if (context->seen_enough)",
      "208:    break;",
      "209:   cursor->offset++;",
      "",
      "[Removed Lines]",
      "205:   if (error)",
      "",
      "[Added Lines]",
      "205:   if (error) {",
      "206:    kmem_free(sbuf);",
      "208:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "454:     args.rmtblkcnt = xfs_attr3_rmt_blocks(",
      "455:        args.dp->i_mount, valuelen);",
      "456:     retval = xfs_attr_rmtval_get(&args);",
      "465:     kmem_free(args.value);",
      "466:    } else {",
      "467:     retval = context->put_listent(context,",
      "",
      "[Removed Lines]",
      "457:     if (retval)",
      "458:      return retval;",
      "459:     retval = context->put_listent(context,",
      "460:       entry->flags,",
      "461:       name_rmt->name,",
      "462:       (int)name_rmt->namelen,",
      "463:       valuelen,",
      "464:       args.value);",
      "",
      "[Added Lines]",
      "459:     if (!retval)",
      "460:      retval = context->put_listent(context,",
      "461:        entry->flags,",
      "462:        name_rmt->name,",
      "463:        (int)name_rmt->namelen,",
      "464:        valuelen,",
      "465:        args.value);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7af5ad28a603f2d1ef4c579b8ab0a9d4767a348e",
      "candidate_info": {
        "commit_hash": "7af5ad28a603f2d1ef4c579b8ab0a9d4767a348e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7af5ad28a603f2d1ef4c579b8ab0a9d4767a348e",
        "files": [
          "fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c"
        ],
        "message": "xfs: remove put_value from attr ->put_listent context\n\nThe put_value context member is never set; remove it\nand the conditional test in xfs_attr3_leaf_list_int().\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Dave Chinner <david@fromorbit.com>",
        "before_after_code_files": [
          "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h": [
          "File: fs/xfs/xfs_attr.h -> fs/xfs/xfs_attr.h"
        ],
        "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
          "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429:       name_loc->nameval,",
          "430:       (int)name_loc->namelen,",
          "431:       be16_to_cpu(name_loc->valuelen));",
          "434:   } else {",
          "435:    xfs_attr_leaf_name_remote_t *name_rmt =",
          "436:     xfs_attr3_leaf_name_remote(leaf, i);",
          "438:    int valuelen = be32_to_cpu(name_rmt->valuelen);",
          "463:       entry->flags,",
          "464:       name_rmt->name,",
          "465:       (int)name_rmt->namelen,",
          "466:       valuelen);",
          "470:   }",
          "471:   if (context->seen_enough)",
          "472:    break;",
          "473:   cursor->offset++;",
          "",
          "[Removed Lines]",
          "432:    if (retval)",
          "433:     return retval;",
          "440:    if (context->put_value) {",
          "441:     xfs_da_args_t args;",
          "443:     memset((char *)&args, 0, sizeof(args));",
          "444:     args.geo = context->dp->i_mount->m_attr_geo;",
          "445:     args.dp = context->dp;",
          "446:     args.whichfork = XFS_ATTR_FORK;",
          "447:     args.valuelen = valuelen;",
          "448:     args.rmtvaluelen = valuelen;",
          "449:     args.value = kmem_alloc(valuelen, KM_SLEEP | KM_NOFS);",
          "450:     args.rmtblkno = be32_to_cpu(name_rmt->valueblk);",
          "451:     args.rmtblkcnt = xfs_attr3_rmt_blocks(",
          "452:        args.dp->i_mount, valuelen);",
          "453:     retval = xfs_attr_rmtval_get(&args);",
          "454:     if (!retval)",
          "455:      retval = context->put_listent(context,",
          "456:        entry->flags,",
          "457:        name_rmt->name,",
          "458:        (int)name_rmt->namelen,",
          "459:        valuelen);",
          "460:     kmem_free(args.value);",
          "461:    } else {",
          "462:     retval = context->put_listent(context,",
          "467:    }",
          "468:    if (retval)",
          "469:     return retval;",
          "",
          "[Added Lines]",
          "438:    retval = context->put_listent(context,",
          "444:   if (retval)",
          "445:    break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ab3ffcaca99e0b77480d77bd393fc227b09069f",
      "candidate_info": {
        "commit_hash": "3ab3ffcaca99e0b77480d77bd393fc227b09069f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3ab3ffcaca99e0b77480d77bd393fc227b09069f",
        "files": [
          "fs/xfs/xfs_attr_list.c"
        ],
        "message": "xfs: collapse cases in xfs_attr3_leaf_list_int\n\nConsolidate the 2 calls to ->put_listent in\nxfs_attr3_leaf_list_int(), by setting up name, namelen, and\nvaluelen for the local vs remote cases, then call ->put_listent\nand do the error handling all in one spot.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>",
        "before_after_code_files": [
          "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
          "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:  retval = 0;",
          "414:  for (; i < ichdr.count; entry++, i++) {",
          "415:   if (be32_to_cpu(entry->hashval) != cursor->hashval) {",
          "416:    cursor->hashval = be32_to_cpu(entry->hashval);",
          "417:    cursor->offset = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:   char *name;",
          "416:   int namelen, valuelen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:   if (entry->flags & XFS_ATTR_LOCAL) {",
          "443:   }",
          "444:   if (retval)",
          "445:    break;",
          "446:   if (context->seen_enough)",
          "",
          "[Removed Lines]",
          "424:    xfs_attr_leaf_name_local_t *name_loc =",
          "425:     xfs_attr3_leaf_name_local(leaf, i);",
          "427:    retval = context->put_listent(context,",
          "428:       entry->flags,",
          "429:       name_loc->nameval,",
          "430:       (int)name_loc->namelen,",
          "431:       be16_to_cpu(name_loc->valuelen));",
          "432:   } else {",
          "433:    xfs_attr_leaf_name_remote_t *name_rmt =",
          "434:     xfs_attr3_leaf_name_remote(leaf, i);",
          "436:    int valuelen = be32_to_cpu(name_rmt->valuelen);",
          "438:    retval = context->put_listent(context,",
          "439:       entry->flags,",
          "440:       name_rmt->name,",
          "441:       (int)name_rmt->namelen,",
          "442:       valuelen);",
          "",
          "[Added Lines]",
          "427:    xfs_attr_leaf_name_local_t *name_loc;",
          "429:    name_loc = xfs_attr3_leaf_name_local(leaf, i);",
          "430:    name = name_loc->nameval;",
          "431:    namelen = name_loc->namelen;",
          "432:    valuelen = be16_to_cpu(name_loc->valuelen);",
          "433:   } else {",
          "434:    xfs_attr_leaf_name_remote_t *name_rmt;",
          "436:    name_rmt = xfs_attr3_leaf_name_remote(leaf, i);",
          "437:    name = name_rmt->name;",
          "438:    namelen = name_rmt->namelen;",
          "439:    valuelen = be32_to_cpu(name_rmt->valuelen);",
          "442:   retval = context->put_listent(context, entry->flags,",
          "443:            name, namelen, valuelen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7a136aee3c1c3f7daf87197b3b3c361744a2812",
      "candidate_info": {
        "commit_hash": "f7a136aee3c1c3f7daf87197b3b3c361744a2812",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f7a136aee3c1c3f7daf87197b3b3c361744a2812",
        "files": [
          "fs/xfs/libxfs/xfs_attr_leaf.h",
          "fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c",
          "fs/xfs/xfs_xattr.c"
        ],
        "message": "xfs: several xattr functions can be void\n\nThere are a handful of xattr functions which now return\nnothing but zero.  They can be made void, chased through calling\nfunctions, and error handling etc can be removed.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Dave Chinner <david@fromorbit.com>",
        "before_after_code_files": [
          "fs/xfs/libxfs/xfs_attr_leaf.h||fs/xfs/libxfs/xfs_attr_leaf.h",
          "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c",
          "fs/xfs/xfs_xattr.c||fs/xfs/xfs_xattr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/libxfs/xfs_attr_leaf.h||fs/xfs/libxfs/xfs_attr_leaf.h": [
          "File: fs/xfs/libxfs/xfs_attr_leaf.h -> fs/xfs/libxfs/xfs_attr_leaf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:      struct xfs_da_args *args);",
          "78: int xfs_attr3_leaf_remove(struct xfs_buf *leaf_buffer,",
          "79:         struct xfs_da_args *args);",
          "81:           struct xfs_attr_list_context *context);",
          "",
          "[Removed Lines]",
          "80: int xfs_attr3_leaf_list_int(struct xfs_buf *bp,",
          "",
          "[Added Lines]",
          "80: void xfs_attr3_leaf_list_int(struct xfs_buf *bp,",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h": [
          "File: fs/xfs/xfs_attr.h -> fs/xfs/xfs_attr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:          unsigned char *, int, int);",
          "119: typedef struct xfs_attr_list_context {",
          "",
          "[Removed Lines]",
          "116: typedef int (*put_listent_func_t)(struct xfs_attr_list_context *, int,",
          "",
          "[Added Lines]",
          "116: typedef void (*put_listent_func_t)(struct xfs_attr_list_context *, int,",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
          "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:  xfs_attr_sf_entry_t *sfe;",
          "75:  xfs_inode_t *dp;",
          "76:  int sbsize, nsbuf, count, i;",
          "79:  ASSERT(context != NULL);",
          "80:  dp = context->dp;",
          "",
          "[Removed Lines]",
          "77:  int error;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:      (XFS_ISRESET_CURSOR(cursor) &&",
          "103:              (dp->i_afp->if_bytes + sf->hdr.count * 16) < context->bufsize)) {",
          "104:   for (i = 0, sfe = &sf->list[0]; i < sf->hdr.count; i++) {",
          "",
          "[Removed Lines]",
          "105:    error = context->put_listent(context,",
          "106:         sfe->flags,",
          "107:         sfe->nameval,",
          "108:         (int)sfe->namelen,",
          "109:         (int)sfe->valuelen);",
          "110:    if (error)",
          "111:     return error;",
          "",
          "[Added Lines]",
          "104:    context->put_listent(context,",
          "105:           sfe->flags,",
          "106:           sfe->nameval,",
          "107:           (int)sfe->namelen,",
          "108:           (int)sfe->valuelen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:    cursor->hashval = sbp->hash;",
          "194:    cursor->offset = 0;",
          "195:   }",
          "205:   if (context->seen_enough)",
          "206:    break;",
          "207:   cursor->offset++;",
          "",
          "[Removed Lines]",
          "196:   error = context->put_listent(context,",
          "197:      sbp->flags,",
          "198:      sbp->name,",
          "199:      sbp->namelen,",
          "200:      sbp->valuelen);",
          "201:   if (error) {",
          "202:    kmem_free(sbuf);",
          "203:    return error;",
          "204:   }",
          "",
          "[Added Lines]",
          "193:   context->put_listent(context,",
          "194:          sbp->flags,",
          "195:          sbp->name,",
          "196:          sbp->namelen,",
          "197:          sbp->valuelen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:  for (;;) {",
          "337:   leaf = bp->b_addr;",
          "343:   xfs_attr3_leaf_hdr_from_disk(mp->m_attr_geo, &leafhdr, leaf);",
          "344:   if (context->seen_enough || leafhdr.forw == 0)",
          "345:    break;",
          "",
          "[Removed Lines]",
          "338:   error = xfs_attr3_leaf_list_int(bp, context);",
          "339:   if (error) {",
          "340:    xfs_trans_brelse(NULL, bp);",
          "341:    return error;",
          "342:   }",
          "",
          "[Added Lines]",
          "331:   xfs_attr3_leaf_list_int(bp, context);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "360: xfs_attr3_leaf_list_int(",
          "361:  struct xfs_buf   *bp,",
          "362:  struct xfs_attr_list_context *context)",
          "",
          "[Removed Lines]",
          "359: int",
          "",
          "[Added Lines]",
          "348: void",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "366:  struct xfs_attr3_icleaf_hdr ichdr;",
          "367:  struct xfs_attr_leaf_entry *entries;",
          "368:  struct xfs_attr_leaf_entry *entry;",
          "370:  int    i;",
          "371:  struct xfs_mount  *mp = context->dp->i_mount;",
          "",
          "[Removed Lines]",
          "369:  int    retval;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "399:   }",
          "400:   if (i == ichdr.count) {",
          "401:    trace_xfs_attr_list_notfound(context);",
          "403:   }",
          "404:  } else {",
          "405:   entry = &entries[0];",
          "",
          "[Removed Lines]",
          "402:    return 0;",
          "",
          "[Added Lines]",
          "390:    return;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "414:  for (; i < ichdr.count; entry++, i++) {",
          "415:   char *name;",
          "416:   int namelen, valuelen;",
          "",
          "[Removed Lines]",
          "413:  retval = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "439:    valuelen = be32_to_cpu(name_rmt->valuelen);",
          "440:   }",
          "443:            name, namelen, valuelen);",
          "446:   if (context->seen_enough)",
          "447:    break;",
          "448:   cursor->offset++;",
          "449:  }",
          "450:  trace_xfs_attr_list_leaf_end(context);",
          "452: }",
          "",
          "[Removed Lines]",
          "442:   retval = context->put_listent(context, entry->flags,",
          "444:   if (retval)",
          "445:    break;",
          "451:  return retval;",
          "",
          "[Added Lines]",
          "429:   context->put_listent(context, entry->flags,",
          "436:  return;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "467:  if (error)",
          "468:   return error;",
          "471:  xfs_trans_brelse(NULL, bp);",
          "473: }",
          "475: int",
          "",
          "[Removed Lines]",
          "470:  error = xfs_attr3_leaf_list_int(bp, context);",
          "472:  return error;",
          "",
          "[Added Lines]",
          "455:  xfs_attr3_leaf_list_int(bp, context);",
          "457:  return 0;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "517: xfs_attr_put_listent(",
          "518:  xfs_attr_list_context_t *context,",
          "519:  int  flags,",
          "",
          "[Removed Lines]",
          "516: STATIC int",
          "",
          "[Added Lines]",
          "501: STATIC void",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "537:  if (((context->flags & ATTR_SECURE) == 0) !=",
          "538:      ((flags & XFS_ATTR_SECURE) == 0))",
          "540:  if (((context->flags & ATTR_ROOT) == 0) !=",
          "541:      ((flags & XFS_ATTR_ROOT) == 0))",
          "544:  arraytop = sizeof(*alist) +",
          "545:    context->count * sizeof(alist->al_offset[0]);",
          "",
          "[Removed Lines]",
          "539:   return 0;",
          "542:   return 0;",
          "",
          "[Added Lines]",
          "524:   return;",
          "527:   return;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "548:   trace_xfs_attr_list_full(context);",
          "549:   alist->al_more = 1;",
          "550:   context->seen_enough = 1;",
          "552:  }",
          "554:  aep = (attrlist_ent_t *)&context->alist[context->firstu];",
          "",
          "[Removed Lines]",
          "551:   return 0;",
          "",
          "[Added Lines]",
          "536:   return;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "558:  alist->al_offset[context->count++] = context->firstu;",
          "559:  alist->al_count = context->count;",
          "560:  trace_xfs_attr_list_add(context);",
          "562: }",
          "",
          "[Removed Lines]",
          "561:  return 0;",
          "",
          "[Added Lines]",
          "546:  return;",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_xattr.c||fs/xfs/xfs_xattr.c": [
          "File: fs/xfs/xfs_xattr.c -> fs/xfs/xfs_xattr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:  NULL",
          "131: };",
          "134: __xfs_xattr_put_listent(",
          "135:  struct xfs_attr_list_context *context,",
          "136:  char *prefix,",
          "",
          "[Removed Lines]",
          "133: static int",
          "",
          "[Added Lines]",
          "133: static void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:  if (arraytop > context->firstu) {",
          "150:   context->seen_enough = 1;",
          "152:  }",
          "153:  offset = (char *)context->alist + context->count;",
          "154:  strncpy(offset, prefix, prefix_len);",
          "",
          "[Removed Lines]",
          "151:   return 0;",
          "",
          "[Added Lines]",
          "151:   return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160: compute_size:",
          "161:  context->count += prefix_len + namelen + 1;",
          "163: }",
          "166: xfs_xattr_put_listent(",
          "167:  struct xfs_attr_list_context *context,",
          "168:  int  flags,",
          "",
          "[Removed Lines]",
          "162:  return 0;",
          "165: static int",
          "",
          "[Added Lines]",
          "162:  return;",
          "165: static void",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180:   if (namelen == SGI_ACL_FILE_SIZE &&",
          "181:       strncmp(name, SGI_ACL_FILE,",
          "182:        SGI_ACL_FILE_SIZE) == 0) {",
          "184:      context, XATTR_SYSTEM_PREFIX,",
          "185:      XATTR_SYSTEM_PREFIX_LEN,",
          "186:      XATTR_POSIX_ACL_ACCESS,",
          "187:      strlen(XATTR_POSIX_ACL_ACCESS));",
          "190:   } else if (namelen == SGI_ACL_DEFAULT_SIZE &&",
          "191:     strncmp(name, SGI_ACL_DEFAULT,",
          "192:      SGI_ACL_DEFAULT_SIZE) == 0) {",
          "194:      context, XATTR_SYSTEM_PREFIX,",
          "195:      XATTR_SYSTEM_PREFIX_LEN,",
          "196:      XATTR_POSIX_ACL_DEFAULT,",
          "197:      strlen(XATTR_POSIX_ACL_DEFAULT));",
          "200:   }",
          "201: #endif",
          "",
          "[Removed Lines]",
          "183:    int ret = __xfs_xattr_put_listent(",
          "188:    if (ret)",
          "189:     return ret;",
          "193:    int ret = __xfs_xattr_put_listent(",
          "198:    if (ret)",
          "199:     return ret;",
          "",
          "[Added Lines]",
          "183:    __xfs_xattr_put_listent(",
          "191:    __xfs_xattr_put_listent(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "207:   if (!capable(CAP_SYS_ADMIN))",
          "210:   prefix = XATTR_TRUSTED_PREFIX;",
          "211:   prefix_len = XATTR_TRUSTED_PREFIX_LEN;",
          "",
          "[Removed Lines]",
          "208:    return 0;",
          "",
          "[Added Lines]",
          "204:    return;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "217:   prefix_len = XATTR_USER_PREFIX_LEN;",
          "218:  }",
          "222: }",
          "224: ssize_t",
          "",
          "[Removed Lines]",
          "220:  return __xfs_xattr_put_listent(context, prefix, prefix_len, name,",
          "221:            namelen);",
          "",
          "[Added Lines]",
          "216:  __xfs_xattr_put_listent(context, prefix, prefix_len, name,",
          "217:     namelen);",
          "218:  return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5bd12bfea60af455f4cbad494e4ac1082e3abd6",
      "candidate_info": {
        "commit_hash": "e5bd12bfea60af455f4cbad494e4ac1082e3abd6",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e5bd12bfea60af455f4cbad494e4ac1082e3abd6",
        "files": [
          "fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c",
          "fs/xfs/xfs_xattr.c"
        ],
        "message": "xfs: don't pass value into attr ->put_listent\n\nThe value is not used; only names and value lengths are\nreturned.  Remove the argument.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Dave Chinner <david@fromorbit.com>",
        "before_after_code_files": [
          "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h",
          "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c",
          "fs/xfs/xfs_xattr.c||fs/xfs/xfs_xattr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/xfs_attr.h||fs/xfs/xfs_attr.h": [
          "File: fs/xfs/xfs_attr.h -> fs/xfs/xfs_attr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "116: typedef int (*put_listent_func_t)(struct xfs_attr_list_context *, int,",
          "119: typedef struct xfs_attr_list_context {",
          "",
          "[Removed Lines]",
          "117:          unsigned char *, int, int, unsigned char *);",
          "",
          "[Added Lines]",
          "117:          unsigned char *, int, int);",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
          "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:         sfe->flags,",
          "107:         sfe->nameval,",
          "108:         (int)sfe->namelen,",
          "111:    if (error)",
          "112:     return error;",
          "",
          "[Removed Lines]",
          "109:         (int)sfe->valuelen,",
          "110:         &sfe->nameval[sfe->namelen]);",
          "",
          "[Added Lines]",
          "109:         (int)sfe->valuelen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:      sbp->flags,",
          "199:      sbp->name,",
          "200:      sbp->namelen,",
          "203:   if (error) {",
          "204:    kmem_free(sbuf);",
          "205:    return error;",
          "",
          "[Removed Lines]",
          "201:      sbp->valuelen,",
          "202:      &sbp->name[sbp->namelen]);",
          "",
          "[Added Lines]",
          "200:      sbp->valuelen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "430:       entry->flags,",
          "431:       name_loc->nameval,",
          "432:       (int)name_loc->namelen,",
          "435:    if (retval)",
          "436:     return retval;",
          "437:   } else {",
          "",
          "[Removed Lines]",
          "433:       be16_to_cpu(name_loc->valuelen),",
          "434:       &name_loc->nameval[name_loc->namelen]);",
          "",
          "[Added Lines]",
          "431:       be16_to_cpu(name_loc->valuelen));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "459:        entry->flags,",
          "460:        name_rmt->name,",
          "461:        (int)name_rmt->namelen,",
          "464:     kmem_free(args.value);",
          "465:    } else {",
          "466:     retval = context->put_listent(context,",
          "467:       entry->flags,",
          "468:       name_rmt->name,",
          "469:       (int)name_rmt->namelen,",
          "472:    }",
          "473:    if (retval)",
          "474:     return retval;",
          "",
          "[Removed Lines]",
          "462:        valuelen,",
          "463:        args.value);",
          "470:       valuelen,",
          "471:       NULL);",
          "",
          "[Added Lines]",
          "459:        valuelen);",
          "466:       valuelen);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "549:  int  flags,",
          "550:  unsigned char *name,",
          "551:  int  namelen,",
          "554: {",
          "555:  struct attrlist *alist = (struct attrlist *)context->alist;",
          "556:  attrlist_ent_t *aep;",
          "",
          "[Removed Lines]",
          "552:  int  valuelen,",
          "553:  unsigned char *value)",
          "",
          "[Added Lines]",
          "547:  int  valuelen)",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_xattr.c||fs/xfs/xfs_xattr.c": [
          "File: fs/xfs/xfs_xattr.c -> fs/xfs/xfs_xattr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:  int  flags,",
          "167:  unsigned char *name,",
          "168:  int  namelen,",
          "171: {",
          "172:  char *prefix;",
          "173:  int prefix_len;",
          "",
          "[Removed Lines]",
          "169:  int  valuelen,",
          "170:  unsigned char *value)",
          "",
          "[Added Lines]",
          "169:  int  valuelen)",
          "",
          "---------------"
        ]
      }
    }
  ]
}