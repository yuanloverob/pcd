{
  "cve_id": "CVE-2010-3844",
  "cve_desc": "An unchecked sscanf() call in ettercap before 0.7.5 allows an insecure temporary settings file to overflow a static-sized buffer on the stack.",
  "repo": "Ettercap/ettercap",
  "patch_hash": "4ef3ede30181eca9add74305ad26dbcb0c3686a0",
  "patch_info": {
    "commit_hash": "4ef3ede30181eca9add74305ad26dbcb0c3686a0",
    "repo": "Ettercap/ettercap",
    "commit_url": "https://github.com/Ettercap/ettercap/commit/4ef3ede30181eca9add74305ad26dbcb0c3686a0",
    "files": [
      "src/interfaces/gtk/ec_gtk_conf.c",
      "src/interfaces/gtk/ec_gtk_mitm.c"
    ],
    "message": "More changes to mitigate: CVE-2010-3843 CVE-2010-3844",
    "before_after_code_files": [
      "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c",
      "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
    ]
  },
  "patch_diff": {
    "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c": [
      "File: src/interfaces/gtk/ec_gtk_conf.c -> src/interfaces/gtk/ec_gtk_conf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "72: #ifdef OS_WINDOWS",
      "73:    path = ec_win_get_user_dir();",
      "74: #else",
      "78: #endif",
      "80:    filename = g_build_filename(path, \".ettercap_gtk\", NULL);",
      "",
      "[Removed Lines]",
      "77:    path = g_get_tmp_dir();",
      "",
      "[Added Lines]",
      "75:    path = g_get_home_dir();",
      "",
      "---------------"
    ],
    "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c": [
      "File: src/interfaces/gtk/ec_gtk_mitm.c -> src/interfaces/gtk/ec_gtk_mitm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "181:       snprintf(params, 6, \"icmp:\");",
      "187:       gtkui_start_mitm();",
      "188:    }",
      "",
      "[Removed Lines]",
      "183:       strncat(params, gtk_entry_get_text(GTK_ENTRY(entry1)), PARAMS_LEN);",
      "184:       strncat(params, \"/\", PARAMS_LEN);",
      "185:       strncat(params, gtk_entry_get_text(GTK_ENTRY(entry2)), PARAMS_LEN);",
      "",
      "[Added Lines]",
      "183:       strncat(params, gtk_entry_get_text(GTK_ENTRY(entry1)), ETH_ASCII_ADDR_LEN);",
      "184:       strncat(params, \"/\", 1);",
      "185:       strncat(params, gtk_entry_get_text(GTK_ENTRY(entry2)), IP6_ASCII_ADDR_LEN);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "deabfa0dda2bac4766cb52bdc9257a422de7a7d4",
      "candidate_info": {
        "commit_hash": "deabfa0dda2bac4766cb52bdc9257a422de7a7d4",
        "repo": "Ettercap/ettercap",
        "commit_url": "https://github.com/Ettercap/ettercap/commit/deabfa0dda2bac4766cb52bdc9257a422de7a7d4",
        "files": [
          "CMakeFiles/lib_check.cmake",
          "src/dissectors/ec_ssh.c",
          "src/interfaces/CMakeLists.txt"
        ],
        "message": "Fixing build issues reported by Gentoo people",
        "before_after_code_files": [
          "CMakeFiles/lib_check.cmake||CMakeFiles/lib_check.cmake",
          "src/dissectors/ec_ssh.c||src/dissectors/ec_ssh.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Ettercap/ettercap/pull/6"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CMakeFiles/lib_check.cmake||CMakeFiles/lib_check.cmake": [
          "File: CMakeFiles/lib_check.cmake -> CMakeFiles/lib_check.cmake",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         set(EC_LIBS ${EC_LIBS} ${OPENSSL_LIBRARIES})",
          "56:         set(EC_INCLUDE ${EC_INCLUDE} ${OPENSSL_INCLUDEDIRS})",
          "57:     endif(OPENSSL_FOUND)",
          "58: endif(ENABLE_SSL)",
          "60: find_package(ZLIB)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: else(ENABLE_SSL)",
          "59:     set(HAVE_OPENSSL 0)",
          "",
          "---------------"
        ],
        "src/dissectors/ec_ssh.c||src/dissectors/ec_ssh.c": [
          "File: src/dissectors/ec_ssh.c -> src/dissectors/ec_ssh.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     $Id: ec_ssh.c,v 1.25 2004/05/27 10:59:52 alor Exp $",
          "23: #include <ec.h>",
          "24: #include <ec_decode.h>",
          "25: #include <ec_dissect.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #ifdef HAVE_OPENSSL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "746:    free(inbuf);",
          "747: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "751: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ad6bcfd0874e946862a6ea4a48ba41f317da5d0",
      "candidate_info": {
        "commit_hash": "5ad6bcfd0874e946862a6ea4a48ba41f317da5d0",
        "repo": "Ettercap/ettercap",
        "commit_url": "https://github.com/Ettercap/ettercap/commit/5ad6bcfd0874e946862a6ea4a48ba41f317da5d0",
        "files": [
          "plug-ins/sslstrip/sslstrip.c"
        ],
        "message": "Added check for libcurl version in SSLStrip plugin",
        "before_after_code_files": [
          "plug-ins/sslstrip/sslstrip.c||plug-ins/sslstrip/sslstrip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Ettercap/ettercap/pull/6"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "plug-ins/sslstrip/sslstrip.c||plug-ins/sslstrip/sslstrip.c": [
          "File: plug-ins/sslstrip/sslstrip.c -> plug-ins/sslstrip/sslstrip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #ifdef HAVE_LIBCURL",
          "46: #include <curl/curl.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #if (LIBCURL_VERSION_MAJOR < 7) || (LIBCURL_VERSION_MINOR < 26)",
          "50: #error libcurl 7.26.0 or up is needed",
          "51: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "afde9f3e5c34ba56a4ec9e72b06a652891e406f1",
      "candidate_info": {
        "commit_hash": "afde9f3e5c34ba56a4ec9e72b06a652891e406f1",
        "repo": "Ettercap/ettercap",
        "commit_url": "https://github.com/Ettercap/ettercap/commit/afde9f3e5c34ba56a4ec9e72b06a652891e406f1",
        "files": [
          "src/interfaces/gtk/ec_gtk_conf.c"
        ],
        "message": "Imported commit https://github.com/drizzt/ettercap/commit/7f8a7a8cc18fd852c795f3f531d98ca8b58f5cbc in order to fix lp bug 656347 and gentoo bug 340897 CVE-2010-3843 \tmodified:   src/interfaces/gtk/ec_gtk_conf.c",
        "before_after_code_files": [
          "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c"
          ],
          "candidate": [
            "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/interfaces/gtk/ec_gtk_conf.c||src/interfaces/gtk/ec_gtk_conf.c": [
          "File: src/interfaces/gtk/ec_gtk_conf.c -> src/interfaces/gtk/ec_gtk_conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:    char line[100], name[30];",
          "70:    short value;",
          "80:    DEBUG_MSG(\"gtkui_conf_read: %s\", filename);",
          "",
          "[Removed Lines]",
          "72: #ifdef OS_WINDOWS",
          "73:    path = ec_win_get_user_dir();",
          "74: #else",
          "75:    path = g_get_home_dir();",
          "76: #endif",
          "78:    filename = g_build_filename(path, \".ettercap_gtk\", NULL);",
          "",
          "[Added Lines]",
          "72:    path = g_get_user_config_dir();",
          "73:    filename = g_build_filename(path, \"ettercap_gtk\", NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:       return;",
          "86:    while(fgets(line, 100, fd)) {",
          "90:       gtkui_conf_set(name, value);",
          "91:    }",
          "92:    fclose(fd);",
          "",
          "[Removed Lines]",
          "87:       if(sscanf(line, \"%s = %hd\", name, &value) != 2)",
          "88:   ERROR_MSG(\"Invalid line in GTK configuration: %s\\n\", line);",
          "",
          "[Added Lines]",
          "82:       char *p = strchr(line, '=');",
          "83:      if(!p)",
          "84:          continue;",
          "86:       snprintf(name, sizeof(name), \"%s\", line);",
          "87:       strlcpy(name, line, sizeof(name) - 1);",
          "88:       g_strstrip(name);",
          "89:       value = atoi(p + 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "232818934325d43f2d5bce463ffa236a054ecddc",
      "candidate_info": {
        "commit_hash": "232818934325d43f2d5bce463ffa236a054ecddc",
        "repo": "Ettercap/ettercap",
        "commit_url": "https://github.com/Ettercap/ettercap/commit/232818934325d43f2d5bce463ffa236a054ecddc",
        "files": [
          "src/interfaces/gtk/ec_gtk_mitm.c"
        ],
        "message": "another fix for issue 18 https://github.com/Ettercap/ettercap/issues/18 \tmodified:   src/interfaces/gtk/ec_gtk_mitm.c",
        "before_after_code_files": [
          "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
          ],
          "candidate": [
            "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
          ]
        }
      },
      "candidate_diff": {
        "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c": [
          "File: src/interfaces/gtk/ec_gtk_mitm.c -> src/interfaces/gtk/ec_gtk_mitm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:    gboolean oneway = FALSE;",
          "52:    DEBUG_MSG(\"gtk_arp_poisoning\");",
          "55:    dialog = gtk_dialog_new_with_buttons(\"MITM Attack: ARP Poisoning\", GTK_WINDOW (window),",
          "56:                                         GTK_DIALOG_MODAL, GTK_STOCK_OK, GTK_RESPONSE_OK,",
          "",
          "[Removed Lines]",
          "53:    memset(params, '\\0', PARAMS_LEN+1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:          ui_error(\"You must select at least one ARP mode\");",
          "108:          return;",
          "109:       }",
          "112:       gtkui_start_mitm();",
          "113:    }",
          "",
          "[Removed Lines]",
          "111:       snprintf(params, PARAMS_LEN, \"arp:%s%s%s\", s_remote, comma, s_oneway);",
          "",
          "[Added Lines]",
          "111:       snprintf(params, PARAMS_LEN+1, \"arp:%s%s%s\", s_remote, comma, s_oneway);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176:    response = gtk_dialog_run(GTK_DIALOG(dialog));",
          "177:    if(response == GTK_RESPONSE_OK) {",
          "178:       gtk_widget_hide(dialog);",
          "182:                        gtk_entry_get_text(GTK_ENTRY(entry2)));",
          "184:       gtkui_start_mitm();",
          "",
          "[Removed Lines]",
          "179:       memset(params, '\\0', PARAMS_LEN);",
          "181:       snprintf(params, PARAMS_LEN, \"icmp:%s/%s\",  gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "[Added Lines]",
          "182:       snprintf(params, PARAMS_LEN+1, \"icmp:%s/%s\",  gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:   tree = \"tree\";",
          "249:       }",
          "252:       gtkui_start_mitm();",
          "253:    }",
          "",
          "[Removed Lines]",
          "251:       snprintf(params, PARAMS_LEN, \"port:%s%s%s\", s_remote, comma, tree);",
          "",
          "[Added Lines]",
          "252:       snprintf(params, PARAMS_LEN+1, \"port:%s%s%s\", s_remote, comma, tree);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:    gint response = 0;",
          "267:    DEBUG_MSG(\"gtk_dhcp_spoofing\");",
          "270:    dialog = gtk_dialog_new_with_buttons(\"MITM Attack: DHCP Spoofing\", GTK_WINDOW (window),",
          "271:                                         GTK_DIALOG_MODAL, GTK_STOCK_OK, GTK_RESPONSE_OK,",
          "",
          "[Removed Lines]",
          "268:    memset(params, '\\0', PARAMS_LEN+1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "326:    response = gtk_dialog_run(GTK_DIALOG(dialog));",
          "327:    if(response == GTK_RESPONSE_OK) {",
          "328:       gtk_widget_hide(dialog);",
          "332:                        gtk_entry_get_text(GTK_ENTRY(entry2)), gtk_entry_get_text(GTK_ENTRY(entry3)));",
          "334:       DEBUG_MSG(\"ec_gtk_dhcp: DHCP MITM %s\", params);",
          "",
          "[Removed Lines]",
          "329:       memset(params, '\\0', PARAMS_LEN);",
          "331:       snprintf(params, PARAMS_LEN, \"dhcp:%s/%s/%s\", gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "[Added Lines]",
          "332:       snprintf(params, PARAMS_LEN+1, \"dhcp:%s/%s/%s\", gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49f6b8e36e3d0c244cf37686b3fe212c9fb1ccf3",
      "candidate_info": {
        "commit_hash": "49f6b8e36e3d0c244cf37686b3fe212c9fb1ccf3",
        "repo": "Ettercap/ettercap",
        "commit_url": "https://github.com/Ettercap/ettercap/commit/49f6b8e36e3d0c244cf37686b3fe212c9fb1ccf3",
        "files": [
          "src/interfaces/gtk/ec_gtk_mitm.c"
        ],
        "message": "More changes to GTK MiTM methods.",
        "before_after_code_files": [
          "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
          ],
          "candidate": [
            "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c"
          ]
        }
      },
      "candidate_diff": {
        "src/interfaces/gtk/ec_gtk_mitm.c||src/interfaces/gtk/ec_gtk_mitm.c": [
          "File: src/interfaces/gtk/ec_gtk_mitm.c -> src/interfaces/gtk/ec_gtk_mitm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:    response = gtk_dialog_run(GTK_DIALOG(dialog));",
          "89:    if(response == GTK_RESPONSE_OK) {",
          "90:       gtk_widget_hide(dialog);",
          "95:       if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON (button1))) {",
          "97:         remote = TRUE;",
          "98:       }",
          "100:       if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON (button2))) {",
          "101:          if(remote)",
          "105:          oneway = TRUE;",
          "106:       }",
          "",
          "[Removed Lines]",
          "91:       memset(params, '\\0', PARAMS_LEN+1);",
          "93:       snprintf(params, 5, \"arp:\");",
          "96:         strcat(params, \"remote\");",
          "102:             strcat(params, \",\");",
          "104:          strcat(params, \"oneway\");",
          "",
          "[Added Lines]",
          "91:       const char *remote = \"\", *comma = \"\", *oneway = \"\";",
          "95:  remote=\"remote\";",
          "101:   comma = \",\";",
          "103:   oneway = \"oneway\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:          return;",
          "111:       }",
          "113:       gtkui_start_mitm();",
          "114:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:       snprintf(params, PARAMS_LEN, \"arp:%s%s%s\", remote, comma, oneway);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:       gtk_widget_hide(dialog);",
          "180:       memset(params, '\\0', PARAMS_LEN);",
          "183:                        gtk_entry_get_text(GTK_ENTRY(entry2)));",
          "185:       gtkui_start_mitm();",
          "",
          "[Removed Lines]",
          "182:       snprintf(params, PARAMS_LEN-1, \"icmp:%s/%s\",  gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "[Added Lines]",
          "182:       snprintf(params, PARAMS_LEN, \"icmp:%s/%s\",  gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:    response = gtk_dialog_run(GTK_DIALOG(dialog));",
          "237:    if(response == GTK_RESPONSE_OK) {",
          "238:       gtk_widget_hide(dialog);",
          "242:       if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON (button1))) {",
          "244:          remote = TRUE;",
          "245:       }",
          "247:       if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON (button2))) {",
          "248:          if(remote)",
          "251:       }",
          "253:       gtkui_start_mitm();",
          "254:    }",
          "",
          "[Removed Lines]",
          "240:       snprintf(params, 6, \"port:\");",
          "243:          strcat(params, \"remote\");",
          "249:             strcat(params, \",\");",
          "250:          strcat(params, \"tree\");",
          "",
          "[Added Lines]",
          "239:       const char *remote= \"\", *tree = \"\", *comma = \"\";",
          "243:          remote=\"remote\";",
          "249:               comma = \",\";",
          "250:   tree = \"tree\";",
          "253:       snprintf(params, PARAMS_LEN, \"port:%s%s%s\", remote, comma, tree);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "329:       gtk_widget_hide(dialog);",
          "330:       memset(params, '\\0', PARAMS_LEN);",
          "333:                        gtk_entry_get_text(GTK_ENTRY(entry2)), gtk_entry_get_text(GTK_ENTRY(entry3)));",
          "335:       DEBUG_MSG(\"ec_gtk_dhcp: DHCP MITM %s\", params);",
          "",
          "[Removed Lines]",
          "332:       snprintf(params, PARAMS_LEN-1, \"dhcp:%s/%s/%s\", gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "[Added Lines]",
          "333:       snprintf(params, PARAMS_LEN, \"dhcp:%s/%s/%s\", gtk_entry_get_text(GTK_ENTRY(entry1)),",
          "",
          "---------------"
        ]
      }
    }
  ]
}