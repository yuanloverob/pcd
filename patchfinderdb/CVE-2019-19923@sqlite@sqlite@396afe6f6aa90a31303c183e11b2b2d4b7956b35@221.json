{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b2ec0efa16ae96a56825152fd8948d67f2797d9",
      "candidate_info": {
        "commit_hash": "9b2ec0efa16ae96a56825152fd8948d67f2797d9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9b2ec0efa16ae96a56825152fd8948d67f2797d9",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New dbsqlfuzz test cases add to test/fuzzdata8.db.\n\nFossilOrigin-Name: 873aa46da3d0f97784cad94828fc367bb2ceb13d5ece2e105320f404b3971c85",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: dff24c6c7a4e7623984b5bb24c2ff14fe079dc49a0ad048cbfc66f84c08875b0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "035f6d909fcdd2b36320b07aec608a6c75187593",
      "candidate_info": {
        "commit_hash": "035f6d909fcdd2b36320b07aec608a6c75187593",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/035f6d909fcdd2b36320b07aec608a6c75187593",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Do not allow ALTER TABLE ADD COLUMN for a STORED column.\n\nFossilOrigin-Name: 42fc08bc1528a34a603c2c085b515766a8d33ae7ea0350a52b0ca24b94ebcbc5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 30065716878d4058e75eb510b0b27b68e5193d04625eb173210de8061f20f499",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:       }",
          "350:       sqlite3ValueFree(pVal);",
          "351:     }",
          "352:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   }else if( pCol->colFlags & COLFLAG_STORED ){",
          "353:     sqlite3ErrorMsg(pParse, \"cannot add a STORED column\");",
          "354:     return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b88eaf1619cf1be8c8cf2a0ffb9a2767a840b27e",
      "candidate_info": {
        "commit_hash": "b88eaf1619cf1be8c8cf2a0ffb9a2767a840b27e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b88eaf1619cf1be8c8cf2a0ffb9a2767a840b27e",
        "files": [
          "ext/expert/sqlite3expert.h",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add header guard to the expert extension.\n\nFossilOrigin-Name: 7e3151855fd4370fb7d4fff20516c2c2d1980134620df924106e6989bc130583",
        "before_after_code_files": [
          "ext/expert/sqlite3expert.h||ext/expert/sqlite3expert.h",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/expert/sqlite3expert.h||ext/expert/sqlite3expert.h": [
          "File: ext/expert/sqlite3expert.h -> ext/expert/sqlite3expert.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"sqlite3.h\"",
          "17: typedef struct sqlite3expert sqlite3expert;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: #if !defined(SQLITEEXPERT_H)",
          "14: #define SQLITEEXPERT_H 1",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fa2416f623d83fe93253137302a74fcd6cdd041da337a0756df344d7d09a19f5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55f66b341a55f418fac2e6ce4554dc9702309616",
      "candidate_info": {
        "commit_hash": "55f66b341a55f418fac2e6ce4554dc9702309616",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/55f66b341a55f418fac2e6ce4554dc9702309616",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/backup.c",
          "src/btree.c",
          "src/build.c",
          "src/fkey.c",
          "src/parse.y",
          "src/pcache.c",
          "src/pcache1.c",
          "src/select.c",
          "src/trigger.c",
          "src/vdbeaux.c",
          "src/vdbesort.c",
          "src/wal.c",
          "src/where.c",
          "src/window.c",
          "tool/lempar.c"
        ],
        "message": "Add new assert() statements in an attempt to help static analyzers avoid false-positives.\n\nFossilOrigin-Name: 9e66458592d40fbd96ea5f21339573110ca1cfe328238a020c9420a87d35dd72",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/backup.c||src/backup.c",
          "src/btree.c||src/btree.c",
          "src/build.c||src/build.c",
          "src/fkey.c||src/fkey.c",
          "src/parse.y||src/parse.y",
          "src/pcache.c||src/pcache.c",
          "src/pcache1.c||src/pcache1.c",
          "src/select.c||src/select.c",
          "src/trigger.c||src/trigger.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "src/vdbesort.c||src/vdbesort.c",
          "src/wal.c||src/wal.c",
          "src/where.c||src/where.c",
          "src/window.c||src/window.c",
          "tool/lempar.c||tool/lempar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 22a7c15b262376fb0ce4dd3d044373380d86c5ccd96e2f24576cf04318597c33",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/backup.c||src/backup.c": [
          "File: src/backup.c -> src/backup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "619:   }",
          "620:   if( p->isAttached ){",
          "621:     pp = sqlite3PagerBackupPtr(sqlite3BtreePager(p->pSrc));",
          "622:     while( *pp!=p ){",
          "623:       pp = &(*pp)->pNext;",
          "624:     }",
          "626:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "622:     assert( pp!=0 );",
          "625:       assert( pp!=0 );",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7962:   ));",
          "7964:   assert( sqlite3PagerIswriteable(pParent->pDbPage) );",
          "7965:   put4byte(pRight, apNew[nNew-1]->pgno);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7965:   assert( nNew>=1 && nNew<=ArraySize(apNew) );",
          "7966:   assert( apNew[nNew-1]!=0 );",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3632:       if( pStart ){",
          "3633:         int n = (int)(pParse->sLastToken.z - pName->z) + pParse->sLastToken.n;",
          "3634:         if( pName->z[n-1]==';' ) n--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3632:       assert( pName!=0 || pStart==0 );",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1332:       return 0;",
          "1333:     }",
          "1334:     assert( pStep!=0 );",
          "1336:     switch( action ){",
          "1337:       case OE_Restrict:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1335:     assert( pTrigger!=0 );",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "460:   static void parserDoubleLinkSelect(Parse *pParse, Select *p){",
          "461:     if( p->pPrior ){",
          "462:       Select *pNext = 0, *pLoop;",
          "463:       int mxSelect, cnt = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "461:     assert( p!=0 );",
          "",
          "---------------"
        ],
        "src/pcache.c||src/pcache.c": [
          "File: src/pcache.c -> src/pcache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:     sqlite3PCacheSetDefault();",
          "265:   }",
          "266:   return sqlite3GlobalConfig.pcache2.xInit(sqlite3GlobalConfig.pcache2.pArg);",
          "267: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:     assert( sqlite3GlobalConfig.pcache2.xInit!=0 );",
          "",
          "---------------"
        ],
        "src/pcache1.c||src/pcache1.c": [
          "File: src/pcache1.c -> src/pcache1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:   assert( sqlite3_mutex_held(pCache->pGroup->mutex) );",
          "426:   if( pCache->pFree || (pCache->nPage==0 && pcache1InitBulk(pCache)) ){",
          "427:     p = pCache->pFree;",
          "428:     pCache->pFree = p->pNext;",
          "429:     p->pNext = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427:     assert( pCache->pFree!=0 );",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3949:   for(pParent=p; pParent; pParent=pParent->pPrior, pSub=pSub->pPrior){",
          "3950:     int nSubSrc;",
          "3951:     u8 jointype = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3952:     assert( pSub!=0 );",
          "",
          "---------------"
        ],
        "src/trigger.c||src/trigger.c": [
          "File: src/trigger.c -> src/trigger.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:     Trigger *pLink = pTrig;",
          "341:     Hash *pHash = &db->aDb[iDb].pSchema->trigHash;",
          "342:     assert( sqlite3SchemaMutexHeld(db, iDb, 0) );",
          "343:     pTrig = sqlite3HashInsert(pHash, zName, pTrig);",
          "344:     if( pTrig ){",
          "345:       sqlite3OomFault(db);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:     assert( pLink!=0 );",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1908:       int j;",
          "1909:       i -= p->nOp;",
          "1910:       for(j=0; i>=apSub[j]->nOp; j++){",
          "1911:         i -= apSub[j]->nOp;",
          "1912:       }",
          "1913:       pOp = &apSub[j]->aOp[i];",
          "1914:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1910:       assert( apSub!=0 );",
          "1911:       assert( nSub>0 );",
          "1914:         assert( i<apSub[j]->nOp || j+1<nSub );",
          "",
          "---------------"
        ],
        "src/vdbesort.c||src/vdbesort.c": [
          "File: src/vdbesort.c -> src/vdbesort.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1728:       rc = vdbeSorterListToPMA(&pSorter->aTask[nWorker], &pSorter->list);",
          "1729:     }else{",
          "1734:       assert( pTask->pThread==0 && pTask->bDone==0 );",
          "1735:       assert( pTask->list.pList==0 );",
          "1736:       assert( pTask->list.aMemory==0 || pSorter->list.aMemory!=0 );",
          "1738:       pSorter->iPrev = (u8)(pTask - pSorter->aTask);",
          "1739:       pTask->list = pSorter->list;",
          "1740:       pSorter->list.pList = 0;",
          "",
          "[Removed Lines]",
          "1731:       u8 *aMem = pTask->list.aMemory;",
          "1732:       void *pCtx = (void*)pTask;",
          "",
          "[Added Lines]",
          "1731:       u8 *aMem;",
          "1732:       void *pCtx;",
          "1734:       assert( pTask!=0 );",
          "1739:       aMem = pTask->list.aMemory;",
          "1740:       pCtx = (void*)pTask;",
          "",
          "---------------"
        ],
        "src/wal.c||src/wal.c": [
          "File: src/wal.c -> src/wal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3478:         if( rc ) return rc;",
          "3479:         iOffset += szFrame;",
          "3480:         nExtra++;",
          "3481:       }",
          "3482:     }",
          "3483:     if( bSync ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3481:         assert( pLast!=0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3510:     iFrame++;",
          "3511:     rc = walIndexAppend(pWal, iFrame, p->pgno);",
          "3512:   }",
          "3513:   while( rc==SQLITE_OK && nExtra>0 ){",
          "3514:     iFrame++;",
          "3515:     nExtra--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3514:   assert( pLast!=0 || nExtra==0 );",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2271:   assert( (pLoop->wsFlags & WHERE_AUTO_INDEX)==0 );",
          "2272:   for(i=pWC->nTerm, pTerm=pWC->a; i>0; i--, pTerm++){",
          "2273:     if( (pTerm->wtFlags & TERM_VIRTUAL)!=0 ) break;",
          "2274:     if( (pTerm->prereqAll & pLoop->maskSelf)==0 ) continue;",
          "2275:     if( (pTerm->prereqAll & notAllowed)!=0 ) continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2273:     assert( pTerm!=0 );",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "748: static int selectWindowRewriteExprCb(Walker *pWalker, Expr *pExpr){",
          "749:   struct WindowRewrite *p = pWalker->u.pRewrite;",
          "750:   Parse *pParse = pWalker->pParse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "751:   assert( p!=0 );",
          "752:   assert( p->pWin!=0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "847:   Walker sWalker;",
          "848:   WindowRewrite sRewrite;",
          "850:   memset(&sWalker, 0, sizeof(Walker));",
          "851:   memset(&sRewrite, 0, sizeof(WindowRewrite));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852:   assert( pWin!=0 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1567:   int lblNext;",
          "1568:   int lblBrk;",
          "1569:   int addrNext;",
          "1572:   nPeer = (pMWin->pOrderBy ? pMWin->pOrderBy->nExpr : 0);",
          "1574:   lblNext = sqlite3VdbeMakeLabel(pParse);",
          "",
          "[Removed Lines]",
          "1570:   int csr = pMWin->csrApp;",
          "",
          "[Added Lines]",
          "1573:   int csr;",
          "1575:   assert( pMWin!=0 );",
          "1576:   csr = pMWin->csrApp;",
          "",
          "---------------"
        ],
        "tool/lempar.c||tool/lempar.c": [
          "File: tool/lempar.c -> tool/lempar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "568:       return yy_default[stateno];",
          "569:     }else{",
          "570:       return yy_action[i];",
          "571:     }",
          "572:   }while(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:       assert( i>=0 && i<sizeof(yy_action)/sizeof(yy_action[0]) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
      "candidate_info": {
        "commit_hash": "74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Do not make SQLITE_READ authorizer calls for tables without names, as all such tables will be internal-use-only tables for subqueries and whatnot.\n\nFossilOrigin-Name: 193c87fc96f964984a144c1a4506ef9db033ab2b80e64dd4d09d820fef466407",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 17b3d2218c02a4005d4c96471c452105b54abb25901ae62990b01f0c955135fe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5864:       sqlite3AuthCheck(pParse, SQLITE_READ, pItem->zName, \"\", pItem->zDatabase);",
          "5865:     }",
          "",
          "[Removed Lines]",
          "5863:     if( pItem->colUsed==0 ){",
          "",
          "[Added Lines]",
          "5863:     if( pItem->colUsed==0 && pItem->zName!=0 ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}