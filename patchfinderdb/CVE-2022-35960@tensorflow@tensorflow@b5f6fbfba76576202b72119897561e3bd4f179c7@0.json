{
  "cve_id": "CVE-2022-35960",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In `core/kernels/list_kernels.cc's TensorListReserve`, `num_elements` is assumed to be a tensor of size 1. When a `num_elements` of more than 1 element is provided, then `tf.raw_ops.TensorListReserve` fails the `CHECK_EQ` in `CheckIsAlignedAndSingleElement`. We have patched the issue in GitHub commit b5f6fbfba76576202b72119897561e3bd4f179c7. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "b5f6fbfba76576202b72119897561e3bd4f179c7",
  "patch_info": {
    "commit_hash": "b5f6fbfba76576202b72119897561e3bd4f179c7",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/b5f6fbfba76576202b72119897561e3bd4f179c7",
    "files": [
      "tensorflow/core/kernels/list_kernels.cc",
      "tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
    ],
    "message": "Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\n\nPiperOrigin-RevId: 466460987",
    "before_after_code_files": [
      "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
      "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
      "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: #include \"tensorflow/core/framework/allocator.h\"",
      "32: #include \"tensorflow/core/framework/op_kernel.h\"",
      "33: #include \"tensorflow/core/framework/register_types.h\"",
      "34: #include \"tensorflow/core/framework/tensor_types.h\"",
      "35: #include \"tensorflow/core/framework/variant.h\"",
      "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
      "38: namespace tensorflow {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
      "38: #include \"tensorflow/core/platform/errors.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "322:   void Compute(OpKernelContext* c) override {",
      "323:     PartialTensorShape element_shape;",
      "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
      "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
      "326:     OP_REQUIRES(c, num_elements >= 0,",
      "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "327:     OP_REQUIRES(",
      "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
      "329:         errors::InvalidArgument(",
      "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
      "331:             c->input(1).shape()));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py": [
      "File: tensorflow/python/kernel_tests/data_structures/list_ops_test.py -> tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
      "95:       self.evaluate(l)",
      "97:   def testPopUninitializedTensorUseListElementShape(self):",
      "98:     l = list_ops.tensor_list_reserve(",
      "99:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97:   def testTensorListReserveWithNonScalarNumElements(self):",
      "98:     # list_kernels.cc in tf/core/kernels raises InvalidArgumentError, and",
      "99:     # tf_ops_n_z.cc in tf/compiler/mlir/tf/ir raises UnknownError.",
      "100:     with self.assertRaises((errors.InvalidArgumentError, errors.UnknownError)):",
      "101:       l = list_ops.tensor_list_reserve(",
      "102:           element_dtype=dtypes.float32,",
      "103:           element_shape=[2, 3],",
      "104:           num_elements=constant_op.constant([1, 1]))",
      "105:       self.evaluate(l)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7deee01cb4d362863e3a21f7d82d491dedd15fae",
      "candidate_info": {
        "commit_hash": "7deee01cb4d362863e3a21f7d82d491dedd15fae",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7deee01cb4d362863e3a21f7d82d491dedd15fae",
        "files": [
          "tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ],
        "message": "Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\n\nPiperOrigin-RevId: 466460987",
        "before_after_code_files": [
          "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
          "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tensorflow/core/framework/allocator.h\"",
          "32: #include \"tensorflow/core/framework/op_kernel.h\"",
          "33: #include \"tensorflow/core/framework/register_types.h\"",
          "34: #include \"tensorflow/core/framework/tensor_types.h\"",
          "35: #include \"tensorflow/core/framework/variant.h\"",
          "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
          "38: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "38: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   void Compute(OpKernelContext* c) override {",
          "323:     PartialTensorShape element_shape;",
          "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
          "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
          "326:     OP_REQUIRES(c, num_elements >= 0,",
          "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     OP_REQUIRES(",
          "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
          "329:         errors::InvalidArgument(",
          "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
          "331:             c->input(1).shape()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py": [
          "File: tensorflow/python/kernel_tests/data_structures/list_ops_test.py -> tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
          "95:       self.evaluate(l)",
          "97:   def testPopUninitializedTensorUseListElementShape(self):",
          "98:     l = list_ops.tensor_list_reserve(",
          "99:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   def testTensorListReserveWithNonScalarNumElements(self):",
          "98:     # list_kernels.cc in tf/core/kernels raises InvalidArgumentError, and",
          "99:     # tf_ops_n_z.cc in tf/compiler/mlir/tf/ir raises UnknownError.",
          "100:     with self.assertRaises((errors.InvalidArgumentError, errors.UnknownError)):",
          "101:       l = list_ops.tensor_list_reserve(",
          "102:           element_dtype=dtypes.float32,",
          "103:           element_shape=[2, 3],",
          "104:           num_elements=constant_op.constant([1, 1]))",
          "105:       self.evaluate(l)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a548647aabf509acc0f2b7df4d828180f9f8879",
      "candidate_info": {
        "commit_hash": "5a548647aabf509acc0f2b7df4d828180f9f8879",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5a548647aabf509acc0f2b7df4d828180f9f8879",
        "files": [
          "tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ],
        "message": "Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\n\nPiperOrigin-RevId: 466460987",
        "before_after_code_files": [
          "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
          "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tensorflow/core/framework/allocator.h\"",
          "32: #include \"tensorflow/core/framework/op_kernel.h\"",
          "33: #include \"tensorflow/core/framework/register_types.h\"",
          "34: #include \"tensorflow/core/framework/tensor_types.h\"",
          "35: #include \"tensorflow/core/framework/variant.h\"",
          "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
          "38: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "38: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   void Compute(OpKernelContext* c) override {",
          "323:     PartialTensorShape element_shape;",
          "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
          "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
          "326:     OP_REQUIRES(c, num_elements >= 0,",
          "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     OP_REQUIRES(",
          "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
          "329:         errors::InvalidArgument(",
          "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
          "331:             c->input(1).shape()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py": [
          "File: tensorflow/python/kernel_tests/data_structures/list_ops_test.py -> tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
          "95:       self.evaluate(l)",
          "97:   def testPopUninitializedTensorUseListElementShape(self):",
          "98:     l = list_ops.tensor_list_reserve(",
          "99:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   def testTensorListReserveWithNonScalarNumElements(self):",
          "98:     # list_kernels.cc in tf/core/kernels raises InvalidArgumentError, and",
          "99:     # tf_ops_n_z.cc in tf/compiler/mlir/tf/ir raises UnknownError.",
          "100:     with self.assertRaises((errors.InvalidArgumentError, errors.UnknownError)):",
          "101:       l = list_ops.tensor_list_reserve(",
          "102:           element_dtype=dtypes.float32,",
          "103:           element_shape=[2, 3],",
          "104:           num_elements=constant_op.constant([1, 1]))",
          "105:       self.evaluate(l)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66b0c02c2b401efb0cff629e5afdf57b88e05ebd",
      "candidate_info": {
        "commit_hash": "66b0c02c2b401efb0cff629e5afdf57b88e05ebd",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/66b0c02c2b401efb0cff629e5afdf57b88e05ebd",
        "files": [
          "tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/list_ops_test.py"
        ],
        "message": "Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\n\nPiperOrigin-RevId: 466460987",
        "before_after_code_files": [
          "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/list_ops_test.py||tensorflow/python/kernel_tests/list_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
          "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tensorflow/core/framework/allocator.h\"",
          "32: #include \"tensorflow/core/framework/op_kernel.h\"",
          "33: #include \"tensorflow/core/framework/register_types.h\"",
          "34: #include \"tensorflow/core/framework/tensor_types.h\"",
          "35: #include \"tensorflow/core/framework/variant.h\"",
          "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
          "38: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "38: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   void Compute(OpKernelContext* c) override {",
          "323:     PartialTensorShape element_shape;",
          "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
          "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
          "326:     OP_REQUIRES(c, num_elements >= 0,",
          "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     OP_REQUIRES(",
          "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
          "329:         errors::InvalidArgument(",
          "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
          "331:             c->input(1).shape()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/list_ops_test.py||tensorflow/python/kernel_tests/list_ops_test.py": [
          "File: tensorflow/python/kernel_tests/list_ops_test.py -> tensorflow/python/kernel_tests/list_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
          "99:       self.evaluate(l)",
          "101:   def testPopUninitializedTensorUseListElementShape(self):",
          "102:     l = list_ops.tensor_list_reserve(",
          "103:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:   def testTensorListReserveWithNonScalarNumElements(self):",
          "102:     # list_kernels.cc in tf/core/kernels raises InvalidArgumentError, and",
          "103:     # tf_ops_n_z.cc in tf/compiler/mlir/tf/ir raises UnknownError.",
          "104:     with self.assertRaises((errors.InvalidArgumentError, errors.UnknownError)):",
          "105:       l = list_ops.tensor_list_reserve(",
          "106:           element_dtype=dtypes.float32,",
          "107:           element_shape=[2, 3],",
          "108:           num_elements=constant_op.constant([1, 1]))",
          "109:       self.evaluate(l)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60ed7ceb65dfc16d0b4b50ff59510e57a1552fa3",
      "candidate_info": {
        "commit_hash": "60ed7ceb65dfc16d0b4b50ff59510e57a1552fa3",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/60ed7ceb65dfc16d0b4b50ff59510e57a1552fa3",
        "files": [
          "tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ],
        "message": "Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\n\nPiperOrigin-RevId: 466460987",
        "before_after_code_files": [
          "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
          "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tensorflow/core/framework/allocator.h\"",
          "32: #include \"tensorflow/core/framework/op_kernel.h\"",
          "33: #include \"tensorflow/core/framework/register_types.h\"",
          "34: #include \"tensorflow/core/framework/tensor_types.h\"",
          "35: #include \"tensorflow/core/framework/variant.h\"",
          "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
          "38: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "38: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   void Compute(OpKernelContext* c) override {",
          "323:     PartialTensorShape element_shape;",
          "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
          "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
          "326:     OP_REQUIRES(c, num_elements >= 0,",
          "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     OP_REQUIRES(",
          "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
          "329:         errors::InvalidArgument(",
          "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
          "331:             c->input(1).shape()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py": [
          "File: tensorflow/python/kernel_tests/data_structures/list_ops_test.py -> tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
          "95:       self.evaluate(l)",
          "97:   def testPopUninitializedTensorUseListElementShape(self):",
          "98:     l = list_ops.tensor_list_reserve(",
          "99:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   def testTensorListReserveWithNonScalarNumElements(self):",
          "98:     # list_kernels.cc in tf/core/kernels raises InvalidArgumentError, and",
          "99:     # tf_ops_n_z.cc in tf/compiler/mlir/tf/ir raises UnknownError.",
          "100:     with self.assertRaises((errors.InvalidArgumentError, errors.UnknownError)):",
          "101:       l = list_ops.tensor_list_reserve(",
          "102:           element_dtype=dtypes.float32,",
          "103:           element_shape=[2, 3],",
          "104:           num_elements=constant_op.constant([1, 1]))",
          "105:       self.evaluate(l)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5bf4182476225146af2aea40f80747a950578ba",
      "candidate_info": {
        "commit_hash": "d5bf4182476225146af2aea40f80747a950578ba",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d5bf4182476225146af2aea40f80747a950578ba",
        "files": [
          "tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ],
        "message": "Fix tf.raw_ops.EmptyTensorList vulnerability from non scalar `num_elements`.\n\nPiperOrigin-RevId: 465625977",
        "before_after_code_files": [
          "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
          "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc",
            "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/list_kernels.cc||tensorflow/core/kernels/list_kernels.cc": [
          "File: tensorflow/core/kernels/list_kernels.cc -> tensorflow/core/kernels/list_kernels.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tensorflow/core/framework/allocator.h\"",
          "32: #include \"tensorflow/core/framework/op_kernel.h\"",
          "33: #include \"tensorflow/core/framework/register_types.h\"",
          "34: #include \"tensorflow/core/framework/tensor_types.h\"",
          "35: #include \"tensorflow/core/framework/variant.h\"",
          "36: #include \"tensorflow/core/framework/variant_op_registry.h\"",
          "38: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "38: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   void Compute(OpKernelContext* c) override {",
          "323:     PartialTensorShape element_shape;",
          "324:     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));",
          "325:     int32_t num_elements = c->input(1).scalar<int32>()();",
          "326:     OP_REQUIRES(c, num_elements >= 0,",
          "327:                 errors::InvalidArgument(\"The num_elements to reserve must be a \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     OP_REQUIRES(",
          "328:         c, TensorShapeUtils::IsScalar(c->input(1).shape()),",
          "329:         errors::InvalidArgument(",
          "330:             \"The num_elements to reserve must be a tensor size 1, but got \",",
          "331:             c->input(1).shape()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/data_structures/list_ops_test.py||tensorflow/python/kernel_tests/data_structures/list_ops_test.py": [
          "File: tensorflow/python/kernel_tests/data_structures/list_ops_test.py -> tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       l = list_ops.tensor_list_pop_back(l, element_dtype=dtypes.float32)",
          "95:       self.evaluate(l)",
          "97:   def testPopUninitializedTensorUseListElementShape(self):",
          "98:     l = list_ops.tensor_list_reserve(",
          "99:         element_dtype=dtypes.float32, element_shape=[2, 3], num_elements=3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   def testTensorListReserveWithNonScalarNumElements(self):",
          "98:     with self.assertRaisesRegex(",
          "99:         errors.InvalidArgumentError,",
          "100:         r\"The num_elements to reserve must be a tensor size 1, but got \\[2\\]\"):",
          "101:       l = list_ops.tensor_list_reserve(",
          "102:           element_dtype=dtypes.float32,",
          "103:           element_shape=[2, 3],",
          "104:           num_elements=constant_op.constant([1, 1]))",
          "105:       self.evaluate(l)",
          "",
          "---------------"
        ]
      }
    }
  ]
}