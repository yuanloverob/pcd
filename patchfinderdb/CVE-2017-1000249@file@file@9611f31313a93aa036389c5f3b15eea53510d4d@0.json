{
  "cve_id": "CVE-2017-1000249",
  "cve_desc": "An issue in file() was introduced in commit 9611f31313a93aa036389c5f3b15eea53510d4d1 (Oct 2016) lets an attacker overwrite a fixed 20 bytes stack buffer with a specially crafted .notes section in an ELF binary. This was fixed in commit 35c94dc6acc418f1ad7f6241a6680e5327495793 (Aug 2017).",
  "repo": "file/file",
  "patch_hash": "9611f31313a93aa036389c5f3b15eea53510d4d1",
  "patch_info": {
    "commit_hash": "9611f31313a93aa036389c5f3b15eea53510d4d1",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/9611f31313a93aa036389c5f3b15eea53510d4d",
    "files": [
      "src/readelf.c"
    ],
    "message": "Extend build-id reporting to 8-byte IDs that lld can generate (Ed Maste)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.126 2015/11/16 16:03:45 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.127 2015/11/18 12:29:29 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "509:     size_t noff, size_t doff, int *flags)",
      "510: {",
      "511:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
      "513:   uint8_t desc[20];",
      "514:   uint32_t i;",
      "518:    return 1;",
      "519:   (void)memcpy(desc, &nbuf[doff], descsz);",
      "520:   for (i = 0; i < descsz; i++)",
      "",
      "[Removed Lines]",
      "512:      type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {",
      "516:   if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :",
      "517:       \"sha1\") == -1)",
      "",
      "[Added Lines]",
      "512:      type == NT_GNU_BUILD_ID && (descsz >= 4 || descsz <= 20)) {",
      "514:   const char *btype;",
      "517:   switch (descsz) {",
      "518:   case 8:",
      "519:       btype = \"xxHash\";",
      "520:       break;",
      "521:   case 16:",
      "522:       btype = \"md5/uuid\";",
      "523:       break;",
      "524:   case 20:",
      "525:       btype = \"sha1\";",
      "526:       break;",
      "527:   default:",
      "528:       btype = \"unknown\";",
      "529:       break;",
      "530:   }",
      "531:   if (file_printf(ms, \", BuildID[%s]=\", btype) == -1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ee13402cb538509f4594a1ebaabc28b7d511c247",
      "candidate_info": {
        "commit_hash": "ee13402cb538509f4594a1ebaabc28b7d511c247",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/ee13402cb538509f4594a1ebaabc28b7d511c247",
        "files": [
          "src/readelf.c"
        ],
        "message": "fix debug info reversed logic",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.130 2017/01/29 19:34:24 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.131 2017/02/10 18:14:01 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1185: {",
          "1186:  Elf32_Shdr sh32;",
          "1187:  Elf64_Shdr sh64;",
          "1189:  size_t nbadcap = 0;",
          "1190:  void *nbuf;",
          "1191:  off_t noff, coff, name_off;",
          "",
          "[Removed Lines]",
          "1188:  int stripped = 1, has_debug_info = 1;",
          "",
          "[Added Lines]",
          "1188:  int stripped = 1, has_debug_info = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1b0a67bc26bb9a15585d096dbaa6197e366c832",
      "candidate_info": {
        "commit_hash": "f1b0a67bc26bb9a15585d096dbaa6197e366c832",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/f1b0a67bc26bb9a15585d096dbaa6197e366c832",
        "files": [
          "src/cdf.c",
          "src/cdf_time.c",
          "src/compress.c",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "Fix printf formats (use alternate form for %x).",
        "before_after_code_files": [
          "src/cdf.c||src/cdf.c",
          "src/cdf_time.c||src/cdf_time.c",
          "src/compress.c||src/compress.c",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.95 2017/03/28 15:13:07 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.96 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:  cdf_unpack_header(h, buf);",
          "341:  cdf_swap_header(h);",
          "342:  if (h->h_magic != CDF_MAGIC) {",
          "344:       INT64_T_FORMAT \"x\\n\",",
          "345:       (unsigned long long)h->h_magic,",
          "346:       (unsigned long long)CDF_MAGIC));",
          "347:   goto out;",
          "348:  }",
          "349:  if (h->h_sec_size_p2 > 20) {",
          "351:   goto out;",
          "352:  }",
          "353:  if (h->h_short_sec_size_p2 > 20) {",
          "355:       h->h_short_sec_size_p2));",
          "356:   goto out;",
          "357:  }",
          "",
          "[Removed Lines]",
          "343:   DPRINTF((\"Bad magic 0x%\" INT64_T_FORMAT \"x != 0x%\"",
          "350:   DPRINTF((\"Bad sector size 0x%u\\n\", h->h_sec_size_p2));",
          "354:   DPRINTF((\"Bad short sector size 0x%u\\n\",",
          "",
          "[Added Lines]",
          "343:   DPRINTF((\"Bad magic %#\" INT64_T_FORMAT \"x != %#\"",
          "350:   DPRINTF((\"Bad sector size %#hu\\n\", h->h_sec_size_p2));",
          "354:   DPRINTF((\"Bad short sector size %#hu\\n\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "931:    goto out;",
          "932:   inp[i].pi_id = CDF_GETUINT32(p, i << 1);",
          "933:   inp[i].pi_type = CDF_GETUINT32(q, 0);",
          "935:       i, inp[i].pi_id, inp[i].pi_type, q - p, offs));",
          "936:   if (inp[i].pi_type & CDF_VECTOR) {",
          "937:    nelements = CDF_GETUINT32(q, 1);",
          "",
          "[Removed Lines]",
          "934:   DPRINTF((\"%\" SIZE_T_FORMAT \"u) id=%x type=%x offs=0x%tx,0x%x\\n\",",
          "",
          "[Added Lines]",
          "934:   DPRINTF((\"%\" SIZE_T_FORMAT \"u) id=%#x type=%#x offs=%#tx,%#x\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1050:    break;",
          "1051:   default:",
          "1052:   unknown:",
          "1054:        inp[i].pi_type));",
          "1055:    break;",
          "1056:   }",
          "",
          "[Removed Lines]",
          "1053:    DPRINTF((\"Don't know how to deal with %x\\n\",",
          "",
          "[Added Lines]",
          "1053:    DPRINTF((\"Don't know how to deal with %#x\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1215:  for (i = 0; i < __arraycount(vn); i++)",
          "1216:   if (vn[i].v == p)",
          "1217:    return snprintf(buf, bufsiz, \"%s\", vn[i].n);",
          "1219: }",
          "1221: int",
          "",
          "[Removed Lines]",
          "1218:  return snprintf(buf, bufsiz, \"0x%x\", p);",
          "",
          "[Added Lines]",
          "1218:  return snprintf(buf, bufsiz, \"%#x\", p);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1274:     h->h_ ## b, 1 << h->h_ ## b)",
          "1275:  DUMP(\"%d\", revision);",
          "1276:  DUMP(\"%d\", version);",
          "1278:  DUMP2(\"%d\", sec_size_p2);",
          "1279:  DUMP2(\"%d\", short_sec_size_p2);",
          "1280:  DUMP(\"%d\", num_sectors_in_sat);",
          "",
          "[Removed Lines]",
          "1277:  DUMP(\"0x%x\", byte_order);",
          "",
          "[Added Lines]",
          "1277:  DUMP(\"%#x\", byte_order);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1368:       d->d_color ? \"black\" : \"red\");",
          "1369:   (void)fprintf(stderr, \"Left child: %d\\n\", d->d_left_child);",
          "1370:   (void)fprintf(stderr, \"Right child: %d\\n\", d->d_right_child);",
          "1372:   cdf_timestamp_to_timespec(&ts, d->d_created);",
          "1373:   (void)fprintf(stderr, \"Created %s\", cdf_ctime(&ts.tv_sec, buf));",
          "1374:   cdf_timestamp_to_timespec(&ts, d->d_modified);",
          "",
          "[Removed Lines]",
          "1371:   (void)fprintf(stderr, \"Flags: 0x%x\\n\", d->d_flags);",
          "",
          "[Added Lines]",
          "1371:   (void)fprintf(stderr, \"Flags: %#x\\n\", d->d_flags);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1461:    (void)fprintf(stderr, \"CLIPBOARD %u\\n\", info[i].pi_u32);",
          "1462:    break;",
          "1463:   default:",
          "1465:        info[i].pi_type));",
          "1466:    break;",
          "1467:   }",
          "",
          "[Removed Lines]",
          "1464:    DPRINTF((\"Don't know how to deal with %x\\n\",",
          "",
          "[Added Lines]",
          "1464:    DPRINTF((\"Don't know how to deal with %#x\\n\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1480:  (void)&h;",
          "1481:  if (cdf_unpack_summary_info(sst, h, &ssi, &info, &count) == -1)",
          "1482:   return;",
          "1484:  (void)fprintf(stderr, \"Os Version %d.%d\\n\", ssi.si_os_version & 0xff,",
          "1485:      ssi.si_os_version >> 8);",
          "1486:  (void)fprintf(stderr, \"Os %d\\n\", ssi.si_os);",
          "",
          "[Removed Lines]",
          "1483:  (void)fprintf(stderr, \"Endian: %x\\n\", ssi.si_byte_order);",
          "",
          "[Added Lines]",
          "1483:  (void)fprintf(stderr, \"Endian: %#x\\n\", ssi.si_byte_order);",
          "",
          "---------------"
        ],
        "src/cdf_time.c||src/cdf_time.c": [
          "File: src/cdf_time.c -> src/cdf_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #include <time.h>",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: cdf_time.c,v 1.14 2014/04/17 12:44:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: cdf_time.c,v 1.16 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:  char *ptr = ctime_r(sec, buf);",
          "172:  if (ptr != NULL)",
          "173:   return buf;",
          "175:      (long long)*sec);",
          "176:  return buf;",
          "177: }",
          "",
          "[Removed Lines]",
          "174:  (void)snprintf(buf, 26, \"*Bad* 0x%16.16\" INT64_T_FORMAT \"x\\n\",",
          "",
          "[Added Lines]",
          "174:  (void)snprintf(buf, 26, \"*Bad* %#16.16\" INT64_T_FORMAT \"x\\n\",",
          "",
          "---------------"
        ],
        "src/compress.c||src/compress.c": [
          "File: src/compress.c -> src/compress.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.102 2017/02/10 18:14:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.104 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:   rv = makeerror(newch, n, \"Wait failed, %s\", strerror(errno));",
          "750:   DPRINTF(\"Child wait return %#x\\n\", status);",
          "751:  } else if (!WIFEXITED(status)) {",
          "753:  } else if (WEXITSTATUS(status) != 0) {",
          "755:  }",
          "757:  closefd(fdp[STDIN_FILENO], 0);",
          "",
          "[Removed Lines]",
          "752:   DPRINTF(\"Child not exited (0x%x)\\n\", status);",
          "754:   DPRINTF(\"Child exited (0x%d)\\n\", WEXITSTATUS(status));",
          "",
          "[Added Lines]",
          "752:   DPRINTF(\"Child not exited (%#x)\\n\", status);",
          "754:   DPRINTF(\"Child exited (%#u)\\n\", WEXITSTATUS(status));",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.132 2017/02/11 18:12:03 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.134 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1031:  }",
          "1033:  if (namesz & 0x80000000) {",
          "1035:   (unsigned long)namesz);",
          "1036:      return 0;",
          "1037:  }",
          "1039:  if (descsz & 0x80000000) {",
          "1041:   (unsigned long)descsz);",
          "1042:      return 0;",
          "1043:  }",
          "",
          "[Removed Lines]",
          "1034:      (void)file_printf(ms, \", bad note name size 0x%lx\",",
          "1040:      (void)file_printf(ms, \", bad note description size 0x%lx\",",
          "",
          "[Added Lines]",
          "1034:      (void)file_printf(ms, \", bad note name size %#lx\",",
          "1040:      (void)file_printf(ms, \", bad note description size %#lx\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1250:    if ((uintmax_t)(xsh_size + xsh_offset) >",
          "1251:        (uintmax_t)fsize) {",
          "1252:     if (file_printf(ms,",
          "1256:         (uintmax_t)xsh_offset, (uintmax_t)xsh_size,",
          "1257:         (uintmax_t)fsize) == -1)",
          "1258:      return -1;",
          "",
          "[Removed Lines]",
          "1253:         \", note offset/size 0x%\" INTMAX_T_FORMAT",
          "1254:         \"x+0x%\" INTMAX_T_FORMAT \"x exceeds\"",
          "1255:         \" file size 0x%\" INTMAX_T_FORMAT \"x\",",
          "",
          "[Added Lines]",
          "1253:         \", note offset/size %#\" INTMAX_T_FORMAT",
          "1254:         \"x+%#\" INTMAX_T_FORMAT \"x exceeds\"",
          "1255:         \" file size %#\" INTMAX_T_FORMAT \"x\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1356:     default:",
          "1357:      if (file_printf(ms,",
          "1358:          \", with unknown capability \"",
          "1360:          INT64_T_FORMAT \"x\",",
          "1361:          (unsigned long long)xcap_tag,",
          "1362:          (unsigned long long)xcap_val) == -1)",
          "",
          "[Removed Lines]",
          "1359:          \"0x%\" INT64_T_FORMAT \"x = 0x%\"",
          "",
          "[Added Lines]",
          "1359:          \"%#\" INT64_T_FORMAT \"x = %#\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1410:    }",
          "1411:    if (cap_hw1)",
          "1412:     if (file_printf(ms,",
          "1414:         INT64_T_FORMAT \"x\",",
          "1415:         (unsigned long long)cap_hw1) == -1)",
          "1416:      return -1;",
          "1417:   } else {",
          "1418:    if (file_printf(ms,",
          "1420:        (unsigned long long)cap_hw1) == -1)",
          "1421:     return -1;",
          "1422:   }",
          "",
          "[Removed Lines]",
          "1413:         \" unknown hardware capability 0x%\"",
          "1419:        \" hardware capability 0x%\" INT64_T_FORMAT \"x\",",
          "",
          "[Added Lines]",
          "1413:         \" unknown hardware capability %#\"",
          "1419:        \" hardware capability %#\" INT64_T_FORMAT \"x\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1432:   cap_sf1 &= ~SF1_SUNW_MASK;",
          "1433:   if (cap_sf1)",
          "1434:    if (file_printf(ms,",
          "1436:        INT64_T_FORMAT \"x\",",
          "1437:        (unsigned long long)cap_sf1) == -1)",
          "1438:     return -1;",
          "",
          "[Removed Lines]",
          "1435:        \", with unknown software capability 0x%\"",
          "",
          "[Added Lines]",
          "1435:        \", with unknown software capability %#\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1486:    if (((align = xph_align) & 0x80000000UL) != 0 ||",
          "1487:        align < 4) {",
          "1488:     if (file_printf(ms,",
          "1490:         (unsigned long)align) == -1)",
          "1491:      return -1;",
          "1492:     align = 4;",
          "",
          "[Removed Lines]",
          "1489:         \", invalid note alignment 0x%lx\",",
          "",
          "[Added Lines]",
          "1489:         \", invalid note alignment %#lx\",",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.246 2017/03/08 20:45:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.247 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1365:   return -1;",
          "1367:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1369:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1370:       \"u, il=%hu, nc=%hu)\\n\",",
          "1371:       m->type, m->flag, offset, o, nbytes,",
          "",
          "[Removed Lines]",
          "1368:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "",
          "[Added Lines]",
          "1368:   fprintf(stderr, \"mget(type=%d, flag=%#x, offset=%u, o=%\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d0c6abc2dbec374acab293143fa88a9f0bebe28",
      "candidate_info": {
        "commit_hash": "8d0c6abc2dbec374acab293143fa88a9f0bebe28",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/8d0c6abc2dbec374acab293143fa88a9f0bebe28",
        "files": [
          "ChangeLog",
          "magic/Magdir/audio",
          "magic/Magdir/console",
          "magic/Magdir/database",
          "magic/Magdir/icc",
          "magic/Magdir/msdos",
          "magic/Magdir/sendmail",
          "src/readelf.c",
          "src/readelf.h",
          "src/vasprintf.c"
        ],
        "message": "spelling fixes (Ville Skytta)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c",
          "src/readelf.h||src/readelf.h",
          "src/vasprintf.c||src/vasprintf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.136 2017/03/29 19:09:52 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.137 2017/08/13 00:21:47 christos Exp $\")",
          "",
          "---------------"
        ],
        "src/readelf.h||src/readelf.h": [
          "File: src/readelf.h -> src/readelf.h"
        ],
        "src/vasprintf.c||src/vasprintf.c": [
          "File: src/vasprintf.c -> src/vasprintf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: The function needs to allocate memory to store the full text before to",
          "92: functions will allocate 1000 bytes.",
          "93: This behaviour can be modified: you have to customise the code to flush the",
          "94: internal buffer (writing to screen or file) when it reach a given size. Then",
          "",
          "[Removed Lines]",
          "91: actually writting it.  i.e if you want to fnprintf() 1000 characters, the",
          "",
          "[Added Lines]",
          "91: actually writing it.  i.e if you want to fnprintf() 1000 characters, the",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108: #include \"file.h\"",
          "110: #ifndef lint",
          "114: #include <assert.h>",
          "",
          "[Removed Lines]",
          "111: FILE_RCSID(\"@(#)$File: vasprintf.c,v 1.12 2014/05/14 23:09:21 christos Exp $\")",
          "",
          "[Added Lines]",
          "111: FILE_RCSID(\"@(#)$File: vasprintf.c,v 1.14 2017/08/13 00:21:47 christos Exp $\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e78a704897cba82924665d3a9de4e520b2ce065",
      "candidate_info": {
        "commit_hash": "0e78a704897cba82924665d3a9de4e520b2ce065",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/0e78a704897cba82924665d3a9de4e520b2ce065",
        "files": [
          "src/readelf.c"
        ],
        "message": "PR/591: Print if the file has debug info.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.128 2016/10/04 21:43:10 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.129 2017/01/18 16:08:25 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1185: {",
          "1186:  Elf32_Shdr sh32;",
          "1187:  Elf64_Shdr sh64;",
          "1189:  size_t nbadcap = 0;",
          "1190:  void *nbuf;",
          "1191:  off_t noff, coff, name_off;",
          "",
          "[Removed Lines]",
          "1188:  int stripped = 1;",
          "",
          "[Added Lines]",
          "1188:  int stripped = 1, has_debug_info = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1216:    return -1;",
          "1217:   }",
          "1218:   name[namesize] = '\\0';",
          "1220:    stripped = 0;",
          "1222:   if (pread(fd, xsh_addr, xsh_sizeof, off) < (ssize_t)xsh_sizeof) {",
          "1223:    file_badread(ms);",
          "",
          "[Removed Lines]",
          "1219:   if (strcmp(name, \".debug_info\") == 0)",
          "",
          "[Added Lines]",
          "1219:   if (strcmp(name, \".debug_info\") == 0) {",
          "1220:    has_debug_info = 1;",
          "1222:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1374:  if (file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \") == -1)",
          "1375:   return -1;",
          "1376:  if (cap_hw1) {",
          "1377:   const cap_desc_t *cdp;",
          "1378:   switch (mach) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1378:  if (has_debug_info) {",
          "1379:   if (file_printf(ms, \", with debug_info\") == -1)",
          "1380:    return -1;",
          "1381:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35c94dc6acc418f1ad7f6241a6680e5327495793",
      "candidate_info": {
        "commit_hash": "35c94dc6acc418f1ad7f6241a6680e5327495793",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/35c94dc6acc418f1ad7f6241a6680e5327495793",
        "files": [
          "src/readelf.c"
        ],
        "message": "Fix always true condition (Thomas Jarosch)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.137 2017/08/13 00:21:47 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.138 2017/08/27 07:55:02 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "511:     size_t noff, size_t doff, int *flags)",
          "512: {",
          "513:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
          "515:   uint8_t desc[20];",
          "516:   const char *btype;",
          "517:   uint32_t i;",
          "",
          "[Removed Lines]",
          "514:      type == NT_GNU_BUILD_ID && (descsz >= 4 || descsz <= 20)) {",
          "",
          "[Added Lines]",
          "514:      type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}