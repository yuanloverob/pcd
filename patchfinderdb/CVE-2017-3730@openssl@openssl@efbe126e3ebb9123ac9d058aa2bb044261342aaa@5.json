{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3dca6ca0df0facedabcc5d9733b304e507f796db",
      "candidate_info": {
        "commit_hash": "3dca6ca0df0facedabcc5d9733b304e507f796db",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3dca6ca0df0facedabcc5d9733b304e507f796db",
        "files": [
          "doc/ssl/SSL_CTX_set_verify.pod",
          "include/openssl/ssl.h"
        ],
        "message": "Rename \"verify_cb\" to SSL_verify_cb\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2151)\n(cherry picked from commit 3adc41dd22080c4161d8a2af98d7b29fdbb11915)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:                                     size_t inlen, int *al, void *parse_arg);",
          "269: # define SSL_OP_LEGACY_SERVER_CONNECT                    0x00000004U",
          "",
          "[Removed Lines]",
          "266: typedef int (*verify_cb)(int preverify_ok, X509_STORE_CTX *x509_ctx);",
          "",
          "[Added Lines]",
          "266: typedef int (*SSL_verify_cb)(int preverify_ok, X509_STORE_CTX *x509_ctx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1345: void SSL_set_read_ahead(SSL *s, int yes);",
          "1346: __owur int SSL_get_verify_mode(const SSL *s);",
          "1347: __owur int SSL_get_verify_depth(const SSL *s);",
          "1350: void SSL_set_verify_depth(SSL *s, int depth);",
          "1351: void SSL_set_cert_cb(SSL *s, int (*cb) (SSL *ssl, void *arg), void *arg);",
          "1352: # ifndef OPENSSL_NO_RSA",
          "",
          "[Removed Lines]",
          "1348: __owur verify_cb SSL_get_verify_callback(const SSL *s);",
          "1349: void SSL_set_verify(SSL *s, int mode, verify_cb callback);",
          "",
          "[Added Lines]",
          "1348: __owur SSL_verify_cb SSL_get_verify_callback(const SSL *s);",
          "1349: void SSL_set_verify(SSL *s, int mode, SSL_verify_cb callback);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1446: __owur int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);",
          "1447: __owur int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);",
          "1450: void SSL_CTX_set_verify_depth(SSL_CTX *ctx, int depth);",
          "1451: void SSL_CTX_set_cert_verify_callback(SSL_CTX *ctx,",
          "1452:                                       int (*cb) (X509_STORE_CTX *, void *),",
          "",
          "[Removed Lines]",
          "1448: __owur verify_cb SSL_CTX_get_verify_callback(const SSL_CTX *ctx);",
          "1449: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode, verify_cb callback);",
          "",
          "[Added Lines]",
          "1448: __owur SSL_verify_cb SSL_CTX_get_verify_callback(const SSL_CTX *ctx);",
          "1449: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode, SSL_verify_cb callback);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
      "candidate_info": {
        "commit_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "files": [
          "include/internal/thread_once.h"
        ],
        "message": "Clarify what RUN_ONCE returns\n\nRUN_ONCE really just returns 0 on failure or whatever the init\nfunction returned.  By convention, however, the init function must\nreturn 0 on failure and 1 on success.  This needed to be clarified.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2225)\n(cherry picked from commit 37b8f1e21c56996644afa38816f575b05eb483ae)",
        "before_after_code_files": [
          "include/internal/thread_once.h||include/internal/thread_once.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/internal/thread_once.h||include/internal/thread_once.h": [
          "File: include/internal/thread_once.h -> include/internal/thread_once.h"
        ]
      }
    },
    {
      "candidate_hash": "953ef2cbd0645a47b8d5c1af3fe8f77f2e56c133",
      "candidate_info": {
        "commit_hash": "953ef2cbd0645a47b8d5c1af3fe8f77f2e56c133",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/953ef2cbd0645a47b8d5c1af3fe8f77f2e56c133",
        "files": [
          "crypto/err/err.c"
        ],
        "message": "Ensure we handle len == 0 in ERR_err_string_n\n\nIf len == 0 in a call to ERR_error_string_n() then we can read beyond the\nend of the buffer. Really applications should not be calling this function\nwith len == 0, but we shouldn't be letting it through either!\n\nThanks to Agostino Sarubbo for reporting this issue. Agostino's blog on\nthis issue is available here:\nhttps://blogs.gentoo.org/ago/2016/10/14/openssl-libcrypto-stack-based-buffer-overflow-in-err_error_string_n-err-c/\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit e5c1361580d8de79682958b04a5f0d262e680f8b)",
        "before_after_code_files": [
          "crypto/err/err.c||crypto/err/err.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/err/err.c||crypto/err/err.c": [
          "File: crypto/err/err.c -> crypto/err/err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "500:     const char *ls, *fs, *rs;",
          "501:     unsigned long l, f, r;",
          "503:     l = ERR_GET_LIB(e);",
          "504:     f = ERR_GET_FUNC(e);",
          "505:     r = ERR_GET_REASON(e);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "503:     if (len == 0)",
          "504:         return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
      "candidate_info": {
        "commit_hash": "267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
        "files": [
          "test/shlibloadtest.c"
        ],
        "message": "Fix no-dso (shlibloadtest)\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit 586b79d8884b171eb3fae1ef230572921715ce1a)",
        "before_after_code_files": [
          "test/shlibloadtest.c||test/shlibloadtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/shlibloadtest.c||test/shlibloadtest.c": [
          "File: test/shlibloadtest.c -> test/shlibloadtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: #include <stdlib.h>",
          "13: #include <openssl/opensslv.h>",
          "15: #define SSL_CTX_NEW \"SSL_CTX_new\"",
          "16: #define SSL_CTX_FREE \"SSL_CTX_free\"",
          "17: #define TLS_METHOD \"TLS_method\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #if defined(DSO_DLFCN) || defined(DSO_WIN32)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104: #endif",
          "109: # define CRYPTO_FIRST_OPT    \"-crypto_first\"",
          "110: # define SSL_FIRST_OPT       \"-ssl_first\"",
          "111: # define JUST_CRYPTO_OPT     \"-just_crypto\"",
          "",
          "[Removed Lines]",
          "107: #if defined(DSO_DLFCN) || defined(DSO_WIN32)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
      "candidate_info": {
        "commit_hash": "2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
        "files": [
          "crypto/bn/asm/x86_64-mont.pl"
        ],
        "message": "bn/asm/x86_64-mont.pl: fix for CVE-2016-7055 (Low severity).\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 2fac86d9abeaa643677d1ffd0a139239fdf9406a)",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont.pl||crypto/bn/asm/x86_64-mont.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont.pl||crypto/bn/asm/x86_64-mont.pl": [
          "File: crypto/bn/asm/x86_64-mont.pl -> crypto/bn/asm/x86_64-mont.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1157:  adox -4*8($tptr),$mi",
          "1158:  adcx %r14,%r11",
          "1159:  mulx 2*8($aptr),%r15,%r13 # ...",
          "1161:  adcx %r15,%r12",
          "1162:  adox $zero,%r12",
          "1163:  adcx $zero,%r13",
          "1165:  mov $bptr,8(%rsp)  # off-load &b[i]",
          "1166:  .byte 0x67",
          "1167:  mov $mi,%r15",
          "1168:  imulq 24(%rsp),$mi  # \"t[0]\"*n0",
          "1169:  xor %ebp,%ebp  # xor $zero,$zero # cf=0, of=0",
          "1172:   mov $mi,%rdx",
          "1173:  adox -2*8($tptr),%r12",
          "1174:  adcx %rax,%r13",
          "",
          "[Removed Lines]",
          "1160:  adox -3*8($tptr),%r11",
          "1171:  mulx 3*8($aptr),%rax,%r14",
          "",
          "[Added Lines]",
          "1160:  adox -3*8($tptr),%r11",
          "1162:  adox -2*8($tptr),%r12",
          "",
          "---------------"
        ]
      }
    }
  ]
}