{
  "cve_id": "CVE-2013-2021",
  "cve_desc": "pdf.c in ClamAV 0.97.1 through 0.97.7 allows remote attackers to cause a denial of service (out-of-bounds-read) via a crafted length value in an encrypted PDF file.",
  "repo": "vrtadmin/clamav-devel",
  "patch_hash": "24ff855c82d3f5c62bc5788a5776cefbffce2971",
  "patch_info": {
    "commit_hash": "24ff855c82d3f5c62bc5788a5776cefbffce2971",
    "repo": "vrtadmin/clamav-devel",
    "commit_url": "https://github.com/vrtadmin/clamav-devel/commit/24ff855c82d3f5c62bc5788a5776cefbffce2971",
    "files": [
      "libclamav/pdf.c"
    ],
    "message": "pdf: bb #7053",
    "before_after_code_files": [
      "libclamav/pdf.c||libclamav/pdf.c"
    ]
  },
  "patch_diff": {
    "libclamav/pdf.c||libclamav/pdf.c": [
      "File: libclamav/pdf.c -> libclamav/pdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "296:  case MANY_FILTERS:",
      "297:      s = \"more than 2 filters per obj\";",
      "298:      break;",
      "299:     }",
      "300:     cli_dbgmsg(\"cli_pdf: %s flagged in object %u %u\\n\", s, obj->id>>8, obj->id&0xff);",
      "301: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "299:  case DECRYPTABLE_PDF:",
      "300:      s = \"decryptable PDF\";",
      "301:      break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "567:     char *ascii_decoded = NULL;",
      "568:     int dump = 1;",
      "571:     if ((!(obj->flags & (1 << OBJ_STREAM)) ||",
      "572:  (obj->flags & (1 << OBJ_HASFILTERS)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "573:     cli_dbgmsg(\"pdf_extract_obj: obj %u %u\\n\", obj->id>>8, obj->id&0xff);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "585:     }",
      "586:     if (!dump)",
      "587:  return CL_CLEAN;",
      "589:     snprintf(fullname, sizeof(fullname), \"%s\"PATHSEP\"pdf%02u\", pdf->dir, pdf->files++);",
      "590:     fout = open(fullname,O_RDWR|O_CREAT|O_EXCL|O_TRUNC|O_BINARY, 0600);",
      "591:     if (fout < 0) {",
      "",
      "[Removed Lines]",
      "588:     cli_dbgmsg(\"cli_pdf: dumping obj %u %u\\n\", obj->id>>8, obj->id);",
      "",
      "[Added Lines]",
      "593:     cli_dbgmsg(\"cli_pdf: dumping obj %u %u\\n\", obj->id>>8, obj->id&0xff);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "907:  q2 = pdf_nextobject(q, bytesleft);",
      "908:  bytesleft -= q2 -q;",
      "909:  if (!q2 || bytesleft < 0) {",
      "910:      return;",
      "911:  }",
      "912:  q3 = memchr(q-1, '<', q2-q+1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "915:             cli_dbgmsg(\"cli_pdf: %u %u obj: no dictionary\\n\", obj->id>>8, obj->id&0xff);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "922:  q2 = pdf_nextobject(q, bytesleft);",
      "923:  bytesleft -= q2 -q;",
      "924:  if (!q2 || bytesleft < 0) {",
      "925:      return;",
      "926:  }",
      "927:  q3 = memchr(q-1, '>', q2-q+1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "931:             cli_dbgmsg(\"cli_pdf: %u %u obj: broken dictionary\\n\", obj->id>>8, obj->id&0xff);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1262:      password_empty = 1;",
      "1264:  }",
      "1267:  cli_md5_init(&md5);",
      "",
      "[Removed Lines]",
      "1265:     } else {",
      "",
      "[Added Lines]",
      "1272:     } else if ((R >= 2) && (R <= 4)) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1276:      cli_md5_update(&md5, &v, 4);",
      "1277:  }",
      "1278:  cli_md5_final(result, &md5);",
      "1279:  if (R >= 3) {",
      "1282:      for (i=0;i<50;i++) {",
      "1283:   cli_md5_init(&md5);",
      "1284:   cli_md5_update(&md5, result, length/8);",
      "",
      "[Removed Lines]",
      "1280:      if (length > 128)",
      "1281:   length = 128;",
      "",
      "[Added Lines]",
      "1286:  if (length > 128)",
      "1287:      length = 128;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1329:      cli_dbgmsg(\"cli_pdf: invalid revision %d\\n\", R);",
      "1330:  }",
      "1331:     }",
      "1332:     if (password_empty) {",
      "1333:  cli_dbgmsg(\"cli_pdf: user password is empty\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1339:     else {",
      "1341:  cli_dbgmsg(\"cli_pdf: R value out of range\\n\");",
      "1342:  return;",
      "1343:     }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1395:      cli_dbgmsg(\"cli_pdf: invalid R\\n\");",
      "1396:      break;",
      "1397:  }",
      "1399:  if (R < 5)",
      "1400:      oulen = 32;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1410:  if ((R > 5) || (R < 2)) {",
      "1411:      cli_dbgmsg(\"cli_pdf: R value outside supported range [2..5]\\n\");",
      "1412:      break;",
      "1413:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "374b5aeae9ac4383480a1aa5236aef1deff0c06e",
      "candidate_info": {
        "commit_hash": "374b5aeae9ac4383480a1aa5236aef1deff0c06e",
        "repo": "vrtadmin/clamav-devel",
        "commit_url": "https://github.com/vrtadmin/clamav-devel/commit/374b5aeae9ac4383480a1aa5236aef1deff0c06e",
        "files": [
          "libclamav/pdf.c"
        ],
        "message": "pdf: bb #7053",
        "before_after_code_files": [
          "libclamav/pdf.c||libclamav/pdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ],
          "candidate": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ]
        }
      },
      "candidate_diff": {
        "libclamav/pdf.c||libclamav/pdf.c": [
          "File: libclamav/pdf.c -> libclamav/pdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  case MANY_FILTERS:",
          "327:      s = \"more than 2 filters per obj\";",
          "328:      break;",
          "329:     }",
          "330:     cli_dbgmsg(\"cli_pdf: %s flagged in object %u %u\\n\", s, obj->id>>8, obj->id&0xff);",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:  case DECRYPTABLE_PDF:",
          "330:      s = \"decryptable PDF\";",
          "331:      break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1319:         nextclose = memchr(q, '>', enddict-q+1);",
          "1320:         if (nextclose && (nextclose[1] == '>')) {",
          "1323:                 if (nextopen[1] == '<') {",
          "1325:                     blockopens++;",
          "",
          "[Removed Lines]",
          "1322:             while (nextopen = memchr(q-1, '<', nextclose-q+1)) {",
          "",
          "[Added Lines]",
          "1325:             while ((nextopen = memchr(q-1, '<', nextclose-q+1)) != NULL) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1739:   dbg_printhex(\"cli_pdf: Candidate encryption key\", pdf->key, pdf->keylen);",
          "1740:      }",
          "1741:  }",
          "1744:  cli_md5_init(&md5);",
          "",
          "[Removed Lines]",
          "1742:     } else {",
          "",
          "[Added Lines]",
          "1745:     } else if ((R >= 2) && (R <= 4)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1753:      cli_md5_update(&md5, &v, 4);",
          "1754:  }",
          "1755:  cli_md5_final(result, &md5);",
          "1756:  if (R >= 3) {",
          "1759:      for (i=0;i<50;i++) {",
          "1760:   cli_md5_init(&md5);",
          "1761:   cli_md5_update(&md5, result, length/8);",
          "",
          "[Removed Lines]",
          "1757:      if (length > 128)",
          "1758:   length = 128;",
          "",
          "[Added Lines]",
          "1759:  if (length > 128)",
          "1760:      length = 128;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1807:      noisy_warnmsg(\"cli_pdf: invalid revision %d\\n\", R);",
          "1808:  }",
          "1809:     }",
          "1810:     if (password_empty) {",
          "1811:  cli_dbgmsg(\"cli_pdf: user password is empty\\n\");",
          "1812:  noisy_msg(pdf, \"cli_pdf: encrypted PDF found, user password is empty, will attempt to decrypt\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1813:     else {",
          "1815:  cli_dbgmsg(\"cli_pdf: R value out of range\\n\");",
          "1816:  noisy_warnmsg(\"cli_pdf: R value out of range\\n\");",
          "1817:  return;",
          "1818:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1916:      noisy_warnmsg(\"cli_pdf: invalid R\\n\");",
          "1917:      break;",
          "1918:  }",
          "1920:  if (R < 5)",
          "1921:      oulen = 32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1928:  if ((R > 5) || (R < 2)) {",
          "1929:      cli_dbgmsg(\"cli_pdf: R value outside supported range [2..5]\\n\");",
          "1930:      noisy_warnmsg(\"cli_pdf: R value outside supported range [2..5]\\n\");",
          "1931:      break;",
          "1932:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "26ae39ce8a46e666740c2de9975ac1233c6cc2d1",
      "candidate_info": {
        "commit_hash": "26ae39ce8a46e666740c2de9975ac1233c6cc2d1",
        "repo": "vrtadmin/clamav-devel",
        "commit_url": "https://github.com/vrtadmin/clamav-devel/commit/26ae39ce8a46e666740c2de9975ac1233c6cc2d1",
        "files": [
          "libclamav/pdf.c"
        ],
        "message": "pdf: bb #7053",
        "before_after_code_files": [
          "libclamav/pdf.c||libclamav/pdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ],
          "candidate": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ]
        }
      },
      "candidate_diff": {
        "libclamav/pdf.c||libclamav/pdf.c": [
          "File: libclamav/pdf.c -> libclamav/pdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  case MANY_FILTERS:",
          "327:      s = \"more than 2 filters per obj\";",
          "328:      break;",
          "329:     }",
          "330:     cli_dbgmsg(\"cli_pdf: %s flagged in object %u %u\\n\", s, obj->id>>8, obj->id&0xff);",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:  case DECRYPTABLE_PDF:",
          "330:      s = \"decryptable PDF\";",
          "331:      break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1319:         nextclose = memchr(q, '>', enddict-q+1);",
          "1320:         if (nextclose && (nextclose[1] == '>')) {",
          "1323:                 if (nextopen[1] == '<') {",
          "1325:                     blockopens++;",
          "",
          "[Removed Lines]",
          "1322:             while (nextopen = memchr(q-1, '<', nextclose-q+1)) {",
          "",
          "[Added Lines]",
          "1325:             while ((nextopen = memchr(q-1, '<', nextclose-q+1)) != NULL) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1739:   dbg_printhex(\"cli_pdf: Candidate encryption key\", pdf->key, pdf->keylen);",
          "1740:      }",
          "1741:  }",
          "1744:  cli_md5_init(&md5);",
          "",
          "[Removed Lines]",
          "1742:     } else {",
          "",
          "[Added Lines]",
          "1745:     } else if ((R >= 2) && (R <= 4)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1753:      cli_md5_update(&md5, &v, 4);",
          "1754:  }",
          "1755:  cli_md5_final(result, &md5);",
          "1756:  if (R >= 3) {",
          "1759:      for (i=0;i<50;i++) {",
          "1760:   cli_md5_init(&md5);",
          "1761:   cli_md5_update(&md5, result, length/8);",
          "",
          "[Removed Lines]",
          "1757:      if (length > 128)",
          "1758:   length = 128;",
          "",
          "[Added Lines]",
          "1759:  if (length > 128)",
          "1760:      length = 128;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1807:      noisy_warnmsg(\"cli_pdf: invalid revision %d\\n\", R);",
          "1808:  }",
          "1809:     }",
          "1810:     if (password_empty) {",
          "1811:  cli_dbgmsg(\"cli_pdf: user password is empty\\n\");",
          "1812:  noisy_msg(pdf, \"cli_pdf: encrypted PDF found, user password is empty, will attempt to decrypt\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1813:     else {",
          "1815:  cli_dbgmsg(\"cli_pdf: R value out of range\\n\");",
          "1816:  noisy_warnmsg(\"cli_pdf: R value out of range\\n\");",
          "1817:  return;",
          "1818:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1916:      noisy_warnmsg(\"cli_pdf: invalid R\\n\");",
          "1917:      break;",
          "1918:  }",
          "1920:  if (R < 5)",
          "1921:      oulen = 32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1928:  if ((R > 5) || (R < 2)) {",
          "1929:      cli_dbgmsg(\"cli_pdf: R value outside supported range [2..5]\\n\");",
          "1930:      noisy_warnmsg(\"cli_pdf: R value outside supported range [2..5]\\n\");",
          "1931:      break;",
          "1932:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b574c476a71e740f42656e04cfa74c526bdabdb",
      "candidate_info": {
        "commit_hash": "5b574c476a71e740f42656e04cfa74c526bdabdb",
        "repo": "vrtadmin/clamav-devel",
        "commit_url": "https://github.com/vrtadmin/clamav-devel/commit/5b574c476a71e740f42656e04cfa74c526bdabdb",
        "files": [
          "libclamav/pdf.c"
        ],
        "message": "pdf: better object dictionary logging and handling",
        "before_after_code_files": [
          "libclamav/pdf.c||libclamav/pdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ],
          "candidate": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ]
        }
      },
      "candidate_diff": {
        "libclamav/pdf.c||libclamav/pdf.c": [
          "File: libclamav/pdf.c -> libclamav/pdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:     char *decrypted = NULL;",
          "844:     int dump = 1;",
          "847:     if ((!(obj->flags & (1 << OBJ_STREAM)) ||",
          "848:  (obj->flags & (1 << OBJ_HASFILTERS)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846:     cli_dbgmsg(\"pdf_extract_obj: obj %u %u\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1076:       } while (bytesleft > 0);",
          "1077:     } else {",
          "1078:  off_t bytesleft = obj_size(pdf, obj, 0);",
          "1080:      rc = CL_EWRITE;",
          "1081:     }",
          "1082:     } while (0);",
          "",
          "[Removed Lines]",
          "1079:  if (filter_writen(pdf, obj, fout , pdf->map + obj->start, bytesleft,&sum) != bytesleft)",
          "",
          "[Added Lines]",
          "1081:  if (bytesleft < 0) {",
          "1082:      rc = CL_EFORMAT;",
          "1083:  }",
          "1084:  else if (filter_writen(pdf, obj, fout , pdf->map + obj->start, bytesleft,&sum) != bytesleft)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1298:  nextobj = pdf_nextobject(q, bytesleft);",
          "1299:  bytesleft -= nextobj -q;",
          "1300:  if (!nextobj || bytesleft < 0) {",
          "1301:      return;",
          "1302:  }",
          "1303:  q3 = memchr(q-1, '<', nextobj-q+1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1306:      cli_dbgmsg(\"cli_pdf: %u %u obj: no dictionary\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1315:     if (bytesleft < 0) {",
          "1316:         return;",
          "1317:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1322:         cli_dbgmsg(\"cli_pdf: %u %u obj: broken dictionary\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22cfedb59205f7b8df3fa30910887f205fa8911d",
      "candidate_info": {
        "commit_hash": "22cfedb59205f7b8df3fa30910887f205fa8911d",
        "repo": "vrtadmin/clamav-devel",
        "commit_url": "https://github.com/vrtadmin/clamav-devel/commit/22cfedb59205f7b8df3fa30910887f205fa8911d",
        "files": [
          "libclamav/pdf.c"
        ],
        "message": "pdf: better object dictionary logging and handling",
        "before_after_code_files": [
          "libclamav/pdf.c||libclamav/pdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ],
          "candidate": [
            "libclamav/pdf.c||libclamav/pdf.c"
          ]
        }
      },
      "candidate_diff": {
        "libclamav/pdf.c||libclamav/pdf.c": [
          "File: libclamav/pdf.c -> libclamav/pdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:     char *decrypted = NULL;",
          "844:     int dump = 1;",
          "847:     if ((!(obj->flags & (1 << OBJ_STREAM)) ||",
          "848:  (obj->flags & (1 << OBJ_HASFILTERS)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846:     cli_dbgmsg(\"pdf_extract_obj: obj %u %u\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1076:       } while (bytesleft > 0);",
          "1077:     } else {",
          "1078:  off_t bytesleft = obj_size(pdf, obj, 0);",
          "1080:      rc = CL_EWRITE;",
          "1081:     }",
          "1082:     } while (0);",
          "",
          "[Removed Lines]",
          "1079:  if (filter_writen(pdf, obj, fout , pdf->map + obj->start, bytesleft,&sum) != bytesleft)",
          "",
          "[Added Lines]",
          "1081:  if (bytesleft < 0) {",
          "1082:      rc = CL_EFORMAT;",
          "1083:  }",
          "1084:  else if (filter_writen(pdf, obj, fout , pdf->map + obj->start, bytesleft,&sum) != bytesleft)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1298:  nextobj = pdf_nextobject(q, bytesleft);",
          "1299:  bytesleft -= nextobj -q;",
          "1300:  if (!nextobj || bytesleft < 0) {",
          "1301:      return;",
          "1302:  }",
          "1303:  q3 = memchr(q-1, '<', nextobj-q+1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1306:      cli_dbgmsg(\"cli_pdf: %u %u obj: no dictionary\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1315:     if (bytesleft < 0) {",
          "1316:         return;",
          "1317:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1322:         cli_dbgmsg(\"cli_pdf: %u %u obj: broken dictionary\\n\", obj->id>>8, obj->id&0xff);",
          "",
          "---------------"
        ]
      }
    }
  ]
}