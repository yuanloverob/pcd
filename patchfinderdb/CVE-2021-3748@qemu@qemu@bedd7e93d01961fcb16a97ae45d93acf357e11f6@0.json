{
  "cve_id": "CVE-2021-3748",
  "cve_desc": "A use-after-free vulnerability was found in the virtio-net device of QEMU. It could occur when the descriptor's address belongs to the non direct access region, due to num_buffers being set after the virtqueue elem has been unmapped. A malicious guest could use this flaw to crash QEMU, resulting in a denial of service condition, or potentially execute code on the host with the privileges of the QEMU process.",
  "repo": "qemu/qemu",
  "patch_hash": "bedd7e93d01961fcb16a97ae45d93acf357e11f6",
  "patch_info": {
    "commit_hash": "bedd7e93d01961fcb16a97ae45d93acf357e11f6",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/bedd7e93d01961fcb16a97ae45d93acf357e11f6",
    "files": [
      "hw/net/virtio-net.c"
    ],
    "message": "virtio-net: fix use after unmap/free for sg\n\nWhen mergeable buffer is enabled, we try to set the num_buffers after\nthe virtqueue elem has been unmapped. This will lead several issues,\nE.g a use after free when the descriptor has an address which belongs\nto the non direct access region. In this case we use bounce buffer\nthat is allocated during address_space_map() and freed during\naddress_space_unmap().\n\nFixing this by storing the elems temporarily in an array and delay the\nunmap after we set the the num_buffers.\n\nThis addresses CVE-2021-3748.\n\nReported-by: Alexander Bulekov <alxndr@bu.edu>\nFixes: fbe78f4f55c6 (\"virtio-net support\")\nCc: qemu-stable@nongnu.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>",
    "before_after_code_files": [
      "hw/net/virtio-net.c||hw/net/virtio-net.c"
    ]
  },
  "patch_diff": {
    "hw/net/virtio-net.c||hw/net/virtio-net.c": [
      "File: hw/net/virtio-net.c -> hw/net/virtio-net.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1746:     VirtIONet *n = qemu_get_nic_opaque(nc);",
      "1747:     VirtIONetQueue *q = virtio_net_get_subqueue(nc);",
      "1748:     VirtIODevice *vdev = VIRTIO_DEVICE(n);",
      "1749:     struct iovec mhdr_sg[VIRTQUEUE_MAX_SIZE];",
      "1750:     struct virtio_net_hdr_mrg_rxbuf mhdr;",
      "1751:     unsigned mhdr_cnt = 0;",
      "1754:     if (!virtio_net_can_receive(nc)) {",
      "1755:         return -1;",
      "",
      "[Removed Lines]",
      "1752:     size_t offset, i, guest_offset;",
      "",
      "[Added Lines]",
      "1749:     VirtQueueElement *elems[VIRTQUEUE_MAX_SIZE];",
      "1750:     size_t lens[VIRTQUEUE_MAX_SIZE];",
      "1754:     size_t offset, i, guest_offset, j;",
      "1755:     ssize_t err;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1781:         total = 0;",
      "1783:         elem = virtqueue_pop(q->rx_vq, sizeof(VirtQueueElement));",
      "1784:         if (!elem) {",
      "1785:             if (i) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1786:         if (i == VIRTQUEUE_MAX_SIZE) {",
      "1787:             virtio_error(vdev, \"virtio-net unexpected long buffer chain\");",
      "1788:             err = size;",
      "1789:             goto err;",
      "1790:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1791:                              n->guest_hdr_len, n->host_hdr_len,",
      "1792:                              vdev->guest_features);",
      "1793:             }",
      "1795:         }",
      "1797:         if (elem->in_num < 1) {",
      "",
      "[Removed Lines]",
      "1794:             return -1;",
      "",
      "[Added Lines]",
      "1803:             err = -1;",
      "1804:             goto err;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1799:                          \"virtio-net receive queue contains no in buffers\");",
      "1800:             virtqueue_detach_element(q->rx_vq, elem, 0);",
      "1801:             g_free(elem);",
      "1803:         }",
      "1805:         sg = elem->in_sg;",
      "",
      "[Removed Lines]",
      "1802:             return -1;",
      "",
      "[Added Lines]",
      "1812:             err = -1;",
      "1813:             goto err;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1836:         if (!n->mergeable_rx_bufs && offset < size) {",
      "1837:             virtqueue_unpop(q->rx_vq, elem, total);",
      "1838:             g_free(elem);",
      "1840:         }",
      "1845:     }",
      "1847:     if (mhdr_cnt) {",
      "",
      "[Removed Lines]",
      "1839:             return size;",
      "1843:         virtqueue_fill(q->rx_vq, elem, total, i++);",
      "1844:         g_free(elem);",
      "",
      "[Added Lines]",
      "1850:             err = size;",
      "1851:             goto err;",
      "1854:         elems[i] = elem;",
      "1855:         lens[i] = total;",
      "1856:         i++;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1851:                      &mhdr.num_buffers, sizeof mhdr.num_buffers);",
      "1852:     }",
      "1854:     virtqueue_flush(q->rx_vq, i);",
      "1855:     virtio_notify(vdev, q->rx_vq);",
      "1857:     return size;",
      "1858: }",
      "1860: static ssize_t virtio_net_do_receive(NetClientState *nc, const uint8_t *buf,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1866:     for (j = 0; j < i; j++) {",
      "1868:         virtqueue_fill(q->rx_vq, elems[j], lens[j], j);",
      "1869:         g_free(elems[j]);",
      "1870:     }",
      "1877: err:",
      "1878:     for (j = 0; j < i; j++) {",
      "1879:         g_free(elems[j]);",
      "1880:     }",
      "1882:     return err;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5881d76ff41ab898751babdf26ea668cb8fb7a0e",
      "candidate_info": {
        "commit_hash": "5881d76ff41ab898751babdf26ea668cb8fb7a0e",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/5881d76ff41ab898751babdf26ea668cb8fb7a0e",
        "files": [
          "hw/net/virtio-net.c"
        ],
        "message": "virtio-net: fix use after unmap/free for sg\n\nWhen mergeable buffer is enabled, we try to set the num_buffers after\nthe virtqueue elem has been unmapped. This will lead several issues,\nE.g a use after free when the descriptor has an address which belongs\nto the non direct access region. In this case we use bounce buffer\nthat is allocated during address_space_map() and freed during\naddress_space_unmap().\n\nFixing this by storing the elems temporarily in an array and delay the\nunmap after we set the the num_buffers.\n\nThis addresses CVE-2021-3748.\n\nReported-by: Alexander Bulekov <alxndr@bu.edu>\nFixes: fbe78f4f55c6 (\"virtio-net support\")\nCc: qemu-stable@nongnu.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>\n(cherry picked from commit bedd7e93d01961fcb16a97ae45d93acf357e11f6)\nSigned-off-by: Michael Roth <michael.roth@amd.com>",
        "before_after_code_files": [
          "hw/net/virtio-net.c||hw/net/virtio-net.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/net/virtio-net.c||hw/net/virtio-net.c"
          ],
          "candidate": [
            "hw/net/virtio-net.c||hw/net/virtio-net.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/net/virtio-net.c||hw/net/virtio-net.c": [
          "File: hw/net/virtio-net.c -> hw/net/virtio-net.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1659:     VirtIONet *n = qemu_get_nic_opaque(nc);",
          "1660:     VirtIONetQueue *q = virtio_net_get_subqueue(nc);",
          "1661:     VirtIODevice *vdev = VIRTIO_DEVICE(n);",
          "1662:     struct iovec mhdr_sg[VIRTQUEUE_MAX_SIZE];",
          "1663:     struct virtio_net_hdr_mrg_rxbuf mhdr;",
          "1664:     unsigned mhdr_cnt = 0;",
          "1667:     if (!virtio_net_can_receive(nc)) {",
          "1668:         return -1;",
          "",
          "[Removed Lines]",
          "1665:     size_t offset, i, guest_offset;",
          "",
          "[Added Lines]",
          "1662:     VirtQueueElement *elems[VIRTQUEUE_MAX_SIZE];",
          "1663:     size_t lens[VIRTQUEUE_MAX_SIZE];",
          "1667:     size_t offset, i, guest_offset, j;",
          "1668:     ssize_t err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1694:         total = 0;",
          "1696:         elem = virtqueue_pop(q->rx_vq, sizeof(VirtQueueElement));",
          "1697:         if (!elem) {",
          "1698:             if (i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1699:         if (i == VIRTQUEUE_MAX_SIZE) {",
          "1700:             virtio_error(vdev, \"virtio-net unexpected long buffer chain\");",
          "1701:             err = size;",
          "1702:             goto err;",
          "1703:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1704:                              n->guest_hdr_len, n->host_hdr_len,",
          "1705:                              vdev->guest_features);",
          "1706:             }",
          "1708:         }",
          "1710:         if (elem->in_num < 1) {",
          "",
          "[Removed Lines]",
          "1707:             return -1;",
          "",
          "[Added Lines]",
          "1716:             err = -1;",
          "1717:             goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1712:                          \"virtio-net receive queue contains no in buffers\");",
          "1713:             virtqueue_detach_element(q->rx_vq, elem, 0);",
          "1714:             g_free(elem);",
          "1716:         }",
          "1718:         sg = elem->in_sg;",
          "",
          "[Removed Lines]",
          "1715:             return -1;",
          "",
          "[Added Lines]",
          "1725:             err = -1;",
          "1726:             goto err;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1749:         if (!n->mergeable_rx_bufs && offset < size) {",
          "1750:             virtqueue_unpop(q->rx_vq, elem, total);",
          "1751:             g_free(elem);",
          "1753:         }",
          "1758:     }",
          "1760:     if (mhdr_cnt) {",
          "",
          "[Removed Lines]",
          "1752:             return size;",
          "1756:         virtqueue_fill(q->rx_vq, elem, total, i++);",
          "1757:         g_free(elem);",
          "",
          "[Added Lines]",
          "1763:             err = size;",
          "1764:             goto err;",
          "1767:         elems[i] = elem;",
          "1768:         lens[i] = total;",
          "1769:         i++;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1764:                      &mhdr.num_buffers, sizeof mhdr.num_buffers);",
          "1765:     }",
          "1767:     virtqueue_flush(q->rx_vq, i);",
          "1768:     virtio_notify(vdev, q->rx_vq);",
          "1770:     return size;",
          "1771: }",
          "1773: static ssize_t virtio_net_do_receive(NetClientState *nc, const uint8_t *buf,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1779:     for (j = 0; j < i; j++) {",
          "1781:         virtqueue_fill(q->rx_vq, elems[j], lens[j], j);",
          "1782:         g_free(elems[j]);",
          "1783:     }",
          "1790: err:",
          "1791:     for (j = 0; j < i; j++) {",
          "1792:         g_free(elems[j]);",
          "1793:     }",
          "1795:     return err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e41f16fca436a666ee79f5219797a2c58b6cf19",
      "candidate_info": {
        "commit_hash": "9e41f16fca436a666ee79f5219797a2c58b6cf19",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/9e41f16fca436a666ee79f5219797a2c58b6cf19",
        "files": [
          "hw/net/virtio-net.c"
        ],
        "message": "virtio-net: fix use after unmap/free for sg\n\nWhen mergeable buffer is enabled, we try to set the num_buffers after\nthe virtqueue elem has been unmapped. This will lead several issues,\nE.g a use after free when the descriptor has an address which belongs\nto the non direct access region. In this case we use bounce buffer\nthat is allocated during address_space_map() and freed during\naddress_space_unmap().\n\nFixing this by storing the elems temporarily in an array and delay the\nunmap after we set the the num_buffers.\n\nThis addresses CVE-2021-3748.\n\nReported-by: Alexander Bulekov <alxndr@bu.edu>\nFixes: fbe78f4f55c6 (\"virtio-net support\")\nCc: qemu-stable@nongnu.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>\n(cherry picked from commit bedd7e93d01961fcb16a97ae45d93acf357e11f6)\nSigned-off-by: Michael Roth <michael.roth@amd.com>",
        "before_after_code_files": [
          "hw/net/virtio-net.c||hw/net/virtio-net.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/net/virtio-net.c||hw/net/virtio-net.c"
          ],
          "candidate": [
            "hw/net/virtio-net.c||hw/net/virtio-net.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/net/virtio-net.c||hw/net/virtio-net.c": [
          "File: hw/net/virtio-net.c -> hw/net/virtio-net.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1746:     VirtIONet *n = qemu_get_nic_opaque(nc);",
          "1747:     VirtIONetQueue *q = virtio_net_get_subqueue(nc);",
          "1748:     VirtIODevice *vdev = VIRTIO_DEVICE(n);",
          "1749:     struct iovec mhdr_sg[VIRTQUEUE_MAX_SIZE];",
          "1750:     struct virtio_net_hdr_mrg_rxbuf mhdr;",
          "1751:     unsigned mhdr_cnt = 0;",
          "1754:     if (!virtio_net_can_receive(nc)) {",
          "1755:         return -1;",
          "",
          "[Removed Lines]",
          "1752:     size_t offset, i, guest_offset;",
          "",
          "[Added Lines]",
          "1749:     VirtQueueElement *elems[VIRTQUEUE_MAX_SIZE];",
          "1750:     size_t lens[VIRTQUEUE_MAX_SIZE];",
          "1754:     size_t offset, i, guest_offset, j;",
          "1755:     ssize_t err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1781:         total = 0;",
          "1783:         elem = virtqueue_pop(q->rx_vq, sizeof(VirtQueueElement));",
          "1784:         if (!elem) {",
          "1785:             if (i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1786:         if (i == VIRTQUEUE_MAX_SIZE) {",
          "1787:             virtio_error(vdev, \"virtio-net unexpected long buffer chain\");",
          "1788:             err = size;",
          "1789:             goto err;",
          "1790:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1791:                              n->guest_hdr_len, n->host_hdr_len,",
          "1792:                              vdev->guest_features);",
          "1793:             }",
          "1795:         }",
          "1797:         if (elem->in_num < 1) {",
          "",
          "[Removed Lines]",
          "1794:             return -1;",
          "",
          "[Added Lines]",
          "1803:             err = -1;",
          "1804:             goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1799:                          \"virtio-net receive queue contains no in buffers\");",
          "1800:             virtqueue_detach_element(q->rx_vq, elem, 0);",
          "1801:             g_free(elem);",
          "1803:         }",
          "1805:         sg = elem->in_sg;",
          "",
          "[Removed Lines]",
          "1802:             return -1;",
          "",
          "[Added Lines]",
          "1812:             err = -1;",
          "1813:             goto err;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1836:         if (!n->mergeable_rx_bufs && offset < size) {",
          "1837:             virtqueue_unpop(q->rx_vq, elem, total);",
          "1838:             g_free(elem);",
          "1840:         }",
          "1845:     }",
          "1847:     if (mhdr_cnt) {",
          "",
          "[Removed Lines]",
          "1839:             return size;",
          "1843:         virtqueue_fill(q->rx_vq, elem, total, i++);",
          "1844:         g_free(elem);",
          "",
          "[Added Lines]",
          "1850:             err = size;",
          "1851:             goto err;",
          "1854:         elems[i] = elem;",
          "1855:         lens[i] = total;",
          "1856:         i++;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1851:                      &mhdr.num_buffers, sizeof mhdr.num_buffers);",
          "1852:     }",
          "1854:     virtqueue_flush(q->rx_vq, i);",
          "1855:     virtio_notify(vdev, q->rx_vq);",
          "1857:     return size;",
          "1858: }",
          "1860: static ssize_t virtio_net_do_receive(NetClientState *nc, const uint8_t *buf,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1866:     for (j = 0; j < i; j++) {",
          "1868:         virtqueue_fill(q->rx_vq, elems[j], lens[j], j);",
          "1869:         g_free(elems[j]);",
          "1870:     }",
          "1877: err:",
          "1878:     for (j = 0; j < i; j++) {",
          "1879:         g_free(elems[j]);",
          "1880:     }",
          "1882:     return err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}