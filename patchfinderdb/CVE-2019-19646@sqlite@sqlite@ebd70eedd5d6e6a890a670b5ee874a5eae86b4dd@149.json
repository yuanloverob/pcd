{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dfb5c963a0b643a6179de67f419f2019c4eb5dee",
      "candidate_info": {
        "commit_hash": "dfb5c963a0b643a6179de67f419f2019c4eb5dee",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dfb5c963a0b643a6179de67f419f2019c4eb5dee",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/altertab2.test"
        ],
        "message": "Fix a problem with ALTER TABLE and vector assignments in UPDATE statements within triggers.\n\nFossilOrigin-Name: cc6cd7531fee39b4c2a9f522f1089c1d79254a9e25acae59468322031f94c25a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a5e9cc794f17566160c4b2b5791601a744a21ace987b19ff8a5816fd78dce56a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "465:   }else{",
          "466:     if( pVector->op==TK_VECTOR ) pVector = pVector->x.pList->a[iField].pExpr;",
          "467:     pRet = sqlite3ExprDup(pParse->db, pVector, 0);",
          "468:   }",
          "469:   return pRet;",
          "470: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "468:     sqlite3RenameTokenRemap(pParse, pRet, pVector);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1668:   }",
          "1670: vector_append_error:",
          "1671:   sqlite3ExprDelete(db, pExpr);",
          "1672:   sqlite3IdListDelete(db, pColumns);",
          "1673:   return pList;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1672:   if( IN_RENAME_OBJECT ){",
          "1673:     sqlite3RenameExprUnmap(pParse, pExpr);",
          "1674:   }",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:   } $expect",
          "143: }",
          "145: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145: #-------------------------------------------------------------------------",
          "146: reset_db",
          "147: do_execsql_test 4.0 {",
          "148:   CREATE TABLE t1(a,b,c,d,e,f);",
          "149:   CREATE TRIGGER r1 AFTER INSERT ON t1 WHEN new.a NOT NULL BEGIN",
          "150:     UPDATE t1 SET (c,d)=(a,b);",
          "151:   END;",
          "152: }",
          "154: do_execsql_test 4.1 {",
          "155:   ALTER TABLE t1 RENAME TO t1x;",
          "156:   SELECT sql FROM sqlite_master WHERE type = 'trigger';",
          "157: } {",
          "158: {CREATE TRIGGER r1 AFTER INSERT ON \"t1x\" WHEN new.a NOT NULL BEGIN",
          "159:     UPDATE \"t1x\" SET (c,d)=(a,b);",
          "160:   END}",
          "161: }",
          "163: do_execsql_test 4.2 {",
          "164:   ALTER TABLE t1x RENAME a TO aaa;",
          "165:   SELECT sql FROM sqlite_master WHERE type = 'trigger';",
          "166: } {",
          "167: {CREATE TRIGGER r1 AFTER INSERT ON \"t1x\" WHEN new.aaa NOT NULL BEGIN",
          "168:     UPDATE \"t1x\" SET (c,d)=(aaa,b);",
          "169:   END}",
          "170: }",
          "172: do_execsql_test 4.3 {",
          "173:   ALTER TABLE t1x RENAME d TO ddd;",
          "174:   SELECT sql FROM sqlite_master WHERE type = 'trigger';",
          "175: } {",
          "176: {CREATE TRIGGER r1 AFTER INSERT ON \"t1x\" WHEN new.aaa NOT NULL BEGIN",
          "177:     UPDATE \"t1x\" SET (c,ddd)=(aaa,b);",
          "178:   END}",
          "179: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04fcef00eed718bcaea0ef6c9172500a27a1052e",
      "candidate_info": {
        "commit_hash": "04fcef00eed718bcaea0ef6c9172500a27a1052e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/04fcef00eed718bcaea0ef6c9172500a27a1052e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "test/insert.test"
        ],
        "message": "Fix a corner-case for the logic that cause an insert of a NULL into an INTEGER PRIMARY KEY column to be converted into a valid integer key, when the NULL results from a CASE expression that lacks an ELSE clause.\n\nFossilOrigin-Name: 9a425051e7ba59e797636f5cf32b5f6efafdb21c8d5300e099b8008b829c1439",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "test/insert.test||test/insert.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 10ffc1fe006a1766ff2f1ffc6129786afb86b6b1f8d3a17334e8ecb838d37b9c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "953:       }else if( pSelect ){",
          "954:         sqlite3VdbeAddOp2(v, OP_Copy, regFromSelect+ipkColumn, regRowid);",
          "955:       }else{",
          "961:           appendFlag = 1;",
          "966:         }",
          "967:       }",
          "",
          "[Removed Lines]",
          "956:         VdbeOp *pOp;",
          "957:         sqlite3ExprCode(pParse, pList->a[ipkColumn].pExpr, regRowid);",
          "958:         pOp = sqlite3VdbeGetOp(v, -1);",
          "959:         assert( pOp!=0 );",
          "960:         if( pOp->opcode==OP_Null && !IsVirtual(pTab) ){",
          "962:           pOp->opcode = OP_NewRowid;",
          "963:           pOp->p1 = iDataCur;",
          "964:           pOp->p2 = regRowid;",
          "965:           pOp->p3 = regAutoinc;",
          "",
          "[Added Lines]",
          "956:         Expr *pIpk = pList->a[ipkColumn].pExpr;",
          "957:         if( pIpk->op==TK_NULL && !IsVirtual(pTab) ){",
          "958:           sqlite3VdbeAddOp3(v, OP_NewRowid, iDataCur, regRowid, regAutoinc);",
          "960:         }else{",
          "961:           sqlite3ExprCode(pParse, pList->a[ipkColumn].pExpr, regRowid);",
          "",
          "---------------"
        ],
        "test/insert.test||test/insert.test": [
          "File: test/insert.test -> test/insert.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "449:   SELECT * FROM t13 ORDER BY +b;",
          "450: } {2 0 6 2 1 5}",
          "452: integrity_check insert-99.0",
          "454: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "452: # 2019-01-17.  From the chromium fuzzer.",
          "453: #",
          "454: do_execsql_test insert-14.1 {",
          "455:   DROP TABLE IF EXISTS t14;",
          "456:   CREATE TABLE t14(x INTEGER PRIMARY KEY);",
          "457:   INSERT INTO t14 VALUES(CASE WHEN 1 THEN null END);",
          "458:   SELECT x FROM t14;",
          "459: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef14abbf8d7dac12bb3f54f61621194750bb6aed",
      "candidate_info": {
        "commit_hash": "ef14abbf8d7dac12bb3f54f61621194750bb6aed",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ef14abbf8d7dac12bb3f54f61621194750bb6aed",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/vdbeaux.c",
          "test/indexexpr2.test"
        ],
        "message": "Use a statement journal for all CREATE INDEX statements in case an indexed exprsesion throws an exception when it is evaluated. Fix for [b5ca442a].\n\nFossilOrigin-Name: b8071d10cba8f6c19fb8d5df3877f72567dc6d6a94744a39cbc1f58b2e2f343b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/indexexpr2.test||test/indexexpr2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: aee73fd28f031a2568ac723de0826be7f1dca6be3b049e4a04fb47af75dcf4bf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3050:     sqlite3UniqueConstraint(pParse, OE_Abort, pIndex);",
          "3051:     sqlite3VdbeJumpHere(v, j2);",
          "3052:   }else{",
          "3053:     addr2 = sqlite3VdbeCurrentAddr(v);",
          "3054:   }",
          "3055:   sqlite3VdbeAddOp3(v, OP_SorterData, iSorter, regRecord, iIdx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3060:     sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "629:   int hasAbort = 0;",
          "630:   int hasFkCounter = 0;",
          "631:   int hasCreateTable = 0;",
          "632:   int hasInitCoroutine = 0;",
          "633:   Op *pOp;",
          "634:   VdbeOpIter sIter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "632:   int hasCreateIndex = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "647:       break;",
          "648:     }",
          "649:     if( opcode==OP_CreateBtree && pOp->p3==BTREE_INTKEY ) hasCreateTable = 1;",
          "650:     if( opcode==OP_InitCoroutine ) hasInitCoroutine = 1;",
          "651: #ifndef SQLITE_OMIT_FOREIGN_KEY",
          "652:     if( opcode==OP_FkCounter && pOp->p1==0 && pOp->p2==1 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "651:     if( opcode==OP_CreateBtree && pOp->p3==BTREE_BLOBKEY ) hasCreateIndex = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "664:   return ( v->db->mallocFailed || hasAbort==mayAbort || hasFkCounter",
          "666: }",
          "",
          "[Removed Lines]",
          "665:               || (hasCreateTable && hasInitCoroutine) );",
          "",
          "[Added Lines]",
          "667:         || (hasCreateTable && hasInitCoroutine) || hasCreateIndex",
          "668:   );",
          "",
          "---------------"
        ],
        "test/indexexpr2.test||test/indexexpr2.test": [
          "File: test/indexexpr2.test -> test/indexexpr2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:   SELECT a, b FROM x1 WHERE CAST(b AS TEXT) = 123;",
          "279: } {SEARCH TABLE x1 USING INDEX x1i2 (<expr>=?)}",
          "282: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281: do_execsql_test 7.0 {",
          "282:   CREATE TABLE IF NOT EXISTS t0(c0);",
          "283:   INSERT INTO t0(c0) VALUES (-9223372036854775808);",
          "284:   BEGIN;",
          "285: }",
          "286: do_catchsql_test 7.1 {",
          "287:   CREATE INDEX i0 ON t0(ABS(c0));",
          "288: } {1 {integer overflow}}",
          "289: do_execsql_test 7.2 {",
          "290:   COMMIT;",
          "291:   SELECT sql FROM sqlite_master WHERE tbl_name = 't0';",
          "292:   CREATE INDEX i0 ON t0(c0);",
          "293: } {{CREATE TABLE t0(c0)}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e30c7f369856fdbf4b4040dfaa63b9eab64302f",
      "candidate_info": {
        "commit_hash": "1e30c7f369856fdbf4b4040dfaa63b9eab64302f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1e30c7f369856fdbf4b4040dfaa63b9eab64302f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "test/e_vacuum.test"
        ],
        "message": "Change VACUUM so that it preserves ROWID values.\n\nFossilOrigin-Name: 49e5d11d463de078c2b8a963f5ed436210937e6dfddf06942132db9ec685bfd8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "test/e_vacuum.test||test/e_vacuum.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 97744701c3bd414e6c9d7182639d8c2ce7cf124c4fce625071ae65658ac61713",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2347:       sqlite3RowidConstraint(pParse, onError, pDest);",
          "2348:       sqlite3VdbeJumpHere(v, addr2);",
          "2349:       autoIncStep(pParse, regAutoinc, regRowid);",
          "2351:       addr1 = sqlite3VdbeAddOp2(v, OP_NewRowid, iDest, regRowid);",
          "2352:     }else{",
          "2353:       addr1 = sqlite3VdbeAddOp2(v, OP_Rowid, iSrc, regRowid);",
          "",
          "[Removed Lines]",
          "2350:     }else if( pDest->pIndex==0 ){",
          "",
          "[Added Lines]",
          "2350:     }else if( pDest->pIndex==0 && !(db->mDbFlags & DBFLAG_Vacuum) ){",
          "",
          "---------------"
        ],
        "test/e_vacuum.test||test/e_vacuum.test": [
          "File: test/e_vacuum.test -> test/e_vacuum.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "219: #   a database is VACUUMed. Tests e_vacuum-3.1.3 - 3.1.4 show that adding",
          "220: #   an INTEGER PRIMARY KEY column to a table stops this from happening.",
          "221: #",
          "222: do_execsql_test e_vacuum-3.1.1 {",
          "223:   CREATE TABLE t4(x);",
          "224:   INSERT INTO t4(x) VALUES('x');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222: #   Update 2019-01-07:  Rowids are now preserved by VACUUM.",
          "223: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230: do_execsql_test e_vacuum-3.1.2 {",
          "231:   VACUUM;",
          "232:   SELECT rowid, x FROM t4;",
          "235: do_execsql_test e_vacuum-3.1.3 {",
          "236:   CREATE TABLE t5(x, y INTEGER PRIMARY KEY);",
          "",
          "[Removed Lines]",
          "233: } {1 x 2 z}",
          "",
          "[Added Lines]",
          "235: } {1 x 3 z}",
          "236: # Was: {1 x 2 z}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8279fe8a4bcb2e14e9c9db854c9e0e0a73c86d10",
      "candidate_info": {
        "commit_hash": "8279fe8a4bcb2e14e9c9db854c9e0e0a73c86d10",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8279fe8a4bcb2e14e9c9db854c9e0e0a73c86d10",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a crash in fts3 caused by corrupt database records.\n\nFossilOrigin-Name: 11f7f94f1c5d761e7f381e277658b7e857cc369283996c509061de55fd6aad52",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3942:   nPrefix = fts3PrefixCompress(pPrev->a, pPrev->n, zTerm, nTerm);",
          "3943:   nSuffix = nTerm - nPrefix;",
          "3944:   memcpy(pPrev->a, zTerm, nTerm);",
          "3945:   pPrev->n = nTerm;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3944:   if( nSuffix<=0 ) return FTS_CORRUPT_VTAB;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6ac0f822450b26c7d67c33cdb2a90189cd3cf65a052af8497b795c3f71a23813",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: }",
          "28: sqlite3_fts3_may_be_corrupt 1",
          "30: do_execsql_test 1.0 {",
          "31:   BEGIN;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: database_may_be_corrupt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5094:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "5095: } {0 {}}",
          "5097: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5098: #-------------------------------------------------------------------------",
          "5099: #",
          "5100: reset_db",
          "5101: do_test 29.0 {",
          "5102:   sqlite3 db {}",
          "5103:   db deserialize [decode_hexdb {",
          "5104: .open --hexdb",
          "5105: | size 28672 pagesize 4096 filename crash-53f41622dd3bf6.db",
          "5106: | page 1 offset 0",
          "5107: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "5108: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "5109: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "5110: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "5111: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "5112: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "5113: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "5114: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 54 69 72   .5tablet1_segTir",
          "5115: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "5116: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "5117: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "5118: |   3600: 2c 69 64 78 20 49 4d 54 45 47 45 52 2c 73 74 61   ,idx IMTEGER,sta",
          "5119: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "5120: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "5121: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "5122: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "5123: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "5124: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "5125: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "5126: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "5127: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "5128: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "5129: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "5130: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "5131: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "5132: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "5133: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "5134: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "5135: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "5136: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "5137: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "5138: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "5139: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 39 4d   cid INTEGER PR9M",
          "5140: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "5141: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 12 06   'c1b', 'c2c')8..",
          "5142: |   3984: 17 11 11 08 5f 74 61 6b 3c 65 74 31 74 31 43 52   ...._tak<et1t1CR",
          "5143: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "5144: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "5145: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "5146: | page 3 offset 8192",
          "5147: |      0: 0d 00 00 00 25 0b 48 00 0f d8 0f af 0f 86 0f 74   ....%.H........t",
          "5148: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "5149: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "5150: |     48: 0d bb 0d a0 0d 84 03 28 0d 4f 0d 35 0d 1b 0c fb   .......(.O.5....",
          "5151: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "5152: |     80: 0b 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .H..............",
          "5153: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 72 7f 00   .........?%..r..",
          "5154: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "5155: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 21 44 45 42   4.0 20160609!DEB",
          "5156: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "5157: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 46 20 46 54 53    VTAB ENABLF FTS",
          "5158: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "5159: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "5160: |   2992: 42 4c 55 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLU JSON1 ENABLE",
          "5161: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "5162: |   3024: 52 54 52 45 45 56 4d 41 58 20 4d 45 4d 4f 52 59   RTREEVMAX MEMORY",
          "5163: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "5164: |   3056: 4f 42 43 20 45 58 54 45 4e 53 49 4f 4e 20 54 48   OBC EXTENSION TH",
          "5165: |   3072: 52 45 41 44 53 41 46 45 3d 40 18 24 05 00 25 0f   READSAFE=@.$..%.",
          "5166: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "5167: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "5168: |   3120: 44 53 41 46 45 3d 31 58 4e 4f 43 41 53 45 17 22   DSAFE=1XNOCASE..",
          "5169: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 43 41 46 45 3d   ..%..THREADCAFE=",
          "5170: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "5171: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "5172: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "5173: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 48   MIT LOAD EXTENSH",
          "5174: |   3216: cf 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   .NXNOCASE....3..",
          "5175: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "5176: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "5177: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 2d 35 30 30 30 30   MAX MEMORY-50000",
          "5178: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "5179: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "5180: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "5181: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "5182: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "5183: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "5184: |   3376: 49 4e 41 52 49 18 1a 05 0d a5 0f 19 45 4e 41 42   INARI.......ENAB",
          "5185: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f be 31 53 45 17   LE RTREEXNO.1SE.",
          "5186: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 51   ...%..ENABLE RTQ",
          "5187: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "5188: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "5189: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "5190: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "5191: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "5192: |   3504: 4d 53 59 53 37 f8 52 54 52 49 4d 18 14 05 00 25   MSYS7.RTRIM....%",
          "5193: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "5194: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "5195: |   3552: 4c 45 20 4a 53 4f 3e 31 58 4e 4f 43 41 53 45 17   LE JSO>1XNOCASE.",
          "5196: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "5197: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "5198: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "5199: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "5200: |   3632: 48 c0 47 45 4f 50 4f 4c 40 58 4e 4f 43 41 53 45   H.GEOPOL@XNOCASE",
          "5201: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "5202: |   3664: 4f 50 4f 4c 59 58 52 54 51 49 4d 17 0f 05 00 23   OPOLYXRTQIM....#",
          "5203: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "5204: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "5205: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "5206: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "5207: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "5208: |   3760: 4c 45 20 46 54 53 34 58 42 49 4d 41 52 59 17 0b   LE FTS4XBIMARY..",
          "5209: |   3776: 05 00 23 0f 19 45 4e 31 42 4c 45 20 46 1a 53 34   ..#..EN1BLE F.S4",
          "5210: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "5211: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "5212: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "5213: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "5214: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "5215: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "5216: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "5217: |   3904: 54 96 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   T.T VTABXRTRIM..",
          "5218: |   3920: 05 00 17 0f 1e e4 45 42 55 47 58 42 49 4e 41 52   ......EBUGXBINAR",
          "5219: |   3936: 59 11 05 05 00 17 0e 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "5220: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "5221: |   3968: 58 52 54 52 49 4d 27 03 05 01 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "5222: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "5223: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "5224: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "5225: |   4032: 63 63 2d 35 2e 34 2e 30 40 32 30 31 36 30 36 30   cc-5.4.0@2016060",
          "5226: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "5227: |   4064: 4f 4d 4f 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMOILER=gcc-5.4.",
          "5228: |   4080: 30 20 32 30 31 36 30 36 30 39 58 52 54 52 49 4d   0 20160609XRTRIM",
          "5229: | page 4 offset 12288",
          "5230: |      0: 0d 00 00 01 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "5231: | page 5 offset 16384",
          "5232: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "5233: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "5234: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "5235: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "5236: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "5237: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "5238: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "5239: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "5240: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "5241: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "5242: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "5243: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "5244: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "5245: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "5246: |   3184: 03 25 19 00 03 04 73 79 73 4d 03 25 15 00 00 04   .%....sysM.%....",
          "5247: |   3200: 6e 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   nmit.%....rtree.",
          "5248: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "5249: |   3232: 25 0e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "5250: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "5251: |   3264: 12 01 06 00 01 06 00 01 06 00 1f 03 00 01 03 00   ................",
          "5252: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 39 09 01 bd   .....20160609...",
          "5253: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "5254: |   3312: 00 01 06 00 00 01 35 09 01 04 00 01 04 00 02 04   ......5.........",
          "5255: |   3328: 00 01 07 30 30 e6 30 30 30 30 09 1c 04 00 01 04   ...00.0000......",
          "5256: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "5257: |   3360: 02 00 03 01 02 02 00 04 01 02 02 10 03 01 02 02   ................",
          "5258: |   3376: 00 0f 71 02 12 00 03 01 02 02 00 03 01 65 02 00   ..q..........e..",
          "5259: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "5260: |   3408: 01 0d a2 00 03 01 02 02 00 00 08 63 3b 6d 70 69   ...........c;mpi",
          "5261: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "5262: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "5263: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "5264: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "5265: |   3488: 00 01 02 00 01 02 00 01 01 f0 01 02 00 01 02 00   ................",
          "5266: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01   ................",
          "5267: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "5268: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "5269: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "5270: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "5271: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "5272: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "5273: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "5274: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "5275: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "5276: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "5277: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "5278: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "5279: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "5280: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "5281: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 01 f0   ................",
          "5282: |   3760: 03 01 02 02 05 93 01 02 02 00 03 01 02 02 00 00   ................",
          "5283: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "5284: |   3792: 05 72 8a 72 65 65 09 19 03 00 01 03 00 11 03 00   .r.ree..........",
          "5285: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "5286: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "5287: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "5288: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "5289: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "5290: |   3888: 00 01 02 00 01 02 00 00 04 76 75 61 62 09 07 04   .........vuab...",
          "5291: |   3904: 00 01 04 00 01 04 00 00 61 78 b4 01 01 01 01 02   ........ax......",
          "5292: |   3920: 00 01 01 01 02 00 00 f1 01 02 00 01 01 01 02 00   ................",
          "5293: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "5294: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "5295: |   3968: 01 02 00 01 01 01 01 ff 01 01 01 02 00 01 01 01   ................",
          "5296: |   3984: 02 00 01 01 01 02 00 01 01 01 02 09 01 01 01 02   ................",
          "5297: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "5298: |   4016: 01 01 01 02 00 01 02 01 02 00 01 01 01 02 00 01   ................",
          "5299: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "5300: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "5301: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "5302: |   4080: 00 01 01 11 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "5303: | page 6 offset 20480",
          "5304: |      0: 0a 00 00 00 02 0f f5 00 0f fb 1f f5 00 00 00 00   ................",
          "5305: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "5306: | page 7 offset 24576",
          "5307: |      0: 0d 00 00 00 05 0f b8 00 0f f4 0f e9 10 d6 0f c7   ................",
          "5308: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "5309: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "5310: |   4048: 3d 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00   =1..............",
          "5311: | end crash-53f41622dd3bf6.db",
          "5312: }]} {}",
          "5314: do_catchsql_test 29.1 {",
          "5315:   INSERT INTO t1(a) SELECT X'819192E578DE3F';",
          "5316:   UPDATE t1 SET b=quote(zeroblob(current_date)) WHERE t1 MATCH 't*';",
          "5317:   INSERT INTO t1(b) VALUES(x'78');",
          "5318:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "5319: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}