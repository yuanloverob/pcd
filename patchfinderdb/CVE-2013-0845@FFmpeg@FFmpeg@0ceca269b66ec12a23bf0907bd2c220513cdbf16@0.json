{
  "cve_id": "CVE-2013-0845",
  "cve_desc": "libavcodec/alsdec.c in FFmpeg before 1.0.4 allows remote attackers to have an unspecified impact via a crafted block length, which triggers an out-of-bounds write.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "0ceca269b66ec12a23bf0907bd2c220513cdbf16",
  "patch_info": {
    "commit_hash": "0ceca269b66ec12a23bf0907bd2c220513cdbf16",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0ceca269b66ec12a23bf0907bd2c220513cdbf16",
    "files": [
      "libavcodec/alsdec.c"
    ],
    "message": "alsdec: check block length\n\nFix writing over the end\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/alsdec.c||libavcodec/alsdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/alsdec.c||libavcodec/alsdec.c": [
      "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "557: {",
      "558:     ALSSpecificConfig *sconf = &ctx->sconf;",
      "559:     AVCodecContext *avctx    = ctx->avctx;",
      "560:     GetBitContext *gb        = &ctx->gb;",
      "564:     bd->js_blocks    = get_bits1(gb);",
      "",
      "[Removed Lines]",
      "556: static void read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
      "",
      "[Added Lines]",
      "556: static int read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
      "562:     if (bd->block_length <= 0)",
      "563:         return -1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "576: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "580:     return 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "972:         if (read_var_block_data(ctx, bd))",
      "973:             return -1;",
      "974:     } else {",
      "976:     }",
      "978:     return 0;",
      "",
      "[Removed Lines]",
      "975:         read_const_block_data(ctx, bd);",
      "",
      "[Added Lines]",
      "980:         if (read_const_block_data(ctx, bd) < 0)",
      "981:             return -1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "760929117df0d6349a2cb56af084d8a13ee7f33a",
      "candidate_info": {
        "commit_hash": "760929117df0d6349a2cb56af084d8a13ee7f33a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/760929117df0d6349a2cb56af084d8a13ee7f33a",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: check block length\n\nFix writing over the end\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 0ceca269b66ec12a23bf0907bd2c220513cdbf16)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "555: {",
          "556:     ALSSpecificConfig *sconf = &ctx->sconf;",
          "557:     AVCodecContext *avctx    = ctx->avctx;",
          "558:     GetBitContext *gb        = &ctx->gb;",
          "562:     bd->js_blocks    = get_bits1(gb);",
          "",
          "[Removed Lines]",
          "554: static void read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
          "",
          "[Added Lines]",
          "554: static int read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
          "560:     if (bd->block_length <= 0)",
          "561:         return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "574: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578:     return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "970:         if (read_var_block_data(ctx, bd))",
          "971:             return -1;",
          "972:     } else {",
          "974:     }",
          "976:     return 0;",
          "",
          "[Removed Lines]",
          "973:         read_const_block_data(ctx, bd);",
          "",
          "[Added Lines]",
          "978:         if (read_const_block_data(ctx, bd) < 0)",
          "979:             return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6df0d3e2916c223dbe4262bf1b876dff1cb3f980",
      "candidate_info": {
        "commit_hash": "6df0d3e2916c223dbe4262bf1b876dff1cb3f980",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6df0d3e2916c223dbe4262bf1b876dff1cb3f980",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: check block length\n\nFix writing over the end\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 0ceca269b66ec12a23bf0907bd2c220513cdbf16)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "556: {",
          "557:     ALSSpecificConfig *sconf = &ctx->sconf;",
          "558:     AVCodecContext *avctx    = ctx->avctx;",
          "559:     GetBitContext *gb        = &ctx->gb;",
          "563:     bd->js_blocks    = get_bits1(gb);",
          "",
          "[Removed Lines]",
          "555: static void read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
          "",
          "[Added Lines]",
          "555: static int read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)",
          "561:     if (bd->block_length <= 0)",
          "562:         return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "575: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "579:     return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "971:         if (read_var_block_data(ctx, bd))",
          "972:             return -1;",
          "973:     } else {",
          "975:     }",
          "977:     return 0;",
          "",
          "[Removed Lines]",
          "974:         read_const_block_data(ctx, bd);",
          "",
          "[Added Lines]",
          "979:         if (read_const_block_data(ctx, bd) < 0)",
          "980:             return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79bfba14b78f126aa75a6d15cb6a5ce3c428eaf1",
      "candidate_info": {
        "commit_hash": "79bfba14b78f126aa75a6d15cb6a5ce3c428eaf1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/79bfba14b78f126aa75a6d15cb6a5ce3c428eaf1",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: Use AVERROR_INVALIDDATA in read_const_block_data\n\nReviewed-by: Thilo Borgmann <thilo.borgmann@googlemail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:     GetBitContext *gb        = &ctx->gb;",
          "562:     if (bd->block_length <= 0)",
          "",
          "[Removed Lines]",
          "563:         return -1;",
          "",
          "[Added Lines]",
          "563:         return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1818a1130def42215ccb607edee9a2f370de6a6c",
      "candidate_info": {
        "commit_hash": "1818a1130def42215ccb607edee9a2f370de6a6c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/1818a1130def42215ccb607edee9a2f370de6a6c",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: propagate error codes in read_block()\n\nReviewed-by: Thilo Borgmann <thilo.borgmann@googlemail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "970: static int read_block(ALSDecContext *ctx, ALSBlockData *bd)",
          "971: {",
          "972:     GetBitContext *gb        = &ctx->gb;",
          "976:     if (get_bits1(gb)) {",
          "979:     } else {",
          "982:     }",
          "984:     return 0;",
          "",
          "[Removed Lines]",
          "977:         if (read_var_block_data(ctx, bd) < 0)",
          "978:             return -1;",
          "980:         if (read_const_block_data(ctx, bd) < 0)",
          "981:             return -1;",
          "",
          "[Added Lines]",
          "973:     int ret;",
          "978:         if ((ret = read_var_block_data(ctx, bd)) < 0)",
          "979:             return ret;",
          "981:         if ((ret = read_const_block_data(ctx, bd)) < 0)",
          "982:             return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "800637709c8253862f9cb19f5f9be44a8873a693",
      "candidate_info": {
        "commit_hash": "800637709c8253862f9cb19f5f9be44a8873a693",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/800637709c8253862f9cb19f5f9be44a8873a693",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: minor simplification in read_block()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "983:     if (get_bits1(gb)) {",
          "984:         ret = read_var_block_data(ctx, bd);",
          "985:     } else {",
          "988:     }",
          "990:     return ret;",
          "",
          "[Removed Lines]",
          "986:         if ((ret = read_const_block_data(ctx, bd)) < 0)",
          "987:             return ret;",
          "",
          "[Added Lines]",
          "986:         ret = read_const_block_data(ctx, bd);",
          "",
          "---------------"
        ]
      }
    }
  ]
}