{
  "cve_id": "CVE-2018-16426",
  "cve_desc": "Endless recursion when handling responses from an IAS-ECC card in iasecc_select_file in libopensc/card-iasecc.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to hang or crash the opensc library using programs.",
  "repo": "OpenSC/OpenSC",
  "patch_hash": "03628449b75a93787eb2359412a3980365dda49b",
  "patch_info": {
    "commit_hash": "03628449b75a93787eb2359412a3980365dda49b",
    "repo": "OpenSC/OpenSC",
    "commit_url": "https://github.com/OpenSC/OpenSC/commit/03628449b75a93787eb2359412a3980365dda49b",
    "files": [
      "src/libopensc/card-iasecc.c"
    ],
    "message": "iasecc: fixed unbound recursion",
    "before_after_code_files": [
      "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c"
    ]
  },
  "patch_diff": {
    "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c": [
      "File: src/libopensc/card-iasecc.c -> src/libopensc/card-iasecc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "827:  sc_log(ctx, \"iasecc_select_file() path:%s\", sc_print_path(path));",
      "829:  sc_print_cache(card);",
      "831:   sc_log(ctx, \"EF.ATR(aid:'%s')\", card->ef_atr ? sc_dump_hex(card->ef_atr->aid.value, card->ef_atr->aid.len) : \"\");",
      "833:   rv = iasecc_select_mf(card, file_out);",
      "834:   LOG_TEST_RET(ctx, rv, \"MF selection error\");",
      "840:  }",
      "842:  if (lpath.aid.len) {",
      "",
      "[Removed Lines]",
      "830:  if (lpath.len >= 2 && lpath.value[0] == 0x3F && lpath.value[1] == 0x00)   {",
      "836:   if (lpath.len >= 2 && lpath.value[0] == 0x3F && lpath.value[1] == 0x00)    {",
      "837:    memmove(&lpath.value[0], &lpath.value[2], lpath.len - 2);",
      "838:    lpath.len -=  2;",
      "839:   }",
      "",
      "[Added Lines]",
      "830:  if (path->type != SC_PATH_TYPE_DF_NAME",
      "831:    && lpath.len >= 2",
      "832:    && lpath.value[0] == 0x3F && lpath.value[1] == 0x00)   {",
      "838:   memmove(&lpath.value[0], &lpath.value[2], lpath.len - 2);",
      "839:   lpath.len -=  2;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0b44793900ee9ad72909242da761702e23b12167",
      "candidate_info": {
        "commit_hash": "0b44793900ee9ad72909242da761702e23b12167",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/0b44793900ee9ad72909242da761702e23b12167",
        "files": [
          "src/libopensc/card-tcos.c"
        ],
        "message": "tcos: use ISO7816 fci parser",
        "before_after_code_files": [
          "src/libopensc/card-tcos.c||src/libopensc/card-tcos.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/1447"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-tcos.c||src/libopensc/card-tcos.c": [
          "File: src/libopensc/card-tcos.c -> src/libopensc/card-tcos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:  sc_apdu_t apdu;",
          "344:  sc_file_t *file=NULL;",
          "345:  u8 buf[SC_MAX_APDU_BUFFER_SIZE], pathbuf[SC_MAX_PATH_SIZE], *path = pathbuf;",
          "347:  int r, pathlen;",
          "349:  assert(card != NULL && in_path != NULL);",
          "",
          "[Removed Lines]",
          "346:  unsigned int i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "408:  file->path = *in_path;",
          "447:  parse_sec_attr(card, file, file->sec_attr, file->sec_attr_len);",
          "",
          "[Removed Lines]",
          "410:  for(i=2; i+1<apdu.resplen && i+1+apdu.resp[i+1]<apdu.resplen; i+=2+apdu.resp[i+1]){",
          "411:   size_t j, len=apdu.resp[i+1];",
          "412:   unsigned char type=apdu.resp[i], *d=apdu.resp+i+2;",
          "414:   switch (type) {",
          "415:   case 0x80:",
          "416:   case 0x81:",
          "417:    file->size=0;",
          "418:    for(j=0; j<len; ++j) file->size = (file->size<<8) | d[j];",
          "419:    break;",
          "420:   case 0x82:",
          "421:    file->shareable = (d[0] & 0x40) ? 1 : 0;",
          "422:    file->ef_structure = d[0] & 7;",
          "423:    switch ((d[0]>>3) & 7) {",
          "424:    case 0: file->type = SC_FILE_TYPE_WORKING_EF; break;",
          "425:    case 7: file->type = SC_FILE_TYPE_DF; break;",
          "426:    default:",
          "427:     sc_debug(ctx, SC_LOG_DEBUG_NORMAL, \"invalid file type %02X in file descriptor\\n\", d[0]);",
          "428:     SC_FUNC_RETURN(ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_UNKNOWN_DATA_RECEIVED);",
          "429:    }",
          "430:    break;",
          "431:   case 0x83:",
          "432:    file->id = (d[0]<<8) | d[1];",
          "433:    break;",
          "434:   case 0x84:",
          "435:    file->namelen = MIN(sizeof file->name, len);",
          "436:    memcpy(file->name, d, file->namelen);",
          "437:    break;",
          "438:   case 0x86:",
          "439:    sc_file_set_sec_attr(file, d, len);",
          "440:    break;",
          "441:   default:",
          "442:    if (len>0) sc_file_set_prop_attr(file, d, len);",
          "443:   }",
          "444:  }",
          "445:  file->magic = SC_FILE_MAGIC;",
          "",
          "[Added Lines]",
          "409:  iso_ops->process_fci(card, file, apdu.resp, apdu.resplen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "384626533e3596f796f860a37ebb72e093939c41",
      "candidate_info": {
        "commit_hash": "384626533e3596f796f860a37ebb72e093939c41",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/384626533e3596f796f860a37ebb72e093939c41",
        "files": [
          "src/libopensc/card-piv.c"
        ],
        "message": "PIV Security Changes\n\nAdd return code if \"out\" is smaller then received data.\n\nRemove extra blanks.",
        "before_after_code_files": [
          "src/libopensc/card-piv.c||src/libopensc/card-piv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/1447"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-piv.c||src/libopensc/card-piv.c": [
          "File: src/libopensc/card-piv.c -> src/libopensc/card-piv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2369:  r = piv_general_io(card, 0x87, real_alg_id, priv->key_ref,",
          "2370:    sbuf, p - sbuf, &rbuf, &rbuflen);",
          "2375:   if (body) {",
          "2376:    tag = sc_asn1_find_tag(card->ctx, body,  bodylen, 0x82, &taglen);",
          "2377:    if (tag) {",
          "2378:     memcpy(out, tag, taglen);",
          "2379:     r = taglen;",
          "2381:   } else",
          "2382:    r = SC_ERROR_INVALID_DATA;",
          "2383:  }",
          "",
          "[Removed Lines]",
          "2372:  if ( r >= 0) {",
          "2373:    body = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x7c, &bodylen);",
          "2380:    }",
          "",
          "[Added Lines]",
          "2372:  if (r >= 0) {",
          "2373:   body = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x7c, &bodylen);",
          "2379:    } else",
          "2380:     r = SC_ERROR_INVALID_DATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5d15105dd4cc91e54c86efbd75f07c6f21bb281",
      "candidate_info": {
        "commit_hash": "d5d15105dd4cc91e54c86efbd75f07c6f21bb281",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/d5d15105dd4cc91e54c86efbd75f07c6f21bb281",
        "files": [
          "src/libopensc/card-cac.c"
        ],
        "message": "cac: Ignore end of content errors (#7)\n\nThe CAC buffers are split to separate TL and V buffers so we need to ignore this error",
        "before_after_code_files": [
          "src/libopensc/card-cac.c||src/libopensc/card-cac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/1447"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-cac.c||src/libopensc/card-cac.c": [
          "File: src/libopensc/card-cac.c -> src/libopensc/card-cac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:     val_len -= len, tlv_len -= len, val_ptr += len, tlv_ptr += len) {",
          "639:    tl_start = tl_ptr;",
          "641:     break;",
          "642:    tl_head_len = (tl_ptr - tl_start);",
          "643:    sc_simpletlv_put_tag(tag, len, tlv_ptr, tlv_len, &tlv_ptr);",
          "",
          "[Removed Lines]",
          "640:    if (sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len) != SC_SUCCESS)",
          "",
          "[Added Lines]",
          "640:    r = sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len);",
          "641:    if (r != SC_SUCCESS && r != SC_ERROR_TLV_END_OF_CONTENTS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "648:    if (val_len < len) {",
          "649:     len = val_len;",
          "650:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "650:     sc_log(card->ctx, \"Received too long value %\"SC_FORMAT_LEN_SIZE_T\"u, \"",
          "651:         \"while only %\"SC_FORMAT_LEN_SIZE_T\"u left. Truncating\", len, val_len);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "667:   for (tl_ptr = tl, val_ptr = val; tl_len >= 2;",
          "668:       val_len -= len, val_ptr += len, tl_len -= tl_head_len) {",
          "669:    tl_start = tl_ptr;",
          "671:     break;",
          "672:    tl_head_len = tl_ptr - tl_start;",
          "676:     break;",
          "678:    if (tag == CAC_TAG_CERTIFICATE) {",
          "679:     cert_len = len;",
          "",
          "[Removed Lines]",
          "670:    if (sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len) != SC_SUCCESS)",
          "675:    if (val_len < len)",
          "",
          "[Added Lines]",
          "673:    r = sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len);",
          "674:    if (r != SC_SUCCESS && r != SC_ERROR_TLV_END_OF_CONTENTS)",
          "679:    if (val_len < len) {",
          "680:     sc_log(card->ctx, \"Read incomplete value %\"SC_FORMAT_LEN_SIZE_T\"u, \"",
          "681:         \"while only %\"SC_FORMAT_LEN_SIZE_T\"u left\", len, val_len);",
          "683:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "687:    if (tag == CAC_TAG_MSCUID) {",
          "688:     sc_log_hex(card->ctx, \"MSCUID\", val_ptr, len);",
          "689:    }",
          "693:   }",
          "695:   if ((cert_type & 0x3) == 1) {",
          "",
          "[Removed Lines]",
          "690:    if ((val_len < len) || (tl_len < tl_head_len)) {",
          "691:     break;",
          "692:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e5a9a42c355f4ef64c40347d9046d0e063e589b",
      "candidate_info": {
        "commit_hash": "3e5a9a42c355f4ef64c40347d9046d0e063e589b",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/3e5a9a42c355f4ef64c40347d9046d0e063e589b",
        "files": [
          "src/libopensc/card-piv.c"
        ],
        "message": "Remove in PIV driver need for aid_file\n\nRemove aid_file and aidfile variables in card-piv.c. These are not needed\nas piv_select_aid parses the returned data from a SELECT AID command.\n\nIn response to e-mail from X41 group on 6/11/2018.\n\n On branch x41-piv-2\n Changes to be committed:\n\tmodified:   card-piv.c",
        "before_after_code_files": [
          "src/libopensc/card-piv.c||src/libopensc/card-piv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/1447"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-piv.c||src/libopensc/card-piv.c": [
          "File: src/libopensc/card-piv.c -> src/libopensc/card-piv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "147: };",
          "149: typedef struct piv_private_data {",
          "151:  int enumtag;",
          "",
          "[Removed Lines]",
          "150:  sc_file_t *aid_file;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "765: {",
          "766:  sc_apdu_t apdu;",
          "767:  u8 rbuf[SC_MAX_APDU_BUFFER_SIZE];",
          "",
          "[Removed Lines]",
          "764: static int piv_find_aid(sc_card_t * card, sc_file_t *aid_file)",
          "",
          "[Added Lines]",
          "762: static int piv_find_aid(sc_card_t * card)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "842:   if (apdu.resp[0] != 0x6f || apdu.resp[1] > apdu.resplen - 2 )",
          "843:    SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_NO_CARD_SUPPORT);",
          "847:   LOG_FUNC_RETURN(card->ctx, i);",
          "848:  }",
          "",
          "[Removed Lines]",
          "845:   card->ops->process_fci(card, aid_file, apdu.resp+2, apdu.resp[1]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2925:  SC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);",
          "2926:  if (priv) {",
          "2928:   if (priv->w_buf)",
          "2929:    free(priv->w_buf);",
          "2930:   if (priv->offCardCertURL)",
          "",
          "[Removed Lines]",
          "2927:   sc_file_free(priv->aid_file);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3073:   card->type = type;",
          "3077:  priv->selected_obj = -1;",
          "3079:  priv->logged_in = SC_PIN_STATE_UNKNOWN;",
          "",
          "[Removed Lines]",
          "3076:  priv->aid_file = sc_file_new();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3101:  if (i < 0) {",
          "3106:  }",
          "3108:  if (i >= 0) {",
          "",
          "[Removed Lines]",
          "3103:   sc_file_t aidfile;",
          "3105:   i = piv_find_aid(card, &aidfile);",
          "",
          "[Added Lines]",
          "3097:   i = piv_find_aid(card);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3489:  if ( priv->card_issues & CI_OTHER_AID_LOSE_STATE && priv->pin_cmd_verify_sw1 == 0x6DU) {",
          "3490:   sc_log(card->ctx, \"AID may be lost doing piv_find_aid and retry pin_cmd\");",
          "3494:   r = iso_drv->ops->pin_cmd(card, data, tries_left);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3483:   piv_find_aid(card);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79c0dbaa4e47ad8d9d43b327f5cc34c2f31dd873",
      "candidate_info": {
        "commit_hash": "79c0dbaa4e47ad8d9d43b327f5cc34c2f31dd873",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/79c0dbaa4e47ad8d9d43b327f5cc34c2f31dd873",
        "files": [
          "src/libopensc/card-cac.c"
        ],
        "message": "cac: Avoid OOB reads for inconsistent TLV structures",
        "before_after_code_files": [
          "src/libopensc/card-cac.c||src/libopensc/card-cac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/1447"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-cac.c||src/libopensc/card-cac.c": [
          "File: src/libopensc/card-cac.c -> src/libopensc/card-cac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1555:  for (; (tl < tl_end) && (val< val_end); val += len) {",
          "1557:   u8 tag;",
          "1559:    break;",
          "1560:   switch (tag) {",
          "1561:   case CAC_TAG_CUID:",
          "1562:    sc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE,\"TAG:CUID\");",
          "",
          "[Removed Lines]",
          "1558:   if (sc_simpletlv_read_tag(&tl, tl_end - tl, &tag, &len) != SC_SUCCESS)",
          "",
          "[Added Lines]",
          "1558:   r = sc_simpletlv_read_tag(&tl, tl_end - tl, &tag, &len);",
          "1559:   if (r != SC_SUCCESS && r != SC_ERROR_TLV_END_OF_CONTENTS) {",
          "1560:    sc_log(card->ctx, \"Failed to parse tag from buffer\");",
          "1562:   }",
          "1563:   if (val + len > val_end) {",
          "1564:    sc_log(card->ctx, \"Invalid length %\"SC_FORMAT_LEN_SIZE_T\"u\", len);",
          "1565:    break;",
          "1566:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}