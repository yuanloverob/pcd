{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7f88a24dc63ee8b5323c2236769517ad03d13926",
      "candidate_info": {
        "commit_hash": "7f88a24dc63ee8b5323c2236769517ad03d13926",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7f88a24dc63ee8b5323c2236769517ad03d13926",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.30.0 for the next release cycle.\n\nFossilOrigin-Name: 2578e3c64b0a92ab92143f18d107a1a180bd6fa87243661930771c4c080f8098",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d837ab0da52632699abc09320980606aef020df5020c253f99c97e24bf3c6d00",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5f6243f6d851422dc643977cee096786eb0d0fd",
      "candidate_info": {
        "commit_hash": "b5f6243f6d851422dc643977cee096786eb0d0fd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b5f6243f6d851422dc643977cee096786eb0d0fd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/vdbe.c"
        ],
        "message": "Set the affinity of regular columns prior to computing the values of generated columns.  Ticket [d7c3f125c925c522]\n\nFossilOrigin-Name: d47d66e3d360d8aa6203a855228d2bc40d9a00d69c15f5066b7632d8fb1ed2cc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f065cf003bd2a3a580cb5b9fa2eacd8be075fe8c2bbc5688e9a9406abbfb3804",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:   Walker w;",
          "230:   Column *pRedo;",
          "231:   int eProgress;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:   VdbeOp *pOp;",
          "234:   assert( pTab->tabFlags & TF_HasGenerated );",
          "235:   testcase( pTab->tabFlags & TF_HasVirtual );",
          "236:   testcase( pTab->tabFlags & TF_HasStored );",
          "241:   sqlite3TableAffinity(pParse->pVdbe, pTab, iRegStore);",
          "242:   if( (pTab->tabFlags & TF_HasStored)!=0",
          "243:    && (pOp = sqlite3VdbeGetOp(pParse->pVdbe,-1))->opcode==OP_Affinity",
          "244:   ){",
          "248:     int ii, jj;",
          "249:     char *zP4 = pOp->p4.z;",
          "250:     assert( zP4!=0 );",
          "251:     assert( pOp->p4type==P4_DYNAMIC );",
          "252:     for(ii=jj=0; zP4[jj]; ii++){",
          "253:       if( pTab->aCol[ii].colFlags & COLFLAG_VIRTUAL ){",
          "254:         continue;",
          "255:       }",
          "256:       if( pTab->aCol[ii].colFlags & COLFLAG_STORED ){",
          "257:         zP4[jj] = SQLITE_AFF_NONE;",
          "258:       }",
          "259:       jj++;",
          "260:     }",
          "261:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1191:     if( pTab->tabFlags & TF_HasGenerated ){",
          "1194:       sqlite3ComputeGeneratedColumns(pParse, regRowid+1, pTab);",
          "1195:     }",
          "1196: #endif",
          "",
          "[Removed Lines]",
          "1192:       testcase( pTab->tabFlags & TF_HasVirtual );",
          "1193:       testcase( pTab->tabFlags & TF_HasStored );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2818:   pIn1 = &aMem[pOp->p1];",
          "2819:   while( 1 /*exit-by-break*/ ){",
          "2820:     assert( pIn1 <= &p->aMem[(p->nMem+1 - p->nCursor)] );",
          "2822:     applyAffinity(pIn1, zAffinity[0], encoding);",
          "2823:     if( zAffinity[0]==SQLITE_AFF_REAL && (pIn1->flags & MEM_Int)!=0 ){",
          "",
          "[Removed Lines]",
          "2821:     assert( memIsValid(pIn1) );",
          "",
          "[Added Lines]",
          "2821:     assert( zAffinity[0]==SQLITE_AFF_NONE || memIsValid(pIn1) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec123e13014c585d1c408e1583714de438b50aff",
      "candidate_info": {
        "commit_hash": "ec123e13014c585d1c408e1583714de438b50aff",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ec123e13014c585d1c408e1583714de438b50aff",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/walker.c"
        ],
        "message": "Fix an indentation error and improve the placement of an assert() based on a tweet from Yuri Kotov.\n\nFossilOrigin-Name: e6314e386c6877c669bd32788d3886253b0a187bee2c3889f4eaba219f5e52c7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/walker.c||src/walker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f24e6ca4f23008212ec05cace9202dbeb37ee34530ead91fac2f5e3eac7f6347",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/walker.c||src/walker.c": [
          "File: src/walker.c -> src/walker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     rc = pWalker->xExprCallback(pWalker, pExpr);",
          "74:     if( rc ) return rc & WRC_Abort;",
          "75:     if( !ExprHasProperty(pExpr,(EP_TokenOnly|EP_Leaf)) ){",
          "76:       if( pExpr->pLeft && walkExpr(pWalker, pExpr->pLeft) ) return WRC_Abort;",
          "78:       if( pExpr->pRight ){",
          "79:         assert( !ExprHasProperty(pExpr, EP_WinFunc) );",
          "80:         pExpr = pExpr->pRight;",
          "",
          "[Removed Lines]",
          "77:        assert( pExpr->x.pList==0 || pExpr->pRight==0 );",
          "",
          "[Added Lines]",
          "76:       assert( pExpr->x.pList==0 || pExpr->pRight==0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f72a97925d6a382a58cef98510c8bc430e91ee25",
      "candidate_info": {
        "commit_hash": "f72a97925d6a382a58cef98510c8bc430e91ee25",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f72a97925d6a382a58cef98510c8bc430e91ee25",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add new test cases to test/fuzzdata8.db\n\nFossilOrigin-Name: f908cd40b275a5753d5167ebb25871300381687adcb3a7fcb1f14b57a20ee3d0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1e16d3e8fc60d39ca3899759ff15d355fdd7d3e23b325d8d2b0f954e11ce8dce",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03c5c213289baed1f809d3e58dee1e2abfb72f2b",
      "candidate_info": {
        "commit_hash": "03c5c213289baed1f809d3e58dee1e2abfb72f2b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/03c5c213289baed1f809d3e58dee1e2abfb72f2b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "OSSFuzz found a case where an assert() inside sqlite3ExprCompare() can be true.  Test case added to TH3.\n\nFossilOrigin-Name: 23b62fb160d86dc9d9073bcc714601f5b7695f96abd893eafecf4b2e565b87f2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d1db8d5894450b24bb0335983503d9bbf6cc48a0ae4b83291283fb2d32b6b25b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4784:      && sqlite3ExprCompare(pParse, pA->pLeft, pB->pLeft, iTab) ) return 2;",
          "4785:     if( sqlite3ExprCompare(pParse, pA->pRight, pB->pRight, iTab) ) return 2;",
          "4786:     if( sqlite3ExprListCompare(pA->x.pList, pB->x.pList, iTab) ) return 2;",
          "4789:       if( pA->iColumn!=pB->iColumn ) return 2;",
          "4790:       if( pA->iTable!=pB->iTable",
          "4791:        && (pA->iTable!=iTab || NEVER(pB->iTable>=0)) ) return 2;",
          "",
          "[Removed Lines]",
          "4787:     assert( (combinedFlags & EP_Reduced)==0 );",
          "4788:     if( pA->op!=TK_STRING && pA->op!=TK_TRUEFALSE ){",
          "",
          "[Added Lines]",
          "4787:     if( pA->op!=TK_STRING",
          "4788:      && pA->op!=TK_TRUEFALSE",
          "4789:      && (combinedFlags & EP_Reduced)==0",
          "4790:     ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}