{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2330be5641c907b7edd7cffdd3074e85d0091df5",
      "candidate_info": {
        "commit_hash": "2330be5641c907b7edd7cffdd3074e85d0091df5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/2330be5641c907b7edd7cffdd3074e85d0091df5",
        "files": [
          "Zend/zend_execute.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h"
        ],
        "message": "Fixed possible crash because of race conditions on modifying constants in shared memory",
        "before_after_code_files": [
          "Zend/zend_execute.c||Zend/zend_execute.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Zend/zend_execute.c||Zend/zend_execute.c": [
          "File: Zend/zend_execute.c -> Zend/zend_execute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "943:  }",
          "944: }",
          "947: static void zend_extension_statement_handler(const zend_extension *extension, zend_op_array *op_array TSRMLS_DC)",
          "948: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "946: static void zval_deep_copy(zval **p)",
          "947: {",
          "948:  zval *value;",
          "950:  ALLOC_ZVAL(value);",
          "952:  if (Z_TYPE_P(value) == IS_ARRAY) {",
          "953:   HashTable *ht;",
          "955:   ALLOC_HASHTABLE(ht);",
          "956:   zend_hash_init(ht, zend_hash_num_elements(Z_ARRVAL_P(value)), NULL, ZVAL_PTR_DTOR, 0);",
          "957:   zend_hash_copy(ht, Z_ARRVAL_P(value), (copy_ctor_func_t) zval_deep_copy, NULL, sizeof(zval *));",
          "958:   Z_ARRVAL_P(value) = ht;",
          "959:  } else {",
          "960:   zval_copy_ctor(value);",
          "961:  }",
          "962:  INIT_PZVAL(value);",
          "964: }",
          "",
          "---------------"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3422:   if (IS_CONSTANT_TYPE(Z_TYPE_P(assignment_value))) {",
          "3423:    Z_SET_REFCOUNT_P(assignment_value, 1);",
          "3424:    zval_update_constant(&assignment_value, 0 TSRMLS_CC);",
          "3425:   } else {",
          "3426:    zval_copy_ctor(assignment_value);",
          "3427:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3425:   } else if (Z_TYPE_P(assignment_value) == IS_ARRAY) {",
          "3426:    HashTable *ht;",
          "3428:    ALLOC_HASHTABLE(ht);",
          "3429:    zend_hash_init(ht, zend_hash_num_elements(Z_ARRVAL_P(assignment_value)), NULL, ZVAL_PTR_DTOR, 0);",
          "3430:    zend_hash_copy(ht, Z_ARRVAL_P(assignment_value), (copy_ctor_func_t) zval_deep_copy, NULL, sizeof(zval *));",
          "3431:    Z_ARRVAL_P(assignment_value) = ht;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "236365a016df0f1976b0f9d063340231eb1fb4c8",
      "candidate_info": {
        "commit_hash": "236365a016df0f1976b0f9d063340231eb1fb4c8",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/236365a016df0f1976b0f9d063340231eb1fb4c8",
        "files": [
          "ext/standard/http_fopen_wrapper.c"
        ],
        "message": "fix C89 compat",
        "before_after_code_files": [
          "ext/standard/http_fopen_wrapper.c||ext/standard/http_fopen_wrapper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/standard/http_fopen_wrapper.c||ext/standard/http_fopen_wrapper.c": [
          "File: ext/standard/http_fopen_wrapper.c -> ext/standard/http_fopen_wrapper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:  efree(transport_string);",
          "226:  if (stream && use_proxy && use_ssl) {",
          "228:   if (!context || php_stream_context_get_option(context, \"ssl\", \"peer_name\", &tmpzval) == FAILURE) {",
          "229:    MAKE_STD_ZVAL(ssl_proxy_peer_name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "227:   smart_str header = {0};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "231:    php_stream_context_set_option(stream->context, \"ssl\", \"peer_name\", ssl_proxy_peer_name);",
          "232:   }",
          "236:   smart_str_appendl(&header, \"CONNECT \", sizeof(\"CONNECT \")-1);",
          "237:   smart_str_appends(&header, resource->host);",
          "238:   smart_str_appendc(&header, ':');",
          "",
          "[Removed Lines]",
          "234:   smart_str header = {0};",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab353c0a555313765dc43fd85771e6c53485bd35",
      "candidate_info": {
        "commit_hash": "ab353c0a555313765dc43fd85771e6c53485bd35",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ab353c0a555313765dc43fd85771e6c53485bd35",
        "files": [
          "tests/run-tests.php"
        ],
        "message": "remove all references",
        "before_after_code_files": [
          "tests/run-tests.php||tests/run-tests.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/run-tests.php||tests/run-tests.php": [
          "File: tests/run-tests.php -> tests/run-tests.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:    if ($this->config->hasFlag('help') ||",
          "142:     $this->config->hasFlag('h')) {",
          "",
          "[Removed Lines]",
          "138:   public function __construct(TestsConfiguration &$config) {",
          "139:    $this->config = &$config;",
          "",
          "[Added Lines]",
          "138:   public function __construct(TestsConfiguration $config) {",
          "139:    $this->config = $config;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:    $paths = array();",
          "154:    $where = ($in != null) ? array($in) : $this->config['path'];",
          "157:     if ($path) {",
          "158:      if (is_dir($path)) {",
          "159:       $paths[] = $path;",
          "",
          "[Removed Lines]",
          "156:    foreach ($where as &$path) {",
          "",
          "[Added Lines]",
          "156:    foreach ($where as $path) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "361:    if (($handle = fopen($file, 'r'))) {",
          "362:     while (($line = fgets($handle))) {",
          "363:      $trim = trim($line);",
          "",
          "[Removed Lines]",
          "360:   public function __construct(TestsConfiguration &$config, &$file) {",
          "",
          "[Added Lines]",
          "360:   public function __construct(TestsConfiguration $config, $file) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "420:     }",
          "421:     fclose($handle);",
          "425:    }",
          "426:   }",
          "",
          "[Removed Lines]",
          "423:     $this->config = &$config;",
          "424:     $this->file = &$file;",
          "",
          "[Added Lines]",
          "423:     $this->config = $config;",
          "424:     $this->file = $file;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "532:    $log = sprintf(",
          "533:     '%s/%s.log',",
          "534:     dirname($this->file), basename($this->file));",
          "",
          "[Removed Lines]",
          "531:   protected function writeLog(&$result = null) {",
          "",
          "[Added Lines]",
          "531:   protected function writeLog($result = null) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "986a89ae1b47a4acc0b57a6e9027a91bd0ae7683",
      "candidate_info": {
        "commit_hash": "986a89ae1b47a4acc0b57a6e9027a91bd0ae7683",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/986a89ae1b47a4acc0b57a6e9027a91bd0ae7683",
        "files": [
          "phpdbg_lexer.c",
          "phpdbg_lexer.l"
        ],
        "message": "Fix issue krakjoe/phpdbg#99 register function has the same behavior as run",
        "before_after_code_files": [
          "phpdbg_lexer.c||phpdbg_lexer.c",
          "phpdbg_lexer.l||phpdbg_lexer.l"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_lexer.c||phpdbg_lexer.c": [
          "File: phpdbg_lexer.c -> phpdbg_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   };",
          "98:   YYDEBUG(0, *YYCURSOR);",
          "100:   yych = *YYCURSOR;",
          "103:     if (yych <= 0x00) goto yy6;",
          "104:     if (yych <= 0x08) goto yy11;",
          "105:    } else {",
          "108:    }",
          "109:   } else {",
          "114:    } else {",
          "119:    }",
          "120:   }",
          "122:   YYDEBUG(2, *YYCURSOR);",
          "123:   ++YYCURSOR;",
          "126:   }",
          "127: yy3:",
          "128:   YYDEBUG(3, *YYCURSOR);",
          "",
          "[Removed Lines]",
          "99:   YYFILL(3);",
          "101:   if (yych <= 0x1F) {",
          "102:    if (yych <= '\\t') {",
          "106:     if (yych <= '\\n') goto yy4;",
          "107:     if (yych != '\\r') goto yy11;",
          "110:    if (yych <= 'e') {",
          "111:     if (yych <= ' ') goto yy2;",
          "112:     if (yych <= 'd') goto yy11;",
          "113:     goto yy7;",
          "115:     if (yych <= 'q') goto yy11;",
          "116:     if (yych <= 'r') goto yy9;",
          "117:     if (yych <= 's') goto yy8;",
          "118:     goto yy11;",
          "121: yy2:",
          "124:   if (yybm[0+(yych = *YYCURSOR)] & 128) {",
          "125:    goto yy19;",
          "",
          "[Added Lines]",
          "99:   YYFILL(4);",
          "101:   if (yych <= 'D') {",
          "102:    if (yych <= '\\n') {",
          "105:     if (yych >= '\\n') goto yy4;",
          "107:     if (yych <= '\\r') {",
          "108:      if (yych <= '\\f') goto yy11;",
          "109:     } else {",
          "110:      if (yych != ' ') goto yy11;",
          "111:     }",
          "114:    if (yych <= 'd') {",
          "115:     if (yych <= 'Q') {",
          "116:      if (yych <= 'E') goto yy7;",
          "117:      goto yy11;",
          "118:     } else {",
          "119:      if (yych <= 'R') goto yy10;",
          "120:      if (yych <= 'S') goto yy8;",
          "121:      goto yy11;",
          "122:     }",
          "124:     if (yych <= 'q') {",
          "125:      if (yych <= 'e') goto yy7;",
          "126:      goto yy11;",
          "127:     } else {",
          "128:      if (yych <= 'r') goto yy9;",
          "129:      if (yych <= 's') goto yy8;",
          "130:      goto yy11;",
          "131:     }",
          "136:   if ((yych = *YYCURSOR) <= '\\f') {",
          "137:    if (yych <= 0x08) goto yy3;",
          "138:    if (yych <= '\\n') goto yy26;",
          "139:   } else {",
          "140:    if (yych <= '\\r') goto yy26;",
          "141:    if (yych == ' ') goto yy26;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:  YYCURSOR = LEX(text);",
          "135:  goto restart;",
          "136: }",
          "138: yy4:",
          "139:   YYDEBUG(4, *YYCURSOR);",
          "140:   ++YYCURSOR;",
          "143:   }",
          "144:   YYDEBUG(5, *YYCURSOR);",
          "145:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "146: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "147:   {",
          "148:  return 0;",
          "149: }",
          "151: yy6:",
          "152:   YYDEBUG(6, *YYCURSOR);",
          "153:   yych = *++YYCURSOR;",
          "154:   goto yy3;",
          "155: yy7:",
          "156:   YYDEBUG(7, *YYCURSOR);",
          "159:   goto yy3;",
          "160: yy8:",
          "161:   YYDEBUG(8, *YYCURSOR);",
          "164:   goto yy3;",
          "165: yy9:",
          "166:   YYDEBUG(9, *YYCURSOR);",
          "167:   yyaccept = 0;",
          "168:   yych = *(YYMARKER = ++YYCURSOR);",
          "169:   if (yych == 'u') goto yy12;",
          "170: yy10:",
          "171:   YYDEBUG(10, *YYCURSOR);",
          "180: yy11:",
          "181:   YYDEBUG(11, *YYCURSOR);",
          "182:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "137: #line 138 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "141:   if (yybm[0+(yych = *YYCURSOR)] & 128) {",
          "142:    goto yy19;",
          "150: #line 151 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "157:   yych = *++YYCURSOR;",
          "158:   if (yych == 'v') goto yy17;",
          "162:   yych = *++YYCURSOR;",
          "163:   if (yych == 'h') goto yy15;",
          "172:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "173: #line 155 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "174:   {",
          "175:  YYSETCONDITION(RAW);",
          "176:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "177:  return T_RUN;",
          "178: }",
          "179: #line 180 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "153: #line 154 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "157:   if ((yych = *YYCURSOR) <= '\\f') {",
          "158:    if (yych <= 0x08) goto yy5;",
          "159:    if (yych <= '\\n') goto yy26;",
          "160:   } else {",
          "161:    if (yych <= '\\r') goto yy26;",
          "162:    if (yych == ' ') goto yy26;",
          "164: yy5:",
          "171: #line 172 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "178:   yyaccept = 0;",
          "179:   yych = *(YYMARKER = ++YYCURSOR);",
          "180:   if (yych == 'V') goto yy22;",
          "181:   if (yych == 'v') goto yy22;",
          "185:   yyaccept = 0;",
          "186:   yych = *(YYMARKER = ++YYCURSOR);",
          "187:   if (yych == 'H') goto yy18;",
          "188:   if (yych == 'h') goto yy18;",
          "194:   if (yybm[0+yych] & 128) {",
          "195:    goto yy15;",
          "196:   }",
          "197:   if (yych == 'U') goto yy12;",
          "199:   goto yy3;",
          "202:   yyaccept = 0;",
          "203:   yych = *(YYMARKER = ++YYCURSOR);",
          "204:   if (yych == 'U') goto yy12;",
          "205:   if (yych == 'u') goto yy12;",
          "206:   goto yy3;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184: yy12:",
          "185:   YYDEBUG(12, *YYCURSOR);",
          "186:   yych = *++YYCURSOR;",
          "187:   if (yych == 'n') goto yy14;",
          "188:   YYDEBUG(13, *YYCURSOR);",
          "189:   YYCURSOR = YYMARKER;",
          "191: yy14:",
          "192:   YYDEBUG(14, *YYCURSOR);",
          "193:   yych = *++YYCURSOR;",
          "195: yy15:",
          "196:   YYDEBUG(15, *YYCURSOR);",
          "197:   ++YYCURSOR;",
          "198:   YYDEBUG(16, *YYCURSOR);",
          "199:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "200: #line 150 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "201:   {",
          "",
          "[Removed Lines]",
          "190:   goto yy10;",
          "194:   goto yy10;",
          "",
          "[Added Lines]",
          "214:   if (yych == 'N') goto yy14;",
          "216: yy13:",
          "219:   goto yy3;",
          "223:   if (yybm[0+yych] & 128) {",
          "224:    goto yy15;",
          "225:   }",
          "226:   goto yy13;",
          "230:   YYFILL(1);",
          "231:   yych = *YYCURSOR;",
          "233:   if (yybm[0+yych] & 128) {",
          "234:    goto yy15;",
          "235:   }",
          "236:   YYDEBUG(17, *YYCURSOR);",
          "237:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "238: #line 155 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "239:   {",
          "240:  YYSETCONDITION(RAW);",
          "241:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "242:  return T_RUN;",
          "243: }",
          "244: #line 245 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "245: yy18:",
          "246:   YYDEBUG(18, *YYCURSOR);",
          "247:   yych = *++YYCURSOR;",
          "248:   if (yych <= '\\f') {",
          "249:    if (yych <= 0x08) goto yy13;",
          "250:    if (yych >= '\\v') goto yy13;",
          "251:   } else {",
          "252:    if (yych <= '\\r') goto yy19;",
          "253:    if (yych != ' ') goto yy13;",
          "254:   }",
          "255: yy19:",
          "256:   YYDEBUG(19, *YYCURSOR);",
          "257:   ++YYCURSOR;",
          "258:   YYFILL(1);",
          "259:   yych = *YYCURSOR;",
          "260:   YYDEBUG(20, *YYCURSOR);",
          "261:   if (yych <= '\\f') {",
          "262:    if (yych <= 0x08) goto yy21;",
          "263:    if (yych <= '\\n') goto yy19;",
          "264:   } else {",
          "265:    if (yych <= '\\r') goto yy19;",
          "266:    if (yych == ' ') goto yy19;",
          "267:   }",
          "268: yy21:",
          "269:   YYDEBUG(21, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "204:  return T_SHELL;",
          "205: }",
          "209:   ++YYCURSOR;",
          "211:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "212: #line 145 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "213:   {",
          "",
          "[Removed Lines]",
          "206: #line 207 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "207: yy17:",
          "208:   YYDEBUG(17, *YYCURSOR);",
          "210:   YYDEBUG(18, *YYCURSOR);",
          "",
          "[Added Lines]",
          "277: #line 278 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "278: yy22:",
          "279:   YYDEBUG(22, *YYCURSOR);",
          "280:   yych = *++YYCURSOR;",
          "281:   if (yych <= '\\f') {",
          "282:    if (yych <= 0x08) goto yy13;",
          "283:    if (yych >= '\\v') goto yy13;",
          "284:   } else {",
          "285:    if (yych <= '\\r') goto yy23;",
          "286:    if (yych != ' ') goto yy13;",
          "287:   }",
          "288: yy23:",
          "289:   YYDEBUG(23, *YYCURSOR);",
          "291:   YYFILL(1);",
          "292:   yych = *YYCURSOR;",
          "293:   YYDEBUG(24, *YYCURSOR);",
          "294:   if (yych <= '\\f') {",
          "295:    if (yych <= 0x08) goto yy25;",
          "296:    if (yych <= '\\n') goto yy23;",
          "297:   } else {",
          "298:    if (yych <= '\\r') goto yy23;",
          "299:    if (yych == ' ') goto yy23;",
          "300:   }",
          "301: yy25:",
          "302:   YYDEBUG(25, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "215:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "216:  return T_EVAL;",
          "217: }",
          "221:   ++YYCURSOR;",
          "222:   YYFILL(1);",
          "223:   yych = *YYCURSOR;",
          "227:   }",
          "229:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "230: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "231:   {",
          "",
          "[Removed Lines]",
          "218: #line 219 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "219: yy19:",
          "220:   YYDEBUG(19, *YYCURSOR);",
          "224:   YYDEBUG(20, *YYCURSOR);",
          "225:   if (yybm[0+yych] & 128) {",
          "226:    goto yy19;",
          "228:   YYDEBUG(21, *YYCURSOR);",
          "",
          "[Added Lines]",
          "310: #line 311 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "311: yy26:",
          "312:   YYDEBUG(26, *YYCURSOR);",
          "316:   YYDEBUG(27, *YYCURSOR);",
          "317:   if (yych <= '\\f') {",
          "318:    if (yych <= 0x08) goto yy28;",
          "319:    if (yych <= '\\n') goto yy26;",
          "320:   } else {",
          "321:    if (yych <= '\\r') goto yy26;",
          "322:    if (yych == ' ') goto yy26;",
          "324: yy28:",
          "325:   YYDEBUG(28, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "234:  goto restart;",
          "235: }",
          "237:  }",
          "239: yyc_NORMAL:",
          "",
          "[Removed Lines]",
          "236: #line 237 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "333: #line 334 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "272:     16,  16,  16,  16,  16,  16,  16,  16,",
          "273:     16,  16,  16,  16,  16,  16,  16,  16,",
          "274:   };",
          "276:   YYFILL(11);",
          "277:   yych = *YYCURSOR;",
          "329:   }",
          "332:   ++YYCURSOR;",
          "333:   YYFILL(1);",
          "334:   yych = *YYCURSOR;",
          "336:   if (yybm[0+yych] & 8) {",
          "338:   }",
          "340:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "341: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "342:   {",
          "",
          "[Removed Lines]",
          "275:   YYDEBUG(22, *YYCURSOR);",
          "278:   if (yych <= ':') {",
          "279:    if (yych <= ' ') {",
          "280:     if (yych <= '\\n') {",
          "281:      if (yych <= 0x00) goto yy29;",
          "282:      if (yych <= 0x08) goto yy32;",
          "283:      if (yych >= '\\n') goto yy27;",
          "284:     } else {",
          "285:      if (yych == '\\r') goto yy24;",
          "286:      if (yych <= 0x1F) goto yy32;",
          "287:     }",
          "288:    } else {",
          "289:     if (yych <= '.') {",
          "290:      if (yych == '#') goto yy47;",
          "291:      if (yych <= '-') goto yy32;",
          "292:      goto yy34;",
          "293:     } else {",
          "294:      if (yych <= '/') goto yy32;",
          "295:      if (yych <= '0') goto yy37;",
          "296:      if (yych <= '9') goto yy34;",
          "297:      goto yy49;",
          "298:     }",
          "299:    }",
          "300:   } else {",
          "301:    if (yych <= 'i') {",
          "302:     if (yych <= 'd') {",
          "303:      if (yych == 'Z') goto yy38;",
          "304:      if (yych <= 'c') goto yy32;",
          "305:      goto yy39;",
          "306:     } else {",
          "307:      if (yych <= 'e') goto yy40;",
          "308:      if (yych <= 'f') goto yy41;",
          "309:      if (yych <= 'h') goto yy32;",
          "310:      goto yy30;",
          "311:     }",
          "312:    } else {",
          "313:     if (yych <= 's') {",
          "314:      if (yych <= 'm') goto yy32;",
          "315:      if (yych <= 'n') goto yy42;",
          "316:      if (yych <= 'o') goto yy43;",
          "317:      goto yy32;",
          "318:     } else {",
          "319:      if (yych <= 'x') {",
          "320:       if (yych <= 't') goto yy44;",
          "321:       goto yy32;",
          "322:      } else {",
          "323:       if (yych <= 'y') goto yy45;",
          "324:       if (yych <= 'z') goto yy46;",
          "325:       goto yy32;",
          "326:      }",
          "327:     }",
          "328:    }",
          "330: yy24:",
          "331:   YYDEBUG(24, *YYCURSOR);",
          "335:   YYDEBUG(25, *YYCURSOR);",
          "337:    goto yy24;",
          "339:   YYDEBUG(26, *YYCURSOR);",
          "",
          "[Added Lines]",
          "372:   YYDEBUG(29, *YYCURSOR);",
          "375:   YYDEBUG(-1, yych);",
          "376:   switch (yych) {",
          "377:   case 0x00: goto yy36;",
          "378:   case '\\t':",
          "379:   case '\\r':",
          "380:   case ' ': goto yy31;",
          "381:   case '\\n': goto yy34;",
          "382:   case '#': goto yy54;",
          "383:   case '.':",
          "384:   case '1':",
          "385:   case '2':",
          "386:   case '3':",
          "387:   case '4':",
          "388:   case '5':",
          "389:   case '6':",
          "390:   case '7':",
          "391:   case '8':",
          "392:   case '9': goto yy41;",
          "393:   case '0': goto yy44;",
          "394:   case ':': goto yy56;",
          "395:   case 'D':",
          "396:   case 'd': goto yy45;",
          "397:   case 'E':",
          "398:   case 'e': goto yy46;",
          "399:   case 'F':",
          "400:   case 'f': goto yy47;",
          "401:   case 'I':",
          "402:   case 'i': goto yy37;",
          "403:   case 'N':",
          "404:   case 'n': goto yy48;",
          "405:   case 'O':",
          "406:   case 'o': goto yy49;",
          "407:   case 'T':",
          "408:   case 't': goto yy50;",
          "409:   case 'Y':",
          "410:   case 'y': goto yy51;",
          "411:   case 'Z': goto yy52;",
          "412:   case 'z': goto yy53;",
          "413:   default: goto yy39;",
          "415: yy31:",
          "416:   YYDEBUG(31, *YYCURSOR);",
          "420:   YYDEBUG(32, *YYCURSOR);",
          "422:    goto yy31;",
          "424:   YYDEBUG(33, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "345:  goto restart;",
          "346: }",
          "350:   ++YYCURSOR;",
          "351:   if (yybm[0+(yych = *YYCURSOR)] & 8) {",
          "353:   }",
          "356:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "357: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "358:   {",
          "359:  return 0;",
          "360: }",
          "364:   yych = *++YYCURSOR;",
          "368:   yyaccept = 0;",
          "369:   yych = *(YYMARKER = ++YYCURSOR);",
          "374:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "375: #line 125 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "376:   {",
          "",
          "[Removed Lines]",
          "347: #line 348 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "348: yy27:",
          "349:   YYDEBUG(27, *YYCURSOR);",
          "352:    goto yy24;",
          "354: yy28:",
          "355:   YYDEBUG(28, *YYCURSOR);",
          "361: #line 362 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "362: yy29:",
          "363:   YYDEBUG(29, *YYCURSOR);",
          "365:   goto yy28;",
          "366: yy30:",
          "367:   YYDEBUG(30, *YYCURSOR);",
          "370:   if (yych == 'f') goto yy94;",
          "371:   goto yy33;",
          "372: yy31:",
          "373:   YYDEBUG(31, *YYCURSOR);",
          "",
          "[Added Lines]",
          "432: #line 433 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "433: yy34:",
          "434:   YYDEBUG(34, *YYCURSOR);",
          "437:    goto yy31;",
          "439: yy35:",
          "440:   YYDEBUG(35, *YYCURSOR);",
          "446: #line 447 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "447: yy36:",
          "448:   YYDEBUG(36, *YYCURSOR);",
          "450:   goto yy35;",
          "451: yy37:",
          "452:   YYDEBUG(37, *YYCURSOR);",
          "455:   if (yych == 'F') goto yy105;",
          "456:   if (yych == 'f') goto yy105;",
          "457:   goto yy40;",
          "458: yy38:",
          "459:   YYDEBUG(38, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "379:  yylval->len = yyleng;",
          "380:  return T_ID;",
          "381: }",
          "385:   yyaccept = 0;",
          "386:   YYMARKER = ++YYCURSOR;",
          "387:   YYFILL(3);",
          "388:   yych = *YYCURSOR;",
          "391:   if (yybm[0+yych] & 16) {",
          "393:   }",
          "398:   yyaccept = 1;",
          "399:   YYMARKER = ++YYCURSOR;",
          "400:   YYFILL(3);",
          "401:   yych = *YYCURSOR;",
          "403:   if (yybm[0+yych] & 32) {",
          "405:   }",
          "406:   if (yych <= 0x1F) {",
          "407:    if (yych <= '\\n') {",
          "410:    } else {",
          "412:    }",
          "413:   } else {",
          "414:    if (yych <= '#') {",
          "417:    } else {",
          "420:    }",
          "421:   }",
          "424:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "425: #line 106 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "426:   {",
          "",
          "[Removed Lines]",
          "382: #line 383 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "383: yy32:",
          "384:   YYDEBUG(32, *YYCURSOR);",
          "389: yy33:",
          "390:   YYDEBUG(33, *YYCURSOR);",
          "392:    goto yy32;",
          "394:   if (yych <= '9') goto yy31;",
          "395:   goto yy54;",
          "396: yy34:",
          "397:   YYDEBUG(34, *YYCURSOR);",
          "402:   YYDEBUG(35, *YYCURSOR);",
          "404:    goto yy34;",
          "408:     if (yych <= 0x00) goto yy36;",
          "409:     if (yych <= 0x08) goto yy32;",
          "411:     if (yych != '\\r') goto yy32;",
          "415:     if (yych <= ' ') goto yy36;",
          "416:     if (yych <= '\"') goto yy32;",
          "418:     if (yych == ':') goto yy54;",
          "419:     goto yy32;",
          "422: yy36:",
          "423:   YYDEBUG(36, *YYCURSOR);",
          "",
          "[Added Lines]",
          "468: #line 469 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "469: yy39:",
          "470:   YYDEBUG(39, *YYCURSOR);",
          "475: yy40:",
          "476:   YYDEBUG(40, *YYCURSOR);",
          "478:    goto yy39;",
          "480:   if (yych <= '9') goto yy38;",
          "481:   goto yy61;",
          "482: yy41:",
          "483:   YYDEBUG(41, *YYCURSOR);",
          "488:   YYDEBUG(42, *YYCURSOR);",
          "490:    goto yy41;",
          "494:     if (yych <= 0x00) goto yy43;",
          "495:     if (yych <= 0x08) goto yy39;",
          "497:     if (yych != '\\r') goto yy39;",
          "501:     if (yych <= ' ') goto yy43;",
          "502:     if (yych <= '\"') goto yy39;",
          "504:     if (yych == ':') goto yy61;",
          "505:     goto yy39;",
          "508: yy43:",
          "509:   YYDEBUG(43, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "428:  yylval->num = atoi(yytext);",
          "429:  return T_DIGITS;",
          "430: }",
          "434:   yyaccept = 1;",
          "435:   yych = *(YYMARKER = ++YYCURSOR);",
          "436:   if (yybm[0+yych] & 32) {",
          "438:   }",
          "439:   if (yych <= 0x1F) {",
          "440:    if (yych <= '\\n') {",
          "444:    } else {",
          "447:    }",
          "448:   } else {",
          "449:    if (yych <= '#') {",
          "453:    } else {",
          "456:    }",
          "457:   }",
          "460:   yyaccept = 0;",
          "461:   yych = *(YYMARKER = ++YYCURSOR);",
          "466:   yyaccept = 0;",
          "467:   yych = *(YYMARKER = ++YYCURSOR);",
          "472:   yyaccept = 0;",
          "473:   yych = *(YYMARKER = ++YYCURSOR);",
          "478:   yyaccept = 0;",
          "479:   yych = *(YYMARKER = ++YYCURSOR);",
          "484:   yyaccept = 0;",
          "485:   yych = *(YYMARKER = ++YYCURSOR);",
          "490:   yyaccept = 0;",
          "491:   yych = *(YYMARKER = ++YYCURSOR);",
          "497:   yyaccept = 0;",
          "498:   yych = *(YYMARKER = ++YYCURSOR);",
          "503:   yyaccept = 0;",
          "504:   yych = *(YYMARKER = ++YYCURSOR);",
          "509:   yyaccept = 0;",
          "510:   yych = *(YYMARKER = ++YYCURSOR);",
          "515:   ++YYCURSOR;",
          "517:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "518: #line 84 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "519:   {",
          "520:  return T_POUND;",
          "521: }",
          "525:   ++YYCURSOR;",
          "528:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "529: #line 90 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "530:   {",
          "531:  return T_COLON;",
          "532: }",
          "536:   ++YYCURSOR;",
          "538:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "539: #line 87 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "540:   {",
          "541:  return T_DCOLON;",
          "542: }",
          "546:   yyaccept = 0;",
          "547:   yych = *(YYMARKER = ++YYCURSOR);",
          "552:   yych = *++YYCURSOR;",
          "556:   YYCURSOR = YYMARKER;",
          "564:    } else {",
          "570:    }",
          "571:   } else {",
          "578:    } else {",
          "580:    }",
          "581:   }",
          "584:   yych = *++YYCURSOR;",
          "587:   ++YYCURSOR;",
          "589:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "590: #line 78 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "591:   {",
          "",
          "[Removed Lines]",
          "431: #line 432 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "432: yy37:",
          "433:   YYDEBUG(37, *YYCURSOR);",
          "437:    goto yy34;",
          "441:     if (yych <= 0x00) goto yy36;",
          "442:     if (yych <= 0x08) goto yy33;",
          "443:     goto yy36;",
          "445:     if (yych == '\\r') goto yy36;",
          "446:     goto yy33;",
          "450:     if (yych <= ' ') goto yy36;",
          "451:     if (yych <= '\"') goto yy33;",
          "452:     goto yy36;",
          "454:     if (yych == 'x') goto yy90;",
          "455:     goto yy33;",
          "458: yy38:",
          "459:   YYDEBUG(38, *YYCURSOR);",
          "462:   if (yych == 'E') goto yy87;",
          "463:   goto yy33;",
          "464: yy39:",
          "465:   YYDEBUG(39, *YYCURSOR);",
          "468:   if (yych == 'i') goto yy81;",
          "469:   goto yy33;",
          "470: yy40:",
          "471:   YYDEBUG(40, *YYCURSOR);",
          "474:   if (yych == 'n') goto yy76;",
          "475:   goto yy33;",
          "476: yy41:",
          "477:   YYDEBUG(41, *YYCURSOR);",
          "480:   if (yych == 'a') goto yy73;",
          "481:   goto yy33;",
          "482: yy42:",
          "483:   YYDEBUG(42, *YYCURSOR);",
          "486:   if (yych == 'o') goto yy71;",
          "487:   goto yy33;",
          "488: yy43:",
          "489:   YYDEBUG(43, *YYCURSOR);",
          "492:   if (yych == 'f') goto yy70;",
          "493:   if (yych == 'n') goto yy66;",
          "494:   goto yy33;",
          "495: yy44:",
          "496:   YYDEBUG(44, *YYCURSOR);",
          "499:   if (yych == 'r') goto yy68;",
          "500:   goto yy33;",
          "501: yy45:",
          "502:   YYDEBUG(45, *YYCURSOR);",
          "505:   if (yych == 'e') goto yy65;",
          "506:   goto yy33;",
          "507: yy46:",
          "508:   YYDEBUG(46, *YYCURSOR);",
          "511:   if (yych == 'e') goto yy53;",
          "512:   goto yy33;",
          "513: yy47:",
          "514:   YYDEBUG(47, *YYCURSOR);",
          "516:   YYDEBUG(48, *YYCURSOR);",
          "522: #line 523 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "523: yy49:",
          "524:   YYDEBUG(49, *YYCURSOR);",
          "526:   if ((yych = *YYCURSOR) == ':') goto yy51;",
          "527:   YYDEBUG(50, *YYCURSOR);",
          "533: #line 534 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "534: yy51:",
          "535:   YYDEBUG(51, *YYCURSOR);",
          "537:   YYDEBUG(52, *YYCURSOR);",
          "543: #line 544 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "544: yy53:",
          "545:   YYDEBUG(53, *YYCURSOR);",
          "548:   if (yych == 'n') goto yy59;",
          "549:   goto yy33;",
          "550: yy54:",
          "551:   YYDEBUG(54, *YYCURSOR);",
          "553:   if (yych == '/') goto yy56;",
          "554: yy55:",
          "555:   YYDEBUG(55, *YYCURSOR);",
          "557:   if (yyaccept <= 3) {",
          "558:    if (yyaccept <= 1) {",
          "559:     if (yyaccept <= 0) {",
          "560:      goto yy31;",
          "561:     } else {",
          "562:      goto yy36;",
          "563:     }",
          "565:     if (yyaccept <= 2) {",
          "566:      goto yy64;",
          "567:     } else {",
          "568:      goto yy67;",
          "569:     }",
          "572:    if (yyaccept <= 5) {",
          "573:     if (yyaccept <= 4) {",
          "574:      goto yy72;",
          "575:     } else {",
          "576:      goto yy93;",
          "577:     }",
          "579:     goto yy95;",
          "582: yy56:",
          "583:   YYDEBUG(56, *YYCURSOR);",
          "585:   if (yych != '/') goto yy55;",
          "586:   YYDEBUG(57, *YYCURSOR);",
          "588:   YYDEBUG(58, *YYCURSOR);",
          "",
          "[Added Lines]",
          "517: #line 518 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "518: yy44:",
          "519:   YYDEBUG(44, *YYCURSOR);",
          "523:    goto yy41;",
          "527:     if (yych <= 0x00) goto yy43;",
          "528:     if (yych <= 0x08) goto yy40;",
          "529:     goto yy43;",
          "531:     if (yych == '\\r') goto yy43;",
          "532:     goto yy40;",
          "536:     if (yych <= ' ') goto yy43;",
          "537:     if (yych <= '\"') goto yy40;",
          "538:     goto yy43;",
          "540:     if (yych == 'x') goto yy101;",
          "541:     goto yy40;",
          "544: yy45:",
          "545:   YYDEBUG(45, *YYCURSOR);",
          "548:   if (yych == 'I') goto yy95;",
          "549:   if (yych == 'i') goto yy95;",
          "550:   goto yy40;",
          "551: yy46:",
          "552:   YYDEBUG(46, *YYCURSOR);",
          "555:   if (yych == 'N') goto yy90;",
          "556:   if (yych == 'n') goto yy90;",
          "557:   goto yy40;",
          "558: yy47:",
          "559:   YYDEBUG(47, *YYCURSOR);",
          "562:   if (yych == 'A') goto yy87;",
          "563:   if (yych == 'a') goto yy87;",
          "564:   goto yy40;",
          "565: yy48:",
          "566:   YYDEBUG(48, *YYCURSOR);",
          "569:   if (yych == 'O') goto yy83;",
          "570:   if (yych == 'o') goto yy83;",
          "571:   goto yy40;",
          "572: yy49:",
          "573:   YYDEBUG(49, *YYCURSOR);",
          "576:   if (yych <= 'N') {",
          "577:    if (yych == 'F') goto yy82;",
          "578:    if (yych <= 'M') goto yy40;",
          "579:    goto yy76;",
          "580:   } else {",
          "581:    if (yych <= 'f') {",
          "582:     if (yych <= 'e') goto yy40;",
          "583:     goto yy82;",
          "584:    } else {",
          "585:     if (yych == 'n') goto yy76;",
          "586:     goto yy40;",
          "587:    }",
          "588:   }",
          "589: yy50:",
          "590:   YYDEBUG(50, *YYCURSOR);",
          "593:   if (yych == 'R') goto yy80;",
          "594:   if (yych == 'r') goto yy80;",
          "595:   goto yy40;",
          "596: yy51:",
          "597:   YYDEBUG(51, *YYCURSOR);",
          "600:   if (yych == 'E') goto yy75;",
          "601:   if (yych == 'e') goto yy75;",
          "602:   goto yy40;",
          "603: yy52:",
          "604:   YYDEBUG(52, *YYCURSOR);",
          "607:   if (yych == 'E') goto yy72;",
          "608:   goto yy40;",
          "609: yy53:",
          "610:   YYDEBUG(53, *YYCURSOR);",
          "613:   if (yych == 'e') goto yy60;",
          "614:   goto yy40;",
          "615: yy54:",
          "616:   YYDEBUG(54, *YYCURSOR);",
          "618:   YYDEBUG(55, *YYCURSOR);",
          "624: #line 625 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "625: yy56:",
          "626:   YYDEBUG(56, *YYCURSOR);",
          "628:   if ((yych = *YYCURSOR) == ':') goto yy58;",
          "629:   YYDEBUG(57, *YYCURSOR);",
          "635: #line 636 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "636: yy58:",
          "637:   YYDEBUG(58, *YYCURSOR);",
          "639:   YYDEBUG(59, *YYCURSOR);",
          "645: #line 646 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "646: yy60:",
          "647:   YYDEBUG(60, *YYCURSOR);",
          "650:   if (yych == 'n') goto yy66;",
          "651:   goto yy40;",
          "652: yy61:",
          "653:   YYDEBUG(61, *YYCURSOR);",
          "655:   if (yych == '/') goto yy63;",
          "656: yy62:",
          "657:   YYDEBUG(62, *YYCURSOR);",
          "659:   if (yyaccept <= 1) {",
          "660:    if (yyaccept <= 0) {",
          "661:     goto yy38;",
          "663:     goto yy43;",
          "666:    if (yyaccept <= 2) {",
          "667:     goto yy71;",
          "669:     goto yy104;",
          "672: yy63:",
          "673:   YYDEBUG(63, *YYCURSOR);",
          "675:   if (yych != '/') goto yy62;",
          "676:   YYDEBUG(64, *YYCURSOR);",
          "678:   YYDEBUG(65, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "594:  yylval->len = yyleng;",
          "595:  return T_PROTO;",
          "596: }",
          "600:   yyaccept = 0;",
          "601:   yych = *(YYMARKER = ++YYCURSOR);",
          "604:   yyaccept = 0;",
          "605:   yych = *(YYMARKER = ++YYCURSOR);",
          "609:   yyaccept = 0;",
          "610:   yych = *(YYMARKER = ++YYCURSOR);",
          "611:   if (yybm[0+yych] & 64) {",
          "613:   }",
          "617:   yyaccept = 2;",
          "618:   YYMARKER = ++YYCURSOR;",
          "619:   YYFILL(3);",
          "620:   yych = *YYCURSOR;",
          "622:   if (yybm[0+yych] & 64) {",
          "624:   }",
          "625:   if (yych <= 0x1F) {",
          "626:    if (yych <= '\\n') {",
          "629:    } else {",
          "631:    }",
          "632:   } else {",
          "633:    if (yych <= '#') {",
          "636:    } else {",
          "639:    }",
          "640:   }",
          "643:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "644: #line 118 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "645:   {",
          "",
          "[Removed Lines]",
          "597: #line 598 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "598: yy59:",
          "599:   YYDEBUG(59, *YYCURSOR);",
          "602:   if (yych != 'd') goto yy33;",
          "603:   YYDEBUG(60, *YYCURSOR);",
          "606:   if (yych != '_') goto yy33;",
          "607: yy61:",
          "608:   YYDEBUG(61, *YYCURSOR);",
          "612:    goto yy62;",
          "614:   goto yy33;",
          "615: yy62:",
          "616:   YYDEBUG(62, *YYCURSOR);",
          "621:   YYDEBUG(63, *YYCURSOR);",
          "623:    goto yy62;",
          "627:     if (yych <= 0x00) goto yy64;",
          "628:     if (yych <= 0x08) goto yy32;",
          "630:     if (yych != '\\r') goto yy32;",
          "634:     if (yych <= ' ') goto yy64;",
          "635:     if (yych <= '\"') goto yy32;",
          "637:     if (yych == ':') goto yy54;",
          "638:     goto yy32;",
          "641: yy64:",
          "642:   YYDEBUG(64, *YYCURSOR);",
          "",
          "[Added Lines]",
          "687: #line 688 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "688: yy66:",
          "689:   YYDEBUG(66, *YYCURSOR);",
          "692:   if (yych != 'd') goto yy40;",
          "693:   YYDEBUG(67, *YYCURSOR);",
          "696:   if (yych != '_') goto yy40;",
          "697: yy68:",
          "698:   YYDEBUG(68, *YYCURSOR);",
          "702:    goto yy69;",
          "704:   goto yy40;",
          "705: yy69:",
          "706:   YYDEBUG(69, *YYCURSOR);",
          "711:   YYDEBUG(70, *YYCURSOR);",
          "713:    goto yy69;",
          "717:     if (yych <= 0x00) goto yy71;",
          "718:     if (yych <= 0x08) goto yy39;",
          "720:     if (yych != '\\r') goto yy39;",
          "724:     if (yych <= ' ') goto yy71;",
          "725:     if (yych <= '\"') goto yy39;",
          "727:     if (yych == ':') goto yy61;",
          "728:     goto yy39;",
          "731: yy71:",
          "732:   YYDEBUG(71, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "648:  yylval->len = yyleng;",
          "649:  return T_OPCODE;",
          "650: }",
          "654:   yyaccept = 0;",
          "655:   yych = *(YYMARKER = ++YYCURSOR);",
          "660:   yych = *(YYMARKER = ++YYCURSOR);",
          "668:   } else {",
          "674:   }",
          "677:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "678: #line 94 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "679:   {",
          "",
          "[Removed Lines]",
          "651: #line 652 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "652: yy65:",
          "653:   YYDEBUG(65, *YYCURSOR);",
          "656:   if (yych != 's') goto yy33;",
          "657: yy66:",
          "658:   YYDEBUG(66, *YYCURSOR);",
          "659:   yyaccept = 3;",
          "661:   if (yych <= '\\r') {",
          "662:    if (yych <= 0x08) {",
          "663:     if (yych >= 0x01) goto yy33;",
          "664:    } else {",
          "665:     if (yych <= '\\n') goto yy67;",
          "666:     if (yych <= '\\f') goto yy33;",
          "667:    }",
          "669:    if (yych <= ' ') {",
          "670:     if (yych <= 0x1F) goto yy33;",
          "671:    } else {",
          "672:     if (yych != '#') goto yy33;",
          "673:    }",
          "675: yy67:",
          "676:   YYDEBUG(67, *YYCURSOR);",
          "",
          "[Added Lines]",
          "741: #line 742 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "742: yy72:",
          "743:   YYDEBUG(72, *YYCURSOR);",
          "746:   if (yych != 'N') goto yy40;",
          "747:   YYDEBUG(73, *YYCURSOR);",
          "748:   yyaccept = 0;",
          "750:   if (yych != 'D') goto yy40;",
          "751:   YYDEBUG(74, *YYCURSOR);",
          "752:   yyaccept = 0;",
          "753:   yych = *(YYMARKER = ++YYCURSOR);",
          "754:   if (yych == '_') goto yy68;",
          "755:   goto yy40;",
          "756: yy75:",
          "757:   YYDEBUG(75, *YYCURSOR);",
          "758:   yyaccept = 0;",
          "759:   yych = *(YYMARKER = ++YYCURSOR);",
          "760:   if (yych == 'S') goto yy76;",
          "761:   if (yych != 's') goto yy40;",
          "762: yy76:",
          "763:   YYDEBUG(76, *YYCURSOR);",
          "764:   yyaccept = 0;",
          "765:   yych = *(YYMARKER = ++YYCURSOR);",
          "766:   if (yych <= '\\f') {",
          "767:    if (yych <= 0x08) goto yy40;",
          "768:    if (yych >= '\\v') goto yy40;",
          "770:    if (yych <= '\\r') goto yy77;",
          "771:    if (yych != ' ') goto yy40;",
          "773: yy77:",
          "774:   YYDEBUG(77, *YYCURSOR);",
          "775:   ++YYCURSOR;",
          "776:   YYFILL(1);",
          "777:   yych = *YYCURSOR;",
          "778:   YYDEBUG(78, *YYCURSOR);",
          "779:   if (yych <= '\\f') {",
          "780:    if (yych <= 0x08) goto yy79;",
          "781:    if (yych <= '\\n') goto yy77;",
          "782:   } else {",
          "783:    if (yych <= '\\r') goto yy77;",
          "784:    if (yych == ' ') goto yy77;",
          "785:   }",
          "786: yy79:",
          "787:   YYDEBUG(79, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "681:  yylval->num = 1;",
          "682:  return T_TRUTHY;",
          "683: }",
          "687:   yyaccept = 0;",
          "688:   yych = *(YYMARKER = ++YYCURSOR);",
          "691:   yyaccept = 0;",
          "692:   yych = *(YYMARKER = ++YYCURSOR);",
          "697:   yyaccept = 0;",
          "698:   yych = *(YYMARKER = ++YYCURSOR);",
          "703:   yych = *(YYMARKER = ++YYCURSOR);",
          "711:   } else {",
          "717:   }",
          "720:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "721: #line 100 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "722:   {",
          "",
          "[Removed Lines]",
          "684: #line 685 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "685: yy68:",
          "686:   YYDEBUG(68, *YYCURSOR);",
          "689:   if (yych != 'u') goto yy33;",
          "690:   YYDEBUG(69, *YYCURSOR);",
          "693:   if (yych == 'e') goto yy66;",
          "694:   goto yy33;",
          "695: yy70:",
          "696:   YYDEBUG(70, *YYCURSOR);",
          "699:   if (yych != 'f') goto yy33;",
          "700: yy71:",
          "701:   YYDEBUG(71, *YYCURSOR);",
          "702:   yyaccept = 4;",
          "704:   if (yych <= '\\r') {",
          "705:    if (yych <= 0x08) {",
          "706:     if (yych >= 0x01) goto yy33;",
          "707:    } else {",
          "708:     if (yych <= '\\n') goto yy72;",
          "709:     if (yych <= '\\f') goto yy33;",
          "710:    }",
          "712:    if (yych <= ' ') {",
          "713:     if (yych <= 0x1F) goto yy33;",
          "714:    } else {",
          "715:     if (yych != '#') goto yy33;",
          "716:    }",
          "718: yy72:",
          "719:   YYDEBUG(72, *YYCURSOR);",
          "",
          "[Added Lines]",
          "795: #line 796 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "796: yy80:",
          "797:   YYDEBUG(80, *YYCURSOR);",
          "800:   if (yych == 'U') goto yy81;",
          "801:   if (yych != 'u') goto yy40;",
          "802: yy81:",
          "803:   YYDEBUG(81, *YYCURSOR);",
          "806:   if (yych == 'E') goto yy76;",
          "807:   if (yych == 'e') goto yy76;",
          "808:   goto yy40;",
          "809: yy82:",
          "810:   YYDEBUG(82, *YYCURSOR);",
          "813:   if (yych == 'F') goto yy83;",
          "814:   if (yych != 'f') goto yy40;",
          "815: yy83:",
          "816:   YYDEBUG(83, *YYCURSOR);",
          "817:   yyaccept = 0;",
          "819:   if (yych <= '\\f') {",
          "820:    if (yych <= 0x08) goto yy40;",
          "821:    if (yych >= '\\v') goto yy40;",
          "823:    if (yych <= '\\r') goto yy84;",
          "824:    if (yych != ' ') goto yy40;",
          "826: yy84:",
          "827:   YYDEBUG(84, *YYCURSOR);",
          "828:   ++YYCURSOR;",
          "829:   YYFILL(1);",
          "830:   yych = *YYCURSOR;",
          "831:   YYDEBUG(85, *YYCURSOR);",
          "832:   if (yych <= '\\f') {",
          "833:    if (yych <= 0x08) goto yy86;",
          "834:    if (yych <= '\\n') goto yy84;",
          "835:   } else {",
          "836:    if (yych <= '\\r') goto yy84;",
          "837:    if (yych == ' ') goto yy84;",
          "838:   }",
          "839: yy86:",
          "840:   YYDEBUG(86, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "724:  yylval->num = 0;",
          "725:  return T_FALSY;",
          "726: }",
          "744:   yyaccept = 0;",
          "745:   yych = *(YYMARKER = ++YYCURSOR);",
          "748:   yyaccept = 0;",
          "749:   yych = *(YYMARKER = ++YYCURSOR);",
          "752:   yyaccept = 0;",
          "753:   yych = *(YYMARKER = ++YYCURSOR);",
          "756:   yyaccept = 0;",
          "757:   yych = *(YYMARKER = ++YYCURSOR);",
          "760:   yyaccept = 0;",
          "761:   yych = *(YYMARKER = ++YYCURSOR);",
          "766:   yyaccept = 0;",
          "767:   yych = *(YYMARKER = ++YYCURSOR);",
          "770:   yyaccept = 0;",
          "771:   yych = *(YYMARKER = ++YYCURSOR);",
          "774:   yyaccept = 0;",
          "775:   yych = *(YYMARKER = ++YYCURSOR);",
          "778:   yyaccept = 0;",
          "779:   yych = *(YYMARKER = ++YYCURSOR);",
          "782:   yyaccept = 0;",
          "783:   yych = *(YYMARKER = ++YYCURSOR);",
          "786:   yyaccept = 0;",
          "787:   yych = *(YYMARKER = ++YYCURSOR);",
          "792:   yyaccept = 0;",
          "793:   yych = *(YYMARKER = ++YYCURSOR);",
          "796:   yyaccept = 0;",
          "797:   yych = *(YYMARKER = ++YYCURSOR);",
          "800:   yyaccept = 0;",
          "801:   yych = *(YYMARKER = ++YYCURSOR);",
          "806:   yyaccept = 0;",
          "807:   yych = *(YYMARKER = ++YYCURSOR);",
          "808:   if (yybm[0+yych] & 128) {",
          "810:   }",
          "815:   YYMARKER = ++YYCURSOR;",
          "816:   YYFILL(3);",
          "817:   yych = *YYCURSOR;",
          "819:   if (yybm[0+yych] & 128) {",
          "821:   }",
          "822:   if (yych <= 0x1F) {",
          "823:    if (yych <= '\\n') {",
          "826:    } else {",
          "828:    }",
          "829:   } else {",
          "830:    if (yych <= '#') {",
          "833:    } else {",
          "836:    }",
          "837:   }",
          "840:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "841: #line 112 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "842:   {",
          "",
          "[Removed Lines]",
          "727: #line 728 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "728: yy73:",
          "729:   YYDEBUG(73, *YYCURSOR);",
          "730:   yyaccept = 0;",
          "731:   yych = *(YYMARKER = ++YYCURSOR);",
          "732:   if (yych != 'l') goto yy33;",
          "733:   YYDEBUG(74, *YYCURSOR);",
          "734:   yyaccept = 0;",
          "735:   yych = *(YYMARKER = ++YYCURSOR);",
          "736:   if (yych != 's') goto yy33;",
          "737:   YYDEBUG(75, *YYCURSOR);",
          "738:   yyaccept = 0;",
          "739:   yych = *(YYMARKER = ++YYCURSOR);",
          "740:   if (yych == 'e') goto yy71;",
          "741:   goto yy33;",
          "742: yy76:",
          "743:   YYDEBUG(76, *YYCURSOR);",
          "746:   if (yych != 'a') goto yy33;",
          "747:   YYDEBUG(77, *YYCURSOR);",
          "750:   if (yych != 'b') goto yy33;",
          "751:   YYDEBUG(78, *YYCURSOR);",
          "754:   if (yych != 'l') goto yy33;",
          "755:   YYDEBUG(79, *YYCURSOR);",
          "758:   if (yych != 'e') goto yy33;",
          "759:   YYDEBUG(80, *YYCURSOR);",
          "762:   if (yych == 'd') goto yy66;",
          "763:   goto yy33;",
          "764: yy81:",
          "765:   YYDEBUG(81, *YYCURSOR);",
          "768:   if (yych != 's') goto yy33;",
          "769:   YYDEBUG(82, *YYCURSOR);",
          "772:   if (yych != 'a') goto yy33;",
          "773:   YYDEBUG(83, *YYCURSOR);",
          "776:   if (yych != 'b') goto yy33;",
          "777:   YYDEBUG(84, *YYCURSOR);",
          "780:   if (yych != 'l') goto yy33;",
          "781:   YYDEBUG(85, *YYCURSOR);",
          "784:   if (yych != 'e') goto yy33;",
          "785:   YYDEBUG(86, *YYCURSOR);",
          "788:   if (yych == 'd') goto yy71;",
          "789:   goto yy33;",
          "790: yy87:",
          "791:   YYDEBUG(87, *YYCURSOR);",
          "794:   if (yych != 'N') goto yy33;",
          "795:   YYDEBUG(88, *YYCURSOR);",
          "798:   if (yych != 'D') goto yy33;",
          "799:   YYDEBUG(89, *YYCURSOR);",
          "802:   if (yych == '_') goto yy61;",
          "803:   goto yy33;",
          "804: yy90:",
          "805:   YYDEBUG(90, *YYCURSOR);",
          "809:    goto yy91;",
          "811:   goto yy33;",
          "812: yy91:",
          "813:   YYDEBUG(91, *YYCURSOR);",
          "814:   yyaccept = 5;",
          "818:   YYDEBUG(92, *YYCURSOR);",
          "820:    goto yy91;",
          "824:     if (yych <= 0x00) goto yy93;",
          "825:     if (yych <= 0x08) goto yy32;",
          "827:     if (yych != '\\r') goto yy32;",
          "831:     if (yych <= ' ') goto yy93;",
          "832:     if (yych <= '\"') goto yy32;",
          "834:     if (yych == ':') goto yy54;",
          "835:     goto yy32;",
          "838: yy93:",
          "839:   YYDEBUG(93, *YYCURSOR);",
          "",
          "[Added Lines]",
          "848: #line 849 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "849: yy87:",
          "850:   YYDEBUG(87, *YYCURSOR);",
          "853:   if (yych == 'L') goto yy88;",
          "854:   if (yych != 'l') goto yy40;",
          "855: yy88:",
          "856:   YYDEBUG(88, *YYCURSOR);",
          "859:   if (yych == 'S') goto yy89;",
          "860:   if (yych != 's') goto yy40;",
          "861: yy89:",
          "862:   YYDEBUG(89, *YYCURSOR);",
          "865:   if (yych == 'E') goto yy83;",
          "866:   if (yych == 'e') goto yy83;",
          "867:   goto yy40;",
          "868: yy90:",
          "869:   YYDEBUG(90, *YYCURSOR);",
          "872:   if (yych == 'A') goto yy91;",
          "873:   if (yych != 'a') goto yy40;",
          "874: yy91:",
          "875:   YYDEBUG(91, *YYCURSOR);",
          "878:   if (yych == 'B') goto yy92;",
          "879:   if (yych != 'b') goto yy40;",
          "880: yy92:",
          "881:   YYDEBUG(92, *YYCURSOR);",
          "884:   if (yych == 'L') goto yy93;",
          "885:   if (yych != 'l') goto yy40;",
          "886: yy93:",
          "887:   YYDEBUG(93, *YYCURSOR);",
          "890:   if (yych == 'E') goto yy94;",
          "891:   if (yych != 'e') goto yy40;",
          "892: yy94:",
          "893:   YYDEBUG(94, *YYCURSOR);",
          "896:   if (yych == 'D') goto yy76;",
          "897:   if (yych == 'd') goto yy76;",
          "898:   goto yy40;",
          "899: yy95:",
          "900:   YYDEBUG(95, *YYCURSOR);",
          "903:   if (yych == 'S') goto yy96;",
          "904:   if (yych != 's') goto yy40;",
          "905: yy96:",
          "906:   YYDEBUG(96, *YYCURSOR);",
          "909:   if (yych == 'A') goto yy97;",
          "910:   if (yych != 'a') goto yy40;",
          "911: yy97:",
          "912:   YYDEBUG(97, *YYCURSOR);",
          "915:   if (yych == 'B') goto yy98;",
          "916:   if (yych != 'b') goto yy40;",
          "917: yy98:",
          "918:   YYDEBUG(98, *YYCURSOR);",
          "921:   if (yych == 'L') goto yy99;",
          "922:   if (yych != 'l') goto yy40;",
          "923: yy99:",
          "924:   YYDEBUG(99, *YYCURSOR);",
          "927:   if (yych == 'E') goto yy100;",
          "928:   if (yych != 'e') goto yy40;",
          "929: yy100:",
          "930:   YYDEBUG(100, *YYCURSOR);",
          "933:   if (yych == 'D') goto yy83;",
          "934:   if (yych == 'd') goto yy83;",
          "935:   goto yy40;",
          "936: yy101:",
          "937:   YYDEBUG(101, *YYCURSOR);",
          "941:    goto yy102;",
          "943:   goto yy40;",
          "944: yy102:",
          "945:   YYDEBUG(102, *YYCURSOR);",
          "946:   yyaccept = 3;",
          "950:   YYDEBUG(103, *YYCURSOR);",
          "952:    goto yy102;",
          "956:     if (yych <= 0x00) goto yy104;",
          "957:     if (yych <= 0x08) goto yy39;",
          "959:     if (yych != '\\r') goto yy39;",
          "963:     if (yych <= ' ') goto yy104;",
          "964:     if (yych <= '\"') goto yy39;",
          "966:     if (yych == ':') goto yy61;",
          "967:     goto yy39;",
          "970: yy104:",
          "971:   YYDEBUG(104, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "844:  yylval->addr = strtoul(yytext, 0, 16);",
          "845:  return T_ADDR;",
          "846: }",
          "851:   yych = *(YYMARKER = ++YYCURSOR);",
          "859:   } else {",
          "865:   }",
          "868:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "869: #line 72 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "870:   {",
          "",
          "[Removed Lines]",
          "847: #line 848 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "848: yy94:",
          "849:   YYDEBUG(94, *YYCURSOR);",
          "850:   yyaccept = 6;",
          "852:   if (yych <= '\\r') {",
          "853:    if (yych <= 0x08) {",
          "854:     if (yych >= 0x01) goto yy33;",
          "855:    } else {",
          "856:     if (yych <= '\\n') goto yy95;",
          "857:     if (yych <= '\\f') goto yy33;",
          "858:    }",
          "860:    if (yych <= ' ') {",
          "861:     if (yych <= 0x1F) goto yy33;",
          "862:    } else {",
          "863:     if (yych != '#') goto yy33;",
          "864:    }",
          "866: yy95:",
          "867:   YYDEBUG(95, *YYCURSOR);",
          "",
          "[Added Lines]",
          "979: #line 980 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "980: yy105:",
          "981:   YYDEBUG(105, *YYCURSOR);",
          "982:   yyaccept = 0;",
          "984:   if (yych <= '\\f') {",
          "985:    if (yych <= 0x08) goto yy40;",
          "986:    if (yych >= '\\v') goto yy40;",
          "988:    if (yych <= '\\r') goto yy106;",
          "989:    if (yych != ' ') goto yy40;",
          "991: yy106:",
          "992:   YYDEBUG(106, *YYCURSOR);",
          "993:   ++YYCURSOR;",
          "994:   YYFILL(1);",
          "995:   yych = *YYCURSOR;",
          "996:   YYDEBUG(107, *YYCURSOR);",
          "997:   if (yych <= '\\f') {",
          "998:    if (yych <= 0x08) goto yy108;",
          "999:    if (yych <= '\\n') goto yy106;",
          "1000:   } else {",
          "1001:    if (yych <= '\\r') goto yy106;",
          "1002:    if (yych == ' ') goto yy106;",
          "1003:   }",
          "1004: yy108:",
          "1005:   YYDEBUG(108, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "872:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "873:  return T_IF;",
          "874: }",
          "876:  }",
          "878: yyc_RAW:",
          "",
          "[Removed Lines]",
          "875: #line 876 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "1013: #line 1014 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "911:     64,  64,  64,  64,  64,  64,  64,  64,",
          "912:     64,  64,  64,  64,  64,  64,  64,  64,",
          "913:   };",
          "915:   YYFILL(2);",
          "916:   yych = *YYCURSOR;",
          "917:   if (yybm[0+yych] & 32) {",
          "919:   }",
          "925:   ++YYCURSOR;",
          "926:   YYFILL(1);",
          "927:   yych = *YYCURSOR;",
          "929:   if (yybm[0+yych] & 32) {",
          "931:   }",
          "937:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "938: #line 132 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "939:   {",
          "",
          "[Removed Lines]",
          "914:   YYDEBUG(96, *YYCURSOR);",
          "918:    goto yy98;",
          "920:   if (yych <= 0x00) goto yy103;",
          "921:   if (yych == '\\n') goto yy101;",
          "922:   goto yy104;",
          "923: yy98:",
          "924:   YYDEBUG(98, *YYCURSOR);",
          "928:   YYDEBUG(99, *YYCURSOR);",
          "930:    goto yy98;",
          "932:   if (yych <= 0x00) goto yy100;",
          "933:   if (yych == '\\n') goto yy106;",
          "934:   goto yy104;",
          "935: yy100:",
          "936:   YYDEBUG(100, *YYCURSOR);",
          "",
          "[Added Lines]",
          "1052:   YYDEBUG(109, *YYCURSOR);",
          "1056:    goto yy111;",
          "1058:   if (yych <= 0x00) goto yy116;",
          "1059:   if (yych == '\\n') goto yy114;",
          "1060:   goto yy117;",
          "1061: yy111:",
          "1062:   YYDEBUG(111, *YYCURSOR);",
          "1066:   YYDEBUG(112, *YYCURSOR);",
          "1068:    goto yy111;",
          "1070:   if (yych <= 0x00) goto yy113;",
          "1071:   if (yych == '\\n') goto yy119;",
          "1072:   goto yy117;",
          "1073: yy113:",
          "1074:   YYDEBUG(113, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "942:  yylval->len = yyleng;",
          "943:  return T_INPUT;",
          "944: }",
          "948:   ++YYCURSOR;",
          "949:   if (yybm[0+(yych = *YYCURSOR)] & 128) {",
          "951:   }",
          "954:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "955: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "956:   {",
          "957:  return 0;",
          "958: }",
          "962:   yych = *++YYCURSOR;",
          "966:   ++YYCURSOR;",
          "967:   YYFILL(1);",
          "968:   yych = *YYCURSOR;",
          "970:   if (yybm[0+yych] & 64) {",
          "972:   }",
          "976:   ++YYCURSOR;",
          "977:   YYFILL(1);",
          "978:   yych = *YYCURSOR;",
          "980:   if (yybm[0+yych] & 128) {",
          "982:   }",
          "984:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "985: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "986:   {",
          "",
          "[Removed Lines]",
          "945: #line 946 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "946: yy101:",
          "947:   YYDEBUG(101, *YYCURSOR);",
          "950:    goto yy106;",
          "952: yy102:",
          "953:   YYDEBUG(102, *YYCURSOR);",
          "959: #line 960 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "960: yy103:",
          "961:   YYDEBUG(103, *YYCURSOR);",
          "963:   goto yy102;",
          "964: yy104:",
          "965:   YYDEBUG(104, *YYCURSOR);",
          "969:   YYDEBUG(105, *YYCURSOR);",
          "971:    goto yy104;",
          "973:   goto yy100;",
          "974: yy106:",
          "975:   YYDEBUG(106, *YYCURSOR);",
          "979:   YYDEBUG(107, *YYCURSOR);",
          "981:    goto yy106;",
          "983:   YYDEBUG(108, *YYCURSOR);",
          "",
          "[Added Lines]",
          "1083: #line 1084 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1084: yy114:",
          "1085:   YYDEBUG(114, *YYCURSOR);",
          "1088:    goto yy119;",
          "1090: yy115:",
          "1091:   YYDEBUG(115, *YYCURSOR);",
          "1097: #line 1098 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1098: yy116:",
          "1099:   YYDEBUG(116, *YYCURSOR);",
          "1101:   goto yy115;",
          "1102: yy117:",
          "1103:   YYDEBUG(117, *YYCURSOR);",
          "1107:   YYDEBUG(118, *YYCURSOR);",
          "1109:    goto yy117;",
          "1111:   goto yy113;",
          "1112: yy119:",
          "1113:   YYDEBUG(119, *YYCURSOR);",
          "1117:   YYDEBUG(120, *YYCURSOR);",
          "1119:    goto yy119;",
          "1121:   YYDEBUG(121, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "989:  goto restart;",
          "990: }",
          "992:  }",
          "993: }",
          "994: #line 168 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "[Removed Lines]",
          "991: #line 992 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "1129: #line 1130 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------"
        ],
        "phpdbg_lexer.l||phpdbg_lexer.l": [
          "File: phpdbg_lexer.l -> phpdbg_lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: re2c:yyfill:check = 0;",
          "58: T_RUN_SHORT \"r\"",
          "59: WS          [ \\r\\n\\t]+",
          "60: DIGITS      [0-9\\.]+",
          "",
          "[Removed Lines]",
          "46: T_TRUE      \"true\"",
          "47: T_YES       \"yes\"",
          "48: T_ON        \"on\"",
          "49: T_ENABLED   \"enabled\"",
          "50: T_FALSE     \"false\"",
          "51: T_NO        \"no\"",
          "52: T_OFF       \"off\"",
          "53: T_DISABLED  \"disabled\"",
          "54: T_EVAL      \"ev\"",
          "55: T_SHELL     \"sh\"",
          "56: T_IF        \"if\"",
          "57: T_RUN       \"run\"",
          "",
          "[Added Lines]",
          "46: T_TRUE      'true'",
          "47: T_YES       'yes'",
          "48: T_ON        'on'",
          "49: T_ENABLED   'enabled'",
          "50: T_FALSE     'false'",
          "51: T_NO        'no'",
          "52: T_OFF       'off'",
          "53: T_DISABLED  'disabled'",
          "54: T_EVAL      'ev'",
          "55: T_SHELL     'sh'",
          "56: T_IF        'if'",
          "57: T_RUN       'run'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:  return 0;",
          "70: }",
          "73:  YYSETCONDITION(RAW);",
          "74:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "75:  return T_IF;",
          "",
          "[Removed Lines]",
          "72: <NORMAL>{T_IF} {",
          "",
          "[Added Lines]",
          "72: <NORMAL>{T_IF}{WS} {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:  return T_COLON;",
          "92: }",
          "95:  phpdbg_init_param(yylval, NUMERIC_PARAM);",
          "96:  yylval->num = 1;",
          "97:  return T_TRUTHY;",
          "98: }",
          "101:  phpdbg_init_param(yylval, NUMERIC_PARAM);",
          "102:  yylval->num = 0;",
          "103:  return T_FALSY;",
          "",
          "[Removed Lines]",
          "94: <NORMAL>{T_YES}|{T_ON}|{T_ENABLED}|{T_TRUE} {",
          "100: <NORMAL>{T_NO}|{T_OFF}|{T_DISABLED}|{T_FALSE} {",
          "",
          "[Added Lines]",
          "94: <NORMAL>({T_YES}|{T_ON}|{T_ENABLED}|{T_TRUE}){WS} {",
          "100: <NORMAL>({T_NO}|{T_OFF}|{T_DISABLED}|{T_FALSE}){WS} {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "142:  goto restart;",
          "143: }",
          "146:  YYSETCONDITION(RAW);",
          "147:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "148:  return T_EVAL;",
          "149: }",
          "151:  YYSETCONDITION(RAW);",
          "152:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "153:  return T_SHELL;",
          "154: }",
          "156:  YYSETCONDITION(RAW);",
          "157:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "158:  return T_RUN;",
          "",
          "[Removed Lines]",
          "145: <INITIAL>{T_EVAL} {",
          "150: <INITIAL>{T_SHELL} {",
          "155: <INITIAL>{T_RUN}|{T_RUN_SHORT} {",
          "",
          "[Added Lines]",
          "145: <INITIAL>{T_EVAL}{WS} {",
          "150: <INITIAL>{T_SHELL}{WS} {",
          "155: <INITIAL>({T_RUN}|{T_RUN_SHORT}){WS} {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "438b6c5258021d72be3d48d46031ae516aaa0e19",
      "candidate_info": {
        "commit_hash": "438b6c5258021d72be3d48d46031ae516aaa0e19",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/438b6c5258021d72be3d48d46031ae516aaa0e19",
        "files": [
          "main/SAPI.c",
          "main/php_memory_streams.h",
          "main/streams/memory.c",
          "main/streams/php_stream_plain_wrapper.h",
          "main/streams/plain_wrapper.c"
        ],
        "message": "finish",
        "before_after_code_files": [
          "main/SAPI.c||main/SAPI.c",
          "main/php_memory_streams.h||main/php_memory_streams.h",
          "main/streams/memory.c||main/streams/memory.c",
          "main/streams/php_stream_plain_wrapper.h||main/streams/php_stream_plain_wrapper.h",
          "main/streams/plain_wrapper.c||main/streams/plain_wrapper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/SAPI.c||main/SAPI.c": [
          "File: main/SAPI.c -> main/SAPI.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:  }",
          "284:  if (sapi_module.read_post) {",
          "285:   int read_bytes;",
          "",
          "[Removed Lines]",
          "282:  SG(request_info).request_body = php_stream_temp_create(TEMP_STREAM_DEFAULT, SAPI_POST_BLOCK_SIZE);",
          "",
          "[Added Lines]",
          "282:  SG(request_info).request_body = php_stream_temp_create_ex(TEMP_STREAM_DEFAULT, SAPI_POST_BLOCK_SIZE, PG(upload_tmp_dir));",
          "",
          "---------------"
        ],
        "main/php_memory_streams.h||main/php_memory_streams.h": [
          "File: main/php_memory_streams.h -> main/php_memory_streams.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: #define php_stream_temp_new() php_stream_temp_create(TEMP_STREAM_DEFAULT, PHP_STREAM_MAX_MEM)",
          "38: #define php_stream_temp_create(mode, max_memory_usage) php_stream_temp_create_ex((mode), (max_memory_usage), NULL)",
          "39: #define php_stream_temp_create_ex(mode, max_memory_usage, tmpdir) _php_stream_temp_create_ex((mode), (max_memory_usage), (tmpdir) STREAMS_CC TSRMLS_CC)",
          "41: #define php_stream_temp_open(mode, max_memory_usage, buf, length) _php_stream_temp_open((mode), (max_memory_usage), (buf), (length) STREAMS_CC TSRMLS_CC)",
          "43: BEGIN_EXTERN_C()",
          "",
          "[Removed Lines]",
          "40: #define php_stream_temp_create_rel(mode, max_memory_usage) _php_stream_temp_create((mode), (max_memory_usage) STREAMS_REL_CC TSRMLS_CC)",
          "",
          "[Added Lines]",
          "40: #define php_stream_temp_create_rel(mode, max_memory_usage) _php_stream_temp_create_ex((mode), (max_memory_usage), NULL STREAMS_REL_CC TSRMLS_CC)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: PHPAPI php_stream *_php_stream_memory_open(int mode, char *buf, size_t length STREAMS_DC TSRMLS_DC);",
          "46: PHPAPI char *_php_stream_memory_get_buffer(php_stream *stream, size_t *length STREAMS_DC TSRMLS_DC);",
          "49: PHPAPI php_stream *_php_stream_temp_create_ex(int mode, size_t max_memory_usage, const char *tmpdir STREAMS_DC TSRMLS_DC);",
          "50: PHPAPI php_stream *_php_stream_temp_open(int mode, size_t max_memory_usage, char *buf, size_t length STREAMS_DC TSRMLS_DC);",
          "51: END_EXTERN_C()",
          "",
          "[Removed Lines]",
          "48: PHPAPI php_stream *_php_stream_temp_create(int mode, size_t max_memory_usage STREAMS_DC TSRMLS_DC);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "main/streams/memory.c||main/streams/memory.c": [
          "File: main/streams/memory.c -> main/streams/memory.c"
        ],
        "main/streams/php_stream_plain_wrapper.h||main/streams/php_stream_plain_wrapper.h": [
          "File: main/streams/php_stream_plain_wrapper.h -> main/streams/php_stream_plain_wrapper.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: PHPAPI php_stream *_php_stream_fopen_from_pipe(FILE *file, const char *mode STREAMS_DC TSRMLS_DC);",
          "43: #define php_stream_fopen_from_pipe(file, mode) _php_stream_fopen_from_pipe((file), (mode) STREAMS_CC TSRMLS_CC)",
          "48: PHPAPI php_stream *_php_stream_fopen_temporary_file(const char *dir, const char *pfx, char **opened_path STREAMS_DC TSRMLS_DC);",
          "49: #define php_stream_fopen_temporary_file(dir, pfx, opened_path) _php_stream_fopen_temporary_file((dir), (pfx), (opened_path) STREAMS_CC TSRMLS_CC)",
          "",
          "[Removed Lines]",
          "45: PHPAPI php_stream *_php_stream_fopen_tmpfile(int dummy STREAMS_DC TSRMLS_DC);",
          "46: #define php_stream_fopen_tmpfile() _php_stream_fopen_tmpfile(0 STREAMS_CC TSRMLS_CC)",
          "",
          "[Added Lines]",
          "47: #define php_stream_fopen_tmpfile() _php_stream_fopen_temporary_file(NULL, \"php\", NULL STREAMS_CC TSRMLS_CC)",
          "",
          "---------------"
        ],
        "main/streams/plain_wrapper.c||main/streams/plain_wrapper.c": [
          "File: main/streams/plain_wrapper.c -> main/streams/plain_wrapper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:  char *opened_path = NULL;",
          "189:  int fd;",
          "192:  if (fd != -1) {",
          "193:   php_stream *stream;",
          "",
          "[Removed Lines]",
          "191:  fd = php_open_temporary_fd(dir, pfx, opened_path TSRMLS_CC);",
          "",
          "[Added Lines]",
          "191:  fd = php_open_temporary_fd(dir, pfx, &opened_path TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:  return NULL;",
          "217: }",
          "224: PHPAPI php_stream *_php_stream_fopen_from_fd(int fd, const char *mode, const char *persistent_id STREAMS_DC TSRMLS_DC)",
          "225: {",
          "226:  php_stream *stream = php_stream_fopen_from_fd_int_rel(fd, mode, persistent_id);",
          "",
          "[Removed Lines]",
          "219: PHPAPI php_stream *_php_stream_fopen_tmpfile(int dummy STREAMS_DC TSRMLS_DC)",
          "220: {",
          "221:  return php_stream_fopen_temporary_file(NULL, \"php\", NULL);",
          "222: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}