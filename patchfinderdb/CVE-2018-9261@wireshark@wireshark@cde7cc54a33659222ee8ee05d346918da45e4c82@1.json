{
  "cve_id": "CVE-2018-9261",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.5 and 2.2.0 to 2.2.13, the NBAP dissector could crash with a large loop that ends with a heap-based buffer overflow. This was addressed in epan/dissectors/packet-nbap.c by prohibiting the self-linking of DCH-IDs.",
  "repo": "wireshark/wireshark",
  "patch_hash": "cde7cc54a33659222ee8ee05d346918da45e4c82",
  "patch_info": {
    "commit_hash": "cde7cc54a33659222ee8ee05d346918da45e4c82",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/cde7cc54a33659222ee8ee05d346918da45e4c82",
    "files": [
      "epan/dissectors/asn1/nbap/nbap.cnf",
      "epan/dissectors/packet-nbap.c",
      "epan/dissectors/packet-umts_fp.h"
    ],
    "message": "NBAP: avoid linking a DCH-ID to itself\n\nOtherwise it can create an infinite loop, leading to a buffer overflow.\nAlso add explicit cheks on the buffer usage and set its maximum size to\n128 instead of 32 per ASN.1 description.\n\nBug: 14471\nChange-Id: I805f4ce09347bc35143b010b4a558a0d090c0159\nReviewed-on: https://code.wireshark.org/review/26259\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
      "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c",
      "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h"
    ]
  },
  "patch_diff": {
    "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
      "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
      "--- Hunk 1 ---",
      "[Context before]",
      "909:   if(num_dch_in_flow>0){",
      "910:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
      "911:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
      "913:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
      "914:       }",
      "915:   }",
      "",
      "[Removed Lines]",
      "912:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
      "",
      "[Added Lines]",
      "912:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1161:     nbap_debug(\"    commontransportchannelid %%u next ch %%u\",common_transport_channel_id, nbap_dch_chnl_info[i].next_dch);",
      "1163:     umts_fp_conversation_info->dch_ids_in_flow_list[0] = common_transport_channel_id;",
      "1165:       i = nbap_dch_chnl_info[i].next_dch;",
      "1166:       umts_fp_conversation_info->num_dch_in_flow++;",
      "1167:       umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "",
      "[Removed Lines]",
      "1164:     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "1164:     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1267:     i = common_physical_channel_id;",
      "1268:     umts_fp_conversation_info->dch_ids_in_flow_list[0] = common_physical_channel_id;",
      "1270:       i = nbap_dch_chnl_info[i].next_dch;",
      "1271:       umts_fp_conversation_info->num_dch_in_flow++;",
      "1272:       umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "",
      "[Removed Lines]",
      "1269:     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "1269:     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1533:                     i = dch_id;",
      "1534:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "1536:                         i = nbap_dch_chnl_info[i].next_dch;",
      "1537:                         umts_fp_conversation_info->num_dch_in_flow++;",
      "",
      "[Removed Lines]",
      "1535:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "1535:                     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
      "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "15425:   if(num_dch_in_flow>0){",
      "15426:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
      "15427:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
      "15429:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
      "15430:       }",
      "15431:   }",
      "",
      "[Removed Lines]",
      "15428:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
      "",
      "[Added Lines]",
      "15428:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29669:                     i = dch_id;",
      "29670:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "29672:                         i = nbap_dch_chnl_info[i].next_dch;",
      "29673:                         umts_fp_conversation_info->num_dch_in_flow++;",
      "",
      "[Removed Lines]",
      "29671:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "29671:                     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "33380:     i = common_physical_channel_id;",
      "33381:     umts_fp_conversation_info->dch_ids_in_flow_list[0] = common_physical_channel_id;",
      "33383:       i = nbap_dch_chnl_info[i].next_dch;",
      "33384:       umts_fp_conversation_info->num_dch_in_flow++;",
      "33385:       umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "",
      "[Removed Lines]",
      "33382:     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "33382:     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "33557:     nbap_debug(\"    commontransportchannelid %u next ch %u\",common_transport_channel_id, nbap_dch_chnl_info[i].next_dch);",
      "33559:     umts_fp_conversation_info->dch_ids_in_flow_list[0] = common_transport_channel_id;",
      "33561:       i = nbap_dch_chnl_info[i].next_dch;",
      "33562:       umts_fp_conversation_info->num_dch_in_flow++;",
      "33563:       umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "",
      "[Removed Lines]",
      "33560:     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "",
      "[Added Lines]",
      "33560:     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h": [
      "File: epan/dissectors/packet-umts_fp.h -> epan/dissectors/packet-umts_fp.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "195:     gint num_dch_in_flow;",
      "",
      "[Removed Lines]",
      "196:     gint dch_ids_in_flow_list[FP_maxNrOfTFs];",
      "198:     fp_dch_channel_info_t fp_dch_channel_info[FP_maxNrOfTFs];",
      "",
      "[Added Lines]",
      "196:     gint dch_ids_in_flow_list[FP_maxNrOfDCHs];",
      "198:     fp_dch_channel_info_t fp_dch_channel_info[FP_maxNrOfDCHs];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c9adc63c2c2892a3f069777dfb8c66f79b9ba38",
      "candidate_info": {
        "commit_hash": "1c9adc63c2c2892a3f069777dfb8c66f79b9ba38",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1c9adc63c2c2892a3f069777dfb8c66f79b9ba38",
        "files": [
          "epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/packet-nbap.c",
          "epan/dissectors/packet-umts_fp.h"
        ],
        "message": "NBAP: avoid linking a DCH-ID to itself\n\nOtherwise it can create an infinite loop, leading to a buffer overflow.\nAlso add explicit cheks on the buffer usage and set its maximum size to\n128 instead of 32 per ASN.1 description.\n\nBug: 14471\nChange-Id: I18d26369cf3d1cf2a32c86a972c78ea9f6f7a503\nReviewed-on: https://code.wireshark.org/review/26264\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c",
          "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c",
            "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h"
          ],
          "candidate": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c",
            "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
          "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "690:     if(g_num_dch_in_flow>0){",
          "691:         g_dch_ids_in_flow_list[g_num_dch_in_flow-1]=dch_id;",
          "692:         nbap_dch_chnl_info[dch_id].next_dch = 0;",
          "694:             nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
          "695:         }",
          "696:     }",
          "",
          "[Removed Lines]",
          "693:         if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
          "",
          "[Added Lines]",
          "693:         if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "923:                 nbap_debug(\"    commontransportchannelid %%u next ch %%u\",commontransportchannelid, nbap_dch_chnl_info[i].next_dch);",
          "925:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = commontransportchannelid;",
          "927:                     i = nbap_dch_chnl_info[i].next_dch;",
          "928:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "929:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
          "",
          "[Removed Lines]",
          "926:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "926:                 while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1030:                 i = commonphysicalchannelid;",
          "1031:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = commonphysicalchannelid;",
          "1033:                     i = nbap_dch_chnl_info[i].next_dch;",
          "1034:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "1035:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
          "",
          "[Removed Lines]",
          "1032:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "1032:                 while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1249:                     i = dch_id;",
          "1250:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
          "1253:                         i = nbap_dch_chnl_info[i].next_dch;",
          "1254:                         umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "1251:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "1251:                     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14832:     if(g_num_dch_in_flow>0){",
          "14833:         g_dch_ids_in_flow_list[g_num_dch_in_flow-1]=dch_id;",
          "14834:         nbap_dch_chnl_info[dch_id].next_dch = 0;",
          "14836:             nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
          "14837:         }",
          "14838:     }",
          "",
          "[Removed Lines]",
          "14835:         if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
          "",
          "[Added Lines]",
          "14835:         if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28800:                     i = dch_id;",
          "28801:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
          "28804:                         i = nbap_dch_chnl_info[i].next_dch;",
          "28805:                         umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "28802:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "28802:                     while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32512:                 i = commonphysicalchannelid;",
          "32513:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = commonphysicalchannelid;",
          "32515:                     i = nbap_dch_chnl_info[i].next_dch;",
          "32516:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "32517:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
          "",
          "[Removed Lines]",
          "32514:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "32514:                 while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "32688:                 nbap_debug(\"    commontransportchannelid %u next ch %u\",commontransportchannelid, nbap_dch_chnl_info[i].next_dch);",
          "32690:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = commontransportchannelid;",
          "32692:                     i = nbap_dch_chnl_info[i].next_dch;",
          "32693:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "32694:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
          "",
          "[Removed Lines]",
          "32691:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
          "",
          "[Added Lines]",
          "32691:                 while(nbap_dch_chnl_info[i].next_dch != 0 && umts_fp_conversation_info->num_dch_in_flow < FP_maxNrOfDCHs){",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-umts_fp.h||epan/dissectors/packet-umts_fp.h": [
          "File: epan/dissectors/packet-umts_fp.h -> epan/dissectors/packet-umts_fp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:     gint num_dch_in_flow;",
          "",
          "[Removed Lines]",
          "206:     gint dch_ids_in_flow_list[FP_maxNrOfTFs];",
          "208:     fp_dch_channel_info_t fp_dch_channel_info[FP_maxNrOfTFs];",
          "",
          "[Added Lines]",
          "206:     gint dch_ids_in_flow_list[FP_maxNrOfDCHs];",
          "208:     fp_dch_channel_info_t fp_dch_channel_info[FP_maxNrOfDCHs];",
          "",
          "---------------"
        ]
      }
    }
  ]
}