{
  "cve_id": "CVE-2019-10903",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DCERPC SPOOLSS dissector could crash. This was addressed in epan/dissectors/packet-dcerpc-spoolss.c by adding a boundary check.",
  "repo": "wireshark/wireshark",
  "patch_hash": "5aba3ed0cdebc1ec960261e3e9eda87c8408259f",
  "patch_info": {
    "commit_hash": "5aba3ed0cdebc1ec960261e3e9eda87c8408259f",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/5aba3ed0cdebc1ec960261e3e9eda87c8408259f",
    "files": [
      "epan/dissectors/packet-dcerpc-spoolss.c"
    ],
    "message": "dcerpc: ensure the length in the packet doesn't overcome the boundaries.\n\nThe spoolss dissector creates a new source using the length from the packet\ndata. If it overcomes the ends of the packet we hit a crash. In this case\nadd an expert info and stop the dissection\n\nBug: 15568\nChange-Id: Idfb0b54c1f41842170d3d03c80897a3b7edc9400\nReviewed-on: https://code.wireshark.org/review/32449\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c": [
      "File: epan/dissectors/packet-dcerpc-spoolss.c -> epan/dissectors/packet-dcerpc-spoolss.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "315: static expert_field ei_level = EI_INIT;",
      "316: static expert_field ei_notify_info_data_type = EI_INIT;",
      "317: static expert_field ei_enumprinterdataex_value = EI_INIT;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "318: static expert_field ei_buffer_size_too_long = EI_INIT;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "441:  offset = dissect_ndr_uint32(tvb, offset, pinfo, tree, di, drep,",
      "442:         hf_buffer_size, &size);",
      "444:  offset = dissect_ndr_uint8s(tvb, offset, pinfo, NULL, di, drep,",
      "445:         hf_buffer_data, size, &data);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "447:  if ((guint32)tvb_reported_length_remaining(tvb, offset) < size) {",
      "448:   expert_add_info(pinfo, tree, &ei_buffer_size_too_long);",
      "449:   return offset;",
      "450:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "8315:   { &ei_level, { \"spoolss.level.unknown\", PI_PROTOCOL, PI_WARN, \"Info level unknown\", EXPFILL }},",
      "8316:   { &ei_notify_info_data_type, { \"spoolss.notify_info_data.type.unknown\", PI_PROTOCOL, PI_WARN, \"Unknown notify type\", EXPFILL }},",
      "8317:   { &ei_enumprinterdataex_value, { \"spoolss.enumprinterdataex.val_unknown\", PI_PROTOCOL, PI_WARN, \"Unknown value type\", EXPFILL }},",
      "8318:  };",
      "8320:  expert_module_t* expert_dcerpc_spoolss;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8326:   { &ei_buffer_size_too_long, { \"spoolss.buffer.size.invalid\", PI_PROTOCOL, PI_ERROR, \"Buffer size too long\", EXPFILL }},",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "85499cde33548af10ce27aece2e9219c8cc78d42",
      "candidate_info": {
        "commit_hash": "85499cde33548af10ce27aece2e9219c8cc78d42",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/85499cde33548af10ce27aece2e9219c8cc78d42",
        "files": [
          "epan/dissectors/packet-dcerpc-spoolss.c"
        ],
        "message": "dcerpc: ensure the length in the packet doesn't overcome the boundaries.\n\nThe spoolss dissector creates a new source using the length from the packet\ndata. If it overcomes the ends of the packet we hit a crash. In this case\nadd an expert info and stop the dissection\n\nBug: 15568\nChange-Id: Idfb0b54c1f41842170d3d03c80897a3b7edc9400\nReviewed-on: https://code.wireshark.org/review/32449\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 5aba3ed0cdebc1ec960261e3e9eda87c8408259f)\nReviewed-on: https://code.wireshark.org/review/32749\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c": [
          "File: epan/dissectors/packet-dcerpc-spoolss.c -> epan/dissectors/packet-dcerpc-spoolss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "315: static expert_field ei_level = EI_INIT;",
          "316: static expert_field ei_notify_info_data_type = EI_INIT;",
          "317: static expert_field ei_enumprinterdataex_value = EI_INIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318: static expert_field ei_buffer_size_too_long = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "441:  offset = dissect_ndr_uint32(tvb, offset, pinfo, tree, di, drep,",
          "442:         hf_buffer_size, &size);",
          "444:  offset = dissect_ndr_uint8s(tvb, offset, pinfo, NULL, di, drep,",
          "445:         hf_buffer_data, size, &data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:  if ((guint32)tvb_reported_length_remaining(tvb, offset) < size) {",
          "448:   expert_add_info(pinfo, tree, &ei_buffer_size_too_long);",
          "449:   return offset;",
          "450:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8315:   { &ei_level, { \"spoolss.level.unknown\", PI_PROTOCOL, PI_WARN, \"Info level unknown\", EXPFILL }},",
          "8316:   { &ei_notify_info_data_type, { \"spoolss.notify_info_data.type.unknown\", PI_PROTOCOL, PI_WARN, \"Unknown notify type\", EXPFILL }},",
          "8317:   { &ei_enumprinterdataex_value, { \"spoolss.enumprinterdataex.val_unknown\", PI_PROTOCOL, PI_WARN, \"Unknown value type\", EXPFILL }},",
          "8318:  };",
          "8320:  expert_module_t* expert_dcerpc_spoolss;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8326:   { &ei_buffer_size_too_long, { \"spoolss.buffer.size.invalid\", PI_PROTOCOL, PI_ERROR, \"Buffer size too long\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f529f8acf96a423a27bf52c70ebd6b837a346c4",
      "candidate_info": {
        "commit_hash": "2f529f8acf96a423a27bf52c70ebd6b837a346c4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/2f529f8acf96a423a27bf52c70ebd6b837a346c4",
        "files": [
          "epan/dissectors/packet-dcerpc-spoolss.c"
        ],
        "message": "dcerpc: ensure the length in the packet doesn't overcome the boundaries.\n\nThe spoolss dissector creates a new source using the length from the packet\ndata. If it overcomes the ends of the packet we hit a crash. In this case\nadd an expert info and stop the dissection\n\nBug: 15568\nChange-Id: Idfb0b54c1f41842170d3d03c80897a3b7edc9400\nReviewed-on: https://code.wireshark.org/review/32449\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 5aba3ed0cdebc1ec960261e3e9eda87c8408259f)\nReviewed-on: https://code.wireshark.org/review/32748\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c": [
          "File: epan/dissectors/packet-dcerpc-spoolss.c -> epan/dissectors/packet-dcerpc-spoolss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "315: static expert_field ei_level = EI_INIT;",
          "316: static expert_field ei_notify_info_data_type = EI_INIT;",
          "317: static expert_field ei_enumprinterdataex_value = EI_INIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318: static expert_field ei_buffer_size_too_long = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "441:  offset = dissect_ndr_uint32(tvb, offset, pinfo, tree, di, drep,",
          "442:         hf_buffer_size, &size);",
          "444:  offset = dissect_ndr_uint8s(tvb, offset, pinfo, NULL, di, drep,",
          "445:         hf_buffer_data, size, &data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:  if ((guint32)tvb_reported_length_remaining(tvb, offset) < size) {",
          "448:   expert_add_info(pinfo, tree, &ei_buffer_size_too_long);",
          "449:   return offset;",
          "450:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8315:   { &ei_level, { \"spoolss.level.unknown\", PI_PROTOCOL, PI_WARN, \"Info level unknown\", EXPFILL }},",
          "8316:   { &ei_notify_info_data_type, { \"spoolss.notify_info_data.type.unknown\", PI_PROTOCOL, PI_WARN, \"Unknown notify type\", EXPFILL }},",
          "8317:   { &ei_enumprinterdataex_value, { \"spoolss.enumprinterdataex.val_unknown\", PI_PROTOCOL, PI_WARN, \"Unknown value type\", EXPFILL }},",
          "8318:  };",
          "8320:  expert_module_t* expert_dcerpc_spoolss;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8326:   { &ei_buffer_size_too_long, { \"spoolss.buffer.size.invalid\", PI_PROTOCOL, PI_ERROR, \"Buffer size too long\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eafdcfa4b6d5187a5326442a82608ab03d9dddcb",
      "candidate_info": {
        "commit_hash": "eafdcfa4b6d5187a5326442a82608ab03d9dddcb",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/eafdcfa4b6d5187a5326442a82608ab03d9dddcb",
        "files": [
          "epan/dissectors/packet-dcerpc-spoolss.c"
        ],
        "message": "dcerpc: ensure the length in the packet doesn't overcome the boundaries.\n\nThe spoolss dissector creates a new source using the length from the packet\ndata. If it overcomes the ends of the packet we hit a crash. In this case\nadd an expert info and stop the dissection\n\nBug: 15568\nChange-Id: Idfb0b54c1f41842170d3d03c80897a3b7edc9400\nReviewed-on: https://code.wireshark.org/review/32449\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 5aba3ed0cdebc1ec960261e3e9eda87c8408259f)\nReviewed-on: https://code.wireshark.org/review/32750\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dcerpc-spoolss.c||epan/dissectors/packet-dcerpc-spoolss.c": [
          "File: epan/dissectors/packet-dcerpc-spoolss.c -> epan/dissectors/packet-dcerpc-spoolss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "327: static expert_field ei_level = EI_INIT;",
          "328: static expert_field ei_notify_info_data_type = EI_INIT;",
          "329: static expert_field ei_enumprinterdataex_value = EI_INIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330: static expert_field ei_buffer_size_too_long = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "453:  offset = dissect_ndr_uint32(tvb, offset, pinfo, tree, di, drep,",
          "454:         hf_buffer_size, &size);",
          "456:  offset = dissect_ndr_uint8s(tvb, offset, pinfo, NULL, di, drep,",
          "457:         hf_buffer_data, size, &data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "459:  if ((guint32)tvb_reported_length_remaining(tvb, offset) < size) {",
          "460:   expert_add_info(pinfo, tree, &ei_buffer_size_too_long);",
          "461:   return offset;",
          "462:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8329:   { &ei_level, { \"spoolss.level.unknown\", PI_PROTOCOL, PI_WARN, \"Info level unknown\", EXPFILL }},",
          "8330:   { &ei_notify_info_data_type, { \"spoolss.notify_info_data.type.unknown\", PI_PROTOCOL, PI_WARN, \"Unknown notify type\", EXPFILL }},",
          "8331:   { &ei_enumprinterdataex_value, { \"spoolss.enumprinterdataex.val_unknown\", PI_PROTOCOL, PI_WARN, \"Unknown value type\", EXPFILL }},",
          "8332:  };",
          "8334:  expert_module_t* expert_dcerpc_spoolss;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8340:   { &ei_buffer_size_too_long, { \"spoolss.buffer.size.invalid\", PI_PROTOCOL, PI_ERROR, \"Buffer size too long\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    }
  ]
}