{
  "cve_id": "CVE-2018-16057",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Radiotap dissector could crash. This was addressed in epan/dissectors/packet-ieee80211-radiotap-iter.c by validating iterator operations.",
  "repo": "wireshark/wireshark",
  "patch_hash": "739eebd3d2e39db63c959eb99291edf59647ed6d",
  "patch_info": {
    "commit_hash": "739eebd3d2e39db63c959eb99291edf59647ed6d",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/739eebd3d2e39db63c959eb99291edf59647ed6d",
    "files": [
      "epan/dissectors/packet-ieee80211-radiotap-iter.c"
    ],
    "message": "802.11 Radiotap: add more bound checks in ieee80211_radiotap_iterator_next()\n\nBug: 15022\nChange-Id: Ife413312c88b8d78926c78bdb6707903257e7964\nReviewed-on: https://code.wireshark.org/review/29017\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Richard Sharpe <realrichardsharpe@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c": [
      "File: epan/dissectors/packet-ieee80211-radiotap-iter.c -> epan/dissectors/packet-ieee80211-radiotap-iter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "132:  iterator->_bitmap_shifter = get_unaligned_le32(&radiotap_header->it_present);",
      "133:  iterator->_arg = (guint8 *)radiotap_header + sizeof(*radiotap_header);",
      "134:  iterator->_reset_on_ext = 0;",
      "135:  iterator->_next_bitmap = &radiotap_header->it_present;",
      "136:  iterator->_next_bitmap++;",
      "137:  iterator->_vns = vns;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135:  iterator->_next_ns_data = NULL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "288:    }",
      "289:    if (!align) {",
      "291:     iterator->_arg = iterator->_next_ns_data;",
      "293:     iterator->current_namespace = NULL;",
      "294:     goto next_entry;",
      "295:    }",
      "296:    break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "292:     if (!iterator->_next_ns_data)",
      "293:      return -EINVAL;",
      "297:     iterator->_next_ns_data = NULL;",
      "298:     if (!ITERATOR_VALID(iterator, 0))",
      "299:      return -EINVAL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af9fc0e15eecb82c9e57c560e19802d3c4da2e1a",
      "candidate_info": {
        "commit_hash": "af9fc0e15eecb82c9e57c560e19802d3c4da2e1a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/af9fc0e15eecb82c9e57c560e19802d3c4da2e1a",
        "files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ],
        "message": "802.11 Radiotap: add more bound checks in ieee80211_radiotap_iterator_next()\n\nBug: 15022\nChange-Id: Ife413312c88b8d78926c78bdb6707903257e7964\nReviewed-on: https://code.wireshark.org/review/29017\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Richard Sharpe <realrichardsharpe@gmail.com>\n(cherry picked from commit 739eebd3d2e39db63c959eb99291edf59647ed6d)\nReviewed-on: https://code.wireshark.org/review/29027\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 4ac83382dc49f9f7b62bffb3cfc508cdaa1e7be5)\nReviewed-on: https://code.wireshark.org/review/29028",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c": [
          "File: epan/dissectors/packet-ieee80211-radiotap-iter.c -> epan/dissectors/packet-ieee80211-radiotap-iter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:  iterator->_bitmap_shifter = get_unaligned_le32(&radiotap_header->it_present);",
          "146:  iterator->_arg = (guint8 *)radiotap_header + sizeof(*radiotap_header);",
          "147:  iterator->_reset_on_ext = 0;",
          "148:  iterator->_next_bitmap = &radiotap_header->it_present;",
          "149:  iterator->_next_bitmap++;",
          "150:  iterator->_vns = vns;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  iterator->_next_ns_data = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:    }",
          "302:    if (!align) {",
          "304:     iterator->_arg = iterator->_next_ns_data;",
          "306:     iterator->current_namespace = NULL;",
          "307:     goto next_entry;",
          "308:    }",
          "309:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:     if (!iterator->_next_ns_data)",
          "306:      return -EINVAL;",
          "310:     iterator->_next_ns_data = NULL;",
          "311:     if (!ITERATOR_VALID(iterator, 0))",
          "312:      return -EINVAL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbf46eb46ae38392af8e6cd288795f0def50a621",
      "candidate_info": {
        "commit_hash": "bbf46eb46ae38392af8e6cd288795f0def50a621",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/bbf46eb46ae38392af8e6cd288795f0def50a621",
        "files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ],
        "message": "802.11 Radiotap: add more bound checks in ieee80211_radiotap_iterator_next()\n\nBug: 15022\nChange-Id: Ife413312c88b8d78926c78bdb6707903257e7964\nReviewed-on: https://code.wireshark.org/review/29017\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Richard Sharpe <realrichardsharpe@gmail.com>\n(cherry picked from commit 739eebd3d2e39db63c959eb99291edf59647ed6d)\nReviewed-on: https://code.wireshark.org/review/29027\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c": [
          "File: epan/dissectors/packet-ieee80211-radiotap-iter.c -> epan/dissectors/packet-ieee80211-radiotap-iter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:  iterator->_bitmap_shifter = get_unaligned_le32(&radiotap_header->it_present);",
          "147:  iterator->_arg = (guint8 *)radiotap_header + sizeof(*radiotap_header);",
          "148:  iterator->_reset_on_ext = 0;",
          "149:  iterator->_next_bitmap = &radiotap_header->it_present;",
          "150:  iterator->_next_bitmap++;",
          "151:  iterator->_vns = vns;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:  iterator->_next_ns_data = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:    }",
          "303:    if (!align) {",
          "305:     iterator->_arg = iterator->_next_ns_data;",
          "307:     iterator->current_namespace = NULL;",
          "308:     goto next_entry;",
          "309:    }",
          "310:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306:     if (!iterator->_next_ns_data)",
          "307:      return -EINVAL;",
          "311:     iterator->_next_ns_data = NULL;",
          "312:     if (!ITERATOR_VALID(iterator, 0))",
          "313:      return -EINVAL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1576ae10e79f184df4c63e1e6c3fbdba70b7da4f",
      "candidate_info": {
        "commit_hash": "1576ae10e79f184df4c63e1e6c3fbdba70b7da4f",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1576ae10e79f184df4c63e1e6c3fbdba70b7da4f",
        "files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ],
        "message": "802.11 Radiotap: add more bound checks in ieee80211_radiotap_iterator_next()\n\nBug: 15022\nChange-Id: Ife413312c88b8d78926c78bdb6707903257e7964\nReviewed-on: https://code.wireshark.org/review/29017\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Richard Sharpe <realrichardsharpe@gmail.com>\n(cherry picked from commit 82447697e1f2337ef65e88c13d5cb4c0b76bd683)\nReviewed-on: https://code.wireshark.org/review/29026\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211-radiotap-iter.c||epan/dissectors/packet-ieee80211-radiotap-iter.c": [
          "File: epan/dissectors/packet-ieee80211-radiotap-iter.c -> epan/dissectors/packet-ieee80211-radiotap-iter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:  iterator->_bitmap_shifter = get_unaligned_le32(&radiotap_header->it_present);",
          "132:  iterator->_arg = (guint8 *)radiotap_header + sizeof(*radiotap_header);",
          "133:  iterator->_reset_on_ext = 0;",
          "134:  iterator->_next_bitmap = &radiotap_header->it_present;",
          "135:  iterator->_next_bitmap++;",
          "136:  iterator->_vns = vns;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:  iterator->_next_ns_data = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:    }",
          "288:    if (!align) {",
          "290:     iterator->_arg = iterator->_next_ns_data;",
          "292:     iterator->current_namespace = NULL;",
          "293:     goto next_entry;",
          "294:    }",
          "295:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "291:     if (!iterator->_next_ns_data)",
          "292:      return -EINVAL;",
          "296:     iterator->_next_ns_data = NULL;",
          "297:     if (!ITERATOR_VALID(iterator, 0))",
          "298:      return -EINVAL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}