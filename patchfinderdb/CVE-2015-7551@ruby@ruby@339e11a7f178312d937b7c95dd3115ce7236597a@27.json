{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12ef4f02289dfada188581578d6388d06654c0c5",
      "candidate_info": {
        "commit_hash": "12ef4f02289dfada188581578d6388d06654c0c5",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/12ef4f02289dfada188581578d6388d06654c0c5",
        "files": [
          "ChangeLog",
          "configure.in",
          "version.h"
        ],
        "message": "merge revision(s) r44876,r47130,r48988,r48997: [Backport #10640] [Backport #10679]\n\n\tconfigure.in: use C99\n\n\t* configure.in: ISO9899:1999 is necessary for strtoll() on FreeBSD\n  10, (and may be possibly other platforms).\n\t* configure.in (NET_LUID): include also ifdef.h as a workaround of\n\t  a bug in mingw-w64 header.  [ruby-core:67103] [Bug #10640]\n\n\t* configure.in (NET_LUID): include winsock2.h instead of windows.h.\n\t  patch by Jon Forums in [ruby-core:67125].  [Bug #10640]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49356 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "configure.in||configure.in",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "816:     ],",
          "817:     [",
          "818:       # ANSI (no XCFLAGS because this is C only)",
          "823:     ])",
          "825:     # suppress annoying -Wstrict-overflow warnings",
          "",
          "[Removed Lines]",
          "819:       RUBY_TRY_CFLAGS(-ansi -std=iso9899:199409, [",
          "820:         RUBY_APPEND_OPTION(warnflags, -ansi -std=iso9899:199409)",
          "821:         RUBY_APPEND_OPTION(strict_warnflags, -ansi -std=iso9899:199409)",
          "822:       ])",
          "",
          "[Added Lines]",
          "819:  for ansi_options in -std=iso9899:1999 \"-ansi -std=iso9899:199409\"; do",
          "820:      RUBY_TRY_CFLAGS(${ansi_options}, [",
          "821:   RUBY_APPEND_OPTIONS(warnflags, ${ansi_options})",
          "822:   RUBY_APPEND_OPTIONS(strict_warnflags, ${ansi_options})",
          "823:      ], [ansi_options=])",
          "824:      test \"x${ansi_options}\" = x || break",
          "825:  done",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1054:   ac_cv_func_malloc_usable_size=no",
          "1055:   { test \"$target_cpu\" = x64 && ac_cv_func___builtin_setjmp=no; }",
          "1056:   AC_CHECK_TYPE([NET_LUID], [], [],",
          "1059:   if test x\"$ac_cv_type_NET_LUID\" = xyes; then",
          "1060:       AC_DEFINE(HAVE_TYPE_NET_LUID, 1)",
          "1061:   fi",
          "",
          "[Removed Lines]",
          "1057:          [@%:@include <windows.h>",
          "1058:            @%:@include <iphlpapi.h>])",
          "",
          "[Added Lines]",
          "1060:          [@%:@include <winsock2.h>",
          "1061:          @%:@include <iphlpapi.h>])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2699:        RPATHFLAG=' +b %1$-s'",
          "2700:    fi",
          "2701:    rb_cv_dlopen=yes],",
          "2703:        : ${LDSHARED='$(CC) -shared'}",
          "2704:        if test \"$rb_cv_prog_gnu_ld\" = yes; then",
          "2705:     LDFLAGS=\"$LDFLAGS -Wl,-E\"",
          "",
          "[Removed Lines]",
          "2702:  [solaris*], [  if test \"$GCC\" = yes; then",
          "",
          "[Added Lines]",
          "2705:  [solaris*], [ if test \"$GCC\" = yes; then",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2818:  [os2-emx*], [ LDFLAGS=\"$LDFLAGS -Zomf\"",
          "2819:    ],",
          "2820:         [nacl], [ LDSHARED='$(CC) -shared' ],",
          "2822:   AC_MSG_RESULT($rb_cv_dlopen)",
          "2823: fi",
          "2824: if test \"${LDSHAREDXX}\" = \"\"; then",
          "",
          "[Removed Lines]",
          "2821:  [  : ${LDSHARED='$(LD)'}])",
          "",
          "[Added Lines]",
          "2824:  [ : ${LDSHARED='$(LD)'}])",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-07\"",
          "3: #define RUBY_PATCHLEVEL 278",
          "7: #define RUBY_RELEASE_DAY 7",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-21\"",
          "3: #define RUBY_PATCHLEVEL 279",
          "7: #define RUBY_RELEASE_DAY 21",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "477c282a079a1784a0b8c236e7449712be07cae4",
      "candidate_info": {
        "commit_hash": "477c282a079a1784a0b8c236e7449712be07cae4",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/477c282a079a1784a0b8c236e7449712be07cae4",
        "files": [
          "ChangeLog",
          "marshal.c",
          "test/ruby/test_marshal.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54105,54108,54136,54138: [Backport #12188]\n\n\t* marshal.c (r_object0): Fix Marshal crash for corrupt extended object.\n\n\t* marshal.c (r_object0):  raise ArgumentError when linking to undefined\n\t  object.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54274 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "marshal.c||marshal.c",
          "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "marshal.c||marshal.c": [
          "File: marshal.c -> marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1515:  {",
          "1516:      VALUE path = r_unique(arg);",
          "1517:      VALUE m = rb_path_to_class(path);",
          "1520:   VALUE c;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1518:      if (NIL_P(extmod)) extmod = rb_ary_tmp_new(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1534:      }",
          "1535:      else {",
          "1536:   must_be_module(m, path);",
          "1538:   rb_ary_push(extmod, m);",
          "1540:   v = r_object0(arg, 0, extmod);",
          "",
          "[Removed Lines]",
          "1537:   if (NIL_P(extmod)) extmod = rb_ary_tmp_new(0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1894:  rb_raise(rb_eArgError, \"dump format error(0x%x)\", type);",
          "1895:  break;",
          "1896:     }",
          "1897:     return v;",
          "1898: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1898:     if (v == Qundef) {",
          "1899:  rb_raise(rb_eArgError, \"dump format error (bad link)\");",
          "1900:     }",
          "",
          "---------------"
        ],
        "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb": [
          "File: test/ruby/test_marshal.rb -> test/ruby/test_marshal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: require 'test/unit'",
          "2: require 'tempfile'",
          "3: require_relative 'marshaltestlib'",
          "5: class TestMarshal < Test::Unit::TestCase",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: require_relative 'envutil'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "612:     obj = [str, str]",
          "613:     assert_equal(['X', 'X'], Marshal.load(Marshal.dump(obj), ->(v) { v == str ? v.upcase : v }))",
          "614:   end",
          "615: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "617:   def test_marshal_load_extended_class_crash",
          "618:     crash = \"\\x04\\be:\\x0F\\x00omparableo:\\vObject\\x00\"",
          "620:     opt = %w[--disable=gems]",
          "621:     assert_ruby_status(opt, \"Marshal.load(#{crash.dump})\")",
          "622:   end",
          "624:   def test_marshal_load_r_prepare_reference_crash",
          "625:     crash = \"\\x04\\bI/\\x05\\x00\\x06:\\x06E{\\x06@\\x05T\"",
          "627:     opt = %w[--disable=gems]",
          "628:     assert_separately(opt, <<-RUBY)",
          "629:       assert_raise_with_message(ArgumentError, /bad link/) do",
          "630:         Marshal.load(#{crash.dump})",
          "631:       end",
          "632:     RUBY",
          "633:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 471",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 472",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7944b62832cf666282fd605089c4bc170387cee3",
      "candidate_info": {
        "commit_hash": "7944b62832cf666282fd605089c4bc170387cee3",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7944b62832cf666282fd605089c4bc170387cee3",
        "files": [
          "ChangeLog",
          "lib/net/imap.rb",
          "test/net/imap/test_imap_response_parser.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50444: [Backport #11128]\n\n\t* lib/net/imap.rb (body_ext_mpart): should work even if body-fld-dsp\n\t  is omitted.  [ruby-core:69093] [Bug #11128]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50583 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/imap.rb||lib/net/imap.rb",
          "test/net/imap/test_imap_response_parser.rb||test/net/imap/test_imap_response_parser.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/imap.rb||lib/net/imap.rb": [
          "File: lib/net/imap.rb -> lib/net/imap.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2582:           return param",
          "2583:         end",
          "2584:         disposition = body_fld_dsp",
          "2586:         language = body_fld_lang",
          "2588:         token = lookahead",
          "",
          "[Removed Lines]",
          "2585:         match(T_SPACE)",
          "",
          "[Added Lines]",
          "2586:         token = lookahead",
          "2587:         if token.symbol == T_SPACE",
          "2588:           shift_token",
          "2589:         else",
          "2590:           return param, disposition",
          "2591:         end",
          "",
          "---------------"
        ],
        "test/net/imap/test_imap_response_parser.rb||test/net/imap/test_imap_response_parser.rb": [
          "File: test/net/imap/test_imap_response_parser.rb -> test/net/imap/test_imap_response_parser.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:     assert_equal(empty_part.body.subtype, 'MIXED')",
          "259:     assert_equal(empty_part.body.param['BOUNDARY'], '000e0cd29212e3e06a0486590ae2')",
          "260:   end",
          "261: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:   # [Bug #11128]",
          "263:   def test_body_ext_mpart_without_lang",
          "264:     parser = Net::IMAP::ResponseParser.new",
          "265:     response = parser.parse(\"* 4 FETCH (BODY (((\\\"text\\\" \\\"plain\\\" (\\\"charset\\\" \\\"utf-8\\\") NIL NIL \\\"7bit\\\" 257 9 NIL NIL NIL NIL)(\\\"text\\\" \\\"html\\\" (\\\"charset\\\" \\\"utf-8\\\") NIL NIL \\\"quoted-printable\\\" 655 9 NIL NIL NIL NIL) \\\"alternative\\\" (\\\"boundary\\\" \\\"001a1137a5047848dd05157ddaa1\\\") NIL)(\\\"application\\\" \\\"pdf\\\" (\\\"name\\\" \\\"test.xml\\\" \\\"x-apple-part-url\\\" \\\"9D00D9A2-98AB-4EFB-85BA-FB255F8BF3D7\\\") NIL NIL \\\"base64\\\" 4383638 NIL (\\\"attachment\\\" (\\\"filename\\\" \\\"test.xml\\\")) NIL NIL) \\\"mixed\\\" (\\\"boundary\\\" \\\"001a1137a5047848e405157ddaa3\\\") NIL))\\r\\n\")",
          "266:     assert_equal(\"FETCH\", response.name)",
          "267:     body = response.data.attr[\"BODY\"]",
          "268:     assert_equal(nil, body.parts[0].disposition)",
          "269:     assert_equal(nil, body.parts[0].language)",
          "270:     assert_equal(\"ATTACHMENT\", body.parts[1].disposition.dsp_type)",
          "271:     assert_equal(\"test.xml\", body.parts[1].disposition.param[\"FILENAME\"])",
          "272:     assert_equal(nil, body.parts[1].language)",
          "273:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 355",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 356",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d3b8d0d5491096a10ae332db759b01c89a10f9d",
      "candidate_info": {
        "commit_hash": "5d3b8d0d5491096a10ae332db759b01c89a10f9d",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/5d3b8d0d5491096a10ae332db759b01c89a10f9d",
        "files": [
          "ChangeLog",
          "test/ruby/test_refinement.rb",
          "version.h",
          "vm_method.c"
        ],
        "message": "merge revision(s) r49322: [Backport #10753]\n\n\t* vm_method.c (check_definition): Module#public_method_defined?,\n\t  Module#private_method_defined?, Module#protected_method_defined?\n\t  should not use refinements. [ruby-core:67656] [Bug #10753]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49991 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb",
          "version.h||version.h",
          "vm_method.c||vm_method.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb": [
          "File: test/ruby/test_refinement.rb -> test/ruby/test_refinement.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1206:     end;",
          "1207:   end",
          "1209:   private",
          "1211:   def eval_using(mod, s)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1209:   def test_refined_method_defined",
          "1210:     assert_separately([], <<-\"end;\")",
          "1211:     bug10753 = '[ruby-core:67656] [Bug #10753]'",
          "1213:     c = Class.new do",
          "1214:       def refined_public; end",
          "1215:       def refined_protected; end",
          "1216:       def refined_private; end",
          "1218:       public :refined_public",
          "1219:       protected :refined_protected",
          "1220:       private :refined_private",
          "1221:     end",
          "1223:     m = Module.new do",
          "1224:       refine(c) do",
          "1225:         def refined_public; end",
          "1226:         def refined_protected; end",
          "1227:         def refined_private; end",
          "1229:         public :refined_public",
          "1230:         protected :refined_protected",
          "1231:         private :refined_private",
          "1232:       end",
          "1233:     end",
          "1235:     using m",
          "1237:     assert_equal(true, c.public_method_defined?(:refined_public), bug10753)",
          "1238:     assert_equal(false, c.public_method_defined?(:refined_protected), bug10753)",
          "1239:     assert_equal(false, c.public_method_defined?(:refined_private), bug10753)",
          "1241:     assert_equal(false, c.protected_method_defined?(:refined_public), bug10753)",
          "1242:     assert_equal(true, c.protected_method_defined?(:refined_protected), bug10753)",
          "1243:     assert_equal(false, c.protected_method_defined?(:refined_private), bug10753)",
          "1245:     assert_equal(false, c.private_method_defined?(:refined_public), bug10753)",
          "1246:     assert_equal(false, c.private_method_defined?(:refined_protected), bug10753)",
          "1247:     assert_equal(true, c.private_method_defined?(:refined_private), bug10753)",
          "1248:     end;",
          "1249:   end",
          "1251:   def test_undefined_refined_method_defined",
          "1252:     assert_separately([], <<-\"end;\")",
          "1253:     bug10753 = '[ruby-core:67656] [Bug #10753]'",
          "1255:     c = Class.new",
          "1257:     m = Module.new do",
          "1258:       refine(c) do",
          "1259:         def undefined_refined_public; end",
          "1260:         def undefined_refined_protected; end",
          "1261:         def undefined_refined_private; end",
          "1262:         public :undefined_refined_public",
          "1263:         protected :undefined_refined_protected",
          "1264:         private :undefined_refined_private",
          "1265:       end",
          "1266:     end",
          "1268:     using m",
          "1270:     assert_equal(false, c.public_method_defined?(:undefined_refined_public), bug10753)",
          "1271:     assert_equal(false, c.public_method_defined?(:undefined_refined_protected), bug10753)",
          "1272:     assert_equal(false, c.public_method_defined?(:undefined_refined_private), bug10753)",
          "1274:     assert_equal(false, c.protected_method_defined?(:undefined_refined_public), bug10753)",
          "1275:     assert_equal(false, c.protected_method_defined?(:undefined_refined_protected), bug10753)",
          "1276:     assert_equal(false, c.protected_method_defined?(:undefined_refined_private), bug10753)",
          "1278:     assert_equal(false, c.private_method_defined?(:undefined_refined_public), bug10753)",
          "1279:     assert_equal(false, c.private_method_defined?(:undefined_refined_protected), bug10753)",
          "1280:     assert_equal(false, c.private_method_defined?(:undefined_refined_private), bug10753)",
          "1281:     end;",
          "1282:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-10\"",
          "3: #define RUBY_PATCHLEVEL 312",
          "7: #define RUBY_RELEASE_DAY 10",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-18\"",
          "3: #define RUBY_PATCHLEVEL 313",
          "7: #define RUBY_RELEASE_DAY 18",
          "",
          "---------------"
        ],
        "vm_method.c||vm_method.c": [
          "File: vm_method.c -> vm_method.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1044:     const rb_method_entry_t *me;",
          "1045:     ID id = rb_check_id(&mid);",
          "1046:     if (!id) return Qfalse;",
          "1048:     if (me) {",
          "1049:  if (VISI_CHECK(me->flag, noex))",
          "1050:      return Qtrue;",
          "",
          "[Removed Lines]",
          "1047:     me = rb_method_entry(mod, id, 0);",
          "",
          "[Added Lines]",
          "1047:     me = rb_method_entry_without_refinements(mod, id, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f81b6694ed7d004054e0d11e6362769461af8905",
      "candidate_info": {
        "commit_hash": "f81b6694ed7d004054e0d11e6362769461af8905",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f81b6694ed7d004054e0d11e6362769461af8905",
        "files": [
          "ChangeLog",
          "NEWS",
          "io.c",
          "test/ruby/test_io_m17n.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51583,51594,51638: [Backport #11444]\n\n\t* io.c (rb_io_each_codepoint): read more data when read partially.\n\t  [ruby-core:70379] [Bug #11444]\n\n\t* io.c (rb_io_each_codepoint): raise an exception at incomplete\n\t  character before EOF when conversion takes place.  [Bug #11444]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52831 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "io.c||io.c",
          "test/ruby/test_io_m17n.rb||test/ruby/test_io_m17n.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "io.c||io.c": [
          "File: io.c -> io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3648:   }",
          "3649:   if (more_char(fptr) == MORE_CHAR_FINISHED) {",
          "3650:                     clear_readconv(fptr);",
          "3652:       return io;",
          "3653:   }",
          "3654:      }",
          "3655:      if (MBCLEN_INVALID_P(r)) {",
          "3658:      }",
          "3659:      n = MBCLEN_CHARFOUND_LEN(r);",
          "3660:      if (fptr->encs.enc) {",
          "",
          "[Removed Lines]",
          "3656:   rb_raise(rb_eArgError, \"invalid byte sequence in %s\",",
          "3657:     rb_enc_name(fptr->encs.enc));",
          "",
          "[Added Lines]",
          "3652:       if (!MBCLEN_CHARFOUND_P(r)) {",
          "3653:    enc = fptr->encs.enc;",
          "3654:    goto invalid;",
          "3655:       }",
          "3660:   enc = fptr->encs.enc;",
          "3661:   goto invalid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3684:      rb_yield(UINT2NUM(c));",
          "3685:  }",
          "3686:  else if (MBCLEN_INVALID_P(r)) {",
          "3687:      rb_raise(rb_eArgError, \"invalid byte sequence in %s\", rb_enc_name(enc));",
          "3688:  }",
          "3689:  else {",
          "3690:      continue;",
          "3691:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3691:    invalid:",
          "3694:  else if (MBCLEN_NEEDMORE_P(r)) {",
          "3695:      char cbuf[8], *p = cbuf;",
          "3696:      int more = MBCLEN_NEEDMORE_LEN(r);",
          "3697:      if (more > numberof(cbuf)) goto invalid;",
          "3698:      more += n = fptr->rbuf.len;",
          "3699:      if (more > numberof(cbuf)) goto invalid;",
          "3700:      while ((n = (int)read_buffered_data(p, more, fptr)) > 0 &&",
          "3701:      (p += n, (more -= n) > 0)) {",
          "3702:   if (io_fillbuf(fptr) < 0) goto invalid;",
          "3703:   if ((n = fptr->rbuf.len) > more) n = more;",
          "3704:      }",
          "3705:      r = rb_enc_precise_mbclen(cbuf, p, enc);",
          "3706:      if (!MBCLEN_CHARFOUND_P(r)) goto invalid;",
          "3707:      c = rb_enc_codepoint(cbuf, p, enc);",
          "3708:      rb_yield(UINT2NUM(c));",
          "3709:  }",
          "",
          "---------------"
        ],
        "test/ruby/test_io_m17n.rb||test/ruby/test_io_m17n.rb": [
          "File: test/ruby/test_io_m17n.rb -> test/ruby/test_io_m17n.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # coding: US-ASCII",
          "2: require 'test/unit'",
          "3: require 'tmpdir'",
          "4: require 'timeout'",
          "5: require_relative 'envutil'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: require 'tempfile'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2535:       end",
          "2536:     }",
          "2537:   end if /mswin|mingw/ =~ RUBY_PLATFORM",
          "2538: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2540:   def test_each_codepoint_need_more",
          "2541:     bug11444 = '[ruby-core:70379] [Bug #11444]'",
          "2542:     tests = [",
          "2543:       [\"incomplete multibyte\", \"\\u{1f376}\".b[0,3], [], [\"invalid byte sequence in UTF-8\"]],",
          "2544:       [\"multibyte at boundary\", \"x\"*8190+\"\\u{1f376}\", [\"1f376\"], []],",
          "2545:     ]",
          "2546:     failure = []",
          "2547:     [\"bin\", \"text\"].product(tests) do |mode, (test, data, out, err)|",
          "2548:       code = <<-\"end;\"",
          "2549:         c = nil",
          "2550:         begin",
          "2551:           open(ARGV[0], \"r#{mode[0]}:utf-8\") do |f|",
          "2552:             f.each_codepoint{|i| c = i}",
          "2553:           end",
          "2554:         rescue ArgumentError => e",
          "2555:           STDERR.puts e.message",
          "2556:         else",
          "2557:           printf \"%x\", c",
          "2558:         end",
          "2559:       end;",
          "2560:       Tempfile.create(\"codepoint\") do |f|",
          "2561:         args = ['-e', code, f.path]",
          "2562:         f.print data",
          "2563:         f.close",
          "2564:         begin",
          "2565:           assert_in_out_err(args, \"\", out, err,",
          "2566:                             \"#{bug11444}: #{test} in #{mode} mode\",",
          "2567:                             timeout: 1)",
          "2568:         rescue Exception => e",
          "2569:           failure << e",
          "2570:         end",
          "2571:       end",
          "2572:     end",
          "2573:     unless failure.empty?",
          "2574:       flunk failure.join(\"\\n---\\n\")",
          "2575:     end",
          "2576:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-12-01\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 12",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 429",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 430",
          "",
          "---------------"
        ]
      }
    }
  ]
}