{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
      "candidate_info": {
        "commit_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/73ff84721302f20c56090886fe1fad4cf5544da2",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code of RAND_query_egd_bytes when connect fails.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 1381684daf8800487b48a70cd634f433b1d6366f)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:                 break;",
          "134: #  endif",
          "135:             default:",
          "137:             }",
          "138:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:                 ret = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     int num, ret = 0;",
          "232:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "236:         ret = num;",
          "237:  err:",
          "238:     return (ret);",
          "",
          "[Removed Lines]",
          "233:     if (num < 1)",
          "234:         goto err;",
          "235:     if (RAND_status() == 1)",
          "",
          "[Added Lines]",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
      "candidate_info": {
        "commit_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "files": [
          "crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c"
        ],
        "message": "bn: fix occurances of negative zero\n\nThe BIGNUM behaviour is supposed to be \"consistent\" when going into and\nout of APIs, where \"consistent\" means 'top' is set minimally and that\n'neg' (negative) is not set if the BIGNUM is zero (which is iff 'top' is\nzero, due to the previous point).\n\nThe BN_DEBUG testing (make test) caught the cases that this patch\ncorrects.\n\nNote, bn_correct_top() could have been used instead, but that is intended\nfor where 'top' is expected to (sometimes) require adjustment after direct\nword-array manipulation, and so is heavier-weight. Here, we are just\ncatching the negative-zero case, so we test and correct for that\nexplicitly, in-place.\n\nChange-Id: Iddefbd3c28a13d935648932beebcc765d5b85ae7\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 38d1b3cc0271008b8bd130a2c4b442775b028a08)",
        "before_after_code_files": [
          "crypto/bn/bn_div.c||crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c||crypto/bn/bn_word.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_div.c||crypto/bn/bn_div.c": [
          "File: crypto/bn/bn_div.c -> crypto/bn/bn_div.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     wnump = &(snum->d[num_n - 1]);",
          "258:     if (!bn_wexpand(res, (loop + 1)))",
          "259:         goto err;",
          "260:     res->top = loop - no_branch;",
          "261:     resp = &(res->d[loop - 1]);",
          "",
          "[Removed Lines]",
          "257:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "[Added Lines]",
          "259:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "857:             goto err;",
          "858:     } else",
          "859:         rr = r;",
          "862: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "863:     i = al - bl;",
          "",
          "[Removed Lines]",
          "860:     rr->neg = a->neg ^ b->neg;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "969: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "970:  end:",
          "971: #endif",
          "972:     bn_correct_top(rr);",
          "973:     if (r != rr && BN_copy(r, rr) == NULL)",
          "974:         goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971:     rr->neg = a->neg ^ b->neg;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c": [
          "File: crypto/bn/bn_shift.c -> crypto/bn/bn_shift.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         return 0;",
          "93:     }",
          "96:     nw = n / BN_BITS2;",
          "97:     if (bn_wexpand(r, a->top + nw + 1) == NULL)",
          "98:         return (0);",
          "99:     lb = n % BN_BITS2;",
          "100:     rb = BN_BITS2 - lb;",
          "101:     f = a->d;",
          "",
          "[Removed Lines]",
          "95:     r->neg = a->neg;",
          "",
          "[Added Lines]",
          "98:     r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:     }",
          "141:     i = (BN_num_bits(a) - n + (BN_BITS2 - 1)) / BN_BITS2;",
          "142:     if (r != a) {",
          "144:         if (bn_wexpand(r, i) == NULL)",
          "145:             return (0);",
          "146:     } else {",
          "147:         if (n == 0)",
          "",
          "[Removed Lines]",
          "143:         r->neg = a->neg;",
          "",
          "[Added Lines]",
          "145:         r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "166:         if ((l = (l >> rb) & BN_MASK2))",
          "168:     }",
          "169:     bn_check_top(r);",
          "170:     return (1);",
          "171: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:     if (!r->top)",
          "",
          "---------------"
        ],
        "crypto/bn/bn_word.c||crypto/bn/bn_word.c": [
          "File: crypto/bn/bn_word.c -> crypto/bn/bn_word.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     if ((a->top > 0) && (a->d[a->top - 1] == 0))",
          "90:         a->top--;",
          "91:     ret >>= j;",
          "92:     bn_check_top(a);",
          "93:     return (ret);",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     if (!a->top)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "173738281046d280bcf7671b6b4218cc95f239cd",
      "candidate_info": {
        "commit_hash": "173738281046d280bcf7671b6b4218cc95f239cd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/173738281046d280bcf7671b6b4218cc95f239cd",
        "files": [
          "NOTES.WIN"
        ],
        "message": "NOTES.WIN: mention Strawberry Perl as option.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 3a80bd29be74b50771dd20e15282db693dbe9522)",
        "before_after_code_files": [
          "NOTES.WIN||NOTES.WIN"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "NOTES.WIN||NOTES.WIN": [
          "File: NOTES.WIN -> NOTES.WIN",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  this are required as well:",
          "11:  - You need Perl.  We recommend ActiveState Perl, available from",
          "13:    You also need the perl module Text::Template, available on CPAN.",
          "14:    Please read NOTES.PERL for more information.",
          "",
          "[Removed Lines]",
          "12:    https://www.activestate.com/ActivePerl.",
          "",
          "[Added Lines]",
          "12:    https://www.activestate.com/ActivePerl. Another viable alternative",
          "13:    appears to be Strawberry Perl, http://strawberryperl.com.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
      "candidate_info": {
        "commit_hash": "13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Avoid questionable use of the value of a pointer that refers to space deallocated by a call to the free function in tls_decrypt_ticket.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2897)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3170:     p = sdec;",
          "3172:     sess = d2i_SSL_SESSION(NULL, &p, slen);",
          "3173:     OPENSSL_free(sdec);",
          "3174:     if (sess) {",
          "3177:             SSL_SESSION_free(sess);",
          "3178:             return 2;",
          "3179:         }",
          "",
          "[Removed Lines]",
          "3176:         if (p != sdec + slen || sess->session_id_length != 0) {",
          "",
          "[Added Lines]",
          "3173:     slen -= p - sdec;",
          "3177:         if (slen != 0 || sess->session_id_length != 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
      "candidate_info": {
        "commit_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "files": [
          "test/ct_test.c"
        ],
        "message": "Make sure things get deleted when test setup fails in ct_test.c\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 765731a88899771989a53c72259cacd1c658bb3f)",
        "before_after_code_files": [
          "test/ct_test.c||test/ct_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ct_test.c||test/ct_test.c": [
          "File: test/ct_test.c -> test/ct_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: {",
          "62:     CT_TEST_FIXTURE fixture;",
          "63:     int setup_ok = 1;",
          "66:     memset(&fixture, 0, sizeof(fixture));",
          "71:         setup_ok = 0;",
          "72:         fprintf(stderr, \"Failed to create a new CT log store\\n\");",
          "73:         goto end;",
          "74:     }",
          "77:         setup_ok = 0;",
          "78:         fprintf(stderr, \"Failed to load CT log list\\n\");",
          "79:         goto end;",
          "80:     }",
          "86: end:",
          "87:     if (!setup_ok) {",
          "88:         exit(EXIT_FAILURE);",
          "89:     }",
          "90:     return fixture;",
          "",
          "[Removed Lines]",
          "64:     CTLOG_STORE *ctlog_store;",
          "68:     ctlog_store = CTLOG_STORE_new();",
          "70:     if (ctlog_store == NULL) {",
          "76:     if (CTLOG_STORE_load_default_file(ctlog_store) != 1) {",
          "82:     fixture.test_case_name = test_case_name;",
          "84:     fixture.ctlog_store = ctlog_store;",
          "",
          "[Added Lines]",
          "67:     fixture.test_case_name = test_case_name;",
          "69:     fixture.ctlog_store = CTLOG_STORE_new();",
          "71:     if (fixture.ctlog_store == NULL) {",
          "77:     if (CTLOG_STORE_load_default_file(fixture.ctlog_store) != 1) {",
          "85:         CTLOG_STORE_free(fixture.ctlog_store);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:     const char extensions[] = \"\";",
          "516:     const char signature[] = \"BAMARzBAMiBIL2dRrzXbplQ2vh/WZA89v5pBQpSVkkUwKI+j5\"",
          "517:             \"eI+BgIhAOTtwNs6xXKx4vXoq2poBlOYfc9BAn3+/6EFUZ2J7b8I\";",
          "519:     SETUP_CT_TEST_FIXTURE();",
          "526:     if (sct == NULL) {",
          "527:         fprintf(stderr, \"Failed to create SCT from base64-encoded test data\\n\");",
          "528:         return 0;",
          "529:     }",
          "533:     fixture.sct_dir = ct_dir;",
          "534:     fixture.sct_text_file = \"tls1.sct\";",
          "535:     EXECUTE_CT_TEST();",
          "",
          "[Removed Lines]",
          "521:     STACK_OF(SCT) *sct_list = sk_SCT_new_null();",
          "522:     SCT *sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "523:                                    CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "524:                                    extensions, signature);",
          "531:     sk_SCT_push(sct_list, sct);",
          "532:     fixture.sct_list = sct_list;",
          "",
          "[Added Lines]",
          "516:     SCT *sct = NULL;",
          "520:     fixture.sct_list = sk_SCT_new_null();",
          "521:     sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "522:                               CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "523:                               extensions, signature);",
          "526:         tear_down(fixture);",
          "531:     sk_SCT_push(fixture.sct_list, sct);",
          "",
          "---------------"
        ]
      }
    }
  ]
}