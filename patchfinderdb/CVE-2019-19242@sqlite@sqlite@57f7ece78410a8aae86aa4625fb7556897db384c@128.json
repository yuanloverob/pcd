{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "23a885956e6f6798bf0b75ddf083e77c77ed41cd",
      "candidate_info": {
        "commit_hash": "23a885956e6f6798bf0b75ddf083e77c77ed41cd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/23a885956e6f6798bf0b75ddf083e77c77ed41cd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/global.c",
          "src/main.c",
          "src/memdb.c",
          "src/sqlite.h.in",
          "src/sqliteInt.h"
        ],
        "message": "Add the SQLITE_CONFIG_MEMDB_MAXSIZE configuration option for configuring the default maximum size of an in-memory database created using sqlite3_deserialize().  This is necessary to make the interface reasonably testable.\n\nFossilOrigin-Name: cb72ee0478ce98c48aae059fd5de4e36caf2b8c953e08fcb799bfd119ad46b73",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/global.c||src/global.c",
          "src/main.c||src/main.c",
          "src/memdb.c||src/memdb.c",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b80119bd6044c0993210115732b6ae7b4b0b29c1471b0723bef24f2052c8e671",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/global.c||src/global.c": [
          "File: src/global.c -> src/global.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: #ifndef SQLITE_MEMDB_DEFAULT_MAXSIZE",
          "196: # define SQLITE_MEMDB_DEFAULT_MAXSIZE 1073741824",
          "197: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "238: #endif",
          "239: #ifndef SQLITE_UNTESTABLE",
          "241: #endif",
          "246: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246: #ifdef SQLITE_ENABLE_DESERIALIZE",
          "248: #endif",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:     }",
          "656:     default: {",
          "657:       rc = SQLITE_ERROR;",
          "658:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656: #ifdef SQLITE_ENABLE_DESERIALIZE",
          "657:     case SQLITE_CONFIG_MEMDB_MAXSIZE: {",
          "658:       sqlite3GlobalConfig.mxMemdbSize = va_arg(ap, sqlite3_int64);",
          "659:       break;",
          "660:     }",
          "",
          "---------------"
        ],
        "src/memdb.c||src/memdb.c": [
          "File: src/memdb.c -> src/memdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: };",
          "",
          "[Removed Lines]",
          "46: #ifndef SQLITE_MEMDB_DEFAULT_MAXSIZE",
          "47: # define SQLITE_MEMDB_DEFAULT_MAXSIZE 1073741824",
          "48: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:   p->base.pMethods = &memdb_io_methods;",
          "350:   return SQLITE_OK;",
          "351: }",
          "",
          "[Removed Lines]",
          "349:   p->szMax = SQLITE_MEMDB_DEFAULT_MAXSIZE;",
          "",
          "[Added Lines]",
          "344:   p->szMax = sqlite3GlobalConfig.mxMemdbSize;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "598:     p->sz = szDb;",
          "599:     p->szAlloc = szBuf;",
          "600:     p->szMax = szBuf;",
          "603:     }",
          "604:     p->mFlags = mFlags;",
          "605:     rc = SQLITE_OK;",
          "",
          "[Removed Lines]",
          "601:     if( p->szMax<SQLITE_MEMDB_DEFAULT_MAXSIZE ){",
          "602:       p->szMax = SQLITE_MEMDB_DEFAULT_MAXSIZE;",
          "",
          "[Added Lines]",
          "596:     if( p->szMax<sqlite3GlobalConfig.mxMemdbSize ){",
          "597:       p->szMax = sqlite3GlobalConfig.mxMemdbSize;",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3430: #endif",
          "3431: #ifndef SQLITE_UNTESTABLE",
          "3433: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3431: #ifdef SQLITE_ENABLE_DESERIALIZE",
          "3433: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf175c193bfd5a2220d24938e7f91821fd4b7f56",
      "candidate_info": {
        "commit_hash": "cf175c193bfd5a2220d24938e7f91821fd4b7f56",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cf175c193bfd5a2220d24938e7f91821fd4b7f56",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/between.test"
        ],
        "message": "Avoid transforming TK_COLLATE or TK_UNLIKELY Expr nodes to TK_REFERENCE. Instead, transform the uppermost Expr node in the expression tree that is not of this type. Fix for [e1e07ef2].\n\nFossilOrigin-Name: 54110870487f78013ab1b554413c18baa2bdc07d979bc65c110f32d30c3b53fe",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/between.test||test/between.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ca4ddfefc1be1afbf366d87c47f0dd1122350d7ab34ba60020c5babb64a654a4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3391:   p->op2 = p->op;",
          "3392:   p->op = TK_REGISTER;",
          "3393:   p->iTable = iReg;",
          "",
          "[Removed Lines]",
          "3390: static void exprToRegister(Expr *p, int iReg){",
          "",
          "[Added Lines]",
          "3390: static void exprToRegister(Expr *pExpr, int iReg){",
          "3391:   Expr *p = sqlite3ExprSkipCollate(pExpr);",
          "",
          "---------------"
        ],
        "test/between.test||test/between.test": [
          "File: test/between.test -> test/between.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   }",
          "120: } {4 2 25 27 sort t1 *}",
          "123: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: #-------------------------------------------------------------------------",
          "123: reset_db",
          "124: do_execsql_test between-2.0 {",
          "125:   CREATE TABLE t1(x TEXT, y TEXT COLLATE nocase);",
          "126:   INSERT INTO t1 VALUES('0', 'abc');",
          "127: }",
          "129: foreach {tn expr res} {",
          "130:   1 \"x                BETWEEN 1 AND '5'\" 0",
          "131:   2 \"x COLLATE binary BETWEEN 1 AND '5'\" 0",
          "132:   3 \"x COLLATE nocase BETWEEN 1 AND '5'\" 0",
          "134:   4 \"y                  BETWEEN 'A' AND 'B'\" 1",
          "135:   5 \"y COLLATE nocase   BETWEEN 'A' AND 'B'\" 1",
          "136:   6 \"y COLLATE binary   BETWEEN 'A' AND 'B'\" 0",
          "137:   7 \"(y COLLATE binary) BETWEEN 'A' AND 'B'\" 0",
          "138: } {",
          "139:   set sql \"SELECT $expr FROM t1\"",
          "140:   do_execsql_test between-2.1.$tn $sql $res",
          "141: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce3c3eeda0c76b344dba836d139b7ed8871fb7c3",
      "candidate_info": {
        "commit_hash": "ce3c3eeda0c76b344dba836d139b7ed8871fb7c3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ce3c3eeda0c76b344dba836d139b7ed8871fb7c3",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix two assert() statements in fts5 that are only true if the database is not corrupt.\n\nFossilOrigin-Name: edb095a9a679c8c702abd0a487e55ed4b09110b54bcd7d5275020576f2713a39",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2643:   }else{",
          "2644:     int res = fts5BufferCompare(&p1->term, &p2->term);",
          "2645:     if( res==0 ){",
          "2648:       pRes->bTermEq = 1;",
          "2649:       if( p1->iRowid==p2->iRowid ){",
          "2650:         p1->bDel = p2->bDel;",
          "",
          "[Removed Lines]",
          "2646:       assert( i2>i1 );",
          "2647:       assert( i2!=0 );",
          "",
          "[Added Lines]",
          "2646:       assert_nc( i2>i1 );",
          "2647:       assert_nc( i2!=0 );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "7999:   INSERT INTO t1(b) VALUES(randomblob(250));",
          "8000: } {1 {database disk image is malformed}}",
          "8002: sqlite3_fts5_may_be_corrupt 0",
          "8003: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8002: #-------------------------------------------------------------------------",
          "8003: reset_db",
          "8004: do_test 57.0 {",
          "8005:   sqlite3 db {}",
          "8006:   db deserialize [decode_hexdb {",
          "8007: | size 28672 pagesize 4096 filename x.db",
          "8008: | page 1 offset 0",
          "8009: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8010: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "8011: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "8012: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "8013: |     96: 00 2e 34 20 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..4 ...........m",
          "8014: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "8015: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "8016: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "8017: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "8018: |   3584: 61 6b 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   aket1_configt1_c",
          "8019: |   3600: 6f 7e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   o~fig.CREATE TAB",
          "8020: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "8021: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "8022: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "8023: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "8024: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "8025: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "8026: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "8027: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "8028: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "8029: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 1d   !.wtablet1_cont.",
          "8030: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "8031: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "8032: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "8033: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "8034: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "8035: |   3856: 74 31 5f 69 64 78 74 31 5f 59 64 78 03 43 52 45   t1_idxt1_Ydx.CRE",
          "8036: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "8037: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "8038: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "8039: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "8040: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "8041: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "8042: |   3968: 74 61 74 31 5f 64 61 64 61 02 43 52 45 41 54 45   tat1_dada.CREATE",
          "8043: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "8044: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "8045: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "8046: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "8047: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "8048: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "8049: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "8050: | page 2 offset 4096",
          "8051: |      0: 0d 0e b4 00 06 0e 35 00 0f e8 0e 35 0f bd 0f 4e   ......5....5...N",
          "8052: |     16: 0e cb 0e 4f 00 00 00 00 00 00 00 00 00 00 00 00   ...O............",
          "8053: |   3632: 00 00 00 00 00 18 0a 03 00 36 00 00 00 00 01 04   .........6......",
          "8054: |   3648: 04 00 04 01 01 01 02 01 01 03 01 01 04 01 01 5e   ...............^",
          "8055: |   3664: 90 80 80 80 80 01 04 00 81 40 00 00 00 51 06 30   .........@...Q.0",
          "8056: |   3680: 61 62 61 63 6b 01 01 04 04 6e 64 6f 6e 01 01 02   aback....ndon...",
          "8057: |   3696: 04 63 69 76 65 01 01 02 04 6c 70 68 61 01 01 02   .cive....lpha...",
          "8058: |   3712: 03 74 6f 6d 01 01 01 06 62 61 63 6b 75 70 01 01   .tom....backup..",
          "8059: |   3728: 02 05 6f 6f 6d 65 72 01 01 01 06 63 68 61 6e 6e   ..oomer....chann",
          "8060: |   3744: 65 01 01 01 04 74 65 73 74 01 01 04 09 08 08 08   e....test.......",
          "8061: |   3760: 07 0a 09 0a 0f 3a 00 17 30 00 00 00 00 01 03 03   .....:..0.......",
          "8062: |   3776: 00 03 01 01 01 02 01 01 03 01 01 68 8c 80 80 80   ...........h....",
          "8063: |   3792: 80 01 04 00 81 54 00 00 00 5b 06 30 61 62 61 63   .....T...[.0abac",
          "8064: |   3808: 6b 02 02 07 04 04 6e 64 6f 6e 02 02 05 02 04 63   k.....ndon.....c",
          "8065: |   3824: 69 76 65 02 02 0b 02 04 6c 70 68 61 02 04 02 0a   ive.....lpha....",
          "8066: |   3840: 02 03 74 6f 6d 02 02 09 01 06 62 61 63 6b 75 70   ..tom.....backup",
          "8067: |   3856: 02 02 04 02 05 6f 6f 6d 65 72 02 02 08 01 06 63   .....oomer.....c",
          "8068: |   3872: 68 61 6e 6e 65 02 02 03 01 04 74 65 73 74 02 02   hanne.....test..",
          "8069: |   3888: 06 04 0a 09 09 0a 08 0b 0a 0b 0f ef 00 14 2a 00   ..............*.",
          "8070: |   3904: 00 00 00 01 02 02 00 02 01 01 01 02 01 01 68 88   ..............h.",
          "8071: |   3920: 80 80 80 80 01 04 00 81 54 00 00 00 5b 06 30 61   ........T...[.0a",
          "8072: |   3936: 62 61 63 6b 01 02 07 04 04 6e 64 6f 6e 01 02 05   back.....ndon...",
          "8073: |   3952: 02 04 63 69 76 65 01 02 0b 02 04 6c 70 68 61 01   ..cive.....lpha.",
          "8074: |   3968: 04 02 0a 02 03 74 6f 6d 01 02 09 01 06 62 61 63   .....tom.....bac",
          "8075: |   3984: 6b 75 70 01 02 04 02 05 6f 6f 6d 65 72 01 02 08   kup.....oomer...",
          "8076: |   4000: 01 06 63 68 61 6e 6e 65 01 02 03 01 04 74 65 73   ..channe.....tes",
          "8077: |   4016: 74 01 02 06 04 0a 09 09 0a 08 0b 0a 0b 24 84 80   t............$..",
          "8078: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "8079: |   4048: 63 6b 01 02 02 05 42 66 74 02 02 02 04 04 6e 64   ck....Bft.....nd",
          "8080: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 04 0d 00   on..............",
          "8081: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "8082: | page 3 offset 8192",
          "8083: |      0: 0a 00 00 00 04 0f e5 00 00 00 0f f3 0f ec 0f e5   ................",
          "8084: |   4064: 00 00 00 00 00 06 04 01 0c 01 04 02 06 04 01 0c   ................",
          "8085: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0d 01 02   ................",
          "8086: | page 4 offset 12288",
          "8087: |      0: 0d 0e bc 00 04 0e 78 00 00 00 00 00 00 00 0e 78   ......x........x",
          "8088: |     16: 0e 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .x..............",
          "8089: |   3696: 00 00 00 00 00 00 00 00 42 02 04 00 81 09 61 6c   ........B.....al",
          "8090: |   3712: 70 68 61 20 63 68 61 6e 6e 65 20 62 61 63 6b 75   pha channe backu",
          "8091: |   3728: 70 20 61 62 61 6e 64 6f 6e 20 74 65 73 74 20 61   p abandon test a",
          "8092: |   3744: 62 61 63 6b 20 62 6f 6f 6d 65 72 20 61 74 6f 6d   back boomer atom",
          "8093: |   3760: 20 61 6c 70 68 61 20 61 63 69 76 65 00 00 00 44    alpha acive...D",
          "8094: |   3776: 81 09 61 6c 70 68 61 20 63 68 61 6e 6e 65 20 62   ..alpha channe b",
          "8095: |   3792: 61 63 6b 75 70 20 61 62 61 6e 64 6f 6e 20 74 65   ackup abandon te",
          "8096: |   3808: 73 74 20 61 62 61 63 6b 20 62 6f 6f 6d 65 72 20   st aback boomer",
          "8097: |   3824: 61 74 6f 6d 20 61 6c 70 68 61 20 61 63 69 76 65   atom alpha acive",
          "8098: |   4064: 0a 03 03 00 1b 61 4e 61 6e 64 6f 6e 08 02 03 00   .....aNandon....",
          "8099: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 71 63 6b   .abaft.....abqck",
          "8100: | page 5 offset 16384",
          "8101: |      0: 0d 0f e8 00 04 0f e2 00 00 00 00 00 00 00 0f e2   ................",
          "8102: |     16: 0f e2 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "8103: |   4064: 00 00 04 02 03 00 0e 0a 00 00 00 06 0e 0a 04 03   ................",
          "8104: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 10 0e 01   ................",
          "8105: | page 6 offset 20480",
          "8106: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "8107: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "8108: | page 7 offset 24576",
          "8109: |      0: 0d 00 00 00 03 0f d6 00 0f f4 00 00 00 00 00 00   ................",
          "8110: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "8111: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "8112: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "8113: | end x.db",
          "8114: }]} {}",
          "8116: do_catchsql_test 57.1 {",
          "8117:   INSERT INTO t1(t1) VALUES('optimize')",
          "8118: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c0381b0bc90aa3c2415c4b3ac338cfe6d308bb5d4247bc6f2b6e919f549c254c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ba88c7f1d1e5ae00624ed13bc499aaec2a74183",
      "candidate_info": {
        "commit_hash": "1ba88c7f1d1e5ae00624ed13bc499aaec2a74183",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1ba88c7f1d1e5ae00624ed13bc499aaec2a74183",
        "files": [
          "ext/rtree/sqlite3rtree.h",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a typo in a comment. No changes to code.\n\nFossilOrigin-Name: 23684cb841ac2cb0d69e5470253bd96feb733762a7553b952a08470834fe85fa",
        "before_after_code_files": [
          "ext/rtree/sqlite3rtree.h||ext/rtree/sqlite3rtree.h",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/sqlite3rtree.h||ext/rtree/sqlite3rtree.h": [
          "File: ext/rtree/sqlite3rtree.h -> ext/rtree/sqlite3rtree.h"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 33576b12b450a37b467ba012e77b297eb80d7147b12a5b23302009bb32455720",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c12655df87805b40eb6cf203a17ff3bc977f3574",
      "candidate_info": {
        "commit_hash": "c12655df87805b40eb6cf203a17ff3bc977f3574",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c12655df87805b40eb6cf203a17ff3bc977f3574",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "test/reindex.test"
        ],
        "message": "Fix an assert() and potential buffer overrun in fts5 that could occur if the database was corrupt.\n\nFossilOrigin-Name: 8be8bd0d562e571b73a93f4ed18258ebd114bbab67ee3cdcd66a4c8f2987f8dc",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "test/reindex.test||test/reindex.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4958:     fts5DoclistIterInit(p1, &i1);",
          "4959:     fts5DoclistIterInit(p2, &i2);",
          "",
          "[Removed Lines]",
          "4957:     if( sqlite3Fts5BufferSize(&p->rc, &out, p1->n + p2->n + 9) ) return;",
          "",
          "[Added Lines]",
          "4963:     if( sqlite3Fts5BufferSize(&p->rc, &out, p1->n + p2->n + 9+10+10) ) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4965:         fts5BufferSafeAppendBlob(&out, i1.aPoslist, i1.nPoslist+i1.nSize);",
          "4966:         fts5DoclistIterNext(&i1);",
          "4967:         if( i1.aPoslist==0 ) break;",
          "4969:       }",
          "4970:       else if( i2.iRowid!=i1.iRowid ){",
          "",
          "[Removed Lines]",
          "4968:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "4974:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4973:         fts5BufferSafeAppendBlob(&out, i2.aPoslist, i2.nPoslist+i2.nSize);",
          "4974:         fts5DoclistIterNext(&i2);",
          "4975:         if( i2.aPoslist==0 ) break;",
          "4977:       }",
          "4978:       else{",
          "",
          "[Removed Lines]",
          "4976:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "4982:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4998:         sqlite3Fts5PoslistNext64(a1, i1.nPoslist, &iOff1, &iPos1);",
          "4999:         sqlite3Fts5PoslistNext64(a2, i2.nPoslist, &iOff2, &iPos2);",
          "5002:         if( iPos1<iPos2 ){",
          "5003:           sqlite3Fts5PoslistSafeAppend(&tmp, &iPrev, iPos1);",
          "",
          "[Removed Lines]",
          "5000:         assert( iPos1>=0 && iPos2>=0 );",
          "",
          "[Added Lines]",
          "5006:         assert_nc( iPos1>=0 && iPos2>=0 );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5031:           aCopy = &a1[iOff1];",
          "5032:           nCopy = i1.nPoslist - iOff1;",
          "5033:         }else{",
          "5035:           sqlite3Fts5PoslistSafeAppend(&tmp, &iPrev, iPos2);",
          "5036:           aCopy = &a2[iOff2];",
          "5037:           nCopy = i2.nPoslist - iOff2;",
          "",
          "[Removed Lines]",
          "5034:           assert( iPos2>=0 && iPos2!=iPrev );",
          "",
          "[Added Lines]",
          "5039:           assert_nc( iPos2>=0 && iPos2!=iPrev );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5045:         fts5BufferSafeAppendBlob(&out, tmp.p, tmp.n);",
          "5046:         fts5DoclistIterNext(&i1);",
          "5047:         fts5DoclistIterNext(&i2);",
          "5049:         if( i1.aPoslist==0 || i2.aPoslist==0 ) break;",
          "5051:       }",
          "5052:     }",
          "",
          "[Removed Lines]",
          "5048:         assert( out.n<=(p1->n+p2->n+9) );",
          "5050:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "5053:         assert_nc( out.n<=(p1->n+p2->n+9) );",
          "5055:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5059:       fts5MergeAppendDocid(&out, iLastRowid, i2.iRowid);",
          "5060:       fts5BufferSafeAppendBlob(&out, i2.aPoslist, i2.aEof - i2.aPoslist);",
          "5061:     }",
          "5064:     fts5BufferSet(&p->rc, p1, out.n, out.p);",
          "5065:     fts5BufferFree(&tmp);",
          "",
          "[Removed Lines]",
          "5062:     assert( out.n<=(p1->n+p2->n+9) );",
          "",
          "[Added Lines]",
          "5067:     assert_nc( out.n<=(p1->n+p2->n+9) );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: sqlite3_fts5_may_be_corrupt 1",
          "26: database_may_be_corrupt",
          "30: proc create_t1 {} {",
          "31:   expr srand(0)",
          "32:   db func rnddoc fts5_rnddoc",
          "",
          "[Removed Lines]",
          "28: if 0 {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5815: } {}",
          "5817: do_catchsql_test 44.2 {",
          "5819: } {1 {database disk image is malformed}}",
          "5822:   SELECT snippet(t1, -1, '.', '..', '', 2 ) FROM t1('g h') ORDER BY rank;",
          "5825: #--------------------------------------------------------------------------",
          "5826: reset_db",
          "",
          "[Removed Lines]",
          "5818: INSERT INTO t1(t1) VALUES('integrity-check');",
          "5821: do_catchsql_test 44.2 {",
          "5823: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "5816:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "5819: do_catchsql_test 44.3 {",
          "5821: } {0 {{.g.. .h..} {.g.. h} {.g.. .h..}}}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6420: }]} {}",
          "6422: do_catchsql_test 47.1 {",
          "6426: } {1 {database disk image is malformed}}",
          "6428: #--------------------------------------------------------------------------",
          "6429: reset_db",
          "6430: do_test 48.0 {",
          "",
          "[Removed Lines]",
          "6423:   SELECT snippet(t1, -1, '.', '..', '[', 50),",
          "6424:          highlight(t1, 2, '[', ']') FROM t1('g h')",
          "6425:   WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank;",
          "",
          "[Added Lines]",
          "6421:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "6424: do_catchsql_test 47.2 {",
          "6425:   SELECT count(*) FROM (",
          "6426:       SELECT snippet(t1, -1, '.', '..', '[', 50),",
          "6427:       highlight(t1, 2, '[', ']') FROM t1('g h')",
          "6428:       WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank",
          "6429:   )",
          "6430: } {0 3}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8340:   SELECT * FROM t1('t*');",
          "8341: } {{} {} {} {} {} {}}",
          "8345: #-------------------------------------------------------------------------",
          "8346: do_test 59.0 {",
          "8347:   sqlite3 db {}",
          "",
          "[Removed Lines]",
          "8343: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8545:   SELECT (matchinfo(591,t1)) FROM t1 WHERE t1 MATCH 'e*e\u009f'",
          "8546: } {0 {}}",
          "8548: sqlite3_fts5_may_be_corrupt 0",
          "8549: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8550: #-------------------------------------------------------------------------",
          "8551: do_test 60.0 {",
          "8552:   sqlite3 db {}",
          "8553:   db deserialize [decode_hexdb {",
          "8554: .open --hexdb",
          "8555: | size 32768 pagesize 4096 filename crash-c77b90b929dc92.db",
          "8556: | page 1 offset 0",
          "8557: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8558: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8559: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "8560: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 00 00 00 00 00 00   ...k............",
          "8561: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "8562: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "8563: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "8564: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "8565: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "8566: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "8567: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "8568: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "8569: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "8570: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "8571: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "8572: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "8573: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "8574: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "8575: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "8576: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "8577: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "8578: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "8579: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8580: |   3776: 63 30 2c 20 63 31 2c d6 63 32 29 69 04 07 17 19   c0, c1,.c2)i....",
          "8581: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "8582: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "8583: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "8584: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "8585: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "8586: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "8587: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "8588: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "8589: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "8590: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "8591: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "8592: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "8593: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "8594: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "8595: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "8596: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "8597: | page 3 offset 8192",
          "8598: |      0: 0d 00 00 00 03 0c 93 ff 0f e6 0f ef 0c 94 00 00   ................",
          "8599: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "8600: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "8601: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 31 31 36 30   ...........21160",
          "8602: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 33 f1   609...........3.",
          "8603: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 03 01 02   ..........5.....",
          "8604: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 3d   ......0000000..=",
          "8605: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "8606: |   3328: 01 02 02 03 06 01 01 f2 03 06 4e 02 02 03 06 01   ..........N.....",
          "8607: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8608: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8609: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "8610: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "8611: |   3408: 62 73 74 61 74 07 02 03 01 02 13 01 02 03 02 04   bstat...........",
          "8612: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 07 65   ebug...........e",
          "8613: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "8614: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "8615: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "8616: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "8617: |   3504: 02 01 02 02 02 08 76 b4 65 6e 73 69 6f 6e 1f 02   ......v.ension..",
          "8618: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "8619: |   3536: 01 02 03 01 02 03 04 01 25 0d 02 03 01 02 03 01   ........%.......",
          "8620: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "8621: |   3568: 02 06 65 6f 70 6f 6c 79 0f f2 03 01 02 03 01 02   ..eopoly........",
          "8622: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "8623: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "8624: |   3616: 00 03 6d 61 78 1c 02 0c 01 02 02 01 02 02 02 05   ..max...........",
          "8625: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "8626: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "8627: |   3664: 6f 63 61 73 65 02 06 01 02 02 13 06 00 f2 02 03   ocase...........",
          "8628: |   3680: 06 01 12 02 13 06 01 02 02 03 06 01 02 02 03 06   ................",
          "8629: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8630: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8631: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "8632: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "8633: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "8634: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8635: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8636: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8637: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "8638: |   3840: 02 02 01 02 02 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "8639: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "8640: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "8641: |   3888: 01 06 01 11 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8642: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8643: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "8644: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8645: |   3952: 02 01 06 01 01 01 f1 06 01 01 02 ad 06 01 01 02   ................",
          "8646: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8647: |   3984: 06 01 01 01 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8648: |   4000: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "8649: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8650: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "8651: |   4048: 12 44 13 11 0f 47 13 0e fc 0e 11 10 0f 0e 10 0f   .D...G..........",
          "8652: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "8653: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "8654: | page 4 offset 12288",
          "8655: |      0: 0a 00 00 00 01 0f 00 00 00 00 00 00 00 00 00 00   ................",
          "8656: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "8657: | page 5 offset 16384",
          "8658: |      0: 0d 00 00 00 24 0c 0a 00 0f 00 00 00 00 00 00 00   ....$...........",
          "8659: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "8660: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "8661: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "8662: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 8f   DSAFE=0XNOCASE..",
          "8663: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 43 41 46 45 3d   ..%..THREADCAFE=",
          "8664: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "8665: |   3168: 49 54 20 4b 4f 41 44 21 45 58 54 45 4e 53 49 4f   IT KOAD!EXTENSIO",
          "8666: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "8667: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "8668: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "8669: |   3232: 4f 4d 59 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMYT LOAD EXTENS",
          "8670: |   3248: 49 4f 4e 58 52 54 56 a9 4d 1f 1e 05 00 33 0f 19   IONXRTV.M....3..",
          "8671: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "8672: |   3280: 30 30 30 57 42 49 4e 31 52 59 1f 1d 05 00 33 0f   000WBIN1RY....3.",
          "8673: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "8674: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 32   0000XNOCASE....2",
          "8675: |   3328: 0f 17 4e 41 58 20 4d 45 4d 4f 52 59 2d 35 30 30   ..NAX MEMORY-500",
          "8676: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "8677: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "8678: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8679: |   3392: 4c 45 20 52 54 52 45 45 59 4e 4f 43 41 53 45 17   LE RTREEYNOCASE.",
          "8680: |   3408: 19 66 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   .f.%..ENABLE RTR",
          "8681: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "8682: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "8683: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "8684: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "8685: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "8686: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 10 25   MSYS5XRTRIM....%",
          "8687: |   3520: 0f 19 45 4e 40 42 4c 45 20 4a 53 4f 4e 31 58 42   ..EN@BLE JSON1XB",
          "8688: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8689: |   3552: 4c 45 20 4a 53 4f 4e 32 58 4e 4f 43 41 53 45 17   LE JSON2XNOCASE.",
          "8690: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "8691: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "8692: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "8693: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4f 81 42 4c   NARY....)..EO.BL",
          "8694: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 51 53 45   E GEOPOLYXNOCQSE",
          "8695: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "8696: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "8697: |   3680: 0f 1a 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "8698: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "8699: |   3712: 45 20 46 54 53 35 48 4e 4f 43 41 53 45 16 1d 05   E FTS5HNOCASE...",
          "8700: |   3728: 00 23 0f a4 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "8701: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "8702: |   3760: 4c 45 20 46 55 53 34 58 42 49 4e 41 52 59 17 0b   LE FUS4XBINARY..",
          "8703: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "8704: |   3792: 57 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   WNOCASE....#..EN",
          "8705: |   3808: 41 42 4c 45 20 46 54 53 34 05 52 54 52 49 4d 1e   ABLE FTS4.RTRIM.",
          "8706: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8707: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "8708: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8709: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "8710: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8711: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "8712: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 8a 4e 41 52   .....DEBUGXB.NAR",
          "8713: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "8714: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "8715: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "8716: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "8717: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "8718: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3f 87   ...C..COMPILER?.",
          "8719: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "8720: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "8721: |   4064: 45 0d 60 59 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   E.`YLER=gcc-5.4.",
          "8722: |   4080: 30 20 32 30 31 36 30 36 30 39 68 52 54 52 49 4d   0 20160609hRTRIM",
          "8723: | page 6 offset 20480",
          "8724: |      0: 0d 00 00 00 24 0e 00 00 00 00 00 00 00 00 00 00   ....$...........",
          "8725: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "8726: |   3824: 06 22 03 01 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "8727: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 02 01   . ..............",
          "8728: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "8729: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "8730: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "8731: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "8732: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "8733: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "8734: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "8735: |   3968: 06 00 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "8736: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "8737: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "8738: |   4016: 06 0a 03 00 12 02 01 01 06 09 03 00 12 03 01 01   ................",
          "8739: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "8740: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "8741: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "8742: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "8743: | page 7 offset 24576",
          "8744: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "8745: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "8746: | page 8 offset 28672",
          "8747: |   4048: 00 00 00 00 00 00 5d 03 00 00 00 00 00 00 00 00   ......].........",
          "8748: | end crash-c77b90b929dc92.db",
          "8749: }]} {}",
          "8752: do_catchsql_test 60.2 {",
          "8753:   SELECT (matchinfo(t1,591)) FROM t1 WHERE t1 MATCH 'e*e\u009f'",
          "8754: } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f7aadfab3bb8eb8eb2cd62dc8a6823538387b3329f1efc23ef75482488109478",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/reindex.test||test/reindex.test": [
          "File: test/reindex.test -> test/reindex.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: set testdir [file dirname $argv0]",
          "17: source $testdir/tester.tcl",
          "19: # There is nothing to test if REINDEX is disable for this build.",
          "20: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: set testprefix reindex",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:   db2 close",
          "169: } {}",
          "171: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172: #-------------------------------------------------------------------------",
          "173: foreach {tn wo} {1 \"\" 2 \"WITHOUT ROWID\"} {",
          "174:   reset_db",
          "175:   eval [string map [list %without_rowid% $wo] {",
          "176:     do_execsql_test 4.$tn.0 {",
          "177:       CREATE TABLE t0 (",
          "178:         c0 INTEGER PRIMARY KEY DESC,",
          "179:         c1 UNIQUE DEFAULT NULL",
          "180:       ) %without_rowid% ;",
          "181:       INSERT INTO t0(c0) VALUES (1), (2), (3), (4), (5);",
          "182:       SELECT c0 FROM t0 WHERE c1 IS NULL ORDER BY 1;",
          "183:     } {1 2 3 4 5}",
          "185:     do_execsql_test 4.$tn.1 {",
          "186:       REINDEX;",
          "187:     }",
          "189:     do_execsql_test 4.$tn.2 {",
          "190:       SELECT c0 FROM t0 WHERE c1 IS NULL ORDER BY 1;",
          "191:     } {1 2 3 4 5}",
          "193:     do_execsql_test 4.$tn.3 {",
          "194:       SELECT c0 FROM t0 WHERE c1 IS NULL AND c0 IN (1,2,3,4,5);",
          "195:     } {1 2 3 4 5}",
          "197:     do_execsql_test 4.$tn.4 {",
          "198:       PRAGMA integrity_check;",
          "199:     } {ok}",
          "200:   }]",
          "201: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}