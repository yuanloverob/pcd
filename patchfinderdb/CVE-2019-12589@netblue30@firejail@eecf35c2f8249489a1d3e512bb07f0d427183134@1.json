{
  "cve_id": "CVE-2019-12589",
  "cve_desc": "In Firejail before 0.9.60, seccomp filters are writable inside the jail, leading to a lack of intended seccomp restrictions for a process that is joined to the jail after a filter has been modified by an attacker.",
  "repo": "netblue30/firejail",
  "patch_hash": "eecf35c2f8249489a1d3e512bb07f0d427183134",
  "patch_info": {
    "commit_hash": "eecf35c2f8249489a1d3e512bb07f0d427183134",
    "repo": "netblue30/firejail",
    "commit_url": "https://github.com/netblue30/firejail/commit/eecf35c2f8249489a1d3e512bb07f0d427183134",
    "files": [
      "src/firejail/firejail.h",
      "src/firejail/fs_lib.c",
      "src/firejail/preproc.c",
      "src/firejail/sandbox.c"
    ],
    "message": "mount runtime seccomp files read-only (#2602)\n\navoid creating locations in the file system that are both writable and\nexecutable (in this case for processes with euid of the user).\n\nfor the same reason also remove user owned libfiles\nwhen it is not needed any more",
    "before_after_code_files": [
      "src/firejail/firejail.h||src/firejail/firejail.h",
      "src/firejail/fs_lib.c||src/firejail/fs_lib.c",
      "src/firejail/preproc.c||src/firejail/preproc.c",
      "src/firejail/sandbox.c||src/firejail/sandbox.c"
    ]
  },
  "patch_diff": {
    "src/firejail/firejail.h||src/firejail/firejail.h": [
      "File: src/firejail/firejail.h -> src/firejail/firejail.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "57: #define RUN_LIB_FILE \"/run/firejail/mnt/libfiles\"",
      "58: #define RUN_DNS_ETC \"/run/firejail/mnt/dns-etc\"",
      "67: #define PATH_SECCOMP_DEFAULT (LIBDIR \"/firejail/seccomp\")   // default filter built during make",
      "68: #define PATH_SECCOMP_DEFAULT_DEBUG (LIBDIR \"/firejail/seccomp.debug\") // default filter built during make",
      "69: #define PATH_SECCOMP_32 (LIBDIR \"/firejail/seccomp.32\")   // 32bit arch filter built during make",
      "",
      "[Removed Lines]",
      "60: #define RUN_SECCOMP_LIST \"/run/firejail/mnt/seccomp.list\" // list of seccomp files installed",
      "61: #define RUN_SECCOMP_PROTOCOL \"/run/firejail/mnt/seccomp.protocol\" // protocol filter",
      "62: #define RUN_SECCOMP_CFG \"/run/firejail/mnt/seccomp\"   // configured filter",
      "63: #define RUN_SECCOMP_32 \"/run/firejail/mnt/seccomp.32\"  // 32bit arch filter installed on 64bit architectures",
      "64: #define RUN_SECCOMP_MDWX \"/run/firejail/mnt/seccomp.mdwx\"  // filter for memory-deny-write-execute",
      "65: #define RUN_SECCOMP_BLOCK_SECONDARY \"/run/firejail/mnt/seccomp.block_secondary\" // secondary arch blocking filter",
      "66: #define RUN_SECCOMP_POSTEXEC \"/run/firejail/mnt/seccomp.postexec\"  // filter for post-exec library",
      "",
      "[Added Lines]",
      "60: #define RUN_SECCOMP_DIR \"/run/firejail/mnt/seccomp\"",
      "61: #define RUN_SECCOMP_LIST \"/run/firejail/mnt/seccomp/seccomp.list\" // list of seccomp files installed",
      "62: #define RUN_SECCOMP_PROTOCOL \"/run/firejail/mnt/seccomp/seccomp.protocol\" // protocol filter",
      "63: #define RUN_SECCOMP_CFG \"/run/firejail/mnt/seccomp/seccomp\"   // configured filter",
      "64: #define RUN_SECCOMP_32  \"/run/firejail/mnt/seccomp/seccomp.32\"  // 32bit arch filter installed on 64bit architectures",
      "65: #define RUN_SECCOMP_MDWX \"/run/firejail/mnt/seccomp/seccomp.mdwx\"  // filter for memory-deny-write-execute",
      "66: #define RUN_SECCOMP_BLOCK_SECONDARY \"/run/firejail/mnt/seccomp/seccomp.block_secondary\" // secondary arch blocking filter",
      "67: #define RUN_SECCOMP_POSTEXEC \"/run/firejail/mnt/seccomp/seccomp.postexec\"  // filter for post-exec library",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "95: #define RUN_ASOUNDRC_FILE \"/run/firejail/mnt/.asoundrc\"",
      "96: #define RUN_HOSTNAME_FILE \"/run/firejail/mnt/hostname\"",
      "97: #define RUN_HOSTS_FILE \"/run/firejail/mnt/hosts\"",
      "99: #define RUN_MACHINEID \"/run/firejail/mnt/machine-id\"",
      "100: #define RUN_LDPRELOAD_FILE \"/run/firejail/mnt/ld.so.preload\"",
      "101: #define RUN_UTMP_FILE  \"/run/firejail/mnt/utmp\"",
      "",
      "[Removed Lines]",
      "98: #define RUN_RESOLVCONF_FILE \"/run/firejail/mnt/resolv.conf\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/firejail/fs_lib.c||src/firejail/fs_lib.c": [
      "File: src/firejail/fs_lib.c -> src/firejail/fs_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "133:   fslib_duplicate(buf);",
      "134:  }",
      "135:  fclose(fp);",
      "136: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:  unlink(RUN_LIB_FILE);",
      "",
      "---------------"
    ],
    "src/firejail/preproc.c||src/firejail/preproc.c": [
      "File: src/firejail/preproc.c -> src/firejail/preproc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "86:   fs_logger2(\"tmpfs\", RUN_MNT_DIR);",
      "88: #ifdef HAVE_SECCOMP",
      "89:   if (arg_seccomp_block_secondary)",
      "90:    copy_file(PATH_SECCOMP_BLOCK_SECONDARY, RUN_SECCOMP_BLOCK_SECONDARY, getuid(), getgid(), 0644); // root needed",
      "91:   else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "89:   create_empty_dir_as_root(RUN_SECCOMP_DIR, 0755);",
      "",
      "---------------"
    ],
    "src/firejail/sandbox.c||src/firejail/sandbox.c": [
      "File: src/firejail/sandbox.c -> src/firejail/sandbox.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1054:  save_nonewprivs();",
      "1060:  save_cpu();",
      "",
      "[Removed Lines]",
      "1057:  set_caps();",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1101:   int rv = unlink(RUN_SECCOMP_MDWX);",
      "1102:   (void) rv;",
      "1103:  }",
      "1104: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1102:  fs_rdonly(RUN_SECCOMP_DIR);",
      "1106:  set_caps();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3f2ac1d5cd873c57042ea6f8d88c74e24e9dee37",
      "candidate_info": {
        "commit_hash": "3f2ac1d5cd873c57042ea6f8d88c74e24e9dee37",
        "repo": "netblue30/firejail",
        "commit_url": "https://github.com/netblue30/firejail/commit/3f2ac1d5cd873c57042ea6f8d88c74e24e9dee37",
        "files": [
          "src/firejail/env.c",
          "src/firejail/join.c",
          "src/firejail/sandbox.c"
        ],
        "message": "priv tweaks",
        "before_after_code_files": [
          "src/firejail/env.c||src/firejail/env.c",
          "src/firejail/join.c||src/firejail/join.c",
          "src/firejail/sandbox.c||src/firejail/sandbox.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/firejail/sandbox.c||src/firejail/sandbox.c"
          ],
          "candidate": [
            "src/firejail/sandbox.c||src/firejail/sandbox.c"
          ]
        }
      },
      "candidate_diff": {
        "src/firejail/env.c||src/firejail/env.c": [
          "File: src/firejail/env.c -> src/firejail/env.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:    if (arg_debug)",
          "103:     printf(\"%s\\n\", buf);",
          "105:    env_store(buf, SETENV);",
          "107:   }",
          "109:   fclose(fp);",
          "",
          "[Removed Lines]",
          "104:    EUID_USER();",
          "106:    EUID_ROOT();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/firejail/join.c||src/firejail/join.c": [
          "File: src/firejail/join.c -> src/firejail/join.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:   }",
          "294:   prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0); // kill the child in case the parent died",
          "295:   if (chdir(\"/\") < 0)",
          "296:    errExit(\"chdir\");",
          "297:   if (homedir) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:   EUID_USER();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "308:    set_cpu_affinity();",
          "311:   if (apply_caps == 1) // not available for uid 0",
          "312:    caps_set(caps);",
          "313: #ifdef HAVE_SECCOMP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313:   EUID_ROOT();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "347:   }",
          "350:   env_defaults();",
          "351:   if (display) {",
          "352:    char *display_str;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353:   EUID_USER();",
          "",
          "---------------"
        ],
        "src/firejail/sandbox.c||src/firejail/sandbox.c": [
          "File: src/firejail/sandbox.c -> src/firejail/sandbox.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:  }",
          "671:  else",
          "672:   env_ibus_load();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "672:   EUID_USER();",
          "674:   EUID_ROOT();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "927:  prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0); // kill the child in case the parent died",
          "928:  int cwd = 0;",
          "929:  if (cfg.cwd) {",
          "930:   if (chdir(cfg.cwd) == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "931:  EUID_USER();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "951:   }",
          "952:  }",
          "956:  if (arg_nice) {",
          "957:   errno = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958:  EUID_ROOT();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "981:  if (cfg.cpus) {",
          "982:   save_cpu(); // save cpu affinity mask to CPU_CFG file",
          "983:   set_cpu_affinity();",
          "984:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "987:   EUID_USER();",
          "989:   EUID_ROOT();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f206ab956324b18fd19f5bf8716c2b5a011b935",
      "candidate_info": {
        "commit_hash": "1f206ab956324b18fd19f5bf8716c2b5a011b935",
        "repo": "netblue30/firejail",
        "commit_url": "https://github.com/netblue30/firejail/commit/1f206ab956324b18fd19f5bf8716c2b5a011b935",
        "files": [
          "src/firejail/firejail.h",
          "src/firejail/preproc.c",
          "src/firejail/sandbox.c",
          "status"
        ],
        "message": "merge: mount runtime seccomp files read-only",
        "before_after_code_files": [
          "src/firejail/firejail.h||src/firejail/firejail.h",
          "src/firejail/preproc.c||src/firejail/preproc.c",
          "src/firejail/sandbox.c||src/firejail/sandbox.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/firejail/firejail.h||src/firejail/firejail.h",
            "src/firejail/preproc.c||src/firejail/preproc.c",
            "src/firejail/sandbox.c||src/firejail/sandbox.c"
          ],
          "candidate": [
            "src/firejail/firejail.h||src/firejail/firejail.h",
            "src/firejail/preproc.c||src/firejail/preproc.c",
            "src/firejail/sandbox.c||src/firejail/sandbox.c"
          ]
        }
      },
      "candidate_diff": {
        "src/firejail/firejail.h||src/firejail/firejail.h": [
          "File: src/firejail/firejail.h -> src/firejail/firejail.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: #define RUN_LIB_FILE \"/run/firejail/mnt/libfiles\"",
          "60: #define RUN_DNS_ETC \"/run/firejail/mnt/dns-etc\"",
          "69: #define PATH_SECCOMP_DEFAULT (LIBDIR \"/firejail/seccomp\")   // default filter built during make",
          "70: #define PATH_SECCOMP_DEFAULT_DEBUG (LIBDIR \"/firejail/seccomp.debug\") // default filter built during make",
          "71: #define PATH_SECCOMP_32 (LIBDIR \"/firejail/seccomp.32\")   // 32bit arch filter built during make",
          "",
          "[Removed Lines]",
          "62: #define RUN_SECCOMP_LIST \"/run/firejail/mnt/seccomp.list\" // list of seccomp files installed",
          "63: #define RUN_SECCOMP_PROTOCOL \"/run/firejail/mnt/seccomp.protocol\" // protocol filter",
          "64: #define RUN_SECCOMP_CFG \"/run/firejail/mnt/seccomp\"   // configured filter",
          "65: #define RUN_SECCOMP_32 \"/run/firejail/mnt/seccomp.32\"  // 32bit arch filter installed on 64bit architectures",
          "66: #define RUN_SECCOMP_MDWX \"/run/firejail/mnt/seccomp.mdwx\"  // filter for memory-deny-write-execute",
          "67: #define RUN_SECCOMP_BLOCK_SECONDARY \"/run/firejail/mnt/seccomp.block_secondary\" // secondary arch blocking filter",
          "68: #define RUN_SECCOMP_POSTEXEC \"/run/firejail/mnt/seccomp.postexec\"  // filter for post-exec library",
          "",
          "[Added Lines]",
          "62: #define RUN_SECCOMP_DIR \"/run/firejail/mnt/seccomp\"",
          "63: #define RUN_SECCOMP_LIST \"/run/firejail/mnt/seccomp/seccomp.list\" // list of seccomp files installed",
          "64: #define RUN_SECCOMP_PROTOCOL \"/run/firejail/mnt/seccomp/seccomp.protocol\" // protocol filter",
          "65: #define RUN_SECCOMP_CFG \"/run/firejail/mnt/seccomp/seccomp\"   // configured filter",
          "66: #define RUN_SECCOMP_32 \"/run/firejail/mnt/seccomp/seccomp.32\"  // 32bit arch filter installed on 64bit architectures",
          "67: #define RUN_SECCOMP_MDWX \"/run/firejail/mnt/seccomp/seccomp.mdwx\"  // filter for memory-deny-write-execute",
          "68: #define RUN_SECCOMP_BLOCK_SECONDARY \"/run/firejail/mnt/seccomp/seccomp.block_secondary\" // secondary arch blocking filter",
          "69: #define RUN_SECCOMP_POSTEXEC \"/run/firejail/mnt/seccomp/seccomp.postexec\"  // filter for post-exec library",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: #define RUN_ASOUNDRC_FILE \"/run/firejail/mnt/.asoundrc\"",
          "97: #define RUN_HOSTNAME_FILE \"/run/firejail/mnt/hostname\"",
          "98: #define RUN_HOSTS_FILE \"/run/firejail/mnt/hosts\"",
          "100: #define RUN_MACHINEID \"/run/firejail/mnt/machine-id\"",
          "101: #define RUN_LDPRELOAD_FILE \"/run/firejail/mnt/ld.so.preload\"",
          "102: #define RUN_UTMP_FILE  \"/run/firejail/mnt/utmp\"",
          "",
          "[Removed Lines]",
          "99: #define RUN_RESOLVCONF_FILE \"/run/firejail/mnt/resolv.conf\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/firejail/preproc.c||src/firejail/preproc.c": [
          "File: src/firejail/preproc.c -> src/firejail/preproc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   fs_logger2(\"tmpfs\", RUN_MNT_DIR);",
          "84: #ifdef HAVE_SECCOMP",
          "85:   if (arg_seccomp_block_secondary)",
          "86:    copy_file(PATH_SECCOMP_BLOCK_SECONDARY, RUN_SECCOMP_BLOCK_SECONDARY, getuid(), getgid(), 0644); // root needed",
          "87:   else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:   create_empty_dir_as_root(RUN_SECCOMP_DIR, 0755);",
          "",
          "---------------"
        ],
        "src/firejail/sandbox.c||src/firejail/sandbox.c": [
          "File: src/firejail/sandbox.c -> src/firejail/sandbox.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "904:  if (cfg.cpus) {",
          "905:   save_cpu(); // save cpu affinity mask to CPU_CFG file",
          "",
          "[Removed Lines]",
          "902:  set_caps();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "947:   int rv = unlink(RUN_SECCOMP_MDWX);",
          "948:   (void) rv;",
          "949:  }",
          "950: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "950:  fs_rdonly(RUN_SECCOMP_DIR);",
          "953:  set_caps();",
          "",
          "---------------"
        ]
      }
    }
  ]
}