{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "273ee151217b04c640c1af148e36c518678c89fa",
      "candidate_info": {
        "commit_hash": "273ee151217b04c640c1af148e36c518678c89fa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/273ee151217b04c640c1af148e36c518678c89fa",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix harmless compiler warning seen with MSVC.\n\nFossilOrigin-Name: 4591ee03d7a1ef3f0f6ad0629493fdb7a1c0ddb3277a9e87aa244cb0ca770593",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 782163693f37aeb65209bebbaeb6659a36881b8c4b4bec778b366658488bf966",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3517: PRIVATE char *pathsearch(char *argv0, char *name, int modemask)",
          "3518: {",
          "3519:   const char *pathlist;",
          "3521:   char *pathbuf = 0;",
          "3522:   char *path,*cp;",
          "3523:   char c;",
          "",
          "[Removed Lines]",
          "3520:   char *pathbufptr;",
          "",
          "[Added Lines]",
          "3520:   char *pathbufptr = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c19e22f397958a29a549639d66b825cf9b8379ea",
      "candidate_info": {
        "commit_hash": "c19e22f397958a29a549639d66b825cf9b8379ea",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c19e22f397958a29a549639d66b825cf9b8379ea",
        "files": [
          "ext/fts5/fts5_expr.c",
          "ext/fts5/test/fts5eb.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix possible null pointer dereferences in the fts5_expr() scalar function.\n\nFossilOrigin-Name: c5d44143599f3fe98492b2b900fa3d77925c7be545096251055ceeab899a41f1",
        "before_after_code_files": [
          "ext/fts5/fts5_expr.c||ext/fts5/fts5_expr.c",
          "ext/fts5/test/fts5eb.test||ext/fts5/test/fts5eb.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_expr.c||ext/fts5/fts5_expr.c": [
          "File: ext/fts5/fts5_expr.c -> ext/fts5/fts5_expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2516:   azConfig[1] = \"main\";",
          "2517:   azConfig[2] = \"tbl\";",
          "2518:   for(i=3; iArg<nArg; iArg++){",
          "2520:   }",
          "2522:   zExpr = (const char*)sqlite3_value_text(apVal[0]);",
          "2524:   rc = sqlite3Fts5ConfigParse(pGlobal, db, nConfig, azConfig, &pConfig, &zErr);",
          "2525:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "2519:     azConfig[i++] = (const char*)sqlite3_value_text(apVal[iArg]);",
          "",
          "[Added Lines]",
          "2519:     const char *z = (const char*)sqlite3_value_text(apVal[iArg]);",
          "2520:     azConfig[i++] = (z ? z : \"\");",
          "2524:   if( zExpr==0 ) zExpr = \"\";",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5eb.test||ext/fts5/test/fts5eb.test": [
          "File: ext/fts5/test/fts5eb.test -> ext/fts5/test/fts5eb.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:   SELECT fts5_expr()",
          "60: } {1 {wrong number of arguments to function fts5_expr}}",
          "63:   SELECT fts5_expr_tcl()",
          "64: } {1 {wrong number of arguments to function fts5_expr_tcl}}",
          "67: do_execsql_test 3.0 {",
          "68:   CREATE VIRTUAL TABLE e1 USING fts5(text, tokenize = 'porter unicode61');",
          "",
          "[Removed Lines]",
          "62: do_catchsql_test 2.1 {",
          "",
          "[Added Lines]",
          "62: do_catchsql_test 2.2 {",
          "66: do_catchsql_test 2.3 {",
          "67:   SELECT fts5_expr('')",
          "68: } {1 {fts5: syntax error near \"\"}}",
          "70: do_catchsql_test 2.4 {",
          "71:   SELECT fts5_expr(NULL)",
          "72: } {1 {fts5: syntax error near \"\"}}",
          "74: do_catchsql_test 2.5 {",
          "75:   SELECT fts5_expr(NULL, NULL)",
          "76: } {1 {parse error in \"\"}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9d75e1ccc72e9f536f45df3b24e9ecd25076cc1f7cf16b806b19e0e1b68e8326",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "628b1a3f9e4d7b1b7bc6ff5c1d19e7368b1be1d2",
      "candidate_info": {
        "commit_hash": "628b1a3f9e4d7b1b7bc6ff5c1d19e7368b1be1d2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/628b1a3f9e4d7b1b7bc6ff5c1d19e7368b1be1d2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Remove a NEVER in btree due to a new test case from dbsqlfuzz.\n\nFossilOrigin-Name: 46f8ef70fb8b3ae00cc081b280f3dff38b1d0f1b52a8f4477ec89dec32e4d813",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5b246b47aeadc25dbec0956e2d6edcd49fbe874a01734fdf15b770507648222d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1736:       }",
          "1737:       iPtr = iFreeBlk;",
          "1738:     }",
          "1740:       return SQLITE_CORRUPT_PAGE(pPage);",
          "1741:     }",
          "1742:     assert( iFreeBlk>iPtr || iFreeBlk==0 );",
          "",
          "[Removed Lines]",
          "1739:     if( NEVER(iFreeBlk>pPage->pBt->usableSize-4) ){",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ed1b0e75336f547c72b4db50333e5ec38350888",
      "candidate_info": {
        "commit_hash": "2ed1b0e75336f547c72b4db50333e5ec38350888",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2ed1b0e75336f547c72b4db50333e5ec38350888",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/altertab.test"
        ],
        "message": "Merge bugfix from trunk.\n\nFossilOrigin-Name: b542dee9de843c19664c19df7435c6034d23d0d213804d588ec0ff599082d576",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/altertab.test||test/altertab.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c535fea147ce5c6e4aab25d3c85a3f53a7364c5b5ee10fb6d393c5911a02be7e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5145:             pNew = sqlite3ExprListAppend(pParse, pNew, pExpr);",
          "5146:             sqlite3TokenInit(&sColname, zColname);",
          "5147:             sqlite3ExprListSetName(pParse, pNew, &sColname, 0);",
          "5149:               struct ExprList_item *pX = &pNew->a[pNew->nExpr-1];",
          "5150:               sqlite3DbFree(db, pX->zEName);",
          "5151:               if( pSub ){",
          "",
          "[Removed Lines]",
          "5148:             if( pNew && (p->selFlags & SF_NestedFrom)!=0 ){",
          "",
          "[Added Lines]",
          "5148:             if( pNew && (p->selFlags & SF_NestedFrom)!=0 && !IN_RENAME_OBJECT ){",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "613:   SELECT sql FROM sqlite_master;",
          "614: } {{CREATE TABLE t0 (c1 INTEGER, PRIMARY KEY(c1))}}",
          "616: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616: # 2020-02-23 ticket f50af3e8a565776b",
          "617: reset_db",
          "618: do_execsql_test 19.100 {",
          "619:   CREATE TABLE t1(x);",
          "620:   CREATE VIEW t2 AS SELECT 1 FROM t1, (t1 AS a0, t1);",
          "621:   ALTER TABLE t1 RENAME TO t3;",
          "622:   SELECT sql FROM sqlite_master;",
          "623: } {{CREATE TABLE \"t3\"(x)} {CREATE VIEW t2 AS SELECT 1 FROM \"t3\", (\"t3\" AS a0, \"t3\")}}",
          "624: do_execsql_test 19.110 {",
          "625:   INSERT INTO t3(x) VALUES(123);",
          "626:   SELECT * FROM t2;",
          "627: } {1}",
          "628: do_execsql_test 19.120 {",
          "629:   INSERT INTO t3(x) VALUES('xyz');",
          "630:   SELECT * FROM t2;",
          "631: } {1 1 1 1 1 1 1 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e5ce8029da34055c0ce32c9ad2b0262e21f1e29",
      "candidate_info": {
        "commit_hash": "0e5ce8029da34055c0ce32c9ad2b0262e21f1e29",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0e5ce8029da34055c0ce32c9ad2b0262e21f1e29",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Fix an assert() in btree.c that can fail if an INSERT is attempted on a corrupted database while in PRAGMA writable_schema=ON.\n\nFossilOrigin-Name: 07beb3629e648e7feae4e786191514339ac1d8f6ba5bb6e7cc8a04bc1f1cd6ab",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8706:     }",
          "8708:   }",
          "8711:   pPage = pCur->pPage;",
          "8712:   assert( pPage->intKey || pX->nKey>=0 );",
          "",
          "[Removed Lines]",
          "8709:   assert( pCur->eState==CURSOR_VALID || (pCur->eState==CURSOR_INVALID && loc) );",
          "",
          "[Added Lines]",
          "8709:   assert( pCur->eState==CURSOR_VALID",
          "8710:        || (pCur->eState==CURSOR_INVALID && loc)",
          "8711:        || CORRUPT_DB );",
          "",
          "---------------"
        ]
      }
    }
  ]
}