{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c467fec2ff93996e006d244d6cbd070774e9e41",
      "candidate_info": {
        "commit_hash": "3c467fec2ff93996e006d244d6cbd070774e9e41",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3c467fec2ff93996e006d244d6cbd070774e9e41",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "Fix for incorrect operand size in 64bit CALL / JMP when x66 prefix in use (#777)",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1251:  if (getIDWithAttrMask(&instructionID, insn, attrMask))",
          "1252:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1255:  if (insn->mode == MODE_64BIT && insn->isPrefix66 &&",
          "1256:     (insn->opcode == 0xE8 || insn->opcode == 0xE9))",
          "1257:  {",
          "1258:   attrMask ^= ATTR_OPSIZE;",
          "1259:   if (getIDWithAttrMask(&instructionID, insn, attrMask))",
          "1260:    return -1;",
          "1261:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
      "candidate_info": {
        "commit_hash": "27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
        "files": [
          "arch/TMS320C64x/TMS320C64xDisassembler.c"
        ],
        "message": "Fixed bug in memory operand decoding. (#981)\n\nFixed bug #979. Decoding a memory operand with a register offset from\nthe B file would return an incorrect register.",
        "before_after_code_files": [
          "arch/TMS320C64x/TMS320C64xDisassembler.c||arch/TMS320C64x/TMS320C64xDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/TMS320C64x/TMS320C64xDisassembler.c||arch/TMS320C64x/TMS320C64xDisassembler.c": [
          "File: arch/TMS320C64x/TMS320C64xDisassembler.c -> arch/TMS320C64x/TMS320C64xDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:    if((offset >= TMS320C64X_REG_A0) && (offset <= TMS320C64X_REG_A31))",
          "290:     offset = (offset - TMS320C64X_REG_A0 + TMS320C64X_REG_B0);",
          "291:    else if((offset >= TMS320C64X_REG_B0) && (offset <= TMS320C64X_REG_B31))",
          "293:    offsetreg = getReg(GPRegsDecoderTable, offset);",
          "294:    MCOperand_CreateImm0(Inst, (scaled << 19) | (basereg << 12) | (offsetreg << 5) | (mode << 1) | unit);",
          "295:    break;",
          "",
          "[Removed Lines]",
          "292:     offset = (base - TMS320C64X_REG_B0 + TMS320C64X_REG_A0);",
          "",
          "[Added Lines]",
          "292:     offset = (offset - TMS320C64X_REG_B0 + TMS320C64X_REG_A0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
      "candidate_info": {
        "commit_hash": "7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: initialize i in preprocess(). this fixes compilation issue for MSVC",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: static uint8_t *preprocess(char *code, size_t *size)",
          "30: {",
          "32:  uint8_t high, low;",
          "33:  uint8_t *result;",
          "",
          "[Removed Lines]",
          "31:  size_t i, j = 0;",
          "",
          "[Added Lines]",
          "31:  size_t i = 0, j = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
      "candidate_info": {
        "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: fast path checking for X86_insn_reg_intel()",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2930:  return (l - r);",
          "2931: }",
          "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
          "2938: {",
          "2939:  unsigned int first = 0;",
          "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
          "2943:  if (!intel_regs_sorted) {",
          "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
          "",
          "[Removed Lines]",
          "2933: static bool intel_regs_sorted = false;",
          "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
          "",
          "[Added Lines]",
          "2938:  static bool intel_regs_sorted = false;",
          "2941:  unsigned int mid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2949:   intel_regs_sorted = true;",
          "2950:  }",
          "2952:  while (first <= last) {",
          "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
          "2954:    first = mid + 1;",
          "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
          "2953:    insn_regs_intel_sorted[last].insn < id) {",
          "2954:   return 0;",
          "2955:  }",
          "2958:   mid = (first + last) / 2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2962:     break;",
          "2963:    last = mid - 1;",
          "2964:   }",
          "2966:  }",
          "",
          "[Removed Lines]",
          "2965:   mid = (first + last) / 2;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9bc14c18fcb15563ffcda9ef14b24c1caedbab5e",
      "candidate_info": {
        "commit_hash": "9bc14c18fcb15563ffcda9ef14b24c1caedbab5e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9bc14c18fcb15563ffcda9ef14b24c1caedbab5e",
        "files": [
          "cstool/cstool.c",
          "cstool/cstool_arm.c",
          "cstool/cstool_arm64.c",
          "cstool/cstool_m68k.c",
          "cstool/cstool_mips.c",
          "cstool/cstool_x86.c"
        ],
        "message": "cstool: delete tab",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "cstool/cstool_arm.c||cstool/cstool_arm.c",
          "cstool/cstool_arm64.c||cstool/cstool_arm64.c",
          "cstool/cstool_m68k.c||cstool/cstool_m68k.c",
          "cstool/cstool_mips.c||cstool/cstool_mips.c",
          "cstool/cstool_x86.c||cstool/cstool_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: void print_insn_detail_sparc(csh handle, cs_insn *ins);",
          "18: void print_insn_detail_sysz(csh handle, cs_insn *ins);",
          "19: void print_insn_detail_xcore(csh handle, cs_insn *ins);",
          "22: void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "23: {",
          "",
          "[Removed Lines]",
          "20: void print_insn_detail_x86(csh ud, cs_mode mode, cs_insn *ins);",
          "",
          "[Added Lines]",
          "20: void print_insn_detail_m68k(csh handle, cs_insn *ins);",
          "",
          "---------------"
        ],
        "cstool/cstool_arm.c||cstool/cstool_arm.c": [
          "File: cstool/cstool_arm.c -> cstool/cstool_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:    else",
          "97:     printf(\"\\t\\t\\tShift: %u = %s\\n\", op->shift.type,",
          "99:   }",
          "101:   if (op->vector_index != -1) {",
          "102:    printf(\"\\t\\toperands[%u].vector_index = %u\\n\", i, op->vector_index);",
          "103:   }",
          "105:   if (op->subtracted)",
          "106:    printf(\"\\t\\tSubtracted: True\\n\");",
          "107:  }",
          "109:  if (arm->cc != ARM_CC_AL && arm->cc != ARM_CC_INVALID)",
          "110:   printf(\"\\tCode condition: %u\\n\", arm->cc);",
          "112:  if (arm->update_flags)",
          "113:   printf(\"\\tUpdate-flags: True\\n\");",
          "115:  if (arm->writeback)",
          "116:   printf(\"\\tWrite-back: True\\n\");",
          "118:  if (arm->cps_mode)",
          "119:   printf(\"\\tCPSI-mode: %u\\n\", arm->cps_mode);",
          "121:  if (arm->cps_flag)",
          "122:   printf(\"\\tCPSI-flag: %u\\n\", arm->cps_flag);",
          "124:  if (arm->vector_data)",
          "125:   printf(\"\\tVector-data: %u\\n\", arm->vector_data);",
          "127:  if (arm->vector_size)",
          "128:   printf(\"\\tVector-size: %u\\n\", arm->vector_size);",
          "130:  if (arm->usermode)",
          "131:   printf(\"\\tUser-mode: True\\n\");",
          "133:  if (arm->mem_barrier)",
          "134:   printf(\"\\tMemory-barrier: %u\\n\", arm->mem_barrier);",
          "137:  if (!cs_regs_access(handle, ins,",
          "138:       regs_read, &regs_read_count,",
          "",
          "[Removed Lines]",
          "98:         cs_reg_name(handle, op->shift.value));",
          "",
          "[Added Lines]",
          "98:      cs_reg_name(handle, op->shift.value));",
          "",
          "---------------"
        ],
        "cstool/cstool_arm64.c||cstool/cstool_arm64.c": [
          "File: cstool/cstool_arm64.c -> cstool/cstool_arm64.c"
        ],
        "cstool/cstool_m68k.c||cstool/cstool_m68k.c": [
          "File: cstool/cstool_m68k.c -> cstool/cstool_m68k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: void print_string_hex(char *comment, unsigned char *str, size_t len);",
          "15:  \"<invalid mode>\",",
          "17:  \"Register Direct - Data\",",
          "18:  \"Register Direct - Address\",",
          "",
          "[Removed Lines]",
          "14: const char* s_addressing_modes[] = {",
          "",
          "[Added Lines]",
          "14: static const char* s_addressing_modes[] = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:  \"Immediate value\",",
          "42: };",
          "45: {",
          "46:  int i;",
          "50:   uint16_t reg_id = detail->regs_read[i];",
          "51:   const char* reg_name = cs_reg_name(handle, reg_id);",
          "52:   printf(\"\\treading from reg: %s\\n\", reg_name);",
          "53:  }",
          "57:   uint16_t reg_id = detail->regs_write[i];",
          "58:   const char* reg_name = cs_reg_name(handle, reg_id);",
          "59:   printf(\"\\twriting to reg:   %s\\n\", reg_name);",
          "",
          "[Removed Lines]",
          "44: void print_read_write_regs(cs_detail* detail, csh handle)",
          "48:  for (i = 0; i < detail->regs_read_count; ++i)",
          "49:  {",
          "55:  for (i = 0; i < detail->regs_write_count; ++i)",
          "56:  {",
          "",
          "[Added Lines]",
          "44: static void print_read_write_regs(cs_detail* detail, csh handle)",
          "48:  for (i = 0; i < detail->regs_read_count; ++i) {",
          "54:  for (i = 0; i < detail->regs_write_count; ++i) {",
          "",
          "---------------"
        ],
        "cstool/cstool_mips.c||cstool/cstool_mips.c": [
          "File: cstool/cstool_mips.c -> cstool/cstool_mips.c"
        ],
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c"
        ]
      }
    }
  ]
}