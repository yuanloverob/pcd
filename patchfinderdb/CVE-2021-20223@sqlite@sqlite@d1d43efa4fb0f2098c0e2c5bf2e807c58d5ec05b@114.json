{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d63c76fb31a0e262fb12a93b171e95a4e30c1a2e",
      "candidate_info": {
        "commit_hash": "d63c76fb31a0e262fb12a93b171e95a4e30c1a2e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d63c76fb31a0e262fb12a93b171e95a4e30c1a2e",
        "files": [
          "manifest",
          "manifest.uuid"
        ],
        "message": "Version 3.32.1\n\nFossilOrigin-Name: 0c1fcf4711a2e66c813aed38cf41cd3e2123ee8eb6db98118086764c4ba83350",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b1b182be2ab34cec1d94c5570bc361331a34f727eb9fa4aadfabb7f1ef79f83e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39593e4f0932dd09dca6820888fc725d12262272",
      "candidate_info": {
        "commit_hash": "39593e4f0932dd09dca6820888fc725d12262272",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/39593e4f0932dd09dca6820888fc725d12262272",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c"
        ],
        "message": "The check-in [b7810062ec2489e1] was not quite right in that it allowed an oversized shift operation (which is UB in C) on some obscure inputs.  OSSFuzz found the problem for us overnight.\n\nFossilOrigin-Name: 62f2235adf796c72882b26313489cf49804ec3ec4972e0eee5034176cbb07f84",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 32772dfd50b602c049d8c30bc28cde60a18b7495a997d728081f689ff417c956",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3203:       if( iTerm>mxTerm ) mxTerm = iTerm;",
          "3204:       testcase( iTerm==15 );",
          "3205:       testcase( iTerm==16 );",
          "3208:           testcase( i!=iTerm );",
          "3209:           pNew->u.vtab.omitMask |= 1<<iTerm;",
          "3210:         }else{",
          "",
          "[Removed Lines]",
          "3206:       if( iTerm<16 && pUsage[i].omit ){",
          "3207:         if( ((1<<i)&mNoOmit)==0 ){",
          "",
          "[Added Lines]",
          "3206:       if( pUsage[i].omit ){",
          "3207:         if( i<16 && ((1<<i)&mNoOmit)==0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05fbfd827c9fb79412fc8179ef460032c33b6dfc",
      "candidate_info": {
        "commit_hash": "05fbfd827c9fb79412fc8179ef460032c33b6dfc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/05fbfd827c9fb79412fc8179ef460032c33b6dfc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c"
        ],
        "message": "Additional debugging information printed with the \".wheretrace 0x100\" option. No changes to normally delivered code.\n\nFossilOrigin-Name: fc72ec52c92ca6a953e765b48e21d52021fdb23a2cd84f737da4e43c642f6a5d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7ae8c0d52f6aa7f27537216f85456ef49dade040366cfb250c789206ecd4dc5a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1816:   }else{",
          "1817:     char *z;",
          "1818:     if( p->u.vtab.idxStr ){",
          "1820:                 p->u.vtab.idxNum, p->u.vtab.idxStr, p->u.vtab.omitMask);",
          "1821:     }else{",
          "1822:       z = sqlite3_mprintf(\"(%d,%x)\", p->u.vtab.idxNum, p->u.vtab.omitMask);",
          "",
          "[Removed Lines]",
          "1819:       z = sqlite3_mprintf(\"(%d,\\\"%s\\\",%x)\",",
          "",
          "[Added Lines]",
          "1819:       z = sqlite3_mprintf(\"(%d,\\\"%s\\\",%#x)\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4810:     }",
          "4811:   }",
          "4813:     sqlite3WhereClausePrint(sWLB.pWC);",
          "4814:   }",
          "4815: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4813:     sqlite3DebugPrintf(\"---- WHERE clause at start of analysis:\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4948:       nTabList--;",
          "4949:     }",
          "4950:   }",
          "4951:   WHERETRACE(0xffff,(\"*** Optimizer Finished ***\\n\"));",
          "4952:   pWInfo->pParse->nQueryLoop += pWInfo->nRowOut;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4952: #if defined(WHERETRACE_ENABLED)",
          "4954:     sqlite3DebugPrintf(\"---- WHERE clause at end of analysis:\\n\");",
          "4955:     sqlite3WhereClausePrint(sWLB.pWC);",
          "4956:   }",
          "4958: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7db1ed50b8d714abb69a6b106535a4c29f22db8d",
      "candidate_info": {
        "commit_hash": "7db1ed50b8d714abb69a6b106535a4c29f22db8d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7db1ed50b8d714abb69a6b106535a4c29f22db8d",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix handling of another corrupt database case in fts3.\n\nFossilOrigin-Name: ccff8cb8267d4c5605484f7a35c1836937f20b3d6879fe84cd84dc24bbbffc77",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4300:       int i;",
          "4301:       int nHeight = (int)aRoot[0];",
          "4302:       NodeWriter *pNode;",
          "4304:         sqlite3_reset(pSelect);",
          "4305:         return FTS_CORRUPT_VTAB;",
          "4306:       }",
          "",
          "[Removed Lines]",
          "4303:       if( nHeight<1 || nHeight>FTS_MAX_APPENDABLE_HEIGHT ){",
          "",
          "[Added Lines]",
          "4303:       if( nHeight<1 || nHeight>=FTS_MAX_APPENDABLE_HEIGHT ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 610ee8d5dc855fd163daa3c93b44db7874463d69df5a01ab4113b725a031b9d4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "6162:   SELECT matchinfo(t0, t0) IS NULL FROM t0 WHERE t0 MATCH '1*'",
          "6163: } {0}",
          "6166: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6165: #-------------------------------------------------------------------------",
          "6166: #",
          "6167: reset_db",
          "6168: do_test 45.0 {",
          "6169:   sqlite3 db {}",
          "6170:   db deserialize [decode_hexdb {",
          "6171: .open --hexdb",
          "6172: | size 24576 pagesize 4096 filename crash-65c98512cc9e49.db",
          "6173: | page 1 offset 0",
          "6174: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "6175: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 06   .....@  ........",
          "6176: |     96: 00 00 00 00 0d 0e fc 00 06 0d bc 00 0f ca 0f 6c   ...............l",
          "6177: |    112: 0f 04 0e 13 0e c9 0d bc 00 00 00 00 00 00 00 00   ................",
          "6178: |   3504: 00 00 00 00 00 00 00 00 00 00 00 00 55 06 07 17   ............U...",
          "6179: |   3520: 1b 1b 01 81 01 74 61 62 6c 65 78 31 5f 73 74 61   .....tablex1_sta",
          "6180: |   3536: 74 78 31 5f 73 74 61 74 06 43 52 45 41 54 45 20   tx1_stat.CREATE",
          "6181: |   3552: 54 41 42 4c 45 20 27 78 31 5f 73 74 61 74 27 28   TABLE 'x1_stat'(",
          "6182: |   3568: 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41   id INTEGER PRIMA",
          "6183: |   3584: 52 59 20 4b 45 59 2c 20 76 61 6c 75 65 20 42 4c   RY KEY, value BL",
          "6184: |   3600: 41 82 29 81 33 04 07 17 1f 1f 01 82 35 74 61 62   A.).3.......5tab",
          "6185: |   3616: 6c 65 78 31 5f 73 65 67 64 69 72 78 31 5f 73 65   lex1_segdirx1_se",
          "6186: |   3632: 67 64 69 72 04 43 52 45 41 54 45 20 54 41 42 4c   gdir.CREATE TABL",
          "6187: |   3648: 45 20 27 78 31 5f 73 65 67 64 69 72 27 28 6c 65   E 'x1_segdir'(le",
          "6188: |   3664: 76 65 6c 20 49 4e 54 45 47 45 52 2c 69 64 78 20   vel INTEGER,idx",
          "6189: |   3680: 49 4e 54 45 47 45 52 2c 73 74 61 72 74 5f 62 6c   INTEGER,start_bl",
          "6190: |   3696: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 6c 65 61 76   ock INTEGER,leav",
          "6191: |   3712: 65 73 5f 65 6e 64 5f 62 6c 6f 63 6b 20 49 4e 54   es_end_block INT",
          "6192: |   3728: 45 47 45 52 2c 65 6e 64 5f 62 6c 6f 63 6b 20 49   EGER,end_block I",
          "6193: |   3744: 4e 54 45 47 45 52 2c 72 6f 6f 74 20 42 4c 4f 42   NTEGER,root BLOB",
          "6194: |   3760: 2c 50 52 49 4d 41 52 59 20 4b 45 59 28 6c 65 76   ,PRIMARY KEY(lev",
          "6195: |   3776: 65 6c 2c 20 69 64 78 29 29 31 05 06 17 45 1f 01   el, idx))1...E..",
          "6196: |   3792: 00 69 6e 64 65 78 73 71 6c 69 74 65 5f 61 75 74   .indexsqlite_aut",
          "6197: |   3808: 6f 69 6e 64 65 78 5f 78 31 5f 73 65 67 64 69 72   oindex_x1_segdir",
          "6198: |   3824: 5f 31 78 31 5f 73 65 67 64 69 72 05 00 00 00 08   _1x1_segdir.....",
          "6199: |   3840: 60 00 00 00 66 03 07 17 23 23 01 81 13 74 61 62   `...f...##...tab",
          "6200: |   3856: 6c 65 78 31 5f 73 65 67 6d 65 6e 74 73 78 31 5f   lex1_segmentsx1_",
          "6201: |   3872: 73 65 67 6d 65 6e 74 73 03 43 52 45 41 54 45 20   segments.CREATE",
          "6202: |   3888: 54 41 42 4c 45 20 27 78 31 5f 73 65 67 6d 65 6e   TABLE 'x1_segmen",
          "6203: |   3904: 74 73 27 28 62 6c 6f 63 6b 69 64 20 49 4e 54 45   ts'(blockid INTE",
          "6204: |   3920: 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c   GER PRIMARY KEY,",
          "6205: |   3936: 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 5c 02 07 17    block BLOB)....",
          "6206: |   3952: 21 21 01 81 03 74 61 62 6c 65 78 31 5f 63 6f 6e   !!...tablex1_con",
          "6207: |   3968: 74 65 6e 74 78 31 5f 63 6f 6e 74 65 6e 74 02 43   tentx1_content.C",
          "6208: |   3984: 52 45 41 54 45 20 54 41 42 4c 45 20 27 78 31 5f   REATE TABLE 'x1_",
          "6209: |   4000: 63 6f 6e 74 65 6e 74 27 28 64 6f 63 69 64 20 49   content'(docid I",
          "6210: |   4016: 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b   NTEGER PRIMARY K",
          "6211: |   4032: 45 59 2c 20 27 63 30 78 27 29 34 01 06 17 11 11   EY, 'c0x')4.....",
          "6212: |   4048: 08 57 74 61 62 6c 65 78 31 78 31 43 52 45 41 54   .Wtablex1x1CREAT",
          "6213: |   4064: 45 20 56 49 52 54 55 41 4c 20 54 41 42 4c 45 20   E VIRTUAL TABLE",
          "6214: |   4080: 78 31 20 55 53 49 4e 47 20 66 74 73 33 28 78 29   x1 USING fts3(x)",
          "6215: | page 2 offset 4096",
          "6216: |      0: 0d 00 00 00 11 0f 77 f0 0f f8 0f f0 0f e8 0f e0   ......w.........",
          "6217: |     16: 0f d8 0f d0 0f c8 0f c0 00 00 00 00 00 00 00 00   ................",
          "6218: |   3952: 00 00 00 00 00 00 00 00 06 11 03 00 13 77 78 79   .............wxy",
          "6219: |   3968: 06 10 03 00 13 74 75 76 06 0f 03 00 13 71 33 73   .....tuv.....q3s",
          "6220: |   3984: 06 0e 03 00 13 6e 6f 70 06 0d 03 00 13 6b 6c 6d   .....nop.....klm",
          "6221: |   4000: 06 0c 03 04 c3 68 69 6a 06 0b 03 00 13 65 66 67   .....hij.....efg",
          "6222: |   4016: 06 0a 03 00 13 62 63 64 06 09 03 00 13 79 7a 61   .....bcd.....yza",
          "6223: |   4032: 06 08 03 00 13 76 77 78 06 07 03 00 13 73 74 75   .....vwx.....stu",
          "6224: |   4048: 06 06 03 00 13 70 71 72 06 05 03 00 13 6d 6e 6f   .....pqr.....mno",
          "6225: |   4064: 06 03 03 00 13 6a 6b 6c 06 03 03 00 13 67 68 69   .....jkl.....ghi",
          "6226: |   4080: 06 02 02 00 03 64 65 66 06 01 03 00 13 61 52 63   .....def.....aRc",
          "6227: | page 3 offset 8192",
          "6228: |      0: 0d 00 00 00 03 0f a7 00 0f b5 0f a7 0f fa 01 00   ................",
          "6229: |   4000: 00 00 00 00 00 00 00 0c 02 03 00 1e 00 03 6b 6c   ..............kl",
          "6230: |   4016: 6d 03 0d 02 00 43 01 04 00 81 0a 00 03 61 62 63   m....C.......abc",
          "6231: |   4032: 03 0b 32 00 00 03 62 63 64 03 0a 02 00 00 03 64   ..2...bcd......d",
          "6232: |   4048: 69 26 03 02 02 00 00 03 65 66 67 03 0b 02 00 00   i&......efg.....",
          "6233: |   4064: 03 67 68 69 03 03 02 00 00 03 68 69 6a 03 0c 02   .ghi......hij...",
          "6234: |   4080: 00 00 03 6a 6a 2c 03 04 02 00 03 81 00 03 00 00   ...jj,..........",
          "6235: | page 4 offset 12288",
          "6236: |      0: 0d 0f 3a 00 05 0f 25 00 0f 9e 0f 88 0f 43 0f 25   ..:...%......C.%",
          "6237: |     16: 0f 72 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .r..............",
          "6238: |   3856: 00 00 00 00 00 00 00 00 00 56 01 08 08 13 1e 03   .........V......",
          "6239: |   3872: 30 20 39 00 03 13 05 07 08 08 18 08 13 1e 30 20   0 9...........0",
          "6240: |   3888: 39 00 03 77 78 79 03 11 02 00 0f 6c 00 09 01 08   9..wxy.....l....",
          "6241: |   3904: 08 15 54 27 04 07 09 01 08 08 15 42 02 30 20 33   ..T'.......B.0 3",
          "6242: |   3920: 36 00 03 6e 6f 70 03 0e 02 00 00 03 71 72 73 03   6..nop......qrs.",
          "6243: |   3936: 0f 02 00 00 03 74 75 76 03 10 02 00 0f cf b1 06   .....tuv........",
          "6244: |   3952: 01 08 14 06 07 01 08 09 01 1b 14 02 02 31 32 38   .............128",
          "6245: |   3968: 20 2d 37 32 10 01 01 6b 14 03 07 09 09 08 08 15    -72...k........",
          "6246: |   3984: 1e 30 20 33 36 00 03 79 7a 61 03 09 02 00 2f 02   .0 36..yza..../.",
          "6247: |   4000: 07 09 08 08 08 15 54 30 20 33 36 00 03 6d 6e 6f   ......T0 36..mno",
          "6248: |   4016: 03 05 02 00 00 03 70 71 72 03 06 02 00 00 03 73   ......pqr......s",
          "6249: |   4032: 74 75 03 07 02 00 00 03 76 77 78 03 08 02 00 00   tu......vwx.....",
          "6250: |   4048: 00 00 4a 08 08 08 15 54 30 20 33 36 00 03 61 62   ..J....T0 36..ab",
          "6251: |   4064: 63 03 01 02 00 00 03 64 65 66 03 02 02 00 00 03   c......def......",
          "6252: |   4080: 67 68 69 03 03 67 00 00 03 6a 6b 6c 03 04 02 00   ghi..g...jkl....",
          "6253: | page 5 offset 16384",
          "6254: |      0: 0a 0f e7 00 05 0f da 00 0f e1 0f fa 0f f4 0f ed   ................",
          "6255: |     16: 0f da 0f 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "6256: |   4048: 00 00 00 00 00 00 00 1a 01 03 06 04 01 08 01 02   ................",
          "6257: |   4064: 06 05 04 08 08 01 05 00 00 00 06 01 03 06 04 09   ................",
          "6258: |   4080: 02 01 02 04 05 04 09 09 01 03 05 04 09 08 01 02   ................",
          "6259: | page 6 offset 20480",
          "6260: |      0: 0d 00 10 00 01 0f f9 00 0f f9 00 00 00 00 00 00   ................",
          "6261: |   4080: 00 00 00 00 00 00 00 00 00 05 01 03 00 10 01 03   ................",
          "6262: | end crash-65c98512cc9e49.db",
          "6263: }]} {}",
          "6265: do_catchsql_test 45.2 {",
          "6266:   INSERT INTO x1(x1) VALUES( 'merge=1' )",
          "6267: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cbb442ea3ba3a0e02381cdf6ad937a4fd61c04e",
      "candidate_info": {
        "commit_hash": "5cbb442ea3ba3a0e02381cdf6ad937a4fd61c04e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5cbb442ea3ba3a0e02381cdf6ad937a4fd61c04e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeapi.c"
        ],
        "message": "Small performance improvement in the sqlite3_step() interface.\n\nFossilOrigin-Name: 61400ef9f1337c77263b4d3e43a1983b0c4cf7137f066a2691768c98877035ef",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeapi.c||src/vdbeapi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: be545f85a6ef09cc6c762f7d2ab7a0b3adf5590c3fbdc9903e6b5b5cec6e823f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "655:   if( p->pc<0 && p->expired ){",
          "656:     p->rc = SQLITE_SCHEMA;",
          "657:     rc = SQLITE_ERROR;",
          "658:     goto end_of_step;",
          "659:   }",
          "660:   if( p->pc<0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "658:     if( (p->prepFlags & SQLITE_PREPARE_SAVESQL)!=0 ){",
          "663:       rc = sqlite3VdbeTransferError(p);",
          "664:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:       if( p->rc!=SQLITE_OK ){",
          "711:         rc = SQLITE_ERROR;",
          "712:       }",
          "713:     }",
          "714:   }",
          "716:   db->errCode = rc;",
          "717:   if( SQLITE_NOMEM==sqlite3ApiExit(p->db, p->rc) ){",
          "718:     p->rc = SQLITE_NOMEM_BKPT;",
          "719:   }",
          "720: end_of_step:",
          "729:        || (rc&0xff)==SQLITE_BUSY || rc==SQLITE_MISUSE",
          "730:   );",
          "742:   return (rc&db->errMask);",
          "743: }",
          "",
          "[Removed Lines]",
          "728:   assert( rc==SQLITE_ROW  || rc==SQLITE_DONE   || rc==SQLITE_ERROR",
          "731:   assert( (p->rc!=SQLITE_ROW && p->rc!=SQLITE_DONE) || p->rc==p->rcApp );",
          "732:   if( rc!=SQLITE_ROW",
          "733:    && rc!=SQLITE_DONE",
          "734:    && (p->prepFlags & SQLITE_PREPARE_SAVESQL)!=0",
          "735:   ){",
          "740:     rc = sqlite3VdbeTransferError(p);",
          "741:   }",
          "",
          "[Added Lines]",
          "720:     }else if( rc!=SQLITE_DONE && (p->prepFlags & SQLITE_PREPARE_SAVESQL)!=0 ){",
          "725:       rc = sqlite3VdbeTransferError(p);",
          "732:     if( (p->prepFlags & SQLITE_PREPARE_SAVESQL)!=0 ) rc = p->rc;",
          "737:   assert( (p->prepFlags & SQLITE_PREPARE_SAVESQL)!=0",
          "738:        || rc==SQLITE_ROW  || rc==SQLITE_DONE   || rc==SQLITE_ERROR",
          "",
          "---------------"
        ]
      }
    }
  ]
}