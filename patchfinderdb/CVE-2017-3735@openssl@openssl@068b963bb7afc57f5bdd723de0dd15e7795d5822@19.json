{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b066ef30585bdb051f9aae84d3b5a5df402c43b7",
      "candidate_info": {
        "commit_hash": "b066ef30585bdb051f9aae84d3b5a5df402c43b7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b066ef30585bdb051f9aae84d3b5a5df402c43b7",
        "files": [
          "crypto/x509v3/pcy_tree.c"
        ],
        "message": "Avoid possible memleak in X509_policy_check()\n\nWhen tree_calculate_user_set() fails, a jump to error failed to\ndeallocate a possibly allocated |auth_nodes|.\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\n(Merged from https://github.com/openssl/openssl/pull/3850)\n\n(cherry picked from commit 67f060acefae34d820ccdb2f560d86ed10633500)",
        "before_after_code_files": [
          "crypto/x509v3/pcy_tree.c||crypto/x509v3/pcy_tree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/pcy_tree.c||crypto/x509v3/pcy_tree.c": [
          "File: crypto/x509v3/pcy_tree.c -> crypto/x509v3/pcy_tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638: {",
          "639:     int init_ret;",
          "640:     int ret;",
          "641:     X509_POLICY_TREE *tree = NULL;",
          "642:     STACK_OF(X509_POLICY_NODE) *nodes, *auth_nodes = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "641:     int calc_ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:     }",
          "680:         goto error;",
          "682:         sk_X509_POLICY_NODE_free(auth_nodes);",
          "",
          "[Removed Lines]",
          "678:     if ((ret = tree_calculate_authority_set(tree, &auth_nodes)) == 0 ||",
          "679:         !tree_calculate_user_set(tree, policy_oids, auth_nodes))",
          "681:     if (ret == TREE_CALC_OK_DOFREE)",
          "",
          "[Added Lines]",
          "680:     if ((calc_ret = tree_calculate_authority_set(tree, &auth_nodes)) == 0)",
          "682:     ret = tree_calculate_user_set(tree, policy_oids, auth_nodes);",
          "683:     if (calc_ret == TREE_CALC_OK_DOFREE)",
          "685:     if (!ret)",
          "686:         goto error;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c24470d0363ad0c4f35081fb8b6f799c9c4a09e6",
      "candidate_info": {
        "commit_hash": "c24470d0363ad0c4f35081fb8b6f799c9c4a09e6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c24470d0363ad0c4f35081fb8b6f799c9c4a09e6",
        "files": [
          "test/ocspapitest.c"
        ],
        "message": "Wrap more of ocspapitest.c in OPENSSL_NO_OCSP\n\nmake_dummy_resp() uses OCSP types, and get_cert_and_key() is unused\nonce make_dummy_resp() is compiled out, so neither can be included\nin the build when OCSP is disabled and strict warnings are active.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\n(cherry picked from commit cb091295a9ff16f4de1a8b00be444d40ac068d04)\n\n(Merged from https://github.com/openssl/openssl/pull/4723)",
        "before_after_code_files": [
          "test/ocspapitest.c||test/ocspapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ocspapitest.c||test/ocspapitest.c": [
          "File: test/ocspapitest.c -> test/ocspapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: static const char *certstr;",
          "22: static const char *privkeystr;",
          "24: static int get_cert_and_key(X509 **cert_out, EVP_PKEY **key_out)",
          "25: {",
          "26:     BIO *certbio, *keybio;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #ifndef OPENSSL_NO_OCSP",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     return bs_out;",
          "87: }",
          "90: static int test_resp_signer(void)",
          "91: {",
          "92:     OCSP_BASICRESP *bs = NULL;",
          "",
          "[Removed Lines]",
          "89: #ifndef OPENSSL_NO_OCSP",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ff170c6a137c330bb23731f1193c5005e9b85a9",
      "candidate_info": {
        "commit_hash": "3ff170c6a137c330bb23731f1193c5005e9b85a9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3ff170c6a137c330bb23731f1193c5005e9b85a9",
        "files": [
          "ssl/tls_srp.c"
        ],
        "message": "Use memset to clear SRP_CTX instead of NULL and zero assignments\n\nThis uses memset() to clear all of the SRP_CTX when free'ing or\ninitializing it as well as in error paths instead of having a series\nof NULL and zero assignments as it is safer.\n\nIt also changes SSL_SRP_CTX_init() to reset all the SRP_CTX to zero\nin case or error, previously it could retain pointers to freed\nmemory, potentially leading to a double free.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3467)\n\n(cherry picked from commit 135976b3dd24e674c202c20b5746fc04ebb1fc1a)",
        "before_after_code_files": [
          "ssl/tls_srp.c||ssl/tls_srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/tls_srp.c||ssl/tls_srp.c": [
          "File: ssl/tls_srp.c -> ssl/tls_srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     BN_free(ctx->srp_ctx.a);",
          "30:     BN_free(ctx->srp_ctx.b);",
          "31:     BN_free(ctx->srp_ctx.v);",
          "46:     ctx->srp_ctx.strength = SRP_MINIMAL_N;",
          "48:     return (1);",
          "49: }",
          "",
          "[Removed Lines]",
          "32:     ctx->srp_ctx.TLS_ext_srp_username_callback = NULL;",
          "33:     ctx->srp_ctx.SRP_cb_arg = NULL;",
          "34:     ctx->srp_ctx.SRP_verify_param_callback = NULL;",
          "35:     ctx->srp_ctx.SRP_give_srp_client_pwd_callback = NULL;",
          "36:     ctx->srp_ctx.N = NULL;",
          "37:     ctx->srp_ctx.g = NULL;",
          "38:     ctx->srp_ctx.s = NULL;",
          "39:     ctx->srp_ctx.B = NULL;",
          "40:     ctx->srp_ctx.A = NULL;",
          "41:     ctx->srp_ctx.a = NULL;",
          "42:     ctx->srp_ctx.b = NULL;",
          "43:     ctx->srp_ctx.v = NULL;",
          "44:     ctx->srp_ctx.login = NULL;",
          "45:     ctx->srp_ctx.info = NULL;",
          "47:     ctx->srp_ctx.srp_Mask = 0;",
          "",
          "[Added Lines]",
          "32:     memset(&ctx->srp_ctx, 0, sizeof(ctx->srp_ctx));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     BN_free(s->srp_ctx.a);",
          "63:     BN_free(s->srp_ctx.b);",
          "64:     BN_free(s->srp_ctx.v);",
          "79:     s->srp_ctx.strength = SRP_MINIMAL_N;",
          "81:     return (1);",
          "82: }",
          "",
          "[Removed Lines]",
          "65:     s->srp_ctx.TLS_ext_srp_username_callback = NULL;",
          "66:     s->srp_ctx.SRP_cb_arg = NULL;",
          "67:     s->srp_ctx.SRP_verify_param_callback = NULL;",
          "68:     s->srp_ctx.SRP_give_srp_client_pwd_callback = NULL;",
          "69:     s->srp_ctx.N = NULL;",
          "70:     s->srp_ctx.g = NULL;",
          "71:     s->srp_ctx.s = NULL;",
          "72:     s->srp_ctx.B = NULL;",
          "73:     s->srp_ctx.A = NULL;",
          "74:     s->srp_ctx.a = NULL;",
          "75:     s->srp_ctx.b = NULL;",
          "76:     s->srp_ctx.v = NULL;",
          "77:     s->srp_ctx.login = NULL;",
          "78:     s->srp_ctx.info = NULL;",
          "80:     s->srp_ctx.srp_Mask = 0;",
          "",
          "[Added Lines]",
          "51:     memset(&s->srp_ctx, 0, sizeof(s->srp_ctx));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:     if ((s == NULL) || ((ctx = s->ctx) == NULL))",
          "89:         return 0;",
          "90:     s->srp_ctx.SRP_cb_arg = ctx->srp_ctx.SRP_cb_arg;",
          "92:     s->srp_ctx.TLS_ext_srp_username_callback =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     memset(&s->srp_ctx, 0, sizeof(s->srp_ctx));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "98:     s->srp_ctx.SRP_give_srp_client_pwd_callback =",
          "99:         ctx->srp_ctx.SRP_give_srp_client_pwd_callback;",
          "111:     s->srp_ctx.strength = ctx->srp_ctx.strength;",
          "113:     if (((ctx->srp_ctx.N != NULL) &&",
          "",
          "[Removed Lines]",
          "101:     s->srp_ctx.N = NULL;",
          "102:     s->srp_ctx.g = NULL;",
          "103:     s->srp_ctx.s = NULL;",
          "104:     s->srp_ctx.B = NULL;",
          "105:     s->srp_ctx.A = NULL;",
          "106:     s->srp_ctx.a = NULL;",
          "107:     s->srp_ctx.b = NULL;",
          "108:     s->srp_ctx.v = NULL;",
          "109:     s->srp_ctx.login = NULL;",
          "110:     s->srp_ctx.info = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "153:     BN_free(s->srp_ctx.a);",
          "154:     BN_free(s->srp_ctx.b);",
          "155:     BN_free(s->srp_ctx.v);",
          "156:     return (0);",
          "157: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:     memset(&s->srp_ctx, 0, sizeof(s->srp_ctx));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "161:     if (ctx == NULL)",
          "162:         return 0;",
          "183:     ctx->srp_ctx.strength = SRP_MINIMAL_N;",
          "185:     return (1);",
          "",
          "[Removed Lines]",
          "164:     ctx->srp_ctx.SRP_cb_arg = NULL;",
          "166:     ctx->srp_ctx.TLS_ext_srp_username_callback = NULL;",
          "168:     ctx->srp_ctx.SRP_verify_param_callback = NULL;",
          "170:     ctx->srp_ctx.SRP_give_srp_client_pwd_callback = NULL;",
          "172:     ctx->srp_ctx.N = NULL;",
          "173:     ctx->srp_ctx.g = NULL;",
          "174:     ctx->srp_ctx.s = NULL;",
          "175:     ctx->srp_ctx.B = NULL;",
          "176:     ctx->srp_ctx.A = NULL;",
          "177:     ctx->srp_ctx.a = NULL;",
          "178:     ctx->srp_ctx.b = NULL;",
          "179:     ctx->srp_ctx.v = NULL;",
          "180:     ctx->srp_ctx.login = NULL;",
          "181:     ctx->srp_ctx.srp_Mask = 0;",
          "182:     ctx->srp_ctx.info = NULL;",
          "",
          "[Added Lines]",
          "130:     memset(&ctx->srp_ctx, 0, sizeof(ctx->srp_ctx));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fca9feeffc18472c8153fd0bf8b0a95cc05c504",
      "candidate_info": {
        "commit_hash": "6fca9feeffc18472c8153fd0bf8b0a95cc05c504",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6fca9feeffc18472c8153fd0bf8b0a95cc05c504",
        "files": [
          "crypto/engine/eng_fat.c"
        ],
        "message": "Update eng_fat.c\n\nThis line will allow use private keys, which created by Crypto Pro, to\nsign with OpenSSL.\n\nCLA: trivial\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4836)\n\n(cherry picked from commit b35bb37a3d6ecf11b43ef8717600ab61718c3cc2)",
        "before_after_code_files": [
          "crypto/engine/eng_fat.c||crypto/engine/eng_fat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/engine/eng_fat.c||crypto/engine/eng_fat.c": [
          "File: crypto/engine/eng_fat.c -> crypto/engine/eng_fat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113: #endif",
          "114:     ENGINE_register_RAND(e);",
          "115:     ENGINE_register_pkey_meths(e);",
          "116:     return 1;",
          "117: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:     ENGINE_register_pkey_asn1_meths(e);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d22f2e01fb0fee4cb3e51351718b9681416783e",
      "candidate_info": {
        "commit_hash": "7d22f2e01fb0fee4cb3e51351718b9681416783e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7d22f2e01fb0fee4cb3e51351718b9681416783e",
        "files": [
          "apps/cms.c",
          "doc/apps/engine.pod",
          "doc/apps/x509.pod",
          "doc/crypto/ENGINE_add.pod",
          "util/mkdef.pl"
        ],
        "message": "Update copyright years on all files merged since Jan 1st 2018\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5039)",
        "before_after_code_files": [
          "apps/cms.c||apps/cms.c",
          "util/mkdef.pl||util/mkdef.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/cms.c||apps/cms.c": [
          "File: apps/cms.c -> apps/cms.c"
        ],
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #! /usr/bin/env perl",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "",
          "[Removed Lines]",
          "2: # Copyright 1995-2016 The OpenSSL Project Authors. All Rights Reserved.",
          "",
          "[Added Lines]",
          "2: # Copyright 1995-2018 The OpenSSL Project Authors. All Rights Reserved.",
          "",
          "---------------"
        ]
      }
    }
  ]
}