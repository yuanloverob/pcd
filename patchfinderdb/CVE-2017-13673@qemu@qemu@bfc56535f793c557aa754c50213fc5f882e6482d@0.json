{
  "cve_id": "CVE-2017-13673",
  "cve_desc": "The vga display update in mis-calculated the region for the dirty bitmap snapshot in case split screen mode is used causing a denial of service (assertion failure) in the cpu_physical_memory_snapshot_get_dirty function.",
  "repo": "qemu/qemu",
  "patch_hash": "bfc56535f793c557aa754c50213fc5f882e6482d",
  "patch_info": {
    "commit_hash": "bfc56535f793c557aa754c50213fc5f882e6482d",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/bfc56535f793c557aa754c50213fc5f882e6482d",
    "files": [
      "hw/display/vga.c"
    ],
    "message": "vga: fix display update region calculation\n\nvga display update mis-calculated the region for the dirty bitmap\nsnapshot in case the scanlines are padded.  This can triggere an\nassert in cpu_physical_memory_snapshot_get_dirty().\n\nFixes: fec5e8c92becad223df9d972770522f64aafdb72\nReported-by: Kevin Wolf <kwolf@redhat.com>\nReported-by: \u674e\u5f3a <liqiang6-s@360.cn>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nMessage-id: 20170509104839.19415-1-kraxel@redhat.com",
    "before_after_code_files": [
      "hw/display/vga.c||hw/display/vga.c"
    ]
  },
  "patch_diff": {
    "hw/display/vga.c||hw/display/vga.c": [
      "File: hw/display/vga.c -> hw/display/vga.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1630:     if (!full_update) {",
      "1631:         vga_sync_dirty_bitmap(s);",
      "1632:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, addr1,",
      "1634:                                                       DIRTY_MEMORY_VGA);",
      "1635:     }",
      "",
      "[Removed Lines]",
      "1633:                                                       bwidth * height,",
      "",
      "[Added Lines]",
      "1633:                                                       line_offset * height,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fec5e8c92becad223df9d972770522f64aafdb72",
      "candidate_info": {
        "commit_hash": "fec5e8c92becad223df9d972770522f64aafdb72",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/fec5e8c92becad223df9d972770522f64aafdb72",
        "files": [
          "hw/display/vga.c"
        ],
        "message": "vga: make display updates thread safe.\n\nThe vga code clears the dirty bits *after* reading the framebuffer\nmemory.  So if the guest framebuffer updates hits the race window\nbetween vga reading the framebuffer and vga clearing the dirty bits\nvga will miss that update\n\nFix it by using the new memory_region_copy_and_clear_dirty()\nmemory_region_copy_get_dirty() functions.  That way we clear the\ndirty bitmap before reading the framebuffer.  Any guest display\nupdates happening in parallel will be properly tracked in the\ndirty bitmap then and the next display refresh will pick them up.\n\nProblem triggers with mttcg only.  Before mttcg was merged tcg\nnever ran in parallel to vga emulation.  Using kvm will hide the\nproblem too, due to qemu operating on a userspace copy of the\nkernel's dirty bitmap.\n\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nMessage-id: 20170421091632.30900-5-kraxel@redhat.com\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/display/vga.c||hw/display/vga.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/vga.c||hw/display/vga.c"
          ],
          "candidate": [
            "hw/display/vga.c||hw/display/vga.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/vga.c||hw/display/vga.c": [
          "File: hw/display/vga.c -> hw/display/vga.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1465:     DisplaySurface *surface = qemu_console_surface(s->con);",
          "1466:     int y1, y, update, linesize, y_start, double_scan, mask, depth;",
          "1467:     int width, height, shift_control, line_offset, bwidth, bits;",
          "1469:     int disp_width, multi_scan, multi_run;",
          "1470:     uint8_t *d;",
          "1471:     uint32_t v, addr1, addr;",
          "",
          "[Removed Lines]",
          "1468:     ram_addr_t page0, page1, page_min, page_max;",
          "",
          "[Added Lines]",
          "1468:     ram_addr_t page0, page1;",
          "1469:     DirtyBitmapSnapshot *snap = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1481:     full_update |= update_basic_params(s);",
          "1486:     s->get_resolution(s, &width, &height);",
          "1487:     disp_width = width;",
          "",
          "[Removed Lines]",
          "1483:     if (!full_update)",
          "1484:         vga_sync_dirty_bitmap(s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1625:     addr1 = (s->start_addr * 4);",
          "1626:     bwidth = (width * bits + 7) / 8;",
          "1627:     y_start = -1;",
          "1630:     d = surface_data(surface);",
          "1631:     linesize = surface_stride(surface);",
          "1632:     y1 = 0;",
          "1633:     for(y = 0; y < height; y++) {",
          "1634:         addr = addr1;",
          "1635:         if (!(s->cr[VGA_CRTC_MODE] & 1)) {",
          "",
          "[Removed Lines]",
          "1628:     page_min = -1;",
          "1629:     page_max = 0;",
          "",
          "[Added Lines]",
          "1630:     if (!full_update) {",
          "1631:         vga_sync_dirty_bitmap(s);",
          "1632:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, addr1,",
          "1633:                                                       bwidth * height,",
          "1634:                                                       DIRTY_MEMORY_VGA);",
          "1635:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1644:         update = full_update;",
          "1645:         page0 = addr;",
          "1646:         page1 = addr + bwidth - 1;",
          "1650:         update |= vga_scanline_invalidated(s, y);",
          "1651:         if (update) {",
          "1652:             if (y_start < 0)",
          "1653:                 y_start = y;",
          "1658:             if (!(is_buffer_shared(surface))) {",
          "1659:                 vga_draw_line(s, d, s->vram_ptr + addr, width);",
          "1660:                 if (s->cursor_draw_line)",
          "",
          "[Removed Lines]",
          "1647:         update |= memory_region_get_dirty(&s->vram, page0, page1 - page0,",
          "1648:                                           DIRTY_MEMORY_VGA);",
          "1654:             if (page0 < page_min)",
          "1655:                 page_min = page0;",
          "1656:             if (page1 > page_max)",
          "1657:                 page_max = page1;",
          "",
          "[Added Lines]",
          "1651:         if (full_update) {",
          "1652:             update = 1;",
          "1653:         } else {",
          "1654:             update = memory_region_snapshot_get_dirty(&s->vram, snap,",
          "1655:                                                       page0, page1 - page0);",
          "1656:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1687:         dpy_gfx_update(s->con, 0, y_start,",
          "1688:                        disp_width, y - y_start);",
          "1689:     }",
          "1697:     memset(s->invalidated_y_table, 0, sizeof(s->invalidated_y_table));",
          "1698: }",
          "",
          "[Removed Lines]",
          "1691:     if (page_max >= page_min) {",
          "1692:         memory_region_reset_dirty(&s->vram,",
          "1693:                                   page_min,",
          "1694:                                   page_max - page_min,",
          "1695:                                   DIRTY_MEMORY_VGA);",
          "1696:     }",
          "",
          "[Added Lines]",
          "1694:     g_free(snap);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e65294157d4b69393b3f819c99f4f647452b48e3",
      "candidate_info": {
        "commit_hash": "e65294157d4b69393b3f819c99f4f647452b48e3",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/e65294157d4b69393b3f819c99f4f647452b48e3",
        "files": [
          "hw/display/vga.c"
        ],
        "message": "vga: fix display update region calculation (split screen)\n\nvga display update mis-calculated the region for the dirty bitmap\nsnapshot in case split screen mode is used.  This can trigger an\nassert in cpu_physical_memory_snapshot_get_dirty().\n\nImpact:  DoS for privileged guest users.\n\nFixes: CVE-2017-13673\nFixes: fec5e8c92becad223df9d972770522f64aafdb72\nCc: P J P <ppandit@redhat.com>\nReported-by: David Buchanan <d@vidbuchanan.co.uk>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nMessage-id: 20170828123307.15392-1-kraxel@redhat.com",
        "before_after_code_files": [
          "hw/display/vga.c||hw/display/vga.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/vga.c||hw/display/vga.c"
          ],
          "candidate": [
            "hw/display/vga.c||hw/display/vga.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/vga.c||hw/display/vga.c": [
          "File: hw/display/vga.c -> hw/display/vga.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1628:     y1 = 0;",
          "1630:     if (!full_update) {",
          "1631:         vga_sync_dirty_bitmap(s);",
          "1634:                                                       DIRTY_MEMORY_VGA);",
          "1635:     }",
          "",
          "[Removed Lines]",
          "1632:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, addr1,",
          "1633:                                                       line_offset * height,",
          "",
          "[Added Lines]",
          "1631:         ram_addr_t region_start = addr1;",
          "1632:         ram_addr_t region_end = addr1 + line_offset * height;",
          "1634:         if (s->line_compare < height) {",
          "1636:             region_start = 0;",
          "1637:         }",
          "1638:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, region_start,",
          "1639:                                                       region_end - region_start,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6f7f3b0cf4b6c5e7cdff9dfa6d20545e1051375",
      "candidate_info": {
        "commit_hash": "d6f7f3b0cf4b6c5e7cdff9dfa6d20545e1051375",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/d6f7f3b0cf4b6c5e7cdff9dfa6d20545e1051375",
        "files": [
          "hw/display/vga.c"
        ],
        "message": "vga: fix display update region calculation (split screen)\n\nvga display update mis-calculated the region for the dirty bitmap\nsnapshot in case split screen mode is used.  This can trigger an\nassert in cpu_physical_memory_snapshot_get_dirty().\n\nImpact:  DoS for privileged guest users.\n\nFixes: CVE-2017-13673\nFixes: fec5e8c92becad223df9d972770522f64aafdb72\nCc: P J P <ppandit@redhat.com>\nReported-by: David Buchanan <d@vidbuchanan.co.uk>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nMessage-id: 20170828123307.15392-1-kraxel@redhat.com\n(cherry picked from commit e65294157d4b69393b3f819c99f4f647452b48e3)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/display/vga.c||hw/display/vga.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/vga.c||hw/display/vga.c"
          ],
          "candidate": [
            "hw/display/vga.c||hw/display/vga.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/vga.c||hw/display/vga.c": [
          "File: hw/display/vga.c -> hw/display/vga.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1628:     y1 = 0;",
          "1630:     if (!full_update) {",
          "1631:         vga_sync_dirty_bitmap(s);",
          "1634:                                                       DIRTY_MEMORY_VGA);",
          "1635:     }",
          "",
          "[Removed Lines]",
          "1632:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, addr1,",
          "1633:                                                       line_offset * height,",
          "",
          "[Added Lines]",
          "1631:         ram_addr_t region_start = addr1;",
          "1632:         ram_addr_t region_end = addr1 + line_offset * height;",
          "1634:         if (s->line_compare < height) {",
          "1636:             region_start = 0;",
          "1637:         }",
          "1638:         snap = memory_region_snapshot_and_clear_dirty(&s->vram, region_start,",
          "1639:                                                       region_end - region_start,",
          "",
          "---------------"
        ]
      }
    }
  ]
}