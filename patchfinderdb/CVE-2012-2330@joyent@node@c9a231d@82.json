{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "11d1eca9f3c465045828e3a00b103620c8253258",
      "candidate_info": {
        "commit_hash": "11d1eca9f3c465045828e3a00b103620c8253258",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/11d1eca9f3c465045828e3a00b103620c8253258",
        "files": [
          "src/node.cc"
        ],
        "message": "Add explicit v8 locker\n\nv8 requires a lock of each thread using the vm, but if none is\nexplicitly is created it will implicitly create one for you. This\ncreates issues when trying to build modules which use v8's\nmulti-threading features because there's no lock to unlock.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2633:   argv = Init(argc, argv);",
          "2635:   v8::V8::Initialize();",
          "2636:   v8::HandleScope handle_scope;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2636:   v8::Locker locker;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd6122edebe09a66a3a1a3fd0904ffda39d9007b",
      "candidate_info": {
        "commit_hash": "cd6122edebe09a66a3a1a3fd0904ffda39d9007b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cd6122edebe09a66a3a1a3fd0904ffda39d9007b",
        "files": [
          "lib/timers.js"
        ],
        "message": "add ref/unref to setTimeout timers",
        "before_after_code_files": [
          "lib/timers.js||litimers.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/timers.js||litimers.js": [
          "File: lib/timers.js -> litimers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     after = 1; // schedule on next tick, follows browser behaviour",
          "177:   }",
          "183:   if (arguments.length <= 2) {",
          "184:     timer._onTimeout = callback;",
          "",
          "[Removed Lines]",
          "179:   timer = { _idleTimeout: after };",
          "180:   timer._idlePrev = timer;",
          "181:   timer._idleNext = timer;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209: exports.clearTimeout = function(timer) {",
          "210:   if (timer && (timer.ontimeout || timer._onTimeout)) {",
          "211:     timer.ontimeout = timer._onTimeout = null;",
          "213:       timer.close(); // for after === 0",
          "214:     } else {",
          "215:       exports.unenroll(timer);",
          "",
          "[Removed Lines]",
          "212:     if (timer instanceof Timer) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "245:     timer.close();",
          "246:   }",
          "247: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "451ff1540ab536237e8d751d241d7fc3391a4087",
      "candidate_info": {
        "commit_hash": "451ff1540ab536237e8d751d241d7fc3391a4087",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/451ff1540ab536237e8d751d241d7fc3391a4087",
        "files": [
          "lib/http.js",
          "test/simple/test-http-client-timeout-agent.js"
        ],
        "message": "http: Remove timeout handler when data arrives",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-client-timeout-agent.js||test/simple/test-http-client-timeout-agent.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1474:     assert(!socket.writable);",
          "1475:   } else {",
          "1476:     debug('AGENT socket keep-alive');",
          "1477:     socket.removeListener('close', socketCloseListener);",
          "1478:     socket.removeListener('error', socketErrorListener);",
          "1479:     socket.emit('free');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1554:   }",
          "1556:   if (this.socket && this.socket.writable) {",
          "1557:     this.socket.setTimeout(msecs, emitTimeout);",
          "1558:     return;",
          "1559:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-client-timeout-agent.js||test/simple/test-http-client-timeout-agent.js": [
          "File: test/simple/test-http-client-timeout-agent.js -> test/simple/test-http-client-timeout-agent.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var http = require('http');",
          "26: var request_number = 0;",
          "27: var requests_sent = 0;",
          "28: var requests_done = 0;",
          "29: var options = {",
          "30:   method: 'GET',",
          "31:   port: common.PORT,",
          "32:   host: '127.0.0.1',",
          "33: };",
          "37: var server = http.createServer(function(req, res) {",
          "38:   var m = /\\/(.*)/.exec(req.url),",
          "39:       reqid = parseInt(m[1], 10);",
          "40:   if ( reqid % 2 ) {",
          "42:   } else {",
          "43:     res.writeHead(200, {'Content-Type': 'text/plain'});",
          "44:     res.write(reqid.toString());",
          "45:     res.end();",
          "46:   }",
          "47:   request_number+=1;",
          "48: });",
          "50: server.listen(options.port, options.host, function() {",
          "51:   var req;",
          "53:   for (requests_sent = 0; requests_sent < 30; requests_sent+=1) {",
          "54:     options.path = '/' + requests_sent;",
          "55:     req = http.request(options);",
          "56:     req.id = requests_sent;",
          "57:     req.on('response', function(res) {",
          "58:       res.on('data', function(data) {",
          "59:         console.log('res#'+this.req.id+' data:'+data);",
          "60:       });",
          "61:       res.on('end', function(data) {",
          "62:         console.log('res#'+this.req.id+' end');",
          "63:         requests_done += 1;",
          "64:       });",
          "65:     });",
          "66:     req.on('close', function() {",
          "67:       console.log('req#'+this.id+' close');",
          "68:     });",
          "69:     req.on('error', function() {",
          "70:       console.log('req#'+this.id+' error');",
          "71:       this.destroy();",
          "72:     });",
          "73:     req.setTimeout(50, function () {",
          "74:       var req = this;",
          "75:       console.log('req#'+this.id + ' timeout');",
          "76:       req.abort();",
          "77:       requests_done += 1;",
          "78:     });",
          "79:     req.end();",
          "80:   }",
          "81:   setTimeout(function() {",
          "82:     server.close();",
          "83:   }, 150);",
          "84: });",
          "86: process.on('exit', function() {",
          "87:   console.error('done=%j sent=%j', requests_done, requests_sent);",
          "88:   assert.ok(requests_done == requests_sent, 'timeout on http request called too much');",
          "89: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5950db197c5ee73922beb67e3b8c060b5fcbc7f7",
      "candidate_info": {
        "commit_hash": "5950db197c5ee73922beb67e3b8c060b5fcbc7f7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5950db197c5ee73922beb67e3b8c060b5fcbc7f7",
        "files": [
          "lib/tls.js",
          "test/simple/test-tls-sni-server-client.js"
        ],
        "message": "tls: revert accidental API change\n\nsocket.authorizationError should always be string. Also make sni test\npass.",
        "before_after_code_files": [
          "lib/tls.js||litls.js",
          "test/simple/test-tls-sni-server-client.js||test/simple/test-tls-sni-server-client.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1059:       } else {",
          "1060:         var verifyError = pair.ssl.verifyError();",
          "1061:         if (verifyError) {",
          "1064:           if (self.rejectUnauthorized) {",
          "1065:             socket.destroy();",
          "",
          "[Removed Lines]",
          "1062:           pair.cleartext.authorizationError = verifyError;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-tls-sni-server-client.js||test/simple/test-tls-sni-server-client.js": [
          "File: test/simple/test-tls-sni-server-client.js -> test/simple/test-tls-sni-server-client.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: function startTest() {",
          "95:   function connectClient(options, callback) {",
          "96:     var client = tls.connect(options, function() {",
          "98:       client.destroy();",
          "100:       callback();",
          "",
          "[Removed Lines]",
          "97:       clientResults.push(client.authorized);",
          "",
          "[Added Lines]",
          "97:       clientResults.push(",
          "98:         client.authorizationError &&",
          "99:         /Hostname\\/IP doesn't/.test(client.authorizationError));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "067be2b3fe2723215dea3a5ac3b25eb36d6ca987",
      "candidate_info": {
        "commit_hash": "067be2b3fe2723215dea3a5ac3b25eb36d6ca987",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/067be2b3fe2723215dea3a5ac3b25eb36d6ca987",
        "files": [
          "src/ev-emul.h",
          "src/node.h"
        ],
        "message": "node: fix namespacing issue in ev-emul.h\n\nAlways use C linkage, prevent accidental name mangling.",
        "before_after_code_files": [
          "src/ev-emul.h||src/ev-emul.h",
          "src/node.h||src/node.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ev-emul.h||src/ev-emul.h": [
          "File: src/ev-emul.h -> src/ev-emul.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include <stdint.h>",
          "31: #include <string.h>",
          "33: #undef ev_init",
          "34: #undef ev_set_cb",
          "35: #undef ev_set_priority",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #ifdef __cplusplus",
          "34: extern \"C\" {",
          "35: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248: #undef __uv_container_of",
          "249: #undef __uv_warn_of",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255: #ifdef __cplusplus",
          "256: }",
          "257: #endif",
          "",
          "---------------"
        ],
        "src/node.h||src/node.h": [
          "File: src/node.h -> src/node.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "274:              int argc,",
          "275:              v8::Handle<v8::Value> argv[]);",
          "277: #if !defined(NODE_WANT_INTERNALS) && !defined(_WIN32)",
          "278: # include \"ev-emul.h\"",
          "279: # include \"eio-emul.h\"",
          "280: #endif",
          "283: #endif  // SRC_NODE_H_",
          "",
          "[Removed Lines]",
          "282: }  // namespace node",
          "",
          "[Added Lines]",
          "277: }  // namespace node",
          "",
          "---------------"
        ]
      }
    }
  ]
}