{
  "cve_id": "CVE-2019-18844",
  "cve_desc": "The Device Model in ACRN before 2019w25.5-140000p relies on assert calls in devicemodel/hw/pci/core.c and devicemodel/include/pci_core.h (instead of other mechanisms for propagating error information or diagnostic information), which might allow attackers to cause a denial of service (assertion failure) within pci core. This is fixed in 1.2. 6199e653418e is a mitigation for pre-1.1 versions, whereas 2b3dedfb9ba1 is a mitigation for 1.1.",
  "repo": "projectacrn/acrn-hypervisor",
  "patch_hash": "6199e653418eda58cd698d8769820904453e2535",
  "patch_info": {
    "commit_hash": "6199e653418eda58cd698d8769820904453e2535",
    "repo": "projectacrn/acrn-hypervisor",
    "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/6199e653418eda58cd698d8769820904453e2535",
    "files": [
      "devicemodel/hw/pci/core.c"
    ],
    "message": "dm: validate the input in 'pci_emul_mem_handler()'\n\n checking the inputs explicitly instead of using Assert.\n\nTracked-On: #4003\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>\nReviewed-by: Shuo Liu <shuo.a.liu@intel.com>\nAcked-by: Yu Wang <yu1.wang@intel.com>",
    "before_after_code_files": [
      "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c"
    ]
  },
  "patch_diff": {
    "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c": [
      "File: devicemodel/hw/pci/core.c -> devicemodel/hw/pci/core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "416:  uint64_t offset;",
      "417:  int bidx = (int) arg2;",
      "425:  offset = addr - pdi->bar[bidx].addr;",
      "",
      "[Removed Lines]",
      "419:  assert(bidx <= PCI_BARMAX);",
      "420:  assert(pdi->bar[bidx].type == PCIBAR_MEM32 ||",
      "421:         pdi->bar[bidx].type == PCIBAR_MEM64);",
      "422:  assert(addr >= pdi->bar[bidx].addr &&",
      "423:         addr + size <= pdi->bar[bidx].addr + pdi->bar[bidx].size);",
      "",
      "[Added Lines]",
      "419:  if (addr + size > pdi->bar[bidx].addr + pdi->bar[bidx].size) {",
      "420:   printf(\"%s, Out of emulated memory range.\\n\", __func__);",
      "421:   return -ESRCH;",
      "422:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf6ba23fd94556ba3930917e0b985abf3f902950",
      "candidate_info": {
        "commit_hash": "cf6ba23fd94556ba3930917e0b985abf3f902950",
        "repo": "projectacrn/acrn-hypervisor",
        "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/cf6ba23fd94556ba3930917e0b985abf3f902950",
        "files": [
          "devicemodel/hw/pci/core.c"
        ],
        "message": "dm: validate the input in 'pci_emul_mem_handler()'\n\n checking the inputs explicitly instead of using Assert.\n\nTracked-On: #3991\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>\nReviewed-by: Shuo Liu <shuo.a.liu@intel.com>\nAcked-by: Yu Wang <yu1.wang@intel.com>",
        "before_after_code_files": [
          "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c"
          ],
          "candidate": [
            "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c"
          ]
        }
      },
      "candidate_diff": {
        "devicemodel/hw/pci/core.c||devicemodel/hw/pci/core.c": [
          "File: devicemodel/hw/pci/core.c -> devicemodel/hw/pci/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:  uint64_t offset;",
          "418:  int bidx = (int) arg2;",
          "426:  offset = addr - pdi->bar[bidx].addr;",
          "",
          "[Removed Lines]",
          "420:  assert(bidx <= PCI_BARMAX);",
          "421:  assert(pdi->bar[bidx].type == PCIBAR_MEM32 ||",
          "422:         pdi->bar[bidx].type == PCIBAR_MEM64);",
          "423:  assert(addr >= pdi->bar[bidx].addr &&",
          "424:         addr + size <= pdi->bar[bidx].addr + pdi->bar[bidx].size);",
          "",
          "[Added Lines]",
          "420:  if (addr + size > pdi->bar[bidx].addr + pdi->bar[bidx].size) {",
          "421:   printf(\"%s, Out of emulated memory range.\\n\", __func__);",
          "422:   return -ESRCH;",
          "423:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}