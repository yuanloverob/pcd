{
  "cve_id": "CVE-2013-3670",
  "cve_desc": "The rle_unpack function in vmdav.c in libavcodec in FFmpeg git 20130328 through 20130501 does not properly use the bytestream2 API, which allows remote attackers to cause a denial of service (out-of-bounds array access and application crash) via crafted RLE data.  NOTE: the vendor has listed this as an issue fixed in 1.2.1, but the issue is actually in new code that was not shipped with the 1.2.1 release or any earlier release.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb",
  "patch_info": {
    "commit_hash": "c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb",
    "files": [
      "libavcodec/vmdav.c"
    ],
    "message": "vmdav: Try to fix unpack_rle()\n\nThis fixes out of array accesses\nThe code prior to this commit could not have worked, thus obviously\nwas untested. I was also not able to find a valid sample that uses this\ncode.\nThis fix is thus only based on the description of the format\n\nIf someone has a sample that uses unpack_rle(), please mail me.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/vmdav.c||libavcodec/vmdav.c"
    ]
  },
  "patch_diff": {
    "libavcodec/vmdav.c||libavcodec/vmdav.c": [
      "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "151:                       int src_count, int src_size, int dest_len)",
      "152: {",
      "153:     unsigned char *pd;",
      "155:     unsigned char *dest_end = dest + dest_len;",
      "156:     GetByteContext gb;",
      "",
      "[Removed Lines]",
      "154:     int i, l;",
      "",
      "[Added Lines]",
      "154:     int i, j, l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "176:             bytestream2_get_bufferu(&gb, pd, l);",
      "177:             pd += l;",
      "178:         } else {",
      "180:                 return bytestream2_tell(&gb);",
      "184:             }",
      "186:         }",
      "187:         i += l;",
      "188:     } while (i < src_count);",
      "",
      "[Removed Lines]",
      "179:             if (dest_end - pd < i || bytestream2_get_bytes_left(&gb) < 2)",
      "181:             for (i = 0; i < l; i++) {",
      "185:             bytestream2_skip(&gb, 2);",
      "",
      "[Added Lines]",
      "179:             int ps[2];",
      "180:             if (dest_end - pd < 2*l || bytestream2_get_bytes_left(&gb) < 2)",
      "182:             ps[0] = bytestream2_get_byteu(&gb);",
      "183:             ps[1] = bytestream2_get_byteu(&gb);",
      "184:             for (j = 0; j < l; j++) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d814b9b51ddd3764e809c1d0f82b770e0bc085fd",
      "candidate_info": {
        "commit_hash": "d814b9b51ddd3764e809c1d0f82b770e0bc085fd",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/d814b9b51ddd3764e809c1d0f82b770e0bc085fd",
        "files": [
          "libavcodec/vmdav.c"
        ],
        "message": "vmdav: Try to fix unpack_rle()\n\nThis fixes out of array accesses\nThe code prior to this commit could not have worked, thus obviously\nwas untested. I was also not able to find a valid sample that uses this\ncode.\nThis fix is thus only based on the description of the format\n\nIf someone has a sample that uses unpack_rle(), please mail me.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb)\n\nConflicts:\n\n\tlibavcodec/vmdav.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 0baa0a5a02e16ef097ed9f72bc8a7d7b585c7652)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/vmdav.c||libavcodec/vmdav.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ],
          "candidate": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vmdav.c||libavcodec/vmdav.c": [
          "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:     const unsigned char *ps;",
          "161:     const unsigned char *ps_end;",
          "162:     unsigned char *pd;",
          "164:     unsigned char *dest_end = dest + dest_len;",
          "166:     ps = src;",
          "",
          "[Removed Lines]",
          "163:     int i, l;",
          "",
          "[Added Lines]",
          "163:     int i, j, l;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:             ps += l;",
          "187:             pd += l;",
          "188:         } else {",
          "190:                 return ps - src;",
          "194:             }",
          "",
          "[Removed Lines]",
          "189:             if (dest_end - pd < i || ps_end - ps < 2)",
          "191:             for (i = 0; i < l; i++) {",
          "",
          "[Added Lines]",
          "189:             if (dest_end - pd < 2*l || ps_end - ps < 2)",
          "191:             for (j = 0; j < l; j++) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0baa0a5a02e16ef097ed9f72bc8a7d7b585c7652",
      "candidate_info": {
        "commit_hash": "0baa0a5a02e16ef097ed9f72bc8a7d7b585c7652",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0baa0a5a02e16ef097ed9f72bc8a7d7b585c7652",
        "files": [
          "libavcodec/vmdav.c"
        ],
        "message": "vmdav: Try to fix unpack_rle()\n\nThis fixes out of array accesses\nThe code prior to this commit could not have worked, thus obviously\nwas untested. I was also not able to find a valid sample that uses this\ncode.\nThis fix is thus only based on the description of the format\n\nIf someone has a sample that uses unpack_rle(), please mail me.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb)\n\nConflicts:\n\n\tlibavcodec/vmdav.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/vmdav.c||libavcodec/vmdav.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ],
          "candidate": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vmdav.c||libavcodec/vmdav.c": [
          "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     const unsigned char *ps;",
          "163:     const unsigned char *ps_end;",
          "164:     unsigned char *pd;",
          "166:     unsigned char *dest_end = dest + dest_len;",
          "168:     ps = src;",
          "",
          "[Removed Lines]",
          "165:     int i, l;",
          "",
          "[Added Lines]",
          "165:     int i, j, l;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:             ps += l;",
          "189:             pd += l;",
          "190:         } else {",
          "192:                 return ps - src;",
          "196:             }",
          "",
          "[Removed Lines]",
          "191:             if (dest_end - pd < i || ps_end - ps < 2)",
          "193:             for (i = 0; i < l; i++) {",
          "",
          "[Added Lines]",
          "191:             if (dest_end - pd < 2*l || ps_end - ps < 2)",
          "193:             for (j = 0; j < l; j++) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2fae70db2ac2ffaf7968637fe4f111a24e7e4351",
      "candidate_info": {
        "commit_hash": "2fae70db2ac2ffaf7968637fe4f111a24e7e4351",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/2fae70db2ac2ffaf7968637fe4f111a24e7e4351",
        "files": [
          "libavcodec/vmdav.c"
        ],
        "message": "vmdav: Try to fix unpack_rle()\n\nThis fixes out of array accesses\nThe code prior to this commit could not have worked, thus obviously\nwas untested. I was also not able to find a valid sample that uses this\ncode.\nThis fix is thus only based on the description of the format\n\nIf someone has a sample that uses unpack_rle(), please mail me.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb)\n\nConflicts:\n\n\tlibavcodec/vmdav.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/vmdav.c||libavcodec/vmdav.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ],
          "candidate": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vmdav.c||libavcodec/vmdav.c": [
          "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:             bytestream2_get_buffer(&gb, pd, l);",
          "180:             pd += l;",
          "181:         } else {",
          "182:             if (dest_end - pd < 2*l || bytestream2_get_bytes_left(&gb) < 2)",
          "183:                 return bytestream2_tell(&gb);",
          "185:             for (j = 0; j < l; j++) {",
          "188:             }",
          "189:         }",
          "190:         i += l;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:             int ps[2];",
          "185:             ps[0] = bytestream2_get_byteu(&gb);",
          "186:             ps[1] = bytestream2_get_byteu(&gb);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9d9fd1137b18c5649342a15c77f67d1c5d0be01",
      "candidate_info": {
        "commit_hash": "e9d9fd1137b18c5649342a15c77f67d1c5d0be01",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e9d9fd1137b18c5649342a15c77f67d1c5d0be01",
        "files": [
          "libavcodec/vmdav.c"
        ],
        "message": "vmdav: Try to fix unpack_rle()\n\nThis fixes out of array accesses\nThe code prior to this commit could not have worked, thus obviously\nwas untested. I was also not able to find a valid sample that uses this\ncode.\nThis fix is thus only based on the description of the format\n\nIf someone has a sample that uses unpack_rle(), please mail me.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit c1f2c4c3b49277d65b71ccdd3b6b2878f1b593eb)\n\nConflicts:\n\n\tlibavcodec/vmdav.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 0baa0a5a02e16ef097ed9f72bc8a7d7b585c7652)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/vmdav.c||libavcodec/vmdav.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ],
          "candidate": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vmdav.c||libavcodec/vmdav.c": [
          "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     const unsigned char *ps;",
          "163:     const unsigned char *ps_end;",
          "164:     unsigned char *pd;",
          "166:     unsigned char *dest_end = dest + dest_len;",
          "168:     ps = src;",
          "",
          "[Removed Lines]",
          "165:     int i, l;",
          "",
          "[Added Lines]",
          "165:     int i, j, l;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:             ps += l;",
          "189:             pd += l;",
          "190:         } else {",
          "192:                 return ps - src;",
          "196:             }",
          "",
          "[Removed Lines]",
          "191:             if (dest_end - pd < i || ps_end - ps < 2)",
          "193:             for (i = 0; i < l; i++) {",
          "",
          "[Added Lines]",
          "191:             if (dest_end - pd < 2*l || ps_end - ps < 2)",
          "193:             for (j = 0; j < l; j++) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35cb6854bb76b4a5b6f2aea2dce81e18d7ab61cd",
      "candidate_info": {
        "commit_hash": "35cb6854bb76b4a5b6f2aea2dce81e18d7ab61cd",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/35cb6854bb76b4a5b6f2aea2dce81e18d7ab61cd",
        "files": [
          "libavcodec/vmdav.c"
        ],
        "message": "Fix potential pointer arithmetic overflows in rle_unpack() of vmd video decoder.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/vmdav.c||libavcodec/vmdav.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ],
          "candidate": [
            "libavcodec/vmdav.c||libavcodec/vmdav.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vmdav.c||libavcodec/vmdav.c": [
          "File: libavcodec/vmdav.c -> libavcodec/vmdav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         l = *ps++;",
          "180:         if (l & 0x80) {",
          "181:             l = (l & 0x7F) * 2;",
          "183:                 return ps - src;",
          "184:             memcpy(pd, ps, l);",
          "185:             ps += l;",
          "186:             pd += l;",
          "187:         } else {",
          "189:                 return ps - src;",
          "190:             for (i = 0; i < l; i++) {",
          "",
          "[Removed Lines]",
          "182:             if (pd + l > dest_end || ps_end - ps < l)",
          "188:             if (pd + i > dest_end || ps_end - ps < 2)",
          "",
          "[Added Lines]",
          "182:             if (dest_end - pd < l || ps_end - ps < l)",
          "188:             if (dest_end - pd < i || ps_end - ps < 2)",
          "",
          "---------------"
        ]
      }
    }
  ]
}