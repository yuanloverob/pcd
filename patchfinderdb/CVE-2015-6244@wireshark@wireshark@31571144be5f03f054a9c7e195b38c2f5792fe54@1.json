{
  "cve_id": "CVE-2015-6244",
  "cve_desc": "The dissect_zbee_secure function in epan/dissectors/packet-zbee-security.c in the ZigBee dissector in Wireshark 1.12.x before 1.12.7 improperly relies on length fields contained in packet data, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "31571144be5f03f054a9c7e195b38c2f5792fe54",
  "patch_info": {
    "commit_hash": "31571144be5f03f054a9c7e195b38c2f5792fe54",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/31571144be5f03f054a9c7e195b38c2f5792fe54",
    "files": [
      "epan/dissectors/packet-zbee-security.c"
    ],
    "message": "Use the reported length where appropriate.\n\nUse the captured length to know how much data to decrypt.  Use the\nreported length to determine whether we have a null payload and to se\nthe reported length of the decrypted payload and of tvbuffs for the\nun-decrypted payload.\n\nBug: 11389\nChange-Id: I4395c5a48c16110fcf31b611b99749c61000d489\nReviewed-on: https://code.wireshark.org/review/9953\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c": [
      "File: epan/dissectors/packet-zbee-security.c -> epan/dissectors/packet-zbee-security.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "465:     zbee_security_packet    packet;",
      "466:     guint           mic_len;",
      "468:     tvbuff_t       *payload_tvb;",
      "470: #ifdef HAVE_LIBGCRYPT",
      "471:     proto_item         *ti;",
      "472:     proto_item         *key_item;",
      "473:     guint8             *enc_buffer;",
      "",
      "[Removed Lines]",
      "467:     gint            payload_len;",
      "",
      "[Added Lines]",
      "467:     gint            payload_reported_len;",
      "471:     gint               payload_captured_len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "636:     }",
      "641:         return NULL;",
      "",
      "[Removed Lines]",
      "639:     payload_len = tvb_captured_length_remaining(tvb, offset+mic_len);",
      "640:     if (payload_len == 0)",
      "",
      "[Added Lines]",
      "640:     payload_reported_len = tvb_reported_length_remaining(tvb, offset+mic_len);",
      "641:     if (payload_reported_len == 0)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "650:         (packet.level == ZBEE_SEC_MIC128)) {",
      "654:     }",
      "656: #ifdef HAVE_LIBGCRYPT",
      "660:     decrypted = FALSE;",
      "661:     if ( packet.src64 ) {",
      "",
      "[Removed Lines]",
      "653:         return tvb_new_subset_length(tvb, offset, payload_len);",
      "658:     dec_buffer = (guint8 *)g_malloc(payload_len);",
      "",
      "[Added Lines]",
      "654:         return tvb_new_subset_length(tvb, offset, payload_reported_len);",
      "659:     payload_captured_len = tvb_captured_length_remaining(tvb, offset+mic_len);",
      "662:     dec_buffer = (guint8 *)g_malloc(payload_captured_len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "666:                     case ZBEE_SEC_KEY_NWK:",
      "667:                         if ( (key_rec = nwk_hints->nwk) ) {",
      "668:                             decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
      "670:                         }",
      "671:                         break;",
      "673:                     default:",
      "674:                         if ( (key_rec = nwk_hints->link) ) {",
      "675:                             decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
      "677:                         }",
      "678:                         break;",
      "679:                 }",
      "",
      "[Removed Lines]",
      "669:                                 payload_len, mic_len, nwk_hints->nwk->key);",
      "676:                                 payload_len, mic_len, nwk_hints->link->key);",
      "",
      "[Added Lines]",
      "673:                                 payload_captured_len, mic_len, nwk_hints->nwk->key);",
      "680:                                 payload_captured_len, mic_len, nwk_hints->link->key);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "695:                     GSList_i = *nwk_keyring;",
      "696:                     while ( GSList_i && !decrypted ) {",
      "697:                         decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
      "700:                         if (decrypted) {",
      "",
      "[Removed Lines]",
      "698:                                 payload_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
      "",
      "[Added Lines]",
      "702:                                 payload_captured_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "718:                 GSList_i = zbee_pc_keyring;",
      "719:                 while ( GSList_i && !decrypted ) {",
      "720:                     decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
      "723:                     if (decrypted) {",
      "",
      "[Removed Lines]",
      "721:                             payload_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
      "",
      "[Added Lines]",
      "725:                             payload_captured_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "754:         }",
      "759:         add_new_data_source(pinfo, payload_tvb, \"Decrypted ZigBee Payload\");",
      "",
      "[Removed Lines]",
      "757:         payload_tvb = tvb_new_child_real_data(tvb, dec_buffer, payload_len, payload_len);",
      "",
      "[Added Lines]",
      "761:         payload_tvb = tvb_new_child_real_data(tvb, dec_buffer, payload_captured_len, payload_reported_len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "769:     expert_add_info(pinfo, sec_tree, &ei_zbee_sec_encrypted_payload);",
      "773:     call_dissector(data_handle, payload_tvb, pinfo, tree);",
      "",
      "[Removed Lines]",
      "771:     payload_tvb = tvb_new_subset(tvb, offset, payload_len, -1);",
      "",
      "[Added Lines]",
      "775:     payload_tvb = tvb_new_subset_length(tvb, offset, payload_reported_len);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "76d50a7f46df6cd74c38f664e778d8563e4cab68",
      "candidate_info": {
        "commit_hash": "76d50a7f46df6cd74c38f664e778d8563e4cab68",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/76d50a7f46df6cd74c38f664e778d8563e4cab68",
        "files": [
          "epan/dissectors/packet-zbee-security.c"
        ],
        "message": "Use the reported length where appropriate.\n\nUse the captured length to know how much data to decrypt.  Use the\nreported length to determine whether we have a null payload and to se\nthe reported length of the decrypted payload and of tvbuffs for the\nun-decrypted payload.\n\nBug: 11389\nChange-Id: I8670a5eb5f5a7df134c09ddb3c9dfd611ffa839e\nReviewed-on: https://code.wireshark.org/review/9956\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c"
          ],
          "candidate": [
            "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-zbee-security.c||epan/dissectors/packet-zbee-security.c": [
          "File: epan/dissectors/packet-zbee-security.c -> epan/dissectors/packet-zbee-security.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:     zbee_security_packet    packet;",
          "431:     guint           mic_len;",
          "433:     tvbuff_t       *payload_tvb;",
          "435: #ifdef HAVE_LIBGCRYPT",
          "436:     guint8             *enc_buffer;",
          "437:     guint8             *dec_buffer;",
          "438:     gboolean            decrypted;",
          "",
          "[Removed Lines]",
          "432:     gint            payload_len;",
          "",
          "[Added Lines]",
          "432:     gint            payload_reported_len;",
          "436:     gint               payload_captured_len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "603:     }",
          "608:         return NULL;",
          "",
          "[Removed Lines]",
          "606:     payload_len = tvb_captured_length_remaining(tvb, offset+mic_len);",
          "607:     if (payload_len == 0)",
          "",
          "[Added Lines]",
          "607:     payload_reported_len = tvb_reported_length_remaining(tvb, offset+mic_len);",
          "608:     if (payload_reported_len == 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "617:         (packet.level == ZBEE_SEC_MIC128)) {",
          "621:     }",
          "623: #ifdef HAVE_LIBGCRYPT",
          "627:     decrypted = FALSE;",
          "628:     if ( packet.src64 ) {",
          "",
          "[Removed Lines]",
          "620:         return tvb_new_subset(tvb, offset, payload_len, payload_len);",
          "625:     dec_buffer = (guint8 *)g_malloc(payload_len);",
          "",
          "[Added Lines]",
          "621:         return tvb_new_subset_length(tvb, offset, payload_reported_len);",
          "626:     payload_captured_len = tvb_captured_length_remaining(tvb, offset+mic_len);",
          "629:     dec_buffer = (guint8 *)g_malloc(payload_captured_len);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "633:                     case ZBEE_SEC_KEY_NWK:",
          "634:                         if ( (key_rec = nwk_hints->nwk) ) {",
          "635:                             decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
          "637:                         }",
          "638:                         break;",
          "640:                     default:",
          "641:                         if ( (key_rec = nwk_hints->link) ) {",
          "642:                             decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
          "644:                         }",
          "645:                         break;",
          "646:                 }",
          "",
          "[Removed Lines]",
          "636:                                 payload_len, mic_len, nwk_hints->nwk->key);",
          "643:                                 payload_len, mic_len, nwk_hints->link->key);",
          "",
          "[Added Lines]",
          "640:                                 payload_captured_len, mic_len, nwk_hints->nwk->key);",
          "647:                                 payload_captured_len, mic_len, nwk_hints->link->key);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "662:                     GSList_i = *nwk_keyring;",
          "663:                     while ( GSList_i && !decrypted ) {",
          "664:                         decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
          "667:                         if (decrypted) {",
          "",
          "[Removed Lines]",
          "665:                                 payload_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
          "",
          "[Added Lines]",
          "669:                                 payload_captured_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "685:                 GSList_i = zbee_pc_keyring;",
          "686:                 while ( GSList_i && !decrypted ) {",
          "687:                     decrypted = zbee_sec_decrypt_payload( &packet, enc_buffer, offset, dec_buffer,",
          "690:                     if (decrypted) {",
          "",
          "[Removed Lines]",
          "688:                             payload_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
          "",
          "[Added Lines]",
          "692:                             payload_captured_len, mic_len, ((key_record_t *)(GSList_i->data))->key);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "718:         }",
          "723:         add_new_data_source(pinfo, payload_tvb, \"Decrypted ZigBee Payload\");",
          "",
          "[Removed Lines]",
          "721:         payload_tvb = tvb_new_child_real_data(tvb, dec_buffer, payload_len, payload_len);",
          "",
          "[Added Lines]",
          "725:         payload_tvb = tvb_new_child_real_data(tvb, dec_buffer, payload_captured_len, payload_reported_len);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "733:     expert_add_info(pinfo, sec_tree, &ei_zbee_sec_encrypted_payload);",
          "737:     call_dissector(data_handle, payload_tvb, pinfo, tree);",
          "",
          "[Removed Lines]",
          "735:     payload_tvb = tvb_new_subset(tvb, offset, payload_len, -1);",
          "",
          "[Added Lines]",
          "739:     payload_tvb = tvb_new_subset_length(tvb, offset, payload_reported_len);",
          "",
          "---------------"
        ]
      }
    }
  ]
}