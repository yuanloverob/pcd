{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4b74b511131cf6703c82c25656bac7058d8ebe2f",
      "candidate_info": {
        "commit_hash": "4b74b511131cf6703c82c25656bac7058d8ebe2f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4b74b511131cf6703c82c25656bac7058d8ebe2f",
        "files": [
          "test/recipes/15-test_rsa.t"
        ],
        "message": "Don't run MSBLOB conversion tests when RSA or DSA are disabled\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2174)\n(cherry picked from commit d8594555ffaf98ada08b26ce3d1138f16bc029c5)",
        "before_after_code_files": [
          "test/recipes/15-test_rsa.t||test/recipes/15-test_rsa.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/15-test_rsa.t||test/recipes/15-test_rsa.t": [
          "File: test/recipes/15-test_rsa.t -> test/recipes/15-test_rsa.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:      subtest 'rsa conversions -- private key PKCS#8' => sub {",
          "35:   tconversion(\"rsa\", srctop_file(\"test\",\"testrsa.pem\"), \"pkey\");",
          "36:      };",
          "37:      subtest 'rsa conversions -- public key' => sub {",
          "38:   tconversion(\"msb\", srctop_file(\"test\",\"testrsapub.pem\"), \"rsa\",",
          "39:        \"-pubin\", \"-pubout\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: }",
          "39:  SKIP: {",
          "40:      skip \"Skipping msblob conversion test\", 1",
          "41:   if disabled(\"rsa\") || disabled(\"dsa\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23e6bf041bc5a5404cfa847dba1d2b2878e6f48c",
      "candidate_info": {
        "commit_hash": "23e6bf041bc5a5404cfa847dba1d2b2878e6f48c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/23e6bf041bc5a5404cfa847dba1d2b2878e6f48c",
        "files": [
          "crypto/threads_pthread.c"
        ],
        "message": "Corrections according the review comments.\n\nUpdated indentations according project rules, renamed file-local define to the shorter version - USE_RWLOCK, fixed declaration after the if statement in CRYPTO_THREAD_lock_new().\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1981)\n(cherry picked from commit ec93a2921f6128ac931466ae171fba92a0eab45d)",
        "before_after_code_files": [
          "crypto/threads_pthread.c||crypto/threads_pthread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_pthread.c||crypto/threads_pthread.c": [
          "File: crypto/threads_pthread.c -> crypto/threads_pthread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: #if defined(OPENSSL_THREADS) && !defined(CRYPTO_TDEBUG) && !defined(OPENSSL_SYS_WINDOWS)",
          "18: CRYPTO_RWLOCK *CRYPTO_THREAD_lock_new(void)",
          "19: {",
          "21:     CRYPTO_RWLOCK *lock = OPENSSL_zalloc(sizeof(pthread_rwlock_t));",
          "22:     if (lock == NULL)",
          "23:         return NULL;",
          "",
          "[Removed Lines]",
          "14: #ifdef PTHREAD_RWLOCK_INITIALIZER",
          "15:     #define OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "16: #endif",
          "20: #ifdef OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "",
          "[Added Lines]",
          "14: # ifdef PTHREAD_RWLOCK_INITIALIZER",
          "15: #  define USE_RWLOCK",
          "16: # endif",
          "20: # ifdef USE_RWLOCK",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         OPENSSL_free(lock);",
          "27:         return NULL;",
          "28:     }",
          "30:     CRYPTO_RWLOCK *lock = OPENSSL_zalloc(sizeof(pthread_mutex_t));",
          "31:     if (lock == NULL)",
          "32:         return NULL;",
          "35:     pthread_mutexattr_init(&attr);",
          "36:     pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);",
          "38:     if (pthread_mutex_init(lock, &attr) != 0) {",
          "39:         pthread_mutexattr_destroy(&attr);",
          "40:         OPENSSL_free(lock);",
          "41:         return NULL;",
          "42:     }",
          "44:     pthread_mutexattr_destroy(&attr);",
          "47:     return lock;",
          "48: }",
          "50: int CRYPTO_THREAD_read_lock(CRYPTO_RWLOCK *lock)",
          "51: {",
          "53:     if (pthread_rwlock_rdlock(lock) != 0)",
          "54:         return 0;",
          "56:     if (pthread_mutex_lock(lock) != 0)",
          "57:         return 0;",
          "60:     return 1;",
          "61: }",
          "63: int CRYPTO_THREAD_write_lock(CRYPTO_RWLOCK *lock)",
          "64: {",
          "66:     if (pthread_rwlock_wrlock(lock) != 0)",
          "67:         return 0;",
          "69:     if (pthread_mutex_lock(lock) != 0)",
          "70:         return 0;",
          "73:     return 1;",
          "74: }",
          "76: int CRYPTO_THREAD_unlock(CRYPTO_RWLOCK *lock)",
          "77: {",
          "79:     if (pthread_rwlock_unlock(lock) != 0)",
          "80:         return 0;",
          "82:     if (pthread_mutex_unlock(lock) != 0)",
          "83:         return 0;",
          "86:     return 1;",
          "87: }",
          "",
          "[Removed Lines]",
          "29: #else",
          "34:     pthread_mutexattr_t attr;",
          "45: #endif",
          "52: #ifdef OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "55: #else",
          "58: #endif",
          "65: #ifdef OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "68: #else",
          "71: #endif",
          "78: #ifdef OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "81: #else",
          "84: #endif",
          "",
          "[Added Lines]",
          "29: # else",
          "30:     pthread_mutexattr_t attr;",
          "46: # endif",
          "53: # ifdef USE_RWLOCK",
          "56: # else",
          "59: # endif",
          "66: # ifdef USE_RWLOCK",
          "69: # else",
          "72: # endif",
          "79: # ifdef USE_RWLOCK",
          "82: # else",
          "85: # endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:     if (lock == NULL)",
          "92:         return;",
          "95:     pthread_rwlock_destroy(lock);",
          "97:     pthread_mutex_destroy(lock);",
          "99:     OPENSSL_free(lock);",
          "101:     return;",
          "",
          "[Removed Lines]",
          "94: #ifdef OPENSSL_THREADS_HAVE_PTHREAD_RWLOCK",
          "96: #else",
          "98: #endif",
          "",
          "[Added Lines]",
          "95: # ifdef USE_RWLOCK",
          "97: # else",
          "99: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53c6cbf6e9a6e4fe2433a89bf3c970355dd1e29a",
      "candidate_info": {
        "commit_hash": "53c6cbf6e9a6e4fe2433a89bf3c970355dd1e29a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/53c6cbf6e9a6e4fe2433a89bf3c970355dd1e29a",
        "files": [
          "crypto/aes/asm/aesp8-ppc.pl"
        ],
        "message": "aes/asm/aesp8-ppc.pl: improve [backward] portability.\n\nSome of stone-age assembler can't cope with r0 in address. It's actually\nsensible thing to do, because r0 is shunted to 0 in address arithmetic\nand by refusing r0 assembler effectively makes you understand that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit a54aba531327285f64cf13a909bc129e9f9d5970)",
        "before_after_code_files": [
          "crypto/aes/asm/aesp8-ppc.pl||crypto/aes/asm/aesp8-ppc.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesp8-ppc.pl||crypto/aes/asm/aesp8-ppc.pl": [
          "File: crypto/aes/asm/aesp8-ppc.pl -> crypto/aes/asm/aesp8-ppc.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "3011:   vxor  $twk0,$twk0,v31",
          "3013:  vcipher  $out0,$out0,v26",
          "3015:  vcipher  $out1,$out1,v26",
          "3016:  vcipher  $out2,$out2,v26",
          "3017:  vcipher  $out3,$out3,v26",
          "",
          "[Removed Lines]",
          "3014:  lvsr  $inpperm,r0,$taillen # $in5 is no more",
          "",
          "[Added Lines]",
          "3014:  lvsr  $inpperm,0,$taillen # $in5 is no more",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6af62ee9af06d057f03ec2abc8b9dfd4ac11b16f",
      "candidate_info": {
        "commit_hash": "6af62ee9af06d057f03ec2abc8b9dfd4ac11b16f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6af62ee9af06d057f03ec2abc8b9dfd4ac11b16f",
        "files": [
          "crypto/evp/e_aes.c"
        ],
        "message": "Properly handle a partial block in OCB mode\n\nIf we have previously been passed a partial block in an \"Update\" call then\nmake sure we properly increment the output buffer when we use it.\n\nFixes #2273\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit 7c12c7b61c5b37c9dff930ccc68421fb7de00271)",
        "before_after_code_files": [
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2587:             }",
          "2588:             written_len = AES_BLOCK_SIZE;",
          "2590:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2590:             if (out != NULL)",
          "2591:                 out += AES_BLOCK_SIZE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e15c45fb22eca69d0faffb91d4c501e11837d376",
      "candidate_info": {
        "commit_hash": "e15c45fb22eca69d0faffb91d4c501e11837d376",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e15c45fb22eca69d0faffb91d4c501e11837d376",
        "files": [
          "engines/afalg/e_afalg.c"
        ],
        "message": "Fix a missing function prototype in AFALG engine\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit a1fd1fb241069cc987d0d2cf13880bd16cada3c9)",
        "before_after_code_files": [
          "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c": [
          "File: engines/afalg/e_afalg.c -> engines/afalg/e_afalg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     !defined(AF_ALG)",
          "29: # warning \"AFALG ENGINE requires Kernel Headers >= 4.1.0\"",
          "30: # warning \"Skipping Compilation of AFALG engine\"",
          "31: void engine_load_afalg_int(void)",
          "32: {",
          "33: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: void engine_load_afalg_int(void);",
          "",
          "---------------"
        ]
      }
    }
  ]
}