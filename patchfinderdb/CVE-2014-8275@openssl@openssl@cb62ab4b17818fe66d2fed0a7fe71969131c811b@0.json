{
  "cve_id": "CVE-2014-8275",
  "cve_desc": "OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k does not enforce certain constraints on certificate data, which allows remote attackers to defeat a fingerprint-based certificate-blacklist protection mechanism by including crafted data within a certificate's unsigned portion, related to crypto/asn1/a_verify.c, crypto/dsa/dsa_asn1.c, crypto/ecdsa/ecs_vrf.c, and crypto/x509/x_all.c.",
  "repo": "openssl/openssl",
  "patch_hash": "cb62ab4b17818fe66d2fed0a7fe71969131c811b",
  "patch_info": {
    "commit_hash": "cb62ab4b17818fe66d2fed0a7fe71969131c811b",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/cb62ab4b17818fe66d2fed0a7fe71969131c811b",
    "files": [
      "crypto/asn1/a_verify.c"
    ],
    "message": "use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>",
    "before_after_code_files": [
      "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
    ]
  },
  "patch_diff": {
    "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
      "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "159:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
      "160:   {",
      "162:   return -1;",
      "163:   }",
      "",
      "[Removed Lines]",
      "161:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
      "",
      "[Added Lines]",
      "161:   ASN1err(ASN1_F_ASN1_ITEM_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "178c562a4621162dbe19a7c34fa2ad558684f40e",
      "candidate_info": {
        "commit_hash": "178c562a4621162dbe19a7c34fa2ad558684f40e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/178c562a4621162dbe19a7c34fa2ad558684f40e",
        "files": [
          "crypto/asn1/a_verify.c"
        ],
        "message": "use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit cb62ab4b17818fe66d2fed0a7fe71969131c811b)",
        "before_after_code_files": [
          "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ],
          "candidate": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
          "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "156:   {",
          "158:   return -1;",
          "159:   }",
          "",
          "[Removed Lines]",
          "157:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "[Added Lines]",
          "157:   ASN1err(ASN1_F_ASN1_ITEM_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f028e4a788b9531bbfc66a3bf2b9cba36a167eb",
      "candidate_info": {
        "commit_hash": "9f028e4a788b9531bbfc66a3bf2b9cba36a167eb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9f028e4a788b9531bbfc66a3bf2b9cba36a167eb",
        "files": [
          "crypto/asn1/a_verify.c"
        ],
        "message": "use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit cb62ab4b17818fe66d2fed0a7fe71969131c811b)",
        "before_after_code_files": [
          "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ],
          "candidate": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
          "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "152:   {",
          "154:   return -1;",
          "155:   }",
          "",
          "[Removed Lines]",
          "153:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "[Added Lines]",
          "153:   ASN1err(ASN1_F_ASN1_ITEM_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7c2a56a1b3bf481b2c6b91906477b53fe118702",
      "candidate_info": {
        "commit_hash": "c7c2a56a1b3bf481b2c6b91906477b53fe118702",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c7c2a56a1b3bf481b2c6b91906477b53fe118702",
        "files": [
          "crypto/asn1/a_verify.c"
        ],
        "message": "use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit cb62ab4b17818fe66d2fed0a7fe71969131c811b)",
        "before_after_code_files": [
          "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ],
          "candidate": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
          "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "156:   {",
          "158:   return -1;",
          "159:   }",
          "",
          "[Removed Lines]",
          "157:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "[Added Lines]",
          "157:   ASN1err(ASN1_F_ASN1_ITEM_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11f719da38c5e9aa509aa518d11f71355cca7cd1",
      "candidate_info": {
        "commit_hash": "11f719da38c5e9aa509aa518d11f71355cca7cd1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/11f719da38c5e9aa509aa518d11f71355cca7cd1",
        "files": [
          "crypto/asn1/a_verify.c"
        ],
        "message": "use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit cb62ab4b17818fe66d2fed0a7fe71969131c811b)",
        "before_after_code_files": [
          "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ],
          "candidate": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
          "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "154:   {",
          "156:   return -1;",
          "157:   }",
          "",
          "[Removed Lines]",
          "155:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "[Added Lines]",
          "155:   ASN1err(ASN1_F_ASN1_ITEM_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "684400ce192dac51df3d3e92b61830a6ef90be3e",
      "candidate_info": {
        "commit_hash": "684400ce192dac51df3d3e92b61830a6ef90be3e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/684400ce192dac51df3d3e92b61830a6ef90be3e",
        "files": [
          "CHANGES",
          "crypto/asn1/a_verify.c",
          "crypto/dsa/dsa_asn1.c",
          "crypto/ecdsa/ecs_vrf.c",
          "crypto/x509/x_all.c"
        ],
        "message": "Fix various certificate fingerprint issues.\n\nBy using non-DER or invalid encodings outside the signed portion of a\ncertificate the fingerprint can be changed without breaking the signature.\nAlthough no details of the signed portion of the certificate can be changed\nthis can cause problems with some applications: e.g. those using the\ncertificate fingerprint for blacklists.\n\n1. Reject signatures with non zero unused bits.\n\nIf the BIT STRING containing the signature has non zero unused bits reject\nthe signature. All current signature algorithms require zero unused bits.\n\n2. Check certificate algorithm consistency.\n\nCheck the AlgorithmIdentifier inside TBS matches the one in the\ncertificate signature. NB: this will result in signature failure\nerrors for some broken certificates.\n\n3. Check DSA/ECDSA signatures use DER.\n\nReencode DSA/ECDSA signatures and compare with the original received\nsignature. Return an error if there is a mismatch.\n\nThis will reject various cases including garbage after signature\n(thanks to Antti Karjalainen and Tuomo Untinen from the Codenomicon CROSS\nprogram for discovering this case) and use of BER or invalid ASN.1 INTEGERs\n(negative or with leading zeroes).\n\nCVE-2014-8275\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c",
          "crypto/dsa/dsa_asn1.c||crypto/dsa/dsa_asn1.c",
          "crypto/ecdsa/ecs_vrf.c||crypto/ecdsa/ecs_vrf.c",
          "crypto/x509/x_all.c||crypto/x509/x_all.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ],
          "candidate": [
            "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_verify.c||crypto/asn1/a_verify.c": [
          "File: crypto/asn1/a_verify.c -> crypto/asn1/a_verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:   ASN1err(ASN1_F_ASN1_VERIFY,ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM);",
          "91:   goto err;",
          "92:   }",
          "94:  inl=i2d(data,NULL);",
          "95:  buf_in=OPENSSL_malloc((unsigned int)inl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "95:   {",
          "96:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "97:   goto err;",
          "98:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:   return -1;",
          "151:   }",
          "153:  EVP_MD_CTX_init(&ctx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:  if (signature->type == V_ASN1_BIT_STRING && signature->flags & 0x7)",
          "160:   {",
          "161:   ASN1err(ASN1_F_ASN1_VERIFY, ASN1_R_INVALID_BIT_STRING_BITS_LEFT);",
          "162:   return -1;",
          "163:   }",
          "",
          "---------------"
        ],
        "crypto/dsa/dsa_asn1.c||crypto/dsa/dsa_asn1.c": [
          "File: crypto/dsa/dsa_asn1.c -> crypto/dsa/dsa_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:       const unsigned char *sigbuf, int siglen, DSA *dsa)",
          "178:  {",
          "179:  DSA_SIG *s;",
          "180:  int ret=-1;",
          "182:  s = DSA_SIG_new();",
          "183:  if (s == NULL) return(ret);",
          "185:  ret=DSA_do_verify(dgst,dgst_len,s,dsa);",
          "186: err:",
          "187:  DSA_SIG_free(s);",
          "188:  return(ret);",
          "189:  }",
          "",
          "[Removed Lines]",
          "184:  if (d2i_DSA_SIG(&s,&sigbuf,siglen) == NULL) goto err;",
          "",
          "[Added Lines]",
          "180:  const unsigned char *p = sigbuf;",
          "181:  unsigned char *der = NULL;",
          "182:  int derlen = -1;",
          "187:  if (d2i_DSA_SIG(&s,&p,siglen) == NULL) goto err;",
          "189:  derlen = i2d_DSA_SIG(s, &der);",
          "190:  if (derlen != siglen || memcmp(sigbuf, der, derlen))",
          "191:   goto err;",
          "194:  if (derlen > 0)",
          "195:   {",
          "196:   OPENSSL_cleanse(der, derlen);",
          "197:   OPENSSL_free(der);",
          "198:   }",
          "",
          "---------------"
        ],
        "crypto/ecdsa/ecs_vrf.c||crypto/ecdsa/ecs_vrf.c": [
          "File: crypto/ecdsa/ecs_vrf.c -> crypto/ecdsa/ecs_vrf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: #include \"ecs_locl.h\"",
          "60: #ifndef OPENSSL_NO_ENGINE",
          "61: #include <openssl/engine.h>",
          "62: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: #include \"cryptlib.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:   const unsigned char *sigbuf, int sig_len, EC_KEY *eckey)",
          "87:   {",
          "88:  ECDSA_SIG *s;",
          "89:  int ret=-1;",
          "91:  s = ECDSA_SIG_new();",
          "92:  if (s == NULL) return(ret);",
          "94:  ret=ECDSA_do_verify(dgst, dgst_len, s, eckey);",
          "95: err:",
          "96:  ECDSA_SIG_free(s);",
          "97:  return(ret);",
          "98:  }",
          "",
          "[Removed Lines]",
          "93:  if (d2i_ECDSA_SIG(&s, &sigbuf, sig_len) == NULL) goto err;",
          "",
          "[Added Lines]",
          "90:  const unsigned char *p = sigbuf;",
          "91:  unsigned char *der = NULL;",
          "92:  int derlen = -1;",
          "97:  if (d2i_ECDSA_SIG(&s, &p, sig_len) == NULL) goto err;",
          "99:  derlen = i2d_ECDSA_SIG(s, &der);",
          "100:  if (derlen != sig_len || memcmp(sigbuf, der, derlen))",
          "101:   goto err;",
          "104:  if (derlen > 0)",
          "105:   {",
          "106:   OPENSSL_cleanse(der, derlen);",
          "107:   OPENSSL_free(der);",
          "108:   }",
          "",
          "---------------"
        ],
        "crypto/x509/x_all.c||crypto/x509/x_all.c": [
          "File: crypto/x509/x_all.c -> crypto/x509/x_all.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: int X509_verify(X509 *a, EVP_PKEY *r)",
          "75:  {",
          "76:  return(ASN1_item_verify(ASN1_ITEM_rptr(X509_CINF),a->sig_alg,",
          "77:   a->signature,a->cert_info,r));",
          "78:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:  if (X509_ALGOR_cmp(a->sig_alg, a->cert_info->signature))",
          "77:   return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}