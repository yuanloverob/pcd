{
  "cve_id": "CVE-2020-19488",
  "cve_desc": "An issue was discovered in box_code_apple.c:119 in Gpac MP4Box 0.8.0, allows attackers to cause a Denial of Service due to an invalid read on function ilst_item_Read.",
  "repo": "gpac/gpac",
  "patch_hash": "6170024568f4dda310e98ef7508477b425c58d09",
  "patch_info": {
    "commit_hash": "6170024568f4dda310e98ef7508477b425c58d09",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/6170024568f4dda310e98ef7508477b425c58d09",
    "files": [
      "src/isomedia/box_code_apple.c"
    ],
    "message": "fixed potential crash - cf #1263",
    "before_after_code_files": [
      "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c": [
      "File: src/isomedia/box_code_apple.c -> src/isomedia/box_code_apple.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "112:  if (sub_type == GF_ISOM_BOX_TYPE_DATA ) {",
      "113:   e = gf_isom_box_parse(&a, bs);",
      "116:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\",
      "117:    e = GF_ISOM_INVALID_FILE;",
      "118:   }",
      "",
      "[Removed Lines]",
      "115:   if (!e && ptr->size < a->size) {",
      "",
      "[Added Lines]",
      "115:   if (!e && a && (ptr->size < a->size)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "120:    if (a) gf_isom_box_del(a);",
      "121:    return e;",
      "122:   }",
      "124:   ISOM_DECREASE_SIZE(ptr, a->size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123:   if (!a) return GF_NON_COMPLIANT_BITSTREAM;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "86d072b6a13baa1a4a90168098a0f8354c24d8cf",
      "candidate_info": {
        "commit_hash": "86d072b6a13baa1a4a90168098a0f8354c24d8cf",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/86d072b6a13baa1a4a90168098a0f8354c24d8cf",
        "files": [
          "src/isomedia/avc_ext.c",
          "src/isomedia/box_code_apple.c",
          "src/isomedia/box_code_base.c",
          "src/isomedia/box_code_meta.c"
        ],
        "message": "fix some memory issues",
        "before_after_code_files": [
          "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c",
          "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c",
          "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c",
          "src/isomedia/box_code_meta.c||src/isomedia/box_code_meta.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c"
          ],
          "candidate": [
            "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c"
          ]
        }
      },
      "candidate_diff": {
        "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c": [
          "File: src/isomedia/avc_ext.c -> src/isomedia/avc_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1780:    }",
          "1781:    gf_list_del(ar->nalus);",
          "1782:    gf_free(ar);",
          "1783:    gf_list_rem(cfg->param_array, i);",
          "1784:    i--;",
          "1785:   }",
          "1787:    array_incomplete = 1;",
          "1788:  }",
          "1789:  return array_incomplete;",
          "",
          "[Removed Lines]",
          "1786:   if (!ar->array_completeness)",
          "",
          "[Added Lines]",
          "1783:    ar=NULL;",
          "1787:   if (ar && !ar->array_completeness)",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_apple.c||src/isomedia/box_code_apple.c": [
          "File: src/isomedia/box_code_apple.c -> src/isomedia/box_code_apple.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:   sub_type = gf_bs_peek_bits(bs, 32, 0);",
          "46:   if (sub_type) {",
          "47:    e = gf_isom_box_parse_ex(&a, bs, s->type, GF_FALSE);",
          "49:    ISOM_DECREASE_SIZE(ptr, a->size);",
          "50:    gf_list_add(ptr->other_boxes, a);",
          "51:   } else {",
          "",
          "[Removed Lines]",
          "48:    if (e) return e;",
          "",
          "[Added Lines]",
          "50:    if (!e && ptr->size < a->size) {",
          "51:     GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\",
          "52:     e = GF_ISOM_INVALID_FILE;",
          "53:    }",
          "54:    if (e) {",
          "55:     if (a) gf_isom_box_del(a);",
          "56:     return e;",
          "57:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:  u32 sub_type;",
          "102:  GF_Box *a = NULL;",
          "103:  GF_ListItemBox *ptr = (GF_ListItemBox *)s;",
          "106:  sub_type = gf_bs_peek_bits(bs, 32, 4);",
          "107:  if (sub_type == GF_ISOM_BOX_TYPE_DATA ) {",
          "108:   e = gf_isom_box_parse(&a, bs);",
          "110:   ISOM_DECREASE_SIZE(ptr, a->size);",
          "112:   if (a && ptr->data) gf_isom_box_del((GF_Box *) ptr->data);",
          "114:  }",
          "116:  else {",
          "",
          "[Removed Lines]",
          "109:   if (e) return e;",
          "113:   ptr->data = (GF_DataBox *)a;",
          "",
          "[Added Lines]",
          "119:   if (!e && ptr->size < a->size) {",
          "120:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\",
          "121:    e = GF_ISOM_INVALID_FILE;",
          "122:   }",
          "123:   if (e) {",
          "124:    if (a) gf_isom_box_del(a);",
          "125:    return e;",
          "126:   }",
          "133:   if (a && a->size > 4 && a->type != GF_ISOM_BOX_TYPE_VOID)",
          "134:    ptr->data = (GF_DataBox *)a;",
          "135:   else {",
          "136:    ptr->data = NULL;",
          "137:    gf_isom_box_del(a);",
          "138:   }",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c": [
          "File: src/isomedia/box_code_base.c -> src/isomedia/box_code_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3940:                 ptr->is_qtff = 2;",
          "3941:                 return gf_isom_box_add_default(s, a);",
          "3942:             }",
          "3943:   }",
          "3944:    ptr->is_qtff &= ~(1<<16);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3943:             gf_isom_box_del(a);",
          "3944:             return GF_ISOM_INVALID_MEDIA;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5819:   if (def->dataSize < 8) {",
          "5820:    gf_isom_box_del(a);",
          "5822:   }",
          "5823:   return gf_isom_box_add_default((GF_Box*)ptr, a);",
          "",
          "[Removed Lines]",
          "5821:    return GF_OK;",
          "",
          "[Added Lines]",
          "5824:    return GF_ISOM_INVALID_MEDIA;",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_meta.c||src/isomedia/box_code_meta.c": [
          "File: src/isomedia/box_code_meta.c -> src/isomedia/box_code_meta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: void meta_reset(GF_Box *s)",
          "39: {",
          "40:  GF_MetaBox *ptr = (GF_MetaBox *)s;",
          "41:  if (ptr == NULL) return;",
          "44:  ptr->handler = NULL;",
          "46:  ptr->primary_resource = NULL;",
          "48:  ptr->file_locations = NULL;",
          "50:  ptr->item_locations = NULL;",
          "52:  ptr->protections = NULL;",
          "54:  ptr->item_infos = NULL;",
          "56:  ptr->IPMP_control = NULL;",
          "58:  ptr->item_refs = NULL;",
          "60:  ptr->item_props = NULL;",
          "61:  if (ptr->other_boxes) gf_isom_box_array_del(ptr->other_boxes);",
          "62:  ptr->other_boxes = NULL;",
          "63: }",
          "",
          "[Removed Lines]",
          "43:  gf_isom_box_del((GF_Box *)ptr->handler);",
          "45:  if (ptr->primary_resource) gf_isom_box_del((GF_Box *)ptr->primary_resource);",
          "47:  if (ptr->file_locations) gf_isom_box_del((GF_Box *)ptr->file_locations);",
          "49:  if (ptr->item_locations) gf_isom_box_del((GF_Box *)ptr->item_locations);",
          "51:  if (ptr->protections) gf_isom_box_del((GF_Box *)ptr->protections);",
          "53:  if (ptr->item_infos) gf_isom_box_del((GF_Box *)ptr->item_infos);",
          "55:  if (ptr->IPMP_control) gf_isom_box_del((GF_Box *)ptr->IPMP_control);",
          "57:  if (ptr->item_refs) gf_isom_box_del((GF_Box *)ptr->item_refs);",
          "59:  if (ptr->item_props) gf_isom_box_del((GF_Box *)ptr->item_props);",
          "",
          "[Added Lines]",
          "40:  extern Bool use_dump_mode;",
          "45:  if (!use_dump_mode) {",
          "46:   gf_isom_box_del((GF_Box *)ptr->handler);",
          "47:   if (ptr->primary_resource) gf_isom_box_del((GF_Box *)ptr->primary_resource);",
          "48:   if (ptr->file_locations) gf_isom_box_del((GF_Box *)ptr->file_locations);",
          "49:   if (ptr->item_locations) gf_isom_box_del((GF_Box *)ptr->item_locations);",
          "50:   if (ptr->protections) gf_isom_box_del((GF_Box *)ptr->protections);",
          "51:   if (ptr->item_infos) gf_isom_box_del((GF_Box *)ptr->item_infos);",
          "52:   if (ptr->IPMP_control) gf_isom_box_del((GF_Box *)ptr->IPMP_control);",
          "53:   if (ptr->item_refs) gf_isom_box_del((GF_Box *)ptr->item_refs);",
          "54:   if (ptr->item_props) gf_isom_box_del((GF_Box *)ptr->item_props);",
          "55:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}