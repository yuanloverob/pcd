{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae09320223cf9954d99d3ed8e040fc980510c668",
      "candidate_info": {
        "commit_hash": "ae09320223cf9954d99d3ed8e040fc980510c668",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ae09320223cf9954d99d3ed8e040fc980510c668",
        "files": [
          "arch/ARM/ARMMappingInsnOp.inc"
        ],
        "message": "arm: fix issue #767",
        "before_after_code_files": [
          "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc": [
          "File: arch/ARM/ARMMappingInsnOp.inc -> arch/ARM/ARMMappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5564:  { CS_AC_READ, CS_AC_WRITE, 0 }",
          "5565: },",
          "5568: },",
          "5570:  { CS_AC_WRITE, 0 }",
          "",
          "[Removed Lines]",
          "5567:  { CS_AC_WRITE, CS_AC_WRITE, 0 }",
          "",
          "[Added Lines]",
          "5567:  { CS_AC_READ | CS_AC_WRITE, CS_AC_WRITE, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "90bd23027452830366245564b4c5032f65a1f450",
      "candidate_info": {
        "commit_hash": "90bd23027452830366245564b4c5032f65a1f450",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/90bd23027452830366245564b4c5032f65a1f450",
        "files": [
          "bindings/python/BUILDING.txt",
          "bindings/python/MANIFEST.in",
          "bindings/python/PKG-INFO.src",
          "bindings/python/PKG-INFO.win",
          "bindings/python/README.TXT",
          "bindings/python/README.pypi-src",
          "bindings/python/README.pypi-win",
          "bindings/python/README.txt",
          "bindings/python/prebuilt/win32/.gitignore",
          "bindings/python/prebuilt/win64/.gitignore",
          "bindings/python/setup.py"
        ],
        "message": "Python: Clean up the capstone-windows stuff with extreme prejudice",
        "before_after_code_files": [
          "bindings/python/MANIFEST.in||bindings/python/MANIFEST.in",
          "bindings/python/PKG-INFO.src||bindings/python/PKG-INFO.src",
          "bindings/python/PKG-INFO.win||bindings/python/PKG-INFO.win",
          "bindings/python/README.pypi-src||bindings/python/README.pypi-src",
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/MANIFEST.in||bindings/python/MANIFEST.in": [
          "File: bindings/python/MANIFEST.in -> bindings/python/MANIFEST.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: recursive-include src *",
          "2: include LICENSE.TXT",
          "",
          "[Removed Lines]",
          "3: include README",
          "",
          "[Added Lines]",
          "3: include README.txt",
          "4: include BUILDING.txt",
          "5: include Makefile",
          "",
          "---------------"
        ],
        "bindings/python/PKG-INFO.src||bindings/python/PKG-INFO.src": [
          "File: bindings/python/PKG-INFO.src -> bindings/python/PKG-INFO.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/python/PKG-INFO.win||bindings/python/PKG-INFO.win": [
          "File: bindings/python/PKG-INFO.win -> bindings/python/PKG-INFO.win",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/python/README.pypi-src||bindings/python/README.pypi-src": [
          "File: bindings/python/README.pypi-src -> bindings/python/README.pypi-src",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:     print \"Proper 'develop' support unavailable.\"",
          "158: if 'bdist_wheel' in sys.argv and '--plat-name' not in sys.argv:",
          "160:     name = get_platform()",
          "161:     if 'linux' in name:",
          "162:         # linux_* platform tags are disallowed because the python ecosystem is fubar",
          "163:         # linux builds should be built in the centos 5 vm for maximum compatibility",
          "164:         # see https://github.com/pypa/manylinux",
          "165:         # see also https://github.com/angr/angr-dev/blob/master/bdist.sh",
          "167:     else:",
          "168:         # https://www.python.org/dev/peps/pep-0425/",
          "171: setup(",
          "172:     provides=['capstone'],",
          "",
          "[Removed Lines]",
          "159:     sys.argv.append('--plat-name')",
          "166:         sys.argv.append('manylinux1_' + platform.machine())",
          "169:         sys.argv.append(name.replace('.', '_').replace('-', '_'))",
          "",
          "[Added Lines]",
          "159:     idx = sys.argv.index('bdist_wheel') + 1",
          "160:     sys.argv.insert(idx, '--plat-name')",
          "167:         sys.argv.insert(idx + 1, 'manylinux1_' + platform.machine())",
          "170:         sys.argv.insert(idx + 1, name.replace('.', '_').replace('-', '_'))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8ad69ab79a7db264463ccb4ddaa445be8f60092",
      "candidate_info": {
        "commit_hash": "a8ad69ab79a7db264463ccb4ddaa445be8f60092",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a8ad69ab79a7db264463ccb4ddaa445be8f60092",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "x86: LES is invalid in x64. see #904",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:   result = (!translateInstruction(instr, &insn)) ?  true : false;",
          "837:   if (result) {",
          "838:    instr->imm_size = insn.immSize;",
          "839:    if (handle->detail) {",
          "840:     update_pub_insn(instr->flat_insn, &insn, instr->x86_prefix);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:    if (handle->mode & CS_MODE_64 &&",
          "840:     (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm))",
          "842:     return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e965a58ef404434cb09a6c1d208d5cc767f53276",
      "candidate_info": {
        "commit_hash": "e965a58ef404434cb09a6c1d208d5cc767f53276",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e965a58ef404434cb09a6c1d208d5cc767f53276",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: align assembly output",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   for (i = 0; i < count; i++) {",
          "356:    int j;",
          "359:    for (j = 0; j < insn[i].size; j++) {",
          "360:     if (j > 0)",
          "361:      putchar(' ');",
          "",
          "[Removed Lines]",
          "358:    printf(\"%\"PRIx64\"  \", insn[i].address);",
          "",
          "[Added Lines]",
          "358:    printf(\"%2\"PRIx64\"  \", insn[i].address);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "366:    if (arch == CS_ARCH_X86) {",
          "367:     for (; j < 16; j++) {",
          "369:     }",
          "370:    }",
          "",
          "[Removed Lines]",
          "368:      printf(\"  \");",
          "",
          "[Added Lines]",
          "368:      printf(\"   \");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f062e77c2dbc3b796c4c5a7aa23a7dc7db6b24f",
      "candidate_info": {
        "commit_hash": "9f062e77c2dbc3b796c4c5a7aa23a7dc7db6b24f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9f062e77c2dbc3b796c4c5a7aa23a7dc7db6b24f",
        "files": [
          "arch/M68K/M68KDisassembler.c"
        ],
        "message": "m68k: fixed d68000_move_to_sr\n\n * instruction is available for all processors, not 68010+ (see e.g.\n   https://www.nxp.com/files/archives/doc/ref_manual/M68000PRM.pdf, p. 6-19)\n * operand size is WORD not BYTE",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2523: {",
          "2524:  cs_m68k_op* op0;",
          "2525:  cs_m68k_op* op1;",
          "2532:  op0 = &ext->operands[0];",
          "2533:  op1 = &ext->operands[1];",
          "2537:  op1->address_mode = M68K_AM_NONE;",
          "2538:  op1->reg = M68K_REG_SR;",
          "",
          "[Removed Lines]",
          "2526:  cs_m68k* ext;",
          "2528:  LIMIT_CPU_TYPES(info, M68010_PLUS);",
          "2530:  ext = build_init_op(info, M68K_INS_MOVE, 2, 2);",
          "2535:  get_ea_mode_op(info, op0, info->ir, 1);",
          "",
          "[Added Lines]",
          "2526:  cs_m68k* ext = build_init_op(info, M68K_INS_MOVE, 2, 2);",
          "2531:  get_ea_mode_op(info, op0, info->ir, 2);",
          "",
          "---------------"
        ]
      }
    }
  ]
}