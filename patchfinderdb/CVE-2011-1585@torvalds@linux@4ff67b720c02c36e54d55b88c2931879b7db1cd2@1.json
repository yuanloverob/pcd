{
  "cve_id": "CVE-2011-1585",
  "cve_desc": "The cifs_find_smb_ses function in fs/cifs/connect.c in the Linux kernel before 2.6.36 does not properly determine the associations between users and sessions, which allows local users to bypass CIFS share authentication by leveraging a mount of a share by a different user.",
  "repo": "torvalds/linux",
  "patch_hash": "4ff67b720c02c36e54d55b88c2931879b7db1cd2",
  "patch_info": {
    "commit_hash": "4ff67b720c02c36e54d55b88c2931879b7db1cd2",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/4ff67b720c02c36e54d55b88c2931879b7db1cd2",
    "files": [
      "fs/cifs/cifsglob.h",
      "fs/cifs/connect.c"
    ],
    "message": "cifs: clean up cifs_find_smb_ses (try #2)\n\nThis patch replaces the earlier patch by the same name. The only\ndifference is that MAX_PASSWORD_SIZE has been increased to attempt to\nmatch the limits that windows enforces.\n\nDo a better job of matching sessions by authtype. Matching by username\nfor a Kerberos session is incorrect, and anonymous sessions need special\nhandling.\n\nAlso, in the case where we do match by username, we also need to match\nby password. That ensures that someone else doesn't \"borrow\" an existing\nsession without needing to know the password.\n\nFinally, passwords can be longer than 16 bytes. Bump MAX_PASSWORD_SIZE\nto 512 to match the size that the userspace mount helper allows.\n\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>",
    "before_after_code_files": [
      "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h",
      "fs/cifs/connect.c||fs/cifs/connect.c"
    ]
  },
  "patch_diff": {
    "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h": [
      "File: fs/cifs/cifsglob.h -> fs/cifs/cifsglob.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "38: #define MAX_USERNAME_SIZE 32 /* 32 is to allow for 15 char names + null",
      "42: #define CIFS_MIN_RCV_POOL 4",
      "",
      "[Removed Lines]",
      "40: #define MAX_PASSWORD_SIZE 16",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/cifs/connect.c||fs/cifs/connect.c": [
      "File: fs/cifs/connect.c -> fs/cifs/connect.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1644: }",
      "1646: static struct cifsSesInfo *",
      "1648: {",
      "1650:  struct cifsSesInfo *ses;",
      "1652:  write_lock(&cifs_tcp_ses_lock);",
      "1658:   ++ses->ses_count;",
      "1659:   write_unlock(&cifs_tcp_ses_lock);",
      "1660:   return ses;",
      "",
      "[Removed Lines]",
      "1647: cifs_find_smb_ses(struct TCP_Server_Info *server, char *username)",
      "1649:  struct list_head *tmp;",
      "1653:  list_for_each(tmp, &server->smb_ses_list) {",
      "1654:   ses = list_entry(tmp, struct cifsSesInfo, smb_ses_list);",
      "1655:   if (strncmp(ses->userName, username, MAX_USERNAME_SIZE))",
      "1656:    continue;",
      "",
      "[Added Lines]",
      "1647: cifs_find_smb_ses(struct TCP_Server_Info *server, struct smb_vol *vol)",
      "1652:  list_for_each_entry(ses, &server->smb_ses_list, smb_ses_list) {",
      "1653:   switch (server->secType) {",
      "1654:   case Kerberos:",
      "1655:    if (vol->linux_uid != ses->linux_uid)",
      "1656:     continue;",
      "1657:    break;",
      "1658:   default:",
      "1660:    if (strncmp(ses->userName, vol->username,",
      "1661:         MAX_USERNAME_SIZE))",
      "1662:     continue;",
      "1663:    if (strlen(vol->username) != 0 &&",
      "1664:        strncmp(ses->password, vol->password,",
      "1665:         MAX_PASSWORD_SIZE))",
      "1666:     continue;",
      "1667:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1697:  xid = GetXid();",
      "1700:  if (ses) {",
      "1701:   cFYI(1, \"Existing smb sess found (status=%d)\", ses->status);",
      "",
      "[Removed Lines]",
      "1699:  ses = cifs_find_smb_ses(server, volume_info->username);",
      "",
      "[Added Lines]",
      "1709:  ses = cifs_find_smb_ses(server, volume_info);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3e4b3e1f68c10510ec8d3076cffc5729b88f8de6",
      "candidate_info": {
        "commit_hash": "3e4b3e1f68c10510ec8d3076cffc5729b88f8de6",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3e4b3e1f68c10510ec8d3076cffc5729b88f8de6",
        "files": [
          "fs/cifs/cifs_spnego.c",
          "fs/cifs/cifsglob.h",
          "fs/cifs/connect.c"
        ],
        "message": "cifs: add separate cred_uid field to sesInfo\n\nRight now, there's no clear separation between the uid that owns the\ncredentials used to do the mount and the overriding owner of the files\non that mount.\n\nAdd a separate cred_uid field that is set to the real uid\nof the mount user. Unlike the linux_uid, the uid= option does not\noverride this parameter. The parm is sent to cifs.upcall, which can then\npreferentially use the creduid= parm instead of the uid= parm for\nfinding credentials.\n\nThis is not the only way to solve this. We could try to do all of this\nin kernel instead by having a module parameter that affects what gets\npassed in the uid= field of the upcall. That said, we have a lot more\nflexibility to change things in userspace so I think it probably makes\nsense to do it this way.\n\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>",
        "before_after_code_files": [
          "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c",
          "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h",
          "fs/cifs/connect.c||fs/cifs/connect.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h",
            "fs/cifs/connect.c||fs/cifs/connect.c"
          ],
          "candidate": [
            "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h",
            "fs/cifs/connect.c||fs/cifs/connect.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c": [
          "File: fs/cifs/cifs_spnego.c -> fs/cifs/cifs_spnego.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:  dp = description + strlen(description);",
          "144:  sprintf(dp, \";uid=0x%x\", sesInfo->linux_uid);",
          "146:  dp = description + strlen(description);",
          "147:  sprintf(dp, \";user=%s\", sesInfo->userName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:  dp = description + strlen(description);",
          "147:  sprintf(dp, \";creduid=0x%x\", sesInfo->cred_uid);",
          "",
          "---------------"
        ],
        "fs/cifs/cifsglob.h||fs/cifs/cifsglob.h": [
          "File: fs/cifs/cifsglob.h -> fs/cifs/cifsglob.h"
        ],
        "fs/cifs/connect.c||fs/cifs/connect.c": [
          "File: fs/cifs/connect.c -> fs/cifs/connect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  uid_t linux_uid;",
          "71:  gid_t linux_gid;",
          "72:  mode_t file_mode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:  uid_t cred_uid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "834:  vol->target_rfc1001_name[0] = 0;",
          "836:  vol->linux_gid = current_gid();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "836:  vol->cred_uid = current_uid();",
          "837:  vol->linux_uid = current_uid();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1658:  list_for_each_entry(ses, &server->smb_ses_list, smb_ses_list) {",
          "1659:   switch (server->secType) {",
          "1660:   case Kerberos:",
          "1662:     continue;",
          "1663:    break;",
          "1664:   default:",
          "",
          "[Removed Lines]",
          "1661:    if (vol->linux_uid != ses->linux_uid)",
          "",
          "[Added Lines]",
          "1663:    if (vol->cred_uid != ses->cred_uid)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1775:   if (ses->domainName)",
          "1776:    strcpy(ses->domainName, volume_info->domainname);",
          "1777:  }",
          "1778:  ses->linux_uid = volume_info->linux_uid;",
          "1779:  ses->overrideSecFlg = volume_info->secFlg;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1780:  ses->cred_uid = volume_info->cred_uid;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc87a40677bbe0937e2ff0642c7e83c9a4813f3d",
      "candidate_info": {
        "commit_hash": "fc87a40677bbe0937e2ff0642c7e83c9a4813f3d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/fc87a40677bbe0937e2ff0642c7e83c9a4813f3d",
        "files": [
          "fs/cifs/connect.c"
        ],
        "message": "cifs: fix NULL pointer dereference in cifs_find_smb_ses\n\ncifs_find_smb_ses assumes that the vol->password field is a valid\npointer, but that's only the case if a password was passed in via\nthe options string. It's possible that one won't be if there is\nno mount helper on the box.\n\nReported-by: diabel <gacek-2004@wp.pl>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>",
        "before_after_code_files": [
          "fs/cifs/connect.c||fs/cifs/connect.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/cifs/connect.c||fs/cifs/connect.c"
          ],
          "candidate": [
            "fs/cifs/connect.c||fs/cifs/connect.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/cifs/connect.c||fs/cifs/connect.c": [
          "File: fs/cifs/connect.c -> fs/cifs/connect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1673:         MAX_USERNAME_SIZE))",
          "1674:     continue;",
          "1675:    if (strlen(vol->username) != 0 &&",
          "1677:         MAX_PASSWORD_SIZE))",
          "1678:     continue;",
          "1679:   }",
          "",
          "[Removed Lines]",
          "1676:        strncmp(ses->password, vol->password,",
          "",
          "[Added Lines]",
          "1676:        strncmp(ses->password,",
          "1677:         vol->password ? vol->password : \"\",",
          "",
          "---------------"
        ]
      }
    }
  ]
}