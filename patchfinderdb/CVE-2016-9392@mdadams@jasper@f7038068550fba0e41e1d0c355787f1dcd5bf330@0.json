{
  "cve_id": "CVE-2016-9392",
  "cve_desc": "The calcstepsizes function in jpc_dec.c in JasPer before 1.900.17 allows remote attackers to cause a denial of service (assertion failure) via a crafted file.",
  "repo": "mdadams/jasper",
  "patch_hash": "f7038068550fba0e41e1d0c355787f1dcd5bf330",
  "patch_info": {
    "commit_hash": "f7038068550fba0e41e1d0c355787f1dcd5bf330",
    "repo": "mdadams/jasper",
    "commit_url": "https://github.com/mdadams/jasper/commit/f7038068550fba0e41e1d0c355787f1dcd5bf330",
    "files": [
      "src/libjasper/jpc/jpc_cs.c"
    ],
    "message": "Added some missing sanity checks on the data in a SIZ marker segment.",
    "before_after_code_files": [
      "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
    ]
  },
  "patch_diff": {
    "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c": [
      "File: src/libjasper/jpc/jpc_cs.c -> src/libjasper/jpc/jpc_cs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "489:  unsigned int i;",
      "490:  uint_fast8_t tmp;",
      "493:  cstate = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "492:  siz->comps = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "502:    jpc_getuint32(in, &siz->tilexoff) ||",
      "503:    jpc_getuint32(in, &siz->tileyoff) ||",
      "504:    jpc_getuint16(in, &siz->numcomps)) {",
      "506:  }",
      "510:  }",
      "514:  }",
      "515:  if (!(siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t)))) {",
      "517:  }",
      "518:  for (i = 0; i < siz->numcomps; ++i) {",
      "519:   if (jpc_getuint8(in, &tmp) ||",
      "520:     jpc_getuint8(in, &siz->comps[i].hsamp) ||",
      "521:     jpc_getuint8(in, &siz->comps[i].vsamp)) {",
      "524:   }",
      "525:   if (siz->comps[i].hsamp == 0 || siz->comps[i].hsamp > 255) {",
      "526:    jas_eprintf(\"invalid XRsiz value %d\\n\", siz->comps[i].hsamp);",
      "529:   }",
      "530:   if (siz->comps[i].vsamp == 0 || siz->comps[i].vsamp > 255) {",
      "531:    jas_eprintf(\"invalid YRsiz value %d\\n\", siz->comps[i].vsamp);",
      "534:   }",
      "535:   siz->comps[i].sgnd = (tmp >> 7) & 1;",
      "536:   siz->comps[i].prec = (tmp & 0x7f) + 1;",
      "537:  }",
      "538:  if (jas_stream_eof(in)) {",
      "541:  }",
      "542:  return 0;",
      "543: }",
      "545: static int jpc_siz_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out)",
      "",
      "[Removed Lines]",
      "505:   return -1;",
      "507:  if (!siz->width || !siz->height || !siz->tilewidth ||",
      "508:    !siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {",
      "509:   return -1;",
      "511:  if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height) {",
      "512:   jas_eprintf(\"all tiles are outside the image area\\n\");",
      "513:   return -1;",
      "516:   return -1;",
      "522:    jas_free(siz->comps);",
      "523:    return -1;",
      "527:    jas_free(siz->comps);",
      "528:    return -1;",
      "532:    jas_free(siz->comps);",
      "533:    return -1;",
      "539:   jas_free(siz->comps);",
      "540:   return -1;",
      "",
      "[Added Lines]",
      "507:   goto error;",
      "509:  if (!siz->width || !siz->height) {",
      "510:   jas_eprintf(\"reference grid cannot have zero area\\n\");",
      "511:   goto error;",
      "513:  if (!siz->tilewidth || !siz->tileheight) {",
      "514:   jas_eprintf(\"tile cannot have zero area\\n\");",
      "515:   goto error;",
      "516:  }",
      "517:  if (!siz->numcomps || siz->numcomps > 16384) {",
      "518:   jas_eprintf(\"number of components not in permissible range\\n\");",
      "519:   goto error;",
      "521:  if (siz->xoff >= siz->width) {",
      "522:   jas_eprintf(\"XOsiz not in permissible range\\n\");",
      "523:   goto error;",
      "524:  }",
      "525:  if (siz->yoff >= siz->height) {",
      "526:   jas_eprintf(\"YOsiz not in permissible range\\n\");",
      "527:   goto error;",
      "528:  }",
      "529:  if (siz->tilexoff > siz->xoff || siz->tilexoff + siz->tilewidth <= siz->xoff) {",
      "530:   jas_eprintf(\"XTOsiz not in permissible range\\n\");",
      "531:   goto error;",
      "532:  }",
      "533:  if (siz->tileyoff > siz->yoff || siz->tileyoff + siz->tileheight <= siz->yoff) {",
      "534:   jas_eprintf(\"YTOsiz not in permissible range\\n\");",
      "535:   goto error;",
      "536:  }",
      "539:   goto error;",
      "545:    goto error;",
      "549:    goto error;",
      "553:    goto error;",
      "559:   goto error;",
      "563: error:",
      "564:  if (siz->comps) {",
      "565:   jas_free(siz->comps);",
      "566:  }",
      "567:  return -1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7df7cf2d4e82280b2239f309d88a3037349617d3",
      "candidate_info": {
        "commit_hash": "7df7cf2d4e82280b2239f309d88a3037349617d3",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/7df7cf2d4e82280b2239f309d88a3037349617d3",
        "files": [
          "src/libjasper/jpc/jpc_cs.c"
        ],
        "message": "Added some range checks on parameters in some JPC marker segments.",
        "before_after_code_files": [
          "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
          ],
          "candidate": [
            "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c": [
          "File: src/libjasper/jpc/jpc_cs.c -> src/libjasper/jpc/jpc_cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:    jpc_getuint8(in, &sot->numparts)) {",
          "435:   return -1;",
          "436:  }",
          "437:  if (jas_stream_eof(in)) {",
          "438:   return -1;",
          "439:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:  if (sot->tileno > 65534 || sot->len < 12 || sot->partno > 254 ||",
          "438:    sot->numparts < 1 || sot->numparts > 255) {",
          "439:   return -1;",
          "440:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "499:   return -1;",
          "500:  }",
          "501:  if (!siz->width || !siz->height || !siz->tilewidth ||",
          "503:   return -1;",
          "504:  }",
          "505:  if (!(siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t)))) {",
          "",
          "[Removed Lines]",
          "502:    !siz->tileheight || !siz->numcomps) {",
          "",
          "[Added Lines]",
          "506:    !siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba2b9d000660313af7b692542afbd374c5685865",
      "candidate_info": {
        "commit_hash": "ba2b9d000660313af7b692542afbd374c5685865",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/ba2b9d000660313af7b692542afbd374c5685865",
        "files": [
          "src/libjasper/jpc/jpc_cs.c",
          "src/libjasper/jpc/jpc_dec.c"
        ],
        "message": "Ensure that not all tiles lie outside the image area.",
        "before_after_code_files": [
          "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c",
          "src/libjasper/jpc/jpc_dec.c||src/libjasper/jpc/jpc_dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
          ],
          "candidate": [
            "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/jpc/jpc_cs.c||src/libjasper/jpc/jpc_cs.c": [
          "File: src/libjasper/jpc/jpc_cs.c -> src/libjasper/jpc/jpc_cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "508:    !siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {",
          "509:   return -1;",
          "510:  }",
          "511:  if (!(siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t)))) {",
          "512:   return -1;",
          "513:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "511:  if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height) {",
          "512:   jas_eprintf(\"all tiles are outside the image area\\n\");",
          "513:   return -1;",
          "514:  }",
          "",
          "---------------"
        ],
        "src/libjasper/jpc/jpc_dec.c||src/libjasper/jpc/jpc_dec.c": [
          "File: src/libjasper/jpc/jpc_dec.c -> src/libjasper/jpc/jpc_dec.c"
        ]
      }
    }
  ]
}