{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
      "candidate_info": {
        "commit_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9c9d136156abf4741bddf04ee83807bbc013f353",
        "files": [
          "include/openssl/ct.h"
        ],
        "message": "Remove obsolete error constant CT_F_CTLOG_NEW_NULL\n\nctlog_new_null() no longer exists.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 333c2e43729a92cf37d4bd12d6a3531b4bd7e1da)",
        "before_after_code_files": [
          "include/openssl/ct.h||include/openssl/ct.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ct.h||include/openssl/ct.h": [
          "File: include/openssl/ct.h -> include/openssl/ct.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "482: # define CT_F_CTLOG_NEW                                   117",
          "483: # define CT_F_CTLOG_NEW_FROM_BASE64                       118",
          "484: # define CT_F_CTLOG_NEW_FROM_CONF                         119",
          "486: # define CT_F_CTLOG_STORE_LOAD_CTX_NEW                    122",
          "487: # define CT_F_CTLOG_STORE_LOAD_FILE                       123",
          "488: # define CT_F_CTLOG_STORE_LOAD_LOG                        130",
          "",
          "[Removed Lines]",
          "485: # define CT_F_CTLOG_NEW_NULL                              120",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2cbb39524e0c970b9808dc1ea372cfaa6fef685",
      "candidate_info": {
        "commit_hash": "d2cbb39524e0c970b9808dc1ea372cfaa6fef685",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d2cbb39524e0c970b9808dc1ea372cfaa6fef685",
        "files": [
          "crypto/asn1/a_int.c"
        ],
        "message": "asn1/a_int.c: remove code duplicate and optimize branches,\n\ni.e. reduce amount of branches and favour likely ones.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3192)\n\n(cherry picked from commit a3ea6bf0ef703b38a656245931979c7e53c410b7)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: static size_t i2c_ibuf(const unsigned char *b, size_t blen, int neg,",
          "70:                        unsigned char **pp)",
          "71: {",
          "73:     size_t ret, i;",
          "74:     unsigned char *p, pb = 0;",
          "80:         ret = blen;",
          "81:         i = b[0];",
          "84:         if (!neg && (i > 127)) {",
          "85:             pad = 1;",
          "86:             pb = 0;",
          "87:         } else if (neg) {",
          "88:             if (i > 128) {",
          "89:                 pad = 1;",
          "91:             } else if (i == 128) {",
          "102:             }",
          "103:         }",
          "104:         ret += pad;",
          "105:     }",
          "107:         return ret;",
          "136:     return ret;",
          "",
          "[Removed Lines]",
          "72:     int pad = 0;",
          "75:     const unsigned char *n;",
          "77:     if (b == NULL || blen == 0)",
          "78:         ret = 1;",
          "79:     else {",
          "82:         if (ret == 1 && i == 0)",
          "83:             neg = 0;",
          "90:                 pb = 0xFF;",
          "96:                 for (i = 1; i < blen; i++)",
          "97:                     if (b[i]) {",
          "98:                         pad = 1;",
          "99:                         pb = 0xFF;",
          "100:                         break;",
          "101:                     }",
          "106:     if (pp == NULL)",
          "108:     p = *pp;",
          "110:     if (pad)",
          "112:     if (b == NULL || blen == 0)",
          "114:     else if (!neg)",
          "115:         memcpy(p, b, blen);",
          "116:     else {",
          "118:         n = b + blen;",
          "119:         p += blen;",
          "120:         i = blen;",
          "122:         while (!n[-1] && i > 1) {",
          "124:             n--;",
          "125:             i--;",
          "126:         }",
          "129:         i--;",
          "131:         for (; i > 0; i--)",
          "133:     }",
          "",
          "[Added Lines]",
          "76: static void twos_complement(unsigned char *dst, const unsigned char *src,",
          "77:                             size_t len, unsigned char pad)",
          "78: {",
          "79:     unsigned int carry = pad & 1;",
          "82:     dst += len;",
          "83:     src += len;",
          "85:     while (len-- != 0) {",
          "87:         carry >>= 8;",
          "88:     }",
          "89: }",
          "94:     unsigned int pad = 0;",
          "98:     if (b != NULL && blen) {",
          "105:             pb = 0xFF;",
          "113:                 for (pad = 0, i = 1; i < blen; i++)",
          "114:                     pad |= b[i];",
          "115:                 pb = pad != 0 ? 0xffU : 0;",
          "116:                 pad = pb & 1;",
          "120:     } else {",
          "121:         ret = 1;",
          "125:     if (pp == NULL || (p = *pp) == NULL)",
          "134:     p += pad;       /* yes, p[0] can be written twice, but it's little",
          "136:     twos_complement(p, b, blen, pb);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145: static size_t c2i_ibuf(unsigned char *b, int *pneg,",
          "146:                        const unsigned char *p, size_t plen)",
          "147: {",
          "149:     int neg, pad;",
          "151:     if (plen == 0) {",
          "",
          "[Removed Lines]",
          "148:     size_t i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "159:     if (plen == 1) {",
          "161:             if (neg)",
          "162:                 b[0] = (p[0] ^ 0xFF) + 1;",
          "163:             else",
          "",
          "[Removed Lines]",
          "160:         if (b) {",
          "",
          "[Added Lines]",
          "162:         if (b != NULL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "174:         ASN1err(ASN1_F_C2I_IBUF, ASN1_R_ILLEGAL_PADDING);",
          "175:         return 0;",
          "176:     }",
          "200:     plen -= pad;",
          "217:     return plen;",
          "218: }",
          "",
          "[Removed Lines]",
          "178:     if (neg == 0) {",
          "179:         if (b)",
          "180:             memcpy(b, p + pad, plen - pad);",
          "181:         return plen - pad;",
          "182:     }",
          "184:     if (neg && pad) {",
          "186:         for (i = 1; i < plen; i++) {",
          "187:             if (p[i] != 0)",
          "188:                 break;",
          "189:         }",
          "191:         if (i == plen) {",
          "192:             if (b) {",
          "193:                 b[0] = 1;",
          "194:                 memset(b + 1, 0, plen - 1);",
          "195:             }",
          "196:             return plen;",
          "197:         }",
          "198:     }",
          "202:     if (b) {",
          "203:         const unsigned char *from = p + plen - 1 + pad;",
          "204:         unsigned char *to = b + plen;",
          "205:         i = plen;",
          "206:         while (*from == 0 && i) {",
          "208:             i--;",
          "209:             from--;",
          "210:         }",
          "212:         OPENSSL_assert(i != 0);",
          "213:         i--;",
          "214:         for (; i > 0; i--)",
          "216:     }",
          "",
          "[Added Lines]",
          "181:     p += pad;",
          "184:     if (b != NULL)",
          "185:         twos_complement(b, p, plen, neg ? 0xffU : 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "646:     size_t buflen;",
          "648:     buflen = asn1_put_uint64(buf, r);",
          "651:     return i2c_ibuf(buf, buflen, neg, &p);",
          "652: }",
          "",
          "[Removed Lines]",
          "649:     if (p == NULL)",
          "650:         return i2c_ibuf(buf, buflen, neg, NULL);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
      "candidate_info": {
        "commit_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/75249be2ce76a75953869f9d249ef0ec8f701d94",
        "files": [
          "crypto/dh/dh_key.c"
        ],
        "message": "Fix error handling in compute_key, BN_CTX_get can return NULL\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2132)\n(cherry picked from commit 7928ee4d685b727619555bc1ec0aee805f6fc8c4)",
        "before_after_code_files": [
          "crypto/dh/dh_key.c||crypto/dh/dh_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_key.c||crypto/dh/dh_key.c": [
          "File: crypto/dh/dh_key.c -> crypto/dh/dh_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         goto err;",
          "160:     BN_CTX_start(ctx);",
          "161:     tmp = BN_CTX_get(ctx);",
          "163:     if (dh->priv_key == NULL) {",
          "164:         DHerr(DH_F_COMPUTE_KEY, DH_R_NO_PRIVATE_VALUE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:     if (tmp == NULL)",
          "163:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4944142b82d557799c2a73361202a07a54fd69d",
      "candidate_info": {
        "commit_hash": "f4944142b82d557799c2a73361202a07a54fd69d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f4944142b82d557799c2a73361202a07a54fd69d",
        "files": [
          "include/openssl/ec.h"
        ],
        "message": "Fix function documentation\n\nCLA: trivial\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2972)\n(cherry picked from commit f5fd3848fe5033534b92d2d18ed6fbd16741a0a2)",
        "before_after_code_files": [
          "include/openssl/ec.h||include/openssl/ec.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ec.h||include/openssl/ec.h": [
          "File: include/openssl/ec.h -> include/openssl/ec.h"
        ]
      }
    },
    {
      "candidate_hash": "5c75e43d84ca6a56adba5bab37b868576ff8b209",
      "candidate_info": {
        "commit_hash": "5c75e43d84ca6a56adba5bab37b868576ff8b209",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5c75e43d84ca6a56adba5bab37b868576ff8b209",
        "files": [
          "doc/crypto/ERR_GET_LIB.pod",
          "include/openssl/err.h"
        ],
        "message": "Restore the ERR_FATAL_ERROR() macro\n\nCommit 0cd0a820abc6124cf8e176fa92d620a2abf9e419 removed this macro\nalong with many unused function and reason codes; ERR_FATAL_ERROR()\nwas not used in the tree, but did have external consumers.\n\nAdd it back to restore the API compatibility and avoid breaking\napplications for no internal benefit.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2049)\n(cherry picked from commit 036ba500f7886ca2e7231549fa574ec2cdd45cef)",
        "before_after_code_files": [
          "include/openssl/err.h||include/openssl/err.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/err.h||include/openssl/err.h": [
          "File: include/openssl/err.h -> include/openssl/err.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: # define ERR_GET_LIB(l)          (int)(((l) >> 24L) & 0x0FFL)",
          "141: # define ERR_GET_FUNC(l)         (int)(((l) >> 12L) & 0xFFFL)",
          "142: # define ERR_GET_REASON(l)       (int)( (l)         & 0xFFFL)",
          "145: # define SYS_F_FOPEN             1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143: # define ERR_FATAL_ERROR(l)      (int)( (l)         & ERR_R_FATAL)",
          "",
          "---------------"
        ]
      }
    }
  ]
}