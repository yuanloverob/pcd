{
  "cve_id": "CVE-2016-6875",
  "cve_desc": "Infinite recursion in wddx in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.",
  "repo": "facebook/hhvm",
  "patch_hash": "1888810e77b446a79a7674784d5f139fcfa605e2",
  "patch_info": {
    "commit_hash": "1888810e77b446a79a7674784d5f139fcfa605e2",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/1888810e77b446a79a7674784d5f139fcfa605e2",
    "files": [
      "hphp/runtime/ext/wddx/ext_wddx.cpp",
      "hphp/runtime/ext/wddx/ext_wddx.h",
      "hphp/test/slow/ext_wddx/recursion.php",
      "hphp/test/slow/ext_wddx/recursion.php.expectf"
    ],
    "message": "Fix infinite recursion in wddx\n\nSummary:\nIt wasn't checking for infinite recursion due to references or self-referential\nobjects. As it turns out closures always return themselves when converted to an\narray. Raising a warning and returning is how PHP-src deals with this problem,\nnothing special is done for closures.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3465655\n\nfbshipit-source-id: a42bc34d30cf4825faf33596139c0c05f8e4f5f1",
    "before_after_code_files": [
      "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
      "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
      "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
      "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
    ]
  },
  "patch_diff": {
    "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp": [
      "File: hphp/runtime/ext/wddx/ext_wddx.cpp -> hphp/runtime/ext/wddx/ext_wddx.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "66: bool WddxPacket::recursiveAddVar(const String& varName,",
      "67:                                  const Variant& varVariant,",
      "68:                                  bool hasVarTag) {",
      "70:   bool isArray = varVariant.isArray();",
      "71:   bool isObject = varVariant.isObject();",
      "73:   if (isArray || isObject) {",
      "74:     if (hasVarTag) {",
      "75:       m_packetString.append(\"<var name='\");",
      "76:       m_packetString.append(varName.data());",
      "77:       m_packetString.append(\"'>\");",
      "78:     }",
      "85:     int length = varAsArray.length();",
      "86:     if (length > 0) {",
      "87:       ArrayIter it = ArrayIter(varAsArray);",
      "",
      "[Removed Lines]",
      "80:     Array varAsArray;",
      "81:     Object varAsObject = varVariant.toObject();",
      "82:     if (isArray) varAsArray = varVariant.toArray();",
      "83:     if (isObject) varAsArray = varAsObject.toArray();",
      "",
      "[Added Lines]",
      "69:   SeenContainers seen;",
      "70:   return recursiveAddVarImpl(varName, varVariant, hasVarTag, seen);",
      "71: }",
      "73: bool WddxPacket::recursiveAddVarImpl(const String& varName,",
      "74:                                      const Variant& varVariant,",
      "75:                                      bool hasVarTag,",
      "76:                                      SeenContainers& seen) {",
      "81:     Array varAsArray;",
      "82:     Object varAsObject;",
      "83:     ArrayOrObject ptr;",
      "84:     if (isArray) {",
      "85:       varAsArray = varVariant.toArray();",
      "86:       ptr = varAsArray.get();",
      "87:     }",
      "88:     if (isObject) {",
      "89:       varAsObject = varVariant.toObject();",
      "90:       varAsArray = varAsObject.toArray();",
      "91:       ptr = varAsObject.get();",
      "92:     }",
      "93:     assert(!ptr.isNull());",
      "94:     if (!seen.emplace(ptr).second) {",
      "95:       raise_warning(\"recursion detected\");",
      "96:       return false;",
      "97:     }",
      "98:     SCOPE_EXIT { seen.erase(ptr); };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "99:         m_packetString.append(\"'>\");",
      "100:       }",
      "101:       for (ArrayIter it(varAsArray); it; ++it) {",
      "105:       }",
      "106:       if (isObject) {",
      "107:         m_packetString.append(\"</struct>\");",
      "",
      "[Removed Lines]",
      "102:         Variant key = it.first();",
      "103:         Variant value = it.second();",
      "104:         recursiveAddVar(key.toString(), value, isObject);",
      "",
      "[Added Lines]",
      "123:         auto key = it.first();",
      "124:         auto const& value = it.secondRef();",
      "125:         recursiveAddVarImpl(key.toString(), value, isObject, seen);",
      "",
      "---------------"
    ],
    "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h": [
      "File: hphp/runtime/ext/wddx/ext_wddx.h -> hphp/runtime/ext/wddx/ext_wddx.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "38:   String packet_end();",
      "39:   bool serialize_value(const Variant& varVariant);",
      "40:   bool recursiveAddVar(const String& varName, const Variant& varVariant,",
      "43:  private:",
      "44:   String getWddxEncoded(const String& varType,",
      "",
      "[Removed Lines]",
      "41:                        bool hasVarTag );",
      "",
      "[Added Lines]",
      "41:                        bool hasVarTag);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:                    const String& varName,",
      "53:                    bool hasVarTag);",
      "55:   StringBuffer m_packetString;",
      "56:   bool m_packetClosed;",
      "57:   bool m_manualPacketCreation;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55:   using ArrayOrObject = Either<ArrayData*,ObjectData*>;",
      "56:   struct EitherHash {",
      "57:     size_t operator()(const ArrayOrObject data) const {",
      "58:       return data.toOpaque();",
      "59:     }",
      "60:   };",
      "61:   using SeenContainers = req::hash_set<ArrayOrObject, EitherHash>;",
      "63:   bool recursiveAddVarImpl(const String& varName, const Variant& varVariant,",
      "64:                            bool hasVarTag, SeenContainers& seen);",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php": [
      "File: hphp/test/slow/ext_wddx/recursion.php -> hphp/test/slow/ext_wddx/recursion.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "2: $s1 = wddx_serialize_value(function () {});",
      "3: var_dump($s1);",
      "5: $a = []; $a[] =& $a;",
      "6: $s2 = wddx_serialize_value($a);",
      "7: var_dump($s2);",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf": [
      "File: hphp/test/slow/ext_wddx/recursion.php.expectf -> hphp/test/slow/ext_wddx/recursion.php.expectf",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: Warning: recursion detected in %s/recursion.php on line 2",
      "3: string(%d) \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>Closure$;%s$%s$</string></var></struct></data></wddxPacket>\"",
      "5: Warning: recursion detected in %s/recursion.php on line 6",
      "6: string(87) \"<wddxPacket version='1.0'><header/><data><array length='1'></array></data></wddxPacket>\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "05485c70a919752c3d12c99ab8b6602b2f1187f3",
      "candidate_info": {
        "commit_hash": "05485c70a919752c3d12c99ab8b6602b2f1187f3",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/05485c70a919752c3d12c99ab8b6602b2f1187f3",
        "files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf"
        ],
        "message": "Fix infinite recursion in wddx\n\nSummary:\nIt wasn't checking for infinite recursion due to references or self-referential\nobjects. As it turns out closures always return themselves when converted to an\narray. Raising a warning and returning is how PHP-src deals with this problem,\nnothing special is done for closures.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3465655\n\nfbshipit-source-id: a42bc34d30cf4825faf33596139c0c05f8e4f5f1",
        "before_after_code_files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp": [
          "File: hphp/runtime/ext/wddx/ext_wddx.cpp -> hphp/runtime/ext/wddx/ext_wddx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: bool WddxPacket::recursiveAddVar(const String& varName,",
          "67:                                  const Variant& varVariant,",
          "68:                                  bool hasVarTag) {",
          "70:   bool isArray = varVariant.isArray();",
          "71:   bool isObject = varVariant.isObject();",
          "73:   if (isArray || isObject) {",
          "74:     if (hasVarTag) {",
          "75:       m_packetString.append(\"<var name='\");",
          "76:       m_packetString.append(varName.data());",
          "77:       m_packetString.append(\"'>\");",
          "78:     }",
          "85:     int length = varAsArray.length();",
          "86:     if (length > 0) {",
          "87:       ArrayIter it = ArrayIter(varAsArray);",
          "",
          "[Removed Lines]",
          "80:     Array varAsArray;",
          "81:     Object varAsObject = varVariant.toObject();",
          "82:     if (isArray) varAsArray = varVariant.toArray();",
          "83:     if (isObject) varAsArray = varAsObject.toArray();",
          "",
          "[Added Lines]",
          "69:   SeenContainers seen;",
          "70:   return recursiveAddVarImpl(varName, varVariant, hasVarTag, seen);",
          "71: }",
          "73: bool WddxPacket::recursiveAddVarImpl(const String& varName,",
          "74:                                      const Variant& varVariant,",
          "75:                                      bool hasVarTag,",
          "76:                                      SeenContainers& seen) {",
          "81:     Array varAsArray;",
          "82:     Object varAsObject;",
          "83:     ArrayOrObject ptr;",
          "84:     if (isArray) {",
          "85:       varAsArray = varVariant.toArray();",
          "86:       ptr = varAsArray.get();",
          "87:     }",
          "88:     if (isObject) {",
          "89:       varAsObject = varVariant.toObject();",
          "90:       varAsArray = varAsObject.toArray();",
          "91:       ptr = varAsObject.get();",
          "92:     }",
          "93:     assert(!ptr.isNull());",
          "94:     if (!seen.emplace(ptr).second) {",
          "95:       raise_warning(\"recursion detected\");",
          "96:       return false;",
          "97:     }",
          "98:     SCOPE_EXIT { seen.erase(ptr); };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         m_packetString.append(\"'>\");",
          "100:       }",
          "101:       for (ArrayIter it(varAsArray); it; ++it) {",
          "105:       }",
          "106:       if (isObject) {",
          "107:         m_packetString.append(\"</struct>\");",
          "",
          "[Removed Lines]",
          "102:         Variant key = it.first();",
          "103:         Variant value = it.second();",
          "104:         recursiveAddVar(key.toString(), value, isObject);",
          "",
          "[Added Lines]",
          "123:         auto key = it.first();",
          "124:         auto const& value = it.secondRef();",
          "125:         recursiveAddVarImpl(key.toString(), value, isObject, seen);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h": [
          "File: hphp/runtime/ext/wddx/ext_wddx.h -> hphp/runtime/ext/wddx/ext_wddx.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   String packet_end();",
          "40:   bool serialize_value(const Variant& varVariant);",
          "41:   bool recursiveAddVar(const String& varName, const Variant& varVariant,",
          "44:  private:",
          "45:   String getWddxEncoded(const String& varType,",
          "",
          "[Removed Lines]",
          "42:                        bool hasVarTag );",
          "",
          "[Added Lines]",
          "42:                        bool hasVarTag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:                    const String& varName,",
          "54:                    bool hasVarTag);",
          "56:   StringBuffer m_packetString;",
          "57:   bool m_packetClosed;",
          "58:   bool m_manualPacketCreation;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   using ArrayOrObject = Either<ArrayData*,ObjectData*>;",
          "57:   struct EitherHash {",
          "58:     size_t operator()(const ArrayOrObject data) const {",
          "59:       return data.toOpaque();",
          "60:     }",
          "61:   };",
          "62:   using SeenContainers = req::hash_set<ArrayOrObject, EitherHash>;",
          "64:   bool recursiveAddVarImpl(const String& varName, const Variant& varVariant,",
          "65:                            bool hasVarTag, SeenContainers& seen);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php": [
          "File: hphp/test/slow/ext_wddx/recursion.php -> hphp/test/slow/ext_wddx/recursion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2: $s1 = wddx_serialize_value(function () {});",
          "3: var_dump($s1);",
          "5: $a = []; $a[] =& $a;",
          "6: $s2 = wddx_serialize_value($a);",
          "7: var_dump($s2);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf": [
          "File: hphp/test/slow/ext_wddx/recursion.php.expectf -> hphp/test/slow/ext_wddx/recursion.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Warning: recursion detected in %s/recursion.php on line 2",
          "3: string(%d) \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>Closure$;%s$%s$</string></var></struct></data></wddxPacket>\"",
          "5: Warning: recursion detected in %s/recursion.php on line 6",
          "6: string(87) \"<wddxPacket version='1.0'><header/><data><array length='1'></array></data></wddxPacket>\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9266215546a492e51c8bd11625eb0c2bbeea954b",
      "candidate_info": {
        "commit_hash": "9266215546a492e51c8bd11625eb0c2bbeea954b",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/9266215546a492e51c8bd11625eb0c2bbeea954b",
        "files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf"
        ],
        "message": "Fix infinite recursion in wddx\n\nSummary:\nIt wasn't checking for infinite recursion due to references or self-referential\nobjects. As it turns out closures always return themselves when converted to an\narray. Raising a warning and returning is how PHP-src deals with this problem,\nnothing special is done for closures.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3465655\n\nfbshipit-source-id: a42bc34d30cf4825faf33596139c0c05f8e4f5f1",
        "before_after_code_files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp": [
          "File: hphp/runtime/ext/wddx/ext_wddx.cpp -> hphp/runtime/ext/wddx/ext_wddx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: bool WddxPacket::recursiveAddVar(const String& varName,",
          "67:                                  const Variant& varVariant,",
          "68:                                  bool hasVarTag) {",
          "70:   bool isArray = varVariant.isArray();",
          "71:   bool isObject = varVariant.isObject();",
          "73:   if (isArray || isObject) {",
          "74:     if (hasVarTag) {",
          "75:       m_packetString.append(\"<var name='\");",
          "76:       m_packetString.append(varName.data());",
          "77:       m_packetString.append(\"'>\");",
          "78:     }",
          "85:     int length = varAsArray.length();",
          "86:     if (length > 0) {",
          "87:       ArrayIter it = ArrayIter(varAsArray);",
          "",
          "[Removed Lines]",
          "80:     Array varAsArray;",
          "81:     Object varAsObject = varVariant.toObject();",
          "82:     if (isArray) varAsArray = varVariant.toArray();",
          "83:     if (isObject) varAsArray = varAsObject.toArray();",
          "",
          "[Added Lines]",
          "69:   SeenContainers seen;",
          "70:   return recursiveAddVarImpl(varName, varVariant, hasVarTag, seen);",
          "71: }",
          "73: bool WddxPacket::recursiveAddVarImpl(const String& varName,",
          "74:                                      const Variant& varVariant,",
          "75:                                      bool hasVarTag,",
          "76:                                      SeenContainers& seen) {",
          "81:     Array varAsArray;",
          "82:     Object varAsObject;",
          "83:     ArrayOrObject ptr;",
          "84:     if (isArray) {",
          "85:       varAsArray = varVariant.toArray();",
          "86:       ptr = varAsArray.get();",
          "87:     }",
          "88:     if (isObject) {",
          "89:       varAsObject = varVariant.toObject();",
          "90:       varAsArray = varAsObject.toArray();",
          "91:       ptr = varAsObject.get();",
          "92:     }",
          "93:     assert(!ptr.isNull());",
          "94:     if (!seen.emplace(ptr).second) {",
          "95:       raise_warning(\"recursion detected\");",
          "96:       return false;",
          "97:     }",
          "98:     SCOPE_EXIT { seen.erase(ptr); };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         m_packetString.append(\"'>\");",
          "100:       }",
          "101:       for (ArrayIter it(varAsArray); it; ++it) {",
          "105:       }",
          "106:       if (isObject) {",
          "107:         m_packetString.append(\"</struct>\");",
          "",
          "[Removed Lines]",
          "102:         Variant key = it.first();",
          "103:         Variant value = it.second();",
          "104:         recursiveAddVar(key.toString(), value, isObject);",
          "",
          "[Added Lines]",
          "123:         auto key = it.first();",
          "124:         auto const& value = it.secondRef();",
          "125:         recursiveAddVarImpl(key.toString(), value, isObject, seen);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h": [
          "File: hphp/runtime/ext/wddx/ext_wddx.h -> hphp/runtime/ext/wddx/ext_wddx.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   String packet_end();",
          "39:   bool serialize_value(const Variant& varVariant);",
          "40:   bool recursiveAddVar(const String& varName, const Variant& varVariant,",
          "43:  private:",
          "44:   String getWddxEncoded(const String& varType,",
          "",
          "[Removed Lines]",
          "41:                        bool hasVarTag );",
          "",
          "[Added Lines]",
          "41:                        bool hasVarTag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:                    const String& varName,",
          "53:                    bool hasVarTag);",
          "55:   StringBuffer m_packetString;",
          "56:   bool m_packetClosed;",
          "57:   bool m_manualPacketCreation;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   using ArrayOrObject = Either<ArrayData*,ObjectData*>;",
          "56:   struct EitherHash {",
          "57:     size_t operator()(const ArrayOrObject data) const {",
          "58:       return data.toOpaque();",
          "59:     }",
          "60:   };",
          "61:   using SeenContainers = req::hash_set<ArrayOrObject, EitherHash>;",
          "63:   bool recursiveAddVarImpl(const String& varName, const Variant& varVariant,",
          "64:                            bool hasVarTag, SeenContainers& seen);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php": [
          "File: hphp/test/slow/ext_wddx/recursion.php -> hphp/test/slow/ext_wddx/recursion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2: $s1 = wddx_serialize_value(function () {});",
          "3: var_dump($s1);",
          "5: $a = []; $a[] =& $a;",
          "6: $s2 = wddx_serialize_value($a);",
          "7: var_dump($s2);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf": [
          "File: hphp/test/slow/ext_wddx/recursion.php.expectf -> hphp/test/slow/ext_wddx/recursion.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Warning: recursion detected in %s/recursion.php on line 2",
          "3: string(%d) \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>Closure$;%s$%s$</string></var></struct></data></wddxPacket>\"",
          "5: Warning: recursion detected in %s/recursion.php on line 6",
          "6: string(87) \"<wddxPacket version='1.0'><header/><data><array length='1'></array></data></wddxPacket>\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34a41431b4faa7fae1c3ebb27c5b87677abfe9b9",
      "candidate_info": {
        "commit_hash": "34a41431b4faa7fae1c3ebb27c5b87677abfe9b9",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/34a41431b4faa7fae1c3ebb27c5b87677abfe9b9",
        "files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf"
        ],
        "message": "Fix infinite recursion in wddx\n\nSummary:\nIt wasn't checking for infinite recursion due to references or self-referential\nobjects. As it turns out closures always return themselves when converted to an\narray. Raising a warning and returning is how PHP-src deals with this problem,\nnothing special is done for closures.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3465655\n\nfbshipit-source-id: a42bc34d30cf4825faf33596139c0c05f8e4f5f1",
        "before_after_code_files": [
          "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
          "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
          "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
          "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp",
            "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h",
            "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php",
            "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/wddx/ext_wddx.cpp||hphp/runtime/ext/wddx/ext_wddx.cpp": [
          "File: hphp/runtime/ext/wddx/ext_wddx.cpp -> hphp/runtime/ext/wddx/ext_wddx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: bool WddxPacket::recursiveAddVar(const String& varName,",
          "67:                                  const Variant& varVariant,",
          "68:                                  bool hasVarTag) {",
          "70:   bool isArray = varVariant.isArray();",
          "71:   bool isObject = varVariant.isObject();",
          "73:   if (isArray || isObject) {",
          "74:     if (hasVarTag) {",
          "75:       m_packetString.append(\"<var name='\");",
          "76:       m_packetString.append(varName.data());",
          "77:       m_packetString.append(\"'>\");",
          "78:     }",
          "85:     int length = varAsArray.length();",
          "86:     if (length > 0) {",
          "87:       ArrayIter it = ArrayIter(varAsArray);",
          "",
          "[Removed Lines]",
          "80:     Array varAsArray;",
          "81:     Object varAsObject = varVariant.toObject();",
          "82:     if (isArray) varAsArray = varVariant.toArray();",
          "83:     if (isObject) varAsArray = varAsObject.toArray();",
          "",
          "[Added Lines]",
          "69:   SeenContainers seen;",
          "70:   return recursiveAddVarImpl(varName, varVariant, hasVarTag, seen);",
          "71: }",
          "73: bool WddxPacket::recursiveAddVarImpl(const String& varName,",
          "74:                                      const Variant& varVariant,",
          "75:                                      bool hasVarTag,",
          "76:                                      SeenContainers& seen) {",
          "81:     Array varAsArray;",
          "82:     Object varAsObject;",
          "83:     ArrayOrObject ptr;",
          "84:     if (isArray) {",
          "85:       varAsArray = varVariant.toArray();",
          "86:       ptr = varAsArray.get();",
          "87:     }",
          "88:     if (isObject) {",
          "89:       varAsObject = varVariant.toObject();",
          "90:       varAsArray = varAsObject.toArray();",
          "91:       ptr = varAsObject.get();",
          "92:     }",
          "93:     assert(!ptr.isNull());",
          "94:     if (!seen.emplace(ptr).second) {",
          "95:       raise_warning(\"recursion detected\");",
          "96:       return false;",
          "97:     }",
          "98:     SCOPE_EXIT { seen.erase(ptr); };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         m_packetString.append(\"'>\");",
          "100:       }",
          "101:       for (ArrayIter it(varAsArray); it; ++it) {",
          "105:       }",
          "106:       if (isObject) {",
          "107:         m_packetString.append(\"</struct>\");",
          "",
          "[Removed Lines]",
          "102:         Variant key = it.first();",
          "103:         Variant value = it.second();",
          "104:         recursiveAddVar(key.toString(), value, isObject);",
          "",
          "[Added Lines]",
          "123:         auto key = it.first();",
          "124:         auto const& value = it.secondRef();",
          "125:         recursiveAddVarImpl(key.toString(), value, isObject, seen);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/wddx/ext_wddx.h||hphp/runtime/ext/wddx/ext_wddx.h": [
          "File: hphp/runtime/ext/wddx/ext_wddx.h -> hphp/runtime/ext/wddx/ext_wddx.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   String packet_end();",
          "39:   bool serialize_value(const Variant& varVariant);",
          "40:   bool recursiveAddVar(const String& varName, const Variant& varVariant,",
          "43:  private:",
          "44:   String getWddxEncoded(const String& varType,",
          "",
          "[Removed Lines]",
          "41:                        bool hasVarTag );",
          "",
          "[Added Lines]",
          "41:                        bool hasVarTag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:                    const String& varName,",
          "53:                    bool hasVarTag);",
          "55:   StringBuffer m_packetString;",
          "56:   bool m_packetClosed;",
          "57:   bool m_manualPacketCreation;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   using ArrayOrObject = Either<ArrayData*,ObjectData*>;",
          "56:   struct EitherHash {",
          "57:     size_t operator()(const ArrayOrObject data) const {",
          "58:       return data.toOpaque();",
          "59:     }",
          "60:   };",
          "61:   using SeenContainers = req::hash_set<ArrayOrObject, EitherHash>;",
          "63:   bool recursiveAddVarImpl(const String& varName, const Variant& varVariant,",
          "64:                            bool hasVarTag, SeenContainers& seen);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php||hphp/test/slow/ext_wddx/recursion.php": [
          "File: hphp/test/slow/ext_wddx/recursion.php -> hphp/test/slow/ext_wddx/recursion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2: $s1 = wddx_serialize_value(function () {});",
          "3: var_dump($s1);",
          "5: $a = []; $a[] =& $a;",
          "6: $s2 = wddx_serialize_value($a);",
          "7: var_dump($s2);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_wddx/recursion.php.expectf||hphp/test/slow/ext_wddx/recursion.php.expectf": [
          "File: hphp/test/slow/ext_wddx/recursion.php.expectf -> hphp/test/slow/ext_wddx/recursion.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Warning: recursion detected in %s/recursion.php on line 2",
          "3: string(%d) \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>Closure$;%s$%s$</string></var></struct></data></wddxPacket>\"",
          "5: Warning: recursion detected in %s/recursion.php on line 6",
          "6: string(87) \"<wddxPacket version='1.0'><header/><data><array length='1'></array></data></wddxPacket>\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}