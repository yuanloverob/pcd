{
  "cve_id": "CVE-2018-15503",
  "cve_desc": "The unpack implementation in Swoole version 4.0.4 lacks correct size checks in the deserialization process. An attacker can craft a serialized object to exploit this vulnerability and cause a SEGV.",
  "repo": "swoole/swoole-src",
  "patch_hash": "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
  "patch_info": {
    "commit_hash": "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
    "repo": "swoole/swoole-src",
    "commit_url": "https://github.com/swoole/swoole-src/commit/4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
    "files": [
      "swoole_serialize.c"
    ],
    "message": "add buffer end check",
    "before_after_code_files": [
      "swoole_serialize.c||swoole_serialize.c"
    ]
  },
  "patch_diff": {
    "swoole_serialize.c||swoole_serialize.c": [
      "File: swoole_serialize.c -> swoole_serialize.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "52: zend_class_entry *swoole_serialize_class_entry_ptr;",
      "54: #define SWOOLE_SERI_EOF \"EOF\"",
      "56: static struct _swSeriaG swSeriaG;",
      "58: void swoole_serialize_init(int module_number TSRMLS_DC)",
      "59: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55: #define CHECK_STEP if(buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
      "58: char *unseri_buffer_end = NULL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "649:     zend_ulong h, nIndex, max_index = 0;",
      "650:     uint32_t size = cp_zend_hash_check_size(nNumOfElements);",
      "651:     if (!size)",
      "652:     {",
      "653:         return NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "654:     CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "727:                     key_len = *((size_t*) buffer);",
      "728:                     buffer += sizeof (size_t);",
      "729:                 }",
      "730:                 p->key = zend_string_init((char*) buffer, key_len, 0);",
      "732:                 h = zend_inline_hash_func((char*) buffer, key_len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "734:                 CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "804:                     data_len = *((size_t*) buffer);",
      "805:                     buffer += sizeof (size_t);",
      "806:                 }",
      "807:                 p->val.value.str = zend_string_init((char*) buffer, data_len, 0);",
      "808:                 buffer += data_len;",
      "809:             }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "812:                 CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "833:     }",
      "834:     ht->nNextFreeElement = max_index;",
      "836:     return buffer;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:     CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "996:                 if (GC_IS_RECURSIVE(ht))",
      "997:                 {",
      "999:                     php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"the array has cycle ref\");",
      "1000:                 }",
      "1001:                 else",
      "",
      "[Removed Lines]",
      "998:                     ((SBucketType*) (buffer->buffer + p))->data_type = IS_NULL;//reset type null",
      "",
      "[Added Lines]",
      "1005:                     ((SBucketType*) (buffer->buffer + p))->data_type = IS_NULL; //reset type null",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1282:     zval property;",
      "1283:     uint32_t arr_num = 0;",
      "1284:     size_t name_len = *((unsigned short*) buffer);",
      "1285:     if (!name_len)",
      "1286:     {",
      "1287:         php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"illegal unserialize data\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1293:     CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1289:     }",
      "1290:     buffer += 2;",
      "1291:     zend_string *class_name;",
      "1293:     {",
      "1294:         class_name = swoole_string_init(ZEND_STRL(\"StdClass\"));",
      "1297:     {",
      "1298:         class_name = swoole_string_init((char*) buffer, name_len);",
      "1299:     }",
      "1300:     buffer += name_len;",
      "1301:     zend_class_entry *ce = swoole_try_get_ce(class_name);",
      "1302:     swoole_string_release(class_name);",
      "1304:     if (!ce)",
      "1305:     {",
      "",
      "[Removed Lines]",
      "1292:     if (flag == UNSERIALIZE_OBJECT_TO_STDCLASS)",
      "1295:     }",
      "1296:     else",
      "",
      "[Added Lines]",
      "1301:     if (flag == UNSERIALIZE_OBJECT_TO_STDCLASS)",
      "1304:     }",
      "1305:     else",
      "1312:     CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1312:     object_init_ex(return_value, ce);",
      "1315:     zend_string *key;",
      "1316:     zend_ulong index;",
      "1319:     ZEND_HASH_FOREACH_KEY_VAL(Z_ARRVAL(property), index, key, data)",
      "1320:     {",
      "1321:         const char *prop_name, *tmp;",
      "",
      "[Removed Lines]",
      "1314:     zval *data,*d;",
      "",
      "[Added Lines]",
      "1324:     zval *data, *d;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1388:         swoole_string_release(fname);",
      "1389:         zval_ptr_dtor(&ret);",
      "1390:     }",
      "1392:     return buffer;",
      "1394: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1400:     CHECK_STEP;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1486: {",
      "1487:     SBucketType type = *(SBucketType*) (buffer);",
      "1488:     zend_uchar real_type = type.data_type;",
      "1489:     buffer += sizeof (SBucketType);",
      "1490:     switch (real_type)",
      "1491:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1498:     unseri_buffer_end = buffer + len;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1511:         {",
      "1512:             if (swoole_seria_check_eof(buffer, len) < 0)",
      "1513:             {",
      "1516:             }",
      "1517:             unser_start = buffer - sizeof (SBucketType);",
      "1518:             uint32_t num = 0;",
      "",
      "[Removed Lines]",
      "1514:                   php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");",
      "1515:                   return SW_FALSE;",
      "",
      "[Added Lines]",
      "1524:                 php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");",
      "1525:                 return SW_FALSE;",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1526:         case IS_UNDEF:",
      "1527:             if (swoole_seria_check_eof(buffer, len) < 0)",
      "1528:             {",
      "1531:             }",
      "1532:             unser_start = buffer - sizeof (SBucketType);",
      "1533:             if (!swoole_unserialize_object(buffer, return_value, type.data_len, object_args, flag))",
      "",
      "[Removed Lines]",
      "1529:                   php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");",
      "1530:                   return SW_FALSE;",
      "",
      "[Added Lines]",
      "1539:                 php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");",
      "1540:                 return SW_FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fdc94ec2f25b2a4d77dc57f3811263c42de67421",
      "candidate_info": {
        "commit_hash": "fdc94ec2f25b2a4d77dc57f3811263c42de67421",
        "repo": "swoole/swoole-src",
        "commit_url": "https://github.com/swoole/swoole-src/commit/fdc94ec2f25b2a4d77dc57f3811263c42de67421",
        "files": [
          "swoole_serialize.c"
        ],
        "message": "revert.",
        "before_after_code_files": [
          "swoole_serialize.c||swoole_serialize.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "swoole_serialize.c||swoole_serialize.c"
          ],
          "candidate": [
            "swoole_serialize.c||swoole_serialize.c"
          ]
        }
      },
      "candidate_diff": {
        "swoole_serialize.c||swoole_serialize.c": [
          "File: swoole_serialize.c -> swoole_serialize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: zend_class_entry *swoole_serialize_class_entry_ptr;",
          "54: #define SWOOLE_SERI_EOF \"EOF\"",
          "57: static struct _swSeriaG swSeriaG;",
          "58: void *unseri_buffer_end = NULL;",
          "",
          "[Removed Lines]",
          "55: #define CHECK_STEP if((char*)buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
          "",
          "[Added Lines]",
          "55: #define CHECK_STEP if(buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f74be1cbff0a4ebe5bf79346e13ffd2359ac1e9",
      "candidate_info": {
        "commit_hash": "0f74be1cbff0a4ebe5bf79346e13ffd2359ac1e9",
        "repo": "swoole/swoole-src",
        "commit_url": "https://github.com/swoole/swoole-src/commit/0f74be1cbff0a4ebe5bf79346e13ffd2359ac1e9",
        "files": [
          ".gitignore",
          "examples/serialize2.php",
          "php_swoole.h",
          "swoole_serialize.c",
          "swoole_serialize.h"
        ],
        "message": "support returned objects will be converted into stdclass",
        "before_after_code_files": [
          "examples/serialize2.php||examples/serialize2.php",
          "php_swoole.h||php_swoole.h",
          "swoole_serialize.c||swoole_serialize.c",
          "swoole_serialize.h||swoole_serialize.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "swoole_serialize.c||swoole_serialize.c"
          ],
          "candidate": [
            "swoole_serialize.c||swoole_serialize.c"
          ]
        }
      },
      "candidate_diff": {
        "examples/serialize2.php||examples/serialize2.php": [
          "File: examples/serialize2.php -> examples/serialize2.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "4: class myTestObject {",
          "5:     public $test = \"test\";",
          "6:     public $sub = \"\";",
          "7: }",
          "9: class mySubObject {",
          "10:     public $sub = \"sub\";",
          "11:     public $default = \"\";",
          "12: }",
          "13: $arr = new myTestObject();",
          "14: $arr->sub = new mySubObject();",
          "15: $arr->sub->default = new stdclass();",
          "16: $obj = new \\Swoole\\Serialize();",
          "17: $ser = $obj->pack($arr);",
          "20: $ser2 = $obj->pack($arr,SWOOLE_FAST_PACK);",
          "22: var_dump($obj->unpack($ser));",
          "23: var_dump($obj->unpack($ser2));",
          "24: var_dump($obj->unpack($ser, UNSERIALIZE_OBJECT_TO_STDCLASS));",
          "25: var_dump($obj->unpack($ser2, UNSERIALIZE_OBJECT_TO_STDCLASS));",
          "26: var_dump(UNSERIALIZE_OBJECT_TO_ARRAY);",
          "27: var_dump(UNSERIALIZE_OBJECT_TO_STDCLASS);",
          "29: ?>",
          "",
          "---------------"
        ],
        "php_swoole.h||php_swoole.h": [
          "File: php_swoole.h -> php_swoole.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "449: #if PHP_MAJOR_VERSION >= 7",
          "450: PHPAPI zend_string* php_swoole_serialize(zval *zvalue);",
          "452: #endif",
          "454: static sw_inline zval* php_swoole_server_get_callback(swServer *serv, int server_fd, int event_type)",
          "",
          "[Removed Lines]",
          "451: PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value, zval *object_args);",
          "",
          "[Added Lines]",
          "451: PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value, zval *object_args, long flag);",
          "",
          "---------------"
        ],
        "swoole_serialize.c||swoole_serialize.c": [
          "File: swoole_serialize.c -> swoole_serialize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: static void swoole_serialize_object(seriaString *buffer, zval *zvalue, size_t start);",
          "37: static void swoole_serialize_arr(seriaString *buffer, zend_array *zvalue);",
          "41: static PHP_METHOD(swoole_serialize, pack);",
          "42: static PHP_METHOD(swoole_serialize, unpack);",
          "",
          "[Removed Lines]",
          "38: static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t num);",
          "39: static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uchar bucket_len, zval *args);",
          "",
          "[Added Lines]",
          "38: static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t num, long flag);",
          "39: static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uchar bucket_len, zval *args, long flag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     memset(&mini_filter, 0, sizeof (mini_filter));",
          "68:     REGISTER_LONG_CONSTANT(\"SWOOLE_FAST_PACK\", SW_FAST_PACK, CONST_CS | CONST_PERSISTENT);",
          "69: }",
          "71: static CPINLINE int swoole_string_new(size_t size, seriaString *str, zend_uchar type)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     REGISTER_LONG_CONSTANT(\"UNSERIALIZE_OBJECT_TO_ARRAY\", UNSERIALIZE_OBJECT_TO_ARRAY, CONST_CS | CONST_PERSISTENT);",
          "70:     REGISTER_LONG_CONSTANT(\"UNSERIALIZE_OBJECT_TO_STDCLASS\", UNSERIALIZE_OBJECT_TO_STDCLASS, CONST_CS | CONST_PERSISTENT);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "639: {",
          "641:     zend_ulong h, nIndex, max_index = 0;",
          "",
          "[Removed Lines]",
          "638: static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfElements)",
          "",
          "[Added Lines]",
          "640: static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfElements, long flag)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "803:         {",
          "804:             uint32_t num = 0;",
          "805:             buffer = get_array_real_len(buffer, type.data_len, &num);",
          "807:         }",
          "808:         else if (type.data_type == IS_LONG)",
          "809:         {",
          "",
          "[Removed Lines]",
          "806:             buffer = swoole_unserialize_arr(buffer, &p->val, num);",
          "",
          "[Added Lines]",
          "808:             buffer = swoole_unserialize_arr(buffer, &p->val, num, flag);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "816:         }",
          "817:         else if (type.data_type == IS_UNDEF)",
          "818:         {",
          "820:             Z_TYPE_INFO(p->val) = IS_OBJECT_EX;",
          "821:         }",
          "",
          "[Removed Lines]",
          "819:             buffer = swoole_unserialize_object(buffer, &p->val, type.data_len, NULL);",
          "",
          "[Added Lines]",
          "821:             buffer = swoole_unserialize_object(buffer, &p->val, type.data_len, NULL, flag);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1249: {",
          "1250:     zval property;",
          "1251:     uint32_t arr_num = 0;",
          "",
          "[Removed Lines]",
          "1248: static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uchar bucket_len, zval *args)",
          "",
          "[Added Lines]",
          "1250: static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uchar bucket_len, zval *args, long flag)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1256:         return NULL;",
          "1257:     }",
          "1258:     buffer += 2;",
          "1260:     buffer += name_len;",
          "1262:     zend_class_entry *ce = swoole_try_get_ce(class_name);",
          "1263:     swoole_string_release(class_name);",
          "",
          "[Removed Lines]",
          "1259:     zend_string *class_name = swoole_string_init((char*) buffer, name_len);",
          "",
          "[Added Lines]",
          "1261:     zend_string *class_name;",
          "1262:     if (flag == UNSERIALIZE_OBJECT_TO_STDCLASS)",
          "1263:     {",
          "1264:         class_name = swoole_string_init(\"StdClass\", 8);",
          "1265:     }",
          "1266:     else",
          "1267:     {",
          "1268:         class_name = swoole_string_init((char*) buffer, name_len);",
          "1269:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1268:     }",
          "1270:     buffer = get_array_real_len(buffer, bucket_len, &arr_num);",
          "1273:     object_init_ex(return_value, ce);",
          "",
          "[Removed Lines]",
          "1271:     buffer = swoole_unserialize_arr(buffer, &property, arr_num);",
          "",
          "[Added Lines]",
          "1280:     buffer = swoole_unserialize_arr(buffer, &property, arr_num, flag);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1432: {",
          "1433:     SBucketType type = *(SBucketType*) (buffer);",
          "1434:     zend_uchar real_type = type.data_type;",
          "",
          "[Removed Lines]",
          "1431: PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value, zval *object_args)",
          "",
          "[Added Lines]",
          "1440: PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value, zval *object_args, long flag)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1463:             unser_start = buffer - sizeof (SBucketType);",
          "1464:             uint32_t num = 0;",
          "1465:             buffer = get_array_real_len(buffer, type.data_len, &num);",
          "1467:             {",
          "1468:                 return SW_FALSE;",
          "1469:             }",
          "",
          "[Removed Lines]",
          "1466:             if (!swoole_unserialize_arr(buffer, return_value, num))",
          "",
          "[Added Lines]",
          "1475:             if (!swoole_unserialize_arr(buffer, return_value, num, flag))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1476:                   return SW_FALSE;",
          "1477:             }",
          "1478:             unser_start = buffer - sizeof (SBucketType);",
          "1480:             {",
          "1481:                 return SW_FALSE;",
          "1482:             }",
          "",
          "[Removed Lines]",
          "1479:             if (!swoole_unserialize_object(buffer, return_value, type.data_len, object_args))",
          "",
          "[Added Lines]",
          "1488:             if (!swoole_unserialize_object(buffer, return_value, type.data_len, object_args, flag))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1509:     char *buffer = NULL;",
          "1510:     size_t arg_len;",
          "1511:     zval *args = NULL; //for object",
          "1514:     {",
          "1515:         RETURN_FALSE;",
          "1516:     }",
          "1518:     {",
          "1519:         RETURN_FALSE;",
          "1520:     }",
          "",
          "[Removed Lines]",
          "1513:     if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|a\", &buffer, &arg_len, &args) == FAILURE)",
          "1517:     if (!php_swoole_unserialize(buffer, arg_len, return_value, args))",
          "",
          "[Added Lines]",
          "1521:     long flag = 0;",
          "1523:     if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|la\", &buffer, &arg_len, &flag, &args) == FAILURE)",
          "1527:     if (!php_swoole_unserialize(buffer, arg_len, return_value, args, flag))",
          "",
          "---------------"
        ],
        "swoole_serialize.h||swoole_serialize.h": [
          "File: swoole_serialize.h -> swoole_serialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "109: #define SW_FAST_PACK                  1",
          "111: #endif",
          "113: #ifdef __cplusplus",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111: #define UNSERIALIZE_OBJECT_TO_ARRAY          1",
          "112: #define UNSERIALIZE_OBJECT_TO_STDCLASS       2",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3970369f0a41a21fbfa166852e97b09ceaee8df6",
      "candidate_info": {
        "commit_hash": "3970369f0a41a21fbfa166852e97b09ceaee8df6",
        "repo": "swoole/swoole-src",
        "commit_url": "https://github.com/swoole/swoole-src/commit/3970369f0a41a21fbfa166852e97b09ceaee8df6",
        "files": [
          "swoole_client.c",
          "swoole_event.c",
          "swoole_runtime.cc",
          "swoole_serialize.c"
        ],
        "message": "Code optimization",
        "before_after_code_files": [
          "swoole_client.c||swoole_client.c",
          "swoole_event.c||swoole_event.c",
          "swoole_runtime.cc||swoole_runtime.cc",
          "swoole_serialize.c||swoole_serialize.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "swoole_serialize.c||swoole_serialize.c"
          ],
          "candidate": [
            "swoole_serialize.c||swoole_serialize.c"
          ]
        }
      },
      "candidate_diff": {
        "swoole_client.c||swoole_client.c": [
          "File: swoole_client.c -> swoole_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "876: #endif",
          "877: }",
          "931: void php_swoole_client_free(zval *zobject, swClient *cli TSRMLS_DC)",
          "932: {",
          "933:     if (cli->timer)",
          "",
          "[Removed Lines]",
          "879: void php_swoole_check_reactor()",
          "880: {",
          "881:     if (SwooleWG.reactor_init)",
          "882:     {",
          "883:         return;",
          "884:     }",
          "886:     if (!SWOOLE_G(cli))",
          "887:     {",
          "888:         swoole_php_fatal_error(E_ERROR, \"async-io must be used in PHP CLI mode.\");",
          "889:         return;",
          "890:     }",
          "892:     if (swIsTaskWorker())",
          "893:     {",
          "894:         swoole_php_fatal_error(E_ERROR, \"can't use async-io in task process.\");",
          "895:         return;",
          "896:     }",
          "898:     if (SwooleG.main_reactor == NULL)",
          "899:     {",
          "900:         swTraceLog(SW_TRACE_PHP, \"init reactor\");",
          "902:         SwooleG.main_reactor = (swReactor *) sw_malloc(sizeof(swReactor));",
          "903:         if (SwooleG.main_reactor == NULL)",
          "904:         {",
          "905:             swoole_php_fatal_error(E_ERROR, \"malloc failed.\");",
          "906:             return;",
          "907:         }",
          "908:         if (swReactor_create(SwooleG.main_reactor, SW_REACTOR_MAXEVENTS) < 0)",
          "909:         {",
          "910:             swoole_php_fatal_error(E_ERROR, \"failed to create reactor.\");",
          "911:             return;",
          "912:         }",
          "914: #ifdef SW_COROUTINE",
          "915:         SwooleG.main_reactor->can_exit = php_coroutine_reactor_can_exit;",
          "916: #endif",
          "919:         SwooleWG.in_client = 1;",
          "920:         SwooleWG.reactor_wait_onexit = 1;",
          "921:         SwooleWG.reactor_ready = 0;",
          "923:         php_swoole_at_shutdown(\"swoole_event_wait\");",
          "924:     }",
          "926:     php_swoole_event_init();",
          "928:     SwooleWG.reactor_init = 1;",
          "929: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "swoole_event.c||swoole_event.c": [
          "File: swoole_event.c -> swoole_event.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:     }",
          "202: }",
          "205: {",
          "206:     SwooleG.main_reactor->setHandle(SwooleG.main_reactor, SW_FD_USER | SW_EVENT_READ, php_swoole_event_onRead);",
          "207:     SwooleG.main_reactor->setHandle(SwooleG.main_reactor, SW_FD_USER | SW_EVENT_WRITE, php_swoole_event_onWrite);",
          "208:     SwooleG.main_reactor->setHandle(SwooleG.main_reactor, SW_FD_USER | SW_EVENT_ERROR, php_swoole_event_onError);",
          "209:     SwooleG.main_reactor->setHandle(SwooleG.main_reactor, SW_FD_WRITE, swReactor_onWrite);",
          "210: }",
          "212: void php_swoole_event_wait()",
          "",
          "[Removed Lines]",
          "204: void php_swoole_event_init(void)",
          "",
          "[Added Lines]",
          "204: void php_swoole_check_reactor()",
          "206:     if (likely(SwooleWG.reactor_init))",
          "207:     {",
          "208:         return;",
          "209:     }",
          "211:     if (!SWOOLE_G(cli))",
          "212:     {",
          "213:         swoole_php_fatal_error(E_ERROR, \"async-io must be used in PHP CLI mode.\");",
          "214:         return;",
          "215:     }",
          "217:     if (swIsTaskWorker())",
          "218:     {",
          "219:         swoole_php_fatal_error(E_ERROR, \"can't use async-io in task process.\");",
          "220:         return;",
          "221:     }",
          "223:     if (SwooleG.main_reactor == NULL)",
          "224:     {",
          "225:         swTraceLog(SW_TRACE_PHP, \"init reactor\");",
          "227:         SwooleG.main_reactor = (swReactor *) sw_malloc(sizeof(swReactor));",
          "228:         if (SwooleG.main_reactor == NULL)",
          "229:         {",
          "230:             swoole_php_fatal_error(E_ERROR, \"malloc failed.\");",
          "231:             return;",
          "232:         }",
          "233:         if (swReactor_create(SwooleG.main_reactor, SW_REACTOR_MAXEVENTS) < 0)",
          "234:         {",
          "235:             swoole_php_fatal_error(E_ERROR, \"failed to create reactor.\");",
          "236:             return;",
          "237:         }",
          "239: #ifdef SW_COROUTINE",
          "240:         SwooleG.main_reactor->can_exit = php_coroutine_reactor_can_exit;",
          "241: #endif",
          "244:         SwooleWG.in_client = 1;",
          "245:         SwooleWG.reactor_wait_onexit = 1;",
          "246:         SwooleWG.reactor_ready = 0;",
          "248:         php_swoole_at_shutdown(\"swoole_event_wait\");",
          "249:     }",
          "256:     SwooleWG.reactor_init = 1;",
          "",
          "---------------"
        ],
        "swoole_runtime.cc||swoole_runtime.cc": [
          "File: swoole_runtime.cc -> swoole_runtime.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:     return 0;",
          "333: }",
          "336:         const char *persistent_id, int options, int flags, struct timeval *timeout, php_stream_context *context",
          "337:         STREAMS_DC)",
          "338: {",
          "339:     php_stream *stream = NULL;",
          "340:     Socket *sock;",
          "341:     if (strncmp(proto, \"unix\", protolen) == 0)",
          "342:     {",
          "343:         sock = new Socket(SW_SOCK_UNIX_STREAM);",
          "",
          "[Removed Lines]",
          "335: static php_stream *socket_factory(const char *proto, size_t protolen, const char *resourcename, size_t resourcenamelen,",
          "",
          "[Added Lines]",
          "335: static php_stream *socket_create(const char *proto, size_t protolen, const char *resourcename, size_t resourcenamelen,",
          "342:     if (unlikely(COROG.active == 0))",
          "343:     {",
          "344:         coro_init(TSRMLS_C);",
          "345:     }",
          "346:     php_swoole_check_reactor();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:     if (enable)",
          "369:     {",
          "371:         {",
          "372:             RETURN_FALSE;",
          "373:         }",
          "374:         hook_init = true;",
          "382:     }",
          "383:     else",
          "384:     {",
          "",
          "[Removed Lines]",
          "370:         if (hook_init)",
          "375:         if (COROG.active == 0)",
          "376:         {",
          "377:             coro_init(TSRMLS_C);",
          "378:         }",
          "379:         php_swoole_check_reactor();",
          "380:         php_stream_xport_register(\"tcp\", socket_factory);",
          "381:         php_stream_xport_register(\"unix\", socket_factory);",
          "",
          "[Added Lines]",
          "377:         if (likely(hook_init))",
          "382:         php_stream_xport_register(\"tcp\", socket_create);",
          "383:         php_stream_xport_register(\"unix\", socket_create);",
          "",
          "---------------"
        ],
        "swoole_serialize.c||swoole_serialize.c": [
          "File: swoole_serialize.c -> swoole_serialize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: #define CHECK_STEP if(buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
          "57: static struct _swSeriaG swSeriaG;",
          "60: void swoole_serialize_init(int module_number TSRMLS_DC)",
          "61: {",
          "",
          "[Removed Lines]",
          "58: char *unseri_buffer_end = NULL;",
          "",
          "[Added Lines]",
          "58: void *unseri_buffer_end = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54ab1eea20dcddff5f5176ae08b73f783f1fb284",
      "candidate_info": {
        "commit_hash": "54ab1eea20dcddff5f5176ae08b73f783f1fb284",
        "repo": "swoole/swoole-src",
        "commit_url": "https://github.com/swoole/swoole-src/commit/54ab1eea20dcddff5f5176ae08b73f783f1fb284",
        "files": [
          "swoole_serialize.c"
        ],
        "message": "Warning free.",
        "before_after_code_files": [
          "swoole_serialize.c||swoole_serialize.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "swoole_serialize.c||swoole_serialize.c"
          ],
          "candidate": [
            "swoole_serialize.c||swoole_serialize.c"
          ]
        }
      },
      "candidate_diff": {
        "swoole_serialize.c||swoole_serialize.c": [
          "File: swoole_serialize.c -> swoole_serialize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: zend_class_entry *swoole_serialize_class_entry_ptr;",
          "54: #define SWOOLE_SERI_EOF \"EOF\"",
          "57: static struct _swSeriaG swSeriaG;",
          "58: char *unseri_buffer_end = NULL;",
          "",
          "[Removed Lines]",
          "55: #define CHECK_STEP if(buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
          "",
          "[Added Lines]",
          "55: #define CHECK_STEP if((char*)buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}",
          "",
          "---------------"
        ]
      }
    }
  ]
}