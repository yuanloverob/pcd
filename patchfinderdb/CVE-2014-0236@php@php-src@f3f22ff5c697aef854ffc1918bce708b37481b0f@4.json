{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "031cafd4e2670992f5e45d281ab3a5eb666748c5",
      "candidate_info": {
        "commit_hash": "031cafd4e2670992f5e45d281ab3a5eb666748c5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/031cafd4e2670992f5e45d281ab3a5eb666748c5",
        "files": [
          "ext/fileinfo/libmagic/strcasestr.c"
        ],
        "message": "added missing stdint header, bug #66907",
        "before_after_code_files": [
          "ext/fileinfo/libmagic/strcasestr.c||ext/fileinfo/libmagic/strcasestr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/fileinfo/libmagic/strcasestr.c||ext/fileinfo/libmagic/strcasestr.c": [
          "File: ext/fileinfo/libmagic/strcasestr.c -> ext/fileinfo/libmagic/strcasestr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: __RCSID(\"$NetBSD: strncasecmp.c,v 1.2 2007/06/04 18:19:27 christos Exp $\");",
          "40: #include <assert.h>",
          "41: #include <ctype.h>",
          "42: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: #include \"php_stdint.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "959a006d6149b60278cd76a5289a6ecda925ed03",
      "candidate_info": {
        "commit_hash": "959a006d6149b60278cd76a5289a6ecda925ed03",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/959a006d6149b60278cd76a5289a6ecda925ed03",
        "files": [
          "ext/intl/tests/dateformat_localtime.phpt"
        ],
        "message": "Fixed test",
        "before_after_code_files": [
          "ext/intl/tests/dateformat_localtime.phpt||ext/intl/tests/dateformat_localtime.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/intl/tests/dateformat_localtime.phpt||ext/intl/tests/dateformat_localtime.phpt": [
          "File: ext/intl/tests/dateformat_localtime.phpt -> ext/intl/tests/dateformat_localtime.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: --SKIPIF--",
          "4: <?php if( !extension_loaded( 'intl' ) ) print 'skip'; ?>",
          "5: <?php if(version_compare(INTL_ICU_VERSION, '4.3', '<') != 1) print 'skip'; ?>",
          "6: --FILE--",
          "7: <?php",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: --INI--",
          "7: date.timezone=UTC",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b9367971d9523bc53d44cbe71498a95bd5e523b",
      "candidate_info": {
        "commit_hash": "7b9367971d9523bc53d44cbe71498a95bd5e523b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/7b9367971d9523bc53d44cbe71498a95bd5e523b",
        "files": [
          "tests/commands/0002_set.test",
          "tests/commands/0103_register.test",
          "tests/commands/0106_compile.test",
          "tests/run-tests.php"
        ],
        "message": "Fix tests",
        "before_after_code_files": [
          "tests/commands/0002_set.test||tests/commands/0002_set.test",
          "tests/commands/0103_register.test||tests/commands/0103_register.test",
          "tests/commands/0106_compile.test||tests/commands/0106_compile.test",
          "tests/run-tests.php||tests/run-tests.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/commands/0002_set.test||tests/commands/0002_set.test": [
          "File: tests/commands/0002_set.test -> tests/commands/0002_set.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: # setting notice color",
          "10: # Failed to find breakpoint #0",
          "11: # oplog disabled",
          "13: # opened oplog test.log",
          "14: # nothing",
          "15: #################################################",
          "",
          "[Removed Lines]",
          "12: # not enabled",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19: set prompt promot>",
          "20: set break 0",
          "21: set oplog",
          "23: set oplog test.log",
          "",
          "[Removed Lines]",
          "22: set oplog 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/commands/0103_register.test||tests/commands/0103_register.test": [
          "File: tests/commands/0103_register.test -> tests/commands/0103_register.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: #[Registered test_function]",
          "8: #array(5) {",
          "9: #  [0]=>",
          "11: #  [1]=>",
          "13: #  [2]=>",
          "15: #  [3]=>",
          "17: #  [4]=>",
          "19: #}",
          "20: #################################################",
          "21: <:",
          "",
          "[Removed Lines]",
          "10: #  string(1) \"1\"",
          "12: #  string(1) \"2\"",
          "14: #  string(1) \"3\"",
          "16: #  string(1) \"4\"",
          "18: #  string(1) \"5\"",
          "",
          "[Added Lines]",
          "10: #  int(1)",
          "12: #  int(2)",
          "14: #  int(3)",
          "16: #  int(4)",
          "18: #  int(5)",
          "",
          "---------------"
        ],
        "tests/commands/0106_compile.test||tests/commands/0106_compile.test": [
          "File: tests/commands/0106_compile.test -> tests/commands/0106_compile.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: file_put_contents(OUT, \"<?php echo \\\"Hello World\\\"; ?>\");",
          "15: phpdbg_exec(OUT);",
          "16: :>",
          "18: run",
          "19: quit",
          "",
          "[Removed Lines]",
          "17: compile",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/run-tests.php||tests/run-tests.php": [
          "File: tests/run-tests.php -> tests/run-tests.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:     $test->purpose,",
          "285:     $result ? \"PASS\" : \"FAIL\",",
          "286:     PHP_EOL);",
          "287:   }",
          "289:   protected $config;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:    return $result;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "427:   public function getResult() {",
          "428:    $options = sprintf(",
          "431:    if ($this->options) {",
          "432:     $options = sprintf(",
          "",
          "[Removed Lines]",
          "429:     '-i%s -qb', $this->file);",
          "",
          "[Added Lines]",
          "431:     '-i%s -nqb', $this->file);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "494:   protected function writeDiff() {",
          "499:    if (count($this->diff['wants'])) {",
          "503:       foreach ($this->diff['wants'] as $line => $want) {",
          "504:        $got = $this->diff['gets'][$line];",
          "",
          "[Removed Lines]",
          "495:    $diff = sprintf(",
          "496:     '%s/%s.diff',",
          "497:     dirname($this->file), basename($this->file));",
          "500:     if (!in_array('nodiff', $this->config['flags'])) {",
          "501:      if (($diff = fopen($diff, 'w+'))) {",
          "",
          "[Added Lines]",
          "498:     if (!$this->config->hasFlag('nodiff')) {",
          "499:      if ($this->config->hasFlag('diff2stdout')) {",
          "500:       $difffile = \"php://stdout\";",
          "501:       file_put_contents($difffile, \"====DIFF====\\n\");",
          "502:      } else {",
          "503:       $difffile = sprintf(",
          "504:        '%s/%s.diff',",
          "505:        dirname($this->file), basename($this->file));",
          "506:      }",
          "508:      if (($diff = fopen($difffile, 'w+'))) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "553:  $cwd = dirname(__FILE__);",
          "554:  $cmd = $_SERVER['argv'];",
          "555:  {",
          "556:   $config = new TestsConfiguration(array(",
          "557:    'exec' => realpath(array_shift($cmd)),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "563:  $retval = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571:    $tests->logPath($path);",
          "573:    foreach ($tests->findTests($path) as $test) {",
          "575:    }",
          "577:    $tests->logPathStats($path);",
          "",
          "[Removed Lines]",
          "574:     $tests->logTest($path, $test);",
          "",
          "[Added Lines]",
          "584:     $retval |= !$tests->logTest($path, $test);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "580:   $tests->logStats();",
          "581:  }",
          "582: }",
          "583: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "593:  die($retval);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65c2001acd6dcc178efdd635c009daea382543df",
      "candidate_info": {
        "commit_hash": "65c2001acd6dcc178efdd635c009daea382543df",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/65c2001acd6dcc178efdd635c009daea382543df",
        "files": [
          "travis/ci.sh"
        ],
        "message": "Fixed order in travis script",
        "before_after_code_files": [
          "travis/ci.sh||travis/ci.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "travis/ci.sh||travis/ci.sh": [
          "File: travis/ci.sh -> travis/ci.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env sh",
          "2: git clone https://github.com/php/php-src",
          "3: git checkout $PHP",
          "5: rm -rf phpdbg",
          "6: git clone https://github.com/krakjoe/phpdbg.git",
          "7: cd ../",
          "",
          "[Removed Lines]",
          "4: cd php-src/sapi",
          "",
          "[Added Lines]",
          "3: cd php-src",
          "5: cd sapi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfccdc63628944cde2c9fe9bfbc897cce3e22dc5",
      "candidate_info": {
        "commit_hash": "cfccdc63628944cde2c9fe9bfbc897cce3e22dc5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/cfccdc63628944cde2c9fe9bfbc897cce3e22dc5",
        "files": [
          "Zend/tests/dereference_002.phpt",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "ext/mysqli/tests/bug33491.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt"
        ],
        "message": "Bug 64744 Show the type of the non-object for more descriptive errors",
        "before_after_code_files": [
          "Zend/tests/dereference_002.phpt||Zend/tests/dereference_002.phpt",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "ext/mysqli/tests/bug33491.phpt||ext/mysqli/tests/bug33491.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt||ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt||ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt||ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt",
          "ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt||ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Zend/tests/dereference_002.phpt||Zend/tests/dereference_002.phpt": [
          "File: Zend/tests/dereference_002.phpt -> Zend/tests/dereference_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: Notice: Undefined offset: 3 in %s on line %d",
          "",
          "[Removed Lines]",
          "79: Fatal error: Call to a member function bar() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "79: Fatal error: Call to a member function bar() on null in %s on line %d",
          "",
          "---------------"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2463:    FREE_OP2();",
          "2464:    HANDLE_EXCEPTION();",
          "2465:   }",
          "2467:  }",
          "2469:  if ((call->fbc->common.fn_flags & ZEND_ACC_STATIC) != 0) {",
          "",
          "[Removed Lines]",
          "2466:   zend_error_noreturn(E_ERROR, \"Call to a member function %s() on a non-object\", function_name_strval);",
          "",
          "[Added Lines]",
          "2466:   zend_error_noreturn(E_ERROR, \"Call to a member function %s() on %s\", function_name_strval, zend_get_type_by_const(Z_TYPE_P(call->object)));",
          "",
          "---------------"
        ],
        "ext/mysqli/tests/bug33491.phpt||ext/mysqli/tests/bug33491.phpt": [
          "File: ext/mysqli/tests/bug33491.phpt -> ext/mysqli/tests/bug33491.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: ?>",
          "28: --EXPECTF--",
          "",
          "[Removed Lines]",
          "29: Fatal error: Call to a member function fetch_row() on a non-object in %sbug33491.php on line %d",
          "",
          "[Added Lines]",
          "29: Fatal error: Call to a member function fetch_row() on boolean in %sbug33491.php on line %d",
          "",
          "---------------"
        ],
        "ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt||ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt": [
          "File: ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt -> ext/pdo_mysql/tests/pdo_mysql_prepare_native_clear_error.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: Warning: PDO::prepare(): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'unknown_column' in 'field list' in %s on line %d",
          "",
          "[Removed Lines]",
          "96: Fatal error: Call to a member function execute() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt||ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt": [
          "File: ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt -> ext/pdo_mysql/tests/pdo_mysql_prepare_native_mixed_style.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: Warning: PDO::prepare(): SQLSTATE[HY093]: Invalid parameter number in %s on line %d",
          "",
          "[Removed Lines]",
          "39: Fatal error: Call to a member function execute() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt||ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt": [
          "File: ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt -> ext/pdo_mysql/tests/pdo_mysql_stmt_errorcode.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: Warning: PDO::prepare(): SQLSTATE[42S02]: Base table or view not found: 1146 Table '%s.ihopeitdoesnotexist' doesn't exist in %s on line %d",
          "",
          "[Removed Lines]",
          "59: Fatal error: Call to a member function execute() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt||ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt": [
          "File: ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt -> ext/pdo_mysql/tests/pdo_mysql_stmt_multiquery.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "100: Warning: PDO::query(): SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%SSELECT label FROM test ORDER BY id ASC LIMIT 1' at line %d in %s on line %d",
          "",
          "[Removed Lines]",
          "102: Fatal error: Call to a member function errorInfo() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "102: Fatal error: Call to a member function errorInfo() on boolean in %s on line %d",
          "",
          "---------------"
        ]
      }
    }
  ]
}