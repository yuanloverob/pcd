{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "70738712deac70dbadd5692edd6135494eed6a12",
      "candidate_info": {
        "commit_hash": "70738712deac70dbadd5692edd6135494eed6a12",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/70738712deac70dbadd5692edd6135494eed6a12",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Improved type information display when tracing VDBE execution.\n\nFossilOrigin-Name: ee83d8e30d6f9ca8f1cce653ee094ff151f633f4b6a21dd814ab07e8cfb901eb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6fe0367f9a337b7c62886b7771f3ce0642faa13f4e4f3d9a0c848abbab514cd0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c"
        ]
      }
    },
    {
      "candidate_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
      "candidate_info": {
        "commit_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "files": [
          "ext/rtree/rtree.c",
          "ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Be strict about type enforcement on rowid look-ups in the RTREE extension. Ticket [30e2c183b6b356e4]\n\nFossilOrigin-Name: d43e0efb9642037dd751cfed13438e71cfceb50e14a0ec603880c6c3be2e93b1",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "ext/rtree/rtree1.test||ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1818:     i64 iRowid = sqlite3_value_int64(argv[0]);",
          "1819:     i64 iNode = 0;",
          "1821:     if( rc==SQLITE_OK && pLeaf!=0 ){",
          "1822:       p = rtreeSearchPointNew(pCsr, RTREE_ZERO, 0);",
          "",
          "[Removed Lines]",
          "1820:     rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "",
          "[Added Lines]",
          "1820:     int eType = sqlite3_value_numeric_type(argv[0]);",
          "1821:     if( eType==SQLITE_INTEGER",
          "1822:      || (eType==SQLITE_FLOAT && sqlite3_value_double(argv[0])==iRowid)",
          "1823:     ){",
          "1824:       rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "1825:     }else{",
          "1826:       rc = SQLITE_OK;",
          "1827:       pLeaf = 0;",
          "1828:     }",
          "",
          "---------------"
        ],
        "ext/rtree/rtree1.test||ext/rtree/rtree1.test": [
          "File: ext/rtree/rtree1.test -> ext/rtree/rtree1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:   1 0.0 0.0",
          "602:   2 52.0 81.0",
          "603: }",
          "606:   DROP TABLE t10;",
          "607:   CREATE VIRTUAL TABLE t10 USING rtree_i32(ii, x1, x2);",
          "608:   INSERT INTO t10 VALUES(1, 'one', 'two');",
          "609:   INSERT INTO t10 VALUES(2, '52xyz', '81...');",
          "610:   INSERT INTO t10 VALUES(3, 42.3, 49.9);",
          "611: }",
          "613:   SELECT * FROM t10;",
          "614: } {",
          "615:   1 0 0",
          "",
          "[Removed Lines]",
          "605: do_execsql_test 14.4 {",
          "612: do_execsql_test 14.5 {",
          "",
          "[Added Lines]",
          "604: do_execsql_test 14.6 {",
          "605:   INSERT INTO t10 VALUES(0,10,20);",
          "606:   SELECT * FROM t10 WHERE ii=NULL;",
          "607: } {}",
          "608: do_execsql_test 14.7 {",
          "609:   SELECT * FROM t10 WHERE ii='xyz';",
          "610: } {}",
          "611: do_execsql_test 14.8 {",
          "612:   SELECT * FROM t10 WHERE ii='0.0';",
          "613: } {0 10.0 20.0}",
          "614: do_execsql_test 14.9 {",
          "615:   SELECT * FROM t10 WHERE ii=0.0;",
          "616: } {0 10.0 20.0}",
          "619: do_execsql_test 14.104 {",
          "626: do_execsql_test 14.105 {",
          "",
          "---------------"
        ],
        "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test": [
          "File: ext/rtree/rtreeH.test -> ext/rtree/rtreeH.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: do_execsql_test rtreeH-102 {",
          "44:   SELECT * FROM t1 WHERE rowid=5;",
          "45: } {5 40.0 60.0 40.0 60.0 center {}}",
          "46: do_execsql_test rtreeH-103 {",
          "47:   SELECT * FROM t1 WHERE label='center';",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "50: do_rtree_integrity_test rtreeH-110 t1",
          "52: do_execsql_test rtreeH-120 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: do_execsql_test rtreeH-102b {",
          "47:   SELECT * FROM t1 WHERE rowid=5.0;",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "49: do_execsql_test rtreeH-102c {",
          "50:   SELECT * FROM t1 WHERE rowid='5';",
          "51: } {5 40.0 60.0 40.0 60.0 center {}}",
          "52: do_execsql_test rtreeH-102d {",
          "53:   SELECT * FROM t1 WHERE rowid='0005';",
          "54: } {5 40.0 60.0 40.0 60.0 center {}}",
          "55: do_execsql_test rtreeH-102e {",
          "56:   SELECT * FROM t1 WHERE rowid='+5.0e+0';",
          "57: } {5 40.0 60.0 40.0 60.0 center {}}",
          "62: do_execsql_test rtreeH-104 {",
          "63:   SELECT * FROM t1 WHERE rowid='+5.0e+0x';",
          "64: } {}",
          "65: do_execsql_test rtreeH-105 {",
          "66:   SELECT * FROM t1 WHERE rowid=x'35';",
          "67: } {}",
          "68: do_execsql_test rtreeH-106 {",
          "69:   SELECT * FROM t1 WHERE rowid=null;",
          "70: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f898d04cf272ef0130dcae146cb86d8630b10a6f19aecfc2fa70e97e082bd51c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
      "candidate_info": {
        "commit_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/vdbeaux.c",
          "test/altertab3.test"
        ],
        "message": "Ensure that ALTER TABLE commands open statement transactions. Fix for [596d059a].\n\nFossilOrigin-Name: 0f2129f59f7df929106e2af876c2976dea6528c1dc1850d64cddb256f20e121a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fb60150aeedc3898cb249c75c98a7cb48fcec090f94ded7896b634e436c7daa5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   }",
          "167: #endif",
          "174:   v = sqlite3GetVdbe(pParse);",
          "175:   if( v==0 ){",
          "176:     goto exit_rename_table;",
          "177:   }",
          "180:   zTabName = pTab->zName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:   sqlite3MayAbort(pParse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:     int i = ++pParse->nMem;",
          "244:     sqlite3VdbeLoadString(v, i, zName);",
          "245:     sqlite3VdbeAddOp4(v, OP_VRename, i, 0, 0,(const char*)pVTab, P4_VTAB);",
          "247:   }",
          "248: #endif",
          "",
          "[Removed Lines]",
          "246:     sqlite3MayAbort(pParse);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "567:   zNew = sqlite3NameFromToken(db, pNew);",
          "568:   if( !zNew ) goto exit_rename_column;",
          "569:   assert( pNew->n>0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:   sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:     int opcode = pOp->opcode;",
          "638:     if( opcode==OP_Destroy || opcode==OP_VUpdate || opcode==OP_VRename",
          "639:      || opcode==OP_VDestroy",
          "640:      || ((opcode==OP_Halt || opcode==OP_HaltIfNull)",
          "641:       && ((pOp->p1)!=SQLITE_OK && pOp->p2==OE_Abort))",
          "642:     ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "640:      || (opcode==OP_Function0 && pOp->p4.pFunc->funcFlags&SQLITE_FUNC_INTERNAL)",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "86: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: #-------------------------------------------------------------------------",
          "85: reset_db",
          "86: do_execsql_test 4.0 {",
          "87:   CREATE TABLE t1(a, b);",
          "88:   CREATE TABLE t3(e, f);",
          "89:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "90:     INSERT INTO t2 VALUES(new.a, new.b);",
          "91:   END;",
          "92: }",
          "94: do_catchsql_test 4.1.2 {",
          "95:   BEGIN;",
          "96:     ALTER TABLE t3 RENAME TO t4;",
          "97: } {1 {error in trigger tr1: no such table: main.t2}}",
          "98: do_execsql_test 4.1.2 {",
          "99:   COMMIT;",
          "100: }",
          "101: do_execsql_test 4.1.3 {",
          "102:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "103: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "106: do_catchsql_test 4.2.1 {",
          "107:   BEGIN;",
          "108:     ALTER TABLE t3 RENAME e TO eee;",
          "109: } {1 {error in trigger tr1: no such table: main.t2}}",
          "110: do_execsql_test 4.2.2 {",
          "111:   COMMIT;",
          "112: }",
          "113: do_execsql_test 4.2.3 {",
          "114:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "115: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "174c21ff06fd8e31b6ad415fdadf5b50c1225443",
      "candidate_info": {
        "commit_hash": "174c21ff06fd8e31b6ad415fdadf5b50c1225443",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/174c21ff06fd8e31b6ad415fdadf5b50c1225443",
        "files": [
          "ext/fts5/fts5_buffer.c",
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix further problems with fts5 and corrupt databases causing integer overflow.\n\nFossilOrigin-Name: 673a7dd698eca05bb2909fa01f962a0667361732a6d0e61cf7780ead4a07c967",
        "before_after_code_files": [
          "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c": [
          "File: ext/fts5/fts5_buffer.c -> ext/fts5/fts5_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){",
          "19:   if( (u32)pBuf->nSpace<nByte ){",
          "21:     u8 *pNew;",
          "22:     while( nNew<nByte ){",
          "23:       nNew = nNew * 2;",
          "24:     }",
          "26:     if( pNew==0 ){",
          "28:       return 1;",
          "",
          "[Removed Lines]",
          "20:     u32 nNew = pBuf->nSpace ? pBuf->nSpace : 64;",
          "25:     pNew = sqlite3_realloc(pBuf->p, nNew);",
          "",
          "[Added Lines]",
          "20:     u64 nNew = pBuf->nSpace ? pBuf->nSpace : 64;",
          "25:     pNew = sqlite3_realloc64(pBuf->p, nNew);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2234:   int szLeaf = pIter->pLeaf->szLeaf;",
          "2235:   int n = pIter->pLeaf->nn;",
          "2242:   int bEndOfPage = 0;",
          "",
          "[Removed Lines]",
          "2237:   int nMatch = 0;",
          "2238:   int nKeep = 0;",
          "2239:   int nNew = 0;",
          "2240:   int iTermOff;",
          "",
          "[Added Lines]",
          "2237:   u32 nMatch = 0;",
          "2238:   u32 nKeep = 0;",
          "2239:   u32 nNew = 0;",
          "2240:   u32 iTermOff;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2817:   COMMIT;",
          "2818: } {0 {}}",
          "2820: sqlite3_fts5_may_be_corrupt 0",
          "2821: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2820: #--------------------------------------------------------------------------",
          "2821: reset_db",
          "2822: do_test 27.0 {",
          "2823:   sqlite3 db {}",
          "2824:   db deserialize [decode_hexdb {",
          "2825: | size 32768 pagesize 4096 filename timeout-2ca5b0658c98.db",
          "2826: | page 1 offset 0",
          "2827: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "2828: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 08   .....@  ........",
          "2829: |     32: 00 00 00 02 00 00 00 01 00 00 00 09 00 00 00 04   ................",
          "2830: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "2831: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "2832: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 0d 92 00 00 00 00   ...k............",
          "2833: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "2834: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "2835: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "2836: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "2837: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "2838: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "2839: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "2840: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "2841: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "2842: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "2843: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "2844: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "2845: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "2846: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "2847: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "2848: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "2849: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "2850: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "2851: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "2852: |   3776: 63 30 2c 20 63 31 2c 20 63 32 29 69 04 07 17 19   c0, c1, c2)i....",
          "2853: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "2854: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "2855: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "2856: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "2857: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "2858: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "2859: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "2860: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "2861: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "2862: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "2863: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "2864: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "2865: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "2866: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "2867: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "2868: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "2869: | page 3 offset 8192",
          "2870: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "2871: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "2872: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "2873: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 30 31 36 30   ...........20160",
          "2874: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "2875: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "2876: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "2877: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "2878: |   3328: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "2879: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "2880: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "2881: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "2882: |   3392: 69 6c 65 72 01 20 01 02 02 02 01 02 02 01 06 64   iler. .........d",
          "2883: |   3408: 62 73 7c cc cc cc cc cc cc cc cc cc cc cc cc cc   bs|.............",
          "2884: |   3424: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc   ................",
          "2885: |   3440: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc   ................",
          "2886: |   3456: cc cc cc cc cc cc c4 61 74 07 02 03 01 02 03 01   .......at.......",
          "2887: |   3472: 02 03 02 04 65 62 75 67 04 02 02 01 02 02 01 02   ....ebug........",
          "2888: |   3488: 02 01 06 65 6e 61 62 6c 65 07 02 02 01 02 02 01   ...enable.......",
          "2889: |   3504: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "2890: |   3520: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "2891: |   3536: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 05 23   ...............#",
          "2892: |   3552: d6 76 36 32 d3 52 e3 42 e3 02 03 23 03 13 63 03   .v62.R.B...#..c.",
          "2893: |   3568: 63 03 95 84 e4 f4 34 15 34 52 60 10 50 04 30 f1   c.....4.4R`.P.0.",
          "2894: |   3584: 74 34 f4 d5 04 94 c4 55 23 d6 76 36 32 d3 52 e3   t4.....U#.v62.R.",
          "2895: |   3600: 42 e3 02 03 23 03 13 63 03 63 03 95 85 25 45 24   B...#..c.c...%E$",
          "2896: |   3616: 94 d0 d0 00 00 02 40 ee 00 00 ff 80 ff 00 fe 80   ......@.........",
          "2897: |   3632: fe 00 fd 80 fd 00 fc 80 fc 00 fb 80 fb 00 fa 80   ................",
          "2898: |   3648: fa 00 f9 80 f9 00 f8 80 f8 00 f7 80 f7 00 f6 80   ................",
          "2899: |   3664: f6 00 f5 80 f5 00 f4 80 f4 00 f8 0f 30 0f 28 0f   ............0.(.",
          "2900: |   3680: 20 0f 18 0f 10 0f 08 0f 00 0e f8 0e f0 0e e8 0e    ...............",
          "2901: |   3696: e0 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "2902: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "2903: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "2904: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "2905: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "2906: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "2907: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "2908: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "2909: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "2910: |   3840: 02 02 01 02 02 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "2911: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "2912: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "2913: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "2914: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "2915: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "2916: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "2917: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "2918: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "2919: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "2920: |   4000: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "2921: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "2922: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "2923: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 0f 0e 10 0f   .D...G..........",
          "2924: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "2925: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "2926: | page 4 offset 12288",
          "2927: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "2928: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "2929: | page 5 offset 16384",
          "2930: |      0: 0d 00 00 00 24 0c 0a 00 0f d8 0f af 0f 86 0f 74   ....$..........t",
          "2931: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "2932: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "2933: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "2934: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "2935: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "2936: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "2937: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "2938: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "2939: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "2940: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "2941: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "2942: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "2943: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "2944: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "2945: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 5f e8 54 45 4e   OMIT LOAD E_.TEN",
          "2946: |   3248: 53 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f   SIONXRTRIM....3.",
          "2947: |   3264: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 31 81   .MAX MEMORY=501.",
          "2948: |   3280: 40 50 02 50 f1 94 54 e4 14 24 c4 52 04 a5 35 f4   @P.P..T..$.R..5.",
          "2949: |   3296: e3 15 84 e4 f4 34 15 34 51 71 30 50 02 50 f1 74   .....4.4Qq0P.P.t",
          "2950: |   3312: 54 e4 14 24 c4 52 04 a5 34 f4 e3 15 85 25 45 24   T..$.R..4....%E$",
          "2951: |   3328: 94 d1 a1 20 50 02 90 f1 94 54 e4 14 24 c4 52 04   ... P....T..$.R.",
          "2952: |   3344: 74 54 f5 04 f4 c5 95 84 24 94 e4 15 25 91 a1 10   tT......$...%...",
          "2953: |   3360: 50 02 90 f1 94 54 e4 14 24 c4 52 04 74 54 f5 04   P....T..$.R.tT..",
          "2954: |   3376: f4 c5 95 84 e4 f4 34 15 34 51 91 00 50 02 90 f1   ......4.4Q..P...",
          "2955: |   3392: 74 54 e4 14 24 c4 52 04 74 54 f5 04 f4 c5 95 85   tT..$.R.tT......",
          "2956: |   3408: 25 45 24 94 d1 70 f0 50 02 30 f1 94 54 e4 14 24   %E$..p.P.0..T..$",
          "2957: |   3424: c4 52 04 65 45 33 55 84 24 94 e4 15 25 91 70 e0   .R.eE3U.$...%.p.",
          "2958: |   3440: 50 02 30 f1 94 54 e4 14 24 c4 52 04 65 45 33 55   P.0..T..$.R.eE3U",
          "2959: |   3456: 84 e4 f4 34 15 34 51 60 d0 50 02 30 f1 74 54 e4   ...4.4Q`.P.0.tT.",
          "2960: |   3472: 14 24 c4 52 04 65 45 33 55 85 25 45 24 94 d1 70   .$.R.eE3U.%E$..p",
          "2961: |   3488: c0 50 02 30 f1 94 54 e4 14 24 c4 52 04 65 45 33   .P.0..T..$.R.eE3",
          "2962: |   3504: 45 84 24 94 e4 15 25 91 70 b0 50 02 30 f1 94 54   E.$...%.p.P.0..T",
          "2963: |   3520: e4 14 24 c4 52 04 65 45 33 45 84 e4 f4 34 15 34   ..$.R.eE3E...4.4",
          "2964: |   3536: 51 60 a0 50 02 30 f1 74 54 e4 14 24 c4 52 04 65   Q`.P.0.tT..$.R.e",
          "2965: |   3552: 45 33 45 85 25 45 24 94 d1 e0 90 50 03 10 f1 94   E3E.%E$....P....",
          "2966: |   3568: 54 e4 42 4c 45 20 44 42 53 54 41 54 20 56 54 41   T.BLE DBSTAT VTA",
          "2967: |   3584: 42 58 42 49 4e 41 52 59 1e 08 05 00 31 0f 19 45   BXBINARY....1..E",
          "2968: |   3600: e4 14 24 c4 52 04 44 25 35 44 15 42 05 65 42 41   ..$.R.D%5D.B.eBA",
          "2969: |   3616: 54 84 e4 f4 34 15 34 51 d0 70 50 03 10 f1 74 54   T...4.4Q.pP...tT",
          "2970: |   3632: e4 14 24 c4 52 04 44 25 35 44 15 42 05 65 44 14   ..$.R.D%5D.B.eD.",
          "2971: |   3648: 25 85 25 45 24 94 d1 10 60 50 01 70 f1 94 44 54   %.%E$...`P.p..DT",
          "2972: |   3664: 25 54 75 84 24 94 e4 15 25 91 10 50 50 01 70 f1   %Tu.$...%..PP.p.",
          "2973: |   3680: 94 44 54 25 54 75 84 e4 f4 34 15 34 51 00 40 50   .DT%Tu...4.4Q.@P",
          "2974: |   3696: 01 70 f1 74 44 54 25 54 75 85 25 45 24 94 d2 70   .p.tDT%Tu.%E$..p",
          "2975: |   3712: 30 50 04 30 f1 94 34 f4 d5 04 94 c4 55 23 d6 76   0P.0..4.....U#.v",
          "2976: |   3728: 36 32 d3 52 e3 42 e3 02 03 23 03 13 63 03 63 03   62.R.B...#..c.c.",
          "2977: |   3744: 95 84 24 94 e4 15 25 92 70 20 50 04 30 f1 94 34   ..$...%.p P.0..4",
          "2978: |   3760: f4 d5 04 94 c4 53 30 01 00 00 10 10 04 02 02 00   .....S0.........",
          "2979: |   3776: 00 00 00 00 00 00 00 80 00 00 00 20 00 00 00 10   ........... ....",
          "2980: |   3792: 00 00 00 90 00 00 00 40 00 00 00 00 00 00 00 00   .......@........",
          "2981: | page 6 offset 20480",
          "2982: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "2983: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "2984: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "2985: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "2986: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "2987: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "2988: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "2989: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "2990: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "2991: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "2992: |   3968: 06 10 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "2993: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "2994: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "2995: |   4016: 06 0a 03 00 12 02 01 01 06 09 03 00 12 03 01 01   ................",
          "2996: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "2997: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "2998: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "2999: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "3000: | page 7 offset 24576",
          "3001: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "3002: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "3003: | page 8 offset 28672",
          "3004: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e9 0f d6 00 00   ................",
          "3005: |   4048: 00 00 00 00 00 00 11 03 02 2b 69 6e 74 65 67 72   .........+integr",
          "3006: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "3007: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "3008: | end timeout-2ca5b0658c98.db",
          "3009: }]} {}",
          "3011: do_catchsql_test 27.1 {",
          "3012:   DELETE FROM t1 WHERE a MATCH 'fts*';",
          "3013: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d0e943d9574c7cab1af4a0fe753a0b5f91ea0e884b91a85b13239144b71f067c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d69a58119d68653c045e1476af7fad5566bd3cf",
      "candidate_info": {
        "commit_hash": "8d69a58119d68653c045e1476af7fad5566bd3cf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8d69a58119d68653c045e1476af7fad5566bd3cf",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_vfs.c",
          "test/permutations.test",
          "test/walvfs.test"
        ],
        "message": "Improve the coverage of wal.c provided by the \"coverage-wal\" test permutation.\n\nFossilOrigin-Name: 6231485114eb07b258cd0e6e163ca05f7e9cf5664e071808fcb1329b33e4c4f5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_vfs.c||src/test_vfs.c",
          "test/permutations.test||test/permutations.test",
          "test/walvfs.test||test/walvfs.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fb17fea4b9779fbd3adb6ff9500da83a6ca4fa7cba379aa70074e4328814a7f2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_vfs.c||src/test_vfs.c": [
          "File: src/test_vfs.c -> src/test_vfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     int eCode;",
          "229:     const char *zCode;",
          "230:   } aCode[] = {",
          "236:   };",
          "238:   const char *z;",
          "",
          "[Removed Lines]",
          "231:     { SQLITE_OK,     \"SQLITE_OK\"     },",
          "232:     { SQLITE_ERROR,  \"SQLITE_ERROR\"  },",
          "233:     { SQLITE_IOERR,  \"SQLITE_IOERR\"  },",
          "234:     { SQLITE_LOCKED, \"SQLITE_LOCKED\" },",
          "235:     { SQLITE_BUSY,   \"SQLITE_BUSY\"   },",
          "",
          "[Added Lines]",
          "231:     { SQLITE_OK,       \"SQLITE_OK\"     },",
          "232:     { SQLITE_ERROR,    \"SQLITE_ERROR\"  },",
          "233:     { SQLITE_IOERR,    \"SQLITE_IOERR\"  },",
          "234:     { SQLITE_LOCKED,   \"SQLITE_LOCKED\" },",
          "235:     { SQLITE_BUSY,     \"SQLITE_BUSY\"   },",
          "236:     { SQLITE_READONLY, \"SQLITE_READONLY\"   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865:   pFd->pNext = pBuffer->pFile;",
          "866:   pBuffer->pFile = pFd;",
          "867:   pFd->pShm = pBuffer;",
          "869: }",
          "871: static void tvfsAllocPage(TestvfsBuffer *p, int iPage, int pgsz){",
          "",
          "[Removed Lines]",
          "868:   return SQLITE_OK;",
          "",
          "[Added Lines]",
          "869:   return rc;",
          "",
          "---------------"
        ],
        "test/permutations.test||test/permutations.test": [
          "File: test/permutations.test -> test/permutations.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "430: test_suite \"coverage-wal\" -description {",
          "431:   Coverage tests for file wal.c.",
          "432: } -files {",
          "437: }",
          "439: test_suite \"coverage-pager\" -description {",
          "",
          "[Removed Lines]",
          "433:   wal.test       wal2.test     wal3.test       walmode.test",
          "434:   walbak.test    walhook.test  walcrash2.test  walcksum.test",
          "435:   walfault.test  walbig.test   walnoshm.test",
          "436:   wal5.test",
          "",
          "[Added Lines]",
          "433:   wal.test wal2.test wal3.test wal4.test wal5.test",
          "434:   wal64k.test wal6.test wal7.test wal8.test wal9.test",
          "435:   walbak.test walbig.test walblock.test walcksum.test walcrash2.test",
          "436:   walcrash3.test walcrash4.test walcrash.test walfault.test walhook.test",
          "437:   walmode.test walnoshm.test waloverwrite.test walpersist.test",
          "438:   walprotocol2.test walprotocol.test walro2.test walrofault.test",
          "439:   walro.test walshared.test walslow.test walvfs.test",
          "441:   nockpt.test",
          "",
          "---------------"
        ],
        "test/walvfs.test||test/walvfs.test": [
          "File: test/walvfs.test -> test/walvfs.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2018 December 23",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # This file implements regression tests for SQLite library.  The",
          "12: # focus of this file is testing the operation of the library in",
          "13: # \"PRAGMA journal_mode=WAL\" mode.",
          "14: #",
          "16: set testdir [file dirname $argv0]",
          "17: source $testdir/tester.tcl",
          "18: source $testdir/lock_common.tcl",
          "19: source $testdir/malloc_common.tcl",
          "20: source $testdir/wal_common.tcl",
          "21: set testprefix walvfs",
          "23: ifcapable !wal {finish_test ; return }",
          "25: db close",
          "26: testvfs tvfs",
          "27: tvfs script xSync",
          "28: tvfs filter xSync",
          "29: set ::sync_count 0",
          "30: proc xSync {method file args} {",
          "31:   if {[file tail $file]==\"test.db-wal\"} {",
          "32:     incr ::sync_count",
          "33:   }",
          "34: }",
          "36: #-------------------------------------------------------------------------",
          "37: # Test that if IOCAP_SEQUENTIAL is set, the wal-header is not synced to",
          "38: # disk immediately after it is written.",
          "39: #",
          "40: sqlite3 db test.db -vfs tvfs",
          "41: do_execsql_test 1.0 {",
          "42:   PRAGMA auto_vacuum = 0;",
          "43:   PRAGMA journal_mode = wal;",
          "44:   PRAGMA synchronous = normal;",
          "45:   CREATE TABLE t1(a, b, c);",
          "46:   INSERT INTO t1 VALUES(1, 2, 3);",
          "47:   INSERT INTO t1 VALUES(4, 5, 6);",
          "48:   INSERT INTO t1 VALUES(7, 8, 9);",
          "49:   PRAGMA wal_checkpoint;",
          "50: } {wal 0 5 5}",
          "52: set ::sync_count 0",
          "53: do_test 1.1 {",
          "54:   execsql { INSERT INTO t1 VALUES(10, 11, 12) }",
          "55:   set ::sync_count",
          "56: } 1",
          "58: db close",
          "59: tvfs devchar sequential",
          "60: sqlite3 db test.db -vfs tvfs",
          "61: do_execsql_test 1.2 {",
          "62:   PRAGMA synchronous = normal;",
          "63:   INSERT INTO t1 VALUES(13, 14, 15);",
          "64:   INSERT INTO t1 VALUES(16, 17, 18);",
          "65:   PRAGMA wal_checkpoint;",
          "66: } {0 4 4}",
          "68: set ::sync_count 0",
          "69: do_test 1.3 {",
          "70:   execsql { INSERT INTO t1 VALUES(10, 11, 12) }",
          "71:   set ::sync_count",
          "72: } 0",
          "74: #-------------------------------------------------------------------------",
          "75: # Test that \"PRAGMA journal_size_limit\" works in wal mode.",
          "76: #",
          "77: reset_db",
          "78: do_execsql_test 2.0 {",
          "79:   PRAGMA journal_size_limit = 10000;",
          "80:   CREATE TABLE t1(x);",
          "81:   PRAGMA journal_mode = wal;",
          "82:   WITH s(i) AS (",
          "83:     SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20",
          "84:   )",
          "85:   INSERT INTO t1 SELECT randomblob(750) FROM s;",
          "86: } {10000 wal}",
          "87: do_test 2.1 {",
          "88:   expr [file size test.db-wal]>12000",
          "89: } {1}",
          "90: do_test 2.2 {",
          "91:   execsql {",
          "92:     PRAGMA wal_checkpoint;",
          "93:     INSERT INTO t1 VALUES(randomblob(750));",
          "94:   }",
          "95:   file size test.db-wal",
          "96: } {10000}",
          "97: do_test 2.3 {",
          "98:   execsql {",
          "99:     PRAGMA journal_size_limit = 8000;",
          "100:     PRAGMA wal_checkpoint;",
          "101:     INSERT INTO t1 VALUES(randomblob(750));",
          "102:   }",
          "103:   file size test.db-wal",
          "104: } {8000}",
          "106: #-------------------------------------------------------------------------",
          "107: # Test that a checkpoint may be interrupted using sqlite3_interrupt().",
          "108: #",
          "109: reset_db",
          "110: db close",
          "111: sqlite3 db test.db -vfs tvfs",
          "112: tvfs filter {}",
          "114: do_execsql_test 3.0 {",
          "115:   CREATE TABLE t1(x);",
          "116:   PRAGMA journal_mode = wal;",
          "117:   WITH s(i) AS (",
          "118:     SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20",
          "119:   )",
          "120:   INSERT INTO t1 SELECT randomblob(750) FROM s;",
          "121: } {wal}",
          "123: tvfs filter xWrite",
          "124: tvfs script xWrite",
          "125: set ::cnt 2",
          "126: proc xWrite {method file args} {",
          "127:   if {[file tail $file]==\"test.db\"} {",
          "128:     incr ::cnt -1",
          "129:     if {$::cnt==0} {",
          "130:       sqlite3_interrupt db",
          "131:     }",
          "132:   }",
          "133:   return SQLITE_OK",
          "134: }",
          "136: do_catchsql_test 3.1 {",
          "137:   PRAGMA wal_checkpoint",
          "138: } {1 interrupted}",
          "140: #-------------------------------------------------------------------------",
          "141: #",
          "142: reset_db",
          "143: db close",
          "144: do_test 4.0 {",
          "145:   sqlite3 db test.db -vfs tvfs",
          "146:   execsql {",
          "147:     CREATE TABLE t1(x);",
          "148:     PRAGMA journal_mode = wal;",
          "149:     WITH s(i) AS (",
          "150:         SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20",
          "151:     )",
          "152:     INSERT INTO t1 SELECT randomblob(750) FROM s;",
          "153:   } db",
          "154: } {wal}",
          "155: db close",
          "157: tvfs filter xShmMap",
          "158: tvfs script xShmMap",
          "159: proc xShmMap {method file args} {",
          "160:   return SQLITE_READONLY",
          "161: }",
          "162: sqlite3 db test.db -vfs tvfs",
          "163: do_catchsql_test 4.1 {",
          "164:   SELECT count(*) FROM t1",
          "165: } {1 {attempt to write a readonly database}}",
          "167: set ::cnt 5",
          "168: tvfs filter {xShmMap xShmLock}",
          "169: proc xShmMap {method file name args} {",
          "170:   switch -- $method {",
          "171:     xShmMap {  return SQLITE_READONLY }",
          "172:     xShmLock {",
          "173:       if {$args == \"{0 1 lock shared}\"} {",
          "174:         incr ::cnt -1",
          "175:         if {$::cnt>0} { return SQLITE_BUSY }",
          "176:       }",
          "177:     }",
          "178:   }",
          "179:   return SQLITE_OK",
          "180: }",
          "181: do_catchsql_test 4.2 {",
          "182:   SELECT count(*) FROM t1",
          "183: } {1 {attempt to write a readonly database}}",
          "185: db close",
          "186: tvfs delete",
          "187: finish_test",
          "",
          "---------------"
        ]
      }
    }
  ]
}