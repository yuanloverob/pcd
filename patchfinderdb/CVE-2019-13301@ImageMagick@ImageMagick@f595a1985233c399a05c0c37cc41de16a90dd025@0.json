{
  "cve_id": "CVE-2019-13301",
  "cve_desc": "ImageMagick 7.0.8-50 Q16 has memory leaks in AcquireMagickMemory because of an AnnotateImage error.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "f595a1985233c399a05c0c37cc41de16a90dd025",
  "patch_info": {
    "commit_hash": "f595a1985233c399a05c0c37cc41de16a90dd025",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/f595a1985233c399a05c0c37cc41de16a90dd025",
    "files": [
      "MagickCore/annotate.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/1589",
    "before_after_code_files": [
      "MagickCore/annotate.c||MagickCore/annotate.c"
    ]
  },
  "patch_diff": {
    "MagickCore/annotate.c||MagickCore/annotate.c": [
      "File: MagickCore/annotate.c -> MagickCore/annotate.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "274:   text=annotate->text;",
      "275:   annotate->text=(char *) NULL;",
      "276:   annotate_info=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
      "278:   for (p=text; *p != '\\0'; p++)",
      "279:     if (*p == '\\n')",
      "280:       number_lines++;",
      "",
      "[Removed Lines]",
      "277:   number_lines=1;",
      "",
      "[Added Lines]",
      "277:   number_lines=1;",
      "278:   for (p=text; *p != '\\0'; p++)",
      "279:     if (*p == '\\n')",
      "280:       number_lines++;",
      "281:   textlist=AcquireQuantumMemory(number_lines+1,sizeof(*textlist));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "303:   SetGeometry(image,&geometry);",
      "304:   SetGeometryInfo(&geometry_info);",
      "305:   if (annotate_info->geometry != (char *) NULL)",
      "307:       (void) ParsePageGeometry(image,annotate_info->geometry,&geometry,",
      "308:         exception);",
      "309:       (void) ParseGeometry(annotate_info->geometry,&geometry_info);",
      "",
      "[Removed Lines]",
      "306:     {",
      "",
      "[Added Lines]",
      "310:     {",
      "311:       (void) ParsePageGeometry(image,annotate_info->geometry,&geometry,",
      "312:         exception);",
      "313:       (void) ParseGeometry(annotate_info->geometry,&geometry_info);",
      "314:     }",
      "315:   if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "84a30c031e3dd4117a7db00813bafc911164a06a",
      "candidate_info": {
        "commit_hash": "84a30c031e3dd4117a7db00813bafc911164a06a",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/84a30c031e3dd4117a7db00813bafc911164a06a",
        "files": [
          "MagickCore/annotate.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "MagickCore/annotate.c||MagickCore/annotate.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/annotate.c||MagickCore/annotate.c"
          ],
          "candidate": [
            "MagickCore/annotate.c||MagickCore/annotate.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/annotate.c||MagickCore/annotate.c": [
          "File: MagickCore/annotate.c -> MagickCore/annotate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:   PointInfo",
          "246:     offset;",
          "251:   register ssize_t",
          "252:     i;",
          "",
          "[Removed Lines]",
          "248:   RectangleInfo",
          "249:     geometry;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:   assert(image->signature == MagickCoreSignature);",
          "266:   if (image->debug != MagickFalse)",
          "267:     (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);",
          "276:     return(MagickFalse);",
          "277:   length=strlen(textlist[0]);",
          "278:   for (i=1; textlist[i] != (char *) NULL; i++)",
          "279:     if (strlen(textlist[i]) > length)",
          "280:       length=strlen(textlist[i]);",
          "",
          "[Removed Lines]",
          "268:   assert(draw_info != (DrawInfo *) NULL);",
          "269:   assert(draw_info->signature == MagickCoreSignature);",
          "270:   if (draw_info->text == (char *) NULL)",
          "271:     return(MagickFalse);",
          "272:   if (*draw_info->text == '\\0')",
          "273:     return(MagickTrue);",
          "274:   textlist=StringToList(draw_info->text);",
          "275:   if (textlist == (char **) NULL)",
          "",
          "[Added Lines]",
          "268:   assert(draw_info->signature == MagickCoreSignature);",
          "269:   if (draw_info->text == (char *) NULL)",
          "271:   if (*draw_info->text == '\\0')",
          "272:     return(MagickTrue);",
          "273:   annotate=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
          "274:   text=annotate->text;",
          "275:   annotate->text=(char *) NULL;",
          "276:   annotate_info=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
          "277:   number_lines=1;",
          "278:   for (p=text; *p != '\\0'; p++)",
          "279:     if (*p == '\\n')",
          "280:       number_lines++;",
          "281:   textlist=AcquireQuantumMemory(number_lines+1,sizeof(*textlist));",
          "282:   if (textlist == (char **) NULL)",
          "283:     return(MagickFalse);",
          "284:   p=text;",
          "285:   for (i=0; i < number_lines; i++)",
          "286:   {",
          "287:     char",
          "290:     textlist[i]=p;",
          "291:     for (q=p; *q != '\\0'; q++)",
          "292:       if ((*q == '\\r') || (*q == '\\n'))",
          "293:         break;",
          "294:     if (*q == '\\r')",
          "295:       {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "291:     }",
          "292:   if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
          "293:     return(MagickFalse);",
          "294:   if (IsGrayColorspace(image->colorspace) != MagickFalse)",
          "295:     (void) SetImageColorspace(image,sRGBColorspace,exception);",
          "296:   status=MagickTrue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313:   if (IsGrayColorspace(image->colorspace) != MagickFalse)",
          "314:     (void) SetImageColorspace(image,sRGBColorspace,exception);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "498:         (void) CloneString(&annotate_info->primitive,primitive);",
          "499:         (void) DrawImage(image,annotate_info,exception);",
          "500:       }",
          "503:     Relinquish resources.",
          "505:   annotate_info=DestroyDrawInfo(annotate_info);",
          "",
          "[Removed Lines]",
          "501:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}