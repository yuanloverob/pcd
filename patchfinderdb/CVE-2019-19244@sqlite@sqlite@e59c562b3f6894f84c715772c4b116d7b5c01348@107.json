{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "feb5dcf1a67073c8d48f05d0ee8658139ea403b0",
      "candidate_info": {
        "commit_hash": "feb5dcf1a67073c8d48f05d0ee8658139ea403b0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/feb5dcf1a67073c8d48f05d0ee8658139ea403b0",
        "files": [
          "ext/fts3/fts3.c",
          "ext/fts3/fts3Int.h",
          "ext/fts3/fts3_snippet.c",
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts4aa.test"
        ],
        "message": "Better detection of corruption in the %_stat and %_docsize shadow tables of FTS3.\n\nFossilOrigin-Name: 1e449687881f4d388e54a0e51bcabba41ab10cf7e596ff65e31e88a23c70d497",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "ext/fts3/fts3Int.h||ext/fts3/fts3Int.h",
          "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c",
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts4aa.test||test/fts4aa.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "391:   return (int)(p - pStart);",
          "392: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400: int sqlite3Fts3GetVarintBounded(",
          "401:   const char *pBuf,",
          "402:   const char *pEnd,",
          "403:   sqlite_int64 *v",
          "404: ){",
          "405:   const unsigned char *p = (const unsigned char*)pBuf;",
          "406:   const unsigned char *pStart = p;",
          "407:   const unsigned char *pX = (const unsigned char*)pEnd;",
          "408:   u64 b = 0;",
          "409:   int shift;",
          "410:   for(shift=0; shift<=63; shift+=7){",
          "411:     u64 c = p<pX ? *p : 0;",
          "412:     p++;",
          "413:     b += (c&0x7F) << shift;",
          "414:     if( (c & 0x80)==0 ) break;",
          "415:   }",
          "417:   return (int)(p - pStart);",
          "418: }",
          "",
          "---------------"
        ],
        "ext/fts3/fts3Int.h||ext/fts3/fts3Int.h": [
          "File: ext/fts3/fts3Int.h -> ext/fts3/fts3Int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "577: void sqlite3Fts3ErrMsg(char**,const char*,...);",
          "578: int sqlite3Fts3PutVarint(char *, sqlite3_int64);",
          "579: int sqlite3Fts3GetVarint(const char *, sqlite_int64 *);",
          "580: int sqlite3Fts3GetVarint32(const char *, int *);",
          "581: int sqlite3Fts3VarintLen(sqlite3_uint64);",
          "582: void sqlite3Fts3Dequote(char *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "580: int sqlite3Fts3GetVarintBounded(const char*,const char*,sqlite3_int64*);",
          "",
          "---------------"
        ],
        "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c": [
          "File: ext/fts3/fts3_snippet.c -> ext/fts3/fts3_snippet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1038:   Fts3Table *pTab,",
          "1039:   sqlite3_stmt **ppStmt,",
          "1040:   sqlite3_int64 *pnDoc,",
          "1042: ){",
          "1043:   sqlite3_stmt *pStmt;",
          "1044:   const char *a;",
          "1045:   sqlite3_int64 nDoc;",
          "1047:   if( !*ppStmt ){",
          "1048:     int rc = sqlite3Fts3SelectDoctotal(pTab, ppStmt);",
          "",
          "[Removed Lines]",
          "1041:   const char **paLen",
          "",
          "[Added Lines]",
          "1041:   const char **paLen,",
          "1042:   const char **ppEnd",
          "1046:   const char *pEnd;",
          "1048:   int n;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1051:   pStmt = *ppStmt;",
          "1052:   assert( sqlite3_data_count(pStmt)==1 );",
          "1054:   a = sqlite3_column_blob(pStmt, 0);",
          "1059:   if( paLen ) *paLen = a;",
          "1060:   return SQLITE_OK;",
          "1061: }",
          "",
          "[Removed Lines]",
          "1055:   a += sqlite3Fts3GetVarint(a, &nDoc);",
          "1056:   if( nDoc==0 ) return FTS_CORRUPT_VTAB;",
          "",
          "[Added Lines]",
          "1058:   n = sqlite3_column_bytes(pStmt, 0);",
          "1059:   if( n==0 ){",
          "1060:     return FTS_CORRUPT_VTAB;",
          "1061:   }",
          "1063:   if( a==0 ){",
          "1064:     return SQLITE_NOMEM;",
          "1065:   }",
          "1066:   pEnd = a + n;",
          "1067:   a += sqlite3Fts3GetVarintBounded(a, pEnd, &nDoc);",
          "1068:   if( nDoc==0 || a>pEnd ){",
          "1069:     return FTS_CORRUPT_VTAB;",
          "1070:   }",
          "1074:   if( ppEnd ) *ppEnd = pEnd;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1237:       case FTS3_MATCHINFO_NDOC:",
          "1238:         if( bGlobal ){",
          "1239:           sqlite3_int64 nDoc = 0;",
          "1241:           pInfo->aMatchinfo[0] = (u32)nDoc;",
          "1242:         }",
          "1243:         break;",
          "",
          "[Removed Lines]",
          "1240:           rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &nDoc, 0);",
          "",
          "[Added Lines]",
          "1255:           rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &nDoc, 0, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1246:         if( bGlobal ){",
          "1251:           if( rc==SQLITE_OK ){",
          "1252:             int iCol;",
          "1253:             for(iCol=0; iCol<pInfo->nCol; iCol++){",
          "1254:               u32 iVal;",
          "1255:               sqlite3_int64 nToken;",
          "1256:               a += sqlite3Fts3GetVarint(a, &nToken);",
          "1257:               iVal = (u32)(((u32)(nToken&0xffffffff)+nDoc/2)/nDoc);",
          "1258:               pInfo->aMatchinfo[iCol] = iVal;",
          "1259:             }",
          "",
          "[Removed Lines]",
          "1250:           rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &nDoc, &a);",
          "",
          "[Added Lines]",
          "1266:           rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &nDoc, &a, &pEnd);",
          "1273:               if( a>pEnd ){",
          "1274:                 rc = SQLITE_CORRUPT_VTAB;",
          "1275:                 break;",
          "1276:               }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1267:         if( rc==SQLITE_OK ){",
          "1268:           int iCol;",
          "1269:           const char *a = sqlite3_column_blob(pSelectDocsize, 0);",
          "1270:           for(iCol=0; iCol<pInfo->nCol; iCol++){",
          "1271:             sqlite3_int64 nToken;",
          "1273:             pInfo->aMatchinfo[iCol] = (u32)nToken;",
          "1274:           }",
          "1275:         }",
          "",
          "[Removed Lines]",
          "1272:             a += sqlite3Fts3GetVarint(a, &nToken);",
          "",
          "[Added Lines]",
          "1290:           const char *pEnd = a + sqlite3_column_bytes(pSelectDocsize, 0);",
          "1293:             a += sqlite3Fts3GetVarintBounded(a, pEnd, &nToken);",
          "1294:             if( a>pEnd ){",
          "1295:               rc = SQLITE_CORRUPT_VTAB;",
          "1296:               break;",
          "1297:             }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1300:         if( rc!=SQLITE_OK ) break;",
          "1301:         if( bGlobal ){",
          "1302:           if( pCsr->pDeferred ){",
          "1304:             if( rc!=SQLITE_OK ) break;",
          "1305:           }",
          "1306:           rc = fts3ExprIterate(pExpr, fts3ExprGlobalHitsCb,(void*)pInfo);",
          "",
          "[Removed Lines]",
          "1303:             rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &pInfo->nDoc, 0);",
          "",
          "[Added Lines]",
          "1328:             rc = fts3MatchinfoSelectDoctotal(pTab, &pSelect, &pInfo->nDoc,0,0);",
          "",
          "---------------"
        ],
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8bd75bf636f72f32d66c6c38e1918f27daf2f13290f00a001f41d50838bbda47",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts4aa.test||test/fts4aa.test": [
          "File: test/fts4aa.test -> test/fts4aa.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:   } $r",
          "192: }",
          "194: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194: # 2019-11-16 https://bugs.chromium.org/p/chromium/issues/detail?id=1025472",
          "195: #",
          "196: db close",
          "197: sqlite3 db :memory:",
          "198: do_execsql_test fts4aa-5.10 {",
          "199:   CREATE VIRTUAL TABLE t1 USING fts4(a, b, c, d, e,f,g,h,i,j,k,l,m,n,o,p,q,r);",
          "200:   INSERT INTO t1 VALUES('X Y', '2', '3', '4', '5', '6', '7', '8', '9', '0',",
          "201:                         'a','b','c','d','e','f','g','h');",
          "202:   UPDATE t1_docsize SET size=x'88' WHERE docid=1;",
          "203: } {}",
          "204: do_catchsql_test fts4aa-5.20 {",
          "205:   SELECT quote(matchinfo(t1, 'l')) FROM t1 WHERE t1 MATCH 'X Y';",
          "206: } {1 {database disk image is malformed}}",
          "207: do_execsql_test fts4aa-5.30 {",
          "208:   DROP TABLE t1;",
          "209:   CREATE VIRTUAL TABLE t1 USING fts4(a,b,c,d);",
          "210:   INSERT INTO t1 VALUES('one two','three four','five six','seven eight');",
          "211: } {}",
          "212: do_catchsql_test fts4aa-5.40 {",
          "213:   UPDATE t1_stat SET value=x'01010101' WHERE id=0;",
          "214:   SELECT quote(matchinfo(t1,'a')) FROM t1 WHERE t1 MATCH 'one two';",
          "215: } {1 {database disk image is malformed}}",
          "216: do_catchsql_test fts4aa-5.50 {",
          "217:   UPDATE t1_stat SET value=x'010101' WHERE id=0;",
          "218:   SELECT quote(matchinfo(t1,'a')) FROM t1 WHERE t1 MATCH 'one two';",
          "219: } {1 {database disk image is malformed}}",
          "220: do_catchsql_test fts4aa-5.60 {",
          "221:   UPDATE t1_stat SET value=x'01' WHERE id=0;",
          "222:   SELECT quote(matchinfo(t1,'a')) FROM t1 WHERE t1 MATCH 'one two';",
          "223: } {1 {database disk image is malformed}}",
          "224: do_catchsql_test fts4aa-5.70 {",
          "225:   UPDATE t1_stat SET value=x'' WHERE id=0;",
          "226:   SELECT quote(matchinfo(t1,'a')) FROM t1 WHERE t1 MATCH 'one two';",
          "227: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1735f91df4db4d012154af319245392555c01911",
      "candidate_info": {
        "commit_hash": "1735f91df4db4d012154af319245392555c01911",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1735f91df4db4d012154af319245392555c01911",
        "files": [
          "ext/misc/fileio.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improved detection and reporting of errors in the readfile() extension SQL function.\n\nFossilOrigin-Name: d2f0b5a483869d39f5c5814c9d6df3d3b8a46d582b4dcf0cf11e23b707c4213e",
        "before_after_code_files": [
          "ext/misc/fileio.c||ext/misc/fileio.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/fileio.c||ext/misc/fileio.c": [
          "File: ext/misc/fileio.c -> ext/misc/fileio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: static void readFileContents(sqlite3_context *ctx, const char *zName){",
          "127:   FILE *in;",
          "129:   void *pBuf;",
          "131:   in = fopen(zName, \"rb\");",
          "133:   fseek(in, 0, SEEK_END);",
          "134:   nIn = ftell(in);",
          "135:   rewind(in);",
          "136:   pBuf = sqlite3_malloc( nIn );",
          "138:     sqlite3_result_blob(ctx, pBuf, nIn, sqlite3_free);",
          "139:   }else{",
          "140:     sqlite3_free(pBuf);",
          "141:   }",
          "142:   fclose(in);",
          "",
          "[Removed Lines]",
          "128:   long nIn;",
          "132:   if( in==0 ) return;",
          "137:   if( pBuf && 1==fread(pBuf, nIn, 1, in) ){",
          "",
          "[Added Lines]",
          "135:   sqlite3_int64 nIn;",
          "137:   sqlite3 *db;",
          "138:   int mxBlob;",
          "141:   if( in==0 ){",
          "143:     return;",
          "144:   }",
          "148:   db = sqlite3_context_db_handle(ctx);",
          "149:   mxBlob = sqlite3_limit(db, SQLITE_LIMIT_LENGTH, -1);",
          "150:   if( nIn>mxBlob ){",
          "151:     sqlite3_result_error_code(ctx, SQLITE_TOOBIG);",
          "152:     fclose(in);",
          "153:     return;",
          "154:   }",
          "156:   if( pBuf==0 ){",
          "157:     sqlite3_result_error_nomem(ctx);",
          "158:     fclose(in);",
          "159:     return;",
          "160:   }",
          "161:   if( 1==fread(pBuf, nIn, 1, in) ){",
          "164:     sqlite3_result_error_code(ctx, SQLITE_IOERR);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2a47387ba6aa3c294607b7641aa1c4cf70a7b27a861e1098c2f79a38e5b7036a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fcb9caa60c3939cd562574f744a8514737ae7fb",
      "candidate_info": {
        "commit_hash": "4fcb9caa60c3939cd562574f744a8514737ae7fb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fcb9caa60c3939cd562574f744a8514737ae7fb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/nulls1.test"
        ],
        "message": "Do not pass ORDER BY clauses with non-standard NULL handling to virtual table implementations.\n\nFossilOrigin-Name: a9a82ee88d2d12209a674bd19167277aa91a6912e7a8bbf3714f90d559307fee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 75d665a494dd7d6e77d5a80af386ee5accc0a53416d5493424dc0fef6c7b01a0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "933:     for(i=0; i<n; i++){",
          "934:       Expr *pExpr = pOrderBy->a[i].pExpr;",
          "935:       if( pExpr->op!=TK_COLUMN || pExpr->iTable!=pSrc->iCursor ) break;",
          "936:     }",
          "937:     if( i==n){",
          "938:       nOrderBy = n;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "936:       if( pOrderBy->a[i].sortFlags & KEYINFO_ORDER_BIGNULL ) break;",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:   400 300",
          "119: }",
          "121: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121: #-------------------------------------------------------------------------",
          "122: ifcapable vtab {",
          "123:   register_echo_module db",
          "124:   do_execsql_test 4.0 {",
          "125:     CREATE TABLE tx(a INTEGER PRIMARY KEY, b, c);",
          "126:     CREATE INDEX i1 ON tx(b);",
          "127:     INSERT INTO tx VALUES(1, 1, 1);",
          "128:     INSERT INTO tx VALUES(2, NULL, 2);",
          "129:     INSERT INTO tx VALUES(3, 3, 3);",
          "130:     INSERT INTO tx VALUES(4, NULL, 4);",
          "131:     INSERT INTO tx VALUES(5, 5, 5);",
          "132:     CREATE VIRTUAL TABLE te USING echo(tx);",
          "133:   }",
          "135:   do_execsql_test 4.1 {",
          "136:     SELECT * FROM tx ORDER BY b NULLS FIRST;",
          "137:   } {2 {} 2  4 {} 4  1 1 1  3 3 3  5 5 5}",
          "138:   do_execsql_test 4.2 {",
          "139:     SELECT * FROM te ORDER BY b NULLS FIRST;",
          "140:   } {2 {} 2  4 {} 4  1 1 1  3 3 3  5 5 5}",
          "142:   do_execsql_test 4.3 {",
          "143:     SELECT * FROM tx ORDER BY b NULLS LAST;",
          "144:   } {1 1 1  3 3 3  5 5 5  2 {} 2  4 {} 4}",
          "145:   do_execsql_test 4.4 {",
          "146:     SELECT * FROM te ORDER BY b NULLS LAST;",
          "147:   } {1 1 1  3 3 3  5 5 5  2 {} 2  4 {} 4}",
          "148: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "873b019826a77a1f25f8b2e7a62fac49577a9057",
      "candidate_info": {
        "commit_hash": "873b019826a77a1f25f8b2e7a62fac49577a9057",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/873b019826a77a1f25f8b2e7a62fac49577a9057",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/corruptL.test"
        ],
        "message": "Fix a problem in the new code introduced by [658b84d7] causing corruption and other errors to be ignored.\n\nFossilOrigin-Name: 7ccf2e7d413adb109c61456a5f46e87d38884801dbaab93297a17e3050014b59",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/corruptL.test||test/corruptL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ebe4845cd0ffb96b30be3c69eb399d58e93149886bc2fa60a7ebd7b4fbe447a4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4016:           VdbeBranchTaken(1,2); goto jump_to_p2;",
          "4017:           break;",
          "4018:         }else{",
          "4020:           goto seek_not_found;",
          "4021:         }",
          "4022:       }else",
          "",
          "[Removed Lines]",
          "4019:           sqlite3BtreeLast(pC->uc.pCursor, &res);",
          "",
          "[Added Lines]",
          "4019:           rc = sqlite3BtreeLast(pC->uc.pCursor, &res);",
          "4020:           if( rc!=SQLITE_OK ) goto abort_due_to_error;",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:   ROLLBACK TO one;",
          "867: }",
          "869: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "869: #-------------------------------------------------------------------------",
          "870: reset_db",
          "871: do_test 10.0 {",
          "872:   sqlite3 db {}",
          "873:   db deserialize [decode_hexdb {",
          "874: | size 180224 pagesize 4096 filename crash-41390d95d613b6.db",
          "875: | page 1 offset 0",
          "876: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "877: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "878: |     96: 00 00 00 00 0d 00 00 00 04 0e e2 00 0f 96 0f 44   ...............D",
          "879: |    112: 0f 10 0e e2 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "880: |   3808: 00 00 2c 14 06 17 15 11 01 41 69 6e 64 65 78 74   ..,......Aindext",
          "881: |   3824: 41 78 33 74 31 06 43 52 45 41 54 45 20 49 4e 44   Ax3t1.CREATE IND",
          "882: |   3840: 45 58 20 74 31 78 32 20 4f 4e 20 74 31 28 62 29   EX t1x2 ON t1(b)",
          "883: |   3856: 32 03 06 17 15 11 01 4d 69 6e 64 65 78 74 31 88   2......Mindext1.",
          "884: |   3872: 31 74 31 05 43 52 45 41 54 45 20 49 4e 44 45 58   1t1.CREATE INDEX",
          "885: |   3888: 20 74 31 78 31 20 4f 4e 20 74 31 28 67 2b 68 2c    t1x1 ON t1(g+h,",
          "886: |   3904: 6a 2d 6b 29 50 02 06 17 2b 2b 01 59 74 61 62 6c   j-k)P...++.Ytabl",
          "887: |   3920: 65 73 71 6c 69 74 65 5e 73 65 71 74 65 6e 63 65   esqlite^seqtence",
          "888: |   3936: 73 71 6c 69 74 65 5f 73 65 71 75 65 6e 63 65 04   sqlite_sequence.",
          "889: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 73 71 6c   CREATE TABLE sql",
          "890: |   3968: 69 74 65 5f 73 65 71 75 65 6e 63 65 28 6e 61 6d   ite_sequence(nam",
          "891: |   3984: 65 2c 73 65 71 29 68 00 07 17 11 11 01 81 3b 74   e,seq)h.......;t",
          "892: |   4000: 61 62 6c 65 74 31 74 31 03 43 52 45 41 54 45 20   ablet1t1.CREATE",
          "893: |   4016: 54 41 42 4c 45 20 74 31 28 61 20 49 4e 54 45 47   TABLE t1(a INTEG",
          "894: |   4032: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 20 41   ER PRIMARY KEY A",
          "895: |   4048: 55 54 4f 49 4e 43 52 45 4d 45 4e 54 2c 0a 62 2c   UTOINCREMENT,.b,",
          "896: |   4064: 63 2c 64 2c 65 2c 66 2c 67 2c 68 2c 6a 2c 6b 2c   c,d,e,f,g,h,j,k,",
          "897: |   4080: 6c 2c 6d 2c 6e 2c 6f 2c 70 2c 71 2c 72 2c 73 29   l,m,n,o,p,q,r,s)",
          "898: | page 2 offset 4096",
          "899: |      0: 01 00 00 00 00 01 00 00 10 00 01 00 00 00 00 01   ................",
          "900: |     16: 00 00 00 00 02 00 0f f0 00 15 00 00 00 03 02 00   ................",
          "901: |     32: 00 00 d9 05 00 00 00 03 02 00 00 00 00 05 00 00   ................",
          "902: |     48: 10 03 02 00 00 00 00 05 00 00 00 03 02 00 00 00   ................",
          "903: |     64: 00 05 00 00 00 02 62 00 00 00 00 05 00 00 00 03   ......b.........",
          "904: |     80: 02 00 00 00 00 05 00 00 00 03 02 00 00 00 00 05   ................",
          "905: |     96: 00 00 00 03 02 00 00 00 00 05 00 00 00 03 05 00   ................",
          "906: |    112: 00 00 03 03 01 00 00 23 02 00 00 4f 00 02 00 00   .......#...O....",
          "907: |    128: 10 25 02 00 00 00 00 03 00 00 00 23 02 00 00 00   .%.........#....",
          "908: |    144: 00 03 00 00 00 23 02 00 00 00 00 03 00 00 00 23   .....#.........#",
          "909: |    160: 05 00 08 90 06 05 00 00 00 06 01 ff 00 00 00 03   ................",
          "910: |    176: 00 00 00 06 02 00 00 00 00 02 ff 00 00 00 00 00   ................",
          "911: | page 3 offset 8192",
          "912: |      0: 05 00 00 00 09 0f d0 00 00 00 00 19 0f fb 0f f6   ................",
          "913: |     16: 0f f1 10 ec ec e7 0f e2 0f dc 0f d6 0f 00 00 00   ................",
          "914: |   1072: 00 97 4c 0a 24 00 ae 00 00 00 00 00 00 00 00 00   ..L.$...........",
          "915: |   4048: 00 00 00 16 83 39 ff ff ff 14 81 16 00 00 00 12   .....9..........",
          "916: |   4064: 81 02 00 00 00 10 6e 00 00 00 0e 5a 00 00 00 0c   ......n....Z....",
          "917: |   4080: 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   F...............",
          "918: | page 4 offset 12288",
          "919: |   1072: 97 4d 32 14 00 ae 00 00 00 00 00 00 00 00 00 00   .M2.............",
          "920: |   4080: 00 00 00 00 00 00 00 07 01 03 11 02 74 31 00 bd   ............t1..",
          "921: | page 5 offset 16384",
          "922: |      0: fa 0f 7c 00 0a 0f 74 00 0f f9 0f eb 0f dd 0f cf   ..|...t.........",
          "923: |     16: 0f c1 0f b3 0f a4 0e 94 0f 84 0f 74 0f 74 0f 74   ...........t.t.t",
          "924: |     32: 0f 74 0f 64 0f 00 00 00 00 00 00 00 00 00 00 00   .t.d............",
          "925: |   3952: 00 00 00 00 07 05 00 00 00 02 00 be 0f 8c 10 07   ................",
          "926: |   3968: ff ff 00 00 07 05 00 00 00 02 00 aa 0f 9b f0 08   ................",
          "927: |   3984: c8 00 00 00 37 06 00 00 00 01 00 96 0f ac 00 08   ....7...........",
          "928: |   4000: 00 00 00 b3 07 15 00 10 00 02 00 82 0f ba 00 07   ................",
          "929: |   4016: 00 00 00 06 05 00 00 00 01 6e 0f c8 00 07 00 00   .........n......",
          "930: |   4032: 00 06 05 00 00 00 01 5a 03 f6 00 07 00 00 00 06   .......Z........",
          "931: |   4048: 05 00 00 00 01 46 0f e4 00 07 00 00 10 06 05 00   .....F..........",
          "932: |   4064: 00 00 01 32 10 02 00 07 00 00 00 07 05 00 00 00   ...2............",
          "933: |   4080: 01 1d ff ff ff 07 10 00 00 06 05 00 00 00 01 0a   ................",
          "934: | page 6 offset 20480",
          "935: |    624: 00 00 00 00 00 21 97 00 00 00 00 00 00 00 00 00   .....!..........",
          "936: |   1120: 00 00 00 00 00 24 57 3e 00 00 00 00 00 00 00 00   .....$W>........",
          "937: |   1616: 00 00 00 00 1f 97 00 00 00 00 00 00 00 00 00 00   ................",
          "938: |   2112: 00 00 00 1e 97 3d 00 00 00 00 00 00 00 00 00 00   .....=..........",
          "939: |   2608: 00 1d 97 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "940: | page 8 offset 28672",
          "941: |   1184: 00 00 00 00 00 00 00 00 00 97 4d 1e 13 ff ae 7c   ..........M....|",
          "942: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 90   ................",
          "943: | page 9 offset 32768",
          "944: |    256: 0d 01 c0 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "945: | page 10 offset 36864",
          "946: |      0: 0d 00 22 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "947: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 05   ................",
          "948: | page 12 offset 45056",
          "949: |      0: 0d 00 00 00 01 04 30 00 00 00 00 00 00 00 00 00   ......0.........",
          "950: | page 14 offset 53248",
          "951: |      0: 0d 00 00 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "952: |   1072: 96 4d 5a 14 00 00 00 00 00 00 00 00 00 00 00 00   .MZ.............",
          "953: | page 16 offset 61440",
          "954: |      0: 0d 00 00 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "955: |   1072: 97 4d 6e 14 00 ae 7b ff ff ff ff 00 00 00 00 00   .Mn.............",
          "956: | page 18 offset 69632",
          "957: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "958: |   1072: 4d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   M...............",
          "959: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "960: | page 20 offset 77824",
          "961: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "962: |   1072: 4d 81 16 14 00 ae 00 00 00 00 00 00 00 00 00 00   M...............",
          "963: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f   ................",
          "964: | page 22 offset 86016",
          "965: |      0: 0d 00 00 00 01 04 2f 00 04 2f 01 00 00 00 00 00   ....../../......",
          "966: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "967: |   1072: 4d 81 2a 14 00 00 00 00 00 00 00 00 00 00 00 00   M.*.............",
          "968: | page 24 offset 94208",
          "969: |   1072: 00 97 4c 0a 14 00 ae 7c 00 00 00 00 00 00 00 00   ..L....|........",
          "970: | page 25 offset 98304",
          "971: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "972: |   1072: 4d 81 3e 14 00 ae 7c 00 00 18 ff 00 00 00 00 00   M.>...|.........",
          "973: | page 27 offset 106496",
          "974: |      0: 00 00 00 00 00 00 00 12 00 00 00 07 00 00 00 1d   ................",
          "975: |     16: 00 00 00 09 00 00 00 1f 00 00 00 0b 00 00 00 21   ...............!",
          "976: |     32: 00 00 00 0d 00 10 00 25 00 00 00 0f 00 00 00 27   .......%.......'",
          "977: |     48: 00 00 00 11 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "978: | page 32 offset 126976",
          "979: |   2512: 00 00 00 00 00 00 00 45 21 00 00 00 00 00 00 00   .......E!.......",
          "980: | page 35 offset 139264",
          "981: |      0: 00 0a 08 44 00 05 02 77 00 0e 11 0a 92 00 00 00   ...D...w........",
          "982: |   1120: 00 00 00 00 00 20 97 00 00 00 00 00 00 00 00 00   ..... ..........",
          "983: |   1616: 00 00 00 00 22 00 00 00 00 00 00 00 00 00 00 00   ................",
          "984: |   2608: 00 00 00 97 3d 04 00 00 00 00 00 00 00 00 00 00   ....=...........",
          "985: |   3104: 00 1c 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "986: |   3600: 00 97 3d 04 ae 7c 00 00 00 00 00 00 00 00 00 00   ..=..|..........",
          "987: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a   ................",
          "988: | page 36 offset 143360",
          "989: |      0: 0a 08 44 00 04 02 00 00 00 00 00 00 00 00 00 00   ..D.............",
          "990: |   1120: 00 00 00 00 00 2a 97 3e 04 00 00 00 00 00 00 00   .....*.>........",
          "991: |   1616: 00 00 00 00 2c 97 3e 00 00 00 00 00 00 00 00 00   ....,.>.........",
          "992: |   2112: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 38   ...............8",
          "993: |   2128: 00 00 05 cd 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "994: |   3600: 00 97 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "995: | page 38 offset 151552",
          "996: |   2464: 00 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00   .........n......",
          "997: | page 40 offset 159744",
          "998: |   2512: 00 00 00 00 00 00 00 00 82 00 00 00 00 00 00 00   ................",
          "999: | page 42 offset 167936",
          "1000: |   2512: 00 00 00 00 00 00 00 96 00 00 00 00 00 00 00 00   ................",
          "1001: | page 44 offset 176128",
          "1002: |   2512: 00 00 00 00 00 00 00 00 aa 00 00 00 00 00 00 00   ................",
          "1003: | end crash-41390d95d613b6.db",
          "1004: }]} {}",
          "1006: do_catchsql_test 10.1 {",
          "1007:   SELECT * FROM t1 WHERE a<='2019-05-09' ORDER BY a DESC;",
          "1008: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "367b8d7aa7b33b179bd8e136e83b6dccf2bf8575",
      "candidate_info": {
        "commit_hash": "367b8d7aa7b33b179bd8e136e83b6dccf2bf8575",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/367b8d7aa7b33b179bd8e136e83b6dccf2bf8575",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Fix issues with command line invocation of wapptest.tcl.\n\nFossilOrigin-Name: 9e0d5d2640a92070967bc9fdf5c5b1653e41b9c04e04dcb70f18ead10f053aef",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3f36b988360204628d5ad1df2db34818b9a2d6ba989018d4c17757229f4b0f65",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "825:   }",
          "826: }",
          "828: for {set i 0} {$i < [llength $lTestArg]} {incr i} {",
          "830:     -platform {",
          "831:       if {$i==[llength $lTestArg]-1} { wapptest_usage }",
          "832:       incr i",
          "",
          "[Removed Lines]",
          "829:   switch -- [lindex $lTestArg $i] {",
          "",
          "[Added Lines]",
          "828: wapptest_init",
          "830:   set opt [lindex $lTestArg $i]",
          "831:   if {[string range $opt 0 1]==\"--\"} {",
          "832:     set opt [string range $opt 1 end]",
          "833:   }",
          "834:   switch -- $opt {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "882:   }",
          "883: }",
          "886: if {$G(noui)==0} {",
          "887:   wapp-start $lWappArg",
          "888: } else {",
          "",
          "[Removed Lines]",
          "885: wapptest_init",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}