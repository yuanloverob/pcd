{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3457be5f12b950953f10b5685316fa86a9ac466c",
      "candidate_info": {
        "commit_hash": "3457be5f12b950953f10b5685316fa86a9ac466c",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/3457be5f12b950953f10b5685316fa86a9ac466c",
        "files": [
          "ChangeLog",
          "ext/io/wait/wait.c",
          "test/io/wait/test_io_wait.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49797: [Backport #10923]\n\n\t* ext/io/wait/wait.c (io_nread): wrap return value with INT2FIX\n\t  Thanks to Yura Sokolov <funny.falcon@gmail.com>\n\t  [ruby-core:68369] [Bug#10923]\n\n\t* test/io/wait/test_io_wait.rb (test_nread_buffered):\n\t  fix broken test\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49812 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/io/wait/wait.c||ext/io/wait/wait.c",
          "test/io/wait/test_io_wait.rb||test/io/wait/test_io_wait.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/io/wait/wait.c||ext/io/wait/wait.c": [
          "File: ext/io/wait/wait.c -> ext/io/wait/wait.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     GetOpenFile(io, fptr);",
          "63:     rb_io_check_readable(fptr);",
          "64:     len = rb_io_read_pending(fptr);",
          "66:     if (!FIONREAD_POSSIBLE_P(fptr->fd)) return INT2FIX(0);",
          "67:     if (ioctl(fptr->fd, FIONREAD, &n)) return INT2FIX(0);",
          "68:     if (n > 0) return ioctl_arg2num(n);",
          "",
          "[Removed Lines]",
          "65:     if (len > 0) return len;",
          "",
          "[Added Lines]",
          "65:     if (len > 0) return INT2FIX(len);",
          "",
          "---------------"
        ],
        "test/io/wait/test_io_wait.rb||test/io/wait/test_io_wait.rb": [
          "File: test/io/wait/test_io_wait.rb -> test/io/wait/test_io_wait.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   def test_nread_buffered",
          "33:     @w.syswrite \".\\n!\"",
          "35:     assert_equal 1, @r.nread",
          "36:   end",
          "",
          "[Removed Lines]",
          "34:     assert_equal \".\\n\", @r.read(2)",
          "",
          "[Added Lines]",
          "34:     assert_equal \".\\n\", @r.gets",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-01\"",
          "3: #define RUBY_PATCHLEVEL 305",
          "7: #define RUBY_RELEASE_DAY 1",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-03\"",
          "3: #define RUBY_PATCHLEVEL 306",
          "7: #define RUBY_RELEASE_DAY 3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab4c4d3e2b293cb40ca6a5f2a233ae3b5747e184",
      "candidate_info": {
        "commit_hash": "ab4c4d3e2b293cb40ca6a5f2a233ae3b5747e184",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ab4c4d3e2b293cb40ca6a5f2a233ae3b5747e184",
        "files": [
          "test/io/console/test_io_console.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48987,r48989: [Backport #10646]\n\n\ttest_io_console.rb: chomp results\n\n\t* test/io/console/test_io_console.rb (run_pty): IO#readlines\n  ignores the given block.  need map to chomp the results.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50140 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/io/console/test_io_console.rb||test/io/console/test_io_console.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/io/console/test_io_console.rb||test/io/console/test_io_console.rb": [
          "File: test/io/console/test_io_console.rb -> test/io/console/test_io_console.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:     s.close if s",
          "249:   end",
          "252:     r, w, pid = PTY.spawn(EnvUtil.rubybin, \"-rio/console\", \"-e\", src)",
          "253:   rescue RuntimeError",
          "254:     skip $!",
          "255:   else",
          "257:     Process.wait(pid)",
          "258:     if block_given?",
          "259:       yield result",
          "",
          "[Removed Lines]",
          "251:   def run_pty(src)",
          "256:     result = r.readlines(&:chomp)",
          "",
          "[Added Lines]",
          "251:   def run_pty(src, n = 1)",
          "256:     result = []",
          "257:     n.times {result << r.gets.chomp}",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-31\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 328",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 329",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a7c313858454488dccd354f59ea05e4784e962e",
      "candidate_info": {
        "commit_hash": "6a7c313858454488dccd354f59ea05e4784e962e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6a7c313858454488dccd354f59ea05e4784e962e",
        "files": [
          "ChangeLog",
          "test/zlib/test_zlib.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54002: [Backport #12151]\n\n\t* test/zlib/test_zlib.rb (test_adler32_combine, test_crc32_combine):\n\t  Skip two tests on AIX because zconf.h in zlib does not correctly\n\t  recognize _LARGE_FILES in AIX. The problem was already reported\n\t  to zlib, and skip these tests until it is fixed.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54267 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb": [
          "File: test/zlib/test_zlib.rb -> test/zlib/test_zlib.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1046:         assert_equal(0x02820145, Zlib.adler32_combine(one, two, 1))",
          "1047:       rescue NotImplementedError",
          "1048:         skip \"adler32_combine is not implemented\"",
          "1049:       end",
          "1050:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1049:       rescue Minitest::Assertion",
          "1050:         if /aix/ =~ RUBY_PLATFORM",
          "1051:           skip \"zconf.h in zlib does not handle _LARGE_FILES in AIX. Skip until it is fixed\"",
          "1052:         end",
          "1053:         raise $!",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1063:         assert_equal(0x8c736521, Zlib.crc32_combine(one, two, 1))",
          "1064:       rescue NotImplementedError",
          "1065:         skip \"crc32_combine is not implemented\"",
          "1066:       end",
          "1067:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1071:       rescue Minitest::Assertion",
          "1072:         if /aix/ =~ RUBY_PLATFORM",
          "1073:           skip \"zconf.h in zlib does not handle _LARGE_FILES in AIX. Skip until it is fixed\"",
          "1074:         end",
          "1075:         raise $!",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 464",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 465",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad70c73ccb29e45f0530633e94cdea37da4fac17",
      "candidate_info": {
        "commit_hash": "ad70c73ccb29e45f0530633e94cdea37da4fac17",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ad70c73ccb29e45f0530633e94cdea37da4fac17",
        "files": [
          "ChangeLog",
          "ext/socket/ipsocket.c",
          "version.h"
        ],
        "message": "merge revision(s) 50404,50405: [Backport #10975]\n\n\t* ext/socket/ipsocket.c (init_inetsock_internal): preserve errno\n\t  before other library calls and use rb_syserr_fail.\n\t  [ruby-core:68531] [Bug #10975]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50578 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/socket/ipsocket.c||ext/socket/ipsocket.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/socket/ipsocket.c||ext/socket/ipsocket.c": [
          "File: ext/socket/ipsocket.c -> ext/socket/ipsocket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: static VALUE",
          "42: init_inetsock_internal(struct inetsock_arg *arg)",
          "43: {",
          "44:     int type = arg->type;",
          "45:     struct addrinfo *res, *lres;",
          "46:     int fd, status = 0, local = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     int error = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:  syscall = \"socket(2)\";",
          "81:  fd = status;",
          "82:  if (fd < 0) {",
          "83:      continue;",
          "84:  }",
          "85:  arg->fd = fd;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:      error = errno;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:  }",
          "109:  if (status < 0) {",
          "110:      close(fd);",
          "111:      arg->fd = fd = -1;",
          "112:      continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:      error = errno;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "124:      port = arg->remote.serv;",
          "125:  }",
          "128:     }",
          "130:     arg->fd = -1;",
          "",
          "[Removed Lines]",
          "127:  rsock_sys_fail_host_port(syscall, host, port);",
          "",
          "[Added Lines]",
          "130:  rsock_syserr_fail_host_port(error, syscall, host, port);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "132:     if (type == INET_SERVER) {",
          "133:  status = listen(fd, SOMAXCONN);",
          "134:  if (status < 0) {",
          "135:      close(fd);",
          "137:  }",
          "138:     }",
          "",
          "[Removed Lines]",
          "136:             rb_sys_fail(\"listen(2)\");",
          "",
          "[Added Lines]",
          "138:      error = errno;",
          "140:      rb_syserr_fail(error, \"listen(2)\");",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 351",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 352",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e73157dd03c5dd4848da16edbb59c44b07b2d4c",
      "candidate_info": {
        "commit_hash": "8e73157dd03c5dd4848da16edbb59c44b07b2d4c",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/8e73157dd03c5dd4848da16edbb59c44b07b2d4c",
        "files": [
          "ChangeLog",
          "lib/resolv.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49175: [Backport #10712]\n\n\t* lib/resolv.rb: consider ENETUNREACH as ResolvTimeout\n\t  [ruby-core:67411] [Bug #10712]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49785 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/resolv.rb||lib/resolv.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/resolv.rb||lib/resolv.rb": [
          "File: lib/resolv.rb -> lib/resolv.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "671:         timelimit = start + tout",
          "672:         begin",
          "673:           sender.send",
          "676:           raise ResolvTimeout",
          "677:         end",
          "678:         while true",
          "",
          "[Removed Lines]",
          "674:         rescue Errno::EHOSTUNREACH",
          "675:           # multi-homed IPv6 may generate this",
          "",
          "[Added Lines]",
          "674:         rescue Errno::EHOSTUNREACH, # multi-homed IPv6 may generate this",
          "675:                Errno::ENETUNREACH",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-01\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 302",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 303",
          "",
          "---------------"
        ]
      }
    }
  ]
}