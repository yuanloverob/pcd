{
  "cve_id": "CVE-2019-11339",
  "cve_desc": "The studio profile decoder in libavcodec/mpeg4videodec.c in FFmpeg 4.0 before 4.0.4 and 4.1 before 4.1.2 allows remote attackers to cause a denial of service (out-of-array access) or possibly have unspecified other impact via crafted MPEG-4 video data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "d227ed5d598340e719eff7156b1aa0a4469e9a6a",
  "patch_info": {
    "commit_hash": "d227ed5d598340e719eff7156b1aa0a4469e9a6a",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/d227ed5d598340e719eff7156b1aa0a4469e9a6a",
    "files": [
      "libavcodec/mpeg4videodec.c"
    ],
    "message": "avcodec/mpeg4videodec: Check idx in mpeg4_decode_studio_block()\n\nFixes: Out of array access\nFixes: 13500/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_MPEG4_fuzzer-5769760178962432\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nReviewed-by: Kieran Kunhya <kierank@obe.tv>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c": [
      "File: libavcodec/mpeg4videodec.c -> libavcodec/mpeg4videodec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1899:             code >>= 1;",
      "1900:             run = (1 << (additional_code_len - 1)) + code;",
      "1901:             idx += run;",
      "1902:             j = scantable[idx++];",
      "1903:             block[j] = sign ? 1 : -1;",
      "1904:         } else if (group >= 13 && group <= 20) {",
      "1906:             j = scantable[idx++];",
      "1907:             block[j] = get_xbits(&s->gb, additional_code_len);",
      "1908:         } else if (group == 21) {",
      "1910:             j = scantable[idx++];",
      "1911:             additional_code_len = s->avctx->bits_per_raw_sample + s->dct_precision + 4;",
      "1912:             flc = get_bits(&s->gb, additional_code_len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1902:             if (idx > 63)",
      "1903:                 return AVERROR_INVALIDDATA;",
      "1908:             if (idx > 63)",
      "1909:                 return AVERROR_INVALIDDATA;",
      "1914:             if (idx > 63)",
      "1915:                 return AVERROR_INVALIDDATA;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aadce82c585181168f3b7cdf260c3d461d4baa1b",
      "candidate_info": {
        "commit_hash": "aadce82c585181168f3b7cdf260c3d461d4baa1b",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/aadce82c585181168f3b7cdf260c3d461d4baa1b",
        "files": [
          "libavcodec/mpeg4videodec.c"
        ],
        "message": "avcodec/mpeg4videodec: Check idx in mpeg4_decode_studio_block()\n\nFixes: Out of array access\nFixes: 13500/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_MPEG4_fuzzer-5769760178962432\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nReviewed-by: Kieran Kunhya <kierank@obe.tv>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit d227ed5d598340e719eff7156b1aa0a4469e9a6a)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
          ],
          "candidate": [
            "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c": [
          "File: libavcodec/mpeg4videodec.c -> libavcodec/mpeg4videodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1897:             code >>= 1;",
          "1898:             run = (1 << (additional_code_len - 1)) + code;",
          "1899:             idx += run;",
          "1900:             j = scantable[idx++];",
          "1901:             block[j] = sign ? 1 : -1;",
          "1902:         } else if (group >= 13 && group <= 20) {",
          "1904:             j = scantable[idx++];",
          "1905:             block[j] = get_xbits(&s->gb, additional_code_len);",
          "1906:         } else if (group == 21) {",
          "1908:             j = scantable[idx++];",
          "1909:             additional_code_len = s->avctx->bits_per_raw_sample + s->dct_precision + 4;",
          "1910:             flc = get_bits(&s->gb, additional_code_len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1900:             if (idx > 63)",
          "1901:                 return AVERROR_INVALIDDATA;",
          "1906:             if (idx > 63)",
          "1907:                 return AVERROR_INVALIDDATA;",
          "1912:             if (idx > 63)",
          "1913:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e50a327c649c8a00741996b9f6db83fdc00285a",
      "candidate_info": {
        "commit_hash": "1e50a327c649c8a00741996b9f6db83fdc00285a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/1e50a327c649c8a00741996b9f6db83fdc00285a",
        "files": [
          "libavcodec/mpeg4videodec.c"
        ],
        "message": "avcodec/mpeg4videodec: Check idx in mpeg4_decode_studio_block()\n\nFixes: Out of array access\nFixes: 13500/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_MPEG4_fuzzer-5769760178962432\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nReviewed-by: Kieran Kunhya <kierank@obe.tv>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit d227ed5d598340e719eff7156b1aa0a4469e9a6a)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
          ],
          "candidate": [
            "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mpeg4videodec.c||libavcodec/mpeg4videodec.c": [
          "File: libavcodec/mpeg4videodec.c -> libavcodec/mpeg4videodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1899:             code >>= 1;",
          "1900:             run = (1 << (additional_code_len - 1)) + code;",
          "1901:             idx += run;",
          "1902:             j = scantable[idx++];",
          "1903:             block[j] = sign ? 1 : -1;",
          "1904:         } else if (group >= 13 && group <= 20) {",
          "1906:             j = scantable[idx++];",
          "1907:             block[j] = get_xbits(&s->gb, additional_code_len);",
          "1908:         } else if (group == 21) {",
          "1910:             j = scantable[idx++];",
          "1911:             additional_code_len = s->avctx->bits_per_raw_sample + s->dct_precision + 4;",
          "1912:             flc = get_bits(&s->gb, additional_code_len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1902:             if (idx > 63)",
          "1903:                 return AVERROR_INVALIDDATA;",
          "1908:             if (idx > 63)",
          "1909:                 return AVERROR_INVALIDDATA;",
          "1914:             if (idx > 63)",
          "1915:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    }
  ]
}