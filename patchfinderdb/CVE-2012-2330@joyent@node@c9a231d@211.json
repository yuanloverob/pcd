{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a3908f47f1524ca82ddb0ea08dd7d8a5ab4c10e2",
      "candidate_info": {
        "commit_hash": "a3908f47f1524ca82ddb0ea08dd7d8a5ab4c10e2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a3908f47f1524ca82ddb0ea08dd7d8a5ab4c10e2",
        "files": [
          "lib/child_process.js"
        ],
        "message": "child_process: hook up handle wrap to owning object",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "628:   this.killed = false;",
          "630:   this._handle = new Process();",
          "631:   this._handle.onexit = function(exitCode, signalCode) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22974a1acd0acd1081c36cc6a3c79a005c955b8d",
      "candidate_info": {
        "commit_hash": "22974a1acd0acd1081c36cc6a3c79a005c955b8d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/22974a1acd0acd1081c36cc6a3c79a005c955b8d",
        "files": [
          "deps/openssl/openssl.gyp"
        ],
        "message": "openssl: Set flags to properly build on sunos",
        "before_after_code_files": [
          "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp": [
          "File: deps/openssl/openssl.gyp -> deps/openssl/openssl.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:         'OPENSSL_NO_SCTP',",
          "19:         'OPENSSL_NO_SOCK',",
          "20:         # Work around brain dead SunOS linker.",
          "21:         'OPENSSL_NO_GOST',",
          "22:         'OPENSSL_NO_HW_PADLOCK',",
          "23:         'OPENSSL_NO_TTY',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:         'OPENSSL_NO_RDRAND',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "353:         'openssl/crypto/engine/eng_list.c',",
          "354:         'openssl/crypto/engine/eng_openssl.c',",
          "355:         'openssl/crypto/engine/eng_pkey.c',",
          "357:         'openssl/crypto/engine/eng_rsax.c',",
          "358:         'openssl/crypto/engine/eng_table.c',",
          "359:         'openssl/crypto/engine/tb_asnmth.c',",
          "",
          "[Removed Lines]",
          "356:         'openssl/crypto/engine/eng_rdrand.c',",
          "",
          "[Added Lines]",
          "357:         #'openssl/crypto/engine/eng_rdrand.c',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "557:         'openssl/crypto/sha/sha_one.c',",
          "558:         'openssl/crypto/srp/srp_lib.c',",
          "559:         'openssl/crypto/srp/srp_vfy.c',",
          "561:         'openssl/crypto/stack/stack.c',",
          "562:         'openssl/crypto/store/str_err.c',",
          "563:         'openssl/crypto/store/str_lib.c',",
          "",
          "[Removed Lines]",
          "560:         'openssl/crypto/srp/srptest.c',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "719cd461d39d01ab0d2a4a396813c59daf2ad7f1",
      "candidate_info": {
        "commit_hash": "719cd461d39d01ab0d2a4a396813c59daf2ad7f1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/719cd461d39d01ab0d2a4a396813c59daf2ad7f1",
        "files": [
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/win/error.c",
          "deps/uv/test/test-spawn.c"
        ],
        "message": "Upgrade uv to 936795a2c",
        "before_after_code_files": [
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   XX( 51, ELOOP, \"too many symbolic links encountered\") \\",
          "122:   XX( 52, EXDEV, \"cross-device link not permitted\") \\",
          "123:   XX( 53, ENOTEMPTY, \"directory not empty\") \\",
          "127: #define UV_ERRNO_GEN(val, name, s) UV_##name = val,",
          "",
          "[Removed Lines]",
          "124:   XX( 54, ENOSPC, \"no space left on device\")",
          "",
          "[Added Lines]",
          "124:   XX( 54, ENOSPC, \"no space left on device\") \\",
          "125:   XX( 55, EIO, \"i/o error\") \\",
          "126:   XX( 56, EROFS, \"read-only file system\" )",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: uv_err_code uv_translate_sys_error(int sys_errno) {",
          "60:   switch (sys_errno) {",
          "61:     case 0: return UV_OK;",
          "62:     case EPERM: return UV_EPERM;",
          "63:     case ENOSYS: return UV_ENOSYS;",
          "64:     case ENOTSOCK: return UV_ENOTSOCK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:     case EIO: return UV_EIO;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:     case EBUSY: return UV_EBUSY;",
          "95:     case ENOTEMPTY: return UV_ENOTEMPTY;",
          "96:     case ENOSPC: return UV_ENOSPC;",
          "97:     case ENOMEM: return UV_ENOMEM;",
          "98:     default: return UV_UNKNOWN;",
          "99:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     case EROFS: return UV_EROFS;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: uv_err_code uv_translate_sys_error(int sys_errno) {",
          "68:   switch (sys_errno) {",
          "69:     case ERROR_SUCCESS:                     return UV_OK;",
          "70:     case ERROR_FILE_NOT_FOUND:              return UV_ENOENT;",
          "71:     case ERROR_INVALID_NAME:                return UV_ENOENT;",
          "72:     case ERROR_MOD_NOT_FOUND:               return UV_ENOENT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     case ERROR_BEGINNING_OF_MEDIA:          return UV_EIO;",
          "71:     case ERROR_BUS_RESET:                   return UV_EIO;",
          "72:     case ERROR_CRC:                         return UV_EIO;",
          "73:     case ERROR_DEVICE_DOOR_OPEN:            return UV_EIO;",
          "74:     case ERROR_DEVICE_REQUIRES_CLEANING:    return UV_EIO;",
          "75:     case ERROR_DISK_CORRUPT:                return UV_EIO;",
          "76:     case ERROR_EOM_OVERFLOW:                return UV_EIO;",
          "77:     case ERROR_FILEMARK_DETECTED:           return UV_EIO;",
          "78:     case ERROR_INVALID_BLOCK_LENGTH:        return UV_EIO;",
          "79:     case ERROR_IO_DEVICE:                   return UV_EIO;",
          "80:     case ERROR_NO_DATA_DETECTED:            return UV_EIO;",
          "81:     case ERROR_NO_SIGNAL_SENT:              return UV_EIO;",
          "82:     case ERROR_OPEN_FAILED:                 return UV_EIO;",
          "83:     case ERROR_SETMARK_DETECTED:            return UV_EIO;",
          "84:     case ERROR_SIGNAL_REFUSED:              return UV_EIO;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:     case ERROR_EA_TABLE_FULL:               return UV_ENOSPC;",
          "112:     case ERROR_END_OF_MEDIA:                return UV_ENOSPC;",
          "113:     case ERROR_HANDLE_DISK_FULL:            return UV_ENOSPC;",
          "114:     case ERROR_NOT_CONNECTED:               return UV_ENOTCONN;",
          "115:     case WSAENOTCONN:                       return UV_ENOTCONN;",
          "116:     case ERROR_DIR_NOT_EMPTY:               return UV_ENOTEMPTY;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     case ERROR_WRITE_PROTECT:               return UV_EROFS;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:     case WSAETIMEDOUT:                      return UV_ETIMEDOUT;",
          "129:     case WSAHOST_NOT_FOUND:                 return UV_ENOENT;",
          "130:     case WSAENOTSOCK:                       return UV_ENOTSOCK;",
          "131:     default:                                return UV_UNKNOWN;",
          "132:   }",
          "133: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:     case ERROR_NOT_SAME_DEVICE:             return UV_EXDEV;",
          "",
          "---------------"
        ],
        "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c": [
          "File: deps/uv/test/test-spawn.c -> deps/uv/test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <stdlib.h>",
          "26: #include <string.h>",
          "28: static int close_cb_called;",
          "29: static int exit_cb_called;",
          "30: static uv_process_t process;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #ifndef _WIN32",
          "29: #include <unistd.h>",
          "30: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "408bfece510520d73d9e19629450dfec691cc1e6",
      "candidate_info": {
        "commit_hash": "408bfece510520d73d9e19629450dfec691cc1e6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/408bfece510520d73d9e19629450dfec691cc1e6",
        "files": [
          "lib/fs.js"
        ],
        "message": "fs: fix infinite loop in fs.readFile()\n\nFix an infinite loop in the case where the file got truncated by a concurrent\nwriter while fs.readFile() was busy reading in the file.",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:       });",
          "149:     }",
          "151:     pos += bytesRead;",
          "152:     if (size !== 0) {",
          "153:       if (pos === size) close();",
          "154:       else read();",
          "155:     } else {",
          "163:     }",
          "164:   }",
          "",
          "[Removed Lines]",
          "157:       if (bytesRead > 0) {",
          "158:         buffers.push(buffer.slice(0, bytesRead));",
          "159:         read();",
          "160:       } else {",
          "161:         close();",
          "162:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:       if (size === 0) {",
          "170:         buffer = Buffer.concat(buffers, pos);",
          "171:       }",
          "173:       if (encoding) buffer = buffer.toString(encoding);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0f3eb015a9a062746b7dc5d562108d6fb98209a",
      "candidate_info": {
        "commit_hash": "a0f3eb015a9a062746b7dc5d562108d6fb98209a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a0f3eb015a9a062746b7dc5d562108d6fb98209a",
        "files": [
          "src/node_file.cc",
          "test/simple/test-isolates.js"
        ],
        "message": "node_file.cc should use NODE_LOOP()",
        "before_after_code_files": [
          "src/node_file.cc||src/node_file.cc",
          "test/simple/test-isolates.js||test/simple/test-isolates.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "226: #define ASYNC_CALL(func, callback, ...)                           \\",
          "227:   FSReqWrap* req_wrap = new FSReqWrap();                          \\",
          "229:       __VA_ARGS__, After);                                        \\",
          "230:   assert(r == 0);                                                 \\",
          "231:   req_wrap->object_->Set(oncomplete_sym, callback);               \\",
          "",
          "[Removed Lines]",
          "228:   int r = uv_fs_##func(uv_default_loop(), &req_wrap->req_,        \\",
          "",
          "[Added Lines]",
          "228:   int r = uv_fs_##func(NODE_LOOP(), &req_wrap->req_,              \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235: #define SYNC_CALL(func, path, ...)                                \\",
          "236:   fs_req_wrap req_wrap;                                           \\",
          "238:   if (result < 0) {                                               \\",
          "240:     return ThrowException(UVException(code, #func, \"\", path));    \\",
          "241:   }",
          "",
          "[Removed Lines]",
          "237:   int result = uv_fs_##func(uv_default_loop(), &req_wrap.req, __VA_ARGS__, NULL); \\",
          "239:     int code = uv_last_error(uv_default_loop()).code;             \\",
          "",
          "[Added Lines]",
          "237:   int result = uv_fs_##func(NODE_LOOP(), &req_wrap.req, __VA_ARGS__, NULL); \\",
          "239:     int code = uv_last_error(NODE_LOOP()).code;             \\",
          "",
          "---------------"
        ],
        "test/simple/test-isolates.js||test/simple/test-isolates.js": [
          "File: test/simple/test-isolates.js -> test/simple/test-isolates.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: console.log(\"count: %d\", process._countIsolate());",
          "3: if (process.tid === 1) {",
          "4:   var isolate = process._newIsolate(process.argv);",
          "6:   console.error(\"master\");",
          "8: } else {",
          "11: }",
          "",
          "[Removed Lines]",
          "7:   console.log(\"count: %d\", process._countIsolate());",
          "9:   console.error(\"FUCK YEAH!\");",
          "10:   console.log(\"count: %d\", process._countIsolate());",
          "",
          "[Added Lines]",
          "1: var fs = require('fs');",
          "9:   fs.stat(__dirname, function(err, stat) {",
          "10:     if (err) {",
          "11:       console.error(\"thread 1 error!\");",
          "12:       throw err;",
          "13:     }",
          "14:     console.error('thread 1', stat);",
          "15:   });",
          "16:   console.log(\"thread 1 count: %d\", process._countIsolate());",
          "18:   console.error(\"slave\");",
          "19:   fs.stat(__dirname, function(err, stat) {",
          "20:     if (err) {",
          "21:       console.error(\"thread 2 error!\");",
          "22:       throw err;",
          "23:     }",
          "24:     console.error('thread 2', stat);",
          "25:   });",
          "26:   console.error(\"thread 2 count: %d\", process._countIsolate());",
          "",
          "---------------"
        ]
      }
    }
  ]
}