{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff7256e75928be74101f3ce2d1fbf62f7e10a1f3",
      "candidate_info": {
        "commit_hash": "ff7256e75928be74101f3ce2d1fbf62f7e10a1f3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ff7256e75928be74101f3ce2d1fbf62f7e10a1f3",
        "files": [
          "crypto/x509/x509_vpm.c",
          "doc/crypto/X509_VERIFY_PARAM_set_flags.pod",
          "include/openssl/x509_vfy.h",
          "test/crltest.c",
          "util/libcrypto.num"
        ],
        "message": "GH2176: Add X509_VERIFY_PARAM_get_time\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2208)\n(cherry picked from commit 329f2f4a428b0acb7a579869a13f6cd6bf0a3551)",
        "before_after_code_files": [
          "crypto/x509/x509_vpm.c||crypto/x509/x509_vpm.c",
          "include/openssl/x509_vfy.h||include/openssl/x509_vfy.h",
          "test/crltest.c||test/crltest.c",
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x509_vpm.c||crypto/x509/x509_vpm.c": [
          "File: crypto/x509/x509_vpm.c -> crypto/x509/x509_vpm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "337:     param->auth_level = auth_level;",
          "338: }",
          "340: void X509_VERIFY_PARAM_set_time(X509_VERIFY_PARAM *param, time_t t)",
          "341: {",
          "342:     param->check_time = t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340: time_t X509_VERIFY_PARAM_get_time(const X509_VERIFY_PARAM *param)",
          "341: {",
          "342:     return param->check_time;",
          "343: }",
          "",
          "---------------"
        ],
        "include/openssl/x509_vfy.h||include/openssl/x509_vfy.h": [
          "File: include/openssl/x509_vfy.h -> include/openssl/x509_vfy.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "459: int X509_VERIFY_PARAM_set_trust(X509_VERIFY_PARAM *param, int trust);",
          "460: void X509_VERIFY_PARAM_set_depth(X509_VERIFY_PARAM *param, int depth);",
          "461: void X509_VERIFY_PARAM_set_auth_level(X509_VERIFY_PARAM *param, int auth_level);",
          "462: void X509_VERIFY_PARAM_set_time(X509_VERIFY_PARAM *param, time_t t);",
          "463: int X509_VERIFY_PARAM_add0_policy(X509_VERIFY_PARAM *param,",
          "464:                                   ASN1_OBJECT *policy);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "462: time_t X509_VERIFY_PARAM_get_time(const X509_VERIFY_PARAM *param);",
          "",
          "---------------"
        ],
        "test/crltest.c||test/crltest.c": [
          "File: test/crltest.c -> test/crltest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:         goto err;",
          "253:     X509_STORE_CTX_set0_trusted_stack(ctx, roots);",
          "254:     X509_STORE_CTX_set0_crls(ctx, crls);",
          "256:     X509_VERIFY_PARAM_set_depth(param, 16);",
          "257:     if (flags)",
          "258:         X509_VERIFY_PARAM_set_flags(param, flags);",
          "",
          "[Removed Lines]",
          "255:     X509_VERIFY_PARAM_set_time(param, 1474934400 /* Sep 27th, 2016 */);",
          "",
          "[Added Lines]",
          "257:     X509_VERIFY_PARAM_set_time(param, PARAM_TIME);",
          "258:     if (X509_VERIFY_PARAM_get_time(param) != PARAM_TIME) {",
          "259:         fprintf(stderr, \"set_time/get_time mismatch.\\n\");",
          "260:         goto err;",
          "261:     }",
          "",
          "---------------"
        ],
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4212: CT_POLICY_EVAL_CTX_set_time             4173 1_1_0d EXIST::FUNCTION:CT",
          "4213: X509_VERIFY_PARAM_set_inh_flags         4174 1_1_0d EXIST::FUNCTION:",
          "4214: X509_VERIFY_PARAM_get_inh_flags         4175 1_1_0d EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4215: X509_VERIFY_PARAM_get_time              4181 1_1_0d EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f53e42e518072597d02d3a32ff98ebea2d99214f",
      "candidate_info": {
        "commit_hash": "f53e42e518072597d02d3a32ff98ebea2d99214f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f53e42e518072597d02d3a32ff98ebea2d99214f",
        "files": [
          "test/recipes/70-test_sslcbcpadding.t"
        ],
        "message": "Address review comments.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit 3058b742664287a30be77488c2ce3d8103bffd64)",
        "before_after_code_files": [
          "test/recipes/70-test_sslcbcpadding.t||test/recipes/70-test_sslcbcpadding.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/70-test_sslcbcpadding.t||test/recipes/70-test_sslcbcpadding.t": [
          "File: test/recipes/70-test_sslcbcpadding.t -> test/recipes/70-test_sslcbcpadding.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: plan skip_all => \"$test_name needs the sock feature enabled\"",
          "24:     if disabled(\"sock\");",
          "29: $ENV{OPENSSL_ia32cap} = '~0x200000200000000';",
          "30: my $proxy = TLSProxy::Proxy->new(",
          "",
          "[Removed Lines]",
          "26: plan skip_all => \"$test_name needs TLSv1.2 enabled\"",
          "27:     if disabled(\"tls1_2\");",
          "",
          "[Added Lines]",
          "26: plan skip_all => \"$test_name needs TLSv1.1 enabled\"",
          "27:     if disabled(\"tls1_1\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     (!$ENV{HARNESS_ACTIVE} || $ENV{HARNESS_VERBOSE})",
          "35: );",
          "39: # TODO: We could test all 256 values, but then the log file gets too large for",
          "40: # CI. See https://github.com/openssl/openssl/issues/1440.",
          "41: my @test_offsets = (0, 128, 254, 255);",
          "45: # Test that maximally-padded records are accepted.",
          "46: $proxy->start() or plan skip_all => \"Unable to start up Proxy for tests\";",
          "47: ok(TLSProxy::Message->success(), \"Maximally-padded record test\");",
          "49: # Test that invalid padding is rejected.",
          "50: foreach my $offset (@test_offsets) {",
          "51:     $proxy->clear();",
          "52:     $bad_padding_offset = $offset;",
          "54:     ok(TLSProxy::Message->fail(), \"Invalid padding byte $bad_padding_offset\");",
          "55: }",
          "",
          "[Removed Lines]",
          "37: my $bad_padding_offset = -1;",
          "43: plan tests => 1 + scalar(@test_offsets);",
          "53:     $proxy->start() or plan skip_all => \"Unable to start up Proxy for tests\";;",
          "",
          "[Added Lines]",
          "42: my $bad_padding_offset = -1;",
          "44: plan tests => 1 + scalar(@test_offsets);",
          "51:     $proxy->start();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f99bfed678b09110fda82bc6896fd45eb0b376c",
      "candidate_info": {
        "commit_hash": "3f99bfed678b09110fda82bc6896fd45eb0b376c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3f99bfed678b09110fda82bc6896fd45eb0b376c",
        "files": [
          "test/sslapitest.c"
        ],
        "message": "Add a read_ahead test\n\nThis test checks that read_ahead works correctly when dealing with large\nrecords.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 7856332e8c14fd1da1811a9d0afde243dd0f4669)",
        "before_after_code_files": [
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #define NUM_EXTRA_CERTS 40",
          "35: static int execute_test_large_message(const SSL_METHOD *smeth,",
          "37: {",
          "38:     SSL_CTX *cctx = NULL, *sctx = NULL;",
          "39:     SSL *clientssl = NULL, *serverssl = NULL;",
          "",
          "[Removed Lines]",
          "36:                                       const SSL_METHOD *cmeth)",
          "",
          "[Added Lines]",
          "36:                                       const SSL_METHOD *cmeth, int read_ahead)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:         goto end;",
          "62:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     if(read_ahead) {",
          "69:         SSL_CTX_set_read_ahead(cctx, 1);",
          "70:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108: static int test_large_message_tls(void)",
          "109: {",
          "111: }",
          "113: #ifndef OPENSSL_NO_DTLS",
          "114: static int test_large_message_dtls(void)",
          "115: {",
          "116:     return execute_test_large_message(DTLS_server_method(),",
          "118: }",
          "119: #endif",
          "",
          "[Removed Lines]",
          "110:     return execute_test_large_message(TLS_server_method(), TLS_client_method());",
          "117:                                       DTLS_client_method());",
          "",
          "[Added Lines]",
          "118:     return execute_test_large_message(TLS_server_method(), TLS_client_method(),",
          "119:                                       0);",
          "120: }",
          "122: static int test_large_message_tls_read_ahead(void)",
          "123: {",
          "124:     return execute_test_large_message(TLS_server_method(), TLS_client_method(),",
          "125:                                       1);",
          "136:                                       DTLS_client_method(), 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "867:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "869:     ADD_TEST(test_large_message_tls);",
          "870: #ifndef OPENSSL_NO_DTLS",
          "871:     ADD_TEST(test_large_message_dtls);",
          "872: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "889:     ADD_TEST(test_large_message_tls_read_ahead);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "929cc3fa6bceba1c6d9c362c56b89cbf2acf40bc",
      "candidate_info": {
        "commit_hash": "929cc3fa6bceba1c6d9c362c56b89cbf2acf40bc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/929cc3fa6bceba1c6d9c362c56b89cbf2acf40bc",
        "files": [
          "doc/ssl/SSL_CTX_set_verify.pod",
          "ssl/statem/statem_clnt.c"
        ],
        "message": "Partial revert of \"Fix client verify mode to check SSL_VERIFY_PEER\"\n\nThis partially reverts commit c636c1c47. It also tweaks the documentation\nand comments in this area. On the client side the documented interface for\nSSL_CTX_set_verify()/SSL_set_verify() is that setting the flag\nSSL_VERIFY_PEER causes verfication of the server certificate to take place.\nPreviously what was implemented was that if *any* flag was set then\nverification would take place. The above commit improved the semantics to\nbe as per the documented interface.\n\nHowever, we have had a report of at least one application where an\napplication was incorrectly using the interface and used *only*\nSSL_VERIFY_FAIL_IF_NO_PEER_CERT on the client side. In OpenSSL prior to\nthe above commit this still caused verification of the server certificate\nto take place. After this commit the application silently failed to verify\nthe server certificate.\n\nIdeally SSL_CTX_set_verify()/SSL_set_verify() could be modified to indicate\nif invalid flags were being used. However these are void functions!\n\nThe simplest short term solution is to revert to the previous behaviour\nwhich at least means we \"fail closed\" rather than \"fail open\".\n\nThanks to Cory Benfield for reporting this issue.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit c8e2f98c97ff3327784843946c2d62761572e5d5)",
        "before_after_code_files": [
          "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
          ],
          "candidate": [
            "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
          "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1224:     }",
          "1226:     i = ssl_verify_cert_chain(s, sk);",
          "1228:         al = ssl_verify_alarm_type(s->verify_result);",
          "1229:         SSLerr(SSL_F_TLS_PROCESS_SERVER_CERTIFICATE,",
          "1230:                SSL_R_CERTIFICATE_VERIFY_FAILED);",
          "",
          "[Removed Lines]",
          "1227:     if ((s->verify_mode & SSL_VERIFY_PEER) && i <= 0) {",
          "",
          "[Added Lines]",
          "1241:     if (s->verify_mode != SSL_VERIFY_NONE && i <= 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "174ec019c3eb37f552d781a1549cdbccb81627ae",
      "candidate_info": {
        "commit_hash": "174ec019c3eb37f552d781a1549cdbccb81627ae",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/174ec019c3eb37f552d781a1549cdbccb81627ae",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Remove untrue comment.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:  $(RM) configdata.pm",
          "302:  $(RM) Makefile",
          "306: # We check if any depfile is newer than Makefile and decide to",
          "307: # concatenate only if that is true.",
          "308: depend:",
          "",
          "[Removed Lines]",
          "304: # This exists solely for those who still type 'make depend'",
          "305: #",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}