{
  "cve_id": "CVE-2016-10211",
  "cve_desc": "libyara/grammar.y in YARA 3.5.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted rule that is mishandled in the yr_parser_lookup_loop_variable function.",
  "repo": "VirusTotal/yara",
  "patch_hash": "890c3f850293176c0e996a602ffa88b315f4e98f",
  "patch_info": {
    "commit_hash": "890c3f850293176c0e996a602ffa88b315f4e98f",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/890c3f850293176c0e996a602ffa88b315f4e98f",
    "files": [
      "libyara/grammar.c",
      "libyara/grammar.y"
    ],
    "message": "Fix issue #575",
    "before_after_code_files": [
      "libyara/grammar.c||libyara/grammar.c",
      "libyara/grammar.y||libyara/grammar.y"
    ]
  },
  "patch_diff": {
    "libyara/grammar.c||libyara/grammar.c": [
      "File: libyara/grammar.c -> libyara/grammar.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "547: #define YYFINAL  2",
      "552: #define YYNTOKENS  72",
      "554: #define YYNNTS  41",
      "",
      "[Removed Lines]",
      "549: #define YYLAST   408",
      "556: #define YYNRULES  121",
      "558: #define YYNSTATES  209",
      "",
      "[Added Lines]",
      "549: #define YYLAST   406",
      "556: #define YYNRULES  122",
      "558: #define YYNSTATES  210",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "612:      472,   485,   502,   503,   509,   508,   524,   523,   539,   553,",
      "613:      554,   559,   560,   561,   562,   567,   652,   698,   756,   801,",
      "614:      802,   806,   831,   867,   913,   935,   944,   953,   968,   980,",
      "622: };",
      "623: #endif",
      "",
      "[Removed Lines]",
      "615:      994,  1007,  1019,  1049,  1018,  1163,  1162,  1241,  1247,  1254,",
      "616:     1253,  1316,  1315,  1376,  1385,  1394,  1403,  1412,  1421,  1430,",
      "617:     1434,  1442,  1443,  1448,  1470,  1482,  1498,  1497,  1503,  1514,",
      "618:     1515,  1520,  1527,  1538,  1539,  1543,  1551,  1555,  1565,  1579,",
      "619:     1595,  1605,  1614,  1639,  1651,  1663,  1679,  1691,  1707,  1752,",
      "620:     1771,  1789,  1807,  1825,  1851,  1869,  1879,  1889,  1899,  1909,",
      "621:     1919,  1929",
      "",
      "[Added Lines]",
      "615:      994,  1007,  1018,  1024,  1054,  1023,  1168,  1167,  1246,  1252,",
      "616:     1259,  1258,  1321,  1320,  1381,  1390,  1399,  1408,  1417,  1426,",
      "617:     1435,  1439,  1447,  1448,  1453,  1475,  1487,  1503,  1502,  1508,",
      "618:     1519,  1520,  1525,  1532,  1543,  1544,  1548,  1556,  1560,  1570,",
      "619:     1584,  1600,  1610,  1619,  1644,  1656,  1668,  1684,  1696,  1712,",
      "620:     1757,  1776,  1794,  1812,  1830,  1856,  1874,  1884,  1894,  1904,",
      "621:     1914,  1924,  1934",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "672: #define yypact_value_is_default(Yystate) \\",
      "673:   (!!((Yystate) == (-73)))",
      "677: #define yytable_value_is_error(Yytable_value) \\",
      "678:   0",
      "",
      "[Removed Lines]",
      "675: #define YYTABLE_NINF -94",
      "",
      "[Added Lines]",
      "675: #define YYTABLE_NINF -95",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "682: static const yytype_int16 yypact[] =",
      "683: {",
      "705: };",
      "",
      "[Removed Lines]",
      "684:      -73,    79,   -73,   -32,    -4,   -73,   -73,    94,   -73,   -73,",
      "685:      -73,   -73,    13,   -73,   -73,   -73,   -73,    -8,    72,     6,",
      "686:      -73,    78,   111,   -73,    61,   122,   123,    82,   -73,    90,",
      "687:      123,   -73,   147,   150,    16,   -73,    96,   147,   -73,   101,",
      "688:       97,   -73,   -73,   -73,   -73,   151,    53,   -73,    48,   -73,",
      "689:      -73,   -73,   149,   145,   -73,    -9,   -73,   103,   107,   -73,",
      "690:      -73,   106,   -73,   -73,   -73,   -73,   -73,   -73,   110,   -73,",
      "691:      -73,   135,    48,   135,    48,   -33,   -73,    64,   -73,   144,",
      "692:      306,   -73,   -73,   135,   108,   135,   135,   135,   135,    -7,",
      "693:      322,   -73,   -73,   -73,    64,   117,   163,   168,   135,    48,",
      "694:      -73,   -73,    -6,   167,   135,   135,   135,   135,   135,   135,",
      "695:      135,   135,   135,   135,   135,   135,   135,   135,   135,   135,",
      "696:      135,    86,    86,   322,   135,   -73,   243,   261,   183,   203,",
      "697:      159,    -6,   -73,   -73,   -73,   279,   121,   125,    95,    48,",
      "698:       48,   -73,   -73,   -73,   -73,   322,   337,   351,   -43,   322,",
      "699:      322,   322,   322,   322,   322,    40,    40,    58,    58,   -73,",
      "700:      -73,   -73,   -73,   -73,   -73,   -73,   -73,   129,   -73,   -73,",
      "701:      -73,   -73,   128,   -73,   -73,    48,   152,   -73,    15,   135,",
      "702:      131,   -73,    95,   -73,   -73,    71,   -73,   223,   135,   133,",
      "703:      -73,   132,   -73,    15,   -73,    73,   129,   -73,    48,   -73,",
      "704:      -73,   135,   134,    31,   322,    48,   -73,    49,   -73",
      "",
      "[Added Lines]",
      "684:      -73,    90,   -73,   -32,   -10,   -73,   -73,    93,   -73,   -73,",
      "685:      -73,   -73,     1,   -73,   -73,   -73,   -73,   -49,     7,   -36,",
      "686:      -73,    20,    26,   -73,   -28,    92,    46,     4,   -73,    40,",
      "687:       46,   -73,   100,   119,    16,   -73,    72,   100,   -73,    77,",
      "688:       83,   -73,   -73,   -73,   -73,   134,    59,   -73,    48,   -73,",
      "689:      -73,   -73,   133,   136,   -73,   -18,   -73,    88,    95,   -73,",
      "690:      -73,    91,   -73,   -73,   -73,   -73,   -73,   -73,   102,   -73,",
      "691:      -73,   126,    48,   126,    48,   -44,   -73,    85,   -73,   127,",
      "692:      297,   -73,   -73,   126,   110,   126,   126,   126,   126,     2,",
      "693:      313,   -73,   -73,   -73,    85,   111,   154,   172,   126,    48,",
      "694:      -73,   -73,    -6,   162,   126,   126,   126,   126,   126,   126,",
      "695:      126,   126,   126,   126,   126,   126,   126,   126,   126,   126,",
      "696:      126,    60,    60,   313,   126,   -73,   234,   252,   174,   194,",
      "697:      -73,   153,    -6,   -73,   -73,   -73,   270,   117,   120,   108,",
      "698:       48,    48,   -73,   -73,   -73,   -73,   313,   328,   342,   349,",
      "699:      313,   313,   313,   313,   313,   313,   113,   113,    53,    53,",
      "700:      -73,   -73,   -73,   -73,   -73,   -73,   -73,   -73,   121,   -73,",
      "701:      -73,   -73,   -73,   124,   -73,   -73,    48,   151,   -73,    -1,",
      "702:      126,   125,   -73,   108,   -73,   -73,    18,   -73,   214,   126,",
      "703:      129,   -73,   143,   -73,    -1,   -73,    63,   121,   -73,    48,",
      "704:      -73,   -73,   126,   144,    31,   313,    48,   -73,    33,   -73",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "714:       23,    22,    12,    24,     0,    14,     0,     0,    10,     0,",
      "715:       13,    25,     0,     0,     0,    26,     0,    15,    32,     0,",
      "716:        0,    28,    27,    30,    31,     0,    34,    33,     0,    11,",
      "723:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,",
      "724:        0,    35,    37,    60,     0,    61,     0,     0,     0,     0,",
      "733: };",
      "736: static const yytype_int16 yypgoto[] =",
      "737: {",
      "742:      -67",
      "743: };",
      "",
      "[Removed Lines]",
      "717:       29,    38,     0,     0,    45,    59,   103,   105,   107,   100,",
      "718:      101,     0,   102,    53,    97,    98,    94,    95,     0,    55,",
      "719:       56,     0,     0,     0,     0,   108,   121,    16,    54,     0,",
      "720:       79,    39,    39,     0,     0,     0,     0,     0,     0,     0,",
      "721:       93,   109,    68,   118,     0,    54,    79,     0,     0,    49,",
      "722:       71,    69,     0,     0,     0,     0,     0,     0,     0,     0,",
      "725:        0,     0,    80,    96,    46,     0,     0,    50,    51,     0,",
      "726:        0,    88,    86,    67,    57,    58,   117,   115,   116,    77,",
      "727:       78,    73,    75,    74,    76,   119,   120,   110,   111,   112,",
      "728:      113,   114,    42,    41,    43,    44,    40,     0,   104,   106,",
      "729:       99,    62,     0,    47,    48,     0,    72,    70,     0,     0,",
      "730:        0,    65,    52,    91,    92,     0,    89,     0,     0,     0,",
      "731:       82,     0,    87,     0,    83,     0,    84,    63,     0,    90,",
      "732:       81,     0,     0,     0,    85,     0,    66,     0,    64",
      "738:      -73,   -73,   199,   218,   -73,   -73,   -73,   -73,   -73,   -73,",
      "739:      -73,   -73,   -73,   -73,   192,   -73,   186,   -73,   -73,   142,",
      "740:      -73,   -73,   -73,   -73,   126,   -48,   -72,   -73,   -73,   -73,",
      "741:      -73,   -73,   -73,    50,   -73,   100,   -73,   -73,    35,   164,",
      "",
      "[Added Lines]",
      "717:       29,    38,     0,     0,    45,    59,   104,   106,   108,   101,",
      "718:      102,     0,   103,    53,    98,    99,    95,    96,     0,    55,",
      "719:       56,     0,     0,     0,     0,   109,   122,    16,    54,     0,",
      "720:       80,    39,    39,     0,     0,     0,     0,     0,     0,     0,",
      "721:       94,   110,    69,   119,     0,    54,    80,     0,     0,    49,",
      "722:       72,    70,     0,     0,     0,     0,     0,     0,     0,     0,",
      "725:       62,     0,     0,    81,    97,    46,     0,     0,    50,    51,",
      "726:        0,     0,    89,    87,    68,    57,    58,   118,   116,   117,",
      "727:       78,    79,    74,    76,    75,    77,   120,   121,   111,   112,",
      "728:      113,   114,   115,    42,    41,    43,    44,    40,     0,   105,",
      "729:      107,   100,    63,     0,    47,    48,     0,    73,    71,     0,",
      "730:        0,     0,    66,    52,    92,    93,     0,    90,     0,     0,",
      "731:        0,    83,     0,    88,     0,    84,     0,    85,    64,     0,",
      "732:       91,    82,     0,     0,     0,    86,     0,    67,     0,    65",
      "738:      -73,   -73,   211,   212,   -73,   -73,   -73,   -73,   -73,   -73,",
      "739:      -73,   -73,   -73,   -73,   189,   -73,   183,   -73,   -73,   139,",
      "740:      -73,   -73,   -73,   -73,   130,   -48,   -72,   -73,   -73,   -73,",
      "741:      -73,   -73,   -73,    41,   -73,   103,   -73,   -73,    29,   164,",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "747: {",
      "748:       -1,     1,     5,     6,    17,    33,    25,    28,    40,     7,",
      "749:       15,    19,    21,    30,    31,    37,    38,    52,    53,   121,",
      "752:       80",
      "753: };",
      "",
      "[Removed Lines]",
      "750:      166,    75,   136,   137,    76,    94,    78,   180,   202,   191,",
      "751:      140,   139,   189,   125,   195,   143,   178,   185,   186,    79,",
      "",
      "[Added Lines]",
      "750:      167,    75,   137,   138,    76,    94,    78,   181,   203,   192,",
      "751:      141,   140,   190,   125,   196,   144,   179,   186,   187,    79,",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "758: static const yytype_int16 yytable[] =",
      "759: {",
      "797:        0,     0,     0,   114,   115,   116,   117,   118,   119,   120,",
      "801: };",
      "803: static const yytype_int16 yycheck[] =",
      "804: {",
      "809:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
      "842:       -1,    -1,    -1,    51,    52,    53,    54,    55,    56,    57,",
      "846: };",
      "",
      "[Removed Lines]",
      "760:       77,    90,    95,   130,    91,     4,    93,    96,   114,   115,",
      "761:      116,   117,   118,   119,   120,    11,   123,    83,   126,   127,",
      "762:      128,   129,    84,    16,    92,   131,   183,   138,   141,     8,",
      "763:      184,   135,    41,    97,    98,    42,    99,   145,   146,   147,",
      "764:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,",
      "765:      158,   159,   160,   161,    43,    44,    18,   167,    54,    55,",
      "766:       56,    57,    58,   142,    59,    60,    61,    62,    22,    63,",
      "767:       45,   100,   101,    51,   -36,    64,    65,    66,    67,     2,",
      "768:        3,    68,    20,   -17,   -17,   -17,    69,    70,    23,   100,",
      "769:      101,   176,   177,   116,   117,   118,   119,   120,    12,    13,",
      "770:       14,   206,    71,   182,   100,   101,    72,    73,   162,   163,",
      "771:      164,   165,   187,   118,   119,   120,     4,    74,    24,   208,",
      "772:       54,   196,    56,    57,    58,    26,    59,    60,    61,    62,",
      "773:       27,    63,   179,    29,   204,   -54,   -54,    64,    65,    66,",
      "774:       67,   192,   193,   200,   201,    54,    32,    56,    57,    58,",
      "775:      203,    59,    60,    61,    62,    34,    63,   207,    36,    39,",
      "776:       49,    46,    64,    65,    71,    48,    82,    50,    81,    73,",
      "777:       85,   105,   106,   107,    86,    87,   102,   124,   134,    88,",
      "778:      114,   115,   116,   117,   118,   119,   120,   132,    63,    71,",
      "779:      171,   174,   181,   101,    73,   -93,   175,   197,   103,   104,",
      "780:      188,   198,     9,   205,    88,   105,   106,   107,   108,   109,",
      "781:      110,   111,   112,   113,   114,   115,   116,   117,   118,   119,",
      "782:      120,    10,    35,    47,   122,   105,   106,   107,   199,   144,",
      "783:      190,   172,    89,   133,   114,   115,   116,   117,   118,   119,",
      "784:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "785:        0,     0,     0,   170,   114,   115,   116,   117,   118,   119,",
      "786:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "787:        0,     0,     0,   133,   114,   115,   116,   117,   118,   119,",
      "788:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "789:        0,     0,     0,   194,   114,   115,   116,   117,   118,   119,",
      "790:      120,     0,     0,   105,   106,   107,     0,     0,     0,     0,",
      "791:        0,   168,   114,   115,   116,   117,   118,   119,   120,     0,",
      "792:        0,   105,   106,   107,     0,     0,     0,     0,     0,   169,",
      "793:      114,   115,   116,   117,   118,   119,   120,     0,   -93,     0,",
      "794:        0,   103,   104,     0,     0,     0,     0,   173,   105,   106,",
      "795:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
      "796:      117,   118,   119,   120,   105,   106,   107,     0,     0,     0,",
      "798:      106,   107,     0,     0,     0,     0,     0,     0,   114,   115,",
      "799:      116,   117,   118,   119,   120,   107,     0,     0,     0,     0,",
      "800:        0,     0,   114,   115,   116,   117,   118,   119,   120",
      "805:       48,    68,    74,    10,    71,    37,    73,    74,    51,    52,",
      "806:       53,    54,    55,    56,    57,    19,    83,    26,    85,    86,",
      "807:       87,    88,    31,    10,    72,    32,    11,    99,    34,    61,",
      "808:       15,    98,    16,    66,    67,    19,    69,   104,   105,   106,",
      "810:      117,   118,   119,   120,    38,    39,    64,   124,    10,    11,",
      "811:       12,    13,    14,    69,    16,    17,    18,    19,    62,    21,",
      "812:       54,    40,    41,    20,    21,    27,    28,    29,    30,     0,",
      "813:        1,    33,    10,     4,     5,     6,    38,    39,    10,    40,",
      "814:       41,   139,   140,    53,    54,    55,    56,    57,     4,     5,",
      "815:        6,    70,    54,   175,    40,    41,    58,    59,    22,    23,",
      "816:       24,    25,   179,    55,    56,    57,    37,    69,     7,    70,",
      "817:       10,   188,    12,    13,    14,    64,    16,    17,    18,    19,",
      "818:        8,    21,     3,    10,   201,    40,    41,    27,    28,    29,",
      "819:       30,    70,    71,    70,    71,    10,    64,    12,    13,    14,",
      "820:      198,    16,    17,    18,    19,    65,    21,   205,    11,     9,",
      "821:       63,    65,    27,    28,    54,    64,    21,    16,    19,    59,",
      "822:       67,    42,    43,    44,    67,    69,    32,    69,    10,    69,",
      "823:       51,    52,    53,    54,    55,    56,    57,    70,    21,    54,",
      "824:       31,    70,    64,    41,    59,    32,    71,    64,    35,    36,",
      "825:       69,    69,     3,    69,    69,    42,    43,    44,    45,    46,",
      "826:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,",
      "827:       57,     3,    30,    37,    82,    42,    43,    44,   193,   103,",
      "828:      180,   131,    68,    70,    51,    52,    53,    54,    55,    56,",
      "829:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "830:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "831:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "832:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "833:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "834:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "835:       57,    -1,    -1,    42,    43,    44,    -1,    -1,    -1,    -1,",
      "836:       -1,    68,    51,    52,    53,    54,    55,    56,    57,    -1,",
      "837:       -1,    42,    43,    44,    -1,    -1,    -1,    -1,    -1,    68,",
      "838:       51,    52,    53,    54,    55,    56,    57,    -1,    32,    -1,",
      "839:       -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,    43,",
      "840:       44,    45,    46,    47,    48,    49,    50,    51,    52,    53,",
      "841:       54,    55,    56,    57,    42,    43,    44,    -1,    -1,    -1,",
      "843:       43,    44,    -1,    -1,    -1,    -1,    -1,    -1,    51,    52,",
      "844:       53,    54,    55,    56,    57,    44,    -1,    -1,    -1,    -1,",
      "845:       -1,    -1,    51,    52,    53,    54,    55,    56,    57",
      "",
      "[Added Lines]",
      "760:       77,    90,    95,   130,    91,     4,    93,    96,    83,    11,",
      "761:      184,    16,   131,    84,   185,    18,   123,    20,   126,   127,",
      "762:      128,   129,    97,    98,    92,    99,    22,   139,   142,     8,",
      "763:       23,   136,    41,    24,   132,    42,    26,   146,   147,   148,",
      "764:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,",
      "765:      159,   160,   161,   162,    43,    44,    29,   168,    54,    55,",
      "766:       56,    57,    58,   143,    59,    60,    61,    62,    32,    63,",
      "767:       45,   100,   101,   100,   101,    64,    65,    66,    67,    51,",
      "768:      -36,    68,   163,   164,   165,   166,    69,    70,   193,   194,",
      "769:        2,     3,   177,   178,   -17,   -17,   -17,    12,    13,    14,",
      "770:       27,   207,    71,   209,   183,    34,    72,    73,   118,   119,",
      "771:      120,    36,    54,   188,    56,    57,    58,    74,    59,    60,",
      "772:       61,    62,   197,    63,   180,   100,   101,     4,    39,    64,",
      "773:       65,    66,    67,   201,   202,   205,    54,    46,    56,    57,",
      "774:       58,    48,    59,    60,    61,    62,    49,    63,   -54,   -54,",
      "775:       50,   204,    81,    64,    65,    85,    71,    82,   208,   102,",
      "776:       87,    73,    86,   105,   106,   107,   116,   117,   118,   119,",
      "777:      120,    88,   114,   115,   116,   117,   118,   119,   120,   124,",
      "778:       71,   133,   135,    63,   172,    73,   -94,   175,   182,   103,",
      "779:      104,   176,   101,   198,   189,    88,   105,   106,   107,   108,",
      "780:      109,   110,   111,   112,   113,   114,   115,   116,   117,   118,",
      "781:      119,   120,   199,   206,     9,    10,   105,   106,   107,    35,",
      "782:       47,   122,   191,   200,   134,   114,   115,   116,   117,   118,",
      "783:      119,   120,    89,   145,     0,   173,   105,   106,   107,     0,",
      "784:        0,     0,     0,     0,   171,   114,   115,   116,   117,   118,",
      "785:      119,   120,     0,     0,     0,     0,   105,   106,   107,     0,",
      "786:        0,     0,     0,     0,   134,   114,   115,   116,   117,   118,",
      "787:      119,   120,     0,     0,     0,     0,   105,   106,   107,     0,",
      "788:        0,     0,     0,     0,   195,   114,   115,   116,   117,   118,",
      "789:      119,   120,     0,     0,   105,   106,   107,     0,     0,     0,",
      "790:        0,     0,   169,   114,   115,   116,   117,   118,   119,   120,",
      "791:        0,     0,   105,   106,   107,     0,     0,     0,     0,     0,",
      "792:      170,   114,   115,   116,   117,   118,   119,   120,     0,   -94,",
      "793:        0,     0,   103,   104,     0,     0,     0,     0,   174,   105,",
      "794:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,",
      "795:      116,   117,   118,   119,   120,   105,   106,   107,     0,     0,",
      "796:        0,     0,     0,     0,   114,   115,   116,   117,   118,   119,",
      "797:      120,   106,   107,     0,     0,     0,     0,     0,     0,   114,",
      "798:      115,   116,   117,   118,   119,   120,   107,     0,     0,     0,",
      "800:      114,   115,   116,   117,   118,   119,   120",
      "805:       48,    68,    74,     1,    71,    37,    73,    74,    26,    19,",
      "806:       11,    10,    10,    31,    15,    64,    83,    10,    85,    86,",
      "807:       87,    88,    66,    67,    72,    69,    62,    99,    34,    61,",
      "808:       10,    98,    16,     7,    32,    19,    64,   104,   105,   106,",
      "810:      117,   118,   119,   120,    38,    39,    10,   124,    10,    11,",
      "811:       12,    13,    14,    69,    16,    17,    18,    19,    64,    21,",
      "812:       54,    40,    41,    40,    41,    27,    28,    29,    30,    20,",
      "813:       21,    33,    22,    23,    24,    25,    38,    39,    70,    71,",
      "814:        0,     1,   140,   141,     4,     5,     6,     4,     5,     6,",
      "815:        8,    70,    54,    70,   176,    65,    58,    59,    55,    56,",
      "816:       57,    11,    10,   180,    12,    13,    14,    69,    16,    17,",
      "817:       18,    19,   189,    21,     3,    40,    41,    37,     9,    27,",
      "818:       28,    29,    30,    70,    71,   202,    10,    65,    12,    13,",
      "819:       14,    64,    16,    17,    18,    19,    63,    21,    40,    41,",
      "820:       16,   199,    19,    27,    28,    67,    54,    21,   206,    32,",
      "821:       69,    59,    67,    42,    43,    44,    53,    54,    55,    56,",
      "822:       57,    69,    51,    52,    53,    54,    55,    56,    57,    69,",
      "823:       54,    70,    10,    21,    31,    59,    32,    70,    64,    35,",
      "824:       36,    71,    41,    64,    69,    69,    42,    43,    44,    45,",
      "825:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,",
      "826:       56,    57,    69,    69,     3,     3,    42,    43,    44,    30,",
      "827:       37,    82,   181,   194,    70,    51,    52,    53,    54,    55,",
      "828:       56,    57,    68,   103,    -1,   132,    42,    43,    44,    -1,",
      "829:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "830:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
      "831:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "832:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
      "833:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "834:       56,    57,    -1,    -1,    42,    43,    44,    -1,    -1,    -1,",
      "835:       -1,    -1,    68,    51,    52,    53,    54,    55,    56,    57,",
      "836:       -1,    -1,    42,    43,    44,    -1,    -1,    -1,    -1,    -1,",
      "837:       68,    51,    52,    53,    54,    55,    56,    57,    -1,    32,",
      "838:       -1,    -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,",
      "839:       43,    44,    45,    46,    47,    48,    49,    50,    51,    52,",
      "840:       53,    54,    55,    56,    57,    42,    43,    44,    -1,    -1,",
      "841:       -1,    -1,    -1,    -1,    51,    52,    53,    54,    55,    56,",
      "842:       57,    43,    44,    -1,    -1,    -1,    -1,    -1,    -1,    51,",
      "843:       52,    53,    54,    55,    56,    57,    44,    -1,    -1,    -1,",
      "845:       51,    52,    53,    54,    55,    56,    57",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "862:       40,    41,    32,    35,    36,    42,    43,    44,    45,    46,",
      "863:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,",
      "864:       57,    91,    91,   112,    69,   105,   112,   112,   112,   112,",
      "867:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "873: };",
      "",
      "[Removed Lines]",
      "865:       10,    32,    70,    70,    10,   112,    94,    95,    98,   103,",
      "866:      102,    34,    69,   107,    96,   112,   112,   112,   112,   112,",
      "868:      112,   112,    22,    23,    24,    25,    92,   112,    68,    68,",
      "869:       70,    31,   107,    68,    70,    71,    97,    97,   108,     3,",
      "870:       99,    64,    98,    11,    15,   109,   110,   112,    69,   104,",
      "871:      105,   101,    70,    71,    70,   106,   112,    64,    69,   110,",
      "872:       70,    71,   100,    97,   112,    69,    70,    97,    70",
      "",
      "[Added Lines]",
      "865:        1,    10,    32,    70,    70,    10,   112,    94,    95,    98,",
      "866:      103,   102,    34,    69,   107,    96,   112,   112,   112,   112,",
      "868:      112,   112,   112,    22,    23,    24,    25,    92,   112,    68,",
      "869:       68,    70,    31,   107,    68,    70,    71,    97,    97,   108,",
      "870:        3,    99,    64,    98,    11,    15,   109,   110,   112,    69,",
      "871:      104,   105,   101,    70,    71,    70,   106,   112,    64,    69,",
      "872:      110,    70,    71,   100,    97,   112,    69,    70,    97,    70",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "881:       86,    86,    87,    87,    89,    88,    90,    88,    88,    91,",
      "882:       91,    92,    92,    92,    92,    93,    93,    93,    93,    94,",
      "883:       94,    95,    95,    96,    97,    98,    98,    98,    98,    98,",
      "888:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "889:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "891: };",
      "",
      "[Removed Lines]",
      "884:       98,    98,    99,   100,    98,   101,    98,    98,    98,   102,",
      "885:       98,   103,    98,    98,    98,    98,    98,    98,    98,    98,",
      "886:       98,   104,   104,   105,   106,   106,   108,   107,   107,   109,",
      "887:      109,   110,   110,   111,   111,   111,   112,   112,   112,   112,",
      "890:      112,   112",
      "",
      "[Added Lines]",
      "884:       98,    98,    98,    99,   100,    98,   101,    98,    98,    98,",
      "885:      102,    98,   103,    98,    98,    98,    98,    98,    98,    98,",
      "886:       98,    98,   104,   104,   105,   106,   106,   108,   107,   107,",
      "887:      109,   109,   110,   110,   111,   111,   111,   112,   112,   112,",
      "890:      112,   112,   112",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "899:        3,     3,     1,     2,     0,     5,     0,     5,     3,     0,",
      "900:        2,     1,     1,     1,     1,     1,     3,     4,     4,     0,",
      "901:        1,     1,     3,     1,     1,     1,     1,     3,     3,     1,",
      "909: };",
      "",
      "[Removed Lines]",
      "902:        3,     3,     0,     0,    11,     0,     9,     3,     2,     0,",
      "903:        4,     0,     4,     3,     3,     3,     3,     3,     3,     1,",
      "904:        3,     3,     1,     5,     1,     3,     0,     4,     1,     1,",
      "905:        3,     1,     1,     1,     1,     1,     3,     1,     1,     4,",
      "906:        1,     1,     1,     1,     4,     1,     4,     1,     1,     2,",
      "907:        3,     3,     3,     3,     3,     3,     3,     3,     2,     3,",
      "908:        3,     1",
      "",
      "[Added Lines]",
      "902:        3,     3,     3,     0,     0,    11,     0,     9,     3,     2,",
      "903:        0,     4,     0,     4,     3,     3,     3,     3,     3,     3,",
      "904:        1,     3,     3,     1,     5,     1,     3,     0,     4,     1,",
      "905:        1,     3,     1,     1,     1,     1,     1,     3,     1,     1,",
      "906:        4,     1,     1,     1,     1,     4,     1,     4,     1,     1,",
      "907:        2,     3,     3,     3,     3,     3,     3,     3,     3,     2,",
      "908:        3,     3,     1",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2587:   case 62:",
      "2589:     {",
      "2590:         int var_index;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2589:     {",
      "2590:         compiler->loop_depth--;",
      "2591:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "2592:       }",
      "2594:     break;",
      "2596:   case 63:",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2616:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "2617:       }",
      "2619:     break;",
      "2623:     {",
      "2624:         int mem_offset = LOOP_LOCAL_VARS * compiler->loop_depth;",
      "2625:         uint8_t* addr;",
      "",
      "[Removed Lines]",
      "2621:   case 63:",
      "",
      "[Added Lines]",
      "2630:   case 64:",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2654:         compiler->loop_identifier[compiler->loop_depth] = (yyvsp[-4].c_string);",
      "2655:         compiler->loop_depth++;",
      "2656:       }",
      "2658:     break;",
      "2662:     {",
      "2663:         int mem_offset;",
      "",
      "[Removed Lines]",
      "2660:   case 64:",
      "",
      "[Added Lines]",
      "2669:   case 65:",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2738:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2739:       }",
      "2741:     break;",
      "2745:     {",
      "2746:         int mem_offset = LOOP_LOCAL_VARS * compiler->loop_depth;",
      "2747:         uint8_t* addr;",
      "",
      "[Removed Lines]",
      "2743:   case 65:",
      "",
      "[Added Lines]",
      "2752:   case 66:",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2771:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "2772:         compiler->loop_depth++;",
      "2773:       }",
      "2775:     break;",
      "2779:     {",
      "2780:         int mem_offset;",
      "",
      "[Removed Lines]",
      "2777:   case 66:",
      "",
      "[Added Lines]",
      "2786:   case 67:",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2824:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2826:       }",
      "2828:     break;",
      "2832:     {",
      "2833:         yr_parser_emit(yyscanner, OP_OF, NULL);",
      "2835:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2836:       }",
      "2838:     break;",
      "2842:     {",
      "2843:         yr_parser_emit(yyscanner, OP_NOT, NULL);",
      "2845:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2846:       }",
      "2848:     break;",
      "2852:     {",
      "2853:         YR_FIXUP* fixup;",
      "2854:         void* jmp_destination_addr;",
      "",
      "[Removed Lines]",
      "2830:   case 67:",
      "2840:   case 68:",
      "2850:   case 69:",
      "",
      "[Added Lines]",
      "2839:   case 68:",
      "2849:   case 69:",
      "2859:   case 70:",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "2874:         fixup->next = compiler->fixup_stack_head;",
      "2875:         compiler->fixup_stack_head = fixup;",
      "2876:       }",
      "2878:     break;",
      "2882:     {",
      "2883:         YR_FIXUP* fixup;",
      "2884:         uint8_t* and_addr;",
      "",
      "[Removed Lines]",
      "2880:   case 70:",
      "",
      "[Added Lines]",
      "2889:   case 71:",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "2915:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2916:       }",
      "2918:     break;",
      "2922:     {",
      "2923:         YR_FIXUP* fixup;",
      "2924:         void* jmp_destination_addr;",
      "",
      "[Removed Lines]",
      "2920:   case 71:",
      "",
      "[Added Lines]",
      "2929:   case 72:",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "2943:         fixup->next = compiler->fixup_stack_head;",
      "2944:         compiler->fixup_stack_head = fixup;",
      "2945:       }",
      "2947:     break;",
      "2951:     {",
      "2952:         YR_FIXUP* fixup;",
      "2953:         uint8_t* or_addr;",
      "",
      "[Removed Lines]",
      "2949:   case 72:",
      "",
      "[Added Lines]",
      "2958:   case 73:",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "2984:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2985:       }",
      "2987:     break;",
      "2991:     {",
      "2992:         compiler->last_result = yr_parser_reduce_operation(",
      "2993:             yyscanner, \"<\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "2989:   case 73:",
      "",
      "[Added Lines]",
      "2998:   case 74:",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "2997:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2998:       }",
      "3000:     break;",
      "3004:     {",
      "3005:         compiler->last_result = yr_parser_reduce_operation(",
      "3006:             yyscanner, \">\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3002:   case 74:",
      "",
      "[Added Lines]",
      "3011:   case 75:",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "3010:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3011:       }",
      "3013:     break;",
      "3017:     {",
      "3018:         compiler->last_result = yr_parser_reduce_operation(",
      "3019:             yyscanner, \"<=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3015:   case 75:",
      "",
      "[Added Lines]",
      "3024:   case 76:",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "3023:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3024:       }",
      "3026:     break;",
      "3030:     {",
      "3031:         compiler->last_result = yr_parser_reduce_operation(",
      "3032:             yyscanner, \">=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3028:   case 76:",
      "",
      "[Added Lines]",
      "3037:   case 77:",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "3036:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3037:       }",
      "3039:     break;",
      "3043:     {",
      "3044:         compiler->last_result = yr_parser_reduce_operation(",
      "3045:             yyscanner, \"==\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3041:   case 77:",
      "",
      "[Added Lines]",
      "3050:   case 78:",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "3049:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3050:       }",
      "3052:     break;",
      "3056:     {",
      "3057:         compiler->last_result = yr_parser_reduce_operation(",
      "3058:             yyscanner, \"!=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3054:   case 78:",
      "",
      "[Added Lines]",
      "3063:   case 79:",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "3062:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3063:       }",
      "3065:     break;",
      "3069:     {",
      "3070:         (yyval.expression) = (yyvsp[0].expression);",
      "3071:       }",
      "3073:     break;",
      "3077:     {",
      "3078:         (yyval.expression) = (yyvsp[-1].expression);",
      "3079:       }",
      "3081:     break;",
      "3085:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
      "3087:     break;",
      "3091:     { (yyval.integer) = INTEGER_SET_RANGE; }",
      "3093:     break;",
      "3097:     {",
      "3098:         if ((yyvsp[-3].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3099:         {",
      "",
      "[Removed Lines]",
      "3067:   case 79:",
      "3075:   case 80:",
      "3083:   case 81:",
      "3089:   case 82:",
      "3095:   case 83:",
      "",
      "[Added Lines]",
      "3076:   case 80:",
      "3084:   case 81:",
      "3092:   case 82:",
      "3098:   case 83:",
      "3104:   case 84:",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "3112:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3113:       }",
      "3115:     break;",
      "3119:     {",
      "3120:         if ((yyvsp[0].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3121:         {",
      "",
      "[Removed Lines]",
      "3117:   case 84:",
      "",
      "[Added Lines]",
      "3126:   case 85:",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "3128:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3129:       }",
      "3131:     break;",
      "3135:     {",
      "3136:         if ((yyvsp[0].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3137:         {",
      "",
      "[Removed Lines]",
      "3133:   case 85:",
      "",
      "[Added Lines]",
      "3142:   case 86:",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "3143:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3144:       }",
      "3146:     break;",
      "3150:     {",
      "3152:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3153:       }",
      "3155:     break;",
      "3159:     {",
      "3160:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3161:         yr_parser_emit_pushes_for_strings(yyscanner, \"$*\");",
      "3163:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3164:       }",
      "3166:     break;",
      "3170:     {",
      "3171:         yr_parser_emit_pushes_for_strings(yyscanner, (yyvsp[0].c_string));",
      "3172:         yr_free((yyvsp[0].c_string));",
      "3174:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3175:       }",
      "3177:     break;",
      "3181:     {",
      "3182:         yr_parser_emit_pushes_for_strings(yyscanner, (yyvsp[0].c_string));",
      "3183:         yr_free((yyvsp[0].c_string));",
      "3185:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3186:       }",
      "3188:     break;",
      "3192:     {",
      "3193:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3194:       }",
      "3196:     break;",
      "3200:     {",
      "3201:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, 1, NULL, NULL);",
      "3202:       }",
      "3204:     break;",
      "3208:     {",
      "3209:         (yyval.expression) = (yyvsp[-1].expression);",
      "3210:       }",
      "3212:     break;",
      "3216:     {",
      "3217:         compiler->last_result = yr_parser_emit(",
      "3218:             yyscanner, OP_FILESIZE, NULL);",
      "",
      "[Removed Lines]",
      "3148:   case 86:",
      "3157:   case 88:",
      "3168:   case 91:",
      "3179:   case 92:",
      "3190:   case 94:",
      "3198:   case 95:",
      "3206:   case 96:",
      "3214:   case 97:",
      "",
      "[Added Lines]",
      "3157:   case 87:",
      "3166:   case 89:",
      "3177:   case 92:",
      "3188:   case 93:",
      "3199:   case 95:",
      "3207:   case 96:",
      "3215:   case 97:",
      "3223:   case 98:",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "3222:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3223:         (yyval.expression).value.integer = UNDEFINED;",
      "3224:       }",
      "3226:     break;",
      "3230:     {",
      "3231:         yywarning(yyscanner,",
      "3232:             \"Using deprecated \\\"entrypoint\\\" keyword. Use the \\\"entry_point\\\" \"",
      "",
      "[Removed Lines]",
      "3228:   case 98:",
      "",
      "[Added Lines]",
      "3237:   case 99:",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "3240:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3241:         (yyval.expression).value.integer = UNDEFINED;",
      "3242:       }",
      "3244:     break;",
      "3248:     {",
      "3249:         CHECK_TYPE((yyvsp[-1].expression), EXPRESSION_TYPE_INTEGER, \"intXXXX or uintXXXX\");",
      "",
      "[Removed Lines]",
      "3246:   case 99:",
      "",
      "[Added Lines]",
      "3255:   case 100:",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "3260:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3261:         (yyval.expression).value.integer = UNDEFINED;",
      "3262:       }",
      "3264:     break;",
      "3268:     {",
      "3269:         compiler->last_result = yr_parser_emit_with_arg(",
      "3270:             yyscanner, OP_PUSH, (yyvsp[0].integer), NULL, NULL);",
      "",
      "[Removed Lines]",
      "3266:   case 100:",
      "",
      "[Added Lines]",
      "3275:   case 101:",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "3274:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3275:         (yyval.expression).value.integer = (yyvsp[0].integer);",
      "3276:       }",
      "3278:     break;",
      "3282:     {",
      "3283:         compiler->last_result = yr_parser_emit_with_arg_double(",
      "3284:             yyscanner, OP_PUSH, (yyvsp[0].double_), NULL, NULL);",
      "",
      "[Removed Lines]",
      "3280:   case 101:",
      "",
      "[Added Lines]",
      "3289:   case 102:",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "3288:         (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3289:       }",
      "3291:     break;",
      "3295:     {",
      "3296:         SIZED_STRING* sized_string;",
      "",
      "[Removed Lines]",
      "3293:   case 102:",
      "",
      "[Added Lines]",
      "3302:   case 103:",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "3316:         (yyval.expression).type = EXPRESSION_TYPE_STRING;",
      "3317:         (yyval.expression).value.sized_string = sized_string;",
      "3318:       }",
      "3320:     break;",
      "3324:     {",
      "3325:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3326:             yyscanner, (yyvsp[0].c_string), OP_COUNT, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3322:   case 103:",
      "",
      "[Added Lines]",
      "3331:   case 104:",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "3332:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3333:         (yyval.expression).value.integer = UNDEFINED;",
      "3334:       }",
      "3336:     break;",
      "3340:     {",
      "3341:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3342:             yyscanner, (yyvsp[-3].c_string), OP_OFFSET, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3338:   case 104:",
      "",
      "[Added Lines]",
      "3347:   case 105:",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "3348:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3349:         (yyval.expression).value.integer = UNDEFINED;",
      "3350:       }",
      "3352:     break;",
      "3356:     {",
      "3357:         compiler->last_result = yr_parser_emit_with_arg(",
      "3358:             yyscanner, OP_PUSH, 1, NULL, NULL);",
      "",
      "[Removed Lines]",
      "3354:   case 105:",
      "",
      "[Added Lines]",
      "3363:   case 106:",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "3368:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3369:         (yyval.expression).value.integer = UNDEFINED;",
      "3370:       }",
      "3372:     break;",
      "3376:     {",
      "3377:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3378:             yyscanner, (yyvsp[-3].c_string), OP_LENGTH, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3374:   case 106:",
      "",
      "[Added Lines]",
      "3383:   case 107:",
      "",
      "---------------",
      "--- Hunk 39 ---",
      "[Context before]",
      "3384:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3385:         (yyval.expression).value.integer = UNDEFINED;",
      "3386:       }",
      "3388:     break;",
      "3392:     {",
      "3393:         compiler->last_result = yr_parser_emit_with_arg(",
      "3394:             yyscanner, OP_PUSH, 1, NULL, NULL);",
      "",
      "[Removed Lines]",
      "3390:   case 107:",
      "",
      "[Added Lines]",
      "3399:   case 108:",
      "",
      "---------------",
      "--- Hunk 40 ---",
      "[Context before]",
      "3404:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3405:         (yyval.expression).value.integer = UNDEFINED;",
      "3406:       }",
      "3408:     break;",
      "3412:     {",
      "3413:         if ((yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)  // loop identifier",
      "3414:         {",
      "",
      "[Removed Lines]",
      "3410:   case 108:",
      "",
      "[Added Lines]",
      "3419:   case 109:",
      "",
      "---------------",
      "--- Hunk 41 ---",
      "[Context before]",
      "3454:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3455:       }",
      "3457:     break;",
      "3461:     {",
      "3462:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER | EXPRESSION_TYPE_FLOAT, \"-\");",
      "",
      "[Removed Lines]",
      "3459:   case 109:",
      "",
      "[Added Lines]",
      "3468:   case 110:",
      "",
      "---------------",
      "--- Hunk 42 ---",
      "[Context before]",
      "3477:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3478:       }",
      "3480:     break;",
      "3484:     {",
      "3485:         compiler->last_result = yr_parser_reduce_operation(",
      "3486:             yyscanner, \"+\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3482:   case 110:",
      "",
      "[Added Lines]",
      "3491:   case 111:",
      "",
      "---------------",
      "--- Hunk 43 ---",
      "[Context before]",
      "3498:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3499:         }",
      "3500:       }",
      "3502:     break;",
      "3506:     {",
      "3507:         compiler->last_result = yr_parser_reduce_operation(",
      "3508:             yyscanner, \"-\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3504:   case 111:",
      "",
      "[Added Lines]",
      "3513:   case 112:",
      "",
      "---------------",
      "--- Hunk 44 ---",
      "[Context before]",
      "3520:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3521:         }",
      "3522:       }",
      "3524:     break;",
      "3528:     {",
      "3529:         compiler->last_result = yr_parser_reduce_operation(",
      "3530:             yyscanner, \"*\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3526:   case 112:",
      "",
      "[Added Lines]",
      "3535:   case 113:",
      "",
      "---------------",
      "--- Hunk 45 ---",
      "[Context before]",
      "3542:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3543:         }",
      "3544:       }",
      "3546:     break;",
      "3550:     {",
      "3551:         compiler->last_result = yr_parser_reduce_operation(",
      "3552:             yyscanner, \"\\\\\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3548:   case 113:",
      "",
      "[Added Lines]",
      "3557:   case 114:",
      "",
      "---------------",
      "--- Hunk 46 ---",
      "[Context before]",
      "3572:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3573:         }",
      "3574:       }",
      "3576:     break;",
      "3580:     {",
      "3581:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"%\");",
      "3582:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"%\");",
      "",
      "[Removed Lines]",
      "3578:   case 114:",
      "",
      "[Added Lines]",
      "3587:   case 115:",
      "",
      "---------------",
      "--- Hunk 47 ---",
      "[Context before]",
      "3594:           ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3595:         }",
      "3596:       }",
      "3598:     break;",
      "3602:     {",
      "3603:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "3604:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "",
      "[Removed Lines]",
      "3600:   case 115:",
      "",
      "[Added Lines]",
      "3609:   case 116:",
      "",
      "---------------",
      "--- Hunk 48 ---",
      "[Context before]",
      "3608:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3609:         (yyval.expression).value.integer = OPERATION(^, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3610:       }",
      "3612:     break;",
      "3616:     {",
      "3617:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "3618:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "",
      "[Removed Lines]",
      "3614:   case 116:",
      "",
      "[Added Lines]",
      "3623:   case 117:",
      "",
      "---------------",
      "--- Hunk 49 ---",
      "[Context before]",
      "3622:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3623:         (yyval.expression).value.integer = OPERATION(&, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3624:       }",
      "3626:     break;",
      "3630:     {",
      "3631:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"|\");",
      "3632:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"|\");",
      "",
      "[Removed Lines]",
      "3628:   case 117:",
      "",
      "[Added Lines]",
      "3637:   case 118:",
      "",
      "---------------",
      "--- Hunk 50 ---",
      "[Context before]",
      "3636:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3637:         (yyval.expression).value.integer = OPERATION(|, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3638:       }",
      "3640:     break;",
      "3644:     {",
      "3645:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"~\");",
      "",
      "[Removed Lines]",
      "3642:   case 118:",
      "",
      "[Added Lines]",
      "3651:   case 119:",
      "",
      "---------------",
      "--- Hunk 51 ---",
      "[Context before]",
      "3650:         (yyval.expression).value.integer = ((yyvsp[0].expression).value.integer == UNDEFINED) ?",
      "3651:             UNDEFINED : ~((yyvsp[0].expression).value.integer);",
      "3652:       }",
      "3654:     break;",
      "3658:     {",
      "3659:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
      "3660:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
      "",
      "[Removed Lines]",
      "3656:   case 119:",
      "",
      "[Added Lines]",
      "3665:   case 120:",
      "",
      "---------------",
      "--- Hunk 52 ---",
      "[Context before]",
      "3664:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3665:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3666:       }",
      "3668:     break;",
      "3672:     {",
      "3673:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
      "3674:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
      "",
      "[Removed Lines]",
      "3670:   case 120:",
      "",
      "[Added Lines]",
      "3679:   case 121:",
      "",
      "---------------",
      "--- Hunk 53 ---",
      "[Context before]",
      "3678:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3679:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3680:       }",
      "3682:     break;",
      "3686:     {",
      "3687:         (yyval.expression) = (yyvsp[0].expression);",
      "3688:       }",
      "3690:     break;",
      "3694:       default: break;",
      "3695:     }",
      "",
      "[Removed Lines]",
      "3684:   case 121:",
      "",
      "[Added Lines]",
      "3693:   case 122:",
      "",
      "---------------"
    ],
    "libyara/grammar.y||libyara/grammar.y": [
      "File: libyara/grammar.y -> libyara/grammar.y",
      "--- Hunk 1 ---",
      "[Context before]",
      "1016:         $$.type = EXPRESSION_TYPE_BOOLEAN;",
      "1017:       }",
      "1018:     | _FOR_ for_expression _IDENTIFIER_ _IN_",
      "1019:       {",
      "1020:         int var_index;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1018:     | _FOR_ for_expression error",
      "1019:       {",
      "1020:         compiler->loop_depth--;",
      "1021:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "1022:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3191bd529bd973aa4351c85a0735357a9a37b268",
      "candidate_info": {
        "commit_hash": "3191bd529bd973aa4351c85a0735357a9a37b268",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/3191bd529bd973aa4351c85a0735357a9a37b268",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.h",
          "libyara/grammar.y"
        ],
        "message": "Prevent integer overflow.",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.h||libyara/grammar.h",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:     1431,  1435,  1443,  1444,  1449,  1471,  1483,  1499,  1498,  1504,",
          "625:     1515,  1516,  1521,  1528,  1539,  1540,  1544,  1552,  1556,  1566,",
          "626:     1580,  1596,  1606,  1615,  1640,  1652,  1664,  1680,  1692,  1708,",
          "629: };",
          "630: #endif",
          "",
          "[Removed Lines]",
          "627:     1753,  1772,  1804,  1837,  1869,  1894,  1912,  1922,  1932,  1942,",
          "628:     1952,  1962,  1972",
          "",
          "[Added Lines]",
          "627:     1753,  1772,  1806,  1841,  1875,  1900,  1918,  1928,  1938,  1948,",
          "628:     1958,  1968,  1978",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3517:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3518:           }",
          "3522:         }",
          "3523:         else",
          "3524:         {",
          "",
          "[Removed Lines]",
          "3520:           (yyval.expression).value.integer = OPERATION(+, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3521:           (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "3519:           else",
          "3520:           {",
          "3521:             (yyval.expression).value.integer = OPERATION(+, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3522:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3523:           }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3554:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3555:           }",
          "3559:         }",
          "3560:         else",
          "3561:         {",
          "",
          "[Removed Lines]",
          "3557:           (yyval.expression).value.integer = OPERATION(-, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3558:           (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "3558:           else",
          "3559:           {",
          "3560:             (yyval.expression).value.integer = OPERATION(-, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3561:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3562:           }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3590:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3591:           }",
          "3595:         }",
          "3596:         else",
          "3597:         {",
          "",
          "[Removed Lines]",
          "3593:           (yyval.expression).value.integer = OPERATION(*, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3594:           (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "3596:           else",
          "3597:           {",
          "3598:             (yyval.expression).value.integer = OPERATION(*, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3599:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3600:           }",
          "",
          "---------------"
        ],
        "libyara/grammar.h||libyara/grammar.h": [
          "File: libyara/grammar.h -> libyara/grammar.h"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1791:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1792:           }",
          "1796:         }",
          "1797:         else",
          "1798:         {",
          "",
          "[Removed Lines]",
          "1794:           $$.value.integer = OPERATION(+, $1.value.integer, $3.value.integer);",
          "1795:           $$.type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "1793:           else",
          "1794:           {",
          "1795:             $$.value.integer = OPERATION(+, $1.value.integer, $3.value.integer);",
          "1796:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1797:           }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1824:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1825:           }",
          "1829:         }",
          "1830:         else",
          "1831:         {",
          "",
          "[Removed Lines]",
          "1827:           $$.value.integer = OPERATION(-, $1.value.integer, $3.value.integer);",
          "1828:           $$.type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "1828:           else",
          "1829:           {",
          "1830:             $$.value.integer = OPERATION(-, $1.value.integer, $3.value.integer);",
          "1831:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1832:           }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1856:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1857:           }",
          "1861:         }",
          "1862:         else",
          "1863:         {",
          "",
          "[Removed Lines]",
          "1859:           $$.value.integer = OPERATION(*, $1.value.integer, $3.value.integer);",
          "1860:           $$.type = EXPRESSION_TYPE_INTEGER;",
          "",
          "[Added Lines]",
          "1862:           else",
          "1863:           {",
          "1864:             $$.value.integer = OPERATION(*, $1.value.integer, $3.value.integer);",
          "1865:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1866:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9c4840fd40a5add8ef14025c6e853aaf169f94e",
      "candidate_info": {
        "commit_hash": "b9c4840fd40a5add8ef14025c6e853aaf169f94e",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/b9c4840fd40a5add8ef14025c6e853aaf169f94e",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.y"
        ],
        "message": "More accurate line numbers in while reporting duplicate string identifier errors",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "508: #define YYFINAL  2",
          "513: #define YYNTOKENS  72",
          "522: #define YYUNDEFTOK  2",
          "",
          "[Removed Lines]",
          "510: #define YYLAST   392",
          "515: #define YYNNTS  40",
          "517: #define YYNRULES  119",
          "519: #define YYNSTATES  206",
          "",
          "[Added Lines]",
          "510: #define YYLAST   390",
          "515: #define YYNNTS  41",
          "517: #define YYNRULES  120",
          "519: #define YYNSTATES  207",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "569:        0,     0,     3,     4,     7,    10,    14,    18,    22,    25,",
          "570:       26,    27,    39,    40,    44,    45,    49,    53,    54,    57,",
          "571:       59,    61,    62,    65,    67,    70,    72,    75,    79,    83,",
          "581: };",
          "",
          "[Removed Lines]",
          "572:       87,    91,    93,    96,   101,   102,   108,   112,   113,   116,",
          "573:      118,   120,   122,   124,   126,   130,   135,   140,   141,   143,",
          "574:      145,   149,   151,   153,   155,   157,   161,   165,   167,   171,",
          "575:      175,   176,   177,   189,   190,   200,   204,   207,   208,   213,",
          "576:      214,   219,   223,   227,   231,   235,   239,   243,   245,   249,",
          "577:      253,   255,   261,   263,   267,   268,   273,   275,   277,   281,",
          "578:      283,   285,   287,   289,   291,   295,   297,   299,   304,   306,",
          "579:      308,   310,   312,   317,   319,   324,   326,   328,   331,   335,",
          "580:      339,   343,   347,   351,   355,   359,   363,   366,   370,   374",
          "",
          "[Added Lines]",
          "572:       87,    91,    93,    96,    97,   103,   104,   110,   114,   115,",
          "573:      118,   120,   122,   124,   126,   128,   132,   137,   142,   143,",
          "574:      145,   147,   151,   153,   155,   157,   159,   163,   167,   169,",
          "575:      173,   177,   178,   179,   191,   192,   202,   206,   209,   210,",
          "576:      215,   216,   221,   225,   229,   233,   237,   241,   245,   247,",
          "577:      251,   255,   257,   263,   265,   269,   270,   275,   277,   279,",
          "578:      283,   285,   287,   289,   291,   293,   297,   299,   301,   306,",
          "579:      308,   310,   312,   314,   319,   321,   326,   328,   330,   333,",
          "580:      337,   341,   345,   349,   353,   357,   361,   365,   368,   372,",
          "581:      376",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "588:       61,    -1,    37,    19,    -1,    -1,    -1,    81,     4,    10,",
          "589:       76,    83,    62,    78,    79,    77,    80,    63,    -1,    -1,",
          "590:        7,    64,    85,    -1,    -1,     8,    64,    87,    -1,     9,",
          "592:       -1,    -1,    64,    84,    -1,    10,    -1,    84,    10,    -1,",
          "593:       86,    -1,    85,    86,    -1,    10,    65,    19,    -1,    10,",
          "594:       65,    16,    -1,    10,    65,    38,    -1,    10,    65,    39,",
          "624: };",
          "",
          "[Removed Lines]",
          "591:       64,    96,    -1,    -1,    81,    82,    -1,     5,    -1,     6,",
          "595:       -1,    88,    -1,    87,    88,    -1,    11,    65,    19,    90,",
          "596:       -1,    -1,    11,    65,    89,    21,    90,    -1,    11,    65,",
          "597:       20,    -1,    -1,    90,    91,    -1,    23,    -1,    22,    -1,",
          "598:       24,    -1,    25,    -1,    10,    -1,    92,    66,    10,    -1,",
          "599:       92,    67,   111,    68,    -1,    92,    69,    93,    70,    -1,",
          "600:       -1,    94,    -1,    97,    -1,    94,    71,    97,    -1,    21,",
          "601:       -1,    97,    -1,    38,    -1,    39,    -1,   111,    35,    95,",
          "602:       -1,   111,    36,   111,    -1,    11,    -1,    11,    26,   111,",
          "603:       -1,    11,    31,   104,    -1,    -1,    -1,    33,   110,    10,",
          "604:       31,    98,   103,    64,    99,    69,    96,    70,    -1,    -1,",
          "605:       33,   110,    32,   106,    64,   100,    69,    96,    70,    -1,",
          "606:      110,    32,   106,    -1,    60,    96,    -1,    -1,    96,    41,",
          "607:      101,    96,    -1,    -1,    96,    40,   102,    96,    -1,   111,",
          "608:       50,   111,    -1,   111,    48,   111,    -1,   111,    49,   111,",
          "609:       -1,   111,    47,   111,    -1,   111,    46,   111,    -1,   111,",
          "610:       45,   111,    -1,   111,    -1,    69,    97,    70,    -1,    69,",
          "611:      105,    70,    -1,   104,    -1,    69,   111,     3,   111,    70,",
          "612:       -1,   111,    -1,   105,    71,   111,    -1,    -1,    69,   107,",
          "613:      108,    70,    -1,    34,    -1,   109,    -1,   108,    71,   109,",
          "614:       -1,    11,    -1,    15,    -1,   111,    -1,    29,    -1,    30,",
          "615:       -1,    69,   111,    70,    -1,    27,    -1,    28,    -1,    18,",
          "616:       69,   111,    70,    -1,    16,    -1,    17,    -1,    19,    -1,",
          "617:       12,    -1,    13,    67,   111,    68,    -1,    13,    -1,    14,",
          "618:       67,   111,    68,    -1,    14,    -1,    92,    -1,    54,   111,",
          "619:       -1,   111,    53,   111,    -1,   111,    54,   111,    -1,   111,",
          "620:       55,   111,    -1,   111,    56,   111,    -1,   111,    57,   111,",
          "621:       -1,   111,    43,   111,    -1,   111,    44,   111,    -1,   111,",
          "622:       42,   111,    -1,    58,   111,    -1,   111,    52,   111,    -1,",
          "623:      111,    51,   111,    -1,    95,    -1",
          "",
          "[Added Lines]",
          "592:       64,    97,    -1,    -1,    81,    82,    -1,     5,    -1,     6,",
          "596:       -1,    88,    -1,    87,    88,    -1,    -1,    11,    65,    89,",
          "597:       19,    91,    -1,    -1,    11,    65,    90,    21,    91,    -1,",
          "598:       11,    65,    20,    -1,    -1,    91,    92,    -1,    23,    -1,",
          "599:       22,    -1,    24,    -1,    25,    -1,    10,    -1,    93,    66,",
          "600:       10,    -1,    93,    67,   112,    68,    -1,    93,    69,    94,",
          "601:       70,    -1,    -1,    95,    -1,    98,    -1,    95,    71,    98,",
          "602:       -1,    21,    -1,    98,    -1,    38,    -1,    39,    -1,   112,",
          "603:       35,    96,    -1,   112,    36,   112,    -1,    11,    -1,    11,",
          "604:       26,   112,    -1,    11,    31,   105,    -1,    -1,    -1,    33,",
          "605:      111,    10,    31,    99,   104,    64,   100,    69,    97,    70,",
          "606:       -1,    -1,    33,   111,    32,   107,    64,   101,    69,    97,",
          "607:       70,    -1,   111,    32,   107,    -1,    60,    97,    -1,    -1,",
          "608:       97,    41,   102,    97,    -1,    -1,    97,    40,   103,    97,",
          "609:       -1,   112,    50,   112,    -1,   112,    48,   112,    -1,   112,",
          "610:       49,   112,    -1,   112,    47,   112,    -1,   112,    46,   112,",
          "611:       -1,   112,    45,   112,    -1,   112,    -1,    69,    98,    70,",
          "612:       -1,    69,   106,    70,    -1,   105,    -1,    69,   112,     3,",
          "613:      112,    70,    -1,   112,    -1,   106,    71,   112,    -1,    -1,",
          "614:       69,   108,   109,    70,    -1,    34,    -1,   110,    -1,   109,",
          "615:       71,   110,    -1,    11,    -1,    15,    -1,   112,    -1,    29,",
          "616:       -1,    30,    -1,    69,   112,    70,    -1,    27,    -1,    28,",
          "617:       -1,    18,    69,   112,    70,    -1,    16,    -1,    17,    -1,",
          "618:       19,    -1,    12,    -1,    13,    67,   112,    68,    -1,    13,",
          "619:       -1,    14,    67,   112,    68,    -1,    14,    -1,    93,    -1,",
          "620:       54,   112,    -1,   112,    53,   112,    -1,   112,    54,   112,",
          "621:       -1,   112,    55,   112,    -1,   112,    56,   112,    -1,   112,",
          "622:       57,   112,    -1,   112,    43,   112,    -1,   112,    44,   112,",
          "623:       -1,   112,    42,   112,    -1,    58,   112,    -1,   112,    52,",
          "624:      112,    -1,   112,    51,   112,    -1,    96,    -1",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "629:        0,   200,   200,   202,   203,   204,   205,   206,   211,   224,",
          "630:      233,   223,   256,   259,   287,   290,   317,   322,   323,   328,",
          "631:      329,   335,   338,   356,   369,   406,   407,   412,   428,   441,",
          "641: };",
          "642: #endif",
          "",
          "[Removed Lines]",
          "632:      454,   471,   472,   477,   488,   487,   503,   517,   518,   523,",
          "633:      524,   525,   526,   531,   616,   662,   720,   765,   766,   770,",
          "634:      795,   831,   877,   892,   901,   910,   925,   937,   951,   964,",
          "635:      976,  1006,   975,  1122,  1121,  1201,  1207,  1214,  1213,  1276,",
          "636:     1275,  1336,  1345,  1354,  1363,  1372,  1381,  1390,  1394,  1402,",
          "637:     1403,  1408,  1430,  1442,  1458,  1457,  1463,  1474,  1475,  1480,",
          "638:     1487,  1498,  1499,  1503,  1511,  1515,  1525,  1539,  1555,  1565,",
          "639:     1574,  1598,  1610,  1622,  1638,  1650,  1666,  1710,  1729,  1747,",
          "640:     1765,  1783,  1809,  1827,  1837,  1847,  1857,  1867,  1877,  1887",
          "",
          "[Added Lines]",
          "633:      454,   471,   472,   478,   477,   493,   492,   507,   522,   523,",
          "634:      528,   529,   530,   531,   536,   621,   667,   725,   770,   771,",
          "635:      775,   800,   836,   882,   897,   906,   915,   930,   942,   956,",
          "636:      969,   981,  1011,   980,  1127,  1126,  1206,  1212,  1219,  1218,",
          "637:     1281,  1280,  1341,  1350,  1359,  1368,  1377,  1386,  1395,  1399,",
          "638:     1407,  1408,  1413,  1435,  1447,  1463,  1462,  1468,  1479,  1480,",
          "639:     1485,  1492,  1503,  1504,  1508,  1516,  1520,  1530,  1544,  1560,",
          "640:     1570,  1579,  1603,  1615,  1627,  1643,  1655,  1671,  1715,  1734,",
          "641:     1752,  1770,  1788,  1814,  1832,  1842,  1852,  1862,  1872,  1882,",
          "642:     1892",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "661:   \"rules\", \"import\", \"rule\", \"@1\", \"@2\", \"meta\", \"strings\", \"condition\",",
          "662:   \"rule_modifiers\", \"rule_modifier\", \"tags\", \"tag_list\",",
          "663:   \"meta_declarations\", \"meta_declaration\", \"string_declarations\",",
          "665:   \"identifier\", \"arguments\", \"arguments_list\", \"regexp\",",
          "668:   \"string_enumeration\", \"string_enumeration_item\", \"for_expression\",",
          "669:   \"primary_expression\", 0",
          "670: };",
          "",
          "[Removed Lines]",
          "664:   \"string_declaration\", \"@3\", \"string_modifiers\", \"string_modifier\",",
          "666:   \"boolean_expression\", \"expression\", \"@4\", \"@5\", \"@6\", \"@7\", \"@8\",",
          "667:   \"integer_set\", \"range\", \"integer_enumeration\", \"string_set\", \"@9\",",
          "",
          "[Added Lines]",
          "666:   \"string_declaration\", \"@3\", \"@4\", \"string_modifiers\", \"string_modifier\",",
          "668:   \"boolean_expression\", \"expression\", \"@5\", \"@6\", \"@7\", \"@8\", \"@9\",",
          "669:   \"integer_set\", \"range\", \"integer_enumeration\", \"string_set\", \"@10\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "692:        0,    72,    73,    73,    73,    73,    73,    73,    74,    76,",
          "693:       77,    75,    78,    78,    79,    79,    80,    81,    81,    82,",
          "694:       82,    83,    83,    84,    84,    85,    85,    86,    86,    86,",
          "704: };",
          "",
          "[Removed Lines]",
          "695:       86,    87,    87,    88,    89,    88,    88,    90,    90,    91,",
          "696:       91,    91,    91,    92,    92,    92,    92,    93,    93,    94,",
          "697:       94,    95,    96,    97,    97,    97,    97,    97,    97,    97,",
          "698:       98,    99,    97,   100,    97,    97,    97,   101,    97,   102,",
          "699:       97,    97,    97,    97,    97,    97,    97,    97,    97,   103,",
          "700:      103,   104,   105,   105,   107,   106,   106,   108,   108,   109,",
          "701:      109,   110,   110,   110,   111,   111,   111,   111,   111,   111,",
          "702:      111,   111,   111,   111,   111,   111,   111,   111,   111,   111,",
          "703:      111,   111,   111,   111,   111,   111,   111,   111,   111,   111",
          "",
          "[Added Lines]",
          "697:       86,    87,    87,    89,    88,    90,    88,    88,    91,    91,",
          "698:       92,    92,    92,    92,    93,    93,    93,    93,    94,    94,",
          "699:       95,    95,    96,    97,    98,    98,    98,    98,    98,    98,",
          "700:       98,    99,   100,    98,   101,    98,    98,    98,   102,    98,",
          "701:      103,    98,    98,    98,    98,    98,    98,    98,    98,    98,",
          "702:      104,   104,   105,   106,   106,   108,   107,   107,   109,   109,",
          "703:      110,   110,   111,   111,   111,   112,   112,   112,   112,   112,",
          "704:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "705:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "706:      112",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "709:        0,     2,     0,     2,     2,     3,     3,     3,     2,     0,",
          "710:        0,    11,     0,     3,     0,     3,     3,     0,     2,     1,",
          "711:        1,     0,     2,     1,     2,     1,     2,     3,     3,     3,",
          "721: };",
          "",
          "[Removed Lines]",
          "712:        3,     1,     2,     4,     0,     5,     3,     0,     2,     1,",
          "713:        1,     1,     1,     1,     3,     4,     4,     0,     1,     1,",
          "714:        3,     1,     1,     1,     1,     3,     3,     1,     3,     3,",
          "715:        0,     0,    11,     0,     9,     3,     2,     0,     4,     0,",
          "716:        4,     3,     3,     3,     3,     3,     3,     1,     3,     3,",
          "717:        1,     5,     1,     3,     0,     4,     1,     1,     3,     1,",
          "718:        1,     1,     1,     1,     3,     1,     1,     4,     1,     1,",
          "719:        1,     1,     4,     1,     4,     1,     1,     2,     3,     3,",
          "720:        3,     3,     3,     3,     3,     3,     2,     3,     3,     1",
          "",
          "[Added Lines]",
          "715:        3,     1,     2,     0,     5,     0,     5,     3,     0,     2,",
          "716:        1,     1,     1,     1,     1,     3,     4,     4,     0,     1,",
          "717:        1,     3,     1,     1,     1,     1,     3,     3,     1,     3,",
          "718:        3,     0,     0,    11,     0,     9,     3,     2,     0,     4,",
          "719:        0,     4,     3,     3,     3,     3,     3,     3,     1,     3,",
          "720:        3,     1,     5,     1,     3,     0,     4,     1,     1,     3,",
          "721:        1,     1,     1,     1,     1,     3,     1,     1,     4,     1,",
          "722:        1,     1,     1,     4,     1,     4,     1,     1,     2,     3,",
          "723:        3,     3,     3,     3,     3,     3,     3,     2,     3,     3,",
          "724:        1",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "729:        5,     8,     0,    19,    20,    18,     9,    21,     0,     0,",
          "730:       23,    22,    12,    24,     0,    14,     0,     0,    10,     0,",
          "731:       13,    25,     0,     0,     0,    26,     0,    15,    31,     0,",
          "738:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,",
          "749: };",
          "752: static const yytype_int16 yydefgoto[] =",
          "753: {",
          "754:       -1,     1,     5,     6,    17,    33,    25,    28,    40,     7,",
          "758: };",
          "",
          "[Removed Lines]",
          "732:        0,    28,    27,    29,    30,    34,    32,     0,    11,    37,",
          "733:       36,     0,    43,    57,   101,   103,   105,    98,    99,     0,",
          "734:      100,    51,    95,    96,    92,    93,     0,    53,    54,     0,",
          "735:        0,     0,     0,   106,   119,    16,    52,     0,    77,    33,",
          "736:       37,     0,     0,     0,     0,     0,     0,     0,    91,   107,",
          "737:      116,    66,     0,    52,    77,     0,     0,    47,    69,    67,",
          "739:        0,     0,     0,     0,     0,     0,     0,     0,     0,    40,",
          "740:       39,    41,    42,    38,    35,    58,     0,    59,     0,     0,",
          "741:        0,     0,     0,     0,    78,    94,    44,     0,     0,    48,",
          "742:       49,     0,     0,    86,    84,    65,    55,    56,   115,   113,",
          "743:      114,    76,    75,    74,    72,    73,    71,   118,   117,   108,",
          "744:      109,   110,   111,   112,     0,   102,   104,    97,    60,     0,",
          "745:       45,    46,     0,    70,    68,     0,     0,     0,    63,    50,",
          "746:       89,    90,     0,    87,     0,     0,     0,    80,     0,    85,",
          "747:        0,    81,     0,    82,    61,     0,    88,    79,     0,     0,",
          "748:        0,    83,     0,    64,     0,    62",
          "755:       15,    19,    21,    30,    31,    37,    38,    51,    79,   123,",
          "756:       73,   138,   139,    74,    92,    76,   177,   199,   188,   142,",
          "757:      141,   186,   127,   192,   145,   175,   182,   183,    77,    78",
          "",
          "[Added Lines]",
          "736:        0,    28,    27,    29,    30,    33,    32,     0,    11,    37,",
          "737:        0,     0,    44,    58,   102,   104,   106,    99,   100,     0,",
          "738:      101,    52,    96,    97,    93,    94,     0,    54,    55,     0,",
          "739:        0,     0,     0,   107,   120,    16,    53,     0,    78,    38,",
          "740:       38,     0,     0,     0,     0,     0,     0,     0,    92,   108,",
          "741:      117,    67,     0,    53,    78,     0,     0,    48,    70,    68,",
          "743:        0,     0,     0,     0,     0,     0,     0,     0,     0,    34,",
          "744:       36,    59,     0,    60,     0,     0,     0,     0,     0,     0,",
          "745:       79,    95,    45,     0,     0,    49,    50,     0,     0,    87,",
          "746:       85,    66,    56,    57,   116,   114,   115,    77,    76,    75,",
          "747:       73,    74,    72,   119,   118,   109,   110,   111,   112,   113,",
          "748:       41,    40,    42,    43,    39,     0,   103,   105,    98,    61,",
          "749:        0,    46,    47,     0,    71,    69,     0,     0,     0,    64,",
          "750:       51,    90,    91,     0,    88,     0,     0,     0,    81,     0,",
          "751:       86,     0,    82,     0,    83,    62,     0,    89,    80,     0,",
          "752:        0,     0,    84,     0,    65,     0,    63",
          "759:       15,    19,    21,    30,    31,    37,    38,    50,    51,   119,",
          "760:      164,    73,   134,   135,    74,    92,    76,   178,   200,   189,",
          "761:      138,   137,   187,   123,   193,   141,   176,   183,   184,    77,",
          "762:       78",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "762: #define YYPACT_NINF -71",
          "763: static const yytype_int16 yypact[] =",
          "764: {",
          "786: };",
          "789: static const yytype_int16 yypgoto[] =",
          "790: {",
          "795: };",
          "798:    positive, shift that token.  If negative, reduce the rule which",
          "799:    number is the opposite.  If zero, do what YYDEFACT says.",
          "802: static const yytype_int16 yytable[] =",
          "803: {",
          "825:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,",
          "839:      105,     0,     0,     0,     0,     0,     0,   112,   113,   114,",
          "844: };",
          "846: static const yytype_int16 yycheck[] =",
          "847: {",
          "852:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,",
          "869:       43,    44,    45,    46,    47,    48,    49,    50,    51,    52,",
          "883:       44,    -1,    -1,    -1,    -1,    -1,    -1,    51,    52,    53,",
          "888: };",
          "",
          "[Removed Lines]",
          "765:      -71,    29,   -71,   -29,   -16,   -71,   -71,   166,   -71,   -71,",
          "766:      -71,   -71,    13,   -71,   -71,   -71,   -71,   -10,    60,    10,",
          "767:      -71,    91,    71,   -71,    16,    95,   121,    41,   -71,    42,",
          "768:      121,   -71,   126,   133,    70,   -71,    94,   126,   -71,   111,",
          "769:      114,   -71,   -71,   -71,   -71,    63,   -71,    46,   -71,   -71,",
          "770:      -71,   157,   -71,    -9,   -71,   115,   119,   -71,   -71,   112,",
          "771:      -71,   -71,   -71,   -71,   -71,   -71,   100,   -71,   -71,   122,",
          "772:      122,    46,    46,    30,   -71,    47,   -71,   155,   290,    68,",
          "773:      -71,   122,   120,   122,   122,   122,   122,    -4,   306,   -71,",
          "774:      -71,   -71,    47,   118,   167,   180,   122,    46,   -71,   -71,",
          "775:        2,   179,   122,   122,   122,   122,   122,   122,   122,   122,",
          "776:      122,   122,   122,   122,   122,   122,   122,   122,   122,   -71,",
          "777:      -71,   -71,   -71,   -71,    68,   306,   122,   -71,   227,   245,",
          "778:      109,   187,   170,     2,   -71,   -71,   -71,   263,   134,   135,",
          "779:      116,    46,    46,   -71,   -71,   -71,   -71,   306,   321,   335,",
          "780:      -42,   306,   306,   306,   306,   306,   306,    69,    69,    90,",
          "781:       90,   -71,   -71,   -71,   141,   -71,   -71,   -71,   -71,   143,",
          "782:      -71,   -71,    46,   164,   -71,    66,   122,   139,   -71,   116,",
          "783:      -71,   -71,    97,   -71,   207,   122,   161,   -71,   158,   -71,",
          "784:       66,   -71,   103,   141,   -71,    46,   -71,   -71,   122,   159,",
          "785:      -15,   306,    46,   -71,    28,   -71",
          "791:      -71,   -71,   223,   229,   -71,   -71,   -71,   -71,   -71,   -71,",
          "792:      -71,   -71,   -71,   -71,   203,   -71,   197,   -71,   156,   -71,",
          "793:      -71,   -71,   -71,   144,   -47,   -70,   -71,   -71,   -71,   -71,",
          "794:      -71,   -71,    58,   -71,   113,   -71,   -71,    57,   182,   -65",
          "801: #define YYTABLE_NINF -92",
          "804:       75,    88,    93,    11,    89,    90,   132,    94,     4,   112,",
          "805:      113,   114,   115,   116,   117,   118,   125,    81,   128,   129,",
          "806:      130,   131,    82,    16,    91,    98,    99,   140,   133,     2,",
          "807:        3,   137,     8,   -17,   -17,   -17,   143,   147,   148,   149,",
          "808:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,",
          "809:      160,   161,   162,   163,    18,   203,    52,    53,    54,    55,",
          "810:       56,   164,    57,    58,    59,    60,     4,    61,    98,    99,",
          "811:       20,   144,    22,    62,    63,    64,    65,   180,    24,    66,",
          "812:       26,   181,    49,    50,    67,    68,    41,    98,    99,    42,",
          "813:      119,   120,   121,   122,   173,   174,    95,    96,   205,    97,",
          "814:       69,    23,   179,    27,    70,    32,    71,    34,    43,    44,",
          "815:       52,   184,    54,    55,    56,    72,    57,    58,    59,    60,",
          "816:      193,    61,   114,   115,   116,   117,   118,    62,    63,    64,",
          "817:       65,    29,    52,   201,    54,    55,    56,    36,    57,    58,",
          "818:       59,    60,    39,    61,   176,   116,   117,   118,   200,    62,",
          "819:       63,   103,   104,   105,    69,   204,   -52,   -52,    70,    45,",
          "820:      112,   113,   114,   115,   116,   117,   118,   189,   190,    86,",
          "821:       12,    13,    14,   197,   198,    47,    69,    48,    80,   167,",
          "822:       70,    85,    83,   103,   104,   105,    84,   100,   134,   126,",
          "823:      136,    86,   112,   113,   114,   115,   116,   117,   118,   -91,",
          "824:       61,   168,   101,   102,   171,    99,   172,   178,   185,   103,",
          "826:      114,   115,   116,   117,   118,   194,     9,   195,   202,   103,",
          "827:      104,   105,    10,    35,    46,   187,   124,   135,   112,   113,",
          "828:      114,   115,   116,   117,   118,   146,   169,   196,    87,   103,",
          "829:      104,   105,     0,     0,     0,     0,     0,   135,   112,   113,",
          "830:      114,   115,   116,   117,   118,     0,     0,     0,     0,   103,",
          "831:      104,   105,     0,     0,     0,     0,     0,   191,   112,   113,",
          "832:      114,   115,   116,   117,   118,     0,     0,   103,   104,   105,",
          "833:        0,     0,     0,     0,     0,   165,   112,   113,   114,   115,",
          "834:      116,   117,   118,     0,     0,   103,   104,   105,     0,     0,",
          "835:        0,     0,     0,   166,   112,   113,   114,   115,   116,   117,",
          "836:      118,     0,   -91,     0,     0,   101,   102,     0,     0,     0,",
          "837:        0,   170,   103,   104,   105,   106,   107,   108,   109,   110,",
          "838:      111,   112,   113,   114,   115,   116,   117,   118,   103,   104,",
          "840:      115,   116,   117,   118,   104,   105,     0,     0,     0,     0,",
          "841:        0,     0,   112,   113,   114,   115,   116,   117,   118,   105,",
          "842:        0,     0,     0,     0,     0,     0,   112,   113,   114,   115,",
          "843:      116,   117,   118",
          "848:       47,    66,    72,    19,    69,    70,    10,    72,    37,    51,",
          "849:       52,    53,    54,    55,    56,    57,    81,    26,    83,    84,",
          "850:       85,    86,    31,    10,    71,    40,    41,    97,    32,     0,",
          "851:        1,    96,    61,     4,     5,     6,    34,   102,   103,   104,",
          "853:      115,   116,   117,   118,    64,    70,    10,    11,    12,    13,",
          "854:       14,   126,    16,    17,    18,    19,    37,    21,    40,    41,",
          "855:       10,    69,    62,    27,    28,    29,    30,    11,     7,    33,",
          "856:       64,    15,    19,    20,    38,    39,    16,    40,    41,    19,",
          "857:       22,    23,    24,    25,   141,   142,    66,    67,    70,    69,",
          "858:       54,    10,   172,     8,    58,    64,    60,    65,    38,    39,",
          "859:       10,   176,    12,    13,    14,    69,    16,    17,    18,    19,",
          "860:      185,    21,    53,    54,    55,    56,    57,    27,    28,    29,",
          "861:       30,    10,    10,   198,    12,    13,    14,    11,    16,    17,",
          "862:       18,    19,     9,    21,     3,    55,    56,    57,   195,    27,",
          "863:       28,    42,    43,    44,    54,   202,    40,    41,    58,    65,",
          "864:       51,    52,    53,    54,    55,    56,    57,    70,    71,    69,",
          "865:        4,     5,     6,    70,    71,    64,    54,    63,    21,    70,",
          "866:       58,    69,    67,    42,    43,    44,    67,    32,    70,    69,",
          "867:       10,    69,    51,    52,    53,    54,    55,    56,    57,    32,",
          "868:       21,    31,    35,    36,    70,    41,    71,    64,    69,    42,",
          "870:       53,    54,    55,    56,    57,    64,     3,    69,    69,    42,",
          "871:       43,    44,     3,    30,    37,   177,    80,    70,    51,    52,",
          "872:       53,    54,    55,    56,    57,   101,   133,   190,    66,    42,",
          "873:       43,    44,    -1,    -1,    -1,    -1,    -1,    70,    51,    52,",
          "874:       53,    54,    55,    56,    57,    -1,    -1,    -1,    -1,    42,",
          "875:       43,    44,    -1,    -1,    -1,    -1,    -1,    70,    51,    52,",
          "876:       53,    54,    55,    56,    57,    -1,    -1,    42,    43,    44,",
          "877:       -1,    -1,    -1,    -1,    -1,    68,    51,    52,    53,    54,",
          "878:       55,    56,    57,    -1,    -1,    42,    43,    44,    -1,    -1,",
          "879:       -1,    -1,    -1,    68,    51,    52,    53,    54,    55,    56,",
          "880:       57,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,",
          "881:       -1,    68,    42,    43,    44,    45,    46,    47,    48,    49,",
          "882:       50,    51,    52,    53,    54,    55,    56,    57,    42,    43,",
          "884:       54,    55,    56,    57,    43,    44,    -1,    -1,    -1,    -1,",
          "885:       -1,    -1,    51,    52,    53,    54,    55,    56,    57,    44,",
          "886:       -1,    -1,    -1,    -1,    -1,    -1,    51,    52,    53,    54,",
          "887:       55,    56,    57",
          "",
          "[Added Lines]",
          "770:      -71,   157,   -71,   -31,    -7,   -71,   -71,    68,   -71,   -71,",
          "771:      -71,   -71,     5,   -71,   -71,   -71,   -71,   -10,     7,   -33,",
          "772:      -71,    46,    61,   -71,    35,    93,   112,    59,   -71,    63,",
          "773:      112,   -71,   128,   139,    -5,   -71,    85,   128,   -71,    89,",
          "774:       91,   -71,   -71,   -71,   -71,     2,   -71,    48,   -71,   -71,",
          "775:      133,   138,   -71,   -23,   -71,    98,   100,   -71,   -71,    95,",
          "776:      -71,   -71,   -71,   -71,   -71,   -71,    97,   -71,   -71,   119,",
          "777:      119,    48,    48,    13,   -71,    64,   -71,   140,   297,   -71,",
          "778:      -71,   119,    99,   119,   119,   119,   119,     0,    41,   -71,",
          "779:      -71,   -71,    64,    90,   154,   164,   119,    48,   -71,   -71,",
          "780:       -6,   155,   119,   119,   119,   119,   119,   119,   119,   119,",
          "781:      119,   119,   119,   119,   119,   119,   119,   119,   119,   190,",
          "782:      190,    41,   119,   -71,   234,   252,   174,   194,   144,    -6,",
          "783:      -71,   -71,   -71,   270,   115,   116,    79,    48,    48,   -71,",
          "784:      -71,   -71,   -71,    41,   312,   326,   333,    41,    41,    41,",
          "785:       41,    41,    41,    88,    88,   136,   136,   -71,   -71,   -71,",
          "786:      -71,   -71,   -71,   -71,   -71,   127,   -71,   -71,   -71,   -71,",
          "787:      131,   -71,   -71,    48,   178,   -71,    -2,   119,   151,   -71,",
          "788:       79,   -71,   -71,   -35,   -71,   214,   119,   158,   -71,   152,",
          "789:      -71,    -2,   -71,    18,   127,   -71,    48,   -71,   -71,   119,",
          "790:      163,   -15,    41,    48,   -71,    30,   -71",
          "796:      -71,   -71,   220,   230,   -71,   -71,   -71,   -71,   -71,   -71,",
          "797:      -71,   -71,   -71,   -71,   204,   -71,   198,   -71,   -71,   159,",
          "798:      -71,   -71,   -71,   -71,   141,   -47,   -70,   -71,   -71,   -71,",
          "799:      -71,   -71,   -71,    62,   -71,   114,   -71,   -71,    50,   186,",
          "800:      -65",
          "807: #define YYTABLE_NINF -93",
          "810:       75,    88,    93,    81,    89,    90,     4,    94,    82,   181,",
          "811:      128,    41,    11,   182,    42,    16,   121,    20,   124,   125,",
          "812:      126,   127,    49,   -35,    91,    98,    99,   136,   139,    22,",
          "813:        8,   133,   129,    43,    44,   190,   191,   143,   144,   145,",
          "814:      146,   147,   148,   149,   150,   151,   152,   153,   154,   155,",
          "815:      156,   157,   158,   159,    18,   204,    23,   165,    52,    53,",
          "816:       54,    55,    56,   140,    57,    58,    59,    60,    24,    61,",
          "817:       98,    99,    12,    13,    14,    62,    63,    64,    65,    95,",
          "818:       96,    66,    97,   103,   104,   105,    67,    68,   198,   199,",
          "819:      174,   175,   112,   113,   114,   115,   116,   117,   118,    26,",
          "820:      206,    27,    69,   180,    98,    99,    70,    52,    71,    54,",
          "821:       55,    56,   185,    57,    58,    59,    60,    72,    61,   -53,",
          "822:      -53,   194,    29,    32,    62,    63,    64,    65,    34,    52,",
          "823:      177,    54,    55,    56,   202,    57,    58,    59,    60,    36,",
          "824:       61,   114,   115,   116,   117,   118,    62,    63,    39,   201,",
          "825:       45,    69,    79,    47,    48,    70,   205,     2,     3,    80,",
          "826:      130,   -17,   -17,   -17,    85,    83,    86,    84,   122,   103,",
          "827:      104,   105,   100,    69,   132,   169,    61,    70,   112,   113,",
          "828:      114,   115,   116,   117,   118,   172,   -92,   173,    86,   101,",
          "829:      102,   116,   117,   118,     4,   179,   103,   104,   105,   106,",
          "830:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
          "831:      117,   118,   160,   161,   162,   163,   103,   104,   105,    99,",
          "832:      186,   196,   195,     9,   131,   112,   113,   114,   115,   116,",
          "833:      117,   118,   203,    10,    35,    46,   103,   104,   105,   120,",
          "834:      188,   197,   142,   170,   168,   112,   113,   114,   115,   116,",
          "835:      117,   118,    87,     0,     0,     0,   103,   104,   105,     0,",
          "836:        0,     0,     0,     0,   131,   112,   113,   114,   115,   116,",
          "837:      117,   118,     0,     0,     0,     0,   103,   104,   105,     0,",
          "838:        0,     0,     0,     0,   192,   112,   113,   114,   115,   116,",
          "839:      117,   118,     0,     0,   103,   104,   105,     0,     0,     0,",
          "840:        0,     0,   166,   112,   113,   114,   115,   116,   117,   118,",
          "841:        0,     0,   103,   104,   105,     0,     0,     0,     0,     0,",
          "842:      167,   112,   113,   114,   115,   116,   117,   118,     0,   -92,",
          "843:        0,     0,   101,   102,     0,     0,     0,     0,   171,   103,",
          "845:      114,   115,   116,   117,   118,   104,   105,     0,     0,     0,",
          "846:        0,     0,     0,   112,   113,   114,   115,   116,   117,   118,",
          "848:      115,   116,   117,   118,   112,   113,   114,   115,   116,   117,",
          "849:      118",
          "854:       47,    66,    72,    26,    69,    70,    37,    72,    31,    11,",
          "855:       10,    16,    19,    15,    19,    10,    81,    10,    83,    84,",
          "856:       85,    86,    20,    21,    71,    40,    41,    97,    34,    62,",
          "857:       61,    96,    32,    38,    39,    70,    71,   102,   103,   104,",
          "859:      115,   116,   117,   118,    64,    70,    10,   122,    10,    11,",
          "860:       12,    13,    14,    69,    16,    17,    18,    19,     7,    21,",
          "861:       40,    41,     4,     5,     6,    27,    28,    29,    30,    66,",
          "862:       67,    33,    69,    42,    43,    44,    38,    39,    70,    71,",
          "863:      137,   138,    51,    52,    53,    54,    55,    56,    57,    64,",
          "864:       70,     8,    54,   173,    40,    41,    58,    10,    60,    12,",
          "865:       13,    14,   177,    16,    17,    18,    19,    69,    21,    40,",
          "866:       41,   186,    10,    64,    27,    28,    29,    30,    65,    10,",
          "867:        3,    12,    13,    14,   199,    16,    17,    18,    19,    11,",
          "868:       21,    53,    54,    55,    56,    57,    27,    28,     9,   196,",
          "869:       65,    54,    19,    64,    63,    58,   203,     0,     1,    21,",
          "870:       70,     4,     5,     6,    69,    67,    69,    67,    69,    42,",
          "871:       43,    44,    32,    54,    10,    31,    21,    58,    51,    52,",
          "872:       53,    54,    55,    56,    57,    70,    32,    71,    69,    35,",
          "873:       36,    55,    56,    57,    37,    64,    42,    43,    44,    45,",
          "874:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,",
          "875:       56,    57,    22,    23,    24,    25,    42,    43,    44,    41,",
          "876:       69,    69,    64,     3,    70,    51,    52,    53,    54,    55,",
          "877:       56,    57,    69,     3,    30,    37,    42,    43,    44,    80,",
          "878:      178,   191,   101,   129,    70,    51,    52,    53,    54,    55,",
          "879:       56,    57,    66,    -1,    -1,    -1,    42,    43,    44,    -1,",
          "880:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
          "881:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
          "882:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
          "883:       56,    57,    -1,    -1,    42,    43,    44,    -1,    -1,    -1,",
          "884:       -1,    -1,    68,    51,    52,    53,    54,    55,    56,    57,",
          "885:       -1,    -1,    42,    43,    44,    -1,    -1,    -1,    -1,    -1,",
          "886:       68,    51,    52,    53,    54,    55,    56,    57,    -1,    32,",
          "887:       -1,    -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,",
          "889:       53,    54,    55,    56,    57,    43,    44,    -1,    -1,    -1,",
          "890:       -1,    -1,    -1,    51,    52,    53,    54,    55,    56,    57,",
          "892:       54,    55,    56,    57,    51,    52,    53,    54,    55,    56,",
          "893:       57",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "895:       75,    19,     4,     5,     6,    82,    10,    76,    64,    83,",
          "896:       10,    84,    62,    10,     7,    78,    64,     8,    79,    10,",
          "897:       85,    86,    64,    77,    65,    86,    11,    87,    88,     9,",
          "900:       19,    21,    27,    28,    29,    30,    33,    38,    39,    54,",
          "904:       32,    35,    36,    42,    43,    44,    45,    46,    47,    48,",
          "915: };",
          "917: #define yyerrok  (yyerrstatus = 0)",
          "",
          "[Removed Lines]",
          "898:       80,    16,    19,    38,    39,    65,    88,    64,    63,    19,",
          "899:       20,    89,    10,    11,    12,    13,    14,    16,    17,    18,",
          "901:       58,    60,    69,    92,    95,    96,    97,   110,   111,    90,",
          "902:       21,    26,    31,    67,    67,    69,    69,   110,   111,   111,",
          "903:      111,    96,    96,    97,   111,    66,    67,    69,    40,    41,",
          "905:       49,    50,    51,    52,    53,    54,    55,    56,    57,    22,",
          "906:       23,    24,    25,    91,    90,   111,    69,   104,   111,   111,",
          "907:      111,   111,    10,    32,    70,    70,    10,   111,    93,    94,",
          "908:       97,   102,   101,    34,    69,   106,    95,   111,   111,   111,",
          "909:      111,   111,   111,   111,   111,   111,   111,   111,   111,   111,",
          "910:      111,   111,   111,   111,   111,    68,    68,    70,    31,   106,",
          "911:       68,    70,    71,    96,    96,   107,     3,    98,    64,    97,",
          "912:       11,    15,   108,   109,   111,    69,   103,   104,   100,    70,",
          "913:       71,    70,   105,   111,    64,    69,   109,    70,    71,    99,",
          "914:       96,   111,    69,    70,    96,    70",
          "",
          "[Added Lines]",
          "904:       80,    16,    19,    38,    39,    65,    88,    64,    63,    20,",
          "905:       89,    90,    10,    11,    12,    13,    14,    16,    17,    18,",
          "907:       58,    60,    69,    93,    96,    97,    98,   111,   112,    19,",
          "908:       21,    26,    31,    67,    67,    69,    69,   111,   112,   112,",
          "909:      112,    97,    97,    98,   112,    66,    67,    69,    40,    41,",
          "911:       49,    50,    51,    52,    53,    54,    55,    56,    57,    91,",
          "912:       91,   112,    69,   105,   112,   112,   112,   112,    10,    32,",
          "913:       70,    70,    10,   112,    94,    95,    98,   103,   102,    34,",
          "914:       69,   107,    96,   112,   112,   112,   112,   112,   112,   112,",
          "915:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "916:       22,    23,    24,    25,    92,   112,    68,    68,    70,    31,",
          "917:      107,    68,    70,    71,    97,    97,   108,     3,    99,    64,",
          "918:       98,    11,    15,   109,   110,   112,    69,   104,   105,   101,",
          "919:       70,    71,    70,   106,   112,    64,    69,   110,    70,    71,",
          "920:      100,    97,   112,    69,    70,    97,    70",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1434:   switch (yytype)",
          "1435:     {",
          "1438:  { yr_free((yyvaluep->c_string)); };",
          "1439: #line 1438 \"grammar.c\"",
          "1440:  break;",
          "1443:  { yr_free((yyvaluep->c_string)); };",
          "1444: #line 1443 \"grammar.c\"",
          "1445:  break;",
          "1448:  { yr_free((yyvaluep->c_string)); };",
          "1449: #line 1448 \"grammar.c\"",
          "1450:  break;",
          "1453:  { yr_free((yyvaluep->c_string)); };",
          "1454: #line 1453 \"grammar.c\"",
          "1455:  break;",
          "1458:  { yr_free((yyvaluep->c_string)); };",
          "1459: #line 1458 \"grammar.c\"",
          "1460:  break;",
          "1463:  { yr_free((yyvaluep->c_string)); };",
          "1464: #line 1463 \"grammar.c\"",
          "1465:  break;",
          "1468:  { yr_free((yyvaluep->sized_string)); };",
          "1469: #line 1468 \"grammar.c\"",
          "1470:  break;",
          "1473:  { yr_free((yyvaluep->sized_string)); };",
          "1474: #line 1473 \"grammar.c\"",
          "1475:  break;",
          "1478:  { yr_free((yyvaluep->sized_string)); };",
          "1479: #line 1478 \"grammar.c\"",
          "1480:  break;",
          "",
          "[Removed Lines]",
          "1437: #line 176 \"grammar.y\"",
          "1442: #line 180 \"grammar.y\"",
          "1447: #line 177 \"grammar.y\"",
          "1452: #line 178 \"grammar.y\"",
          "1457: #line 179 \"grammar.y\"",
          "1462: #line 181 \"grammar.y\"",
          "1467: #line 182 \"grammar.y\"",
          "1472: #line 183 \"grammar.y\"",
          "1477: #line 184 \"grammar.y\"",
          "",
          "[Added Lines]",
          "1443: #line 176 \"grammar.y\"",
          "1448: #line 180 \"grammar.y\"",
          "1453: #line 177 \"grammar.y\"",
          "1458: #line 178 \"grammar.y\"",
          "1463: #line 179 \"grammar.y\"",
          "1468: #line 181 \"grammar.y\"",
          "1473: #line 182 \"grammar.y\"",
          "1478: #line 183 \"grammar.y\"",
          "1483: #line 184 \"grammar.y\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2081: #line 472 \"grammar.y\"",
          "2082:     { (yyval.string) = (yyvsp[(1) - (2)].string); }",
          "2083:     break;",
          "2085:   case 33:",
          "2087:     {",
          "2091:         yr_free((yyvsp[(1) - (4)].c_string));",
          "2092:         yr_free((yyvsp[(3) - (4)].sized_string));",
          "2094:         ERROR_IF((yyval.string) == NULL);",
          "2098:   case 34:",
          "2099: #line 488 \"grammar.y\"",
          "2100:     {",
          "2101:         compiler->error_line = yyget_lineno(yyscanner);",
          "2105:   case 35:",
          "2106: #line 492 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2086: #line 478 \"grammar.y\"",
          "2088:         (yyval.string) = yr_parser_reduce_string_declaration(",
          "2089:             yyscanner, (int32_t) (yyvsp[(4) - (4)].integer), (yyvsp[(1) - (4)].c_string), (yyvsp[(3) - (4)].sized_string));",
          "2095:       }",
          "2096:     break;",
          "2102:       }",
          "2103:     break;",
          "",
          "[Added Lines]",
          "2091:   case 33:",
          "2092: #line 478 \"grammar.y\"",
          "2093:     {",
          "2094:         compiler->error_line = yyget_lineno(yyscanner);",
          "2095:       }",
          "2096:     break;",
          "2099: #line 482 \"grammar.y\"",
          "2101:         (yyval.string) = yr_parser_reduce_string_declaration(",
          "2102:             yyscanner, (int32_t) (yyvsp[(5) - (5)].integer), (yyvsp[(1) - (5)].c_string), (yyvsp[(4) - (5)].sized_string));",
          "2105:         yr_free((yyvsp[(4) - (5)].sized_string));",
          "2109:       }",
          "2110:     break;",
          "2116:       }",
          "2117:     break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2109:             yyscanner, (int32_t) (yyvsp[(5) - (5)].integer) | STRING_GFLAGS_REGEXP, (yyvsp[(1) - (5)].c_string), (yyvsp[(4) - (5)].sized_string));",
          "2111:         yr_free((yyvsp[(1) - (5)].c_string));",
          "2112:         yr_free((yyvsp[(4) - (5)].sized_string));",
          "2114:         ERROR_IF((yyval.string) == NULL);",
          "2116:         compiler->error_line = 0;",
          "2120:   case 36:",
          "2121: #line 504 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2117:       }",
          "2118:     break;",
          "",
          "[Added Lines]",
          "2130:       }",
          "2131:     break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2124:             yyscanner, STRING_GFLAGS_HEXADECIMAL, (yyvsp[(1) - (3)].c_string), (yyvsp[(3) - (3)].sized_string));",
          "2126:         yr_free((yyvsp[(1) - (3)].c_string));",
          "2127:         yr_free((yyvsp[(3) - (3)].sized_string));",
          "2129:         ERROR_IF((yyval.string) == NULL);",
          "2133:   case 37:",
          "2134: #line 517 \"grammar.y\"",
          "2138:   case 38:",
          "2139: #line 518 \"grammar.y\"",
          "2143:   case 39:",
          "2144: #line 523 \"grammar.y\"",
          "2148:   case 40:",
          "2149: #line 524 \"grammar.y\"",
          "2153:   case 41:",
          "2154: #line 525 \"grammar.y\"",
          "2158:   case 42:",
          "2159: #line 526 \"grammar.y\"",
          "2163:   case 43:",
          "2164: #line 532 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2130:       }",
          "2131:     break;",
          "2135:     { (yyval.integer) = 0; }",
          "2136:     break;",
          "2140:     { (yyval.integer) = (yyvsp[(1) - (2)].integer) | (yyvsp[(2) - (2)].integer); }",
          "2141:     break;",
          "2145:     { (yyval.integer) = STRING_GFLAGS_WIDE; }",
          "2146:     break;",
          "2150:     { (yyval.integer) = STRING_GFLAGS_ASCII; }",
          "2151:     break;",
          "2155:     { (yyval.integer) = STRING_GFLAGS_NO_CASE; }",
          "2156:     break;",
          "2160:     { (yyval.integer) = STRING_GFLAGS_FULL_WORD; }",
          "2161:     break;",
          "",
          "[Added Lines]",
          "2140:         yr_free((yyvsp[(3) - (3)].sized_string));",
          "2144:       }",
          "2145:     break;",
          "2149:     { (yyval.integer) = 0; }",
          "2150:     break;",
          "2154:     { (yyval.integer) = (yyvsp[(1) - (2)].integer) | (yyvsp[(2) - (2)].integer); }",
          "2155:     break;",
          "2159:     { (yyval.integer) = STRING_GFLAGS_WIDE; }",
          "2160:     break;",
          "2164:     { (yyval.integer) = STRING_GFLAGS_ASCII; }",
          "2165:     break;",
          "2169:     { (yyval.integer) = STRING_GFLAGS_NO_CASE; }",
          "2170:     break;",
          "2174:     { (yyval.integer) = STRING_GFLAGS_FULL_WORD; }",
          "2175:     break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2245:         yr_free((yyvsp[(1) - (1)].c_string));",
          "2247:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2251:   case 44:",
          "2252: #line 617 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2248:       }",
          "2249:     break;",
          "",
          "[Added Lines]",
          "2262:       }",
          "2263:     break;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2294:         yr_free((yyvsp[(3) - (3)].c_string));",
          "2296:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2300:   case 45:",
          "2301: #line 663 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2297:       }",
          "2298:     break;",
          "",
          "[Added Lines]",
          "2311:       }",
          "2312:     break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2354:         }",
          "2356:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2360:   case 46:",
          "2361: #line 721 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2357:       }",
          "2358:     break;",
          "",
          "[Added Lines]",
          "2371:       }",
          "2372:     break;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2398:         yr_free((yyvsp[(3) - (4)].c_string));",
          "2400:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2404:   case 47:",
          "2405: #line 765 \"grammar.y\"",
          "2409:   case 48:",
          "2410: #line 766 \"grammar.y\"",
          "2414:   case 49:",
          "2415: #line 771 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2401:       }",
          "2402:     break;",
          "2406:     { (yyval.c_string) = yr_strdup(\"\"); }",
          "2407:     break;",
          "2411:     { (yyval.c_string) = (yyvsp[(1) - (1)].c_string); }",
          "2412:     break;",
          "",
          "[Added Lines]",
          "2415:       }",
          "2416:     break;",
          "2420:     { (yyval.c_string) = yr_strdup(\"\"); }",
          "2421:     break;",
          "2425:     { (yyval.c_string) = (yyvsp[(1) - (1)].c_string); }",
          "2426:     break;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2436:         }",
          "2438:         ERROR_IF((yyval.c_string) == NULL);",
          "2442:   case 50:",
          "2443: #line 796 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2439:       }",
          "2440:     break;",
          "",
          "[Added Lines]",
          "2453:       }",
          "2454:     break;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2471:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2473:         (yyval.c_string) = (yyvsp[(1) - (3)].c_string);",
          "2477:   case 51:",
          "2478: #line 832 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2474:       }",
          "2475:     break;",
          "",
          "[Added Lines]",
          "2488:       }",
          "2489:     break;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2516:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2518:         (yyval.expression).type = EXPRESSION_TYPE_REGEXP;",
          "2522:   case 52:",
          "2523: #line 878 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2519:       }",
          "2520:     break;",
          "",
          "[Added Lines]",
          "2533:       }",
          "2534:     break;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2531:         }",
          "2533:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2537:   case 53:",
          "2538: #line 893 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2534:       }",
          "2535:     break;",
          "",
          "[Added Lines]",
          "2548:       }",
          "2549:     break;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2543:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2545:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2549:   case 54:",
          "2550: #line 902 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2546:       }",
          "2547:     break;",
          "",
          "[Added Lines]",
          "2560:       }",
          "2561:     break;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2555:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2557:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2561:   case 55:",
          "2562: #line 911 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2558:       }",
          "2559:     break;",
          "",
          "[Added Lines]",
          "2572:       }",
          "2573:     break;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2573:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2575:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2579:   case 56:",
          "2580: #line 926 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2576:       }",
          "2577:     break;",
          "",
          "[Added Lines]",
          "2590:       }",
          "2591:     break;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2588:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2590:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2594:   case 57:",
          "2595: #line 938 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2591:       }",
          "2592:     break;",
          "",
          "[Added Lines]",
          "2605:       }",
          "2606:     break;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2605:         ERROR_IF(result != ERROR_SUCCESS);",
          "2607:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2611:   case 58:",
          "2612: #line 952 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2608:       }",
          "2609:     break;",
          "",
          "[Added Lines]",
          "2622:       }",
          "2623:     break;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2621:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2623:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2627:   case 59:",
          "2628: #line 965 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2624:       }",
          "2625:     break;",
          "",
          "[Added Lines]",
          "2638:       }",
          "2639:     break;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2635:         ERROR_IF(compiler->last_result!= ERROR_SUCCESS);",
          "2637:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2641:   case 60:",
          "2642: #line 976 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2638:       }",
          "2639:     break;",
          "",
          "[Added Lines]",
          "2652:       }",
          "2653:     break;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2668:             yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "2670:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2674:   case 61:",
          "2675: #line 1006 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2671:       }",
          "2672:     break;",
          "",
          "[Added Lines]",
          "2685:       }",
          "2686:     break;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2706:         compiler->loop_address[compiler->loop_depth] = addr;",
          "2707:         compiler->loop_identifier[compiler->loop_depth] = (yyvsp[(3) - (7)].c_string);",
          "2708:         compiler->loop_depth++;",
          "2712:   case 62:",
          "2713: #line 1041 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2709:       }",
          "2710:     break;",
          "",
          "[Added Lines]",
          "2723:       }",
          "2724:     break;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2790:         yr_free((yyvsp[(3) - (11)].c_string));",
          "2792:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2796:   case 63:",
          "2797: #line 1122 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2793:       }",
          "2794:     break;",
          "",
          "[Added Lines]",
          "2807:       }",
          "2808:     break;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2823:         compiler->loop_address[compiler->loop_depth] = addr;",
          "2824:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "2825:         compiler->loop_depth++;",
          "2829:   case 64:",
          "2830: #line 1152 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2826:       }",
          "2827:     break;",
          "",
          "[Added Lines]",
          "2840:       }",
          "2841:     break;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2877:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2882:   case 65:",
          "2883: #line 1202 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2879:       }",
          "2880:     break;",
          "",
          "[Added Lines]",
          "2893:       }",
          "2894:     break;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2885:         yr_parser_emit(yyscanner, OP_OF, NULL);",
          "2887:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2891:   case 66:",
          "2892: #line 1208 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2888:       }",
          "2889:     break;",
          "",
          "[Added Lines]",
          "2902:       }",
          "2903:     break;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2894:         yr_parser_emit(yyscanner, OP_NOT, NULL);",
          "2896:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2900:   case 67:",
          "2901: #line 1214 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2897:       }",
          "2898:     break;",
          "",
          "[Added Lines]",
          "2911:       }",
          "2912:     break;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2923:         fixup->address = jmp_destination_addr;",
          "2924:         fixup->next = compiler->fixup_stack_head;",
          "2925:         compiler->fixup_stack_head = fixup;",
          "2929:   case 68:",
          "2930: #line 1240 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2926:       }",
          "2927:     break;",
          "",
          "[Added Lines]",
          "2940:       }",
          "2941:     break;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2962:         yr_free(fixup);",
          "2964:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2968:   case 69:",
          "2969: #line 1276 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2965:       }",
          "2966:     break;",
          "",
          "[Added Lines]",
          "2979:       }",
          "2980:     break;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2990:         fixup->address = jmp_destination_addr;",
          "2991:         fixup->next = compiler->fixup_stack_head;",
          "2992:         compiler->fixup_stack_head = fixup;",
          "2996:   case 70:",
          "2997: #line 1301 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2993:       }",
          "2994:     break;",
          "",
          "[Added Lines]",
          "3007:       }",
          "3008:     break;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "3029:         yr_free(fixup);",
          "3031:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3035:   case 71:",
          "3036: #line 1337 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3032:       }",
          "3033:     break;",
          "",
          "[Added Lines]",
          "3046:       }",
          "3047:     break;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3041:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3043:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3047:   case 72:",
          "3048: #line 1346 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3044:       }",
          "3045:     break;",
          "",
          "[Added Lines]",
          "3058:       }",
          "3059:     break;",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3053:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3055:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3059:   case 73:",
          "3060: #line 1355 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3056:       }",
          "3057:     break;",
          "",
          "[Added Lines]",
          "3070:       }",
          "3071:     break;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3065:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3067:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3071:   case 74:",
          "3072: #line 1364 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3068:       }",
          "3069:     break;",
          "",
          "[Added Lines]",
          "3082:       }",
          "3083:     break;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3077:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3079:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3083:   case 75:",
          "3084: #line 1373 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3080:       }",
          "3081:     break;",
          "",
          "[Added Lines]",
          "3094:       }",
          "3095:     break;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3089:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3091:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3095:   case 76:",
          "3096: #line 1382 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3092:       }",
          "3093:     break;",
          "",
          "[Added Lines]",
          "3106:       }",
          "3107:     break;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3101:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3103:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3107:   case 77:",
          "3108: #line 1391 \"grammar.y\"",
          "3109:     {",
          "3110:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3114:   case 78:",
          "3115: #line 1395 \"grammar.y\"",
          "3116:     {",
          "3117:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3121:   case 79:",
          "3122: #line 1402 \"grammar.y\"",
          "3126:   case 80:",
          "3127: #line 1403 \"grammar.y\"",
          "3131:   case 81:",
          "3132: #line 1409 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3104:       }",
          "3105:     break;",
          "3111:       }",
          "3112:     break;",
          "3118:       }",
          "3119:     break;",
          "3123:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
          "3124:     break;",
          "3128:     { (yyval.integer) = INTEGER_SET_RANGE; }",
          "3129:     break;",
          "",
          "[Added Lines]",
          "3118:       }",
          "3119:     break;",
          "3125:       }",
          "3126:     break;",
          "3132:       }",
          "3133:     break;",
          "3137:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
          "3138:     break;",
          "3142:     { (yyval.integer) = INTEGER_SET_RANGE; }",
          "3143:     break;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3146:         }",
          "3148:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3152:   case 82:",
          "3153: #line 1431 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3149:       }",
          "3150:     break;",
          "",
          "[Added Lines]",
          "3163:       }",
          "3164:     break;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3161:         }",
          "3163:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3167:   case 83:",
          "3168: #line 1443 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3164:       }",
          "3165:     break;",
          "",
          "[Added Lines]",
          "3178:       }",
          "3179:     break;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3175:         }",
          "3177:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3181:   case 84:",
          "3182: #line 1458 \"grammar.y\"",
          "3183:     {",
          "3185:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3189:   case 86:",
          "3190: #line 1464 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3178:       }",
          "3179:     break;",
          "3186:       }",
          "3187:     break;",
          "",
          "[Added Lines]",
          "3192:       }",
          "3193:     break;",
          "3200:       }",
          "3201:     break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3193:         yr_parser_emit_pushes_for_strings(yyscanner, \"$*\");",
          "3195:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3199:   case 89:",
          "3200: #line 1481 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3196:       }",
          "3197:     break;",
          "",
          "[Added Lines]",
          "3210:       }",
          "3211:     break;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3203:         yr_free((yyvsp[(1) - (1)].c_string));",
          "3205:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3209:   case 90:",
          "3210: #line 1488 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3206:       }",
          "3207:     break;",
          "",
          "[Added Lines]",
          "3220:       }",
          "3221:     break;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3213:         yr_free((yyvsp[(1) - (1)].c_string));",
          "3215:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3219:   case 92:",
          "3220: #line 1500 \"grammar.y\"",
          "3221:     {",
          "3222:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3226:   case 93:",
          "3227: #line 1504 \"grammar.y\"",
          "3228:     {",
          "3229:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, 1, NULL, NULL);",
          "3233:   case 94:",
          "3234: #line 1512 \"grammar.y\"",
          "3235:     {",
          "3236:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3240:   case 95:",
          "3241: #line 1516 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3216:       }",
          "3217:     break;",
          "3223:       }",
          "3224:     break;",
          "3230:       }",
          "3231:     break;",
          "3237:       }",
          "3238:     break;",
          "",
          "[Added Lines]",
          "3230:       }",
          "3231:     break;",
          "3237:       }",
          "3238:     break;",
          "3244:       }",
          "3245:     break;",
          "3251:       }",
          "3252:     break;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3248:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3249:         (yyval.expression).value.integer = UNDEFINED;",
          "3253:   case 96:",
          "3254: #line 1526 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3250:       }",
          "3251:     break;",
          "",
          "[Added Lines]",
          "3264:       }",
          "3265:     break;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3265:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3266:         (yyval.expression).value.integer = UNDEFINED;",
          "3270:   case 97:",
          "3271: #line 1540 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3267:       }",
          "3268:     break;",
          "",
          "[Added Lines]",
          "3281:       }",
          "3282:     break;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3284:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3285:         (yyval.expression).value.integer = UNDEFINED;",
          "3289:   case 98:",
          "3290: #line 1556 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3286:       }",
          "3287:     break;",
          "",
          "[Added Lines]",
          "3300:       }",
          "3301:     break;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3297:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3298:         (yyval.expression).value.integer = (yyvsp[(1) - (1)].integer);",
          "3302:   case 99:",
          "3303: #line 1566 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3299:       }",
          "3300:     break;",
          "",
          "[Added Lines]",
          "3313:       }",
          "3314:     break;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3308:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3310:         (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3314:   case 100:",
          "3315: #line 1575 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3311:       }",
          "3312:     break;",
          "",
          "[Added Lines]",
          "3325:       }",
          "3326:     break;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3335:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3337:         (yyval.expression).type = EXPRESSION_TYPE_STRING;",
          "3341:   case 101:",
          "3342: #line 1599 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3338:       }",
          "3339:     break;",
          "",
          "[Added Lines]",
          "3352:       }",
          "3353:     break;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3351:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3352:         (yyval.expression).value.integer = UNDEFINED;",
          "3356:   case 102:",
          "3357: #line 1611 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3353:       }",
          "3354:     break;",
          "",
          "[Added Lines]",
          "3367:       }",
          "3368:     break;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3366:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3367:         (yyval.expression).value.integer = UNDEFINED;",
          "3371:   case 103:",
          "3372: #line 1623 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3368:       }",
          "3369:     break;",
          "",
          "[Added Lines]",
          "3382:       }",
          "3383:     break;",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3385:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3386:         (yyval.expression).value.integer = UNDEFINED;",
          "3390:   case 104:",
          "3391: #line 1639 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3387:       }",
          "3388:     break;",
          "",
          "[Added Lines]",
          "3401:       }",
          "3402:     break;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3400:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3401:         (yyval.expression).value.integer = UNDEFINED;",
          "3405:   case 105:",
          "3406: #line 1651 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3402:       }",
          "3403:     break;",
          "",
          "[Added Lines]",
          "3416:       }",
          "3417:     break;",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3419:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3420:         (yyval.expression).value.integer = UNDEFINED;",
          "3424:   case 106:",
          "3425: #line 1667 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3421:       }",
          "3422:     break;",
          "",
          "[Added Lines]",
          "3435:       }",
          "3436:     break;",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3465:         }",
          "3467:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3471:   case 107:",
          "3472: #line 1711 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3468:       }",
          "3469:     break;",
          "",
          "[Added Lines]",
          "3482:       }",
          "3483:     break;",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3487:         }",
          "3489:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3493:   case 108:",
          "3494: #line 1730 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3490:       }",
          "3491:     break;",
          "",
          "[Added Lines]",
          "3504:       }",
          "3505:     break;",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3508:         {",
          "3509:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3510:         }",
          "3514:   case 109:",
          "3515: #line 1748 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3511:       }",
          "3512:     break;",
          "",
          "[Added Lines]",
          "3525:       }",
          "3526:     break;",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3529:         {",
          "3530:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3531:         }",
          "3535:   case 110:",
          "3536: #line 1766 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3532:       }",
          "3533:     break;",
          "",
          "[Added Lines]",
          "3546:       }",
          "3547:     break;",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3550:         {",
          "3551:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3552:         }",
          "3556:   case 111:",
          "3557: #line 1784 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3553:       }",
          "3554:     break;",
          "",
          "[Added Lines]",
          "3567:       }",
          "3568:     break;",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3579:         {",
          "3580:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3581:         }",
          "3585:   case 112:",
          "3586: #line 1810 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3582:       }",
          "3583:     break;",
          "",
          "[Added Lines]",
          "3596:       }",
          "3597:     break;",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3600:           compiler->last_result = ERROR_DIVISION_BY_ZERO;",
          "3601:           ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3602:         }",
          "3606:   case 113:",
          "3607: #line 1828 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3603:       }",
          "3604:     break;",
          "",
          "[Added Lines]",
          "3617:       }",
          "3618:     break;",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3614:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3615:         (yyval.expression).value.integer = OPERATION(^, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3619:   case 114:",
          "3620: #line 1838 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3616:       }",
          "3617:     break;",
          "",
          "[Added Lines]",
          "3630:       }",
          "3631:     break;",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3627:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3628:         (yyval.expression).value.integer = OPERATION(&, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3632:   case 115:",
          "3633: #line 1848 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3629:       }",
          "3630:     break;",
          "",
          "[Added Lines]",
          "3643:       }",
          "3644:     break;",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3640:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3641:         (yyval.expression).value.integer = OPERATION(|, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3645:   case 116:",
          "3646: #line 1858 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3642:       }",
          "3643:     break;",
          "",
          "[Added Lines]",
          "3656:       }",
          "3657:     break;",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3652:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3653:         (yyval.expression).value.integer = ((yyvsp[(2) - (2)].expression).value.integer == UNDEFINED) ?",
          "3654:             UNDEFINED : ~((yyvsp[(2) - (2)].expression).value.integer);",
          "3658:   case 117:",
          "3659: #line 1868 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3655:       }",
          "3656:     break;",
          "",
          "[Added Lines]",
          "3669:       }",
          "3670:     break;",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3666:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3667:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3671:   case 118:",
          "3672: #line 1878 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3668:       }",
          "3669:     break;",
          "",
          "[Added Lines]",
          "3682:       }",
          "3683:     break;",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3679:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3680:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3684:   case 119:",
          "3685: #line 1888 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3681:       }",
          "3682:     break;",
          "",
          "[Added Lines]",
          "3695:       }",
          "3696:     break;",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3687:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3688:       }",
          "3689:     break;",
          "3693: #line 3691 \"grammar.c\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3901: #endif",
          "3903:   return YYID (yyresult);",
          "",
          "[Removed Lines]",
          "3904: }",
          "",
          "[Added Lines]",
          "3918: }",
          "",
          "---------------"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "476: string_declaration",
          "478:       {",
          "479:         $$ = yr_parser_reduce_string_declaration(",
          "482:         yr_free($1);",
          "485:         ERROR_IF($$ == NULL);",
          "486:       }",
          "487:     | _STRING_IDENTIFIER_ '='",
          "488:       {",
          "",
          "[Removed Lines]",
          "477:     : _STRING_IDENTIFIER_ '=' _TEXT_STRING_ string_modifiers",
          "480:             yyscanner, (int32_t) $4, $1, $3);",
          "483:         yr_free($3);",
          "",
          "[Added Lines]",
          "477:     : _STRING_IDENTIFIER_ '='",
          "478:       {",
          "479:         compiler->error_line = yyget_lineno(yyscanner);",
          "480:       }",
          "481:       _TEXT_STRING_ string_modifiers",
          "484:             yyscanner, (int32_t) $5, $1, $4);",
          "487:         yr_free($4);",
          "490:         compiler->error_line = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b77c8f2fd42d9c7f0f0421e3743d4d033a3060ee",
      "candidate_info": {
        "commit_hash": "b77c8f2fd42d9c7f0f0421e3743d4d033a3060ee",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/b77c8f2fd42d9c7f0f0421e3743d4d033a3060ee",
        "files": [
          "libyara/exec.c",
          "libyara/grammar.c",
          "libyara/grammar.h",
          "libyara/grammar.y",
          "tests/test-rules.c"
        ],
        "message": "Fix undefined behavior caused by large operands in shift operations.\n\n Credit to OSS-Fuzz for finding this bug.",
        "before_after_code_files": [
          "libyara/exec.c||libyara/exec.c",
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.h||libyara/grammar.h",
          "libyara/grammar.y||libyara/grammar.y",
          "tests/test-rules.c||tests/test-rules.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/exec.c||libyara/exec.c": [
          "File: libyara/exec.c -> libyara/exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "375:         pop(r1);",
          "376:         ensure_defined(r2);",
          "377:         ensure_defined(r1);",
          "379:         push(r1);",
          "380:         break;",
          "",
          "[Removed Lines]",
          "378:         r1.i = r1.i >> r2.i;",
          "",
          "[Added Lines]",
          "378:         if (r2.i < 64)",
          "379:           r1.i = r1.i >> r2.i;",
          "380:         else",
          "381:           r1.i = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384:         pop(r1);",
          "385:         ensure_defined(r2);",
          "386:         ensure_defined(r1);",
          "388:         push(r1);",
          "389:         break;",
          "",
          "[Removed Lines]",
          "387:         r1.i = r1.i << r2.i;",
          "",
          "[Added Lines]",
          "390:         if (r2.i < 64)",
          "391:           r1.i = r1.i << r2.i;",
          "392:         else",
          "393:           r1.i = 0;",
          "",
          "---------------"
        ],
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "626:     1433,  1437,  1445,  1446,  1451,  1473,  1485,  1501,  1500,  1506,",
          "627:     1517,  1518,  1523,  1530,  1541,  1542,  1546,  1554,  1558,  1568,",
          "628:     1582,  1598,  1608,  1617,  1642,  1654,  1666,  1682,  1694,  1710,",
          "631: };",
          "632: #endif",
          "",
          "[Removed Lines]",
          "629:     1755,  1774,  1812,  1850,  1887,  1912,  1930,  1940,  1950,  1960,",
          "630:     1970,  1980,  1990",
          "",
          "[Added Lines]",
          "629:     1755,  1774,  1809,  1844,  1878,  1903,  1921,  1931,  1941,  1951,",
          "630:     1961,  1975,  1989",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3515:               ))",
          "3516:           {",
          "3517:             yr_compiler_set_error_extra_info_fmt(",
          "3523:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3524:           }",
          "3525:           else",
          "3526:           {",
          "3528:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3529:           }",
          "3530:         }",
          "",
          "[Removed Lines]",
          "3518:                 compiler,",
          "3519:                 \"%\" PRId64 \" + %\" PRId64,",
          "3520:                 (yyvsp[-2].expression).value.integer,",
          "3521:                 (yyvsp[0].expression).value.integer);",
          "3527:             (yyval.expression).value.integer = OPERATION(+, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3518:                 compiler, \"%\" PRId64 \" + %\" PRId64, i1, i2);",
          "3524:             (yyval.expression).value.integer = OPERATION(+, i1, i2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3557:               ))",
          "3558:           {",
          "3559:             yr_compiler_set_error_extra_info_fmt(",
          "3565:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3566:           }",
          "3567:           else",
          "3568:           {",
          "3570:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3571:           }",
          "3572:         }",
          "",
          "[Removed Lines]",
          "3560:                 compiler,",
          "3561:                 \"%\" PRId64 \" - %\" PRId64,",
          "3562:                 (yyvsp[-2].expression).value.integer,",
          "3563:                 (yyvsp[0].expression).value.integer);",
          "3569:             (yyval.expression).value.integer = OPERATION(-, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3557:                 compiler, \"%\" PRId64 \" - %\" PRId64, i1, i2);",
          "3563:             (yyval.expression).value.integer = OPERATION(-, i1, i2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3598:               ))",
          "3599:           {",
          "3600:             yr_compiler_set_error_extra_info_fmt(",
          "3606:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3607:           }",
          "3608:           else",
          "3609:           {",
          "3611:             (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3612:           }",
          "3613:         }",
          "",
          "[Removed Lines]",
          "3601:                 compiler,",
          "3602:                 \"%\" PRId64 \" * %\" PRId64,",
          "3603:                 (yyvsp[-2].expression).value.integer,",
          "3604:                 (yyvsp[0].expression).value.integer);",
          "3610:             (yyval.expression).value.integer = OPERATION(*, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3595:                 compiler, \"%\" PRId64 \" * %\" PRId64, i1, i2);",
          "3601:             (yyval.expression).value.integer = OPERATION(*, i1, i2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3725:         (yyval.expression).value.integer = ((yyvsp[0].expression).value.integer == UNDEFINED) ?",
          "3726:             UNDEFINED : ~((yyvsp[0].expression).value.integer);",
          "3727:       }",
          "3729:     break;",
          "3731:   case 120:",
          "3733:     {",
          "3734:         check_type((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
          "3735:         check_type((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
          "3737:         yr_parser_emit(yyscanner, OP_SHL, NULL);",
          "3739:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3741:       }",
          "3743:     break;",
          "3745:   case 121:",
          "3747:     {",
          "3748:         check_type((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
          "3749:         check_type((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
          "3751:         yr_parser_emit(yyscanner, OP_SHR, NULL);",
          "3753:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3755:       }",
          "3757:     break;",
          "3759:   case 122:",
          "3761:     {",
          "3762:         (yyval.expression) = (yyvsp[0].expression);",
          "3763:       }",
          "3765:     break;",
          "3769:       default: break;",
          "3770:     }",
          "",
          "[Removed Lines]",
          "3740:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3754:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3730:         if (!IS_UNDEFINED((yyvsp[0].expression).value.integer) && (yyvsp[0].expression).value.integer >= 64)",
          "3731:           (yyval.expression).value.integer = 0;",
          "3732:         else",
          "3733:           (yyval.expression).value.integer = OPERATION(<<, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "3748:         if (!IS_UNDEFINED((yyvsp[0].expression).value.integer) && (yyvsp[0].expression).value.integer >= 64)",
          "3749:           (yyval.expression).value.integer = 0;",
          "3750:         else",
          "3751:           (yyval.expression).value.integer = OPERATION(<<, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "---------------"
        ],
        "libyara/grammar.h||libyara/grammar.h": [
          "File: libyara/grammar.h -> libyara/grammar.h"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1789:               ))",
          "1790:           {",
          "1791:             yr_compiler_set_error_extra_info_fmt(",
          "1797:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1798:           }",
          "1799:           else",
          "1800:           {",
          "1802:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1803:           }",
          "1804:         }",
          "",
          "[Removed Lines]",
          "1792:                 compiler,",
          "1793:                 \"%\" PRId64 \" + %\" PRId64,",
          "1794:                 $1.value.integer,",
          "1795:                 $3.value.integer);",
          "1801:             $$.value.integer = OPERATION(+, $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1792:                 compiler, \"%\" PRId64 \" + %\" PRId64, i1, i2);",
          "1798:             $$.value.integer = OPERATION(+, i1, i2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1827:               ))",
          "1828:           {",
          "1829:             yr_compiler_set_error_extra_info_fmt(",
          "1835:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1836:           }",
          "1837:           else",
          "1838:           {",
          "1840:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1841:           }",
          "1842:         }",
          "",
          "[Removed Lines]",
          "1830:                 compiler,",
          "1831:                 \"%\" PRId64 \" - %\" PRId64,",
          "1832:                 $1.value.integer,",
          "1833:                 $3.value.integer);",
          "1839:             $$.value.integer = OPERATION(-, $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1827:                 compiler, \"%\" PRId64 \" - %\" PRId64, i1, i2);",
          "1833:             $$.value.integer = OPERATION(-, i1, i2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1864:               ))",
          "1865:           {",
          "1866:             yr_compiler_set_error_extra_info_fmt(",
          "1872:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1873:           }",
          "1874:           else",
          "1875:           {",
          "1877:             $$.type = EXPRESSION_TYPE_INTEGER;",
          "1878:           }",
          "1879:         }",
          "",
          "[Removed Lines]",
          "1867:                 compiler,",
          "1868:                 \"%\" PRId64 \" * %\" PRId64,",
          "1869:                 $1.value.integer,",
          "1870:                 $3.value.integer);",
          "1876:             $$.value.integer = OPERATION(*, $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1861:                 compiler, \"%\" PRId64 \" * %\" PRId64, i1, i2);",
          "1867:             $$.value.integer = OPERATION(*, i1, i2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1975:         yr_parser_emit(yyscanner, OP_SHL, NULL);",
          "1977:         $$.type = EXPRESSION_TYPE_INTEGER;",
          "1979:       }",
          "1980:     | primary_expression _SHIFT_RIGHT_ primary_expression",
          "1981:       {",
          "",
          "[Removed Lines]",
          "1978:         $$.value.integer = OPERATION(<<, $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1968:         if (!IS_UNDEFINED($3.value.integer) && $3.value.integer >= 64)",
          "1969:           $$.value.integer = 0;",
          "1970:         else",
          "1971:           $$.value.integer = OPERATION(<<, $1.value.integer, $3.value.integer);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1985:         yr_parser_emit(yyscanner, OP_SHR, NULL);",
          "1987:         $$.type = EXPRESSION_TYPE_INTEGER;",
          "1989:       }",
          "1990:     | regexp",
          "1991:       {",
          "",
          "[Removed Lines]",
          "1988:         $$.value.integer = OPERATION(>>, $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1982:         if (!IS_UNDEFINED($3.value.integer) && $3.value.integer >= 64)",
          "1983:           $$.value.integer = 0;",
          "1984:         else",
          "1985:           $$.value.integer = OPERATION(<<, $1.value.integer, $3.value.integer);",
          "",
          "---------------"
        ],
        "tests/test-rules.c||tests/test-rules.c": [
          "File: tests/test-rules.c -> tests/test-rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:       \"rule test { condition: 1 << 3 == 8 }\",",
          "297:       NULL);",
          "299:   assert_true_rule(",
          "300:       \"rule test { condition: 1 | 3 ^ 3 == 1 | (3 ^ 3) }\",",
          "301:       NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299:   assert_true_rule(",
          "300:       \"rule test { condition: 1 << 64 == 0 }\",",
          "301:       NULL);",
          "303:   assert_true_rule(",
          "304:       \"rule test { condition: 1 >> 64 == 0 }\",",
          "305:       NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00ac71f9e2a6d264b5c93eab48492e6fa81d4869",
      "candidate_info": {
        "commit_hash": "00ac71f9e2a6d264b5c93eab48492e6fa81d4869",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/00ac71f9e2a6d264b5c93eab48492e6fa81d4869",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.h",
          "libyara/grammar.y"
        ],
        "message": "Define llabs as _abs64 for Microsoft's compiler.",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.h||libyara/grammar.h",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: #include <stdio.h>",
          "77: #include <string.h>",
          "78: #include <limits.h>",
          "79: #include <stddef.h>",
          "81: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79: #include <stdlib.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: #include <yara/lexer.h>",
          "91: #include <yara/parser.h>",
          "94: #define YYERROR_VERBOSE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94: #if defined(_MSC_VER)",
          "95: #define llabs _abs64",
          "96: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "612: static const yytype_uint16 yyrline[] =",
          "613: {",
          "627: };",
          "628: #endif",
          "",
          "[Removed Lines]",
          "614:        0,   225,   225,   227,   228,   229,   230,   231,   236,   249,",
          "615:      258,   248,   281,   284,   312,   315,   342,   347,   348,   353,",
          "616:      354,   360,   363,   381,   394,   431,   432,   437,   453,   466,",
          "617:      479,   492,   509,   510,   516,   515,   531,   530,   546,   560,",
          "618:      561,   566,   567,   568,   569,   574,   659,   705,   763,   808,",
          "619:      809,   813,   840,   878,   920,   942,   951,   960,   975,   987,",
          "620:     1001,  1014,  1025,  1036,  1066,  1035,  1180,  1179,  1258,  1264,",
          "621:     1271,  1270,  1324,  1323,  1375,  1384,  1393,  1402,  1411,  1420,",
          "622:     1429,  1433,  1441,  1442,  1447,  1469,  1481,  1497,  1496,  1502,",
          "623:     1513,  1514,  1519,  1526,  1537,  1538,  1542,  1550,  1554,  1564,",
          "624:     1578,  1594,  1604,  1613,  1638,  1650,  1662,  1678,  1690,  1706,",
          "625:     1751,  1770,  1808,  1846,  1883,  1908,  1926,  1936,  1946,  1956,",
          "626:     1966,  1976,  1986",
          "",
          "[Added Lines]",
          "618:        0,   229,   229,   231,   232,   233,   234,   235,   240,   253,",
          "619:      262,   252,   285,   288,   316,   319,   346,   351,   352,   357,",
          "620:      358,   364,   367,   385,   398,   435,   436,   441,   457,   470,",
          "621:      483,   496,   513,   514,   520,   519,   535,   534,   550,   564,",
          "622:      565,   570,   571,   572,   573,   578,   663,   709,   767,   812,",
          "623:      813,   817,   844,   882,   924,   946,   955,   964,   979,   991,",
          "624:     1005,  1018,  1029,  1040,  1070,  1039,  1184,  1183,  1262,  1268,",
          "625:     1275,  1274,  1328,  1327,  1379,  1388,  1397,  1406,  1415,  1424,",
          "626:     1433,  1437,  1445,  1446,  1451,  1473,  1485,  1501,  1500,  1506,",
          "627:     1517,  1518,  1523,  1530,  1541,  1542,  1546,  1554,  1558,  1568,",
          "628:     1582,  1598,  1608,  1617,  1642,  1654,  1666,  1682,  1694,  1710,",
          "629:     1755,  1774,  1812,  1850,  1887,  1912,  1930,  1940,  1950,  1960,",
          "630:     1970,  1980,  1990",
          "",
          "---------------"
        ],
        "libyara/grammar.h||libyara/grammar.h": [
          "File: libyara/grammar.h -> libyara/grammar.h"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include <stdio.h>",
          "35: #include <string.h>",
          "36: #include <limits.h>",
          "37: #include <stddef.h>",
          "39: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #include <stdlib.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #include <yara/lexer.h>",
          "49: #include <yara/parser.h>",
          "52: #define YYERROR_VERBOSE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: #if defined(_MSC_VER)",
          "53: #define llabs _abs64",
          "54: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f02eca670f29c00a1d2c305e96febae6ce5d37b",
      "candidate_info": {
        "commit_hash": "7f02eca670f29c00a1d2c305e96febae6ce5d37b",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/7f02eca670f29c00a1d2c305e96febae6ce5d37b",
        "files": [
          "libyara/grammar.y"
        ],
        "message": "Make sure that loop depth is greater than 0 before decrementing it.",
        "before_after_code_files": [
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1017:       }",
          "1018:     | _FOR_ for_expression error",
          "1019:       {",
          "1022:       }",
          "1023:     | _FOR_ for_expression _IDENTIFIER_ _IN_",
          "1024:       {",
          "",
          "[Removed Lines]",
          "1020:         compiler->loop_depth--;",
          "1021:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "",
          "[Added Lines]",
          "1020:         if (compiler->loop_depth > 0)",
          "1021:         {",
          "1022:           compiler->loop_depth--;",
          "1023:           compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "1024:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}