{
  "cve_id": "CVE-2017-7703",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.5 and 2.0.0 to 2.0.11, the IMAP dissector could crash, triggered by packet injection or a malformed capture file. This was addressed in epan/dissectors/packet-imap.c by calculating a line's end correctly.",
  "repo": "wireshark/wireshark",
  "patch_hash": "eb046064ff0f064896ad60508876b8a764fbbca9",
  "patch_info": {
    "commit_hash": "eb046064ff0f064896ad60508876b8a764fbbca9",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/eb046064ff0f064896ad60508876b8a764fbbca9",
    "files": [
      "epan/dissectors/packet-imap.c"
    ],
    "message": "imap: Give correct lineend to get_token_len()\n\nThe return value from get_token_len() is the token length, but the\nreturned next_token can have a offset more than token length because\nit also skip trailing blanks.  Ensure we always give correct lineend.\n\nBug: 13466\nChange-Id: I88a11b9bce02999fcf87c0d7542e56fa90aae5a0\nReviewed-on: https://code.wireshark.org/review/20451\nPetri-Dish: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Stig Bj\u00f8rlykke <stig@bjorlykke.org>",
    "before_after_code_files": [
      "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c": [
      "File: epan/dissectors/packet-imap.c -> epan/dissectors/packet-imap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:   gint            uid_offset = 0;",
      "95:   gint            folder_offset = 0;",
      "96:   const guchar    *line;",
      "97:   const guchar    *uid_line;",
      "98:   const guchar    *folder_line;",
      "99:   gint            next_offset;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97:   const guchar    *lineend;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "192:       linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
      "193:       line = tvb_get_ptr(tvb, offset, linelen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "195:       lineend = (line + linelen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "216:         if (tokenlen != 0) {",
      "217:           proto_tree_add_item(reqresp_tree, (is_request) ? hf_imap_request_tag : hf_imap_response_tag, tvb, offset, tokenlen, ENC_ASCII|ENC_NA);",
      "",
      "[Removed Lines]",
      "215:         tokenlen = get_token_len(line, line + linelen, &next_token);",
      "",
      "[Added Lines]",
      "217:         tokenlen = get_token_len(line, lineend, &next_token);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "229:         if (tokenlen != 0) {",
      "230:           for (iter = 0; iter < tokenlen && iter < MAX_BUFFER-1; iter++) {",
      "231:             tokenbuf[iter] = g_ascii_tolower(line[iter]);",
      "",
      "[Removed Lines]",
      "228:         tokenlen = get_token_len(line, line + linelen, &next_token);",
      "",
      "[Added Lines]",
      "230:         tokenlen = get_token_len(line, lineend, &next_token);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "239:             uid_offset = offset;",
      "240:             uid_offset += (gint) (next_token - line);",
      "241:             uid_line = next_token;",
      "243:             if (tokenlen != 0) {",
      "244:               proto_tree_add_item(reqresp_tree, hf_imap_request_command, tvb, uid_offset, uid_tokenlen, ENC_ASCII|ENC_NA);",
      "",
      "[Removed Lines]",
      "242:             uid_tokenlen = get_token_len(uid_line, uid_line + (linelen - tokenlen), &uid_next_token);",
      "",
      "[Added Lines]",
      "244:             uid_tokenlen = get_token_len(uid_line, lineend, &uid_next_token);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "254:               folder_offset = uid_offset;",
      "255:               folder_offset += (gint) (uid_next_token - uid_line);",
      "256:               folder_line = uid_next_token;",
      "258:             }",
      "259:           } else {",
      "",
      "[Removed Lines]",
      "257:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - uid_tokenlen), &folder_next_token);",
      "",
      "[Added Lines]",
      "259:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "274:               folder_offset = offset;",
      "275:               folder_offset += (gint) (next_token - line);",
      "276:               folder_line = next_token;",
      "278:             }",
      "279:           }",
      "",
      "[Removed Lines]",
      "277:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - 1), &folder_next_token);",
      "",
      "[Added Lines]",
      "279:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "305:             folder_offset += (gint) (folder_next_token - folder_line);",
      "306:             folder_line = folder_next_token;",
      "309:             if (folder_tokenlen != 0)",
      "310:               proto_tree_add_item(reqresp_tree, hf_imap_request_folder, tvb, folder_offset, folder_tokenlen, ENC_ASCII|ENC_NA);",
      "",
      "[Removed Lines]",
      "307:             folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen), &folder_next_token);",
      "",
      "[Added Lines]",
      "309:             folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "671e32820ab29d41d712cc8a472eab9b672684d9",
      "candidate_info": {
        "commit_hash": "671e32820ab29d41d712cc8a472eab9b672684d9",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/671e32820ab29d41d712cc8a472eab9b672684d9",
        "files": [
          "epan/dissectors/packet-imap.c"
        ],
        "message": "imap: Give correct lineend to get_token_len()\n\nThe return value from get_token_len() is the token length, but the\nreturned next_token can have a offset more than token length because\nit also skip trailing blanks.  Ensure we always give correct lineend.\n\nBug: 13466\nChange-Id: I88a11b9bce02999fcf87c0d7542e56fa90aae5a0\nReviewed-on: https://code.wireshark.org/review/20451\nPetri-Dish: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\n(cherry picked from commit eb046064ff0f064896ad60508876b8a764fbbca9)\nReviewed-on: https://code.wireshark.org/review/20459",
        "before_after_code_files": [
          "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c": [
          "File: epan/dissectors/packet-imap.c -> epan/dissectors/packet-imap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:   gint            uid_offset = 0;",
          "71:   gint            folder_offset = 0;",
          "72:   const guchar    *line;",
          "73:   const guchar    *uid_line;",
          "74:   const guchar    *folder_line;",
          "75:   gint            next_offset;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:   const guchar    *lineend;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:       linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "138:       line = tvb_get_ptr(tvb, offset, linelen);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:       lineend = (line + linelen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:         if (tokenlen != 0) {",
          "162:           proto_tree_add_item(reqresp_tree, (is_request) ? hf_imap_request_tag : hf_imap_response_tag, tvb, offset, tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "160:         tokenlen = get_token_len(line, line + linelen, &next_token);",
          "",
          "[Added Lines]",
          "162:         tokenlen = get_token_len(line, lineend, &next_token);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "174:         if (tokenlen != 0) {",
          "175:           for (iter = 0; iter < tokenlen && iter < MAX_BUFFER-1; iter++) {",
          "176:             tokenbuf[iter] = g_ascii_tolower(line[iter]);",
          "",
          "[Removed Lines]",
          "173:         tokenlen = get_token_len(line, line + linelen, &next_token);",
          "",
          "[Added Lines]",
          "175:         tokenlen = get_token_len(line, lineend, &next_token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "184:             uid_offset = offset;",
          "185:             uid_offset += (gint) (next_token - line);",
          "186:             uid_line = next_token;",
          "188:             if (tokenlen != 0) {",
          "189:               proto_tree_add_item(reqresp_tree, hf_imap_request_command, tvb, uid_offset, uid_tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "187:             uid_tokenlen = get_token_len(uid_line, uid_line + (linelen - tokenlen), &uid_next_token);",
          "",
          "[Added Lines]",
          "189:             uid_tokenlen = get_token_len(uid_line, lineend, &uid_next_token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "199:               folder_offset = uid_offset;",
          "200:               folder_offset += (gint) (uid_next_token - uid_line);",
          "201:               folder_line = uid_next_token;",
          "203:             }",
          "204:           } else {",
          "",
          "[Removed Lines]",
          "202:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - uid_tokenlen), &folder_next_token);",
          "",
          "[Added Lines]",
          "204:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "219:               folder_offset = offset;",
          "220:               folder_offset += (gint) (next_token - line);",
          "221:               folder_line = next_token;",
          "223:             }",
          "224:           }",
          "",
          "[Removed Lines]",
          "222:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - 1), &folder_next_token);",
          "",
          "[Added Lines]",
          "224:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "250:             folder_offset += (gint) (folder_next_token - folder_line);",
          "251:             folder_line = folder_next_token;",
          "254:             if (folder_tokenlen != 0)",
          "255:               proto_tree_add_item(reqresp_tree, hf_imap_request_folder, tvb, folder_offset, folder_tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "252:             folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen), &folder_next_token);",
          "",
          "[Added Lines]",
          "254:             folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "173be1a3b4e7d783dd5db27a41782dcf7ac4a271",
      "candidate_info": {
        "commit_hash": "173be1a3b4e7d783dd5db27a41782dcf7ac4a271",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/173be1a3b4e7d783dd5db27a41782dcf7ac4a271",
        "files": [
          "epan/dissectors/packet-imap.c"
        ],
        "message": "imap: Give correct lineend to get_token_len()\n\nThe return value from get_token_len() is the token length, but the\nreturned next_token can have a offset more than token length because\nit also skip trailing blanks.  Ensure we always give correct lineend.\n\nBug: 13466\nChange-Id: I88a11b9bce02999fcf87c0d7542e56fa90aae5a0\nReviewed-on: https://code.wireshark.org/review/20451\nPetri-Dish: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\n(cherry picked from commit eb046064ff0f064896ad60508876b8a764fbbca9)\nReviewed-on: https://code.wireshark.org/review/20457",
        "before_after_code_files": [
          "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-imap.c||epan/dissectors/packet-imap.c": [
          "File: epan/dissectors/packet-imap.c -> epan/dissectors/packet-imap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:   gint            uid_offset = 0;",
          "95:   gint            folder_offset = 0;",
          "96:   const guchar    *line;",
          "97:   const guchar    *uid_line;",
          "98:   const guchar    *folder_line;",
          "99:   gint            next_offset;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   const guchar    *lineend;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:       linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "193:       line = tvb_get_ptr(tvb, offset, linelen);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:       lineend = (line + linelen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "216:         if (tokenlen != 0) {",
          "217:           proto_tree_add_item(reqresp_tree, (is_request) ? hf_imap_request_tag : hf_imap_response_tag, tvb, offset, tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "215:         tokenlen = get_token_len(line, line + linelen, &next_token);",
          "",
          "[Added Lines]",
          "217:         tokenlen = get_token_len(line, lineend, &next_token);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "229:         if (tokenlen != 0) {",
          "230:           for (iter = 0; iter < tokenlen && iter < MAX_BUFFER-1; iter++) {",
          "231:             tokenbuf[iter] = g_ascii_tolower(line[iter]);",
          "",
          "[Removed Lines]",
          "228:         tokenlen = get_token_len(line, line + linelen, &next_token);",
          "",
          "[Added Lines]",
          "230:         tokenlen = get_token_len(line, lineend, &next_token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "239:             uid_offset = offset;",
          "240:             uid_offset += (gint) (next_token - line);",
          "241:             uid_line = next_token;",
          "243:             if (tokenlen != 0) {",
          "244:               proto_tree_add_item(reqresp_tree, hf_imap_request_command, tvb, uid_offset, uid_tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "242:             uid_tokenlen = get_token_len(uid_line, uid_line + (linelen - tokenlen), &uid_next_token);",
          "",
          "[Added Lines]",
          "244:             uid_tokenlen = get_token_len(uid_line, lineend, &uid_next_token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "254:               folder_offset = uid_offset;",
          "255:               folder_offset += (gint) (uid_next_token - uid_line);",
          "256:               folder_line = uid_next_token;",
          "258:             }",
          "259:           } else {",
          "",
          "[Removed Lines]",
          "257:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - uid_tokenlen), &folder_next_token);",
          "",
          "[Added Lines]",
          "259:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "274:               folder_offset = offset;",
          "275:               folder_offset += (gint) (next_token - line);",
          "276:               folder_line = next_token;",
          "278:             }",
          "279:           }",
          "",
          "[Removed Lines]",
          "277:               folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen - 1), &folder_next_token);",
          "",
          "[Added Lines]",
          "279:               folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "305:             folder_offset += (gint) (folder_next_token - folder_line);",
          "306:             folder_line = folder_next_token;",
          "309:             if (folder_tokenlen != 0)",
          "310:               proto_tree_add_item(reqresp_tree, hf_imap_request_folder, tvb, folder_offset, folder_tokenlen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "307:             folder_tokenlen = get_token_len(folder_line, folder_line + (linelen - tokenlen), &folder_next_token);",
          "",
          "[Added Lines]",
          "309:             folder_tokenlen = get_token_len(folder_line, lineend, &folder_next_token);",
          "",
          "---------------"
        ]
      }
    }
  ]
}