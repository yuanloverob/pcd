{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4f63f9f327857a7ebb1021b55d9ed3bf7cf8d817",
      "candidate_info": {
        "commit_hash": "4f63f9f327857a7ebb1021b55d9ed3bf7cf8d817",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4f63f9f327857a7ebb1021b55d9ed3bf7cf8d817",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: make REPLServer inherit from EventEmitter\n\nThis is because it should emit an \"exit\" event when \"SIGINT\" is received\nfrom the readline interface, or when \".exit\" is typed by the user.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: var util = require('util');",
          "44: var vm = require('vm');",
          "45: var path = require('path');",
          "46: var fs = require('fs');",
          "47: var rl = require('readline');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: function REPLServer(prompt, stream, eval, useGlobal, ignoreUndefined) {",
          "77:   var self = this;",
          "79:   self.useGlobal = useGlobal;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265:   self.displayPrompt();",
          "266: }",
          "267: exports.REPLServer = REPLServer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fce7c958ed42664923161c48bab36700631cefd2",
      "candidate_info": {
        "commit_hash": "fce7c958ed42664923161c48bab36700631cefd2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fce7c958ed42664923161c48bab36700631cefd2",
        "files": [
          "test/fixtures/deprecated.js"
        ],
        "message": "test: add deprecation fixture",
        "before_after_code_files": [
          "test/fixtures/deprecated.js||test/fixtures/deprecated.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/fixtures/deprecated.js||test/fixtures/deprecated.js": [
          "File: test/fixtures/deprecated.js -> test/fixtures/deprecated.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: require('util').p('This is deprecated');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1042a8d887aef494435ad1e9da3c33b602f246be",
      "candidate_info": {
        "commit_hash": "1042a8d887aef494435ad1e9da3c33b602f246be",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1042a8d887aef494435ad1e9da3c33b602f246be",
        "files": [
          "src/v8_typed_array.cc"
        ],
        "message": "Please the compiler",
        "before_after_code_files": [
          "src/v8_typed_array.cc||src/v8_typed_array.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/v8_typed_array.cc||src/v8_typed_array.cc": [
          "File: src/v8_typed_array.cc -> src/v8_typed_array.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:       case v8::kExternalDoubleArray: return \"Float64Array\";",
          "391:     }",
          "392:     abort();",
          "393:   }",
          "394: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "394:     return \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "486: template <>",
          "487: float valueToCType(v8::Handle<v8::Value> value) {",
          "489: }",
          "491: template <>",
          "",
          "[Removed Lines]",
          "488:   return value->NumberValue();",
          "",
          "[Added Lines]",
          "490:   return static_cast<float>(value->NumberValue());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85185bbbaa9e99bd77232f529687e9fa5d26af78",
      "candidate_info": {
        "commit_hash": "85185bbbaa9e99bd77232f529687e9fa5d26af78",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/85185bbbaa9e99bd77232f529687e9fa5d26af78",
        "files": [
          "lib/tls.js"
        ],
        "message": "tls: pass linting",
        "before_after_code_files": [
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     var re = host.replace(",
          "107:     return new RegExp('^' + re + '$', 'i');",
          "108:   }",
          "",
          "[Removed Lines]",
          "100:       /\\*([a-z0-9\\\\-_\\.])|[\\.,\\-\\\\\\^\\$+?*\\[\\]\\(\\):!\\|{}]/g,",
          "101:       function(all, sub) {",
          "102:         if (sub) return '[a-z0-9\\\\-_]*' + (sub === '-' ? '\\\\-' : sub);",
          "103:         return '\\\\' + all;",
          "104:       }",
          "105:     );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:   }",
          "165:   return valid;",
          "167: exports.checkServerIdentity = checkServerIdentity;",
          "",
          "[Removed Lines]",
          "166: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd9593ccc4dd1de21faa1996c2577c7a6ac3d8ae",
      "candidate_info": {
        "commit_hash": "dd9593ccc4dd1de21faa1996c2577c7a6ac3d8ae",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/dd9593ccc4dd1de21faa1996c2577c7a6ac3d8ae",
        "files": [
          "doc/api/http.markdown",
          "lib/http.js",
          "test/simple/test-http-response-close.js"
        ],
        "message": "http: fix ServerResponse does not emit 'close'\n\nRefs #2453.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-response-close.js||test/simple/test-http-response-close.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: exports.OutgoingMessage = OutgoingMessage;",
          "362: OutgoingMessage.prototype.destroy = function(error) {",
          "363:   this.socket.destroy(error);",
          "364: };",
          "",
          "[Removed Lines]",
          "346: OutgoingMessage.prototype.assignSocket = function(socket) {",
          "347:   assert(!socket._httpMessage);",
          "348:   socket._httpMessage = this;",
          "349:   this.socket = socket;",
          "350:   this.connection = socket;",
          "351:   this._flush();",
          "352: };",
          "355: OutgoingMessage.prototype.detachSocket = function(socket) {",
          "356:   assert(socket._httpMessage == this);",
          "357:   socket._httpMessage = null;",
          "358:   this.socket = this.connection = null;",
          "359: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "793: ServerResponse.prototype.statusCode = 200;",
          "795: ServerResponse.prototype.writeContinue = function() {",
          "796:   this._writeRaw('HTTP/1.1 100 Continue' + CRLF + CRLF, 'ascii');",
          "797:   this._sent100 = true;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-response-close.js||test/simple/test-http-response-close.js": [
          "File: test/simple/test-http-response-close.js -> test/simple/test-http-response-close.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: var assert = require('assert');",
          "24: var http = require('http');",
          "28: var server = http.createServer(function(req, res) {",
          "29:   res.writeHead(200);",
          "30:   res.write('a');",
          "32:   req.on('close', function() {",
          "35:   });",
          "36: });",
          "37: server.listen(common.PORT);",
          "",
          "[Removed Lines]",
          "26: var gotEnd = false;",
          "33:     console.error('aborted');",
          "34:     gotEnd = true;",
          "",
          "[Added Lines]",
          "26: var requestGotEnd = false;",
          "27: var responseGotEnd = false;",
          "34:     console.error('request aborted');",
          "35:     requestGotEnd = true;",
          "36:   });",
          "37:   res.on('close', function() {",
          "38:     console.error('response aborted');",
          "39:     responseGotEnd = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: });",
          "53: process.on('exit', function() {",
          "55: });",
          "",
          "[Removed Lines]",
          "54:   assert.ok(gotEnd);",
          "",
          "[Added Lines]",
          "59:   assert.ok(requestGotEnd);",
          "60:   assert.ok(responseGotEnd);",
          "",
          "---------------"
        ]
      }
    }
  ]
}