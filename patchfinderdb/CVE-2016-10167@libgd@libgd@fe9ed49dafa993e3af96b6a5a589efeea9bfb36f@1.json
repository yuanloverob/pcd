{
  "cve_id": "CVE-2016-10167",
  "cve_desc": "The gdImageCreateFromGd2Ctx function in gd_gd2.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (application crash) via a crafted image file.",
  "repo": "libgd/libgd",
  "patch_hash": "fe9ed49dafa993e3af96b6a5a589efeea9bfb36f",
  "patch_info": {
    "commit_hash": "fe9ed49dafa993e3af96b6a5a589efeea9bfb36f",
    "repo": "libgd/libgd",
    "commit_url": "https://github.com/libgd/libgd/commit/fe9ed49dafa993e3af96b6a5a589efeea9bfb36f",
    "files": [
      "src/gd_gd2.c",
      "tests/gd2/.gitignore",
      "tests/gd2/CMakeLists.txt",
      "tests/gd2/Makemodule.am",
      "tests/gd2/too_few_image_data.c",
      "tests/gd2/too_few_image_data.gd2"
    ],
    "message": "Fix DOS vulnerability in gdImageCreateFromGd2Ctx()\n\nWe must not pretend that there are image data if there are none. Instead\nwe fail reading the image file gracefully.",
    "before_after_code_files": [
      "src/gd_gd2.c||src/gd_gd2.c",
      "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
      "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c"
    ]
  },
  "patch_diff": {
    "src/gd_gd2.c||src/gd_gd2.c": [
      "File: src/gd_gd2.c -> src/gd_gd2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "504:       if (im->trueColor) {",
      "505:        if (!gdGetInt (&im->tpixels[y][x], in)) {",
      "510:        }",
      "511:       } else {",
      "512:        int ch;",
      "513:        if (!gdGetByte (&ch, in)) {",
      "518:        }",
      "519:        im->pixels[y][x] = ch;",
      "520:       }",
      "",
      "[Removed Lines]",
      "509:         im->tpixels[y][x] = 0;",
      "517:         ch = 0;",
      "",
      "[Added Lines]",
      "506:         gd_error(\"gd2: EOF while reading\\n\");",
      "507:         gdImageDestroy(im);",
      "508:         return NULL;",
      "513:         gd_error(\"gd2: EOF while reading\\n\");",
      "514:         gdImageDestroy(im);",
      "515:         return NULL;",
      "",
      "---------------"
    ],
    "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am": [
      "File: tests/gd2/Makemodule.am -> tests/gd2/Makemodule.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "3:  gd2/bug00309 \\",
      "4:  gd2/gd2_empty_file \\",
      "5:  gd2/php_bug_72339 \\",
      "8: if HAVE_LIBZ",
      "9: libgd_test_programs += \\",
      "",
      "[Removed Lines]",
      "6:  gd2/gd2_read_corrupt",
      "",
      "[Added Lines]",
      "6:  gd2/gd2_read_corrupt \\",
      "7:  gd2/too_few_image_data",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:  gd2/conv_test_exp.png \\",
      "24:  gd2/empty.gd2 \\",
      "25:  gd2/invalid_header.gd2 \\",
      "",
      "[Removed Lines]",
      "26:  gd2/invalid_neg_size.gd2",
      "",
      "[Added Lines]",
      "27:  gd2/invalid_neg_size.gd2 \\",
      "28:  gd2/php_bug_72339_exp.gd2 \\",
      "29:  gd2/too_few_image_data.gd2",
      "",
      "---------------"
    ],
    "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c": [
      "File: tests/gd2/too_few_image_data.c -> tests/gd2/too_few_image_data.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: too_few_image_data.gd2 claims to have a size of 12336x48 pixels, but doesn't",
      "3: provide as much image data. We test that gdImageCreateFromGd2Ctx() returns NULL",
      "4: in this case.",
      "7: #include \"gd.h\"",
      "8: #include \"gdtest.h\"",
      "10: int main()",
      "11: {",
      "12:     gdImagePtr im;",
      "13:     FILE *fp;",
      "15:     fp = gdTestFileOpen2(\"gd2\", \"too_few_image_data.gd2\");",
      "16:     gdTestAssert(fp != NULL);",
      "17:     im = gdImageCreateFromGd2(fp);",
      "18:     gdTestAssert(im == NULL);",
      "19:     fclose(fp);",
      "21:     return gdNumFailures();",
      "22: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c6bb583c4e92371b513317a7437e12220a240775",
      "candidate_info": {
        "commit_hash": "c6bb583c4e92371b513317a7437e12220a240775",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/c6bb583c4e92371b513317a7437e12220a240775",
        "files": [
          "src/gd_gd2.c",
          "tests/gd2/.gitignore",
          "tests/gd2/CMakeLists.txt",
          "tests/gd2/Makemodule.am",
          "tests/gd2/too_few_image_data.c",
          "tests/gd2/too_few_image_data.gd2"
        ],
        "message": "Fix DOS vulnerability in gdImageCreateFromGd2Ctx()\n\nWe must not pretend that there are image data if there are none. Instead\nwe fail reading the image file gracefully.\n\nConflicts:\n\ttests/gd2/CMakeLists.txt",
        "before_after_code_files": [
          "src/gd_gd2.c||src/gd_gd2.c",
          "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
          "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gd_gd2.c||src/gd_gd2.c",
            "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
            "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c"
          ],
          "candidate": [
            "src/gd_gd2.c||src/gd_gd2.c",
            "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
            "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gd_gd2.c||src/gd_gd2.c": [
          "File: src/gd_gd2.c -> src/gd_gd2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:       if (im->trueColor) {",
          "505:        if (!gdGetInt (&im->tpixels[y][x], in)) {",
          "510:        }",
          "511:       } else {",
          "512:        int ch;",
          "513:        if (!gdGetByte (&ch, in)) {",
          "518:        }",
          "519:        im->pixels[y][x] = ch;",
          "520:       }",
          "",
          "[Removed Lines]",
          "509:         im->tpixels[y][x] = 0;",
          "517:         ch = 0;",
          "",
          "[Added Lines]",
          "506:         gd_error(\"gd2: EOF while reading\\n\");",
          "507:         gdImageDestroy(im);",
          "508:         return NULL;",
          "513:         gd_error(\"gd2: EOF while reading\\n\");",
          "514:         gdImageDestroy(im);",
          "515:         return NULL;",
          "",
          "---------------"
        ],
        "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am": [
          "File: tests/gd2/Makemodule.am -> tests/gd2/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:  gd2/bug00309 \\",
          "4:  gd2/gd2_empty_file \\",
          "5:  gd2/php_bug_72339 \\",
          "8: if HAVE_LIBZ",
          "9: libgd_test_programs += \\",
          "",
          "[Removed Lines]",
          "6:  gd2/gd2_read_corrupt",
          "",
          "[Added Lines]",
          "6:  gd2/gd2_read_corrupt \\",
          "7:  gd2/too_few_image_data",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:  gd2/conv_test_exp.png \\",
          "24:  gd2/empty.gd2 \\",
          "25:  gd2/invalid_header.gd2 \\",
          "",
          "[Removed Lines]",
          "26:  gd2/invalid_neg_size.gd2",
          "",
          "[Added Lines]",
          "27:  gd2/invalid_neg_size.gd2 \\",
          "28:  gd2/php_bug_72339_exp.gd2 \\",
          "29:  gd2/too_few_image_data.gd2",
          "",
          "---------------"
        ],
        "tests/gd2/too_few_image_data.c||tests/gd2/too_few_image_data.c": [
          "File: tests/gd2/too_few_image_data.c -> tests/gd2/too_few_image_data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: too_few_image_data.gd2 claims to have a size of 12336x48 pixels, but doesn't",
          "3: provide as much image data. We test that gdImageCreateFromGd2Ctx() returns NULL",
          "4: in this case.",
          "7: #include \"gd.h\"",
          "8: #include \"gdtest.h\"",
          "10: int main()",
          "11: {",
          "12:     gdImagePtr im;",
          "13:     FILE *fp;",
          "15:     fp = gdTestFileOpen2(\"gd2\", \"too_few_image_data.gd2\");",
          "16:     gdTestAssert(fp != NULL);",
          "17:     im = gdImageCreateFromGd2(fp);",
          "18:     gdTestAssert(im == NULL);",
          "19:     fclose(fp);",
          "21:     return gdNumFailures();",
          "22: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbc1419206b6d5cdf16698dc16dd507bf2c7b881",
      "candidate_info": {
        "commit_hash": "fbc1419206b6d5cdf16698dc16dd507bf2c7b881",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/fbc1419206b6d5cdf16698dc16dd507bf2c7b881",
        "files": [
          "tests/gd2/.gitignore",
          "tests/gd2/CMakeLists.txt",
          "tests/gd2/Makemodule.am",
          "tests/gd2/bug00209.c",
          "tests/gd2/bug00209.gd2"
        ],
        "message": "Add regression test for issue #209\n\nBesides the original fix, which catered to the subsequent output, the\npotential DOS vulnerability due to a corrupted GD2 image file has been\nfixed with c6bb583, and here we make sure that this very image is also\nhandled properly.\n\n(cherry picked from commit 106834014b3060ad0054fd28ce538aa74d1eb86b)",
        "before_after_code_files": [
          "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
          "tests/gd2/bug00209.c||tests/gd2/bug00209.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am"
          ],
          "candidate": [
            "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am"
          ]
        }
      },
      "candidate_diff": {
        "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am": [
          "File: tests/gd2/Makemodule.am -> tests/gd2/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "2:  gd2/bug_289 \\",
          "3:  gd2/bug00309 \\",
          "4:  gd2/bug00354 \\",
          "5:  gd2/gd2_empty_file \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3:  gd2/bug00209 \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21: EXTRA_DIST += \\",
          "22:  gd2/CMakeLists.txt \\",
          "23:  gd2/bug00354a.gd2 \\",
          "24:  gd2/bug00354b.gd2 \\",
          "25:  gd2/conv_gd2_exp.gd2 \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:  gd2/bug00209.gd2 \\",
          "",
          "---------------"
        ],
        "tests/gd2/bug00209.c||tests/gd2/bug00209.c": [
          "File: tests/gd2/bug00209.c -> tests/gd2/bug00209.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"gd.h\"",
          "13: #include \"gdtest.h\"",
          "16: int main()",
          "17: {",
          "18:     gdImagePtr im;",
          "19:     FILE *fp;",
          "21:     fp = gdTestFileOpen2(\"gd2\", \"bug00209.gd2\");",
          "22:     gdTestAssert(fp != NULL);",
          "23:     im = gdImageCreateFromGd2(fp);",
          "24:     gdTestAssert(im == NULL);",
          "25:     fclose(fp);",
          "27:     return gdNumFailures();",
          "28: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}