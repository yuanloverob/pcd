{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c960269dd94cf6898f330c22ce0005ef370b3f6",
      "candidate_info": {
        "commit_hash": "1c960269dd94cf6898f330c22ce0005ef370b3f6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1c960269dd94cf6898f330c22ce0005ef370b3f6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata7.db"
        ],
        "message": "Fix a faulty assert() statement in balance_nonroot() - the assert() should use get2byteNotZero() instead of get2byte() for the corner case where the number cells is zero on a 65536-byte page.\n\nFossilOrigin-Name: bcbe7d96df3c9515f679ccf671ca9ba89d081b53501495d4218eb5126196838b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 919fec91dac4cb0d5f67404d4f47a65f353d752f5da0aa7b071bf3caf19e0522",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8166:     rc = defragmentPage(apNew[0], -1);",
          "8167:     testcase( rc!=SQLITE_OK );",
          "8168:     assert( apNew[0]->nFree ==",
          "8170:       || rc!=SQLITE_OK",
          "8171:     );",
          "8172:     copyNodeContent(apNew[0], pParent, &rc);",
          "",
          "[Removed Lines]",
          "8169:         (get2byte(&apNew[0]->aData[5])-apNew[0]->cellOffset-apNew[0]->nCell*2)",
          "",
          "[Added Lines]",
          "8169:         (get2byteNotZero(&apNew[0]->aData[5]) - apNew[0]->cellOffset",
          "8170:           - apNew[0]->nCell*2)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25e3073741c2bc23b846bd74dc50334295dd2c1a",
      "candidate_info": {
        "commit_hash": "25e3073741c2bc23b846bd74dc50334295dd2c1a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/25e3073741c2bc23b846bd74dc50334295dd2c1a",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5update.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid use-after-free and double-free errors that could occur if an fts5 table is modified in certain ways while there are active cursors.\n\nFossilOrigin-Name: 3291b2a6fe6f38ae91b933e5cd2bf7d97432374b4fb1fccd92b4bd759b02ee06",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2758:     for(i=0; i<pIter->nSeg; i++){",
          "2759:       fts5SegIterClear(&pIter->aSeg[i]);",
          "2760:     }",
          "2762:     fts5BufferFree(&pIter->poslist);",
          "2763:     sqlite3_free(pIter);",
          "2764:   }",
          "",
          "[Removed Lines]",
          "2761:     fts5StructureRelease(pIter->pStruct);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3404:   if( pNew==0 ) return;",
          "3405:   pNew->bRev = (0!=(flags & FTS5INDEX_QUERY_DESC));",
          "3406:   pNew->bSkipEmpty = (0!=(flags & FTS5INDEX_QUERY_SKIPEMPTY));",
          "3408:   pNew->pColset = pColset;",
          "3409:   fts5StructureRef(pStruct);",
          "3410:   if( (flags & FTS5INDEX_QUERY_NOOUTPUT)==0 ){",
          "",
          "[Removed Lines]",
          "3407:   pNew->pStruct = pStruct;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3512:   SELECT fts5_decode(id, block) FROM t1_data;",
          "3513: } {1 {database disk image is malformed}}",
          "3515: sqlite3_fts5_may_be_corrupt 0",
          "3516: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3515: #-------------------------------------------------------------------------",
          "3516: reset_db",
          "3517: do_test 31.0 {",
          "3518:   sqlite3 db {}",
          "3519:   db deserialize [decode_hexdb {",
          "3520: | size 8192 pagesize 4096 filename crash-7629f35f11d48e.db",
          "3521: | page 1 offset 0",
          "3522: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3523: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 02   .....@  ........",
          "3524: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 04   ................",
          "3525: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "3526: |     96: 00 00 00 00 0d 00 00 00 01 0f c7 00 0f c7 00 00   ................",
          "3527: |   4032: 00 00 00 00 00 00 00 37 01 06 17 15 15 01 53 74   .......7......St",
          "3528: |   4048: 61 62 6c 65 64 75 61 6c 64 75 61 6c 02 43 52 45   abledualdual.CRE",
          "3529: |   4064: 41 54 45 20 54 41 42 4c 45 20 64 75 61 6c 28 64   ATE TABLE dual(d",
          "3530: |   4080: 75 6d 6d 79 20 76 61 72 28 31 29 29 0d 00 00 00   ummy var(1))....",
          "3531: | page 2 offset 4096",
          "3532: |      0: 01 0f fb 00 0f fb 00 00 00 00 00 00 00 00 00 00   ................",
          "3533: |   4080: 00 00 00 00 00 00 00 00 00 00 00 03 01 02 0f 58   ...............X",
          "3534: | end crash-7629f35f11d48e.db",
          "3535: }]} {}",
          "3537: do_execsql_test 31.1 {",
          "3538:   CREATE VIRTUAL TABLE t1 USING fts5(a,b,c);",
          "3539:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<72)",
          "3540:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "3541:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)",
          "3542:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "3543: }",
          "3545: do_catchsql_test 31.2 {",
          "3546:   DELETE FROM t1 WHERE a MATCH X'6620e574f32a';",
          "3547: } {0 {}}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test": [
          "File: ext/fts5/test/fts5update.test -> ext/fts5/test/fts5update.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:   INSERT INTO x2(x2) VALUES('integrity-check');",
          "116: }",
          "118: }",
          "119: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118: #-------------------------------------------------------------------------",
          "119: #",
          "120: do_execsql_test 3.0 {",
          "121:   CREATE VIRTUAL TABLE x3 USING fts5(x, detail=%DETAIL%);",
          "122:   INSERT INTO x3 VALUES('one');",
          "123:   INSERT INTO x3 VALUES('two');",
          "124:   INSERT INTO x3 VALUES('one');",
          "125:   INSERT INTO x3 VALUES('two');",
          "126:   INSERT INTO x3 VALUES('one');",
          "127: }",
          "129: do_test 3.1 {",
          "130:   db eval { SELECT * FROM x3('one') } {",
          "131:     db eval {",
          "132:       INSERT INTO x3(x3) VALUES('optimize');",
          "133:     }",
          "134:   }",
          "135: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 83c467d7af63bd2e7800aff4fe9b09dbd75557460b75a9e07205dfae7e28312c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a50bffb85ec1246b95468341ccac3748577d9b31",
      "candidate_info": {
        "commit_hash": "a50bffb85ec1246b95468341ccac3748577d9b31",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a50bffb85ec1246b95468341ccac3748577d9b31",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Add the --async option to the \".backup\" command in the CLI.\n\nFossilOrigin-Name: 7b6a605b1883dfcbe237b0a58f6f0c233a109e88b521c3b3d97198526c8a0317",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: af172b53b46759f491f522356e14c5e2374d3f25ec70fbc1e100cadded8f9b22",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3377: #endif",
          "3378:   \".backup ?DB? FILE        Backup DB (default \\\"main\\\") to FILE\",",
          "3379:   \"       --append            Use the appendvfs\",",
          "3380:   \".bail on|off             Stop after hitting an error.  Default OFF\",",
          "3381:   \".binary on|off           Turn binary output on or off.  Default OFF\",",
          "3382:   \".cd DIRECTORY            Change the working directory to DIRECTORY\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3380:   \"       --async             Write to FILE without a journal and without fsync()\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5840:     sqlite3 *pDest;",
          "5841:     sqlite3_backup *pBackup;",
          "5842:     int j;",
          "5843:     const char *zVfs = 0;",
          "5844:     for(j=1; j<nArg; j++){",
          "5845:       const char *z = azArg[j];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5844:     int bAsync = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5848:         if( strcmp(z, \"-append\")==0 ){",
          "5849:           zVfs = \"apndvfs\";",
          "5850:         }else",
          "5851:         {",
          "5852:           utf8_printf(stderr, \"unknown option: %s\\n\", azArg[j]);",
          "5853:           return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5853:         if( strcmp(z, \"-async\")==0 ){",
          "5854:           bAsync = 1;",
          "5855:         }else",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5858:         zDb = zDestFile;",
          "5859:         zDestFile = azArg[j];",
          "5860:       }else{",
          "5862:         return 1;",
          "5863:       }",
          "5864:     }",
          "",
          "[Removed Lines]",
          "5861:         raw_printf(stderr, \"Usage: .backup ?DB? ?--append? FILENAME\\n\");",
          "",
          "[Added Lines]",
          "5866:         raw_printf(stderr, \"Usage: .backup ?DB? ?OPTIONS? FILENAME\\n\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5874:       close_db(pDest);",
          "5875:       return 1;",
          "5876:     }",
          "5877:     open_db(p, 0);",
          "5878:     pBackup = sqlite3_backup_init(pDest, \"main\", p->db, zDb);",
          "5879:     if( pBackup==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5882:     if( bAsync ){",
          "5883:       sqlite3_exec(pDest, \"PRAGMA synchronous=OFF; PRAGMA journal_mode=OFF;\",",
          "5884:                    0, 0, 0);",
          "5885:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6dc1e5b7016dcf90360c7688ccbc739293c0fcb",
      "candidate_info": {
        "commit_hash": "e6dc1e5b7016dcf90360c7688ccbc739293c0fcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e6dc1e5b7016dcf90360c7688ccbc739293c0fcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/sqliteInt.h",
          "test/altertab3.test"
        ],
        "message": "Fix a problem in ALTER TABLE that could occur if an index, view or trigger in the schema features an expression of the form ((SELECT ...) IN ()) where the SELECT statement uses a CTE.\n\nFossilOrigin-Name: 7e5ad8e0ab7ee91a5ccb19a9654d6a036233f74d2fdc45f7315feb3d9d035fd4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d43e0efb9642037dd751cfed13438e71cfceb50e14a0ec603880c6c3be2e93b1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:   RenameToken *pNew;",
          "698:   assert( pPtr || pParse->db->mallocFailed );",
          "699:   renameTokenCheckAll(pParse, pPtr);",
          "706:   }",
          "708:   return pPtr;",
          "",
          "[Removed Lines]",
          "700:   pNew = sqlite3DbMallocZero(pParse->db, sizeof(RenameToken));",
          "701:   if( pNew ){",
          "702:     pNew->p = pPtr;",
          "703:     pNew->t = *pToken;",
          "704:     pNew->pNext = pParse->pRename;",
          "705:     pParse->pRename = pNew;",
          "",
          "[Added Lines]",
          "700:   if( pParse->eParseMode!=PARSE_MODE_UNMAP ){",
          "701:     pNew = sqlite3DbMallocZero(pParse->db, sizeof(RenameToken));",
          "702:     if( pNew ){",
          "703:       pNew->p = pPtr;",
          "704:       pNew->t = *pToken;",
          "705:       pNew->pNext = pParse->pRename;",
          "706:       pParse->pRename = pNew;",
          "707:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "783: void sqlite3RenameExprUnmap(Parse *pParse, Expr *pExpr){",
          "784:   Walker sWalker;",
          "785:   memset(&sWalker, 0, sizeof(Walker));",
          "786:   sWalker.pParse = pParse;",
          "787:   sWalker.xExprCallback = renameUnmapExprCb;",
          "788:   sWalker.xSelectCallback = renameUnmapSelectCb;",
          "789:   sqlite3WalkExpr(&sWalker, pExpr);",
          "790: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "786:   u8 eMode = pParse->eParseMode;",
          "792:   pParse->eParseMode = PARSE_MODE_UNMAP;",
          "794:   pParse->eParseMode = eMode;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "992:   memset(p, 0, sizeof(Parse));",
          "994:   p->db = db;",
          "995:   p->nQueryLoop = 1;",
          "996:   rc = sqlite3RunParser(p, zSql, &zErr);",
          "",
          "[Removed Lines]",
          "993:   p->eParseMode = (bTable ? PARSE_MODE_RENAME_TABLE : PARSE_MODE_RENAME_COLUMN);",
          "",
          "[Added Lines]",
          "998:   p->eParseMode = PARSE_MODE_RENAME;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3236: #define PARSE_MODE_NORMAL        0",
          "3237: #define PARSE_MODE_DECLARE_VTAB  1",
          "",
          "[Removed Lines]",
          "3238: #define PARSE_MODE_RENAME_COLUMN 2",
          "3239: #define PARSE_MODE_RENAME_TABLE  3",
          "",
          "[Added Lines]",
          "3238: #define PARSE_MODE_RENAME        2",
          "3239: #define PARSE_MODE_UNMAP         3",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3258: #if defined(SQLITE_OMIT_ALTERTABLE)",
          "3259:   #define IN_RENAME_OBJECT 0",
          "3260: #else",
          "3262: #endif",
          "3264: #if defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_OMIT_ALTERTABLE)",
          "",
          "[Removed Lines]",
          "3261:   #define IN_RENAME_OBJECT (pParse->eParseMode>=PARSE_MODE_RENAME_COLUMN)",
          "",
          "[Added Lines]",
          "3261:   #define IN_RENAME_OBJECT (pParse->eParseMode>=PARSE_MODE_RENAME)",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:   ALTER TABLE s RENAME a TO a2;",
          "476: } {1 {error in index k: no tables specified}}",
          "478: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "478: #------------------------------------------------------------------------",
          "479: #",
          "480: reset_db",
          "481: do_execsql_test 21.1 {",
          "482:   CREATE TABLE s(col);",
          "483:   CREATE VIEW v AS SELECT (",
          "484:     WITH x(a) AS(SELECT * FROM s) VALUES(RIGHT)",
          "485:   ) IN() ;",
          "486:   CREATE TABLE a(a);",
          "487:   ALTER TABLE a RENAME a TO b;",
          "488: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
      "candidate_info": {
        "commit_hash": "f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
        "files": [
          "Makefile.in",
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/pager.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/test1.c",
          "src/vdbeapi.c",
          "test/capi3d.test",
          "test/fts3corrupt4.test",
          "test/fuzzdata7.db",
          "test/fuzzdata8.db",
          "tool/extract-sqlite3h.tcl",
          "tool/showdb.c"
        ],
        "message": "Merge latest trunk changes into this branch.\n\nFossilOrigin-Name: 53ea550ce759ae4683bcf0ae3af655bfe04f85db70f74edee6bcab56d83bb041",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/pager.c||src/pager.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/test1.c||src/test1.c",
          "src/vdbeapi.c||src/vdbeapi.c",
          "test/capi3d.test||test/capi3d.test",
          "test/fts3corrupt4.test||test/fts3corrupt4.test",
          "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl",
          "tool/showdb.c||tool/showdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1149: rtree.lo: $(TOP)/ext/rtree/rtree.c $(HDR) $(EXTHDR)",
          "1150:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/rtree/rtree.c",
          "1153:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/userauth/userauth.c",
          "1156:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/session/sqlite3session.c",
          "1158: json1.lo: $(TOP)/ext/misc/json1.c",
          "",
          "[Removed Lines]",
          "1152: sqlite3session.lo: $(TOP)/ext/userauth/userauth.c $(HDR) $(EXTHDR)",
          "1155: userauth.lo: $(TOP)/ext/session/sqlite3session.c $(HDR) $(EXTHDR)",
          "",
          "[Added Lines]",
          "1152: userauth.lo: $(TOP)/ext/userauth/userauth.c $(HDR) $(EXTHDR)",
          "1155: sqlite3session.lo: $(TOP)/ext/session/sqlite3session.c $(HDR) $(EXTHDR)",
          "",
          "---------------"
        ],
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1873:     zCsr += fts3GetVarint32(zCsr, &nSuffix);",
          "1875:     assert( nPrefix>=0 && nSuffix>=0 );",
          "1877:       rc = FTS_CORRUPT_VTAB;",
          "1878:       goto finish_scan;",
          "1879:     }",
          "",
          "[Removed Lines]",
          "1876:     if( nPrefix>zCsr-zNode || nSuffix>zEnd-zCsr ){",
          "",
          "[Added Lines]",
          "1876:     if( nPrefix>zCsr-zNode || nSuffix>zEnd-zCsr || nSuffix==0 ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2872702dacadad11f4fd7c437b77ef82763e840c9c92eefe87eac2491c38f963",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5552:             sqlite3_free(pCellKey);",
          "5553:             goto moveto_finish;",
          "5554:           }",
          "5556:           sqlite3_free(pCellKey);",
          "5557:         }",
          "5558:         assert(",
          "",
          "[Removed Lines]",
          "5555:           c = xRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "[Added Lines]",
          "5555:           c = sqlite3VdbeRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7152:     int iCell = (iOld + pPg->aiOvfl[i]) - iNew;",
          "7153:     if( iCell>=0 && iCell<nNew ){",
          "7154:       pCellptr = &pPg->aCellIdx[iCell * 2];",
          "7157:       nCell++;",
          "7158:       if( pageInsertArray(",
          "7159:             pPg, pBegin, &pData, pCellptr,",
          "",
          "[Removed Lines]",
          "7155:       assert( nCell>=iCell );",
          "7156:       memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "",
          "[Added Lines]",
          "7155:       if( nCell>iCell ){",
          "7156:         memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "7157:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9268:   assert( sqlite3BtreeHoldsMutex(p) );",
          "9269:   assert( p->inTrans==TRANS_WRITE );",
          "9270:   assert( iTable>=2 );",
          "9272:   rc = btreeGetPage(pBt, (Pgno)iTable, &pPage, 0);",
          "9273:   if( rc ) return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9272:   if( iTable>btreePagecount(pBt) ){",
          "9273:     return SQLITE_CORRUPT_BKPT;",
          "9274:   }",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7178:   pPg->flags &= ~PGHDR_NEED_SYNC;",
          "7179:   pPgOld = sqlite3PagerLookup(pPager, pgno);",
          "7181:   if( pPgOld ){",
          "7182:     pPg->flags |= (pPgOld->flags&PGHDR_NEED_SYNC);",
          "7183:     if( pPager->tempFile ){",
          "",
          "[Removed Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 );",
          "",
          "[Added Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 || CORRUPT_DB );",
          "7182:     if( pPgOld->nRef>1 ){",
          "7183:       sqlite3PagerUnrefNotNull(pPgOld);",
          "7184:       return SQLITE_CORRUPT_BKPT;",
          "7185:     }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3058:       }",
          "3062:         sqlite3_stmt *pExplain;",
          "3063:         char *zEQP;",
          "3064:         int triggerEQP = 0;",
          "",
          "[Removed Lines]",
          "3061:       if( pArg && pArg->autoEQP && sqlite3_strlike(\"EXPLAIN%\",zStmtSql,0)!=0 ){",
          "",
          "[Added Lines]",
          "3061:       if( pArg && pArg->autoEQP && sqlite3_stmt_isexplain(pStmt)==0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3107:       if( pArg ){",
          "3108:         pArg->cMode = pArg->mode;",
          "3109:         if( pArg->autoExplain ){",
          "3113:             pArg->cMode = MODE_Explain;",
          "3114:           }",
          "3117:             pArg->cMode = MODE_EQP;",
          "3118:           }",
          "3119:         }",
          "",
          "[Removed Lines]",
          "3110:           if( sqlite3_column_count(pStmt)==8",
          "3111:            && sqlite3_strlike(\"EXPLAIN%\", zStmtSql,0)==0",
          "3112:           ){",
          "3115:           if( sqlite3_column_count(pStmt)==4",
          "3116:            && sqlite3_strlike(\"EXPLAIN QUERY PLAN%\", zStmtSql,0)==0 ){",
          "",
          "[Added Lines]",
          "3110:           if( sqlite3_stmt_isexplain(pStmt)==1 ){",
          "3113:           if( sqlite3_stmt_isexplain(pStmt)==2 ){",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3895: int sqlite3_stmt_readonly(sqlite3_stmt *pStmt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3907: int sqlite3_stmt_isexplain(sqlite3_stmt *pStmt);",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2674:   return TCL_OK;",
          "2675: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2683: static int SQLITE_TCLAPI test_stmt_isexplain(",
          "2684:   void * clientData,",
          "2685:   Tcl_Interp *interp,",
          "2686:   int objc,",
          "2687:   Tcl_Obj *CONST objv[]",
          "2688: ){",
          "2689:   sqlite3_stmt *pStmt;",
          "2690:   int rc;",
          "2692:   if( objc!=2 ){",
          "2693:     Tcl_AppendResult(interp, \"wrong # args: should be \\\"\",",
          "2694:         Tcl_GetStringFromObj(objv[0], 0), \" STMT\", 0);",
          "2695:     return TCL_ERROR;",
          "2696:   }",
          "2698:   if( getStmtPointer(interp, Tcl_GetString(objv[1]), &pStmt) ) return TCL_ERROR;",
          "2699:   rc = sqlite3_stmt_isexplain(pStmt);",
          "2700:   Tcl_SetObjResult(interp, Tcl_NewIntObj(rc));",
          "2701:   return TCL_OK;",
          "2702: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7840: #endif",
          "7841:      { \"sqlite3_next_stmt\",             test_next_stmt     ,0 },",
          "7842:      { \"sqlite3_stmt_readonly\",         test_stmt_readonly ,0 },",
          "7843:      { \"sqlite3_stmt_busy\",             test_stmt_busy     ,0 },",
          "7844:      { \"uses_stmt_journal\",             uses_stmt_journal ,0 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7870:      { \"sqlite3_stmt_isexplain\",        test_stmt_isexplain,0 },",
          "",
          "---------------"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1608:   return pStmt ? ((Vdbe*)pStmt)->readOnly : 1;",
          "1609: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1615: int sqlite3_stmt_isexplain(sqlite3_stmt *pStmt){",
          "1616:   return pStmt ? ((Vdbe*)pStmt)->explain : 0;",
          "1617: }",
          "",
          "---------------"
        ],
        "test/capi3d.test||test/capi3d.test": [
          "File: test/capi3d.test -> test/capi3d.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: test_is_readonly capi3d-2.8 {PRAGMA application_id=1234} 0",
          "116: test_is_readonly capi3d-2.9 {VACUUM} 0",
          "117: test_is_readonly capi3d-2.10 {PRAGMA integrity_check} 1",
          "119:   sqlite3_stmt_readonly 0",
          "120: } 1",
          "122: # Tests for sqlite3_stmt_busy",
          "123: #",
          "124: do_test capi3d-3.1 {",
          "",
          "[Removed Lines]",
          "118: do_test capi3-2.99 {",
          "",
          "[Added Lines]",
          "118: do_test capi3-2.49 {",
          "123: # Tests for the is-explain interface.",
          "124: #",
          "125: proc test_is_explain {testname sql truth} {",
          "126:   do_test $testname [format {",
          "127:     set DB [sqlite3_connection_pointer db]",
          "128:     set STMT [sqlite3_prepare $DB {%s} -1 TAIL]",
          "129:     set rc [sqlite3_stmt_isexplain $STMT]",
          "130:     sqlite3_finalize $STMT",
          "131:     set rc",
          "132:   } $sql] $truth",
          "133: }",
          "135: test_is_explain capi3d-2.51 {SELECT * FROM sqlite_master} 0",
          "136: test_is_explain capi3d-2.52 { explain SELECT * FROM sqlite_master} 1",
          "137: test_is_explain capi3d-2.53 {  Explain Query Plan select * FROM sqlite_master} 2",
          "138: do_test capi3-2.99 {",
          "139:   sqlite3_stmt_isexplain 0",
          "140: } 0",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3697:     FROM t1 WHERE a MATCH 'rtree OR json1rtree OR json1';",
          "3698: } {0 {0 0 0 0 0 0 0}}",
          "3700: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3700: #-------------------------------------------------------------------------",
          "3701: reset_db",
          "3702: do_test 23.0 {",
          "3703:   sqlite3 db {}",
          "3704:   db deserialize [decode_hexdb {",
          "3705: .open --hexdb",
          "3706: | size 28672 pagesize 4096 filename crash-670b15f2955a36.db",
          "3707: | page 1 offset 0",
          "3708: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3709: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "3710: |     32: 00 00 00 02 10 00 00 01 00 00 00 07 00 00 00 00   ................",
          "3711: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "3712: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "3713: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "3714: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "3715: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "3716: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "3717: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "3718: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "3719: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "3720: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "3721: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "3722: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "3723: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "3724: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "3725: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "3726: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "3727: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "3728: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "3729: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "3730: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "3731: |   3776: 81 13 74 61 62 6c 75 74 31 5f 73 65 67 6d 65 6e   ..tablut1_segmen",
          "3732: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "3733: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "3734: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "3735: |   3840: 20 49 4e 54 45 47 45 42 20 50 52 49 4d 41 52 59    INTEGEB PRIMARY",
          "3736: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "3737: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "3738: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "3739: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "3740: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "3741: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "3742: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "3743: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "3744: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "3745: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "3746: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "3747: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "3748: | page 3 offset 8192",
          "3749: |      0: 0d 00 00 00 25 0b 48 01 0f d8 00 2f 0f 86 0f 74   ....%.H..../...t",
          "3750: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "3751: |     32: 0e 8d 0e 74 0e 5a fe 40 0e 24 0e 08 0d ef 0d d5   ...t.Z.@.$......",
          "3752: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 81 35 0d 1b 0c fb   .......h.O.5....",
          "3753: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 00 00 00 00   .......x.W.>....",
          "3754: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 10   .........?%.....",
          "3755: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "3756: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 45 42   4.0 20160609 DEB",
          "3757: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "3758: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "3759: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "3760: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "3761: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "3762: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "3763: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "3764: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "3765: |   3056: 4f 41 44 20 45 58 54 45 4e 53 49 4f 4e 20 54 48   OAD EXTENSION TH",
          "3766: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 35 0f   READSAFE=0.$..5.",
          "3767: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "3768: |   3104: 4e 41 52 59 18 23 55 00 25 0f 19 54 48 52 45 41   NARY.#U.%..THREA",
          "3769: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "3770: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "3771: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "3772: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "3773: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "3774: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "3775: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "3776: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "3777: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "3778: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "3779: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "3780: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "3781: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "3782: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "3783: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "3784: |   3360: 0f 19 45 4e 41 42 4c 44 20 52 54 52 45 45 58 42   ..ENABLD RTREEXB",
          "3785: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "3786: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "3787: |   3408: 19 05 00 24 0f 17 45 4e 40 42 4c 45 20 52 54 52   ...$..EN@BLE RTR",
          "3788: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "3789: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "3790: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4d 41 42 4c   NARY....)..EMABL",
          "3791: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 4c 45   E MEMSYS5XNOCALE",
          "3792: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "3793: |   3504: 4e 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   NSYS5XRTRIM....%",
          "3794: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "3795: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "3796: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "3797: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "3798: |   3584: 4e 31 58 52 54 5f b9 4d 1a 12 05 00 29 0f 19 45   N1XRT_.M....)..E",
          "3799: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 31 4c 59 58 42 49   NABLE GEOP1LYXBI",
          "3800: |   3616: 4e 41 52 58 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARX....)..ENABL",
          "3801: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "3802: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 57 45   ....)..ENABLE WE",
          "3803: |   3664: 4f 50 4f 4c 59 48 52 54 52 49 4d 17 0f 05 00 23   OPOLYHRTRIM....#",
          "3804: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "3805: |   3696: 4e 41 53 59 17 0e 05 00 23 0f 19 45 4e 40 42 4b   NASY....#..EN@BK",
          "3806: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "3807: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "3808: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "3809: |   3760: 4c 45 20 46 54 94 34 58 42 49 4e 41 52 59 17 0b   LE FT.4XBINARY..",
          "3810: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 43 70 46 54 53 34   ..#..ENABLCpFTS4",
          "3811: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "3812: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "3813: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "3814: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "3815: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 32 53   ...1..ENABLE D2S",
          "3816: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "3817: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "3818: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "3819: |   3920: 05 0b 27 0f 19 44 45 42 55 47 58 42 49 4e 41 52   ..'..DEBUGXBINAR",
          "3820: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "3821: |   3952: 43 41 53 45 10 03 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "3822: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "3823: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "3824: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "3825: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 35 52 3d 67   ...C..COMPIL5R=g",
          "3826: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "3827: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 02 43   9XNOCASE&...C..C",
          "3828: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "3829: |   4080: 30 20 32 30 31 36 30 36 30 39 58 00 00 00 00 00   0 20160609X.....",
          "3830: | page 5 offset 16384",
          "3831: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "3832: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "3833: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "3834: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "3835: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 08 55 1a   .%....0000000.U.",
          "3836: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "3837: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 61 75   .dbstat.%....eau",
          "3838: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "3839: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "3840: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "3841: |   3120: 01 35 03 25 0f 00 00 0c 97 63 63 03 25 03 00 01   .5.%.....cc.%...",
          "3842: |   3136: 06 65 6f 70 6f 6c 7a 03 25 11 00 00 05 6a 73 6f   .eopolz.%....jso",
          "3843: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "3844: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "3845: |   3184: 03 25 3d f0 03 04 73 79 73 35 03 25 15 00 00 04   .%=...sys5.%....",
          "3846: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "3847: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "3848: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "3849: |   3248: 08 08 08 09 08 17 8d 12 30 20 38 33 37 e3 aa e0   ........0 837...",
          "3850: |   3264: 12 d1 06 00 01 06 00 01 06 00 1f 03 00 01 03 00   ................",
          "3851: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 49 09 01 07   .....2016060I...",
          "3852: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "3853: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "3854: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "3855: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "3856: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3857: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "3858: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "3859: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "3860: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "3861: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "3862: |   3456: 04 65 62 75 67 09 04 01 f0 01 02 00 01 02 00 00   .ebug...........",
          "3863: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "3864: |   3488: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "3865: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01   ................",
          "3866: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "3867: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "3868: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "3869: |   3568: 34 09 0a 03 f3 01 03 00 01 03 00 19 01 35 09 0d   4............5..",
          "3870: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "3871: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "3872: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "3873: |   3632: 09 13 03 00 01 03 00 00 f3 00 00 04 6c 6f 61 64   ............load",
          "3874: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "3875: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "3876: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "3877: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "3878: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "3879: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3880: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "3881: |   3760: 03 01 02 02 00 03 01 02 02 00 46 01 02 02 00 00   ..........F.....",
          "3882: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "3883: |   3792: 05 72 74 72 64 65 09 19 03 00 01 03 00 01 03 00   .rtrde..........",
          "3884: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "3885: |   3824: 01 02 02 00 03 01 02 01 ff 03 01 02 02 00 03 01   ................",
          "3886: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "3887: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3888: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "3889: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "3890: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "3891: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3892: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "3893: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "3894: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "3895: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "3896: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3897: |   4016: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "3898: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "3899: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "3900: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 02 02   ................",
          "3901: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3902: | page 6 offset 20480",
          "3903: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "3904: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 09 09   ................",
          "3905: | page 7 offset 24576",
          "3906: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "3907: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "3908: |   4032: 6d 65 71 97 65 3d 35 0d 04 02 23 6d 65 72 67 65   meq.e=5...#merge",
          "3909: |   4048: 3d 31 30 30 2c 38 11 03 02 2b 69 6e 74 65 67 72   =100,8...+integr",
          "3910: |   4064: 69 74 79 00 00 00 00 00 00 00 00 00 00 00 00 00   ity.............",
          "3911: | end crash-670b15f2955a36.db",
          "3912: }]} {}",
          "3914: do_catchsql_test 23.1 {",
          "3915:   SELECT 'FyzLy'FROM t1 WHERE t1 MATCH 'j';",
          "3916: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl": [
          "File: tool/extract-sqlite3h.tcl -> tool/extract-sqlite3h.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/tclsh",
          "2: #",
          "3: # Given an sqlite3.c source file identified by the command-line",
          "4: # argument, extract the \"sqlite3.h\" header file that is embedded inside",
          "5: # the sqlite3.c source file and write it to standard output.",
          "6: #",
          "7: if {[llength $argv]!=1} {",
          "8:   puts stderr \"Usage: $argv0 sqlite3.c >sqlite3.h\"",
          "9:   exit 1",
          "10: }",
          "11: set in [open [lindex $argv 0] rb]",
          "12: while {![eof $in]} {",
          "13:   set line [gets $in]",
          "14:   if {[string match {* Begin file sqlite3.h *} $line]} break",
          "15: }",
          "16: while {![eof $in]} {",
          "17:   set line [gets $in]",
          "18:   if {[string match {* End of sqlite3.h *} $line]} break",
          "19:   puts $line",
          "20: }",
          "21: close $in",
          "",
          "---------------"
        ],
        "tool/showdb.c||tool/showdb.c": [
          "File: tool/showdb.c -> tool/showdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "828:     while( ovfl && (cnt++)<g.mxPage ){",
          "829:       page_usage_msg(ovfl, \"overflow %d from cell %d of page %d\",",
          "830:                      cnt, cellno, pgno);",
          "832:       ovfl = decodeInt32(a);",
          "833:       sqlite3_free(a);",
          "834:     }",
          "",
          "[Removed Lines]",
          "831:       a = fileRead((ovfl-1)*g.pagesize, 4);",
          "",
          "[Added Lines]",
          "831:       a = fileRead((ovfl-1)*(sqlite3_int64)g.pagesize, 4);",
          "",
          "---------------"
        ]
      }
    }
  ]
}