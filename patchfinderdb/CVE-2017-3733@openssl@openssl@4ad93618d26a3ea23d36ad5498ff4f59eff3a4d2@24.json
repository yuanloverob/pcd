{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "408eb66aea74b5dfe52386f7a8756bd81b890a26",
      "candidate_info": {
        "commit_hash": "408eb66aea74b5dfe52386f7a8756bd81b890a26",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/408eb66aea74b5dfe52386f7a8756bd81b890a26",
        "files": [
          "util/TLSProxy/Proxy.pm"
        ],
        "message": "Check the exit code from the server process\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2205)\n(cherry picked from commit 57a19206b5aad7ca67f0d5ebae05af2799609819)",
        "before_after_code_files": [
          "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm": [
          "File: util/TLSProxy/Proxy.pm -> util/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:         print \"Waiting for server process to close: \"",
          "300:               .$self->serverpid.\"\\n\";",
          "301:         waitpid( $self->serverpid, 0);",
          "302:     }",
          "303:     return 1;",
          "304: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:         die \"exit code $? from server process\\n\" if $? != 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56e5d5498d557fe1ab0a360ddcda2931d976ec62",
      "candidate_info": {
        "commit_hash": "56e5d5498d557fe1ab0a360ddcda2931d976ec62",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/56e5d5498d557fe1ab0a360ddcda2931d976ec62",
        "files": [
          "ssl/ssl_lib.c"
        ],
        "message": "CT_POLICY_EVAL_CTX_set_time expects milliseconds, but given seconds\n\nThis resulted in the SCT timestamp check always failing, because the\ntimestamp appeared to be in the future.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3260)",
        "before_after_code_files": [
          "ssl/ssl_lib.c||ssl/ssl_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4183:     CT_POLICY_EVAL_CTX_set1_cert(ctx, cert);",
          "4184:     CT_POLICY_EVAL_CTX_set1_issuer(ctx, issuer);",
          "4185:     CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(ctx, s->ctx->ctlog_store);",
          "4188:     scts = SSL_get0_peer_scts(s);",
          "",
          "[Removed Lines]",
          "4186:     CT_POLICY_EVAL_CTX_set_time(ctx, SSL_SESSION_get_time(SSL_get0_session(s)));",
          "",
          "[Added Lines]",
          "4186:     CT_POLICY_EVAL_CTX_set_time(",
          "4187:             ctx, (uint64_t)SSL_SESSION_get_time(SSL_get0_session(s)) * 1000);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
      "candidate_info": {
        "commit_hash": "fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
        "files": [
          "crypto/aes/aes_ige.c",
          "crypto/modes/cbc128.c"
        ],
        "message": "Don't call memcpy if len is zero.\n\nPrevent undefined behavior in CRYPTO_cbc128_encrypt: calling this function\nwith the 'len' parameter being 0 would result in a memcpy where the source\nand destination parameters are the same, which is undefined behavior.\nDo same for AES_ige_encrypt.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2671)\n\n(cherry picked from commit b1498c98f3fb5b8a340acc9ce20b0fd5346294e5)",
        "before_after_code_files": [
          "crypto/aes/aes_ige.c||crypto/aes/aes_ige.c",
          "crypto/modes/cbc128.c||crypto/modes/cbc128.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/aes_ige.c||crypto/aes/aes_ige.c": [
          "File: crypto/aes/aes_ige.c -> crypto/aes/aes_ige.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     size_t n;",
          "42:     size_t len = length;",
          "44:     OPENSSL_assert(in && out && key && ivec);",
          "45:     OPENSSL_assert((AES_ENCRYPT == enc) || (AES_DECRYPT == enc));",
          "46:     OPENSSL_assert((length % AES_BLOCK_SIZE) == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     if (length == 0)",
          "45:         return;",
          "",
          "---------------"
        ],
        "crypto/modes/cbc128.c||crypto/modes/cbc128.c": [
          "File: crypto/modes/cbc128.c -> crypto/modes/cbc128.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     size_t n;",
          "23:     const unsigned char *iv = ivec;",
          "25: #if !defined(OPENSSL_SMALL_FOOTPRINT)",
          "26:     if (STRICT_ALIGNMENT &&",
          "27:         ((size_t)in | (size_t)out | (size_t)ivec) % sizeof(size_t) != 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     if (len == 0)",
          "26:         return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         unsigned char c[16];",
          "74:     } tmp;",
          "76: #if !defined(OPENSSL_SMALL_FOOTPRINT)",
          "77:     if (in != out) {",
          "78:         const unsigned char *iv = ivec;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     if (len == 0)",
          "80:         return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
      "candidate_info": {
        "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
        "files": [
          "crypto/evp/e_aes.c",
          "crypto/evp/e_chacha20_poly1305.c"
        ],
        "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
          "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
          "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
          "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
          "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
          "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
          "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
          "1397:         }",
          "",
          "[Removed Lines]",
          "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
          "",
          "[Added Lines]",
          "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
          "1392:                 return 0;",
          "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
          "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
          "1397:                     return 0;",
          "1399:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
          "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
          "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
          "1952:                 len -= cctx->M;",
          "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
          "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
          "1955:         }",
          "",
          "[Removed Lines]",
          "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
          "",
          "[Added Lines]",
          "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
          "1955:                 return 0;",
          "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
          "1959:                 if (len < cctx->M)",
          "1960:                     return 0;",
          "1962:             }",
          "",
          "---------------"
        ],
        "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
          "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
          "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
          "400:             if (!ctx->encrypt) {",
          "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
          "403:                 aad = temp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:                 if (len < POLY1305_BLOCK_SIZE)",
          "402:                     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
      "candidate_info": {
        "commit_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "files": [
          "Configure",
          "crypto/o_str.c",
          "crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c",
          "crypto/x509/x_all.c",
          "test/testutil.h"
        ],
        "message": "Add -Wundef to strict-warnings\n\nAvoid a -Wundef warning in o_str.c\nAvoid a -Wundef warning in testutil.h\nInclude internal/cryptlib.h before openssl/stack.h\nto avoid use of undefined symbol OPENSSL_API_COMPAT.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2709)",
        "before_after_code_files": [
          "crypto/o_str.c||crypto/o_str.c",
          "crypto/x509/x509_att.c||crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c||crypto/x509/x509name.c",
          "crypto/x509/x_all.c||crypto/x509/x_all.c",
          "test/testutil.h||test/testutil.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_str.c||crypto/o_str.c": [
          "File: crypto/o_str.c -> crypto/o_str.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     return !strerror_s(buf, buflen, errnum);",
          "228: #elif defined(_GNU_SOURCE)",
          "229:     return strerror_r(errnum, buf, buflen) != NULL;",
          "",
          "[Removed Lines]",
          "230: #elif (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600)",
          "",
          "[Added Lines]",
          "230: #elif (defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE >= 200112L) || \\",
          "231:       (defined(_XOPEN_SOURCE) && _XOPEN_SOURCE >= 600)",
          "",
          "---------------"
        ],
        "crypto/x509/x509_att.c||crypto/x509/x509_att.c": [
          "File: crypto/x509/x509_att.c -> crypto/x509/x509_att.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c": [
          "File: crypto/x509/x509_ext.c -> crypto/x509/x509_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c": [
          "File: crypto/x509/x509_v3.c -> crypto/x509/x509_v3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509name.c||crypto/x509/x509name.c": [
          "File: crypto/x509/x509name.c -> crypto/x509/x509name.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x_all.c||crypto/x509/x_all.c": [
          "File: crypto/x509/x_all.c -> crypto/x509/x_all.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/buffer.h>",
          "14: #include <openssl/asn1.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "test/testutil.h||test/testutil.h": [
          "File: test/testutil.h -> test/testutil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #  if defined(_MSC_VER)",
          "61: #   define TEST_CASE_NAME __FUNCTION__",
          "62: #  else",
          "",
          "[Removed Lines]",
          "59: # if __STDC_VERSION__ < 199901L",
          "",
          "[Added Lines]",
          "59: # if !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L",
          "",
          "---------------"
        ]
      }
    }
  ]
}