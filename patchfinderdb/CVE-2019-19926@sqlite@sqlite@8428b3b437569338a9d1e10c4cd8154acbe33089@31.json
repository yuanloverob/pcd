{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "66cc2ca83ac7804e2eea5ed0c3fa5f7ee407453c",
      "candidate_info": {
        "commit_hash": "66cc2ca83ac7804e2eea5ed0c3fa5f7ee407453c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/66cc2ca83ac7804e2eea5ed0c3fa5f7ee407453c",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test case in fuzzdata8.db.\n\nFossilOrigin-Name: e96641f0be7d4454215459b0a95cf1c46ba0133e46d0bae22269741c8f4e5b44",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 25b89630206fdbb41c756e98f99baa711d35a8c226697a92339d0fe7e8b3652a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e7e517b686a7ed5f70de5834aaf36708f6b15f2",
      "candidate_info": {
        "commit_hash": "8e7e517b686a7ed5f70de5834aaf36708f6b15f2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8e7e517b686a7ed5f70de5834aaf36708f6b15f2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/msvc.h"
        ],
        "message": "Correction to the #if in the previous check-in.\n\nFossilOrigin-Name: 30dc05ac12910d318a737f8d7a0e895e5c42ff4c53472aeebc89f052eac05deb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/msvc.h||src/msvc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4c02832e0c4351ced9d2391f09ee071c65a74b85a0509bf58f045afeb166f48c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/msvc.h||src/msvc.h": [
          "File: src/msvc.h -> src/msvc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #pragma warning(disable : 4706)",
          "37: #undef SQLITE_4_BYTE_ALIGNED_MALLOC",
          "38: #define SQLITE_4_BYTE_ALIGNED_MALLOC",
          "",
          "[Removed Lines]",
          "36: #if !defined(_WIN64)",
          "",
          "[Added Lines]",
          "36: #if defined(_MSC_VER) && !defined(_WIN64)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72d1eac673f66ddc68b6716fe21e6147d07afff7",
      "candidate_info": {
        "commit_hash": "72d1eac673f66ddc68b6716fe21e6147d07afff7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/72d1eac673f66ddc68b6716fe21e6147d07afff7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab3.test"
        ],
        "message": "Fix a problem with renaming a table when a view or trigger within the schema uses a FILTER with an aggregate function that is not currently registered with the database.\n\nFossilOrigin-Name: 2ac0e42f8ab7a9184c2a2efd13bd50ab51bc01f9f34e9e63591fd18db02dff54",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b6d52c9364767ff4ab7279ae981afb97799299dcfaf38a0110c40ca82c72a825",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "934:             pExpr->op2++;",
          "935:             pNC2 = pNC2->pNext;",
          "936:           }",
          "939:             assert( SQLITE_FUNC_MINMAX==NC_MinMaxAgg );",
          "940:             testcase( (pDef->funcFlags & SQLITE_FUNC_MINMAX)!=0 );",
          "941:             pNC2->ncFlags |= NC_HasAgg | (pDef->funcFlags & SQLITE_FUNC_MINMAX);",
          "",
          "[Removed Lines]",
          "937:           assert( pDef!=0 );",
          "938:           if( pNC2 ){",
          "",
          "[Added Lines]",
          "937:           assert( pDef!=0 || IN_RENAME_OBJECT );",
          "938:           if( pNC2 && pDef ){",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:     WITH t4 AS (SELECT * FROM t1) SELECT 33;",
          "359:   END;",
          "360: }",
          "362: do_execsql_test 16.2 {",
          "363:   ALTER TABLE t1 RENAME TO t1x;",
          "364: }",
          "366: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365: #-------------------------------------------------------------------------",
          "366: reset_db",
          "367: do_execsql_test 17.1 {",
          "368:   CREATE TABLE t1(a,b,c);",
          "369:   CREATE TRIGGER AFTER INSERT ON t1 WHEN new.a NOT NULL BEGIN",
          "370:     SELECT a () FILTER (WHERE a>0) FROM t1;",
          "371:   END;",
          "372: }",
          "374: do_execsql_test 17.2 {",
          "375:   ALTER TABLE t1 RENAME TO t1x;",
          "376:   ALTER TABLE t1x RENAME a TO aaa;",
          "377:   SELECT sql FROM sqlite_master WHERE type='trigger';",
          "378: } {",
          "379: {CREATE TRIGGER AFTER INSERT ON \"t1x\" WHEN new.aaa NOT NULL BEGIN",
          "380:     SELECT a () FILTER (WHERE aaa>0) FROM \"t1x\";",
          "381:   END}",
          "382: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a58dbde30bf17497aaf77711496bf01cf72b90e",
      "candidate_info": {
        "commit_hash": "2a58dbde30bf17497aaf77711496bf01cf72b90e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2a58dbde30bf17497aaf77711496bf01cf72b90e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c",
          "test/fuzzdata7.db"
        ],
        "message": "Improved detection of cell corruption in sqlite3VdbeRecordCompareWithSkip().\n\nFossilOrigin-Name: fa47f4c6589c431cf678560ac33dea6b695052012bea2096b2c92869ed51c688",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: aaa3a19f8cf5ba7003634e4610abc7832354af91d7c7f65469218678f66bcd46",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4251:   }else{",
          "4252:     idx1 = getVarint32(aKey1, szHdr1);",
          "4253:     d1 = szHdr1;",
          "4258:     i = 0;",
          "4259:   }",
          "4262:   assert( pPKey2->pKeyInfo->nAllField>=pPKey2->nField",
          "",
          "[Removed Lines]",
          "4254:     if( d1>(unsigned)nKey1 ){",
          "4255:       pPKey2->errCode = (u8)SQLITE_CORRUPT_BKPT;",
          "4257:     }",
          "",
          "[Added Lines]",
          "4256:   if( d1>(unsigned)nKey1 ){",
          "4257:     pPKey2->errCode = (u8)SQLITE_CORRUPT_BKPT;",
          "4259:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46b341530e03b54d9c4ae31b81abb719f4b5f0e2",
      "candidate_info": {
        "commit_hash": "46b341530e03b54d9c4ae31b81abb719f4b5f0e2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/46b341530e03b54d9c4ae31b81abb719f4b5f0e2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/attach.c"
        ],
        "message": "Fix a problem with the user-auth extension and deserializing in-memory databases.\n\nFossilOrigin-Name: 09fa0b3c4adf7f81a777975762029ad43dbdc76b02dc32d2307e1c42465213c9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/attach.c||src/attach.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 734192d876e0489cb34e454aaa4a9c6858145791a49959b31dee2917a8e41a7d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/attach.c||src/attach.c": [
          "File: src/attach.c -> src/attach.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     assert( zErrDyn==0 || rc!=SQLITE_OK );",
          "242:   }",
          "243: #ifdef SQLITE_USER_AUTHENTICATION",
          "245:     u8 newAuth = 0;",
          "246:     rc = sqlite3UserAuthCheckLogin(db, zName, &newAuth);",
          "247:     if( newAuth<db->auth.authLevel ){",
          "",
          "[Removed Lines]",
          "244:   if( rc==SQLITE_OK ){",
          "",
          "[Added Lines]",
          "244:   if( rc==SQLITE_OK && !REOPEN_AS_MEMDB(db) ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}