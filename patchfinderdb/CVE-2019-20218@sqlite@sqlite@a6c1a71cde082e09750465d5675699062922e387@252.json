{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fd6bf04bba8035836e8f92771d277a4e868c6299",
      "candidate_info": {
        "commit_hash": "fd6bf04bba8035836e8f92771d277a4e868c6299",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fd6bf04bba8035836e8f92771d277a4e868c6299",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Remove a reachable NEVER() in FTS3.\n\nFossilOrigin-Name: 8bd75bf636f72f32d66c6c38e1918f27daf2f13290f00a001f41d50838bbda47",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3851:     nPrefix = fts3PrefixCompress(pNode->key.a, pNode->key.n, zTerm, nTerm);",
          "3852:     nSuffix = nTerm - nPrefix;",
          "3854:     nSpace  = sqlite3Fts3VarintLen(nPrefix);",
          "3855:     nSpace += sqlite3Fts3VarintLen(nSuffix) + nSuffix;",
          "",
          "[Removed Lines]",
          "3853:     if( NEVER(nSuffix<=0) ) return FTS_CORRUPT_VTAB;",
          "",
          "[Added Lines]",
          "3853:     if(nSuffix<=0 ) return FTS_CORRUPT_VTAB;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 51525f9c3235967bc00a090e84c70a6400698c897aa4742e817121c725b8c99d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
      "candidate_info": {
        "commit_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/recover.test"
        ],
        "message": "Fix an incompatibility with auto-vacuum mode in new test script recover.test.\n\nFossilOrigin-Name: 36dd5b0804797a35d0dc596b6ca4f71813a155c5a470237ab6e3d1bcd9ccc6be",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/recover.test||test/recover.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 07e527d781838412b2a434e64baaa49cbf7410a51c7393f54adc7b8eaffd5229",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recover.test||test/recover.test": [
          "File: test/recover.test -> test/recover.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "91: #-------------------------------------------------------------------------",
          "92: reset_db",
          "93: do_execsql_test 2.1.0 {",
          "94:   CREATE TABLE t1(a, b, c, PRIMARY KEY(b, c)) WITHOUT ROWID;",
          "95:   INSERT INTO t1 VALUES(1, 2, 3);",
          "96:   INSERT INTO t1 VALUES(4, 5, 6);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:   PRAGMA auto_vacuum = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
      "candidate_info": {
        "commit_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "Remove some stale references to the addopcodes.tcl script from documentation.\n\nFossilOrigin-Name: c0381b0bc90aa3c2415c4b3ac338cfe6d308bb5d4247bc6f2b6e919f549c254c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d272819298083ebbde57962a2938925b1aaa1caf03e48bb3ea26ad91e0461d84",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y"
        ]
      }
    },
    {
      "candidate_hash": "c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
      "candidate_info": {
        "commit_hash": "c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a possible memory leak when trying to UPDATE a corrupt RTREE index.\n\nFossilOrigin-Name: 63eb803dbc27077007dbee8def659d1523724eb73f1def1cdb68027e5c20843a",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "717:       pNode->pNext = 0;",
          "718:       rc = sqlite3_blob_read(pRtree->pNodeBlob, pNode->zData,",
          "719:                              pRtree->iNodeSize, 0);",
          "721:     }",
          "722:   }",
          "",
          "[Removed Lines]",
          "720:       nodeReference(pParent);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:   if( rc==SQLITE_OK ){",
          "750:     if( pNode!=0 ){",
          "751:       nodeHashInsert(pRtree, pNode);",
          "752:     }else{",
          "753:       rc = SQLITE_CORRUPT_VTAB;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "750:       nodeReference(pParent);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 673a7dd698eca05bb2909fa01f962a0667361732a6d0e61cf7780ead4a07c967",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9576802dbae4501cbec42947ce01286376d2fc10",
      "candidate_info": {
        "commit_hash": "9576802dbae4501cbec42947ce01286376d2fc10",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9576802dbae4501cbec42947ce01286376d2fc10",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Remove an incorrect ALWAYS() macro.\n\nFossilOrigin-Name: f7a74f89dbd58b47bbcb58ea2af71fbe1eb5ec2dbe36d90685c39cb28ecf5250",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 53847f5c28bdecfbc7b08685d4dcd0565526f6191491b4827c3c966a4b8d4a85",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:         Expr *pNext  = p->pRight;",
          "192:         assert( p->x.pList==0 || p->pRight==0 );",
          "196:         if( p->x.pList!=0",
          "197:          && !db->mallocFailed",
          "198:          && ALWAYS(!ExprHasProperty(p, EP_xIsSelect))",
          "199:         ){",
          "200:           int i;",
          "202:             if( ExprHasProperty(p->x.pList->a[i].pExpr, EP_Collate) ){",
          "203:               pNext = p->x.pList->a[i].pExpr;",
          "204:               break;",
          "",
          "[Removed Lines]",
          "201:           for(i=0; ALWAYS(i<p->x.pList->nExpr); i++){",
          "",
          "[Added Lines]",
          "198:           for(i=0; i<p->x.pList->nExpr; i++){",
          "",
          "---------------"
        ]
      }
    }
  ]
}