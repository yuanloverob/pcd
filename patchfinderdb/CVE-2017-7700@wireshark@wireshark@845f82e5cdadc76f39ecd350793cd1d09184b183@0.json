{
  "cve_id": "CVE-2017-7700",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.5 and 2.0.0 to 2.0.11, the NetScaler file parser could go into an infinite loop, triggered by a malformed capture file. This was addressed in wiretap/netscaler.c by ensuring a nonzero record size.",
  "repo": "wireshark/wireshark",
  "patch_hash": "845f82e5cdadc76f39ecd350793cd1d09184b183",
  "patch_info": {
    "commit_hash": "845f82e5cdadc76f39ecd350793cd1d09184b183",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/845f82e5cdadc76f39ecd350793cd1d09184b183",
    "files": [
      "wiretap/netscaler.c"
    ],
    "message": "netscaler: Sanity check record size\n\nBug: 13478\nChange-Id: I6be2972979ff7cabf27e70d236c581d539d6ddac\nReviewed-on: https://code.wireshark.org/review/20515\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "wiretap/netscaler.c||wiretap/netscaler.c"
    ]
  },
  "patch_diff": {
    "wiretap/netscaler.c||wiretap/netscaler.c": [
      "File: wiretap/netscaler.c -> wiretap/netscaler.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "870:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
      "871:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
      "872:         int bytes_read;\\",
      "873:         do\\",
      "874:         {\\",
      "875:             while (nstrace_buf_offset < nstrace_buflen)\\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "873:         guint32 record_size;\\",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "886:                         nstrace_buf_offset = nstrace_buflen;\\",
      "887:                         break;\\",
      "888:                     default:\\",
      "890:                 }\\",
      "891:             }\\",
      "892:             nstrace_buf_offset = 0;\\",
      "",
      "[Removed Lines]",
      "889:                         nstrace_buf_offset += nspr_getv##ver##recordsize(fp);\\",
      "",
      "[Added Lines]",
      "890:                         record_size = nspr_getv##ver##recordsize(fp);\\",
      "891:                         if (record_size == 0)\\",
      "892:                             return FALSE;\\",
      "893:                         nstrace_buf_offset += record_size;\\",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8fc0af859de4993951a915ad735be350221f3f53",
      "candidate_info": {
        "commit_hash": "8fc0af859de4993951a915ad735be350221f3f53",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8fc0af859de4993951a915ad735be350221f3f53",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "netscaler: Sanity check record size\n\nBug: 13478\nChange-Id: I6be2972979ff7cabf27e70d236c581d539d6ddac\nReviewed-on: https://code.wireshark.org/review/20515\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 845f82e5cdadc76f39ecd350793cd1d09184b183)\nReviewed-on: https://code.wireshark.org/review/20517",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "870:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "871:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "872:         int bytes_read;\\",
          "873:         do\\",
          "874:         {\\",
          "875:             while (nstrace_buf_offset < nstrace_buflen)\\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "873:         guint32 record_size;\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "886:                         nstrace_buf_offset = nstrace_buflen;\\",
          "887:                         break;\\",
          "888:                     default:\\",
          "890:                 }\\",
          "891:             }\\",
          "892:             nstrace_buf_offset = 0;\\",
          "",
          "[Removed Lines]",
          "889:                         nstrace_buf_offset += nspr_getv##ver##recordsize(fp);\\",
          "",
          "[Added Lines]",
          "890:                         record_size = nspr_getv##ver##recordsize(fp);\\",
          "891:                         if (record_size == 0)\\",
          "892:                             return FALSE;\\",
          "893:                         nstrace_buf_offset += record_size;\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f744e16883ca6afe809b0afcf984f55750b72626",
      "candidate_info": {
        "commit_hash": "f744e16883ca6afe809b0afcf984f55750b72626",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f744e16883ca6afe809b0afcf984f55750b72626",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "netscaler: Sanity check record size\n\nBug: 13478\nChange-Id: I6be2972979ff7cabf27e70d236c581d539d6ddac\nReviewed-on: https://code.wireshark.org/review/20515\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 845f82e5cdadc76f39ecd350793cd1d09184b183)\nReviewed-on: https://code.wireshark.org/review/20518\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "872:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "873:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "874:         int bytes_read;\\",
          "875:         do\\",
          "876:         {\\",
          "877:             while (nstrace_buf_offset < nstrace_buflen)\\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "875:         guint32 record_size;\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "888:                         nstrace_buf_offset = nstrace_buflen;\\",
          "889:                         break;\\",
          "890:                     default:\\",
          "892:                 }\\",
          "893:             }\\",
          "894:             nstrace_buf_offset = 0;\\",
          "",
          "[Removed Lines]",
          "891:                         nstrace_buf_offset += nspr_getv##ver##recordsize(fp);\\",
          "",
          "[Added Lines]",
          "892:                         record_size = nspr_getv##ver##recordsize(fp);\\",
          "893:                         if (record_size == 0)\\",
          "894:                             return FALSE;\\",
          "895:                         nstrace_buf_offset += record_size;\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16c8bff15ad20e1a4c11e116ff29f36f527ffded",
      "candidate_info": {
        "commit_hash": "16c8bff15ad20e1a4c11e116ff29f36f527ffded",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/16c8bff15ad20e1a4c11e116ff29f36f527ffded",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "Catch read errors and zero-length records, as opposed to short reads/EOF.\n\nAlso, if we return WTAP_OPEN_ERROR from an open routine after we've set\nour close routine, that routine is called, which frees up our private\ndata structures; don't free them ourselves before returning\nWTAP_OPEN_ERROR.\n\nChange-Id: I03eebe1a1677e2161fdacec8de14668093cf03a3\nReviewed-on: https://code.wireshark.org/review/20522\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "635:                                       int *err, gchar **err_info);",
          "636: static void nstrace_close(wtap *wth);",
          "641: static guint64 ns_hrtime2nsec(guint32 tm);",
          "643: static gboolean nstrace_dump(wtap_dumper *wdh, const struct wtap_pkthdr *phdr,",
          "",
          "[Removed Lines]",
          "638: static gboolean nstrace_set_start_time_v10(wtap *wth);",
          "639: static gboolean nstrace_set_start_time_v20(wtap *wth);",
          "640: static gboolean nstrace_set_start_time(wtap *wth);",
          "",
          "[Added Lines]",
          "638: static gboolean nstrace_set_start_time_v10(wtap *wth, int *err,",
          "639:                                            gchar **err_info);",
          "640: static gboolean nstrace_set_start_time_v20(wtap *wth, int *err,",
          "641:                                            gchar **err_info);",
          "642: static gboolean nstrace_set_start_time(wtap *wth, int *err, gchar **err_info);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "664:     return tm;",
          "665: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "669: static gboolean",
          "670: nstrace_read_buf(FILE_T fh, void *buf, guint32 buflen, int *err,",
          "671:     gchar **err_info)",
          "672: {",
          "673:     int bytes_read;",
          "675:     bytes_read = file_read(buf, buflen, fh);",
          "676:     if (bytes_read < 0) {",
          "678:         return FALSE;",
          "679:     }",
          "680:     if ((guint32)bytes_read != buflen) {",
          "685:         return FALSE;",
          "686:     }",
          "687:     return TRUE;",
          "688: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "768:     {",
          "770:         if ((file_seek(wth->fh, 0, SEEK_SET, err)) == -1)",
          "771:         {",
          "774:             return WTAP_OPEN_ERROR;",
          "775:         }",
          "778:         if (!wtap_read_bytes(wth->fh, nstrace_buf, page_size, err, err_info))",
          "779:         {",
          "782:             return WTAP_OPEN_ERROR;",
          "783:         }",
          "",
          "[Removed Lines]",
          "767:     if ((nstrace_set_start_time(wth)) == FALSE)",
          "772:             g_free(nstrace->pnstrace_buf);",
          "773:             g_free(nstrace);",
          "780:             g_free(nstrace->pnstrace_buf);",
          "781:             g_free(nstrace);",
          "",
          "[Added Lines]",
          "789:     if ((nstrace_set_start_time(wth, err, err_info)) == FALSE)",
          "797:         if (*err != 0)",
          "798:         {",
          "800:             return WTAP_OPEN_ERROR;",
          "801:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "865: #define nstrace_set_start_time_ver(ver) \\",
          "867:     {\\",
          "868:         nstrace_t *nstrace = (nstrace_t *)wth->priv;\\",
          "869:         gchar* nstrace_buf = nstrace->pnstrace_buf;\\",
          "870:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "871:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "873:         guint32 record_size;\\",
          "874:         do\\",
          "875:         {\\",
          "",
          "[Removed Lines]",
          "866:     gboolean nstrace_set_start_time_v##ver(wtap *wth) \\",
          "872:         int bytes_read;\\",
          "",
          "[Added Lines]",
          "894:     gboolean nstrace_set_start_time_v##ver(wtap *wth, int *err, gchar **err_info) \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "888:                         break;\\",
          "889:                     default:\\",
          "890:                         record_size = nspr_getv##ver##recordsize(fp);\\",
          "892:                             return FALSE;\\",
          "893:                         nstrace_buf_offset += record_size;\\",
          "894:                 }\\",
          "895:             }\\",
          "896:             nstrace_buf_offset = 0;\\",
          "897:             nstrace->xxx_offset += nstrace_buflen;\\",
          "898:             nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));\\",
          "900:         return FALSE;\\",
          "901:     }",
          "",
          "[Removed Lines]",
          "891:                         if (record_size == 0)\\",
          "899:         }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (guint32)bytes_read == nstrace_buflen); \\",
          "",
          "[Added Lines]",
          "918:                         if (record_size == 0) {\\",
          "922:                         }\\",
          "929:         }while((nstrace_buflen > 0) && (nstrace_read_buf(wth->fh, nstrace_buf, nstrace_buflen, err, err_info)));\\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "916: {",
          "917:     if (wth->file_type_subtype == WTAP_FILE_TYPE_SUBTYPE_NETSCALER_1_0)",
          "919:     else if (wth->file_type_subtype == WTAP_FILE_TYPE_SUBTYPE_NETSCALER_2_0)",
          "921:     else if (wth->file_type_subtype == WTAP_FILE_TYPE_SUBTYPE_NETSCALER_3_0)",
          "923:     return FALSE;",
          "924: }",
          "",
          "[Removed Lines]",
          "915: static gboolean nstrace_set_start_time(wtap *wth)",
          "918:         return nstrace_set_start_time_v10(wth);",
          "920:         return nstrace_set_start_time_v20(wth);",
          "922:         return nstrace_set_start_time_v20(wth);",
          "",
          "[Added Lines]",
          "945: static gboolean nstrace_set_start_time(wtap *wth, int *err, gchar **err_info)",
          "948:         return nstrace_set_start_time_v10(wth, err, err_info);",
          "950:         return nstrace_set_start_time_v20(wth, err, err_info);",
          "952:         return nstrace_set_start_time_v20(wth, err, err_info);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1008:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1009:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1010:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Removed Lines]",
          "1011:     int bytes_read;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1085:         nstrace_buf_offset = 0;",
          "1086:         nstrace->xxx_offset += nstrace_buflen;",
          "1087:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1090:     return FALSE;",
          "1091: }",
          "",
          "[Removed Lines]",
          "1088:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1117:     }while((nstrace_buflen > 0) && (nstrace_read_buf(wth->fh, nstrace_buf, nstrace_buflen, err, err_info)));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1188:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1189:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1190:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Removed Lines]",
          "1191:     int bytes_read;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1298:         nstrace_buf_offset = 0;",
          "1299:         nstrace->xxx_offset += nstrace_buflen;",
          "1300:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1303:     return FALSE;",
          "1304: }",
          "",
          "[Removed Lines]",
          "1301:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1329:     }while((nstrace_buflen > 0) && (nstrace_read_buf(wth->fh, nstrace_buf, nstrace_buflen, err, err_info)));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1483:         nstrace_buf_offset = 0;",
          "1484:         nstrace->xxx_offset += nstrace_buflen;",
          "1485:         nstrace_buflen = NSPR_PAGESIZE_TRACE;",
          "1488:     return FALSE;",
          "1489: }",
          "",
          "[Removed Lines]",
          "1486:     } while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (file_eof(wth->fh) || (guint32)bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1514:     } while((nstrace_buflen > 0) && (nstrace_read_buf(wth->fh, nstrace_buf, nstrace_buflen, err, err_info)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}