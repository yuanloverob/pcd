{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "881f9201d9b189ff7d963600dd7bd14c1433e245",
      "candidate_info": {
        "commit_hash": "881f9201d9b189ff7d963600dd7bd14c1433e245",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/881f9201d9b189ff7d963600dd7bd14c1433e245",
        "files": [
          "bindings/python/test_x86.py"
        ],
        "message": "retrieve and print \"status register updates\" info (#995)\n\nis equal to the code in https://github.com/aquynh/capstone/blob/next/tests/test_x86.c",
        "before_after_code_files": [
          "bindings/python/test_x86.py||bindings/python/test_x86.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/test_x86.py||bindings/python/test_x86.py": [
          "File: bindings/python/test_x86.py -> bindings/python/test_x86.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:         )",
          "22: def print_insn_detail(mode, insn):",
          "23:     def print_string_hex(comment, str):",
          "24:         print(comment, end=' '),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: def get_eflag_name(eflag):",
          "23:     if eflag == X86_EFLAGS_UNDEFINED_OF:",
          "24:         return \"UNDEF_OF\"",
          "25:     elif eflag == X86_EFLAGS_UNDEFINED_SF:",
          "26:         return \"UNDEF_SF\"",
          "27:     elif eflag == X86_EFLAGS_UNDEFINED_ZF:",
          "28:         return \"UNDEF_ZF\"",
          "29:     elif eflag == X86_EFLAGS_MODIFY_AF:",
          "30:         return \"MOD_AF\"",
          "31:     elif eflag == X86_EFLAGS_UNDEFINED_PF:",
          "32:         return \"UNDEF_PF\"",
          "33:     elif eflag == X86_EFLAGS_MODIFY_CF:",
          "34:         return \"MOD_CF\"",
          "35:     elif eflag == X86_EFLAGS_MODIFY_SF:",
          "36:         return \"MOD_SF\"",
          "37:     elif eflag == X86_EFLAGS_MODIFY_ZF:",
          "38:         return \"MOD_ZF\"",
          "39:     elif eflag == X86_EFLAGS_UNDEFINED_AF:",
          "40:         return \"UNDEF_AF\"",
          "41:     elif eflag == X86_EFLAGS_MODIFY_PF:",
          "42:         return \"MOD_PF\"",
          "43:     elif eflag == X86_EFLAGS_UNDEFINED_CF:",
          "44:         return \"UNDEF_CF\"",
          "45:     elif eflag == X86_EFLAGS_MODIFY_OF:",
          "46:         return \"MOD_OF\"",
          "47:     elif eflag == X86_EFLAGS_RESET_OF:",
          "48:         return \"RESET_OF\"",
          "49:     elif eflag == X86_EFLAGS_RESET_CF:",
          "50:         return \"RESET_CF\"",
          "51:     elif eflag == X86_EFLAGS_RESET_DF:",
          "52:         return \"RESET_DF\"",
          "53:     elif eflag == X86_EFLAGS_RESET_IF:",
          "54:         return \"RESET_IF\"",
          "55:     elif eflag == X86_EFLAGS_TEST_OF:",
          "56:         return \"TEST_OF\"",
          "57:     elif eflag == X86_EFLAGS_TEST_SF:",
          "58:         return \"TEST_SF\"",
          "59:     elif eflag == X86_EFLAGS_TEST_ZF:",
          "60:         return \"TEST_ZF\"",
          "61:     elif eflag == X86_EFLAGS_TEST_PF:",
          "62:         return \"TEST_PF\"",
          "63:     elif eflag == X86_EFLAGS_TEST_CF:",
          "64:         return \"TEST_CF\"",
          "65:     elif eflag == X86_EFLAGS_RESET_SF:",
          "66:         return \"RESET_SF\"",
          "67:     elif eflag == X86_EFLAGS_RESET_AF:",
          "68:         return \"RESET_AF\"",
          "69:     elif eflag == X86_EFLAGS_RESET_TF:",
          "70:         return \"RESET_TF\"",
          "71:     elif eflag == X86_EFLAGS_RESET_NT:",
          "72:         return \"RESET_NT\"",
          "73:     elif eflag == X86_EFLAGS_PRIOR_OF:",
          "74:         return \"PRIOR_OF\"",
          "75:     elif eflag == X86_EFLAGS_PRIOR_SF:",
          "76:         return \"PRIOR_SF\"",
          "77:     elif eflag == X86_EFLAGS_PRIOR_ZF:",
          "78:         return \"PRIOR_ZF\"",
          "79:     elif eflag == X86_EFLAGS_PRIOR_AF:",
          "80:         return \"PRIOR_AF\"",
          "81:     elif eflag == X86_EFLAGS_PRIOR_PF:",
          "82:         return \"PRIOR_PF\"",
          "83:     elif eflag == X86_EFLAGS_PRIOR_CF:",
          "84:         return \"PRIOR_CF\"",
          "85:     elif eflag == X86_EFLAGS_PRIOR_TF:",
          "86:         return \"PRIOR_TF\"",
          "87:     elif eflag == X86_EFLAGS_PRIOR_IF:",
          "88:         return \"PRIOR_IF\"",
          "89:     elif eflag == X86_EFLAGS_PRIOR_DF:",
          "90:         return \"PRIOR_DF\"",
          "91:     elif eflag == X86_EFLAGS_TEST_NT:",
          "92:         return \"TEST_NT\"",
          "93:     elif eflag == X86_EFLAGS_TEST_DF:",
          "94:         return \"TEST_DF\"",
          "95:     elif eflag == X86_EFLAGS_RESET_PF:",
          "96:         return \"RESET_PF\"",
          "97:     elif eflag == X86_EFLAGS_PRIOR_NT:",
          "98:         return \"PRIOR_NT\"",
          "99:     elif eflag == X86_EFLAGS_MODIFY_TF:",
          "100:         return \"MOD_TF\"",
          "101:     elif eflag == X86_EFLAGS_MODIFY_IF:",
          "102:         return \"MOD_IF\"",
          "103:     elif eflag == X86_EFLAGS_MODIFY_DF:",
          "104:         return \"MOD_DF\"",
          "105:     elif eflag == X86_EFLAGS_MODIFY_NT:",
          "106:         return \"MOD_NT\"",
          "107:     elif eflag == X86_EFLAGS_MODIFY_RF:",
          "108:         return \"MOD_RF\"",
          "109:     elif eflag == X86_EFLAGS_SET_CF:",
          "110:         return \"SET_CF\"",
          "111:     elif eflag == X86_EFLAGS_SET_DF:",
          "112:         return \"SET_DF\"",
          "113:     elif eflag == X86_EFLAGS_SET_IF:",
          "114:         return \"SET_IF\"",
          "115:     else:",
          "116:         return None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:         for r in regs_write:",
          "143:             print(\" %s\" %(insn.reg_name(r)), end=\"\")",
          "144:         print(\"\")",
          "147: # ## Test class Cs",
          "148: def test_class():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:     if insn.eflags:",
          "244:         updated_flags = []",
          "245:         for i in range(0,46):",
          "246:             if insn.eflags & (1 << i):",
          "247:                 updated_flags.append(get_eflag_name(1 << i))",
          "248:         print(\"\\tEFLAGS: %s\" % (','.join(p for p in updated_flags)))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "106d241cba5b6e1d41851b778eb5ae5a57df12b9",
      "candidate_info": {
        "commit_hash": "106d241cba5b6e1d41851b778eb5ae5a57df12b9",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/106d241cba5b6e1d41851b778eb5ae5a57df12b9",
        "files": [
          "bindings/python/Makefile",
          "bindings/python/capstone/__init__.py",
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "Python setup: Clean up some merge failures, adapt for changes on next branch",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py",
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:     try:",
          "257:         return ctypes.cdll.LoadLibrary(lib_file)",
          "258:     except OSError:",
          "260:         if lib_file.endswith('.so'):",
          "261:             try:",
          "263:             except OSError:",
          "264:                 return None",
          "265:         return None",
          "",
          "[Removed Lines]",
          "259:         # if we're on linux, try again with .so.3 extension",
          "262:                 return ctypes.cdll.LoadLibrary(lib_file + '.3')",
          "",
          "[Added Lines]",
          "259:         # if we're on linux, try again with .so.4 extension",
          "262:                 return ctypes.cdll.LoadLibrary(lib_file + '.4')",
          "",
          "---------------"
        ],
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     os.mkdir(LIBS_DIR)",
          "87:     # copy public headers",
          "90:     os.chdir(BUILD_DIR)",
          "",
          "[Removed Lines]",
          "88:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "[Added Lines]",
          "88:     shutil.copytree(os.path.join(BUILD_DIR, 'include', 'capstone'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     else:   # Unix incl. cygwin",
          "103:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "106:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "107:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "105:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "105:     if LIBRARY_FILE.endswith('.so'):",
          "106:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "107:     else:",
          "108:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from distutils.core import setup",
          "2: from distutils.extension import Extension",
          "3: from distutils.command.build import build",
          "4: from Cython.Distutils import build_ext",
          "6: VERSION = '4.0'",
          "8: SYSTEM = sys.platform",
          "11: # adapted from commit e504b81 of Nguyen Tan Cong",
          "12: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "9: VERSION = '3.0.4'",
          "",
          "[Added Lines]",
          "1: import os",
          "2: import sys",
          "3: import shutil",
          "5: from distutils import log",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: compile_args = ['-O3', '-fomit-frame-pointer', '-I' + HEADERS_DIR]",
          "35: link_args = ['-L' + LIBS_DIR]",
          "38: ext_modules = [Extension(\"capstone.ccapstone\",",
          "39:                          [\"pyx/ccapstone.pyx\"],",
          "40:                          libraries=[\"capstone\"],",
          "",
          "[Removed Lines]",
          "37: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "",
          "[Added Lines]",
          "40: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'm68k', 'm68k_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     os.mkdir(LIBS_DIR)",
          "75:     # copy public headers",
          "78:     os.chdir(BUILD_DIR)",
          "",
          "[Removed Lines]",
          "76:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "[Added Lines]",
          "79:     shutil.copytree(os.path.join(BUILD_DIR, 'include', 'capstone'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:     else:   # Unix incl. cygwin",
          "91:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "94:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "95:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "93:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "96:     if LIBRARY_FILE.endswith('.so'):",
          "97:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "98:     else:",
          "99:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
      "candidate_info": {
        "commit_hash": "1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "x86: initialize eaDisplacement in 16-bit mode.  Fixes #656",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1590:      break;",
          "1591:     case 0x3:",
          "1592:      insn->eaBase = (EABase)(insn->eaRegBase + rm);",
          "1593:      if (readDisplacement(insn))",
          "1594:       return -1;",
          "1595:      break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1593:      insn->eaDisplacement = EA_DISP_NONE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a279481dbfd54bb1e2336d771e89978cc6d43176",
      "candidate_info": {
        "commit_hash": "a279481dbfd54bb1e2336d771e89978cc6d43176",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a279481dbfd54bb1e2336d771e89978cc6d43176",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "Fix pp field in readPrefix for VEX3 and EVEX (#1015) (#1016)",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:       | (xFromEVEX2of4(insn->vectorExtensionPrefix[1]) << 1)",
          "724:       | (bFromEVEX2of4(insn->vectorExtensionPrefix[1]) << 0);",
          "725:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726:     switch (ppFromEVEX3of4(insn->vectorExtensionPrefix[2])) {",
          "727:      default:",
          "728:       break;",
          "729:      case VEX_PREFIX_66:",
          "730:       hasOpSize = true;",
          "731:       break;",
          "732:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "765:      | (bFromVEX2of3(insn->vectorExtensionPrefix[1]) << 0);",
          "767:    }",
          "768:   }",
          "769:  } else if (byte == 0xc5) {",
          "770:   uint8_t byte1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "774:    switch (ppFromVEX3of3(insn->vectorExtensionPrefix[2])) {",
          "775:     default:",
          "776:      break;",
          "777:     case VEX_PREFIX_66:",
          "778:      hasOpSize = true;",
          "779:      break;",
          "780:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
      "candidate_info": {
        "commit_hash": "9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "Add X86_REG_EFLAGS for X86_STC and X86_STD",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45811:  {",
          "45812:   X86_STC, X86_INS_STC,",
          "45813: #ifndef CAPSTONE_DIET",
          "45815: #endif",
          "45816:  },",
          "45817:  {",
          "45818:   X86_STD, X86_INS_STD,",
          "45819: #ifndef CAPSTONE_DIET",
          "45821: #endif",
          "45822:  },",
          "45823:  {",
          "",
          "[Removed Lines]",
          "45814:   { 0 }, { 0 }, { 0 }, 0, 0",
          "45820:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "45814:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "45820:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}