{
  "cve_id": "CVE-2017-6504",
  "cve_desc": "WebUI in qBittorrent before 3.3.11 did not set the X-Frame-Options header, which could potentially lead to clickjacking.",
  "repo": "qbittorrent/qBittorrent",
  "patch_hash": "f5ad04766f4abaa78374ff03704316f8ce04627d",
  "patch_info": {
    "commit_hash": "f5ad04766f4abaa78374ff03704316f8ce04627d",
    "repo": "qbittorrent/qBittorrent",
    "commit_url": "https://github.com/qbittorrent/qBittorrent/commit/f5ad04766f4abaa78374ff03704316f8ce04627d",
    "files": [
      "src/base/http/types.h",
      "src/webui/abstractwebapplication.cpp"
    ],
    "message": "[WebUI] Avoid clickjacking attacks",
    "before_after_code_files": [
      "src/base/http/types.h||src/base/http/types.h",
      "src/webui/abstractwebapplication.cpp||src/webui/abstractwebapplication.cpp"
    ]
  },
  "patch_diff": {
    "src/base/http/types.h||src/base/http/types.h": [
      "File: src/base/http/types.h -> src/base/http/types.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "43:     const QString HEADER_CONTENT_ENCODING = \"Content-Encoding\";",
      "44:     const QString HEADER_CONTENT_LENGTH = \"Content-Length\";",
      "45:     const QString HEADER_CACHE_CONTROL = \"Cache-Control\";",
      "47:     const QString CONTENT_TYPE_CSS = \"text/css; charset=UTF-8\";",
      "48:     const QString CONTENT_TYPE_GIF = \"image/gif\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46:     const QString HEADER_X_FRAME_OPTIONS = \"X-Frame-Options\";",
      "",
      "---------------"
    ],
    "src/webui/abstractwebapplication.cpp||src/webui/abstractwebapplication.cpp": [
      "File: src/webui/abstractwebapplication.cpp -> src/webui/abstractwebapplication.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:     request_ = request;",
      "104:     env_ = env;",
      "108:     sessionInitialize();",
      "109:     if (!sessionActive() && !isAuthNeeded())",
      "",
      "[Removed Lines]",
      "106:     clear(); // clear response",
      "",
      "[Added Lines]",
      "107:     clear();",
      "110:     header(Http::HEADER_X_FRAME_OPTIONS, \"SAMEORIGIN\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ff614ebea663df2ae28b093fe27ffd0e2a1a5fa",
      "candidate_info": {
        "commit_hash": "6ff614ebea663df2ae28b093fe27ffd0e2a1a5fa",
        "repo": "qbittorrent/qBittorrent",
        "commit_url": "https://github.com/qbittorrent/qBittorrent/commit/6ff614ebea663df2ae28b093fe27ffd0e2a1a5fa",
        "files": [
          "src/base/http/responsegenerator.cpp",
          "src/base/http/responsegenerator.h",
          "src/base/http/types.h"
        ],
        "message": "Send Date http header\n\nIt's not strict required but often expected.\nchange class to namespace\ncleanup header",
        "before_after_code_files": [
          "src/base/http/responsegenerator.cpp||src/base/http/responsegenerator.cpp",
          "src/base/http/responsegenerator.h||src/base/http/responsegenerator.h",
          "src/base/http/types.h||src/base/http/types.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/base/http/types.h||src/base/http/types.h"
          ],
          "candidate": [
            "src/base/http/types.h||src/base/http/types.h"
          ]
        }
      },
      "candidate_diff": {
        "src/base/http/responsegenerator.cpp||src/base/http/responsegenerator.cpp": [
          "File: src/base/http/responsegenerator.cpp -> src/base/http/responsegenerator.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"responsegenerator.h\"",
          "35: using namespace Http;",
          "37: QByteArray ResponseGenerator::generate(Response response)",
          "",
          "[Removed Lines]",
          "32: #include \"base/utils/gzip.h\"",
          "",
          "[Added Lines]",
          "34: #include <QDateTime>",
          "36: #include \"base/utils/gzip.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:     }",
          "51:     response.headers[HEADER_CONTENT_LENGTH] = QString::number(response.content.length());",
          "53:     QString ret(QLatin1String(\"HTTP/1.1 %1 %2\\r\\n%3\\r\\n\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     response.headers[HEADER_DATE] = httpDate();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     return ret.toUtf8() + response.content;",
          "66: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: QString ResponseGenerator::httpDate()",
          "73: {",
          "77:     return QLocale::c().toString(QDateTime::currentDateTimeUtc(), QLatin1String(\"ddd, dd MMM yyyy HH:mm:ss\"))",
          "78:         .append(QLatin1String(\" GMT\"));",
          "79: }",
          "",
          "---------------"
        ],
        "src/base/http/responsegenerator.h||src/base/http/responsegenerator.h": [
          "File: src/base/http/responsegenerator.h -> src/base/http/responsegenerator.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: namespace Http",
          "39: {",
          "41:     {",
          "44:     };",
          "45: }",
          "",
          "[Removed Lines]",
          "40:     class ResponseGenerator",
          "42:     public:",
          "43:         static QByteArray generate(Response response);",
          "",
          "[Added Lines]",
          "40:     namespace ResponseGenerator",
          "42:         QByteArray generate(Response response);",
          "43:         QString httpDate();",
          "",
          "---------------"
        ],
        "src/base/http/types.h||src/base/http/types.h": [
          "File: src/base/http/types.h -> src/base/http/types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     const QString HEADER_X_XSS_PROTECTION = \"X-XSS-Protection\";",
          "48:     const QString HEADER_X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";",
          "49:     const QString HEADER_CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";",
          "51:     const QString CONTENT_TYPE_CSS = \"text/css; charset=UTF-8\";",
          "52:     const QString CONTENT_TYPE_GIF = \"image/gif\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:     const QString HEADER_DATE = \"Date\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}