{
  "cve_id": "CVE-2014-3631",
  "cve_desc": "The assoc_array_gc function in the associative-array implementation in lib/assoc_array.c in the Linux kernel before 3.16.3 does not properly implement garbage collection, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via multiple \"keyctl newring\" operations followed by a \"keyctl timeout\" operation.",
  "repo": "torvalds/linux",
  "patch_hash": "95389b08d93d5c06ec63ab49bd732b0069b7c35e",
  "patch_info": {
    "commit_hash": "95389b08d93d5c06ec63ab49bd732b0069b7c35e",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/95389b08d93d5c06ec63ab49bd732b0069b7c35e",
    "files": [
      "lib/assoc_array.c"
    ],
    "message": "KEYS: Fix termination condition in assoc array garbage collection\n\nThis fixes CVE-2014-3631.\n\nIt is possible for an associative array to end up with a shortcut node at the\nroot of the tree if there are more than fan-out leaves in the tree, but they\nall crowd into the same slot in the lowest level (ie. they all have the same\nfirst nibble of their index keys).\n\nWhen assoc_array_gc() returns back up the tree after scanning some leaves, it\ncan fall off of the root and crash because it assumes that the back pointer\nfrom a shortcut (after label ascend_old_tree) must point to a normal node -\nwhich isn't true of a shortcut node at the root.\n\nShould we find we're ascending rootwards over a shortcut, we should check to\nsee if the backpointer is zero - and if it is, we have completed the scan.\n\nThis particular bug cannot occur if the root node is not a shortcut - ie. if\nyou have fewer than 17 keys in a keyring or if you have at least two keys that\nsit into separate slots (eg. a keyring and a non keyring).\n\nThis can be reproduced by:\n\n\tring=`keyctl newring bar @s`\n\tfor ((i=1; i<=18; i++)); do last_key=`keyctl newring foo$i $ring`; done\n\tkeyctl timeout $last_key 2\n\nDoing this:\n\n\techo 3 >/proc/sys/kernel/keys/gc_delay\n\nfirst will speed things up.\n\nIf we do fall off of the top of the tree, we get the following oops:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000018\nIP: [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540\nPGD dae15067 PUD cfc24067 PMD 0\nOops: 0000 [#1] SMP\nModules linked in: xt_nat xt_mark nf_conntrack_netbios_ns nf_conntrack_broadcast ip6t_rpfilter ip6t_REJECT xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_ni\nCPU: 0 PID: 26011 Comm: kworker/0:1 Not tainted 3.14.9-200.fc20.x86_64 #1\nHardware name: Bochs Bochs, BIOS Bochs 01/01/2011\nWorkqueue: events key_garbage_collector\ntask: ffff8800918bd580 ti: ffff8800aac14000 task.ti: ffff8800aac14000\nRIP: 0010:[<ffffffff8136cea7>] [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540\nRSP: 0018:ffff8800aac15d40  EFLAGS: 00010206\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8800aaecacc0\nRDX: ffff8800daecf440 RSI: 0000000000000001 RDI: ffff8800aadc2bc0\nRBP: ffff8800aac15da8 R08: 0000000000000001 R09: 0000000000000003\nR10: ffffffff8136ccc7 R11: 0000000000000000 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000070 R15: 0000000000000001\nFS:  0000000000000000(0000) GS:ffff88011fc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\nCR2: 0000000000000018 CR3: 00000000db10d000 CR4: 00000000000006f0\nStack:\n ffff8800aac15d50 0000000000000011 ffff8800aac15db8 ffffffff812e2a70\n ffff880091a00600 0000000000000000 ffff8800aadc2bc3 00000000cd42c987\n ffff88003702df20 ffff88003702dfa0 0000000053b65c09 ffff8800aac15fd8\nCall Trace:\n [<ffffffff812e2a70>] ? keyring_detect_cycle_iterator+0x30/0x30\n [<ffffffff812e3e75>] keyring_gc+0x75/0x80\n [<ffffffff812e1424>] key_garbage_collector+0x154/0x3c0\n [<ffffffff810a67b6>] process_one_work+0x176/0x430\n [<ffffffff810a744b>] worker_thread+0x11b/0x3a0\n [<ffffffff810a7330>] ? rescuer_thread+0x3b0/0x3b0\n [<ffffffff810ae1a8>] kthread+0xd8/0xf0\n [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40\n [<ffffffff816ffb7c>] ret_from_fork+0x7c/0xb0\n [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40\nCode: 08 4c 8b 22 0f 84 bf 00 00 00 41 83 c7 01 49 83 e4 fc 41 83 ff 0f 4c 89 65 c0 0f 8f 5a fe ff ff 48 8b 45 c0 4d 63 cf 49 83 c1 02 <4e> 8b 34 c8 4d 85 f6 0f 84 be 00 00 00 41 f6 c6 01 0f 84 92\nRIP  [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540\n RSP <ffff8800aac15d40>\nCR2: 0000000000000018\n---[ end trace 1129028a088c0cbd ]---\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Don Zickus <dzickus@redhat.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
    "before_after_code_files": [
      "lib/assoc_array.c||lib/assoc_array.c"
    ]
  },
  "patch_diff": {
    "lib/assoc_array.c||lib/assoc_array.c": [
      "File: lib/assoc_array.c -> lib/assoc_array.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1723:   shortcut = assoc_array_ptr_to_shortcut(ptr);",
      "1724:   slot = shortcut->parent_slot;",
      "1725:   cursor = shortcut->back_pointer;",
      "1726:  } else {",
      "1727:   slot = node->parent_slot;",
      "1728:   cursor = ptr;",
      "1729:  }",
      "1731:  node = assoc_array_ptr_to_node(cursor);",
      "1732:  slot++;",
      "1733:  goto continue_node;",
      "",
      "[Removed Lines]",
      "1730:  BUG_ON(!ptr);",
      "",
      "[Added Lines]",
      "1726:   if (!cursor)",
      "1727:    goto gc_complete;",
      "1732:  BUG_ON(!cursor);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "433fb101132047383b550c58585b5a38797c90d1",
      "candidate_info": {
        "commit_hash": "433fb101132047383b550c58585b5a38797c90d1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/433fb101132047383b550c58585b5a38797c90d1",
        "files": [
          "arch/arm/boot/dts/imx28-m28evk.dts"
        ],
        "message": "ARM: dts: imx28-m28evk: Fix display duplicate name warning\n\nThe lcdif node has a property named \"display\" and also a child node\ncalled \"display\", which causes the following warning:\n\ndevice-tree: Duplicate name in lcdif@80030000, renamed to \"display#1\"\n\nRename the child node name in order to avoid the warning.\n\nSigned-off-by: Fabio Estevam <fabio.estevam@freescale.com>\nSigned-off-by: Shawn Guo <shawn.guo@freescale.com>",
        "before_after_code_files": [
          "arch/arm/boot/dts/imx28-m28evk.dts||arch/arm/boot/dts/imx28-m28evk.dts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arm/boot/dts/imx28-m28evk.dts||arch/arm/boot/dts/imx28-m28evk.dts": [
          "File: arch/arm/boot/dts/imx28-m28evk.dts -> arch/arm/boot/dts/imx28-m28evk.dts",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     pinctrl-names = \"default\";",
          "82:     pinctrl-0 = <&lcdif_24bit_pins_a",
          "83:           &lcdif_pins_m28>;",
          "85:     status = \"okay\";",
          "88:      bits-per-pixel = <16>;",
          "89:      bus-width = <18>;",
          "",
          "[Removed Lines]",
          "84:     display = <&display>;",
          "87:     display: display {",
          "",
          "[Added Lines]",
          "84:     display = <&display0>;",
          "87:     display0: display0 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f50a61937b3fabe0c46123cef48e2569042ca07",
      "candidate_info": {
        "commit_hash": "3f50a61937b3fabe0c46123cef48e2569042ca07",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3f50a61937b3fabe0c46123cef48e2569042ca07",
        "files": [
          "arch/arm/boot/dts/imx6sl-evk.dts"
        ],
        "message": "ARM: dts: imx6sl-evk: Fix display duplicate name warning\n\nThe lcdif node has a property named \"display\" and also a child node\ncalled \"display\", which causes the following warning:\n\ndevice-tree: Duplicate name in lcdif@02220000, renamed to \"display#1\"\n\nRename the child node name in order to avoid the warning.\n\nSigned-off-by: Fabio Estevam <fabio.estevam@freescale.com>\nSigned-off-by: Shawn Guo <shawn.guo@freescale.com>",
        "before_after_code_files": [
          "arch/arm/boot/dts/imx6sl-evk.dts||arch/arm/boot/dts/imx6sl-evk.dts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arm/boot/dts/imx6sl-evk.dts||arch/arm/boot/dts/imx6sl-evk.dts": [
          "File: arch/arm/boot/dts/imx6sl-evk.dts -> arch/arm/boot/dts/imx6sl-evk.dts",
          "--- Hunk 1 ---",
          "[Context before]",
          "546:  pinctrl-names = \"default\";",
          "547:  pinctrl-0 = <&pinctrl_lcd>;",
          "548:  lcd-supply = <&reg_lcd_3v3>;",
          "550:  status = \"okay\";",
          "553:   bits-per-pixel = <32>;",
          "554:   bus-width = <24>;",
          "",
          "[Removed Lines]",
          "549:  display = <&display>;",
          "552:  display: display {",
          "",
          "[Added Lines]",
          "549:  display = <&display0>;",
          "552:  display0: display0 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69301eaa7fdab984c55c227359905fd522dbfc9c",
      "candidate_info": {
        "commit_hash": "69301eaa7fdab984c55c227359905fd522dbfc9c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/69301eaa7fdab984c55c227359905fd522dbfc9c",
        "files": [
          "net/sched/cls_tcindex.c"
        ],
        "message": "net_sched: fix a null pointer dereference in tcindex_set_parms()\n\nThis patch fixes the following crash:\n\n[   42.199159] BUG: unable to handle kernel NULL pointer dereference at 0000000000000018\n[   42.200027] IP: [<ffffffff817e3fc4>] tcindex_set_parms+0x45c/0x526\n[   42.200027] PGD d2319067 PUD d4ffe067 PMD 0\n[   42.200027] Oops: 0000 [#1] SMP DEBUG_PAGEALLOC\n[   42.200027] CPU: 0 PID: 541 Comm: tc Not tainted 3.17.0-rc4+ #603\n[   42.200027] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011\n[   42.200027] task: ffff8800d22d2670 ti: ffff8800ce790000 task.ti: ffff8800ce790000\n[   42.200027] RIP: 0010:[<ffffffff817e3fc4>]  [<ffffffff817e3fc4>] tcindex_set_parms+0x45c/0x526\n[   42.200027] RSP: 0018:ffff8800ce793898  EFLAGS: 00010202\n[   42.200027] RAX: 0000000000000001 RBX: ffff8800d1786498 RCX: 0000000000000000\n[   42.200027] RDX: ffffffff82114ec8 RSI: ffffffff82114ec8 RDI: ffffffff82114ec8\n[   42.200027] RBP: ffff8800ce793958 R08: 00000000000080d0 R09: 0000000000000001\n[   42.200027] R10: ffff8800ce7939a0 R11: 0000000000000246 R12: ffff8800d017d238\n[   42.200027] R13: 0000000000000018 R14: ffff8800d017c6a0 R15: ffff8800d1786620\n[   42.200027] FS:  00007f4e24539740(0000) GS:ffff88011a600000(0000) knlGS:0000000000000000\n[   42.200027] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   42.200027] CR2: 0000000000000018 CR3: 00000000cff38000 CR4: 00000000000006f0\n[   42.200027] Stack:\n[   42.200027]  ffff8800ce0949f0 0000000000000000 0000000200000003 ffff880000000000\n[   42.200027]  ffff8800ce7938b8 ffff8800ce7938b8 0000000600000007 0000000000000000\n[   42.200027]  ffff8800ce7938d8 ffff8800ce7938d8 0000000600000007 ffff8800ce0949f0\n[   42.200027] Call Trace:\n[   42.200027]  [<ffffffff817e4169>] tcindex_change+0xdb/0xee\n[   42.200027]  [<ffffffff817c16ca>] tc_ctl_tfilter+0x44d/0x63f\n[   42.200027]  [<ffffffff8179d161>] rtnetlink_rcv_msg+0x181/0x194\n[   42.200027]  [<ffffffff8179cf9d>] ? rtnl_lock+0x17/0x19\n[   42.200027]  [<ffffffff8179cfe0>] ? __rtnl_unlock+0x17/0x17\n[   42.200027]  [<ffffffff817ee296>] netlink_rcv_skb+0x49/0x8b\n[   43.462494]  [<ffffffff8179cfc2>] rtnetlink_rcv+0x23/0x2a\n[   43.462494]  [<ffffffff817ec8df>] netlink_unicast+0xc7/0x148\n[   43.462494]  [<ffffffff817ed413>] netlink_sendmsg+0x5cb/0x63d\n[   43.462494]  [<ffffffff810ad781>] ? mark_lock+0x2e/0x224\n[   43.462494]  [<ffffffff817757b8>] __sock_sendmsg_nosec+0x25/0x27\n[   43.462494]  [<ffffffff81778165>] sock_sendmsg+0x57/0x71\n[   43.462494]  [<ffffffff81152bbd>] ? might_fault+0x57/0xa4\n[   43.462494]  [<ffffffff81152c06>] ? might_fault+0xa0/0xa4\n[   43.462494]  [<ffffffff81152bbd>] ? might_fault+0x57/0xa4\n[   43.462494]  [<ffffffff817838fd>] ? verify_iovec+0x69/0xb7\n[   43.462494]  [<ffffffff817784f8>] ___sys_sendmsg+0x21d/0x2bb\n[   43.462494]  [<ffffffff81009db3>] ? native_sched_clock+0x35/0x37\n[   43.462494]  [<ffffffff8109ab53>] ? sched_clock_local+0x12/0x72\n[   43.462494]  [<ffffffff810ad781>] ? mark_lock+0x2e/0x224\n[   43.462494]  [<ffffffff8109ada4>] ? sched_clock_cpu+0xa0/0xb9\n[   43.462494]  [<ffffffff810aee37>] ? __lock_acquire+0x5fe/0xde4\n[   43.462494]  [<ffffffff8119f570>] ? rcu_read_lock_held+0x36/0x38\n[   43.462494]  [<ffffffff8119f75a>] ? __fcheck_files.isra.7+0x4b/0x57\n[   43.462494]  [<ffffffff8119fbf2>] ? __fget_light+0x30/0x54\n[   43.462494]  [<ffffffff81779012>] __sys_sendmsg+0x42/0x60\n[   43.462494]  [<ffffffff81779042>] SyS_sendmsg+0x12/0x1c\n[   43.462494]  [<ffffffff819d24d2>] system_call_fastpath+0x16/0x1b\n\n'p->h' could be NULL while 'cp->h' is always update to date.\n\nFixes: commit 331b72922c5f58d48fd (\"net: sched: RCU cls_tcindex\")\nCc: John Fastabend <john.fastabend@gmail.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nAcked-By: John Fastabend <john.r.fastabend@intel.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/sched/cls_tcindex.c||net/sched/cls_tcindex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/sched/cls_tcindex.c||net/sched/cls_tcindex.c": [
          "File: net/sched/cls_tcindex.c -> net/sched/cls_tcindex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:   f->result = new_filter_result;",
          "382:   f->next = NULL;",
          "385:   for (nfp = rtnl_dereference(*fp);",
          "386:        nfp;",
          "387:        fp = &nfp->next, nfp = rtnl_dereference(*fp))",
          "",
          "[Removed Lines]",
          "384:   fp = p->h + (handle % p->hash);",
          "",
          "[Added Lines]",
          "384:   fp = cp->h + (handle % cp->hash);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f0d61d6365c01b5941e2c166684392ccf9c340c",
      "candidate_info": {
        "commit_hash": "7f0d61d6365c01b5941e2c166684392ccf9c340c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7f0d61d6365c01b5941e2c166684392ccf9c340c",
        "files": [
          "arch/arm/boot/dts/imx28-m28cu3.dts"
        ],
        "message": "ARM: dts: imx28-m28cu: Fix display duplicate name warning\n\nThe lcdif node has a property named \"display\" and also a child node\ncalled \"display\", which causes the following warning:\n\ndevice-tree: Duplicate name in lcdif@80030000, renamed to \"display#1\"\n\nRename the child node name in order to avoid the warning.\n\nSigned-off-by: Fabio Estevam <fabio.estevam@freescale.com>\nSigned-off-by: Shawn Guo <shawn.guo@freescale.com>",
        "before_after_code_files": [
          "arch/arm/boot/dts/imx28-m28cu3.dts||arch/arm/boot/dts/imx28-m28cu3.dts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arm/boot/dts/imx28-m28cu3.dts||arch/arm/boot/dts/imx28-m28cu3.dts": [
          "File: arch/arm/boot/dts/imx28-m28cu3.dts -> arch/arm/boot/dts/imx28-m28cu3.dts",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     pinctrl-names = \"default\";",
          "116:     pinctrl-0 = <&lcdif_24bit_pins_a",
          "117:           &lcdif_pins_m28>;",
          "119:     status = \"okay\";",
          "122:      bits-per-pixel = <32>;",
          "123:      bus-width = <24>;",
          "",
          "[Removed Lines]",
          "118:     display = <&display>;",
          "121:     display: display0 {",
          "",
          "[Added Lines]",
          "118:     display = <&display0>;",
          "121:     display0: display0 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c0e0d3c091ed5b823fb89e1d46dbb9abd5830a7",
      "candidate_info": {
        "commit_hash": "0c0e0d3c091ed5b823fb89e1d46dbb9abd5830a7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0c0e0d3c091ed5b823fb89e1d46dbb9abd5830a7",
        "files": [
          "fs/nfs/nfs4_fs.h",
          "fs/nfs/nfs4state.c"
        ],
        "message": "nfs: revert \"nfs4: queue free_lock_state job submission to nfsiod\"\n\nThis reverts commit 49a4bda22e186c4d0eb07f4a36b5b1a378f9398d.\n\nChristoph reported an oops due to the above commit:\n\ngeneric/089 242s ...[ 2187.041239] general protection fault: 0000 [#1]\nSMP\n[ 2187.042899] Modules linked in:\n[ 2187.044000] CPU: 0 PID: 11913 Comm: kworker/0:1 Not tainted 3.16.0-rc6+ #1151\n[ 2187.044287] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007\n[ 2187.044287] Workqueue: nfsiod free_lock_state_work\n[ 2187.044287] task: ffff880072b50cd0 ti: ffff88007a4ec000 task.ti: ffff88007a4ec000\n[ 2187.044287] RIP: 0010:[<ffffffff81361ca6>]  [<ffffffff81361ca6>] free_lock_state_work+0x16/0x30\n[ 2187.044287] RSP: 0018:ffff88007a4efd58  EFLAGS: 00010296\n[ 2187.044287] RAX: 6b6b6b6b6b6b6b6b RBX: ffff88007a947ac0 RCX: 8000000000000000\n[ 2187.044287] RDX: ffffffff826af9e0 RSI: ffff88007b093c00 RDI: ffff88007b093db8\n[ 2187.044287] RBP: ffff88007a4efd58 R08: ffffffff832d3e10 R09: 000001c40efc0000\n[ 2187.044287] R10: 0000000000000000 R11: 0000000000059e30 R12: ffff88007fc13240\n[ 2187.044287] R13: ffff88007fc18b00 R14: ffff88007b093db8 R15: 0000000000000000\n[ 2187.044287] FS:  0000000000000000(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000\n[ 2187.044287] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[ 2187.044287] CR2: 00007f93ec33fb80 CR3: 0000000079dc2000 CR4: 00000000000006f0\n[ 2187.044287] Stack:\n[ 2187.044287]  ffff88007a4efdd8 ffffffff810cc877 ffffffff810cc80d ffff88007fc13258\n[ 2187.044287]  000000007a947af0 0000000000000000 ffffffff8353ccc8 ffffffff82b6f3d0\n[ 2187.044287]  0000000000000000 ffffffff82267679 ffff88007a4efdd8 ffff88007fc13240\n[ 2187.044287] Call Trace:\n[ 2187.044287]  [<ffffffff810cc877>] process_one_work+0x1c7/0x490\n[ 2187.044287]  [<ffffffff810cc80d>] ? process_one_work+0x15d/0x490\n[ 2187.044287]  [<ffffffff810cd569>] worker_thread+0x119/0x4f0\n[ 2187.044287]  [<ffffffff810fbbad>] ? trace_hardirqs_on+0xd/0x10\n[ 2187.044287]  [<ffffffff810cd450>] ? init_pwq+0x190/0x190\n[ 2187.044287]  [<ffffffff810d3c6f>] kthread+0xdf/0x100\n[ 2187.044287]  [<ffffffff810d3b90>] ? __init_kthread_worker+0x70/0x70\n[ 2187.044287]  [<ffffffff81d9873c>] ret_from_fork+0x7c/0xb0\n[ 2187.044287]  [<ffffffff810d3b90>] ? __init_kthread_worker+0x70/0x70\n[ 2187.044287] Code: 0f 1f 44 00 00 31 c0 5d c3 66 66 66 2e 0f 1f 84 00 00 00 00 00 55 48 8d b7 48 fe ff ff 48 8b 87 58 fe ff ff 48 89 e5 48 8b 40 30 <48> 8b 00 48 8b 10 48 89 c7 48 8b 92 90 03 00 00 ff 52 28 5d c3\n[ 2187.044287] RIP  [<ffffffff81361ca6>] free_lock_state_work+0x16/0x30\n[ 2187.044287]  RSP <ffff88007a4efd58>\n[ 2187.103626] ---[ end trace 0f11326d28e5d8fa ]---\n\nThe original reason for this patch was because the fl_release_private\noperation couldn't sleep. With commit ed9814d85810 (locks: defer freeing\nlocks in locks_delete_lock until after i_lock has been dropped), this is\nno longer a problem so we can revert this patch.\n\nReported-by: Christoph Hellwig <hch@infradead.org>\nSigned-off-by: Jeff Layton <jlayton@primarydata.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nTested-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Trond Myklebust <trond.myklebust@primarydata.com>",
        "before_after_code_files": [
          "fs/nfs/nfs4_fs.h||fs/nfs/nfs4_fs.h",
          "fs/nfs/nfs4state.c||fs/nfs/nfs4state.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/nfs/nfs4_fs.h||fs/nfs/nfs4_fs.h": [
          "File: fs/nfs/nfs4_fs.h -> fs/nfs/nfs4_fs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: struct nfs4_lock_state {",
          "135: #define NFS_LOCK_INITIALIZED 0",
          "136: #define NFS_LOCK_LOST        1",
          "138:  struct nfs_seqid_counter ls_seqid;",
          "143: };",
          "",
          "[Removed Lines]",
          "137:  unsigned long   ls_flags;",
          "139:  nfs4_stateid   ls_stateid;",
          "140:  atomic_t   ls_count;",
          "141:  fl_owner_t   ls_owner;",
          "142:  struct work_struct  ls_release;",
          "",
          "[Added Lines]",
          "137:  unsigned long  ls_flags;",
          "139:  nfs4_stateid  ls_stateid;",
          "140:  atomic_t  ls_count;",
          "141:  fl_owner_t  ls_owner;",
          "",
          "---------------"
        ],
        "fs/nfs/nfs4state.c||fs/nfs/nfs4state.c": [
          "File: fs/nfs/nfs4state.c -> fs/nfs/nfs4state.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "799:  return NULL;",
          "800: }",
          "",
          "[Removed Lines]",
          "802: static void",
          "803: free_lock_state_work(struct work_struct *work)",
          "804: {",
          "805:  struct nfs4_lock_state *lsp = container_of(work,",
          "806:      struct nfs4_lock_state, ls_release);",
          "807:  struct nfs4_state *state = lsp->ls_state;",
          "808:  struct nfs_server *server = state->owner->so_server;",
          "809:  struct nfs_client *clp = server->nfs_client;",
          "811:  clp->cl_mvops->free_lock_state(server, lsp);",
          "812: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "832:  if (lsp->ls_seqid.owner_id < 0)",
          "833:   goto out_free;",
          "834:  INIT_LIST_HEAD(&lsp->ls_locks);",
          "836:  return lsp;",
          "837: out_free:",
          "838:  kfree(lsp);",
          "",
          "[Removed Lines]",
          "835:  INIT_WORK(&lsp->ls_release, free_lock_state_work);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "896:  if (list_empty(&state->lock_states))",
          "897:   clear_bit(LK_STATE_IN_USE, &state->flags);",
          "898:  spin_unlock(&state->state_lock);",
          "903:   nfs4_free_lock_state(server, lsp);",
          "905: }",
          "907: static void nfs4_fl_copy_lock(struct file_lock *dst, struct file_lock *src)",
          "",
          "[Removed Lines]",
          "899:  if (test_bit(NFS_LOCK_INITIALIZED, &lsp->ls_flags))",
          "900:   queue_work(nfsiod_workqueue, &lsp->ls_release);",
          "901:  else {",
          "902:   server = state->owner->so_server;",
          "904:  }",
          "",
          "[Added Lines]",
          "886:  server = state->owner->so_server;",
          "887:  if (test_bit(NFS_LOCK_INITIALIZED, &lsp->ls_flags)) {",
          "888:   struct nfs_client *clp = server->nfs_client;",
          "890:   clp->cl_mvops->free_lock_state(server, lsp);",
          "891:  } else",
          "",
          "---------------"
        ]
      }
    }
  ]
}