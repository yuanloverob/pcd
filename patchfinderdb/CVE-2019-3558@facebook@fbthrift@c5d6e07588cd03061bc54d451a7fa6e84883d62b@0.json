{
  "cve_id": "CVE-2019-3558",
  "cve_desc": "Python Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.02.18.00.",
  "repo": "facebook/fbthrift",
  "patch_hash": "c5d6e07588cd03061bc54d451a7fa6e84883d62b",
  "patch_info": {
    "commit_hash": "c5d6e07588cd03061bc54d451a7fa6e84883d62b",
    "repo": "facebook/fbthrift",
    "commit_url": "https://github.com/facebook/fbthrift/commit/c5d6e07588cd03061bc54d451a7fa6e84883d62b",
    "files": [
      "thrift/lib/cpp/protocol/TProtocolException.cpp",
      "thrift/lib/cpp/protocol/TProtocolException.h",
      "thrift/lib/cpp2/protocol/Protocol.h",
      "thrift/lib/py/protocol/TProtocol.py",
      "thrift/test/ProtocolSkipTest.cpp"
    ],
    "message": "Throw on bad types during skipping data\n\nSummary:\nThe current code silently returns on bad types. In case when we have an invalid data, we may get a container of a large size with a bad type, this would lead to us running long loop doing nothing (though we already can say that the data is invalid).\n\nThe new code would throw an exception as soon as we try to skip a value of invalid type.\n\nFixes CVE-2019-3552\n\nReviewed By: yfeldblum, stevegury\n\nDifferential Revision: D8344920\n\nfbshipit-source-id: f12e8f3442f7ad5e1a81d822380701e929b80f0d",
    "before_after_code_files": [
      "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp",
      "thrift/lib/cpp/protocol/TProtocolException.h||thrift/lib/cpp/protocol/TProtocolException.h",
      "thrift/lib/cpp2/protocol/Protocol.h||thrift/lib/cpp2/protocol/Protocol.h",
      "thrift/lib/py/protocol/TProtocol.py||thrift/lib/py/protocol/TProtocol.py",
      "thrift/test/ProtocolSkipTest.cpp||thrift/test/ProtocolSkipTest.cpp"
    ]
  },
  "patch_diff": {
    "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp": [
      "File: thrift/lib/cpp/protocol/TProtocolException.cpp -> thrift/lib/cpp/protocol/TProtocolException.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:           \"Attempt to interpret value {} as bool, probably the data is corrupted\",",
      "58:           value));",
      "59: }",
      "60: }}}",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "61: [[noreturn]] void TProtocolException::throwInvalidSkipType(TType type) {",
      "62:   throw TProtocolException(",
      "63:       TProtocolException::INVALID_DATA,",
      "64:       folly::sformat(",
      "65:           \"Encountered invalid field/element type ({}) during skipping\",",
      "66:           static_cast<uint8_t>(type)));",
      "67: }",
      "",
      "---------------"
    ],
    "thrift/lib/cpp/protocol/TProtocolException.h||thrift/lib/cpp/protocol/TProtocolException.h": [
      "File: thrift/lib/cpp/protocol/TProtocolException.h -> thrift/lib/cpp/protocol/TProtocolException.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: #define _THRIFT_PROTOCOL_TPROTOCOLEXCEPTION_H_ 1",
      "25: #include <thrift/lib/cpp/Thrift.h>",
      "27: #include <string>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: #include <thrift/lib/cpp/protocol/TType.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "106:       folly::StringPiece field,",
      "107:       folly::StringPiece type);",
      "108:   [[noreturn]] static void throwBoolValueOutOfRange(uint8_t value);",
      "110:  protected:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "110:   [[noreturn]] static void throwInvalidSkipType(TType type);",
      "",
      "---------------"
    ],
    "thrift/lib/cpp2/protocol/Protocol.h||thrift/lib/cpp2/protocol/Protocol.h": [
      "File: thrift/lib/cpp2/protocol/Protocol.h -> thrift/lib/cpp2/protocol/Protocol.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "176:       prot.readListEnd();",
      "177:       return;",
      "178:     }",
      "181:   }",
      "182: }",
      "",
      "[Removed Lines]",
      "179:     default:",
      "180:       return;",
      "",
      "[Added Lines]",
      "179:     default: {",
      "180:       TProtocolException::throwInvalidSkipType(arg_type);",
      "181:     }",
      "",
      "---------------"
    ],
    "thrift/lib/py/protocol/TProtocol.py||thrift/lib/py/protocol/TProtocol.py": [
      "File: thrift/lib/py/protocol/TProtocol.py -> thrift/lib/py/protocol/TProtocol.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         pass",
      "179:     def skip(self, type):",
      "183:             self.readBool()",
      "184:         elif type == TType.BYTE:",
      "185:             self.readByte()",
      "",
      "[Removed Lines]",
      "180:         if type == TType.STOP:",
      "181:             return",
      "182:         elif type == TType.BOOL:",
      "",
      "[Added Lines]",
      "180:         if type == TType.BOOL:",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "220:             for _ in range(size):",
      "221:                 self.skip(etype)",
      "222:             self.readListEnd()",
      "224:     def readIntegral(self, type):",
      "225:         if type == TType.BOOL:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "221:         else:",
      "222:             raise TProtocolException(",
      "223:                 TProtocolException.INVALID_DATA,",
      "224:                 \"Unexpected type for skipping {}\".format(type)",
      "225:             )",
      "",
      "---------------"
    ],
    "thrift/test/ProtocolSkipTest.cpp||thrift/test/ProtocolSkipTest.cpp": [
      "File: thrift/test/ProtocolSkipTest.cpp -> thrift/test/ProtocolSkipTest.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: #include <gtest/gtest.h>",
      "19: #include <thrift/lib/cpp2/protocol/CompactProtocol.h>",
      "21: using namespace apache::thrift;",
      "23: TEST(ProtocolSkipTest, SkipInt) {",
      "24:   IOBufQueue queue;",
      "25:   CompactProtocolWriter writer;",
      "26:   writer.setOutput(&queue);",
      "27:   writer.writeI32(123);",
      "28:   auto buf = queue.move();",
      "29:   CompactProtocolReader reader;",
      "30:   reader.setInput(buf.get());",
      "31:   reader.skip(TType::T_I32);",
      "32: }",
      "34: TEST(ProtocolSkipTest, SkipStop) {",
      "35:   IOBufQueue queue;",
      "36:   CompactProtocolWriter writer;",
      "37:   writer.setOutput(&queue);",
      "38:   writer.writeFieldStop();",
      "39:   auto buf = queue.move();",
      "40:   CompactProtocolReader reader;",
      "41:   reader.setInput(buf.get());",
      "42:   bool thrown = false;",
      "43:   try {",
      "44:     reader.skip(TType::T_STOP);",
      "45:   } catch (const TProtocolException& ex) {",
      "46:     EXPECT_EQ(TProtocolException::INVALID_DATA, ex.getType());",
      "47:     thrown = true;",
      "48:   }",
      "49:   EXPECT_TRUE(thrown);",
      "50: }",
      "52: TEST(ProtocolSkipTest, SkipStopInContainer) {",
      "53:   IOBufQueue queue;",
      "54:   CompactProtocolWriter writer;",
      "55:   writer.setOutput(&queue);",
      "56:   writer.writeListBegin(TType::T_STOP, 1u << 30);",
      "57:   auto buf = queue.move();",
      "58:   CompactProtocolReader reader;",
      "59:   reader.setInput(buf.get());",
      "60:   bool thrown = false;",
      "61:   try {",
      "62:     reader.skip(TType::T_LIST);",
      "63:   } catch (const TProtocolException& ex) {",
      "64:     EXPECT_EQ(TProtocolException::INVALID_DATA, ex.getType());",
      "65:     thrown = true;",
      "66:   }",
      "67:   EXPECT_TRUE(thrown);",
      "68: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e53bf05ee4827167a539b0b2b13fd03362da417",
      "candidate_info": {
        "commit_hash": "7e53bf05ee4827167a539b0b2b13fd03362da417",
        "repo": "facebook/fbthrift",
        "commit_url": "https://github.com/facebook/fbthrift/commit/7e53bf05ee4827167a539b0b2b13fd03362da417",
        "files": [
          "CMakeLists.txt",
          "build/fbcode_builder/specs/fbthrift.py",
          "thrift/lib/cpp/CMakeLists.txt",
          "thrift/lib/cpp/protocol/TProtocolException.cpp",
          "thrift/lib/cpp/transport/THeader.cpp",
          "thrift/lib/cpp/util/THttpParser.cpp",
          "thrift/lib/cpp/util/test/THttpParserTest.cpp",
          "thrift/lib/cpp2/GeneratedCodeHelper.cpp",
          "thrift/lib/cpp2/GeneratedCodeHelper.h",
          "thrift/lib/cpp2/async/HTTPClientChannel.cpp",
          "thrift/lib/cpp2/protocol/DebugProtocol.cpp",
          "thrift/lib/cpp2/protocol/DebugProtocol.h",
          "thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp",
          "thrift/lib/cpp2/reflection/legacy_reflection.cpp",
          "thrift/lib/cpp2/test/CompactProtocolBench.cpp",
          "thrift/lib/cpp2/test/ProtoBufBench.cpp",
          "thrift/lib/cpp2/test/ProtocolBench.cpp",
          "thrift/lib/cpp2/test/SerializationTest.cpp",
          "thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp",
          "thrift/lib/cpp2/test/util/TestInterface.cpp",
          "thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp",
          "thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp",
          "thrift/lib/cpp2/transport/rocket/framing/Frames.cpp",
          "thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp",
          "thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp",
          "thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp"
        ],
        "message": "Migrate from Folly Format to fmt\n\nSummary: Migrate from Folly Format to fmt which provides smaller compile times and per-call binary code size.\n\nReviewed By: alandau\n\nDifferential Revision: D14954926\n\nfbshipit-source-id: 9d2c39e74a5d11e0f90c8ad0d71b79424c56747f",
        "before_after_code_files": [
          "build/fbcode_builder/specs/fbthrift.py||build/fbcode_builder/specs/fbthrift.py",
          "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp",
          "thrift/lib/cpp/transport/THeader.cpp||thrift/lib/cpp/transport/THeader.cpp",
          "thrift/lib/cpp/util/THttpParser.cpp||thrift/lib/cpp/util/THttpParser.cpp",
          "thrift/lib/cpp/util/test/THttpParserTest.cpp||thrift/lib/cpp/util/test/THttpParserTest.cpp",
          "thrift/lib/cpp2/GeneratedCodeHelper.cpp||thrift/lib/cpp2/GeneratedCodeHelper.cpp",
          "thrift/lib/cpp2/GeneratedCodeHelper.h||thrift/lib/cpp2/GeneratedCodeHelper.h",
          "thrift/lib/cpp2/async/HTTPClientChannel.cpp||thrift/lib/cpp2/async/HTTPClientChannel.cpp",
          "thrift/lib/cpp2/protocol/DebugProtocol.cpp||thrift/lib/cpp2/protocol/DebugProtocol.cpp",
          "thrift/lib/cpp2/protocol/DebugProtocol.h||thrift/lib/cpp2/protocol/DebugProtocol.h",
          "thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp||thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp",
          "thrift/lib/cpp2/reflection/legacy_reflection.cpp||thrift/lib/cpp2/reflection/legacy_reflection.cpp",
          "thrift/lib/cpp2/test/CompactProtocolBench.cpp||thrift/lib/cpp2/test/CompactProtocolBench.cpp",
          "thrift/lib/cpp2/test/ProtoBufBench.cpp||thrift/lib/cpp2/test/ProtoBufBench.cpp",
          "thrift/lib/cpp2/test/ProtocolBench.cpp||thrift/lib/cpp2/test/ProtocolBench.cpp",
          "thrift/lib/cpp2/test/SerializationTest.cpp||thrift/lib/cpp2/test/SerializationTest.cpp",
          "thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp||thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp",
          "thrift/lib/cpp2/test/util/TestInterface.cpp||thrift/lib/cpp2/test/util/TestInterface.cpp",
          "thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp||thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp",
          "thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp||thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp",
          "thrift/lib/cpp2/transport/rocket/framing/Frames.cpp||thrift/lib/cpp2/transport/rocket/framing/Frames.cpp",
          "thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp||thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp",
          "thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp||thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp",
          "thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp||thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp"
          ],
          "candidate": [
            "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp"
          ]
        }
      },
      "candidate_diff": {
        "build/fbcode_builder/specs/fbthrift.py||build/fbcode_builder/specs/fbthrift.py": [
          "File: build/fbcode_builder/specs/fbthrift.py -> build/fbcode_builder/specs/fbthrift.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import specs.folly as folly",
          "9: import specs.fizz as fizz",
          "10: import specs.rsocket as rsocket",
          "11: import specs.sodium as sodium",
          "12: import specs.wangle as wangle",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import specs.fmt as fmt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:         ShellQuoted('$(git describe --abbrev=0 --tags)')",
          "23:     )",
          "24:     return {",
          "26:         'steps': [",
          "27:             # This isn't a separete spec, since only fbthrift uses mstch.",
          "28:             builder.github_project_workdir('no1msd/mstch', 'build'),",
          "",
          "[Removed Lines]",
          "25:         'depends_on': [folly, fizz, sodium, rsocket, wangle, zstd],",
          "",
          "[Added Lines]",
          "26:         'depends_on': [folly, fizz, fmt, sodium, rsocket, wangle, zstd],",
          "",
          "---------------"
        ],
        "thrift/lib/cpp/protocol/TProtocolException.cpp||thrift/lib/cpp/protocol/TProtocolException.cpp": [
          "File: thrift/lib/cpp/protocol/TProtocolException.cpp -> thrift/lib/cpp/protocol/TProtocolException.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp/protocol/TProtocolException.h>",
          "21: namespace apache {",
          "22: namespace thrift {",
          "",
          "[Removed Lines]",
          "19: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "19: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: [[noreturn]] void TProtocolException::throwMissingRequiredField(",
          "46:     folly::StringPiece field,",
          "47:     folly::StringPiece type) {",
          "50:   throw TProtocolException(",
          "51:       TProtocolException::MISSING_REQUIRED_FIELD,",
          "53: }",
          "55: [[noreturn]] void TProtocolException::throwBoolValueOutOfRange(uint8_t value) {",
          "56:   throw TProtocolException(",
          "57:       TProtocolException::INVALID_DATA,",
          "60:           value));",
          "61: }",
          "63: [[noreturn]] void TProtocolException::throwInvalidSkipType(TType type) {",
          "64:   throw TProtocolException(",
          "65:       TProtocolException::INVALID_DATA,",
          "67:           \"Encountered invalid field/element type ({}) during skipping\",",
          "68:           static_cast<uint8_t>(type)));",
          "69: }",
          "",
          "[Removed Lines]",
          "48:   constexpr auto fmt =",
          "49:       \"Required field '{}' was not found in serialized data! Struct: {}\";",
          "52:       folly::sformat(fmt, field, type));",
          "58:       folly::sformat(",
          "59:           \"Attempt to interpret value {} as bool, probably the data is corrupted\",",
          "66:       folly::sformat(",
          "",
          "[Added Lines]",
          "50:       fmt::format(",
          "51:           \"Required field '{}' was not found in serialized data! Struct: {}\",",
          "52:           field,",
          "53:           type));",
          "59:       fmt::format(",
          "60:           \"Attempt to interpret value {} as bool, probably the data is \"",
          "61:           \"corrupted\",",
          "68:       fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp/transport/THeader.cpp||thrift/lib/cpp/transport/THeader.cpp": [
          "File: thrift/lib/cpp/transport/THeader.cpp -> thrift/lib/cpp/transport/THeader.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp/transport/THeader.h>",
          "19: #include <folly/Conv.h>",
          "20: #include <folly/ExceptionString.h>",
          "22: #include <folly/String.h>",
          "23: #include <folly/compression/Compression.h>",
          "24: #include <folly/io/Cursor.h>",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "19: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "555:       default:",
          "556:         throw TApplicationException(",
          "557:             TApplicationException::MISSING_RESULT,",
          "559:     }",
          "560:   }",
          "",
          "[Removed Lines]",
          "558:             folly::sformat(\"Unknown transform: {}\", transId));",
          "",
          "[Added Lines]",
          "558:             fmt::format(\"Unknown transform: {}\", transId));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "617:       default:",
          "618:         throw TTransportException(",
          "619:             TTransportException::CORRUPTED_DATA,",
          "621:     }",
          "622:     ++it;",
          "623:   }",
          "",
          "[Removed Lines]",
          "620:             folly::sformat(\"Unknown transform: {}\", transId));",
          "",
          "[Added Lines]",
          "620:             fmt::format(\"Unknown transform: {}\", transId));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp/util/THttpParser.cpp||thrift/lib/cpp/util/THttpParser.cpp": [
          "File: thrift/lib/cpp/util/THttpParser.cpp -> thrift/lib/cpp/util/THttpParser.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <thrift/lib/cpp/transport/TTransportException.h>",
          "22: #include <folly/String.h>",
          "24: #include <cstdlib>",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "21: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337: bool THttpClientParser::parseStatusLine(folly::StringPiece status) {",
          "338:   auto const badStatus = [&] {",
          "340:   };",
          "",
          "[Removed Lines]",
          "339:     return TTransportException(folly::sformat(\"Bad Status: {}\", status));",
          "",
          "[Added Lines]",
          "339:     return TTransportException(fmt::format(\"Bad Status: {}\", status));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp/util/test/THttpParserTest.cpp||thrift/lib/cpp/util/test/THttpParserTest.cpp": [
          "File: thrift/lib/cpp/util/test/THttpParserTest.cpp -> thrift/lib/cpp/util/test/THttpParserTest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp/util/THttpParser.h>",
          "20: #include <folly/portability/GMock.h>",
          "21: #include <folly/portability/GTest.h>",
          "",
          "[Removed Lines]",
          "18: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "18: #include <fmt/core.h>",
          "20: #include <folly/String.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:   apache::thrift::util::THttpClientParser parser;",
          "46:   std::map<std::string, std::string> header;",
          "47:   for (int i = 0; i < 100; i++) {",
          "49:   }",
          "50:   std::map<std::string, std::string> header_persistent;",
          "51:   auto answer = std::string(\"{'testing': 'this is a test'}\");",
          "",
          "[Removed Lines]",
          "48:     header[folly::sformat(\"testing_header{}\", i)] = \"test_header\";",
          "",
          "[Added Lines]",
          "49:     header[fmt::format(\"testing_header{}\", i)] = \"test_header\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:   auto fbs = buf->moveToFbString();",
          "56:   std::string output = std::string(fbs.c_str(), fbs.size());",
          "57:   for (int i = 0; i < 100; i++) {",
          "59:     EXPECT_THAT(output, ::testing::HasSubstr(s));",
          "60:   }",
          "61:   std::vector<std::string> o;",
          "62:   folly::split(\"\\r\\n\", output, o);",
          "63:   if (o.at(o.size() - 1) != answer) {",
          "65:         \"Final line should be {} not {}\", answer, o.at(o.size() - 1));",
          "66:   }",
          "67: }",
          "",
          "[Removed Lines]",
          "58:     std::string s = folly::sformat(\"testing_header{}: test_header\\r\\n\", i);",
          "64:     FAIL() << folly::sformat(",
          "",
          "[Added Lines]",
          "59:     std::string s = fmt::format(\"testing_header{}: test_header\\r\\n\", i);",
          "65:     FAIL() << fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/GeneratedCodeHelper.cpp||thrift/lib/cpp2/GeneratedCodeHelper.cpp": [
          "File: thrift/lib/cpp2/GeneratedCodeHelper.cpp -> thrift/lib/cpp2/GeneratedCodeHelper.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: namespace si {",
          "275: [[noreturn]] void throw_app_exn_unimplemented(char const* const name) {",
          "276:   throw TApplicationException(",
          "278: }",
          "279: } // namespace si",
          "280: } // namespace detail",
          "",
          "[Removed Lines]",
          "277:       folly::sformat(\"Function {} is unimplemented\", name));",
          "",
          "[Added Lines]",
          "277:       fmt::format(\"Function {} is unimplemented\", name));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/GeneratedCodeHelper.h||thrift/lib/cpp2/GeneratedCodeHelper.h": [
          "File: thrift/lib/cpp2/GeneratedCodeHelper.h -> thrift/lib/cpp2/GeneratedCodeHelper.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <type_traits>",
          "19: #include <utility>",
          "22: #include <folly/Traits.h>",
          "23: #include <folly/futures/Future.h>",
          "24: #include <folly/io/Cursor.h>",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "21: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "644:   using h = helper_r<ProtocolReader>;",
          "645:   const char* fn = \"process\";",
          "646:   auto type = TApplicationException::TApplicationExceptionType::UNKNOWN_METHOD;",
          "648:   return h::process_exn(fn, type, msg, std::move(req), ctx, eb, protoSeqId);",
          "649: }",
          "",
          "[Removed Lines]",
          "647:   const auto msg = folly::sformat(\"Method name {} not found\", fname);",
          "",
          "[Added Lines]",
          "647:   const auto msg = fmt::format(\"Method name {} not found\", fname);",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/async/HTTPClientChannel.cpp||thrift/lib/cpp2/async/HTTPClientChannel.cpp": [
          "File: thrift/lib/cpp2/async/HTTPClientChannel.cpp -> thrift/lib/cpp2/async/HTTPClientChannel.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <utility>",
          "22: #include <proxygen/lib/http/HTTPCommonHeaders.h>",
          "23: #include <proxygen/lib/http/HTTPMethod.h>",
          "24: #include <proxygen/lib/http/codec/HTTP1xCodec.h>",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "21: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "446:   if (!oneway_ && cb_) {",
          "447:     if (!body_) {",
          "448:       requestError(folly::make_exception_wrapper<",
          "450:           \"Empty HTTP response, {}\",",
          "451:           (msg_ ? folly::to<std::string>(",
          "452:                       msg_->getStatusCode(), \", \", msg_->getStatusMessage())",
          "",
          "[Removed Lines]",
          "449:                    transport::TTransportException>(folly::sformat(",
          "",
          "[Added Lines]",
          "449:                    transport::TTransportException>(fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/protocol/DebugProtocol.cpp||thrift/lib/cpp2/protocol/DebugProtocol.cpp": [
          "File: thrift/lib/cpp2/protocol/DebugProtocol.cpp -> thrift/lib/cpp2/protocol/DebugProtocol.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     case TType::T_STREAM:",
          "72:       return \"stream\";",
          "73:     default:",
          "75:   }",
          "76: }",
          "",
          "[Removed Lines]",
          "74:       return folly::format(\"unknown({})\", int(type)).str();",
          "",
          "[Added Lines]",
          "74:       return fmt::format(\"unknown({})\", int(type));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/protocol/DebugProtocol.h||thrift/lib/cpp2/protocol/DebugProtocol.h": [
          "File: thrift/lib/cpp2/protocol/DebugProtocol.h -> thrift/lib/cpp2/protocol/DebugProtocol.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #ifndef CPP2_PROTOCOL_DEBUGPROTOCOL_H_",
          "22: #define CPP2_PROTOCOL_DEBUGPROTOCOL_H_",
          "25: #include <folly/io/Cursor.h>",
          "26: #include <folly/io/IOBuf.h>",
          "27: #include <thrift/lib/cpp2/Thrift.h>",
          "",
          "[Removed Lines]",
          "24: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "24: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "128:   }",
          "130:   template <class... Args>",
          "135:   }",
          "137:   void writeIndent() {",
          "",
          "[Removed Lines]",
          "131:   void writePlain(Args&&... args) {",
          "132:     const auto& fmt = folly::format(std::forward<Args>(args)...);",
          "133:     auto cb = [this](folly::StringPiece sp) { this->writeRaw(sp); };",
          "134:     fmt(cb);",
          "",
          "[Added Lines]",
          "131:   void writePlain(const Args&... args) {",
          "132:     writeRaw(fmt::format(args...));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp||thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp": [
          "File: thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp -> thrift/lib/cpp2/protocol/JSONProtocolCommon.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <type_traits>",
          "23: namespace {",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "21: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:     [[noreturn]] void JSONProtocolReaderCommon::throwUnexpectedChar(",
          "159:         char const ch,",
          "160:         char const expected) {",
          "165: }",
          "167: [[noreturn]] void JSONProtocolReaderCommon::throwInvalidEscapeChar(",
          "",
          "[Removed Lines]",
          "161:   constexpr auto fmt =",
          "162:       \"expected '{}' (hex 0x{:02x}), read '{:c}' (hex 0x{:02x})\";",
          "163:   auto const msg = folly::sformat(fmt, expected, expected, ch, ch);",
          "164:   throw TProtocolException(TProtocolException::INVALID_DATA, msg);",
          "",
          "[Added Lines]",
          "161:       auto const msg = fmt::format(",
          "162:           \"expected '{0}' (hex {0:#02x}), read '{1}' (hex {1:#02x})\",",
          "163:           expected,",
          "164:           ch);",
          "165:       throw TProtocolException(TProtocolException::INVALID_DATA, msg);",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/reflection/legacy_reflection.cpp||thrift/lib/cpp2/reflection/legacy_reflection.cpp": [
          "File: thrift/lib/cpp2/reflection/legacy_reflection.cpp -> thrift/lib/cpp2/reflection/legacy_reflection.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp2/reflection/legacy_reflection.h>",
          "20: #include <folly/lang/Bits.h>",
          "21: #include <folly/ssl/OpenSSLHash.h>",
          "",
          "[Removed Lines]",
          "19: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/CompactProtocolBench.cpp||thrift/lib/cpp2/test/CompactProtocolBench.cpp": [
          "File: thrift/lib/cpp2/test/CompactProtocolBench.cpp -> thrift/lib/cpp2/test/CompactProtocolBench.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <iostream>",
          "22: #include <vector>",
          "25: #include <folly/Benchmark.h>",
          "27: #include <folly/Optional.h>",
          "28: #include <thrift/lib/cpp2/protocol/Serializer.h>",
          "30: using namespace std;",
          "",
          "[Removed Lines]",
          "23: #include <folly/portability/GFlags.h>",
          "24: #include <glog/logging.h>",
          "26: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "24: #include <fmt/core.h>",
          "27: #include <folly/portability/GFlags.h>",
          "28: #include <glog/logging.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:     for (size_t j = 0; j < triplesz; ++j) {",
          "49:       Deep2 data2;",
          "50:       for (size_t k = 0; k < triplesz; ++k) {",
          "52:       }",
          "53:       data1.deeps.push_back(move(data2));",
          "54:     }",
          "",
          "[Removed Lines]",
          "51:         data2.datas.push_back(sformat(\"omg[{}, {}, {}]\", i, j, k));",
          "",
          "[Added Lines]",
          "52:         data2.datas.push_back(fmt::format(\"omg[{}, {}, {}]\", i, j, k));",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/ProtoBufBench.cpp||thrift/lib/cpp2/test/ProtoBufBench.cpp": [
          "File: thrift/lib/cpp2/test/ProtoBufBench.cpp -> thrift/lib/cpp2/test/ProtoBufBench.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp2/test/ProtoBufBenchData.pb.h>",
          "19: #include <folly/portability/GFlags.h>",
          "20: #include <glog/logging.h>",
          "21: #include <folly/Benchmark.h>",
          "23: #include <folly/Optional.h>",
          "25: using namespace std;",
          "",
          "[Removed Lines]",
          "22: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/ProtocolBench.cpp||thrift/lib/cpp2/test/ProtocolBench.cpp": [
          "File: thrift/lib/cpp2/test/ProtocolBench.cpp -> thrift/lib/cpp2/test/ProtocolBench.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <thrift/lib/cpp2/protocol/Serializer.h>",
          "18: #include <thrift/lib/cpp2/test/gen-cpp2/ProtocolBenchData_types.h>",
          "20: #include <folly/portability/GFlags.h>",
          "21: #include <glog/logging.h>",
          "22: #include <folly/Benchmark.h>",
          "24: #include <folly/Optional.h>",
          "26: #include <vector>",
          "",
          "[Removed Lines]",
          "23: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/SerializationTest.cpp||thrift/lib/cpp2/test/SerializationTest.cpp": [
          "File: thrift/lib/cpp2/test/SerializationTest.cpp -> thrift/lib/cpp2/test/SerializationTest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <folly/portability/GTest.h>",
          "18: #include <memory>",
          "21: #include <thrift/lib/cpp2/protocol/Serializer.h>",
          "23: using namespace std;",
          "24: using namespace folly;",
          "",
          "[Removed Lines]",
          "19: #include <folly/Format.h>",
          "20: #include <thrift/lib/cpp2/test/gen-cpp2/TestService.h>",
          "",
          "[Added Lines]",
          "20: #include <fmt/core.h>",
          "22: #include <thrift/lib/cpp2/test/gen-cpp2/TestService.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:   unique_ptr<TestStructRecursive> s;",
          "217:   for (size_t i = levels; i > 0; --i) {",
          "218:     auto t = make_unique<TestStructRecursive>();",
          "220:     t->cdr = std::move(s);",
          "221:     s = std::move(t);",
          "222:   }",
          "",
          "[Removed Lines]",
          "219:     t->tag = sformat(\"level-{}\", i);",
          "",
          "[Added Lines]",
          "220:     t->tag = fmt::format(\"level-{}\", i);",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp||thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp": [
          "File: thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp -> thrift/lib/cpp2/test/ThriftServerExceptionTest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <thrift/lib/cpp2/test/gen-cpp2/Raiser.h>",
          "17: #include <thrift/lib/cpp2/util/ScopedServerInterfaceThread.h>",
          "19: #include <folly/portability/GTest.h>",
          "21: using namespace std;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "168:   auto lulz_s = string{\"lulz\"};",
          "171:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "172:       EXPECT_EQ(AppExn::TApplicationExceptionType::UNKNOWN, e.getType());",
          "",
          "[Removed Lines]",
          "169:   auto lulz_w = sformat(\"lulz: {}\", message);",
          "",
          "[Added Lines]",
          "170:   auto lulz_w = fmt::format(\"lulz: {}\", message);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "209:   auto banal_s = string{\"apache::thrift::test::Banal\"};",
          "213:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "214:       EXPECT_EQ(banal_w_guess, string(e.what()));",
          "",
          "[Removed Lines]",
          "210:   auto banal_w_guess = sformat(\"{0}: ::{0}\", banal_s);",
          "211:   auto banal_w_known = sformat(\"::{0}\", banal_s);",
          "",
          "[Added Lines]",
          "211:   auto banal_w_guess = fmt::format(\"{0}: ::{0}\", banal_s);",
          "212:   auto banal_w_known = fmt::format(\"::{0}\", banal_s);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "245:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "247:   auto fiery_s = string{\"apache::thrift::test::Fiery\"};",
          "251:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "252:       EXPECT_EQ(fiery_w_guess, string(e.what()));",
          "",
          "[Removed Lines]",
          "248:   auto fiery_w_guess = sformat(\"{0}: ::{0}\", fiery_s);",
          "249:   auto fiery_w_known = sformat(\"::{0}\", fiery_s);",
          "",
          "[Added Lines]",
          "249:   auto fiery_w_guess = fmt::format(\"{0}: ::{0}\", fiery_s);",
          "250:   auto fiery_w_known = fmt::format(\"::{0}\", fiery_s);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "285:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "287:   auto lulz_s = string{\"lulz\"};",
          "290:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "291:       EXPECT_EQ(AppExn::TApplicationExceptionType::UNKNOWN, e.getType());",
          "",
          "[Removed Lines]",
          "288:   auto lulz_w = sformat(\"lulz: {}\", message);",
          "",
          "[Added Lines]",
          "289:   auto lulz_w = fmt::format(\"lulz: {}\", message);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "326:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "328:   auto banal_s = string{\"apache::thrift::test::Banal\"};",
          "332:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "333:       EXPECT_EQ(banal_w_guess, string(e.what()));",
          "",
          "[Removed Lines]",
          "329:   auto banal_w_guess = sformat(\"{0}: ::{0}\", banal_s);",
          "330:   auto banal_w_known = sformat(\"::{0}\", banal_s);",
          "",
          "[Added Lines]",
          "330:   auto banal_w_guess = fmt::format(\"{0}: ::{0}\", banal_s);",
          "331:   auto banal_w_known = fmt::format(\"::{0}\", banal_s);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "364:   auto client = runner.newClient<RaiserAsyncClient>(&eb);",
          "366:   auto fiery_s = string{\"apache::thrift::test::Fiery\"};",
          "370:   EXPECT_TRUE(exn(client->future_doBland(), [&](const AppExn& e) {",
          "371:       EXPECT_EQ(fiery_w_guess, string(e.what()));",
          "",
          "[Removed Lines]",
          "367:   auto fiery_w_guess = sformat(\"{0}: ::{0}\", fiery_s);",
          "368:   auto fiery_w_known = sformat(\"::{0}\", fiery_s);",
          "",
          "[Added Lines]",
          "368:   auto fiery_w_guess = fmt::format(\"{0}: ::{0}\", fiery_s);",
          "369:   auto fiery_w_known = fmt::format(\"::{0}\", fiery_s);",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/test/util/TestInterface.cpp||thrift/lib/cpp2/test/util/TestInterface.cpp": [
          "File: thrift/lib/cpp2/test/util/TestInterface.cpp -> thrift/lib/cpp2/test/util/TestInterface.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <thrift/lib/cpp2/test/util/TestInterface.h>",
          "19: #include <folly/io/Cursor.h>",
          "21: const std::string kEchoSuffix(45, 'c');",
          "",
          "[Removed Lines]",
          "18: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "18: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:     usleep(size);",
          "26:   }",
          "29: }",
          "31: void TestInterface::noResponse(int64_t size) { usleep(size); }",
          "",
          "[Removed Lines]",
          "28:   _return = folly::format(\"test{0}\", size).str();",
          "",
          "[Added Lines]",
          "28:   _return = fmt::format(\"test{0}\", size);",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp||thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp -> thrift/lib/cpp2/transport/rocket/client/RequestContext.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <glog/logging.h>",
          "22: #include <folly/Likely.h>",
          "23: #include <folly/Range.h>",
          "24: #include <folly/io/IOBuf.h>",
          "",
          "[Removed Lines]",
          "21: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "21: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     case State::WRITE_SCHEDULED:",
          "59:     case State::WRITE_SENDING:",
          "60:     case State::WRITE_SENT:",
          "62:           \"Returned from Baton::wait() with unexpected state {} in {}\",",
          "63:           static_cast<int>(state_),",
          "64:           __func__);",
          "",
          "[Removed Lines]",
          "61:       LOG(FATAL) << folly::sformat(",
          "",
          "[Added Lines]",
          "61:       LOG(FATAL) << fmt::format(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:     case State::WRITE_NOT_SCHEDULED:",
          "98:     case State::WRITE_SCHEDULED:",
          "99:     case State::WRITE_SENDING:",
          "101:           \"Returned from Baton::wait() with unexpected state {} in {}\",",
          "102:           static_cast<int>(state_),",
          "103:           __func__);",
          "",
          "[Removed Lines]",
          "100:       LOG(FATAL) << folly::sformat(",
          "",
          "[Added Lines]",
          "100:       LOG(FATAL) << fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp||thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp -> thrift/lib/cpp2/transport/rocket/client/RocketClient.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string>",
          "22: #include <utility>",
          "24: #include <folly/Conv.h>",
          "25: #include <folly/CppAttributes.h>",
          "26: #include <folly/ExceptionWrapper.h>",
          "28: #include <folly/GLog.h>",
          "29: #include <folly/Likely.h>",
          "30: #include <folly/Try.h>",
          "",
          "[Removed Lines]",
          "27: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "24: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347:   queue_.markNextSendingAsSent();",
          "350:       \"Failed to write to remote endpoint. Wrote {} bytes.\"",
          "351:       \" AsyncSocketException: {}\",",
          "352:       bytesWritten,",
          "",
          "[Removed Lines]",
          "349:   close(folly::make_exception_wrapper<std::runtime_error>(folly::sformat(",
          "",
          "[Added Lines]",
          "349:   close(folly::make_exception_wrapper<std::runtime_error>(fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/framing/Frames.cpp||thrift/lib/cpp2/transport/rocket/framing/Frames.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/framing/Frames.cpp -> thrift/lib/cpp2/transport/rocket/framing/Frames.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include <glog/logging.h>",
          "25: #include <folly/CPortability.h>",
          "27: #include <folly/Likely.h>",
          "28: #include <folly/Range.h>",
          "29: #include <folly/Utility.h>",
          "",
          "[Removed Lines]",
          "26: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "25: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "543:   const auto minorVersion = cursor.readBE<uint16_t>();",
          "545:   if (majorVersion != 1 || minorVersion != 0) {",
          "547:         \"SETUP frame received with unsupported version {}.{}\",",
          "548:         majorVersion,",
          "549:         minorVersion));",
          "",
          "[Removed Lines]",
          "546:     throw std::runtime_error(folly::sformat(",
          "",
          "[Added Lines]",
          "546:     throw std::runtime_error(fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp||thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp -> thrift/lib/cpp2/transport/rocket/server/RocketServerConnection.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <memory>",
          "20: #include <utility>",
          "22: #include <folly/ExceptionWrapper.h>",
          "24: #include <folly/Likely.h>",
          "25: #include <folly/MapUtil.h>",
          "26: #include <folly/ScopeGuard.h>",
          "",
          "[Removed Lines]",
          "23: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "22: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:       if (it == partialFrames_.end()) {",
          "189:         return close(folly::make_exception_wrapper<RocketException>(",
          "190:             ErrorCode::INVALID,",
          "192:                 \"Unexpected PAYLOAD frame received on stream {}\",",
          "193:                 static_cast<uint32_t>(streamId))));",
          "194:       }",
          "",
          "[Removed Lines]",
          "191:             folly::sformat(",
          "",
          "[Added Lines]",
          "191:             fmt::format(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:     default:",
          "212:       close(folly::make_exception_wrapper<RocketException>(",
          "213:           ErrorCode::INVALID,",
          "215:               \"Received unhandleable frame type ({})\",",
          "216:               static_cast<uint8_t>(frameType))));",
          "217:   }",
          "",
          "[Removed Lines]",
          "214:           folly::sformat(",
          "",
          "[Added Lines]",
          "214:           fmt::format(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "273:     size_t bytesWritten,",
          "274:     const folly::AsyncSocketException& ex) noexcept {",
          "275:   DestructorGuard dg(this);",
          "277:       \"Failed to write to remote endpoint. Wrote {} bytes.\"",
          "278:       \" AsyncSocketException: {}\",",
          "279:       bytesWritten,",
          "",
          "[Removed Lines]",
          "276:   close(folly::make_exception_wrapper<std::runtime_error>(folly::sformat(",
          "",
          "[Added Lines]",
          "276:   close(folly::make_exception_wrapper<std::runtime_error>(fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp||thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp -> thrift/lib/cpp2/transport/rocket/server/ThriftRocketServerHandler.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <memory>",
          "20: #include <utility>",
          "22: #include <folly/ExceptionString.h>",
          "23: #include <folly/ExceptionWrapper.h>",
          "24: #include <folly/GLog.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include <fmt/core.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "116:   } catch (const std::exception& e) {",
          "117:     return connection.close(folly::make_exception_wrapper<RocketException>(",
          "118:         ErrorCode::INVALID_SETUP,",
          "120:             \"Error deserializing SETUP payload: {}\",",
          "121:             folly::exceptionStr(e).toStdString())));",
          "122:   }",
          "",
          "[Removed Lines]",
          "119:         folly::sformat(",
          "",
          "[Added Lines]",
          "120:         fmt::format(",
          "",
          "---------------"
        ],
        "thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp||thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp": [
          "File: thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp -> thrift/lib/cpp2/transport/rocket/test/network/RocketNetworkTest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <folly/portability/GTest.h>",
          "23: #include <folly/ExceptionWrapper.h>",
          "25: #include <folly/Range.h>",
          "26: #include <folly/SocketAddress.h>",
          "27: #include <folly/Try.h>",
          "",
          "[Removed Lines]",
          "24: #include <folly/Format.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}