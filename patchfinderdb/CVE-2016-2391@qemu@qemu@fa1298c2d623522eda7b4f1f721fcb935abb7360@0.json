{
  "cve_id": "CVE-2016-2391",
  "cve_desc": "The ohci_bus_start function in the USB OHCI emulation support (hw/usb/hcd-ohci.c) in QEMU allows local guest OS administrators to cause a denial of service (NULL pointer dereference and QEMU process crash) via vectors related to multiple eof_timers.",
  "repo": "qemu/qemu",
  "patch_hash": "fa1298c2d623522eda7b4f1f721fcb935abb7360",
  "patch_info": {
    "commit_hash": "fa1298c2d623522eda7b4f1f721fcb935abb7360",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/fa1298c2d623522eda7b4f1f721fcb935abb7360",
    "files": [
      "hw/usb/hcd-ohci.c"
    ],
    "message": "ohci: allocate timer only once.\n\nAllocate timer once, at init time, instead of allocating/freeing\nit all the time when starting/stopping the bus.  Simplifies the\ncode, also fixes bugs (memory leak) due to missing checks whenever\nthe time is already allocated or not.\n\nCc: Prasad J Pandit <pjp@fedoraproject.org>\nReported-by: Zuozhi Fzz <zuozhi.fzz@alibaba-inc.com>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
    "before_after_code_files": [
      "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c"
    ]
  },
  "patch_diff": {
    "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c": [
      "File: hw/usb/hcd-ohci.c -> hw/usb/hcd-ohci.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1348: static int ohci_bus_start(OHCIState *ohci)",
      "1349: {",
      "1360:     trace_usb_ohci_start(ohci->name);",
      "",
      "[Removed Lines]",
      "1350:     ohci->eof_timer = timer_new_ns(QEMU_CLOCK_VIRTUAL,",
      "1351:                     ohci_frame_boundary,",
      "1352:                     ohci);",
      "1354:     if (ohci->eof_timer == NULL) {",
      "1355:         trace_usb_ohci_bus_eof_timer_failed(ohci->name);",
      "1356:         ohci_die(ohci);",
      "1357:         return 0;",
      "1358:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1373: static void ohci_bus_stop(OHCIState *ohci)",
      "1374: {",
      "1375:     trace_usb_ohci_stop(ohci->name);",
      "1381: }",
      "",
      "[Removed Lines]",
      "1376:     if (ohci->eof_timer) {",
      "1377:         timer_del(ohci->eof_timer);",
      "1378:         timer_free(ohci->eof_timer);",
      "1379:     }",
      "1380:     ohci->eof_timer = NULL;",
      "",
      "[Added Lines]",
      "1366:     timer_del(ohci->eof_timer);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1907:     usb_packet_init(&ohci->usb_packet);",
      "1909:     ohci->async_td = 0;",
      "1910: }",
      "1912: #define TYPE_PCI_OHCI \"pci-ohci\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1897:     ohci->eof_timer = timer_new_ns(QEMU_CLOCK_VIRTUAL,",
      "1898:                                    ohci_frame_boundary, ohci);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1976:     if (!ohci->masterbus) {",
      "1977:         usb_bus_release(&s->bus);",
      "1978:     }",
      "1979: }",
      "1981: static void usb_ohci_reset_pci(DeviceState *d)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1969:     timer_del(s->eof_timer);",
      "1970:     timer_free(s->eof_timer);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2041: {",
      "2042:     OHCIState *ohci = opaque;",
      "2054: }",
      "2056: static const VMStateDescription vmstate_ohci_eof_timer = {",
      "2057:     .name = \"ohci-core/eof-timer\",",
      "2058:     .version_id = 1,",
      "2059:     .minimum_version_id = 1,",
      "2061:     .needed = ohci_eof_timer_needed,",
      "2062:     .fields = (VMStateField[]) {",
      "2063:         VMSTATE_TIMER_PTR(eof_timer, OHCIState),",
      "",
      "[Removed Lines]",
      "2044:     return ohci->eof_timer != NULL;",
      "2045: }",
      "2047: static int ohci_eof_timer_pre_load(void *opaque)",
      "2048: {",
      "2049:     OHCIState *ohci = opaque;",
      "2051:     ohci_bus_start(ohci);",
      "2053:     return 0;",
      "2060:     .pre_load = ohci_eof_timer_pre_load,",
      "",
      "[Added Lines]",
      "2036:     return timer_pending(ohci->eof_timer);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fd0a10cd20a1c5ae829be32f3364dae88f435c4e",
      "candidate_info": {
        "commit_hash": "fd0a10cd20a1c5ae829be32f3364dae88f435c4e",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/fd0a10cd20a1c5ae829be32f3364dae88f435c4e",
        "files": [
          "hw/usb/hcd-ohci.c"
        ],
        "message": "ohci: delay first SOF interrupt\n\nOn overcommitted CPU, kernel can be so slow that an interrupt can\nbe triggered by the device whereas the driver is not ready to receive\nit. This drives us into an infinite loop.\n\nThis does not happen on real hardware because real hardware never send\ninterrupt immediately after the controller has been moved to OPERATION state.\n\nThis patch tries to delay the first SOF interrupt to let driver exits from\nthe critical section (which is not protected against interrupts...)\n\nSome details:\n\n- ohci_irq(): the OHCI interrupt handler, acknowledges the SOF IRQ\n  only if the state of the driver (rh_state) is OHCI_STATE_RUNNING.\n  So if this interrupt happens and the driver is not in this state,\n  the function is called again and again, moving the system to a\n  CPU starvation.\n\n- ohci_rh_resume(): the driver re-enables operation with OHCI_USB_OPER.\n  In QEMU this start the SOF timer and QEMU starts to send IRQs. As\n  the driver is not in OHCI_STATE_RUNNING and not protected against IRQ,\n  the ohci_irq() can be called and the driver never moved to\n  OHCI_STATE_RUNNING.\n\nSuggested-by: Gerd Hoffmann <kraxel@redhat.com>\nSigned-off-by: Laurent Vivier <lvivier@redhat.com>\nReviewed-by: Thomas Huth <thuth@redhat.com>\nMessage-id: 1452109525-32150-2-git-send-email-lvivier@redhat.com\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c"
          ],
          "candidate": [
            "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/usb/hcd-ohci.c||hw/usb/hcd-ohci.c": [
          "File: hw/usb/hcd-ohci.c -> hw/usb/hcd-ohci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1241:     return active;",
          "1242: }",
          "1246: {",
          "1247:     ohci->sof_time = qemu_clock_get_ns(QEMU_CLOCK_VIRTUAL);",
          "1248:     timer_mod(ohci->eof_timer, ohci->sof_time + usb_frame_time);",
          "1249:     ohci_set_interrupt(ohci, OHCI_INTR_SF);",
          "1250: }",
          "",
          "[Removed Lines]",
          "1245: static void ohci_sof(OHCIState *ohci)",
          "",
          "[Added Lines]",
          "1245: static void ohci_eof_timer(OHCIState *ohci)",
          "1249: }",
          "1251: static void ohci_sof(OHCIState *ohci)",
          "1252: {",
          "1253:     ohci_eof_timer(ohci);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1354:     trace_usb_ohci_start(ohci->name);",
          "1358:     return 1;",
          "1359: }",
          "",
          "[Removed Lines]",
          "1356:     ohci_sof(ohci);",
          "",
          "[Added Lines]",
          "1366:     ohci_eof_timer(ohci);",
          "",
          "---------------"
        ]
      }
    }
  ]
}