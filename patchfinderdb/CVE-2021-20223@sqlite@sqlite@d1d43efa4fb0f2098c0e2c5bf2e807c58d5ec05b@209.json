{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f68bf5fbe61a8d848fa5fe187ea548ce27940103",
      "candidate_info": {
        "commit_hash": "f68bf5fbe61a8d848fa5fe187ea548ce27940103",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f68bf5fbe61a8d848fa5fe187ea548ce27940103",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "test/gencol1.test"
        ],
        "message": "Fix an incorrect NEVER() macro.\n\nFossilOrigin-Name: 96b6a76da09a94182414ec1a56da91728c37329d2b55f889e433054ca21605ce",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 92893b7980cbb0c6e26bc0b21390a717193205c9897fea5f26476462928897f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1629:   u8 eType = COLFLAG_VIRTUAL;",
          "1630:   Table *pTab = pParse->pNewTable;",
          "1631:   Column *pCol;",
          "1633:   pCol = &(pTab->aCol[pTab->nCol-1]);",
          "1634:   if( IN_DECLARE_VTAB ){",
          "1635:     sqlite3ErrorMsg(pParse, \"virtual tables cannot use computed columns\");",
          "",
          "[Removed Lines]",
          "1632:   if( NEVER(pTab==0) ) goto generated_done;",
          "",
          "[Added Lines]",
          "1632:   if( pTab==0 ){",
          "1634:     goto generated_done;",
          "1635:   }",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:   SELECT 200, * FROM t3;",
          "263: } {100 1 1}",
          "265: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265: # 2019-12-04 Generated column in a CREATE TABLE IF NOT EXISTS that",
          "266: # does already exist.",
          "267: #",
          "268: sqlite3 db :memory:",
          "269: do_execsql_test gencol1-10.10 {",
          "270:   CREATE TABLE t1(aa,bb);",
          "271:   CREATE TABLE IF NOT EXISTS t1(aa, bb AS (aa+1));",
          "272:   PRAGMA integrity_check;",
          "273: } {ok}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b47c9c98e9e00bc24d11e6c6cad2c754b05dd02",
      "candidate_info": {
        "commit_hash": "1b47c9c98e9e00bc24d11e6c6cad2c754b05dd02",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1b47c9c98e9e00bc24d11e6c6cad2c754b05dd02",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/malloc.c"
        ],
        "message": "Reduce the number of call sites to dbMallocRawFinish in the case where n > lookaside.sz\n\nFossilOrigin-Name: e392e7f22861ce4b66e4bf84b59c8fd38568fc241a699e001f47fd82011f4d28",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/malloc.c||src/malloc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 611020e3378f4c81c277cccd84807ae51a816bbab6c3d887c91c5e5af3b5225f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/malloc.c||src/malloc.c": [
          "File: src/malloc.c -> src/malloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "578:   assert( sqlite3_mutex_held(db->mutex) );",
          "579:   assert( db->pnBytesFreed==0 );",
          "580:   if( n>db->lookaside.sz ){",
          "583:     }",
          "585:     return dbMallocRawFinish(db, n);",
          "586:   }",
          "587: # ifndef SQLITE_OMIT_MINI_LOOKASIDE",
          "",
          "[Removed Lines]",
          "581:     if( db->lookaside.bDisable ){",
          "582:       return db->mallocFailed ? 0 : dbMallocRawFinish(db, n);",
          "584:     db->lookaside.anStat[1]++;",
          "",
          "[Added Lines]",
          "581:     if( !db->lookaside.bDisable ){",
          "582:       db->lookaside.anStat[1]++;",
          "583:     }else if( db->mallocFailed ){",
          "584:       return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d43c0cbed20e8ccb944f6e78ee846df06bc0d5c8",
      "candidate_info": {
        "commit_hash": "d43c0cbed20e8ccb944f6e78ee846df06bc0d5c8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d43c0cbed20e8ccb944f6e78ee846df06bc0d5c8",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/e_droptrigger.test",
          "test/e_fkey.test",
          "test/fkey5.test",
          "test/hook.test"
        ],
        "message": "Update requirement marks due to wording improvements in the documentation.\n\nFossilOrigin-Name: bf875a1c7fcb2b41a4d3bd741bb358a635b869d0b6fc9d24385cd5779686d78c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/e_droptrigger.test||test/e_droptrigger.test",
          "test/e_fkey.test||test/e_fkey.test",
          "test/fkey5.test||test/fkey5.test",
          "test/hook.test||test/hook.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: eface2da2c0b3daee2a5fd640cca3d3757d0930f62900fc810c50c104635241d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/e_droptrigger.test||test/e_droptrigger.test": [
          "File: test/e_droptrigger.test -> test/e_droptrigger.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:   } $after",
          "128: }",
          "132: # is not fired by any subsequent INSERT, UPDATE or DELETE statements.",
          "133: #",
          "134: #   Test cases e_droptrigger-1.* test the first part of this statement",
          "",
          "[Removed Lines]",
          "130: # EVIDENCE-OF: R-50239-29811 Once removed, the trigger definition is no",
          "131: # longer present in the sqlite_master (or sqlite_temp_master) table and",
          "",
          "[Added Lines]",
          "130: # EVIDENCE-OF: R-04950-25529 Once removed, the trigger definition is no",
          "131: # longer present in the sqlite_schema (or sqlite_temp_schema) table and",
          "",
          "---------------"
        ],
        "test/e_fkey.test||test/e_fkey.test": [
          "File: test/e_fkey.test -> test/e_fkey.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2528: #",
          "2529: # Test that these adjustments are visible in the sqlite_master table.",
          "2530: #",
          "2533: # to reflect the new parent table name.",
          "2534: #",
          "2535: do_test e_fkey-56.1 {",
          "",
          "[Removed Lines]",
          "2531: # EVIDENCE-OF: R-63827-54774 The text of the child CREATE TABLE",
          "2532: # statement or statements stored in the sqlite_master table are modified",
          "",
          "[Added Lines]",
          "2531: # EVIDENCE-OF: R-43040-62530 The text of the child CREATE TABLE",
          "2532: # statement or statements stored in the sqlite_schema table are modified",
          "",
          "---------------"
        ],
        "test/fkey5.test||test/fkey5.test": [
          "File: test/fkey5.test -> test/fkey5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: # EVIDENCE-OF: R-15402-03103 PRAGMA schema.foreign_key_check; PRAGMA",
          "16: # schema.foreign_key_check(table-name);",
          "17: #",
          "19: # database, or the table called \"table-name\", for foreign key",
          "23: set testdir [file dirname $argv0]",
          "24: source $testdir/tester.tcl",
          "",
          "[Removed Lines]",
          "18: # EVIDENCE-OF: R-23918-17301 The foreign_key_check pragma checks the",
          "20: # constraints that are violated and returns one row of output for each",
          "21: # violation.",
          "",
          "[Added Lines]",
          "18: # EVIDENCE-OF: R-41653-15278 The foreign_key_check pragma checks the",
          "20: # constraints that are violated. The foreign_key_check pragma returns",
          "21: # one row output for each foreign key violation.",
          "",
          "---------------"
        ],
        "test/hook.test||test/hook.test": [
          "File: test/hook.test -> test/hook.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:   set ::update_hook {}",
          "143:   db update_hook [list lappend ::update_hook]",
          "144:   #",
          "148:   #",
          "149:   execsql {",
          "150:     CREATE TABLE t1(a INTEGER PRIMARY KEY, b);",
          "",
          "[Removed Lines]",
          "145:   # EVIDENCE-OF: R-52223-27275 The update hook is not invoked when",
          "146:   # internal system tables are modified (i.e. sqlite_master and",
          "147:   # sqlite_sequence).",
          "",
          "[Added Lines]",
          "145:   # EVIDENCE-OF: R-24531-54682 The update hook is not invoked when",
          "146:   # internal system tables are modified (i.e. sqlite_sequence).",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8caebb26c553943cea18003d1e2df99cbe3d2f52",
      "candidate_info": {
        "commit_hash": "8caebb26c553943cea18003d1e2df99cbe3d2f52",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8caebb26c553943cea18003d1e2df99cbe3d2f52",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wal.c"
        ],
        "message": "Improved error reporting if walLockExclusive() fails.\n\nFossilOrigin-Name: cf962d213abe1b55ebbcfecf1de9d5d61709509d1ce3cbd56d8cf4c9ad65e5a9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wal.c||src/wal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 74374aebf9abf3d6b6a3920967a079ceaa4c6276dc6c177682742c2be405b7b7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wal.c||src/wal.c": [
          "File: src/wal.c -> src/wal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1315:           pInfo->aReadMark[i] = READMARK_NOT_USED;",
          "1316:         }",
          "1317:         walUnlockExclusive(pWal, WAL_READ_LOCK(i), 1);",
          "1318:       }",
          "1319:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1318:       }else if( rc!=SQLITE_BUSY ){",
          "1319:         goto recovery_error;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0a8b712c15e2abc8bbc22d62ebec89c308451c0",
      "candidate_info": {
        "commit_hash": "e0a8b712c15e2abc8bbc22d62ebec89c308451c0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e0a8b712c15e2abc8bbc22d62ebec89c308451c0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c"
        ],
        "message": "Provide the SQLITE_DEFAULT_LEGACY_ALTER_TABLE compile-time option.\n\nFossilOrigin-Name: 63e659d9a793227604aa95685a8d83cd08305f1d01e135407a3ffc6d54482ab8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9a84d8eb44b12ddea921baa73ac3bffa8c8d23a852605dc1dbde37907360bd79",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3253: #endif",
          "3254: #if defined(SQLITE_DEFAULT_DEFENSIVE)",
          "3255:                  | SQLITE_Defensive",
          "3256: #endif",
          "3257:       ;",
          "3258:   sqlite3HashInit(&db->aCollSeq);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3256: #endif",
          "3257: #if defined(SQLITE_DEFAULT_LEGACY_ALTER_TABLE)",
          "3258:                  | SQLITE_LegacyAlter",
          "",
          "---------------"
        ]
      }
    }
  ]
}