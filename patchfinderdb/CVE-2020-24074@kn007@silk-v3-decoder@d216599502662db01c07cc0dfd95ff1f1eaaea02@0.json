{
  "cve_id": "CVE-2020-24074",
  "cve_desc": "The decode program in silk-v3-decoder Version:20160922 Build By kn007 does not strictly check data, resulting in a buffer overflow.",
  "repo": "kn007/silk-v3-decoder",
  "patch_hash": "d216599502662db01c07cc0dfd95ff1f1eaaea02",
  "patch_info": {
    "commit_hash": "d216599502662db01c07cc0dfd95ff1f1eaaea02",
    "repo": "kn007/silk-v3-decoder",
    "commit_url": "https://github.com/kn007/silk-v3-decoder/commit/d216599502662db01c07cc0dfd95ff1f1eaaea02",
    "files": [
      "silk/test/Decoder.c"
    ],
    "message": "Merge pull request #64 from WinMin/master\n\nadd \"totBytes check, fix #62",
    "before_after_code_files": [
      "silk/test/Decoder.c||silk/test/Decoder.c"
    ]
  },
  "patch_diff": {
    "silk/test/Decoder.c||silk/test/Decoder.c": [
      "File: silk/test/Decoder.c -> silk/test/Decoder.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "361:         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {",
      "362:             totBytes += nBytesPerPacket[ i + 1 ];",
      "363:         }",
      "364:         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );",
      "365:         payloadEnd -= nBytesPerPacket[ 0 ];",
      "366:         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "365:         if (totBytes < 0 || totBytes > sizeof(payload))",
      "366:         {",
      "367:             fprintf( stderr, \"\\rPackets decoded:             %d\", totPackets );",
      "368:             return -1;",
      "369:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "453:         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {",
      "454:             totBytes += nBytesPerPacket[ i + 1 ];",
      "455:         }",
      "456:         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );",
      "457:         payloadEnd -= nBytesPerPacket[ 0 ];",
      "458:         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "464:         if (totBytes < 0 || totBytes > sizeof(payload))",
      "465:         {",
      "467:             fprintf( stderr, \"\\rPackets decoded:              %d\", totPackets );",
      "468:             return -1;",
      "469:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42b5315b7c4b64f1839eb62fd9ba9e182034e9c9",
      "candidate_info": {
        "commit_hash": "42b5315b7c4b64f1839eb62fd9ba9e182034e9c9",
        "repo": "kn007/silk-v3-decoder",
        "commit_url": "https://github.com/kn007/silk-v3-decoder/commit/42b5315b7c4b64f1839eb62fd9ba9e182034e9c9",
        "files": [
          "silk/test/Decoder.c"
        ],
        "message": "add totBytes check",
        "before_after_code_files": [
          "silk/test/Decoder.c||silk/test/Decoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/kn007/silk-v3-decoder/pull/64"
        ],
        "olp_code_files": {
          "patch": [
            "silk/test/Decoder.c||silk/test/Decoder.c"
          ],
          "candidate": [
            "silk/test/Decoder.c||silk/test/Decoder.c"
          ]
        }
      },
      "candidate_diff": {
        "silk/test/Decoder.c||silk/test/Decoder.c": [
          "File: silk/test/Decoder.c -> silk/test/Decoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {",
          "362:             totBytes += nBytesPerPacket[ i + 1 ];",
          "363:         }",
          "364:         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );",
          "365:         payloadEnd -= nBytesPerPacket[ 0 ];",
          "366:         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:         if (totBytes < 0 || totBytes > sizeof(payload))",
          "366:         {",
          "367:             fprintf( stderr, \"\\rPackets decoded:             %d\", totPackets );",
          "368:             return -1;",
          "369:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "453:         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {",
          "454:             totBytes += nBytesPerPacket[ i + 1 ];",
          "455:         }",
          "456:         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );",
          "457:         payloadEnd -= nBytesPerPacket[ 0 ];",
          "458:         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "464:         if (totBytes < 0 || totBytes > sizeof(payload))",
          "465:         {",
          "467:             fprintf( stderr, \"\\rPackets decoded:              %d\", totPackets );",
          "468:             return -1;",
          "469:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}