{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b6d6a54f8057d0adad13d4bcc11eb3f443079ddc",
      "candidate_info": {
        "commit_hash": "b6d6a54f8057d0adad13d4bcc11eb3f443079ddc",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b6d6a54f8057d0adad13d4bcc11eb3f443079ddc",
        "files": [
          "common.gypi"
        ],
        "message": "build: target OSX 10.5 when building on darwin",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:           'GCC_VERSION': '4.2',",
          "172:           'GCC_WARN_ABOUT_MISSING_NEWLINE': 'YES',  # -Wnewline-eof",
          "173:           'PREBINDING': 'NO',                       # No -Wl,-prebind",
          "174:           'USE_HEADERMAP': 'NO',",
          "175:           'OTHER_CFLAGS': [",
          "176:             '-fno-strict-aliasing',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:           'MACOSX_DEPLOYMENT_TARGET': '10.5',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d8c1fe1ed7ed3be91cd2cb12eda626e77a61c1e",
      "candidate_info": {
        "commit_hash": "2d8c1fe1ed7ed3be91cd2cb12eda626e77a61c1e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2d8c1fe1ed7ed3be91cd2cb12eda626e77a61c1e",
        "files": [
          "src/node.cc"
        ],
        "message": "Move prog_start_time init after isolate assigned",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2634: char** ProcessInit(int argc, char *argv[]) {",
          "2639:   argv = uv_setup_args(argc, argv);",
          "",
          "[Removed Lines]",
          "2636:   uv_uptime(&prog_start_time);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2770:   Load(process_l);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2766:   uv_uptime(&prog_start_time);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edbec3f8f3e8f8239a9b1c9a9a0a229efcdb4938",
      "candidate_info": {
        "commit_hash": "edbec3f8f3e8f8239a9b1c9a9a0a229efcdb4938",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/edbec3f8f3e8f8239a9b1c9a9a0a229efcdb4938",
        "files": [
          "src/node.cc",
          "src/node_isolate.cc"
        ],
        "message": "isolates: add _newIsolate() and _joinIsolate() to process object",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_isolate.cc||src/node_isolate.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1847: }",
          "1850: static Handle<Value> ProcessTitleGetter(Local<String> property,",
          "1851:                                         const AccessorInfo& info) {",
          "1852:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1850: static void RunIsolate(void* arg) {",
          "1851:   uv_loop_t* loop = uv_loop_new();",
          "1852:   Isolate* isolate = Isolate::New(loop);",
          "1853: }",
          "1856: static char magic_isolate_cookie_[] = \"magic isolate cookie\";",
          "1859: static Handle<Value> NewIsolate(const Arguments& args) {",
          "1860:   HandleScope scope;",
          "1862:   uv_thread_t* tid = new uv_thread_t;",
          "1864:   if (uv_thread_create(tid, RunIsolate, NULL))",
          "1865:     return Null();",
          "1867:   Local<ObjectTemplate> tpl = ObjectTemplate::New();",
          "1868:   tpl->SetInternalFieldCount(2);",
          "1870:   Local<Object> obj = tpl->NewInstance();",
          "1871:   obj->SetPointerInInternalField(0, magic_isolate_cookie_);",
          "1872:   obj->SetPointerInInternalField(1, tid);",
          "1874:   return scope.Close(obj);",
          "1875: }",
          "1878: static Handle<Value> JoinIsolate(const Arguments& args) {",
          "1879:   HandleScope scope;",
          "1881:   assert(args[0]->IsObject());",
          "1883:   Local<Object> obj = args[0]->ToObject();",
          "1884:   assert(obj->InternalFieldCount() == 2);",
          "1885:   assert(obj->GetPointerFromInternalField(0) == magic_isolate_cookie_);",
          "1887:   uv_thread_t* tid = (uv_thread_t*) obj->GetPointerFromInternalField(1);",
          "1889:   if (uv_thread_join(tid))",
          "1890:     return False(); // error",
          "1891:   else",
          "1892:     return True();  // ok",
          "1893: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2120:   NODE_SET_METHOD(process, \"binding\", Binding);",
          "2122:   return process;",
          "2123: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2168:   NODE_SET_METHOD(process, \"_newIsolate\", NewIsolate);",
          "2169:   NODE_SET_METHOD(process, \"_joinIsolate\", JoinIsolate);",
          "",
          "---------------"
        ],
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: Isolate::Isolate(uv_loop_t* loop) {",
          "38:   loop_ = loop;",
          "39:   isolate_ = v8::Isolate::GetCurrent();",
          "41:   assert(isolate_->GetData() == NULL);",
          "42:   isolate_->SetData(this);",
          "43: }",
          "",
          "[Removed Lines]",
          "40:   SLIST_INIT(&at_exit_callbacks_);",
          "",
          "[Added Lines]",
          "38:   SLIST_INIT(&at_exit_callbacks_);",
          "42:   if (isolate_ == NULL) {",
          "43:     isolate_ = v8::Isolate::New();",
          "44:     isolate_->Enter();",
          "45:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "634b4de2c835e5998a013c54303907878875115b",
      "candidate_info": {
        "commit_hash": "634b4de2c835e5998a013c54303907878875115b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/634b4de2c835e5998a013c54303907878875115b",
        "files": [
          "src/node.js",
          "test/simple/test-stdin-hang.js"
        ],
        "message": "Pause process.stdin in stdin getter\n\nOtherwise, it'll be ref'ed, and keep the process hanging.",
        "before_after_code_files": [
          "src/node.js||src/node.js",
          "test/simple/test-stdin-hang.js||test/simple/test-stdin-hang.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:       stdin.fd = fd;",
          "331:       return stdin;",
          "332:     });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:       stdin.pause();",
          "",
          "---------------"
        ],
        "test/simple/test-stdin-hang.js||test/simple/test-stdin-hang.js": [
          "File: test/simple/test-stdin-hang.js -> test/simple/test-stdin-hang.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "29: process.stdin;",
          "31: console.error('Should exit normally now.');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4359e8154d418d7fa048a38b2415a94364ffb093",
      "candidate_info": {
        "commit_hash": "4359e8154d418d7fa048a38b2415a94364ffb093",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4359e8154d418d7fa048a38b2415a94364ffb093",
        "files": [
          "deps/v8/src/debug-agent.cc"
        ],
        "message": "v8: debug: fix error handling in SendConnectMessage()\n\nThe old error handling code checked if the return value of Socket::Send() != 0,\nwhich is wrong because Socket::Send() can write less bytes than requested or\nreturn -1 on error.",
        "before_after_code_files": [
          "deps/v8/src/debug-agent.cc||deps/v8/src/debug-agent.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/debug-agent.cc||deps/v8/src/debug-agent.cc": [
          "File: deps/v8/src/debug-agent.cc -> deps/v8/src/debug-agent.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:                                            const char* embedding_host) {",
          "324:   static const int kBufferSize = 80;",
          "325:   char buffer[kBufferSize];  // Sending buffer.",
          "327:   int len;",
          "330:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "331:                      \"Type: connect\\r\\n\");",
          "335:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "336:                      \"V8-Version: %s\\r\\n\", v8::V8::GetVersion());",
          "340:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "341:                      \"Protocol-Version: 1\\r\\n\");",
          "345:   if (embedding_host != NULL) {",
          "346:     len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "347:                        \"Embedding-Host: %s\\r\\n\", embedding_host);",
          "350:   }",
          "352:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "353:                      \"%s: 0\\r\\n\", kContentLength);",
          "358:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize), \"\\r\\n\");",
          "",
          "[Removed Lines]",
          "326:   bool ok;",
          "332:   ok = conn->Send(buffer, len);",
          "333:   if (!ok) return false;",
          "337:   ok = conn->Send(buffer, len);",
          "338:   if (!ok) return false;",
          "342:   ok = conn->Send(buffer, len);",
          "343:   if (!ok) return false;",
          "348:     ok = conn->Send(buffer, len);",
          "349:     if (!ok) return false;",
          "354:   ok = conn->Send(buffer, len);",
          "355:   if (!ok) return false;",
          "359:   ok = conn->Send(buffer, len);",
          "360:   if (!ok) return false;",
          "",
          "[Added Lines]",
          "327:   int r;",
          "332:   r = conn->Send(buffer, len);",
          "333:   if (r != len) return false;",
          "337:   r = conn->Send(buffer, len);",
          "338:   if (r != len) return false;",
          "342:   r = conn->Send(buffer, len);",
          "343:   if (r != len) return false;",
          "348:     r = conn->Send(buffer, len);",
          "349:     if (r != len) return false;",
          "354:   r = conn->Send(buffer, len);",
          "355:   if (r != len) return false;",
          "359:   r = conn->Send(buffer, len);",
          "360:   if (r != len) return false;",
          "",
          "---------------"
        ]
      }
    }
  ]
}