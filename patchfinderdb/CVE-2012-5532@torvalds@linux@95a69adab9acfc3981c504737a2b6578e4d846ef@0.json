{
  "cve_id": "CVE-2012-5532",
  "cve_desc": "The main function in tools/hv/hv_kvp_daemon.c in hypervkvpd, as distributed in the Linux kernel before 3.8-rc1, allows local users to cause a denial of service (daemon exit) via a crafted application that sends a Netlink message.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2012-2669.",
  "repo": "torvalds/linux",
  "patch_hash": "95a69adab9acfc3981c504737a2b6578e4d846ef",
  "patch_info": {
    "commit_hash": "95a69adab9acfc3981c504737a2b6578e4d846ef",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/95a69adab9acfc3981c504737a2b6578e4d846ef",
    "files": [
      "tools/hv/hv_kvp_daemon.c"
    ],
    "message": "tools: hv: Netlink source address validation allows DoS\n\nThe source code without this patch caused hypervkvpd to exit when it processed\na spoofed Netlink packet which has been sent from an untrusted local user.\nNow Netlink messages with a non-zero nl_pid source address are ignored\nand a warning is printed into the syslog.\n\nSigned-off-by: Tomas Hozza <thozza@redhat.com>\nAcked-by:  K. Y. Srinivasan <kys@microsoft.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c"
    ]
  },
  "patch_diff": {
    "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c": [
      "File: tools/hv/hv_kvp_daemon.c -> tools/hv/hv_kvp_daemon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1486:   len = recvfrom(fd, kvp_recv_buffer, sizeof(kvp_recv_buffer), 0,",
      "1487:     addr_p, &addr_l);",
      "1490:    syslog(LOG_ERR, \"recvfrom failed; pid:%u error:%d %s\",",
      "1491:      addr.nl_pid, errno, strerror(errno));",
      "1492:    close(fd);",
      "1493:    return -1;",
      "1494:   }",
      "1496:   incoming_msg = (struct nlmsghdr *)kvp_recv_buffer;",
      "1497:   incoming_cn_msg = (struct cn_msg *)NLMSG_DATA(incoming_msg);",
      "1498:   hv_msg = (struct hv_kvp_msg *)incoming_cn_msg->data;",
      "",
      "[Removed Lines]",
      "1489:   if (len < 0 || addr.nl_pid) {",
      "",
      "[Added Lines]",
      "1489:   if (len < 0) {",
      "1496:   if (addr.nl_pid) {",
      "1497:    syslog(LOG_WARNING, \"Received packet from untrusted pid:%u\",",
      "1498:      addr.nl_pid);",
      "1499:    continue;",
      "1500:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c",
      "candidate_info": {
        "commit_hash": "bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c",
        "files": [
          "tools/hv/hv_kvp_daemon.c"
        ],
        "message": "Tools: hv: verify origin of netlink connector message\n\nThe SuSE security team suggested to use recvfrom instead of recv to be\ncertain that the connector message is originated from kernel.\n\nCVE-2012-2669\n\nSigned-off-by: Olaf Hering <olaf@aepfle.de>\nSigned-off-by: Marcus Meissner <meissner@suse.de>\nSigned-off-by: Sebastian Krahmer <krahmer@suse.de>\nSigned-off-by: K. Y. Srinivasan <kys@microsoft.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c"
          ],
          "candidate": [
            "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c"
          ]
        }
      },
      "candidate_diff": {
        "tools/hv/hv_kvp_daemon.c||tools/hv/hv_kvp_daemon.c": [
          "File: tools/hv/hv_kvp_daemon.c -> tools/hv/hv_kvp_daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "701:  pfd.fd = fd;",
          "703:  while (1) {",
          "704:   pfd.events = POLLIN;",
          "705:   pfd.revents = 0;",
          "706:   poll(&pfd, 1, -1);",
          "712:    close(fd);",
          "713:    return -1;",
          "714:   }",
          "",
          "[Removed Lines]",
          "708:   len = recv(fd, kvp_recv_buffer, sizeof(kvp_recv_buffer), 0);",
          "710:   if (len < 0) {",
          "711:    syslog(LOG_ERR, \"recv failed; error:%d\", len);",
          "",
          "[Added Lines]",
          "704:   struct sockaddr *addr_p = (struct sockaddr *) &addr;",
          "705:   socklen_t addr_l = sizeof(addr);",
          "710:   len = recvfrom(fd, kvp_recv_buffer, sizeof(kvp_recv_buffer), 0,",
          "711:     addr_p, &addr_l);",
          "713:   if (len < 0 || addr.nl_pid) {",
          "714:    syslog(LOG_ERR, \"recvfrom failed; pid:%u error:%d %s\",",
          "715:      addr.nl_pid, errno, strerror(errno));",
          "",
          "---------------"
        ]
      }
    }
  ]
}