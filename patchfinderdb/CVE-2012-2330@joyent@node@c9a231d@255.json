{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4899116d4b24b50fa23ac1de9befd35d37c3bd29",
      "candidate_info": {
        "commit_hash": "4899116d4b24b50fa23ac1de9befd35d37c3bd29",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4899116d4b24b50fa23ac1de9befd35d37c3bd29",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/accessors.cc",
          "deps/v8/src/ic.cc",
          "deps/v8/src/v8natives.js",
          "deps/v8/src/version.cc",
          "deps/v8/src/x64/code-stubs-x64.cc",
          "deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/new-function.js",
          "deps/v8/test/mjsunit/regress/regress-145201.js",
          "deps/v8/tools/gyp/v8.gyp"
        ],
        "message": "v8: upgrade to 3.11.10.22",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/accessors.cc||deps/v8/src/accessors.cc",
          "deps/v8/src/ic.cc||deps/v8/src/ic.cc",
          "deps/v8/src/v8natives.js||deps/v8/src/v8natives.js",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/src/x64/code-stubs-x64.cc||deps/v8/src/x64/code-stubs-x64.cc",
          "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/new-function.js||deps/v8/test/mjsunit/new-function.js",
          "deps/v8/test/mjsunit/regress/regress-145201.js||deps/v8/test/mjsunit/regress/regress-145201.js",
          "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "332:         'conditions': [",
          "333:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\" \\",
          "334:             or OS==\"android\"', {",
          "335:             'cflags': [",
          "336:               '-fdata-sections',",
          "337:               '-ffunction-sections',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:             'cflags!': [",
          "337:               '-O2',",
          "338:               '-Os',",
          "339:             ],",
          "",
          "---------------"
        ],
        "deps/v8/src/accessors.cc||deps/v8/src/accessors.cc": [
          "File: deps/v8/src/accessors.cc -> deps/v8/src/accessors.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:     caller = potential_caller;",
          "756:     potential_caller = it.next();",
          "757:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "758:   if (!caller->shared()->native() && potential_caller != NULL) {",
          "759:     caller = potential_caller;",
          "760:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/ic.cc||deps/v8/src/ic.cc": [
          "File: deps/v8/src/ic.cc -> deps/v8/src/ic.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "992:         if (callback->IsAccessorInfo()) {",
          "993:           Handle<AccessorInfo> info = Handle<AccessorInfo>::cast(callback);",
          "994:           if (v8::ToCData<Address>(info->getter()) == 0) return;",
          "996:           if (!info->IsCompatibleReceiver(*receiver)) return;",
          "997:           code = isolate()->stub_cache()->ComputeLoadCallback(",
          "998:               name, receiver, holder, info);",
          "",
          "[Removed Lines]",
          "995:           if (!receiver->HasFastProperties()) return;",
          "",
          "[Added Lines]",
          "995:           if (!holder->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1000:           Handle<Object> getter(Handle<AccessorPair>::cast(callback)->getter());",
          "1001:           if (!getter->IsJSFunction()) return;",
          "1002:           if (holder->IsGlobalObject()) return;",
          "1004:           code = isolate()->stub_cache()->ComputeLoadViaGetter(",
          "1005:               name, receiver, holder, Handle<JSFunction>::cast(getter));",
          "1006:         } else {",
          "",
          "[Removed Lines]",
          "1003:           if (!receiver->HasFastProperties()) return;",
          "",
          "[Added Lines]",
          "1003:           if (!holder->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1269:         Handle<AccessorInfo> callback =",
          "1270:             Handle<AccessorInfo>::cast(callback_object);",
          "1271:         if (v8::ToCData<Address>(callback->getter()) == 0) return;",
          "1273:         if (!callback->IsCompatibleReceiver(*receiver)) return;",
          "1274:         code = isolate()->stub_cache()->ComputeKeyedLoadCallback(",
          "1275:             name, receiver, holder, callback);",
          "",
          "[Removed Lines]",
          "1272:         if (!receiver->HasFastProperties()) return;",
          "",
          "[Added Lines]",
          "1272:         if (!holder->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1487:     case CALLBACKS: {",
          "1488:       Handle<Object> callback(lookup->GetCallbackObject());",
          "1489:       if (callback->IsAccessorInfo()) {",
          "1490:         Handle<AccessorInfo> info = Handle<AccessorInfo>::cast(callback);",
          "1491:         if (v8::ToCData<Address>(info->setter()) == 0) return;",
          "1493:         ASSERT(info->IsCompatibleReceiver(*receiver));",
          "1494:         code = isolate()->stub_cache()->ComputeStoreCallback(",
          "1495:             name, receiver, info, strict_mode);",
          "",
          "[Removed Lines]",
          "1492:         if (!receiver->HasFastProperties()) return;",
          "",
          "[Added Lines]",
          "1490:         ASSERT(*holder == *receiver);  // LookupForWrite checks this.",
          "1493:         if (!holder->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1497:         Handle<Object> setter(Handle<AccessorPair>::cast(callback)->setter());",
          "1498:         if (!setter->IsJSFunction()) return;",
          "1499:         if (holder->IsGlobalObject()) return;",
          "1501:         code = isolate()->stub_cache()->ComputeStoreViaSetter(",
          "1502:             name, receiver, Handle<JSFunction>::cast(setter), strict_mode);",
          "1503:       } else {",
          "",
          "[Removed Lines]",
          "1500:         if (!receiver->HasFastProperties()) return;",
          "",
          "[Added Lines]",
          "1501:         if (!holder->HasFastProperties()) return;",
          "",
          "---------------"
        ],
        "deps/v8/src/v8natives.js||deps/v8/src/v8natives.js": [
          "File: deps/v8/src/v8natives.js -> deps/v8/src/v8natives.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1658:   %FunctionMarkNameShouldPrintAsAnonymous(f);",
          "1659:   return %SetNewFunctionAttributes(f);",
          "1660: }",
          "",
          "[Removed Lines]",
          "1657:   var f = %CompileString(source)();",
          "",
          "[Added Lines]",
          "1657:   var global_receiver = %GlobalReceiver(global);",
          "1658:   var f = %_CallFunction(global_receiver, %CompileString(source));",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       19",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       22",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/code-stubs-x64.cc||deps/v8/src/x64/code-stubs-x64.cc": [
          "File: deps/v8/src/x64/code-stubs-x64.cc -> deps/v8/src/x64/code-stubs-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "999:     SmiCodeGenerateHeapNumberResults allow_heapnumber_results) {",
          "",
          "[Removed Lines]",
          "1002:   Register left = rdx;",
          "1003:   Register right = rax;",
          "",
          "[Added Lines]",
          "1002:   const Register left = rdx;",
          "1003:   const Register right = rax;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1043:     case Token::DIV:",
          "1047:       __ movq(rbx, rax);",
          "1048:       __ movq(rcx, rdx);",
          "1050:       break;",
          "1052:     case Token::MOD:",
          "1056:       __ movq(rbx, rax);",
          "1057:       __ movq(rcx, rdx);",
          "1059:       break;",
          "1061:     case Token::BIT_OR: {",
          "",
          "[Removed Lines]",
          "1045:       left = rcx;",
          "1046:       right = rbx;",
          "1049:       __ SmiDiv(rax, left, right, &use_fp_on_smis);",
          "1054:       left = rcx;",
          "1055:       right = rbx;",
          "1058:       __ SmiMod(rax, left, right, &use_fp_on_smis);",
          "",
          "[Added Lines]",
          "1047:       __ SmiDiv(rax, rcx, rbx, &use_fp_on_smis);",
          "1054:       __ SmiMod(rax, rcx, rbx, &use_fp_on_smis);",
          "",
          "---------------"
        ],
        "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc": [
          "File: deps/v8/test/cctest/test-api.cc -> deps/v8/test/cctest/test-api.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "14568: static v8::Handle<Value> GetterWhichReturns42(Local<String> name,",
          "14569:                                               const AccessorInfo& info) {",
          "14570:   return v8_num(42);",
          "14571: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14570:   CHECK(v8::Utils::OpenHandle(*info.This())->IsJSObject());",
          "14571:   CHECK(v8::Utils::OpenHandle(*info.Holder())->IsJSObject());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14574: static void SetterWhichSetsYOnThisTo23(Local<String> name,",
          "14575:                                        Local<Value> value,",
          "14576:                                        const AccessorInfo& info) {",
          "14577:   info.This()->Set(v8_str(\"y\"), v8_num(23));",
          "14578: }",
          "14581: TEST(SetterOnConstructorPrototype) {",
          "14582:   v8::HandleScope scope;",
          "14583:   Local<ObjectTemplate> templ = ObjectTemplate::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14579:   CHECK(v8::Utils::OpenHandle(*info.This())->IsJSObject());",
          "14580:   CHECK(v8::Utils::OpenHandle(*info.Holder())->IsJSObject());",
          "14585: Handle<Value> FooGetInterceptor(Local<String> name,",
          "14586:                                 const AccessorInfo& info) {",
          "14587:   CHECK(v8::Utils::OpenHandle(*info.This())->IsJSObject());",
          "14588:   CHECK(v8::Utils::OpenHandle(*info.Holder())->IsJSObject());",
          "14589:   if (!name->Equals(v8_str(\"foo\"))) return Handle<Value>();",
          "14590:   return v8_num(42);",
          "14591: }",
          "14594: Handle<Value> FooSetInterceptor(Local<String> name,",
          "14595:                                 Local<Value> value,",
          "14596:                                 const AccessorInfo& info) {",
          "14597:   CHECK(v8::Utils::OpenHandle(*info.This())->IsJSObject());",
          "14598:   CHECK(v8::Utils::OpenHandle(*info.Holder())->IsJSObject());",
          "14599:   if (!name->Equals(v8_str(\"foo\"))) return Handle<Value>();",
          "14600:   info.This()->Set(v8_str(\"y\"), v8_num(23));",
          "14601:   return v8_num(23);",
          "14602: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16813: }",
          "16816: THREADED_TEST(Regress137002a) {",
          "16817:   i::FLAG_allow_natives_syntax = true;",
          "16818:   v8::HandleScope scope;",
          "16819:   LocalContext context;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16840: static void Helper137002(bool do_store,",
          "16841:                          bool polymorphic,",
          "16842:                          bool remove_accessor,",
          "16843:                          bool interceptor) {",
          "16844:   LocalContext context;",
          "16845:   Local<ObjectTemplate> templ = ObjectTemplate::New();",
          "16846:   if (interceptor) {",
          "16847:     templ->SetNamedPropertyHandler(FooGetInterceptor, FooSetInterceptor);",
          "16848:   } else {",
          "16849:     templ->SetAccessor(v8_str(\"foo\"),",
          "16850:                        GetterWhichReturns42,",
          "16851:                        SetterWhichSetsYOnThisTo23);",
          "16852:   }",
          "16853:   context->Global()->Set(v8_str(\"obj\"), templ->NewInstance());",
          "16857:   CompileRun(do_store ?",
          "16858:              \"function f(x) { x.foo = void 0; }\" :",
          "16859:              \"function f(x) { return x.foo; }\");",
          "16860:   CompileRun(\"obj.y = void 0;\");",
          "16861:   if (!interceptor) {",
          "16862:     CompileRun(\"%OptimizeObjectForAddingMultipleProperties(obj, 1);\");",
          "16863:   }",
          "16864:   CompileRun(\"obj.__proto__ = null;\"",
          "16865:              \"f(obj); f(obj); f(obj);\");",
          "16866:   if (polymorphic) {",
          "16867:     CompileRun(\"f({});\");",
          "16868:   }",
          "16869:   CompileRun(\"obj.y = void 0;\"",
          "16870:              \"%OptimizeFunctionOnNextCall(f);\");",
          "16871:   if (remove_accessor) {",
          "16872:     CompileRun(\"delete obj.foo;\");",
          "16873:   }",
          "16874:   CompileRun(\"var result = f(obj);\");",
          "16875:   if (do_store) {",
          "16876:     CompileRun(\"result = obj.y;\");",
          "16877:   }",
          "16878:   if (remove_accessor && !interceptor) {",
          "16879:     CHECK(context->Global()->Get(v8_str(\"result\"))->IsUndefined());",
          "16880:   } else {",
          "16881:     CHECK_EQ(do_store ? 23 : 42,",
          "16882:              context->Global()->Get(v8_str(\"result\"))->Int32Value());",
          "16883:   }",
          "16884: }",
          "16888:   i::FLAG_allow_natives_syntax = true;",
          "16889:   i::FLAG_compilation_cache = false;",
          "16890:   v8::HandleScope scope;",
          "16891:   for (int i = 0; i < 16; i++) {",
          "16892:     Helper137002(i & 8, i & 4, i & 2, i & 1);",
          "16893:   }",
          "16894: }",
          "16897: THREADED_TEST(Regress137002b) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16823:                      SetterWhichSetsYOnThisTo23);",
          "16824:   context->Global()->Set(v8_str(\"obj\"), templ->NewInstance());",
          "16830:              \"obj.__proto__ = null;\"",
          "16839:   i::FLAG_allow_natives_syntax = true;",
          "16840:   v8::HandleScope scope;",
          "16841:   LocalContext context;",
          "",
          "[Removed Lines]",
          "16828:   CompileRun(\"function f(x) { return x.foo; }\"",
          "16829:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16831:              \"f(obj); f(obj); f({});\"",
          "16832:              \"%OptimizeFunctionOnNextCall(f);\"",
          "16833:              \"var result = f(obj);\");",
          "16834:   CHECK_EQ(42, context->Global()->Get(v8_str(\"result\"))->Int32Value());",
          "16835: }",
          "16838: THREADED_TEST(Regress137002b) {",
          "",
          "[Added Lines]",
          "16909:   CompileRun(\"function load(x) { return x.foo; }\"",
          "16910:              \"function store(x) { x.foo = void 0; }\"",
          "16911:              \"function keyed_load(x, key) { return x[key]; }\"",
          "16915:              \"function load2(x) { void 0; return x.foo; }\"",
          "16916:              \"function store2(x) { void 0; x.foo = void 0; }\"",
          "16917:              \"function keyed_load2(x, key) { void 0; return x[key]; }\"",
          "16919:              \"obj.y = void 0;\"",
          "16921:              \"var subobj = {};\"",
          "16922:              \"subobj.y = void 0;\"",
          "16923:              \"subobj.__proto__ = obj;\"",
          "16924:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16927:              \"load(obj); load(obj);\"",
          "16928:              \"load2(subobj); load2(subobj);\"",
          "16929:              \"store(obj); store(obj);\"",
          "16930:              \"store2(subobj); store2(subobj);\"",
          "16931:              \"keyed_load(obj, 'foo'); keyed_load(obj, 'foo');\"",
          "16932:              \"keyed_load2(subobj, 'foo'); keyed_load2(subobj, 'foo');\"",
          "16936:              \"load(obj);\"",
          "16937:              \"load2(subobj);\"",
          "16938:              \"store(obj);\"",
          "16939:              \"store2(subobj);\"",
          "16940:              \"keyed_load(obj, 'foo');\"",
          "16941:              \"keyed_load2(subobj, 'foo');\"",
          "16944:              \"delete obj.foo;\"",
          "16945:              \"obj.y = void 0;\"",
          "16946:              \"subobj.y = void 0;\"",
          "16948:              \"var load_result = load(obj);\"",
          "16949:              \"var load_result2 = load2(subobj);\"",
          "16950:              \"var keyed_load_result = keyed_load(obj, 'foo');\"",
          "16951:              \"var keyed_load_result2 = keyed_load2(subobj, 'foo');\"",
          "16952:              \"store(obj);\"",
          "16953:              \"store2(subobj);\"",
          "16954:              \"var y_from_obj = obj.y;\"",
          "16955:              \"var y_from_subobj = subobj.y;\");",
          "16956:   CHECK(context->Global()->Get(v8_str(\"load_result\"))->IsUndefined());",
          "16957:   CHECK(context->Global()->Get(v8_str(\"load_result2\"))->IsUndefined());",
          "16958:   CHECK(context->Global()->Get(v8_str(\"keyed_load_result\"))->IsUndefined());",
          "16959:   CHECK(context->Global()->Get(v8_str(\"keyed_load_result2\"))->IsUndefined());",
          "16960:   CHECK(context->Global()->Get(v8_str(\"y_from_obj\"))->IsUndefined());",
          "16961:   CHECK(context->Global()->Get(v8_str(\"y_from_subobj\"))->IsUndefined());",
          "16962: }",
          "16965: THREADED_TEST(Regress142088) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16852:              \"obj.__proto__ = null;\"",
          "16856: }",
          "",
          "[Removed Lines]",
          "16850:   CompileRun(\"function f(x) { return x.foo; }\"",
          "16851:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16853:              \"f(obj); f(obj); delete obj.foo;\"",
          "16854:              \"var result = f(obj);\");",
          "16855:   CHECK(context->Global()->Get(v8_str(\"result\"))->IsUndefined());",
          "",
          "[Added Lines]",
          "16977:   CompileRun(\"function load(x) { return x.foo; }\"",
          "16978:              \"function store(x) { x.foo = void 0; }\"",
          "16979:              \"function keyed_load(x, key) { return x[key]; }\"",
          "16983:              \"function load2(x) { void 0; return x.foo; }\"",
          "16984:              \"function store2(x) { void 0; x.foo = void 0; }\"",
          "16985:              \"function keyed_load2(x, key) { void 0; return x[key]; }\"",
          "16988:              \"var subobj = {};\"",
          "16989:              \"subobj.__proto__ = obj;\"",
          "16990:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16993:              \"load(obj); load(obj);\"",
          "16994:              \"load2(subobj); load2(subobj);\"",
          "16995:              \"store(obj);\"",
          "16996:              \"store2(subobj);\"",
          "16997:              \"keyed_load(obj, 'foo'); keyed_load(obj, 'foo');\"",
          "16998:              \"keyed_load2(subobj, 'foo'); keyed_load2(subobj, 'foo');\"",
          "17001:              \"delete obj.foo;\"",
          "17002:              \"obj.y = void 0;\"",
          "17003:              \"subobj.y = void 0;\"",
          "17005:              \"var load_result = load(obj);\"",
          "17006:              \"var load_result2 = load2(subobj);\"",
          "17007:              \"var keyed_load_result = keyed_load(obj, 'foo');\"",
          "17008:              \"var keyed_load_result2 = keyed_load2(subobj, 'foo');\"",
          "17009:              \"store(obj);\"",
          "17010:              \"store2(subobj);\"",
          "17011:              \"var y_from_obj = obj.y;\"",
          "17012:              \"var y_from_subobj = subobj.y;\");",
          "17013:   CHECK(context->Global()->Get(v8_str(\"load_result\"))->IsUndefined());",
          "17014:   CHECK(context->Global()->Get(v8_str(\"load_result2\"))->IsUndefined());",
          "17015:   CHECK(context->Global()->Get(v8_str(\"keyed_load_result\"))->IsUndefined());",
          "17016:   CHECK(context->Global()->Get(v8_str(\"keyed_load_result2\"))->IsUndefined());",
          "17017:   CHECK(context->Global()->Get(v8_str(\"y_from_obj\"))->IsUndefined());",
          "17018:   CHECK(context->Global()->Get(v8_str(\"y_from_subobj\"))->IsUndefined());",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/new-function.js||deps/v8/test/mjsunit/new-function.js": [
          "File: deps/v8/test/mjsunit/new-function.js -> deps/v8/test/mjsunit/new-function.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: var x;",
          "29: try {",
          "30:   Function(\"}), x = this, (function() {\");",
          "31: } catch(e) {",
          "32:   print(\"Caught \" + e);",
          "33: }",
          "34: assertTrue(x == \"[object global]\");",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-145201.js||deps/v8/test/mjsunit/regress/regress-145201.js": [
          "File: deps/v8/test/mjsunit/regress/regress-145201.js -> deps/v8/test/mjsunit/regress/regress-145201.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: var net = [];",
          "32: var x = 0;",
          "34: function collect () {",
          "35:   function item(operator) {",
          "36:     binary(operator, 1, false);",
          "37:     binary(operator, 1, true);",
          "38:     binary(operator, '{}', false);",
          "39:     binary(operator, '{}', true);",
          "40:     binary(operator, '\"x\"', false);",
          "41:     binary(operator, '\"x\"', true);",
          "42:     unary(operator, \"\");",
          "43:   }",
          "45:   function unary(op, after) {",
          "47:     try {",
          "48:       eval(op + \" custom \" + after);",
          "49:     } catch(e) {",
          "50:     }",
          "51:   }",
          "53:   function binary(op, other_side, inverted) {",
          "55:     try {",
          "56:       if (inverted) {",
          "57:         eval(\"custom \" + op + \" \" + other_side);",
          "58:       } else {",
          "59:         eval(other_side + \" \" + op + \" custom\");",
          "60:       }",
          "61:     } catch(e) {",
          "62:     }",
          "63:   }",
          "65:   function catcher() {",
          "66:     var caller = catcher.caller;",
          "67:     if (/native/i.test(caller) || /ADD/.test(caller)) {",
          "68:       net[caller] = 0;",
          "69:     }",
          "70:   }",
          "72:   var custom = Object.create(null, {",
          "73:     toString: { value: catcher },",
          "74:     length: { get: catcher }",
          "75:   });",
          "77:   item('^');",
          "78:   item('~');",
          "79:   item('<<');",
          "80:   item('<');",
          "81:   item('==');",
          "82:   item('>>>');",
          "83:   item('>>');",
          "84:   item('|');",
          "85:   item('-');",
          "86:   item('*');",
          "87:   item('&');",
          "88:   item('%');",
          "89:   item('+');",
          "90:   item('in');",
          "91:   item('instanceof');",
          "92:   unary('{}[', ']');",
          "93:   unary('delete {}[', ']');",
          "94:   unary('(function() {}).apply(null, ', ')');",
          "95: }",
          "97: collect();",
          "98: collect();",
          "99: collect();",
          "101: var keys = 0;",
          "102: for (var key in net) {",
          "103:   print(key);",
          "104:   keys++;",
          "105: }",
          "107: assertTrue(keys == 0);",
          "",
          "---------------"
        ],
        "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp": [
          "File: deps/v8/tools/gyp/v8.gyp -> deps/v8/tools/gyp/v8.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "721:                 '../../src/win32-math.h',",
          "722:               ],",
          "723:               'msvs_disabled_warnings': [4351, 4355, 4800],",
          "727:               'link_settings':  {",
          "728:                 'libraries': [ '-lwinmm.lib', '-lws2_32.lib' ],",
          "729:               },",
          "",
          "[Removed Lines]",
          "724:               'direct_dependent_settings': {",
          "725:                 'msvs_disabled_warnings': [4351, 4355, 4800],",
          "726:               },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1bf704a571b73d0d6dc6d2d488432c2f6ebf3890",
      "candidate_info": {
        "commit_hash": "1bf704a571b73d0d6dc6d2d488432c2f6ebf3890",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1bf704a571b73d0d6dc6d2d488432c2f6ebf3890",
        "files": [
          "src/node_io_watcher.cc"
        ],
        "message": "iowatcher: add deprecation warning",
        "before_after_code_files": [
          "src/node_io_watcher.cc||src/node_io_watcher.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_io_watcher.cc||src/node_io_watcher.cc": [
          "File: src/node_io_watcher.cc -> src/node_io_watcher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: Handle<Value> IOWatcher::New(const Arguments& args) {",
          "83:   if (!args.IsConstructCall()) {",
          "84:     return FromConstructorTemplate(constructor_template, args);",
          "85:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   fprintf(stderr, \"WARNING: don't use IOWatcher, it'll be removed in v0.9\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fa0bca2ad58ad1d91557f8ae7f467370c0290d6",
      "candidate_info": {
        "commit_hash": "1fa0bca2ad58ad1d91557f8ae7f467370c0290d6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1fa0bca2ad58ad1d91557f8ae7f467370c0290d6",
        "files": [
          "lib/net.js",
          "test/simple/test-net-settimeout.js"
        ],
        "message": "net: ignore socket.setTimeout(Infinity) (and NaN)",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-net-settimeout.js||test/simple/test-net-settimeout.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "162: Socket.prototype.setTimeout = function(msecs, callback) {",
          "164:     timers.enroll(this, msecs);",
          "165:     timers.active(this);",
          "166:     if (callback) {",
          "",
          "[Removed Lines]",
          "163:   if (msecs > 0) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-net-settimeout.js||test/simple/test-net-settimeout.js": [
          "File: test/simple/test-net-settimeout.js -> test/simple/test-net-settimeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: });",
          "34: server.listen(common.PORT);",
          "42: });",
          "",
          "[Removed Lines]",
          "36: var socket = net.createConnection(common.PORT, 'localhost');",
          "38: socket.setTimeout(T, function() {",
          "39:   socket.destroy();",
          "40:   server.close();",
          "41:   assert.ok(false);",
          "44: socket.setTimeout(0);",
          "46: setTimeout(function() {",
          "47:   socket.destroy();",
          "48:   server.close();",
          "49:   assert.ok(true);",
          "50: }, T * 2);",
          "",
          "[Added Lines]",
          "36: var killers = [0, Infinity, NaN];",
          "38: var left = killers.length;",
          "39: killers.forEach(function(killer) {",
          "40:   var socket = net.createConnection(common.PORT, 'localhost');",
          "42:   socket.setTimeout(T, function() {",
          "43:     socket.destroy();",
          "44:     if (--left === 0) server.close();",
          "45:     assert.ok(killer !== 0);",
          "46:     clearTimeout(timeout);",
          "47:   });",
          "49:   socket.setTimeout(killer);",
          "51:   var timeout = setTimeout(function() {",
          "52:     socket.destroy();",
          "53:     if (--left === 0) server.close();",
          "54:     assert.ok(killer === 0);",
          "55:   }, T * 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e2df04b3538c83e4e3ddc81308ca1bde3d80fc6",
      "candidate_info": {
        "commit_hash": "2e2df04b3538c83e4e3ddc81308ca1bde3d80fc6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2e2df04b3538c83e4e3ddc81308ca1bde3d80fc6",
        "files": [
          "common.gypi"
        ],
        "message": "Windows: disable RTTI and exceptions",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             'OmitFramePointers': 'true',",
          "54:             'EnableFunctionLevelLinking': 'true',",
          "55:             'EnableIntrinsicFunctions': 'true',",
          "56:             'AdditionalOptions': [",
          "57:               '/MP', # compile across multiple CPUs",
          "58:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:             'RuntimeTypeInfo': 'false',",
          "57:             'ExceptionHandling': '0',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e10bd5177f99ae029d08077ff77c50444697e25c",
      "candidate_info": {
        "commit_hash": "e10bd5177f99ae029d08077ff77c50444697e25c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e10bd5177f99ae029d08077ff77c50444697e25c",
        "files": [
          "test/simple/test-signal-handler.js"
        ],
        "message": "disable simple/test-signal-handler on Windows",
        "before_after_code_files": [
          "test/simple/test-signal-handler.js||test/simple/test-signal-handler.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-signal-handler.js||test/simple/test-signal-handler.js": [
          "File: test/simple/test-signal-handler.js -> test/simple/test-signal-handler.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: var common = require('../common');",
          "26: var assert = require('assert');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: if (process.platform === 'win32') {",
          "25:   process.exit(0);",
          "26: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}