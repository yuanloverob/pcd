{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7fc7c8556e5745dca30d561ec46776a7d293e93",
      "candidate_info": {
        "commit_hash": "b7fc7c8556e5745dca30d561ec46776a7d293e93",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b7fc7c8556e5745dca30d561ec46776a7d293e93",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_hexio.c"
        ],
        "message": "Fix a harmless unused variable warning in the test logic.\n\nFossilOrigin-Name: d7673a445f4cde8f71153ce81efdc34fbed8b8625714d54afae1a83d548671ff",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_hexio.c||src/test_hexio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8ea1dc727d391b15d0c4fa858ff68d5b8a63dde46408f24027dac8d28f044cbd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_hexio.c||src/test_hexio.c": [
          "File: src/test_hexio.c -> src/test_hexio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "393:   int nOut = 0;",
          "394:   int nAlloc = 0;",
          "395:   int i;",
          "398:   if( objc!=2 ){",
          "399:     Tcl_WrongNumArgs(interp, 1, objv, \"LIST\");",
          "",
          "[Removed Lines]",
          "396:   int rc = TCL_OK;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "035f6d909fcdd2b36320b07aec608a6c75187593",
      "candidate_info": {
        "commit_hash": "035f6d909fcdd2b36320b07aec608a6c75187593",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/035f6d909fcdd2b36320b07aec608a6c75187593",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Do not allow ALTER TABLE ADD COLUMN for a STORED column.\n\nFossilOrigin-Name: 42fc08bc1528a34a603c2c085b515766a8d33ae7ea0350a52b0ca24b94ebcbc5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 30065716878d4058e75eb510b0b27b68e5193d04625eb173210de8061f20f499",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:       }",
          "350:       sqlite3ValueFree(pVal);",
          "351:     }",
          "352:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   }else if( pCol->colFlags & COLFLAG_STORED ){",
          "353:     sqlite3ErrorMsg(pParse, \"cannot add a STORED column\");",
          "354:     return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb5567123f13ff7f915069d2d4cdaf832ff0baa9",
      "candidate_info": {
        "commit_hash": "fb5567123f13ff7f915069d2d4cdaf832ff0baa9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fb5567123f13ff7f915069d2d4cdaf832ff0baa9",
        "files": [
          "configure",
          "manifest",
          "manifest.uuid",
          "test/dbfuzz2.c"
        ],
        "message": "Add the --limit N option to dbfuzz2.  Set the default callback limit to 250K.\n\nFossilOrigin-Name: b99f8512c06b9d47e48b028781265512ce8b812ae4e6af0a7139a093cf9a8f74",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/dbfuzz2.c||test/dbfuzz2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 80e951fce3e5aaa224c8dba6449832d2efabcdc24e86eb6b7833f85cf08ecc00",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz2.c||test/dbfuzz2.c": [
          "File: test/dbfuzz2.c -> test/dbfuzz2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170: static int progress_handler(void *pNotUsed){",
          "171:   nCb++;",
          "172:   if( nCb<mxCb ) return 0;",
          "173:   if( eVerbosity>=1 ){",
          "174:     printf(\"-- Progress limit of %d reached\\n\", mxCb);",
          "175:   }",
          "176:   return 1;",
          "177: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:   if( bVdbeDebug ){",
          "190:     sqlite3_exec(db, \"PRAGMA vdbe_debug=ON\", 0, 0, 0);",
          "191:   }",
          "192:   for(i=0; i<sizeof(azSql)/sizeof(azSql[0]); i++){",
          "193:     if( eVerbosity>=1 ){",
          "194:       printf(\"%s\\n\", azSql[i]);",
          "195:       fflush(stdout);",
          "196:     }",
          "197:     zErr = 0;",
          "198:     rc = sqlite3_exec(db, azSql[i], 0, 0, &zErr);",
          "199:     if( rc && eVerbosity>=1 ){",
          "200:       printf(\"-- rc=%d zErr=%s\\n\", rc, zErr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   if( mxCb>0 ){",
          "212:     sqlite3_progress_handler(db, 10, progress_handler, 0);",
          "213:   }",
          "220:     nCb = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "249:         bVdbeDebug = 1;",
          "250:         continue;",
          "251:       }",
          "252:       if( strcmp(z,\"memtrace\")==0 ){",
          "253:         sqlite3MemTraceActivate(stdout);",
          "254:         continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "275:       if( strcmp(z,\"limit\")==0 ){",
          "276:         if( i+1==argc ){",
          "277:           fprintf(stderr, \"missing argument to %s\\n\", argv[i]);",
          "278:           exit(1);",
          "279:         }",
          "280:         mxCb = strtol(argv[++i], 0, 0);",
          "281:         continue;",
          "282:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d493353e9991159a69540f9732df8ff6be2aa2d6",
      "candidate_info": {
        "commit_hash": "d493353e9991159a69540f9732df8ff6be2aa2d6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d493353e9991159a69540f9732df8ff6be2aa2d6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/treeview.c"
        ],
        "message": "Enhance the TreeView logic to show information about Expr.op2 for FUNCTION and COLUMN nodes.\n\nFossilOrigin-Name: aceeaf9e28767a0880a16872867a1f57bff163acd0f10d19d5688068077590fa",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/treeview.c||src/treeview.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2978b65ebe25eeabe543b67cb266308cceb20082a4ae71565d6d083d7c08bc9f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:     case TK_COLUMN: {",
          "424:       if( pExpr->iTable<0 ){",
          "427:       }else{",
          "428:         sqlite3TreeViewLine(pView, \"{%d:%d}%s\",",
          "429:                              pExpr->iTable, pExpr->iColumn, zFlgs);",
          "",
          "[Removed Lines]",
          "426:         sqlite3TreeViewLine(pView, \"COLUMN(%d)%s\", pExpr->iColumn, zFlgs);",
          "",
          "[Added Lines]",
          "426:         char zOp2[16];",
          "427:         if( pExpr->op2 ){",
          "428:           sqlite3_snprintf(sizeof(zOp2),zOp2,\" op2=0x%02x\",pExpr->op2);",
          "429:         }else{",
          "430:           zOp2[0] = 0;",
          "431:         }",
          "432:         sqlite3TreeViewLine(pView, \"COLUMN(%d)%s%s\",",
          "433:                                     pExpr->iColumn, zFlgs, zOp2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:       if( pExpr->op==TK_AGG_FUNCTION ){",
          "567:         sqlite3TreeViewLine(pView, \"AGG_FUNCTION%d %Q%s\",",
          "568:                              pExpr->op2, pExpr->u.zToken, zFlgs);",
          "569:       }else{",
          "570:         sqlite3TreeViewLine(pView, \"FUNCTION %Q%s\", pExpr->u.zToken, zFlgs);",
          "571:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "576:       }else if( pExpr->op2!=0 ){",
          "577:         const char *zOp2;",
          "578:         char zBuf[8];",
          "579:         sqlite3_snprintf(sizeof(zBuf),zBuf,\"0x%02x\",pExpr->op2);",
          "580:         zOp2 = zBuf;",
          "581:         if( pExpr->op2==NC_IsCheck ) zOp2 = \"NC_IsCheck\";",
          "582:         if( pExpr->op2==NC_IdxExpr ) zOp2 = \"NC_IdxExpr\";",
          "583:         if( pExpr->op2==NC_PartIdx ) zOp2 = \"NC_PartIdx\";",
          "584:         if( pExpr->op2==NC_GenCol ) zOp2 = \"NC_GenCol\";",
          "585:         sqlite3TreeViewLine(pView, \"FUNCTION %Q%s op2=%s\",",
          "586:                             pExpr->u.zToken, zFlgs, zOp2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5ddecb2f09f3949d309433a87d3225dd7ea96af",
      "candidate_info": {
        "commit_hash": "d5ddecb2f09f3949d309433a87d3225dd7ea96af",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d5ddecb2f09f3949d309433a87d3225dd7ea96af",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c"
        ],
        "message": "Minor simplification of NULL value handling for STAT4.\n\nFossilOrigin-Name: 69bad9257f8db6a2a761bdd298d972eb48d4f845ec11dedc802ba3bafb979915",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fe3c3fd30294d15cdfe29e9c49f3c8968e864ec8a114282561642f75586ab09",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1511:   }else if( op==TK_NULL ){",
          "1512:     pVal = valueNew(db, pCtx);",
          "1513:     if( pVal==0 ) goto no_mem;",
          "1515:   }",
          "1516: #ifndef SQLITE_OMIT_BLOB_LITERAL",
          "1517:   else if( op==TK_BLOB ){",
          "",
          "[Removed Lines]",
          "1514:     sqlite3VdbeMemNumerify(pVal);",
          "",
          "[Added Lines]",
          "1514:     sqlite3VdbeMemSetNull(pVal);",
          "",
          "---------------"
        ]
      }
    }
  ]
}