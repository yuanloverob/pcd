{
  "cve_id": "CVE-2021-39191",
  "cve_desc": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In versions prior to 2.4.9.4, the 3rd-party init SSO functionality of mod_auth_openidc was reported to be vulnerable to an open redirect attack by supplying a crafted URL in the `target_link_uri` parameter. A patch in version 2.4.9.4 made it so that the `OIDCRedirectURLsAllowed` setting must be applied to the `target_link_uri` parameter. There are no known workarounds aside from upgrading to a patched version.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
  "patch_info": {
    "commit_hash": "03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
    "files": [
      "AUTHORS",
      "ChangeLog",
      "auth_openidc.conf",
      "configure.ac",
      "src/mod_auth_openidc.c"
    ],
    "message": "apply OIDCRedirectURLsAllowed setting to target_link_uri\n\ncloses #672; thanks @Meheni\nrelease 2.4.9.4\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "auth_openidc.conf||auth_openidc.conf",
      "configure.ac||configure.ac",
      "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
    ]
  },
  "patch_diff": {
    "auth_openidc.conf||auth_openidc.conf": [
      "File: auth_openidc.conf -> auth_openidc.conf",
      "--- Hunk 1 ---",
      "[Context before]",
      "918: #OIDCStateInputHeaders [none|user-agent|x-forwarded-for|both]",
      "920: # Define one or more regular expressions that specify URLs (or domains) allowed for post logout and",
      "923: #   OIDCRedirectURLsAllowed ^https://www.example.com ^https://(\\w+).example.org ^https://example.net/app",
      "924: # or:",
      "925: #   OIDCRedirectURLsAllowed ^https://www.example.com/logout$ ^https://www.example.com/app/return_to$",
      "",
      "[Removed Lines]",
      "921: # other redirects such as the \"return_to\" value on refresh token requests, and the \"login_uri\" value",
      "922: # on session management based logins through the OP iframe, e.g.:",
      "",
      "[Added Lines]",
      "921: # other redirects such as the \"return_to\" value on refresh token requests, the \"login_uri\" value",
      "922: # on session management based logins through the OP iframe, and the \"target_link_uri\" parameter in",
      "923: # 3rd-party initiated logins, e.g.:",
      "",
      "---------------"
    ],
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9.3],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9.4],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
      "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2457:  return TRUE;",
      "2458: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2460: #define OIDC_MAX_URL_LENGTH 8192 * 2",
      "2462: static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,",
      "2463:   const char *redirect_to_url, apr_byte_t restrict_to_host, char **err_str,",
      "2464:   char **err_desc) {",
      "2465:  apr_uri_t uri;",
      "2466:  const char *c_host = NULL;",
      "2467:  apr_hash_index_t *hi = NULL;",
      "2468:  size_t i = 0;",
      "2469:  char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);",
      "2472:  for (i = 0; i < strlen(url); i++)",
      "2473:   if (url[i] == '\\\\')",
      "2474:    url[i] = '/';",
      "2476:  if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {",
      "2479:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2480:   return FALSE;",
      "2481:  }",
      "2483:  if (c->redirect_urls_allowed != NULL) {",
      "2484:   for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi =",
      "2485:     apr_hash_next(hi)) {",
      "2486:    apr_hash_this(hi, (const void**) &c_host, NULL, NULL);",
      "2487:    if (oidc_util_regexp_first_match(r->pool, url, c_host,",
      "2488:      NULL, err_str) == TRUE)",
      "2489:     break;",
      "2490:   }",
      "2491:   if (hi == NULL) {",
      "2494:      apr_psprintf(r->pool,",
      "2495:        \"value does not match the list of allowed redirect URLs: %s\",",
      "2496:        url);",
      "2497:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2498:    return FALSE;",
      "2499:   }",
      "2500:  } else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {",
      "2501:   c_host = oidc_get_current_url_host(r);",
      "2502:   if ((strstr(c_host, uri.hostname) == NULL)",
      "2503:     || (strstr(uri.hostname, c_host) == NULL)) {",
      "2506:      apr_psprintf(r->pool,",
      "2507:        \"URL value \\\"%s\\\" does not match the hostname of the current request \\\"%s\\\"\",",
      "2508:        apr_uri_unparse(r->pool, &uri, 0), c_host);",
      "2509:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2510:    return FALSE;",
      "2511:   }",
      "2512:  }",
      "2514:  if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {",
      "2517:     apr_psprintf(r->pool,",
      "2518:       \"No hostname was parsed and it does not seem to be relative, i.e starting with '/': %s\",",
      "2519:       url);",
      "2520:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2521:   return FALSE;",
      "2522:  } else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {",
      "2525:     \"No hostname was parsed and starting with '//': %s\", url);",
      "2526:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2527:   return FALSE;",
      "2528:  } else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {",
      "2531:     \"No hostname was parsed and starting with '/\\\\': %s\", url);",
      "2532:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2533:   return FALSE;",
      "2534:  }",
      "2537:  if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {",
      "2540:     apr_psprintf(r->pool,",
      "2541:       \"URL value \\\"%s\\\" contains illegal \\\"\\n\\\" or \\\"\\r\\\" character(s)\",",
      "2542:       url);",
      "2543:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2544:   return FALSE;",
      "2545:  }",
      "2547:  return TRUE;",
      "2548: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2469:  oidc_provider_t *provider = NULL;",
      "2471:  oidc_util_get_request_parameter(r, OIDC_DISC_OP_PARAM, &issuer);",
      "2472:  oidc_util_get_request_parameter(r, OIDC_DISC_USER_PARAM, &user);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2560:  char *error_str = NULL;",
      "2561:  char *error_description = NULL;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2519:     HTTP_UNAUTHORIZED);",
      "2520:  }",
      "2523:  if (c->metadata_dir == NULL) {",
      "2524:   if ((oidc_provider_static_config(r, c, &provider) == TRUE)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2615:  if (oidc_validate_redirect_url(r, c, target_link_uri, TRUE, &error_str,",
      "2616:    &error_description) == FALSE) {",
      "2617:   return oidc_util_html_send_error(r, c->error_template, error_str,",
      "2618:     error_description,",
      "2619:     HTTP_UNAUTHORIZED);",
      "2620:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2947:  return rc;",
      "2948: }",
      "",
      "[Removed Lines]",
      "2950: #define OIDC_MAX_URL_LENGTH 8192 * 2",
      "2952: static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,",
      "2953:   const char *redirect_to_url, apr_byte_t restrict_to_host, char **err_str,",
      "2954:   char **err_desc) {",
      "2955:  apr_uri_t uri;",
      "2956:  const char *c_host = NULL;",
      "2957:  apr_hash_index_t *hi = NULL;",
      "2958:  size_t i = 0;",
      "2959:  char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);",
      "2962:  for (i = 0; i < strlen(url); i++)",
      "2963:   if (url[i] == '\\\\')",
      "2964:    url[i] = '/';",
      "2966:  if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {",
      "2969:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2970:   return FALSE;",
      "2971:  }",
      "2973:  if (c->redirect_urls_allowed != NULL) {",
      "2974:   for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi =",
      "2975:     apr_hash_next(hi)) {",
      "2976:    apr_hash_this(hi, (const void**) &c_host, NULL, NULL);",
      "2977:    if (oidc_util_regexp_first_match(r->pool, url, c_host,",
      "2978:      NULL, err_str) == TRUE)",
      "2979:     break;",
      "2980:   }",
      "2981:   if (hi == NULL) {",
      "2984:      apr_psprintf(r->pool,",
      "2985:        \"value does not match the list of allowed redirect URLs: %s\",",
      "2986:        url);",
      "2987:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "2988:    return FALSE;",
      "2989:   }",
      "2990:  } else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {",
      "2991:   c_host = oidc_get_current_url_host(r);",
      "2992:   if ((strstr(c_host, uri.hostname) == NULL)",
      "2993:     || (strstr(uri.hostname, c_host) == NULL)) {",
      "2996:      apr_psprintf(r->pool,",
      "2997:        \"URL value \\\"%s\\\" does not match the hostname of the current request \\\"%s\\\"\",",
      "2998:        apr_uri_unparse(r->pool, &uri, 0), c_host);",
      "2999:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "3000:    return FALSE;",
      "3001:   }",
      "3002:  }",
      "3004:  if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {",
      "3007:     apr_psprintf(r->pool,",
      "3008:       \"No hostname was parsed and it does not seem to be relative, i.e starting with '/': %s\",",
      "3009:       url);",
      "3010:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "3011:   return FALSE;",
      "3012:  } else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {",
      "3015:     \"No hostname was parsed and starting with '//': %s\", url);",
      "3016:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "3017:   return FALSE;",
      "3018:  } else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {",
      "3021:     \"No hostname was parsed and starting with '/\\\\': %s\", url);",
      "3022:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "3023:   return FALSE;",
      "3024:  }",
      "3027:  if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {",
      "3030:     apr_psprintf(r->pool,",
      "3031:       \"URL value \\\"%s\\\" contains illegal \\\"\\n\\\" or \\\"\\r\\\" character(s)\",",
      "3032:       url);",
      "3033:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
      "3034:   return FALSE;",
      "3035:  }",
      "3037:  return TRUE;",
      "3038: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8ed00cc8baec964e8730e8069fd748437584ab4c",
      "candidate_info": {
        "commit_hash": "8ed00cc8baec964e8730e8069fd748437584ab4c",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/8ed00cc8baec964e8730e8069fd748437584ab4c",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "on OAuth 2.0 RS token scope/claim 401 error, set env variable; see #572\n\ninstead of (always) adding a header ourselves; for usage with\nmod_headers\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.7.2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.8-dev],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3911: #if MODULE_MAGIC_NUMBER_MAJOR >= 20100714",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3913: #define OIDC_OAUTH_BEARER_SCOPE_ERROR \"OIDC_OAUTH_BEARER_SCOPE_ERROR\"",
          "3914: #define OIDC_OAUTH_BEARER_SCOPE_ERROR_VALUE \"Bearer error=\\\"insufficient_scope\\\", error_description=\\\"Different scope(s) or other claims required\\\"\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3918:  oidc_debug(r, \"enter\");",
          "3923:  if (apr_strnatcasecmp((const char*) ap_auth_type(r),",
          "3927:   return AUTHZ_DENIED;",
          "3928:  }",
          "3931:  switch (oidc_dir_cfg_unautz_action(r)) {",
          "3944:    return AUTHZ_DENIED;",
          "3946:  }",
          "3948:  oidc_authenticate_user(r, c, NULL, oidc_get_current_url(r), NULL,",
          "3952:  const char *location = oidc_util_hdr_out_location_get(r);",
          "3953:  if (location != NULL) {",
          "3960:   oidc_util_html_send(r, \"Stepup Authentication\", html_head, NULL, NULL,",
          "3961:     HTTP_UNAUTHORIZED);",
          "",
          "[Removed Lines]",
          "3920:  oidc_cfg *c = ap_get_module_config(r->server->module_config,",
          "3921:    &auth_openidc_module);",
          "3924:    OIDC_AUTH_TYPE_OPENID_OAUTH20) == 0) {",
          "3925:   oidc_oauth_return_www_authenticate(r, \"insufficient_scope\",",
          "3926:     \"Different scope(s) or other claims required\");",
          "3933:  case OIDC_UNAUTZ_RETURN403:",
          "3934:  case OIDC_UNAUTZ_RETURN401:",
          "3935:   return AUTHZ_DENIED;",
          "3936:   break;",
          "3937:  case OIDC_UNAUTZ_AUTHENTICATE:",
          "3943:   if (oidc_is_xml_http_request(r) == TRUE)",
          "3945:   break;",
          "3949:    NULL, NULL, oidc_dir_cfg_path_auth_request_params(r),",
          "3950:    oidc_dir_cfg_path_scope(r));",
          "3954:   oidc_debug(r, \"send HTML refresh with authorization redirect: %s\",",
          "3955:     location);",
          "3957:   char *html_head = apr_psprintf(r->pool,",
          "3958:     \"<meta http-equiv=\\\"refresh\\\" content=\\\"0; url=%s\\\">\",",
          "3959:     location);",
          "",
          "[Added Lines]",
          "3923:  oidc_cfg *c = ap_get_module_config(r->server->module_config, &auth_openidc_module);",
          "3926:         OIDC_AUTH_TYPE_OPENID_OAUTH20) == 0) {",
          "3927:   oidc_debug(r, \"setting environment variable %s to \\\"%s\\\" for usage in mod_headers\", OIDC_OAUTH_BEARER_SCOPE_ERROR, OIDC_OAUTH_BEARER_SCOPE_ERROR_VALUE);",
          "3928:   apr_table_set(r->subprocess_env, OIDC_OAUTH_BEARER_SCOPE_ERROR, OIDC_OAUTH_BEARER_SCOPE_ERROR_VALUE);",
          "3935:   case OIDC_UNAUTZ_RETURN403:",
          "3936:   case OIDC_UNAUTZ_RETURN401:",
          "3938:    break;",
          "3939:   case OIDC_UNAUTZ_AUTHENTICATE:",
          "3945:    if (oidc_is_xml_http_request(r) == TRUE)",
          "3946:     return AUTHZ_DENIED;",
          "3947:    break;",
          "3951:    NULL, NULL, oidc_dir_cfg_path_auth_request_params(r), oidc_dir_cfg_path_scope(r));",
          "3955:   oidc_debug(r, \"send HTML refresh with authorization redirect: %s\", location);",
          "3957:   char *html_head =",
          "3958:     apr_psprintf(r->pool, \"<meta http-equiv=\\\"refresh\\\" content=\\\"0; url=%s\\\">\", location);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3977:   const void *parsed_require_args,",
          "3978:   oidc_authz_match_claim_fn_type match_claim_fn) {",
          "3983:  if (r->user != NULL && strlen(r->user) == 0) {",
          "",
          "[Removed Lines]",
          "3980:  oidc_debug(r, \"enter\");",
          "",
          "[Added Lines]",
          "3979:  oidc_debug(r, \"enter: require_args=\\\"%s\\\"\", require_args);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99ccd3ca64eb1ea69054c011a95dac16ff16d6cc",
      "candidate_info": {
        "commit_hash": "99ccd3ca64eb1ea69054c011a95dac16ff16d6cc",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/99ccd3ca64eb1ea69054c011a95dac16ff16d6cc",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/session.c"
        ],
        "message": "store timestamps in session in seconds; bump to 2.4.8.2\n\nto avoid string conversion problems on some (libapr-1) platform\nbuild/run combinations, causing \"maximum session duration exceeded\"\nerrors\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/session.c||src/session.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.8.1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.8.2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/session.c||src/session.c": [
          "File: src/session.c -> src/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:   const char *key, const apr_time_t timestamp) {",
          "481:  if (timestamp != -1)",
          "482:   oidc_session_set(r, z, key,",
          "484: }",
          "486: static json_t *oidc_session_get_str2json(request_rec *r, oidc_session_t *z,",
          "",
          "[Removed Lines]",
          "483:     apr_psprintf(r->pool, \"%\" APR_TIME_T_FMT, timestamp));",
          "",
          "[Added Lines]",
          "483:     apr_psprintf(r->pool, \"%\" APR_TIME_T_FMT, apr_time_sec(timestamp)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:  const char *s_expires = oidc_session_get_key2string(r, z, key);",
          "506:  if (s_expires != NULL)",
          "507:   sscanf(s_expires, \"%\" APR_TIME_T_FMT, &t_expires);",
          "509: }",
          "511: void oidc_session_set_filtered_claims(request_rec *r, oidc_session_t *z,",
          "",
          "[Removed Lines]",
          "508:  return t_expires;",
          "",
          "[Added Lines]",
          "508:  return apr_time_from_sec(t_expires);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb8c97af69f90aaf91eee2f812d4703f2bc764fa",
      "candidate_info": {
        "commit_hash": "eb8c97af69f90aaf91eee2f812d4703f2bc764fa",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/eb8c97af69f90aaf91eee2f812d4703f2bc764fa",
        "files": [
          "ChangeLog",
          "Dockerfile",
          "configure.ac"
        ],
        "message": "release 2.4.10\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10rc1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "536e6c2b48de5550b13674a185ff486d0764c12c",
      "candidate_info": {
        "commit_hash": "536e6c2b48de5550b13674a185ff486d0764c12c",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/536e6c2b48de5550b13674a185ff486d0764c12c",
        "files": [
          "ChangeLog",
          "configure.ac"
        ],
        "message": "release 2.4.11.1\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.11.1rc5],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.11.1],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94f3a2d89843430f9909a4a2eece6b20bcf1c275",
      "candidate_info": {
        "commit_hash": "94f3a2d89843430f9909a4a2eece6b20bcf1c275",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/94f3a2d89843430f9909a4a2eece6b20bcf1c275",
        "files": [
          ".gitignore",
          "ChangeLog",
          "Makefile.am",
          "configure.ac"
        ],
        "message": "use apxs to link the module in Makefile.am\n\nuse generic AM_ variables; bump to 2.4.9.5rc8\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: ACLOCAL_AMFLAGS=-I m4",
          "6:  src/mod_auth_openidc.c \\",
          "7:  src/cache/file.c \\",
          "8:  src/cache/shm.c \\",
          "",
          "[Removed Lines]",
          "3: noinst_LTLIBRARIES = mod_auth_openidc.la",
          "5: mod_auth_openidc_la_SOURCES = \\",
          "",
          "[Added Lines]",
          "3: noinst_LTLIBRARIES = libauth_openidc.la",
          "5: libauth_openidc_la_SOURCES = \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:  src/parse.c \\",
          "19:  src/pcre_subst.c",
          "27: if HAVE_LIBHIREDIS",
          "29:  src/cache/redis.c",
          "32: endif",
          "34: if HAVE_MEMCACHE",
          "37:  src/cache/memcache.c",
          "38: endif",
          "40: if HAVE_LIBJQ",
          "43: endif",
          "45: noinst_HEADERS = \\",
          "",
          "[Removed Lines]",
          "21: mod_auth_openidc_la_CFLAGS = -DNAMEVER=\"@NAMEVER@\" -I$(top_srcdir)/src @APACHE_CFLAGS@ @OPENSSL_CFLAGS@ @CURL_CFLAGS@ @JANSSON_CFLAGS@ @CJOSE_CFLAGS@ @PCRE_CFLAGS@",
          "22: mod_auth_openidc_la_CPPFLAGS = @APACHE_CPPFLAGS@",
          "23: # -rpath is needed to create shared libraries whilst specifying noinst_LTLIBRARIES",
          "24: mod_auth_openidc_la_LDFLAGS = -avoid-version -module -rpath @APACHE_MODULEDIR@ @APACHE_LDFLAGS@",
          "25: mod_auth_openidc_la_LIBADD = @APACHE_LIBS@ @OPENSSL_LIBS@ @CURL_LIBS@ @JANSSON_LIBS@ @CJOSE_LIBS@ @PCRE_LIBS@",
          "28: mod_auth_openidc_la_SOURCES += \\",
          "30: mod_auth_openidc_la_CFLAGS += -DUSE_LIBHIREDIS @HIREDIS_CFLAGS@",
          "31: mod_auth_openidc_la_LIBADD += @HIREDIS_LIBS@",
          "35: mod_auth_openidc_la_CFLAGS += -DUSE_MEMCACHE",
          "36: mod_auth_openidc_la_SOURCES += \\",
          "41: mod_auth_openidc_la_CFLAGS += -DUSE_LIBJQ @JQ_CFLAGS@",
          "42: mod_auth_openidc_la_LIBADD += @JQ_LIBS@",
          "",
          "[Added Lines]",
          "21: AM_CFLAGS = -DNAMEVER=\"@NAMEVER@\" -I$(top_srcdir)/src @APACHE_CFLAGS@ @OPENSSL_CFLAGS@ @CURL_CFLAGS@ @JANSSON_CFLAGS@ @CJOSE_CFLAGS@ @PCRE_CFLAGS@",
          "22: AM_CPPFLAGS = @APACHE_CPPFLAGS@",
          "23: AM_LDFLAGS = @APACHE_LDFLAGS@",
          "24: LIBADD = @APACHE_LIBS@ @OPENSSL_LIBS@ @CURL_LIBS@ @JANSSON_LIBS@ @CJOSE_LIBS@ @PCRE_LIBS@",
          "27: libauth_openidc_la_SOURCES += \\",
          "29: AM_CFLAGS += -DUSE_LIBHIREDIS @HIREDIS_CFLAGS@",
          "30: LIBADD += @HIREDIS_LIBS@",
          "34: AM_CFLAGS += -DUSE_MEMCACHE",
          "35: libauth_openidc_la_SOURCES += \\",
          "40: AM_CFLAGS += -DUSE_LIBJQ @JQ_CFLAGS@",
          "41: LIBADD += @JQ_LIBS@",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:  test/public.pem \\",
          "65:  test/certificate.pem",
          "86: docker: docker-build docker-run",
          "",
          "[Removed Lines]",
          "67: noinst_PROGRAMS = test/test-cmd",
          "69: check_PROGRAMS = test/test",
          "70: TESTS = test/test",
          "72: test_test_SOURCES = test/test.c test/stub.c",
          "73: test_test_CFLAGS = ${mod_auth_openidc_la_CFLAGS}",
          "74: test_test_LDFLAGS = @APACHE_LDFLAGS@",
          "75: test_test_LDADD = mod_auth_openidc.la ${mod_auth_openidc_la_LIBADD}",
          "77: test_test_cmd_SOURCES = test/test-cmd.c test/stub.c",
          "78: test_test_cmd_CFLAGS = ${mod_auth_openidc_la_CFLAGS}",
          "79: test_test_cmd_LDFLAGS = @APACHE_LDFLAGS@",
          "80: test_test_cmd_LDADD = mod_auth_openidc.la ${mod_auth_openidc_la_LIBADD}",
          "82: install-exec-local: ${noinst_LTLIBRARIES}",
          "83:  @APXS@ -i -n mod_auth_openidc mod_auth_openidc.la",
          "84: # ${INSTALL} -p -m 755 -D .libs/mod_auth_openidc.so @APACHE_MODULEDIR@/mod_auth_openidc.so",
          "",
          "[Added Lines]",
          "66: noinst_DATA = mod_auth_openidc.la",
          "68: mod_auth_openidc.la: libauth_openidc.la",
          "69:  ${APXS} -c -o $@ $< ${AM_CFLAGS} ${LIBADD}",
          "71: install-exec-local:",
          "72:  @APXS@ -i -a -n auth_openidc mod_auth_openidc.la",
          "73: # ${INSTALL} -p -m 755 -D .libs/mod_auth_openidc.so @APACHE_MODULEDIR@/mod_auth_openidc.so",
          "75: LDADD = libauth_openidc.la test/stub.o ${LIBADD}",
          "77: noinst_PROGRAMS = test/test-cmd",
          "78: test_test_cmd_SOURCES = test/test-cmd.c",
          "80: TESTS = test/test",
          "82: check_PROGRAMS = test/test",
          "83: test_test_SOURCES = test/test.c",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc7],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc8],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ]
      }
    }
  ]
}