{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7bd011d70e85b2fff2928e30adf6965d34af9f04",
      "candidate_info": {
        "commit_hash": "7bd011d70e85b2fff2928e30adf6965d34af9f04",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7bd011d70e85b2fff2928e30adf6965d34af9f04",
        "files": [
          "ssl/s3_enc.c"
        ],
        "message": "fix a memory leak in ssl3_generate_key_block fix the error handling in ssl3_change_cipher_state\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2164)\n(cherry picked from commit a6fd7c1dbef2c3da3c87f1582ae48e4c29aa303c)",
        "before_after_code_files": [
          "ssl/s3_enc.c||ssl/s3_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/s3_enc.c||ssl/s3_enc.c": [
          "File: ssl/s3_enc.c -> ssl/s3_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     EVP_MD_CTX_set_flags(m5, EVP_MD_CTX_FLAG_NON_FIPS_ALLOW);",
          "62:     for (i = 0; (int)i < num; i += MD5_DIGEST_LENGTH) {",
          "63:         k++;",
          "66:             SSLerr(SSL_F_SSL3_GENERATE_KEY_BLOCK, ERR_R_INTERNAL_ERROR);",
          "68:         }",
          "70:         for (j = 0; j < k; j++)",
          "",
          "[Removed Lines]",
          "64:         if (k > sizeof buf) {",
          "67:             return 0;",
          "",
          "[Added Lines]",
          "64:         if (k > sizeof(buf)) {",
          "67:             goto err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:     memcpy(mac_secret, ms, i);",
          "230: #ifdef OPENSSL_SSL_TRACE_CRYPTO",
          "231:     if (s->msg_callback) {",
          "",
          "[Removed Lines]",
          "228:     EVP_CipherInit_ex(dd, c, NULL, key, iv, (which & SSL3_CC_WRITE));",
          "",
          "[Added Lines]",
          "228:     if (!EVP_CipherInit_ex(dd, c, NULL, key, iv, (which & SSL3_CC_WRITE)))",
          "229:         goto err2;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
      "candidate_info": {
        "commit_hash": "dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Mark a HelloRequest record as read if we ignore it\n\nOtherwise the client will try to process it again. The second time around\nit will try and move the record data into handshake fragment storage and\nrealise that there is no data left. At that point it marks it as read\nanyway. However, it is a bug that we go around the loop a second time, so\nwe prevent that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2200)\n(cherry picked from commit 290a0419f0c13a30fb3a1d1a279125c8aeafd17e)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
          ],
          "candidate": [
            "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:                         return (-1);",
          "1298:                     }",
          "1299:                 }",
          "1300:             }",
          "1301:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1300:             } else {",
          "1301:                 SSL3_RECORD_set_read(rr);",
          "1303:         } else {",
          "1305:             SSL3_RECORD_set_read(rr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbe056fd676379067588cf823a7a7422c2077f6b",
      "candidate_info": {
        "commit_hash": "bbe056fd676379067588cf823a7a7422c2077f6b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bbe056fd676379067588cf823a7a7422c2077f6b",
        "files": [
          "crypto/bn/bn_prime.c"
        ],
        "message": "Numbers greater than 1 are usually non-negative.\n\nBN_is_prime_fasttest_ex begins by rejecting if a <= 1. Then it goes to\nset A := abs(a), but a cannot be negative at this point.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3275)\n(cherry picked from commit 8b24f94209676bbe9933affd2879a686b1ed044d)",
        "before_after_code_files": [
          "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c": [
          "File: crypto/bn/bn_prime.c -> crypto/bn/bn_prime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:     BN_CTX *ctx = NULL;",
          "207:     BN_MONT_CTX *mont = NULL;",
          "210:     if (BN_cmp(a, BN_value_one()) <= 0)",
          "211:         return 0;",
          "",
          "[Removed Lines]",
          "208:     const BIGNUM *A = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235:         goto err;",
          "236:     BN_CTX_start(ctx);",
          "249:     A1 = BN_CTX_get(ctx);",
          "250:     A1_odd = BN_CTX_get(ctx);",
          "251:     check = BN_CTX_get(ctx);",
          "252:     if (check == NULL)",
          "253:         goto err;",
          "257:         goto err;",
          "258:     if (!BN_sub_word(A1, 1))",
          "259:         goto err;",
          "",
          "[Removed Lines]",
          "239:     if (a->neg) {",
          "240:         BIGNUM *t;",
          "241:         if ((t = BN_CTX_get(ctx)) == NULL)",
          "242:             goto err;",
          "243:         if (BN_copy(t, a) == NULL)",
          "244:             goto err;",
          "245:         t->neg = 0;",
          "246:         A = t;",
          "247:     } else",
          "248:         A = a;",
          "256:     if (!BN_copy(A1, A))",
          "",
          "[Added Lines]",
          "244:     if (!BN_copy(A1, a))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:     if (!BN_rshift(A1_odd, A1, k))",
          "270:         goto err;",
          "273:     mont = BN_MONT_CTX_new();",
          "274:     if (mont == NULL)",
          "275:         goto err;",
          "277:         goto err;",
          "279:     for (i = 0; i < checks; i++) {",
          "",
          "[Removed Lines]",
          "276:     if (!BN_MONT_CTX_set(mont, A, ctx))",
          "",
          "[Added Lines]",
          "264:     if (!BN_MONT_CTX_set(mont, a, ctx))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "281:             goto err;",
          "282:         if (!BN_add_word(check, 1))",
          "283:             goto err;",
          "287:         if (j == -1)",
          "288:             goto err;",
          "289:         if (j) {",
          "",
          "[Removed Lines]",
          "286:         j = witness(check, A, A1, A1_odd, k, ctx, mont);",
          "",
          "[Added Lines]",
          "274:         j = witness(check, a, A1, A1_odd, k, ctx, mont);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b684b54d6418727372200557b0386729e2ee8e5",
      "candidate_info": {
        "commit_hash": "4b684b54d6418727372200557b0386729e2ee8e5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4b684b54d6418727372200557b0386729e2ee8e5",
        "files": [
          "util/TLSProxy/Proxy.pm"
        ],
        "message": "Support renegotiation in TLSProxy\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm": [
          "File: util/TLSProxy/Proxy.pm -> util/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:         clientflags => \"\",",
          "43:         serverconnects => 1,",
          "44:         serverpid => 0,",
          "46:         #Public read",
          "47:         execute => $execute,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:         reneg => 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:     $self->{serverflags} = \"\";",
          "118:     $self->{serverconnects} = 1;",
          "119:     $self->{serverpid} = 0;",
          "120: }",
          "122: sub restart",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:     $self->{reneg} = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "200:                     or die \"Failed to redirect stdout: $!\";",
          "201:                 open(STDERR, \">&STDOUT\");",
          "202:             }",
          "204:                  .\" s_client -engine ossltest -connect \"",
          "205:                  .($self->proxy_addr).\":\".($self->proxy_port);",
          "206:             if ($self->cipherc ne \"\") {",
          "",
          "[Removed Lines]",
          "203:             my $execcmd = \"echo test | \".$self->execute",
          "",
          "[Added Lines]",
          "205:             my $echostr;",
          "206:             if ($self->reneg()) {",
          "207:                 $echostr = \"R\";",
          "208:             } else {",
          "209:                 $echostr = \"test\";",
          "210:             }",
          "211:             my $execcmd = \"echo \".$echostr.\" | \".$self->execute",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "505:     return $ret;",
          "506: }",
          "508: 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516: sub reneg",
          "517: {",
          "518:     my $self = shift;",
          "519:     if (@_) {",
          "520:       $self->{reneg} = shift;",
          "521:     }",
          "522:     return $self->{reneg};",
          "523: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e0b1ae58393bc25b5ece816b2df0525a862bdd1",
      "candidate_info": {
        "commit_hash": "1e0b1ae58393bc25b5ece816b2df0525a862bdd1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1e0b1ae58393bc25b5ece816b2df0525a862bdd1",
        "files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c",
          "crypto/evp/e_aes_cbc_hmac_sha256.c",
          "engines/e_dasync.c"
        ],
        "message": "check length sanity before correcting in EVP_CTRL_AEAD_TLS1_AAD\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3290)",
        "before_after_code_files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c",
          "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c",
          "engines/e_dasync.c||engines/e_dasync.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha1.c -> crypto/evp/e_aes_cbc_hmac_sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "809:                 key->payload_length = len;",
          "810:                 if ((key->aux.tls_ver =",
          "811:                      p[arg - 4] << 8 | p[arg - 3]) >= TLS1_1_VERSION) {",
          "812:                     len -= AES_BLOCK_SIZE;",
          "813:                     p[arg - 2] = len >> 8;",
          "814:                     p[arg - 1] = len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "812:                     if (len < AES_BLOCK_SIZE)",
          "813:                         return 0;",
          "",
          "---------------"
        ],
        "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha256.c -> crypto/evp/e_aes_cbc_hmac_sha256.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "788:                 key->payload_length = len;",
          "789:                 if ((key->aux.tls_ver =",
          "790:                      p[arg - 4] << 8 | p[arg - 3]) >= TLS1_1_VERSION) {",
          "791:                     len -= AES_BLOCK_SIZE;",
          "792:                     p[arg - 2] = len >> 8;",
          "793:                     p[arg - 1] = len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "791:                     if (len < AES_BLOCK_SIZE)",
          "792:                         return 0;",
          "",
          "---------------"
        ],
        "engines/e_dasync.c||engines/e_dasync.c": [
          "File: engines/e_dasync.c -> engines/e_dasync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "607:             if (pipe_ctx->enc) {",
          "608:                 if ((p[arg - 4] << 8 | p[arg - 3]) >= TLS1_1_VERSION) {",
          "609:                     len -= AES_BLOCK_SIZE;",
          "610:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "609:                     if (len < AES_BLOCK_SIZE)",
          "610:                         return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}