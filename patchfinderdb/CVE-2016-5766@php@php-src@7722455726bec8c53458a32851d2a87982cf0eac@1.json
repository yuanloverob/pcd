{
  "cve_id": "CVE-2016-5766",
  "cve_desc": "Integer overflow in the _gd2GetHeader function in gd_gd2.c in the GD Graphics Library (aka libgd) before 2.2.3, as used in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8, allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via crafted chunk dimensions in an image.",
  "repo": "php/php-src",
  "patch_hash": "7722455726bec8c53458a32851d2a87982cf0eac",
  "patch_info": {
    "commit_hash": "7722455726bec8c53458a32851d2a87982cf0eac",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/7722455726bec8c53458a32851d2a87982cf0eac",
    "files": [
      "ext/gd/libgd/gd_gd2.c",
      "ext/gd/tests/bug72339.gd",
      "ext/gd/tests/bug72339.phpt"
    ],
    "message": "Fixed #72339 Integer Overflow in _gd2GetHeader() resulting in heap overflow",
    "before_after_code_files": [
      "ext/gd/libgd/gd_gd2.c||ext/gd/libgd/gd_gd2.c",
      "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
    ]
  },
  "patch_diff": {
    "ext/gd/libgd/gd_gd2.c||ext/gd/libgd/gd_gd2.c": [
      "File: ext/gd/libgd/gd_gd2.c -> ext/gd/libgd/gd_gd2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "138:  if (gd2_compressed(*fmt)) {",
      "139:   nc = (*ncx) * (*ncy);",
      "140:   GD2_DBG(php_gd_error(\"Reading %d chunk index entries\", nc));",
      "141:   sidx = sizeof(t_chunk_info) * nc;",
      "142:   if (sidx <= 0) {",
      "143:    goto fail1;",
      "144:   }",
      "145:   cidx = gdCalloc(sidx, 1);",
      "146:   for (i = 0; i < nc; i++) {",
      "147:    if (gdGetInt(&cidx[i].offset, in) != 1) {",
      "148:     gdFree(cidx);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "141:   if (overflow2(sidx, nc)) {",
      "142:    goto fail1;",
      "143:   }",
      "149:   if (cidx == NULL) {",
      "150:    goto fail1;",
      "151:   }",
      "",
      "---------------"
    ],
    "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt": [
      "File: ext/gd/tests/bug72339.phpt -> ext/gd/tests/bug72339.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72339 Integer Overflow in _gd2GetHeader() resulting in heap overflow",
      "3: --SKIPIF--",
      "4: <?php if (!function_exists(\"imagecreatefromgd2\")) print \"skip\"; ?>",
      "5: --FILE--",
      "6: <?php imagecreatefromgd2(dirname(__FILE__) . DIRECTORY_SEPARATOR . \"bug72339.gd\"); ?>",
      "7: --EXPECTF--",
      "8: Warning: imagecreatefromgd2(): gd warning: product of memory allocation multiplication would exceed INT_MAX, failing operation gracefully",
      "9:  in %sbug72339.php on line %d",
      "11: Warning: imagecreatefromgd2(): '%sbug72339.gd' is not a valid GD2 file in %sbug72339.php on line %d",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa8e1c026ae6db322b724c23811ec20c5bb9df05",
      "candidate_info": {
        "commit_hash": "fa8e1c026ae6db322b724c23811ec20c5bb9df05",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fa8e1c026ae6db322b724c23811ec20c5bb9df05",
        "files": [
          "ext/gd/tests/bug72339.gd",
          "ext/gd/tests/bug72339.phpt"
        ],
        "message": "remove the huge test file, generate it on the fly instead",
        "before_after_code_files": [
          "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
          ],
          "candidate": [
            "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt": [
          "File: ext/gd/tests/bug72339.phpt -> ext/gd/tests/bug72339.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: --SKIPIF--",
          "4: <?php if (!function_exists(\"imagecreatefromgd2\")) print \"skip\"; ?>",
          "5: --FILE--",
          "7: --EXPECTF--",
          "8: Warning: imagecreatefromgd2(): gd warning: product of memory allocation multiplication would exceed INT_MAX, failing operation gracefully",
          "9:  in %sbug72339.php on line %d",
          "",
          "[Removed Lines]",
          "6: <?php imagecreatefromgd2(dirname(__FILE__) . DIRECTORY_SEPARATOR . \"bug72339.gd\"); ?>",
          "",
          "[Added Lines]",
          "6: <?php",
          "7: $fname = dirname(__FILE__) . DIRECTORY_SEPARATOR . \"bug72339.gd\";",
          "9: $fh = fopen($fname, \"w\");",
          "10: fwrite($fh, \"gd2\\x00\");",
          "11: fwrite($fh, pack(\"n\", 2));",
          "12: fwrite($fh, pack(\"n\", 1));",
          "13: fwrite($fh, pack(\"n\", 1));",
          "14: fwrite($fh, pack(\"n\", 0x40));",
          "15: fwrite($fh, pack(\"n\", 2));",
          "16: fwrite($fh, pack(\"n\", 0x5AA0)); // Chunks Wide",
          "17: fwrite($fh, pack(\"n\", 0x5B00)); // Chunks Vertically",
          "18: fwrite($fh, str_repeat(\"\\x41\\x41\\x41\\x41\", 0x1000000)); // overflow data",
          "19: fclose($fh);",
          "21: $im = imagecreatefromgd2($fname);",
          "23: if ($im) {",
          "24:  imagedestroy($im);",
          "25: }",
          "26: unlink($fname);",
          "28: ?>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd93c8601dd3443614a32ce5dba0a275813954b1",
      "candidate_info": {
        "commit_hash": "fd93c8601dd3443614a32ce5dba0a275813954b1",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fd93c8601dd3443614a32ce5dba0a275813954b1",
        "files": [
          "ext/gd/tests/bug72339.gd",
          "ext/gd/tests/bug72339.phpt"
        ],
        "message": "remove the huge test file, generate it on the fly instead",
        "before_after_code_files": [
          "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
          ],
          "candidate": [
            "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/gd/tests/bug72339.phpt||ext/gd/tests/bug72339.phpt": [
          "File: ext/gd/tests/bug72339.phpt -> ext/gd/tests/bug72339.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: --SKIPIF--",
          "4: <?php if (!function_exists(\"imagecreatefromgd2\")) print \"skip\"; ?>",
          "5: --FILE--",
          "7: --EXPECTF--",
          "8: Warning: imagecreatefromgd2(): gd warning: product of memory allocation multiplication would exceed INT_MAX, failing operation gracefully",
          "9:  in %sbug72339.php on line %d",
          "",
          "[Removed Lines]",
          "6: <?php imagecreatefromgd2(dirname(__FILE__) . DIRECTORY_SEPARATOR . \"bug72339.gd\"); ?>",
          "",
          "[Added Lines]",
          "6: <?php",
          "7: $fname = dirname(__FILE__) . DIRECTORY_SEPARATOR . \"bug72339.gd\";",
          "9: $fh = fopen($fname, \"w\");",
          "10: fwrite($fh, \"gd2\\x00\");",
          "11: fwrite($fh, pack(\"n\", 2));",
          "12: fwrite($fh, pack(\"n\", 1));",
          "13: fwrite($fh, pack(\"n\", 1));",
          "14: fwrite($fh, pack(\"n\", 0x40));",
          "15: fwrite($fh, pack(\"n\", 2));",
          "16: fwrite($fh, pack(\"n\", 0x5AA0)); // Chunks Wide",
          "17: fwrite($fh, pack(\"n\", 0x5B00)); // Chunks Vertically",
          "18: fwrite($fh, str_repeat(\"\\x41\\x41\\x41\\x41\", 0x1000000)); // overflow data",
          "19: fclose($fh);",
          "21: $im = imagecreatefromgd2($fname);",
          "23: if ($im) {",
          "24:  imagedestroy($im);",
          "25: }",
          "26: unlink($fname);",
          "28: ?>",
          "",
          "---------------"
        ]
      }
    }
  ]
}