{
  "cve_id": "CVE-2017-9051",
  "cve_desc": "libav before 12.1 is vulnerable to an invalid read of size 1 due to NULL pointer dereferencing in the nsv_read_chunk function in libavformat/nsvdec.c.",
  "repo": "libav/libav",
  "patch_hash": "fe6eea99efac66839052af547426518efd970b24",
  "patch_info": {
    "commit_hash": "fe6eea99efac66839052af547426518efd970b24",
    "repo": "libav/libav",
    "commit_url": "https://github.com/libav/libav/commit/fe6eea99efac66839052af547426518efd970b24",
    "files": [
      "libavformat/nsvdec.c"
    ],
    "message": "nsvdec: don't ignore the return value of av_get_packet()\n\nFixes invalid reads with corrupted files.\n\nCC: libav-stable@libav.org\nBug-Id: 1039",
    "before_after_code_files": [
      "libavformat/nsvdec.c||libavformat/nsvdec.c"
    ]
  },
  "patch_diff": {
    "libavformat/nsvdec.c||libavformat/nsvdec.c": [
      "File: libavformat/nsvdec.c -> libavformat/nsvdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "520:     uint32_t vsize;",
      "521:     uint16_t asize;",
      "522:     uint16_t auxsize;",
      "524:     if (nsv->ahead[0].data || nsv->ahead[1].data)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "523:     int ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "571:     if (vsize && st[NSV_ST_VIDEO]) {",
      "572:         nst = st[NSV_ST_VIDEO]->priv_data;",
      "573:         pkt = &nsv->ahead[NSV_ST_VIDEO];",
      "575:         pkt->stream_index = st[NSV_ST_VIDEO]->index;//NSV_ST_VIDEO;",
      "576:         pkt->dts = nst->frame_offset;",
      "",
      "[Removed Lines]",
      "574:         av_get_packet(pb, pkt, vsize);",
      "",
      "[Added Lines]",
      "575:         if ((ret = av_get_packet(pb, pkt, vsize)) < 0)",
      "576:             return ret;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "615:                        bps, channels, samplerate);",
      "616:             }",
      "617:         }",
      "619:         pkt->stream_index = st[NSV_ST_AUDIO]->index;//NSV_ST_AUDIO;",
      "621:         if( nsv->state == NSV_HAS_READ_NSVS && st[NSV_ST_VIDEO] ) {",
      "",
      "[Removed Lines]",
      "618:         av_get_packet(pb, pkt, asize);",
      "",
      "[Added Lines]",
      "620:         if ((ret = av_get_packet(pb, pkt, asize)) < 0)",
      "621:             return ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d951a2747968b989882c7da4fae393fee67e4dc2",
      "candidate_info": {
        "commit_hash": "d951a2747968b989882c7da4fae393fee67e4dc2",
        "repo": "libav/libav",
        "commit_url": "https://github.com/libav/libav/commit/d951a2747968b989882c7da4fae393fee67e4dc2",
        "files": [
          "libavformat/nsvdec.c"
        ],
        "message": "nsvdec: don't ignore the return value of av_get_packet()\n\nFixes invalid reads with corrupted files.\n\nCC: libav-stable@libav.org\nBug-Id: 1039\n(cherry picked from commit fe6eea99efac66839052af547426518efd970b24)\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>",
        "before_after_code_files": [
          "libavformat/nsvdec.c||libavformat/nsvdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/nsvdec.c||libavformat/nsvdec.c"
          ],
          "candidate": [
            "libavformat/nsvdec.c||libavformat/nsvdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/nsvdec.c||libavformat/nsvdec.c": [
          "File: libavformat/nsvdec.c -> libavformat/nsvdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "536:     uint32_t vsize;",
          "537:     uint16_t asize;",
          "538:     uint16_t auxsize;",
          "540:     av_log(s, AV_LOG_TRACE, \"%s(%d)\\n\", __FUNCTION__, fill_header);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "539:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "594:     if (vsize && st[NSV_ST_VIDEO]) {",
          "595:         nst = st[NSV_ST_VIDEO]->priv_data;",
          "596:         pkt = &nsv->ahead[NSV_ST_VIDEO];",
          "598:         pkt->stream_index = st[NSV_ST_VIDEO]->index;//NSV_ST_VIDEO;",
          "599:         pkt->dts = nst->frame_offset;",
          "",
          "[Removed Lines]",
          "597:         av_get_packet(pb, pkt, vsize);",
          "",
          "[Added Lines]",
          "598:         if ((ret = av_get_packet(pb, pkt, vsize)) < 0)",
          "599:             return ret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:                 av_log(s, AV_LOG_TRACE, \"NSV RAWAUDIO: bps %d, nchan %d, srate %d\\n\", bps, channels, samplerate);",
          "636:             }",
          "637:         }",
          "639:         pkt->stream_index = st[NSV_ST_AUDIO]->index;//NSV_ST_AUDIO;",
          "641:         if( nsv->state == NSV_HAS_READ_NSVS && st[NSV_ST_VIDEO] ) {",
          "",
          "[Removed Lines]",
          "638:         av_get_packet(pb, pkt, asize);",
          "",
          "[Added Lines]",
          "640:         if ((ret = av_get_packet(pb, pkt, asize)) < 0)",
          "641:             return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}