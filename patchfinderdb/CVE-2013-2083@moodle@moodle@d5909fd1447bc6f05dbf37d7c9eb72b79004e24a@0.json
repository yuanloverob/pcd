{
  "cve_id": "CVE-2013-2083",
  "cve_desc": "The MoodleQuickForm class in lib/formslib.php in Moodle through 2.1.10, 2.2.x before 2.2.10, 2.3.x before 2.3.7, and 2.4.x before 2.4.4 does not properly handle a certain array-element syntax, which allows remote attackers to bypass intended form-data filtering via a crafted request.",
  "repo": "moodle/moodle",
  "patch_hash": "d5909fd1447bc6f05dbf37d7c9eb72b79004e24a",
  "patch_info": {
    "commit_hash": "d5909fd1447bc6f05dbf37d7c9eb72b79004e24a",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/d5909fd1447bc6f05dbf37d7c9eb72b79004e24a",
    "files": [
      "lib/formslib.php",
      "lib/tests/formslib_test.php"
    ],
    "message": "MDL-38885 form: Fix comments and stricter unit test",
    "before_after_code_files": [
      "lib/formslib.php||lib/formslib.php",
      "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
    ]
  },
  "patch_diff": {
    "lib/formslib.php||lib/formslib.php": [
      "File: lib/formslib.php -> lib/formslib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1759:         } else if (!is_array($type) && is_array($value)) {",
      "1760:             $value = clean_param_array($value, $type, true);",
      "1761:         } else {",
      "1763:         }",
      "1764:         return $value;",
      "1765:     }",
      "",
      "[Removed Lines]",
      "1762:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::cleanValue()');",
      "",
      "[Added Lines]",
      "1763:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::getCleanedValue()');",
      "",
      "---------------"
    ],
    "lib/tests/formslib_test.php||lib/tests/formslib_test.php": [
      "File: lib/tests/formslib_test.php -> lib/tests/formslib_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "356:                 'thdgroupel1' => 11,",
      "357:                 'thdgroupel2' => 11",
      "358:             ),",
      "359:             'repeatedel' => array(",
      "360:                 0 => 11,",
      "361:                 1 => 11",
      "362:             ),",
      "364:             'repeatedelinherit' => array(",
      "365:                 0 => 11,",
      "366:                 1 => 11",
      "367:             ),",
      "369:             'squaretest' => array(",
      "370:                 0 => 11",
      "371:             ),",
      "",
      "[Removed Lines]",
      "363:             'repeatable' => 2,",
      "368:             'repeatableinherit' => 2,",
      "",
      "[Added Lines]",
      "359:             'repeatable' => 2,",
      "364:             'repeatableinherit' => 2,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "384:         $mform = new formslib_clean_value();",
      "385:         $mform->get_form()->updateSubmission($valuessubmitted, null);",
      "389:         }",
      "391:         $data = $mform->get_data();",
      "393:     }",
      "394: }",
      "",
      "[Removed Lines]",
      "386:         foreach ($expectedtypes as $elementname => $type) {",
      "387:             $expected = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
      "388:             $this->assertEquals($expected, $type, \"Failed validating clean type of '$elementname'\");",
      "392:         $this->assertEquals($data, (object) $expectedvalues);",
      "",
      "[Added Lines]",
      "386:         foreach ($expectedtypes as $elementname => $expected) {",
      "387:             $actual = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
      "388:             $this->assertSame($expected, $actual, \"Failed validating clean type of '$elementname'\");",
      "392:         $this->assertSame($expectedvalues, (array) $data);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a85f745d5088a301edbaca29e58a7e26169842d2",
      "candidate_info": {
        "commit_hash": "a85f745d5088a301edbaca29e58a7e26169842d2",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a85f745d5088a301edbaca29e58a7e26169842d2",
        "files": [
          "lib/tests/formslib_test.php"
        ],
        "message": "MDL-38885 form: Unit tests for data cleaning",
        "before_after_code_files": [
          "lib/tests/formslib_test.php||litests/formslib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
          ],
          "candidate": [
            "lib/tests/formslib_test.php||litests/formslib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/tests/formslib_test.php||litests/formslib_test.php": [
          "File: lib/tests/formslib_test.php -> litests/formslib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:         $this->expectOutputRegex('/<input[^>]*name=\"blah\\[any\\]\\[other\\]\\[2\\]\"[^>]*type=\"text/');",
          "269:         $mform->display();",
          "270:     }",
          "271: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:         $mform->setType('blah', PARAM_TEXT);",
          "404:     }",
          "405: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c0ba94e879702b3c2f20d4cb4f9120a0bfdd9fc",
      "candidate_info": {
        "commit_hash": "3c0ba94e879702b3c2f20d4cb4f9120a0bfdd9fc",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/3c0ba94e879702b3c2f20d4cb4f9120a0bfdd9fc",
        "files": [
          "lib/formslib.php"
        ],
        "message": "MDL-38885 form: Recursively clean parameters based on right type",
        "before_after_code_files": [
          "lib/formslib.php||liformslib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/formslib.php||lib/formslib.php"
          ],
          "candidate": [
            "lib/formslib.php||liformslib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/formslib.php||liformslib.php": [
          "File: lib/formslib.php -> liformslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1673:         $this->_types = $paramtypes + $this->_types;",
          "1674:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1685:         if (empty($submission)) {",
          "1686:             $this->_submitValues = array();",
          "1687:         } else {",
          "1699:             }",
          "1700:             $this->_submitValues = $submission;",
          "1701:             $this->_flagSubmitted = true;",
          "",
          "[Removed Lines]",
          "1688:             foreach ($submission as $key=>$s) {",
          "1689:                 if (array_key_exists($key, $this->_types)) {",
          "1690:                     $type = $this->_types[$key];",
          "1691:                 } else {",
          "1692:                     $type = PARAM_RAW;",
          "1693:                 }",
          "1694:                 if (is_array($s)) {",
          "1695:                     $submission[$key] = clean_param_array($s, $type, true);",
          "1696:                 } else {",
          "1697:                     $submission[$key] = clean_param($s, $type);",
          "1698:                 }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d39925c792789230e628548ecff9ca34d0a74c16",
      "candidate_info": {
        "commit_hash": "d39925c792789230e628548ecff9ca34d0a74c16",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d39925c792789230e628548ecff9ca34d0a74c16",
        "files": [
          "lib/formslib.php",
          "lib/tests/formslib_test.php"
        ],
        "message": "MDL-38885 form: Fix comments and stricter unit test",
        "before_after_code_files": [
          "lib/formslib.php||lib/formslib.php",
          "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/formslib.php||lib/formslib.php",
            "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
          ],
          "candidate": [
            "lib/formslib.php||lib/formslib.php",
            "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/formslib.php||lib/formslib.php": [
          "File: lib/formslib.php -> lib/formslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1568:         } else if (!is_array($type) && is_array($value)) {",
          "1569:             $value = clean_param_array($value, $type, true);",
          "1570:         } else {",
          "1572:         }",
          "1573:         return $value;",
          "1574:     }",
          "",
          "[Removed Lines]",
          "1571:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::cleanValue()');",
          "",
          "[Added Lines]",
          "1572:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::getCleanedValue()');",
          "",
          "---------------"
        ],
        "lib/tests/formslib_test.php||lib/tests/formslib_test.php": [
          "File: lib/tests/formslib_test.php -> lib/tests/formslib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:                 'thdgroupel1' => 11,",
          "279:                 'thdgroupel2' => 11",
          "280:             ),",
          "281:             'repeatedel' => array(",
          "282:                 0 => 11,",
          "283:                 1 => 11",
          "284:             ),",
          "286:             'repeatedelinherit' => array(",
          "287:                 0 => 11,",
          "288:                 1 => 11",
          "289:             ),",
          "291:             'squaretest' => array(",
          "292:                 0 => 11",
          "293:             ),",
          "",
          "[Removed Lines]",
          "285:             'repeatable' => 2,",
          "290:             'repeatableinherit' => 2,",
          "",
          "[Added Lines]",
          "281:             'repeatable' => 2,",
          "286:             'repeatableinherit' => 2,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:         $mform = new formslib_clean_value();",
          "307:         $mform->get_form()->updateSubmission($valuessubmitted, null);",
          "311:         }",
          "313:         $data = $mform->get_data();",
          "315:     }",
          "316: }",
          "",
          "[Removed Lines]",
          "308:         foreach ($expectedtypes as $elementname => $type) {",
          "309:             $expected = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
          "310:             $this->assertEquals($expected, $type, \"Failed validating clean type of '$elementname'\");",
          "314:         $this->assertEquals($data, (object) $expectedvalues);",
          "",
          "[Added Lines]",
          "308:         foreach ($expectedtypes as $elementname => $expected) {",
          "309:             $actual = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
          "310:             $this->assertSame($expected, $actual, \"Failed validating clean type of '$elementname'\");",
          "314:         $this->assertSame($expectedvalues, (array) $data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4e1bd900a2fb73e81d761bf8a5b9d2d162073d6",
      "candidate_info": {
        "commit_hash": "e4e1bd900a2fb73e81d761bf8a5b9d2d162073d6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e4e1bd900a2fb73e81d761bf8a5b9d2d162073d6",
        "files": [
          "lib/formslib.php",
          "lib/tests/formslib_test.php"
        ],
        "message": "MDL-38885 form: Fix comments and stricter unit test",
        "before_after_code_files": [
          "lib/formslib.php||lib/formslib.php",
          "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/formslib.php||lib/formslib.php",
            "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
          ],
          "candidate": [
            "lib/formslib.php||lib/formslib.php",
            "lib/tests/formslib_test.php||lib/tests/formslib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/formslib.php||lib/formslib.php": [
          "File: lib/formslib.php -> lib/formslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1582:         } else if (!is_array($type) && is_array($value)) {",
          "1583:             $value = clean_param_array($value, $type, true);",
          "1584:         } else {",
          "1586:         }",
          "1587:         return $value;",
          "1588:     }",
          "",
          "[Removed Lines]",
          "1585:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::cleanValue()');",
          "",
          "[Added Lines]",
          "1586:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::getCleanedValue()');",
          "",
          "---------------"
        ],
        "lib/tests/formslib_test.php||lib/tests/formslib_test.php": [
          "File: lib/tests/formslib_test.php -> lib/tests/formslib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:                 'thdgroupel1' => 11,",
          "279:                 'thdgroupel2' => 11",
          "280:             ),",
          "281:             'repeatedel' => array(",
          "282:                 0 => 11,",
          "283:                 1 => 11",
          "284:             ),",
          "286:             'repeatedelinherit' => array(",
          "287:                 0 => 11,",
          "288:                 1 => 11",
          "289:             ),",
          "291:             'squaretest' => array(",
          "292:                 0 => 11",
          "293:             ),",
          "",
          "[Removed Lines]",
          "285:             'repeatable' => 2,",
          "290:             'repeatableinherit' => 2,",
          "",
          "[Added Lines]",
          "281:             'repeatable' => 2,",
          "286:             'repeatableinherit' => 2,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:         $mform = new formslib_clean_value();",
          "307:         $mform->get_form()->updateSubmission($valuessubmitted, null);",
          "311:         }",
          "313:         $data = $mform->get_data();",
          "315:     }",
          "316: }",
          "",
          "[Removed Lines]",
          "308:         foreach ($expectedtypes as $elementname => $type) {",
          "309:             $expected = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
          "310:             $this->assertEquals($expected, $type, \"Failed validating clean type of '$elementname'\");",
          "314:         $this->assertEquals($data, (object) $expectedvalues);",
          "",
          "[Added Lines]",
          "308:         foreach ($expectedtypes as $elementname => $expected) {",
          "309:             $actual = $mform->get_form()->getCleanType($elementname, $valuessubmitted[$elementname]);",
          "310:             $this->assertSame($expected, $actual, \"Failed validating clean type of '$elementname'\");",
          "314:         $this->assertSame($expectedvalues, (array) $data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8ca6884531a3162cf755d7c09c29e7933c84090",
      "candidate_info": {
        "commit_hash": "e8ca6884531a3162cf755d7c09c29e7933c84090",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e8ca6884531a3162cf755d7c09c29e7933c84090",
        "files": [
          "lib/formslib.php"
        ],
        "message": "MDL-38885 form: Fix comments",
        "before_after_code_files": [
          "lib/formslib.php||lib/formslib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/formslib.php||lib/formslib.php"
          ],
          "candidate": [
            "lib/formslib.php||lib/formslib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/formslib.php||lib/formslib.php": [
          "File: lib/formslib.php -> lib/formslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1560:         } else if (!is_array($type) && is_array($value)) {",
          "1561:             $value = clean_param_array($value, $type, true);",
          "1562:         } else {",
          "1564:         }",
          "1565:         return $value;",
          "1566:     }",
          "",
          "[Removed Lines]",
          "1563:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::cleanValue()');",
          "",
          "[Added Lines]",
          "1564:             throw new coding_exception('Unexpected type or value received in MoodleQuickForm::getCleanedValue()');",
          "",
          "---------------"
        ]
      }
    }
  ]
}