{
  "cve_id": "CVE-2012-6547",
  "cve_desc": "The __tun_chr_ioctl function in drivers/net/tun.c in the Linux kernel before 3.6 does not initialize a certain structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.",
  "repo": "torvalds/linux",
  "patch_hash": "a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
  "patch_info": {
    "commit_hash": "a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
    "files": [
      "drivers/net/tun.c"
    ],
    "message": "net/tun: fix ioctl() based info leaks\n\nThe tun module leaks up to 36 bytes of memory by not fully initializing\na structure located on the stack that gets copied to user memory by the\nTUNGETIFF and SIOCGIFHWADDR ioctl()s.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "drivers/net/tun.c||drivers/net/tun.c"
    ]
  },
  "patch_diff": {
    "drivers/net/tun.c||drivers/net/tun.c": [
      "File: drivers/net/tun.c -> drivers/net/tun.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1379:  int vnet_hdr_sz;",
      "1380:  int ret;",
      "1383:   if (copy_from_user(&ifr, argp, ifreq_len))",
      "1384:    return -EFAULT;",
      "1386:  if (cmd == TUNGETFEATURES) {",
      "",
      "[Removed Lines]",
      "1382:  if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89)",
      "",
      "[Added Lines]",
      "1382:  if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89) {",
      "1385:  } else",
      "1386:   memset(&ifr, 0, sizeof(ifr));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8bbb181308bc348e02bfdbebdedd4e4ec9d452ce",
      "candidate_info": {
        "commit_hash": "8bbb181308bc348e02bfdbebdedd4e4ec9d452ce",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/8bbb181308bc348e02bfdbebdedd4e4ec9d452ce",
        "files": [
          "drivers/net/tun.c"
        ],
        "message": "tun: Fix formatting.\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/tun.c||drivers/net/tun.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/tun.c||drivers/net/tun.c"
          ],
          "candidate": [
            "drivers/net/tun.c||drivers/net/tun.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/tun.c||drivers/net/tun.c": [
          "File: drivers/net/tun.c -> drivers/net/tun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1382:  if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89) {",
          "1383:   if (copy_from_user(&ifr, argp, ifreq_len))",
          "1384:    return -EFAULT;",
          "1386:   memset(&ifr, 0, sizeof(ifr));",
          "1388:  if (cmd == TUNGETFEATURES) {",
          "",
          "[Removed Lines]",
          "1385:  } else",
          "",
          "[Added Lines]",
          "1385:  } else {",
          "1387:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cde8b15f1aabe327038ee4e0e11dd6b798572f69",
      "candidate_info": {
        "commit_hash": "cde8b15f1aabe327038ee4e0e11dd6b798572f69",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/cde8b15f1aabe327038ee4e0e11dd6b798572f69",
        "files": [
          "drivers/net/tun.c",
          "include/uapi/linux/if_tun.h"
        ],
        "message": "tuntap: add ioctl to attach or detach a file form tuntap device\n\nSometimes usespace may need to active/deactive a queue, this could be done by\ndetaching and attaching a file from tuntap device.\n\nThis patch introduces a new ioctls - TUNSETQUEUE which could be used to do\nthis. Flag IFF_ATTACH_QUEUE were introduced to do attaching while\nIFF_DETACH_QUEUE were introduced to do the detaching.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/tun.c||drivers/net/tun.c",
          "include/uapi/linux/if_tun.h||include/uapi/linux/if_tun.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/tun.c||drivers/net/tun.c"
          ],
          "candidate": [
            "drivers/net/tun.c||drivers/net/tun.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/tun.c||drivers/net/tun.c": [
          "File: drivers/net/tun.c -> drivers/net/tun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:  return txq;",
          "196: }",
          "198: static void tun_set_real_num_queues(struct tun_struct *tun)",
          "199: {",
          "200:  netif_set_real_num_tx_queues(tun->dev, tun->numqueues);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198: static inline bool tun_not_capable(struct tun_struct *tun)",
          "199: {",
          "200:  const struct cred *cred = current_cred();",
          "202:  return ((uid_valid(tun->owner) && !uid_eq(cred->euid, tun->owner)) ||",
          "203:     (gid_valid(tun->group) && !in_egroup_p(tun->group))) &&",
          "204:   !capable(CAP_NET_ADMIN);",
          "205: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1311:  dev = __dev_get_by_name(net, ifr->ifr_name);",
          "1312:  if (dev) {",
          "1315:   if (ifr->ifr_flags & IFF_TUN_EXCL)",
          "1316:    return -EBUSY;",
          "1317:   if ((ifr->ifr_flags & IFF_TUN) && dev->netdev_ops == &tun_netdev_ops)",
          "",
          "[Removed Lines]",
          "1313:   const struct cred *cred = current_cred();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1321:   else",
          "1322:    return -EINVAL;",
          "1327:    return -EPERM;",
          "1328:   err = security_tun_dev_attach(tfile->socket.sk);",
          "1329:   if (err < 0)",
          "",
          "[Removed Lines]",
          "1324:   if (((uid_valid(tun->owner) && !uid_eq(cred->euid, tun->owner)) ||",
          "1325:        (gid_valid(tun->group) && !in_egroup_p(tun->group))) &&",
          "1326:       !capable(CAP_NET_ADMIN))",
          "",
          "[Added Lines]",
          "1331:   if (tun_not_capable(tun))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1530:  }",
          "1531: }",
          "1533: static long __tun_chr_ioctl(struct file *file, unsigned int cmd,",
          "1534:        unsigned long arg, int ifreq_len)",
          "1535: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1538: static int tun_set_queue(struct file *file, struct ifreq *ifr)",
          "1539: {",
          "1540:  struct tun_file *tfile = file->private_data;",
          "1541:  struct tun_struct *tun;",
          "1542:  struct net_device *dev;",
          "1543:  int ret = 0;",
          "1545:  rtnl_lock();",
          "1547:  if (ifr->ifr_flags & IFF_ATTACH_QUEUE) {",
          "1548:   dev = __dev_get_by_name(tfile->net, ifr->ifr_name);",
          "1549:   if (!dev) {",
          "1550:    ret = -EINVAL;",
          "1551:    goto unlock;",
          "1552:   }",
          "1554:   tun = netdev_priv(dev);",
          "1555:   if (dev->netdev_ops != &tap_netdev_ops &&",
          "1556:    dev->netdev_ops != &tun_netdev_ops)",
          "1557:    ret = -EINVAL;",
          "1558:   else if (tun_not_capable(tun))",
          "1559:    ret = -EPERM;",
          "1560:   else",
          "1561:    ret = tun_attach(tun, file);",
          "1562:  } else if (ifr->ifr_flags & IFF_DETACH_QUEUE)",
          "1563:   __tun_detach(tfile, false);",
          "1564:  else",
          "1565:   ret = -EINVAL;",
          "1567: unlock:",
          "1568:  rtnl_unlock();",
          "1569:  return ret;",
          "1570: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1543:  int vnet_hdr_sz;",
          "1544:  int ret;",
          "1547:   if (copy_from_user(&ifr, argp, ifreq_len))",
          "1548:    return -EFAULT;",
          "1549:  } else {",
          "",
          "[Removed Lines]",
          "1546:  if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89) {",
          "",
          "[Added Lines]",
          "1585:  if (cmd == TUNSETIFF || cmd == TUNSETQUEUE || _IOC_TYPE(cmd) == 0x89) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1556:   return put_user(IFF_TUN | IFF_TAP | IFF_NO_PI | IFF_ONE_QUEUE |",
          "1558:     (unsigned int __user*)argp);",
          "1561:  ret = 0;",
          "1562:  rtnl_lock();",
          "",
          "[Removed Lines]",
          "1557:     IFF_VNET_HDR,",
          "1559:  }",
          "",
          "[Added Lines]",
          "1596:     IFF_VNET_HDR | IFF_MULTI_QUEUE,",
          "1598:  } else if (cmd == TUNSETQUEUE)",
          "1599:   return tun_set_queue(file, &ifr);",
          "",
          "---------------"
        ],
        "include/uapi/linux/if_tun.h||include/uapi/linux/if_tun.h": [
          "File: include/uapi/linux/if_tun.h -> include/uapi/linux/if_tun.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #define TUNDETACHFILTER _IOW('T', 214, struct sock_fprog)",
          "55: #define TUNGETVNETHDRSZ _IOR('T', 215, int)",
          "56: #define TUNSETVNETHDRSZ _IOW('T', 216, int)",
          "59: #define IFF_TUN  0x0001",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: #define TUNSETQUEUE  _IOW('T', 217, int)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: #define IFF_VNET_HDR 0x4000",
          "64: #define IFF_TUN_EXCL 0x8000",
          "65: #define IFF_MULTI_QUEUE 0x0100",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: #define IFF_ATTACH_QUEUE 0x0200",
          "68: #define IFF_DETACH_QUEUE 0x0400",
          "",
          "---------------"
        ]
      }
    }
  ]
}