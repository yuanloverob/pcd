{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ef6d11f76fba7c9d4da821947f67acc5d603b99d",
      "candidate_info": {
        "commit_hash": "ef6d11f76fba7c9d4da821947f67acc5d603b99d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ef6d11f76fba7c9d4da821947f67acc5d603b99d",
        "files": [
          "Configure",
          "test/build.info",
          "test/recipes/40-test_rehash.t",
          "test/recipes/80-test_ssl_new.t",
          "test/run_tests.pl",
          "util/process_docs.pl"
        ],
        "message": "Revert \"Perl: Use File::Glob::bsd_glob rather than File::Glob::glob\"\n\nThis needs more change that what is appropriate for the 1.1.0 branch.\n\nThis reverts commit 0401110073cd392602855f9b72af2ebec7909625.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t",
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/run_tests.pl||test/run_tests.pl",
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "293: {-",
          "294:    use File::Spec::Functions;",
          "295:    use File::Basename;",
          "298:    my @nogo_headers = ( \"asn1_mac.h\",",
          "299:                         \"__decc_include_prologue.h\",",
          "",
          "[Removed Lines]",
          "296:    use if $^O ne \"VMS\", 'File::Glob' => qw/:bsd_glob/;",
          "",
          "[Added Lines]",
          "296:    use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "---------------"
        ],
        "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t": [
          "File: test/recipes/40-test_rehash.t -> test/recipes/40-test_rehash.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Spec::Functions;",
          "14: use File::Copy;",
          "15: use File::Basename;",
          "17: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "19: setup(\"test_rehash\");",
          "",
          "[Removed Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/:bsd_glob/;",
          "",
          "[Added Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Basename;",
          "14: use File::Compare qw/compare_text/;",
          "17: use OpenSSL::Test qw/:DEFAULT srctop_dir srctop_file/;",
          "18: use OpenSSL::Test::Utils qw/disabled alldisabled available_protocols/;",
          "",
          "[Removed Lines]",
          "15: use if $^O ne \"VMS\", 'File::Glob' => qw/:bsd_glob/;",
          "",
          "[Added Lines]",
          "15: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "---------------"
        ],
        "test/run_tests.pl||test/run_tests.pl": [
          "File: test/run_tests.pl -> test/run_tests.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: use File::Spec::Functions qw/catdir catfile curdir abs2rel rel2abs/;",
          "18: use File::Basename;",
          "20: use Module::Load::Conditional qw(can_load);",
          "22: my $TAP_Harness = can_load(modules => { 'TAP::Harness' => undef })",
          "",
          "[Removed Lines]",
          "19: use if $^O ne \"VMS\", 'File::Glob' => qw/:bsd_glob/;",
          "",
          "[Added Lines]",
          "19: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "---------------"
        ],
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Basename;",
          "14: use File::Copy;",
          "15: use File::Path;",
          "17: use Getopt::Long;",
          "18: use Pod::Usage;",
          "",
          "[Removed Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/:bsd_glob/;",
          "",
          "[Added Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a904692f4b0bb610c2d36ad2c24ba0eb4ed5e88c",
      "candidate_info": {
        "commit_hash": "a904692f4b0bb610c2d36ad2c24ba0eb4ed5e88c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a904692f4b0bb610c2d36ad2c24ba0eb4ed5e88c",
        "files": [
          "test/recipes/80-test_cms.t"
        ],
        "message": "Add test for ECDH CMS key only\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4115)\n\n(cherry picked from commit 5d09b003c080d81ff6adfb6c54be5c018a2ba294)",
        "before_after_code_files": [
          "test/recipes/80-test_cms.t||test/recipes/80-test_cms.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_cms.t||test/recipes/80-test_cms.t": [
          "File: test/recipes/80-test_cms.t -> test/recipes/80-test_cms.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:  \"-in\", \"test.cms\", \"-out\", \"smtst.txt\" ]",
          "350:     ],",
          "352:     [ \"enveloped content test streaming S/MIME format, ECDH, DES, key identifier\",",
          "353:       [ \"-encrypt\", \"-keyid\", \"-in\", $smcont,",
          "354:  \"-stream\", \"-out\", \"test.cms\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:     [ \"enveloped content test streaming S/MIME format, DES, ECDH, 2 recipients, key only used\",",
          "353:       [ \"-encrypt\", \"-in\", $smcont,",
          "354:  \"-stream\", \"-out\", \"test.cms\",",
          "355:  catfile($smdir, \"smec1.pem\"),",
          "356:  catfile($smdir, \"smec2.pem\") ],",
          "357:       [ \"-decrypt\", \"-inkey\", catfile($smdir, \"smec2.pem\"),",
          "358:  \"-in\", \"test.cms\", \"-out\", \"smtst.txt\" ]",
          "359:     ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32859f608c2fe876c418e94e3883ab04083cac75",
      "candidate_info": {
        "commit_hash": "32859f608c2fe876c418e94e3883ab04083cac75",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/32859f608c2fe876c418e94e3883ab04083cac75",
        "files": [
          "ssl/record/ssl3_record.c"
        ],
        "message": "Tolerate DTLS alerts with an incorrect version number\n\nIn the case of a protocol version alert being sent by a peer the record\nversion number may not be what we are expecting. In DTLS records with an\nunexpected version number are silently discarded. This probably isn't\nappropriate for alerts, so we tolerate a mismatch in the minor version\nnumber.\n\nThis resolves an issue reported on openssl-users where an OpenSSL server\nchose DTLS1.0 but the client was DTLS1.2 only and sent a protocol_version\nalert with a 1.2 record number. This was silently ignored by the server.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5018)\n\n(cherry picked from commit 08455bc9b0e69ed5f25c16fc30cc2db57cdca842)",
        "before_after_code_files": [
          "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
          "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1531:         n2s(p, rr->length);",
          "1535:             if (version != s->version) {",
          "1537:                 rr->length = 0;",
          "",
          "[Removed Lines]",
          "1534:         if (!s->first_packet) {",
          "",
          "[Added Lines]",
          "1537:         if (!s->first_packet && rr->type != SSL3_RT_ALERT) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74ef4b8fb9c78f517c97c51a91af4bacba785ed6",
      "candidate_info": {
        "commit_hash": "74ef4b8fb9c78f517c97c51a91af4bacba785ed6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/74ef4b8fb9c78f517c97c51a91af4bacba785ed6",
        "files": [
          "apps/apps.c"
        ],
        "message": "Fix potential use-after-free and memory leak\n\nIn function wait_for_async(), allocated async fds is freed if\n`SSL_get_all_async_fds` fails, but later `fds` is used. Interestingly,\nit is not freed when everything succeeds.\n\nRewrite the FD set loop to make it more readable and to not modify the allocated\npointer so it can be freed.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Paul Dale <paul.dale@oracle.com>\n(Merged from https://github.com/openssl/openssl/pull/3992)\n\n(cherry picked from commit 0a3452520fe4cd6871ae8b7c4199c6d5d4efe912)",
        "before_after_code_files": [
          "apps/apps.c||apps/apps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.c||apps/apps.c": [
          "File: apps/apps.c -> apps/apps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2575:     fd_set asyncfds;",
          "2576:     OSSL_ASYNC_FD *fds;",
          "2577:     size_t numfds;",
          "2579:     if (!SSL_get_all_async_fds(s, NULL, &numfds))",
          "2580:         return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2578:     size_t i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2583:     fds = app_malloc(sizeof(OSSL_ASYNC_FD) * numfds, \"allocate async fds\");",
          "2584:     if (!SSL_get_all_async_fds(s, fds, &numfds)) {",
          "2585:         OPENSSL_free(fds);",
          "2586:     }",
          "2588:     FD_ZERO(&asyncfds);",
          "2595:     }",
          "2596:     select(width, (void *)&asyncfds, NULL, NULL, NULL);",
          "2597: #endif",
          "2598: }",
          "",
          "[Removed Lines]",
          "2589:     while (numfds > 0) {",
          "2590:         if (width <= (int)*fds)",
          "2591:             width = (int)*fds + 1;",
          "2592:         openssl_fdset((int)*fds, &asyncfds);",
          "2593:         numfds--;",
          "2594:         fds++;",
          "",
          "[Added Lines]",
          "2587:         return;",
          "2591:     for (i = 0; i < numfds; i++) {",
          "2592:         if (width <= (int)fds[i])",
          "2593:             width = (int)fds[i] + 1;",
          "2594:         openssl_fdset((int)fds[i], &asyncfds);",
          "2597:     OPENSSL_free(fds);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d9fece7d43d2a5aa4f40cbc4231953522f88c74",
      "candidate_info": {
        "commit_hash": "0d9fece7d43d2a5aa4f40cbc4231953522f88c74",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0d9fece7d43d2a5aa4f40cbc4231953522f88c74",
        "files": [
          "engines/afalg/e_afalg.c",
          "test/afalgtest.c"
        ],
        "message": "afalg: Fix kernel version check\n\nThe check should reject kernel versions < 4.1.0, not <= 4.1.0.\n\nThe issue was spotted on OpenSUSE 42.1 Leap, since its linux/version.h\nheader advertises 4.1.0.\n\nCLA: trivial\nFixes: 7f458a48 (\"ALG: Add AFALG engine\")\nSigned-off-by: Baptiste Jonglez <git@bitsofnetworks.org>\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4618)",
        "before_after_code_files": [
          "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c",
          "test/afalgtest.c||test/afalgtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c": [
          "File: engines/afalg/e_afalg.c -> engines/afalg/e_afalg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #define K_MAJ   4",
          "25: #define K_MIN1  1",
          "26: #define K_MIN2  0",
          "28:     !defined(AF_ALG)",
          "29: # ifndef PEDANTIC",
          "30: #  warning \"AFALG ENGINE requires Kernel Headers >= 4.1.0\"",
          "",
          "[Removed Lines]",
          "27: #if LINUX_VERSION_CODE <= KERNEL_VERSION(K_MAJ, K_MIN1, K_MIN2) || \\",
          "",
          "[Added Lines]",
          "27: #if LINUX_VERSION_CODE < KERNEL_VERSION(K_MAJ, K_MIN1, K_MIN2) || \\",
          "",
          "---------------"
        ],
        "test/afalgtest.c||test/afalgtest.c": [
          "File: test/afalgtest.c -> test/afalgtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: # define K_MAJ   4",
          "16: # define K_MIN1  1",
          "17: # define K_MIN2  0",
          "",
          "[Removed Lines]",
          "18: # if LINUX_VERSION_CODE <= KERNEL_VERSION(K_MAJ, K_MIN1, K_MIN2)",
          "",
          "[Added Lines]",
          "18: # if LINUX_VERSION_CODE < KERNEL_VERSION(K_MAJ, K_MIN1, K_MIN2)",
          "",
          "---------------"
        ]
      }
    }
  ]
}