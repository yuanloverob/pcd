{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1bb02559e39cf53ef74656b1965771befcece36a",
      "candidate_info": {
        "commit_hash": "1bb02559e39cf53ef74656b1965771befcece36a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1bb02559e39cf53ef74656b1965771befcece36a",
        "files": [
          "crypto/bn/bn_rand.c"
        ],
        "message": "Zero stack variable with DSA nonce\n\nThanks to Falko Strenzke for bringing this to our attention.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1882)\n(cherry picked from commit e5e71f2857275189577ab7b227608ab4ec985471)",
        "before_after_code_files": [
          "crypto/bn/bn_rand.c||crypto/bn/bn_rand.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_rand.c||crypto/bn/bn_rand.c": [
          "File: crypto/bn/bn_rand.c -> crypto/bn/bn_rand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:  err:",
          "255:     OPENSSL_free(k_bytes);",
          "256:     return ret;",
          "257: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:     OPENSSL_cleanse(private_bytes, sizeof(private_bytes));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "408eb66aea74b5dfe52386f7a8756bd81b890a26",
      "candidate_info": {
        "commit_hash": "408eb66aea74b5dfe52386f7a8756bd81b890a26",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/408eb66aea74b5dfe52386f7a8756bd81b890a26",
        "files": [
          "util/TLSProxy/Proxy.pm"
        ],
        "message": "Check the exit code from the server process\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2205)\n(cherry picked from commit 57a19206b5aad7ca67f0d5ebae05af2799609819)",
        "before_after_code_files": [
          "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm": [
          "File: util/TLSProxy/Proxy.pm -> util/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:         print \"Waiting for server process to close: \"",
          "300:               .$self->serverpid.\"\\n\";",
          "301:         waitpid( $self->serverpid, 0);",
          "302:     }",
          "303:     return 1;",
          "304: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:         die \"exit code $? from server process\\n\" if $? != 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
      "candidate_info": {
        "commit_hash": "fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fd1ea63f9fcababfc4d4ea38ad5dd49a76fa6023",
        "files": [
          "crypto/aes/aes_ige.c",
          "crypto/modes/cbc128.c"
        ],
        "message": "Don't call memcpy if len is zero.\n\nPrevent undefined behavior in CRYPTO_cbc128_encrypt: calling this function\nwith the 'len' parameter being 0 would result in a memcpy where the source\nand destination parameters are the same, which is undefined behavior.\nDo same for AES_ige_encrypt.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2671)\n\n(cherry picked from commit b1498c98f3fb5b8a340acc9ce20b0fd5346294e5)",
        "before_after_code_files": [
          "crypto/aes/aes_ige.c||crypto/aes/aes_ige.c",
          "crypto/modes/cbc128.c||crypto/modes/cbc128.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/aes_ige.c||crypto/aes/aes_ige.c": [
          "File: crypto/aes/aes_ige.c -> crypto/aes/aes_ige.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     size_t n;",
          "42:     size_t len = length;",
          "44:     OPENSSL_assert(in && out && key && ivec);",
          "45:     OPENSSL_assert((AES_ENCRYPT == enc) || (AES_DECRYPT == enc));",
          "46:     OPENSSL_assert((length % AES_BLOCK_SIZE) == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     if (length == 0)",
          "45:         return;",
          "",
          "---------------"
        ],
        "crypto/modes/cbc128.c||crypto/modes/cbc128.c": [
          "File: crypto/modes/cbc128.c -> crypto/modes/cbc128.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     size_t n;",
          "23:     const unsigned char *iv = ivec;",
          "25: #if !defined(OPENSSL_SMALL_FOOTPRINT)",
          "26:     if (STRICT_ALIGNMENT &&",
          "27:         ((size_t)in | (size_t)out | (size_t)ivec) % sizeof(size_t) != 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     if (len == 0)",
          "26:         return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         unsigned char c[16];",
          "74:     } tmp;",
          "76: #if !defined(OPENSSL_SMALL_FOOTPRINT)",
          "77:     if (in != out) {",
          "78:         const unsigned char *iv = ivec;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     if (len == 0)",
          "80:         return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
      "candidate_info": {
        "commit_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "files": [
          "Configure",
          "crypto/o_str.c",
          "crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c",
          "crypto/x509/x_all.c",
          "test/testutil.h"
        ],
        "message": "Add -Wundef to strict-warnings\n\nAvoid a -Wundef warning in o_str.c\nAvoid a -Wundef warning in testutil.h\nInclude internal/cryptlib.h before openssl/stack.h\nto avoid use of undefined symbol OPENSSL_API_COMPAT.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2709)",
        "before_after_code_files": [
          "crypto/o_str.c||crypto/o_str.c",
          "crypto/x509/x509_att.c||crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c||crypto/x509/x509name.c",
          "crypto/x509/x_all.c||crypto/x509/x_all.c",
          "test/testutil.h||test/testutil.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_str.c||crypto/o_str.c": [
          "File: crypto/o_str.c -> crypto/o_str.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     return !strerror_s(buf, buflen, errnum);",
          "228: #elif defined(_GNU_SOURCE)",
          "229:     return strerror_r(errnum, buf, buflen) != NULL;",
          "",
          "[Removed Lines]",
          "230: #elif (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600)",
          "",
          "[Added Lines]",
          "230: #elif (defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE >= 200112L) || \\",
          "231:       (defined(_XOPEN_SOURCE) && _XOPEN_SOURCE >= 600)",
          "",
          "---------------"
        ],
        "crypto/x509/x509_att.c||crypto/x509/x509_att.c": [
          "File: crypto/x509/x509_att.c -> crypto/x509/x509_att.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c": [
          "File: crypto/x509/x509_ext.c -> crypto/x509/x509_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c": [
          "File: crypto/x509/x509_v3.c -> crypto/x509/x509_v3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509name.c||crypto/x509/x509name.c": [
          "File: crypto/x509/x509name.c -> crypto/x509/x509name.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x_all.c||crypto/x509/x_all.c": [
          "File: crypto/x509/x_all.c -> crypto/x509/x_all.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/buffer.h>",
          "14: #include <openssl/asn1.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "test/testutil.h||test/testutil.h": [
          "File: test/testutil.h -> test/testutil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #  if defined(_MSC_VER)",
          "61: #   define TEST_CASE_NAME __FUNCTION__",
          "62: #  else",
          "",
          "[Removed Lines]",
          "59: # if __STDC_VERSION__ < 199901L",
          "",
          "[Added Lines]",
          "59: # if !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
      "candidate_info": {
        "commit_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "If client doesn't send curves list, don't assume all.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1597)\n(cherry picked from commit 3e37351834c203421b7f492dd83d5e5872e17778)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: };",
          "216: static const unsigned char suiteb_curves[] = {",
          "217:     0, TLSEXT_curve_P_256,",
          "218:     0, TLSEXT_curve_P_384",
          "",
          "[Removed Lines]",
          "179: static const unsigned char eccurves_all[] = {",
          "214: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "291:         SSLerr(SSL_F_TLS1_GET_CURVELIST, ERR_R_INTERNAL_ERROR);",
          "293:         return 0;",
          "297:     }",
          "298: }",
          "",
          "[Removed Lines]",
          "294:     } else {",
          "296:         return 1;",
          "",
          "[Added Lines]",
          "260:     return 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "387:         return nmatch == -1 ? 0 : NID_undef;",
          "390:         return nmatch == -1 ? 0 : NID_undef;",
          "407:         const unsigned char *tsupp = supp;",
          "408:         for (j = 0; j < num_supp; j++, tsupp += 2) {",
          "409:             if (pref[0] == tsupp[0] && pref[1] == tsupp[1]) {",
          "410:                 if (!tls_curve_allowed(s, pref, SSL_SECOP_CURVE_SHARED))",
          "411:                     continue;",
          "412:                 if (nmatch == k) {",
          "413:                     int id = (pref[0] << 8) | pref[1];",
          "414:                     return tls1_ec_curve_id2nid(id, NULL);",
          "415:                 }",
          "416:                 k++;",
          "",
          "[Removed Lines]",
          "383:     if (!tls1_get_curvelist",
          "384:         (s, (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0, &supp,",
          "385:          &num_supp))",
          "388:     if (!tls1_get_curvelist",
          "389:         (s, !(s->options & SSL_OP_CIPHER_SERVER_PREFERENCE), &pref, &num_pref))",
          "396:     if (num_supp == 0 && (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0) {",
          "397:         supp = eccurves_all;",
          "398:         num_supp = sizeof(eccurves_all) / 2;",
          "399:     } else if (num_pref == 0 &&",
          "400:                (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0) {",
          "401:         pref = eccurves_all;",
          "402:         num_pref = sizeof(eccurves_all) / 2;",
          "403:     }",
          "405:     k = 0;",
          "406:     for (i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "[Added Lines]",
          "348:     if (!tls1_get_curvelist(s,",
          "349:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0,",
          "350:             &supp, &num_supp))",
          "353:     if (!tls1_get_curvelist(s,",
          "354:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0,",
          "355:             &pref, &num_pref))",
          "358:     for (k = 0, i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}