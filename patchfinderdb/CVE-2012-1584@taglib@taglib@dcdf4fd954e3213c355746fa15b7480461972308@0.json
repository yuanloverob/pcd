{
  "cve_id": "CVE-2012-1584",
  "cve_desc": "Integer overflow in the mid function in toolkit/tbytevector.cpp in TagLib 1.7 and earlier allows context-dependent attackers to cause a denial of service (application crash) via a crafted file header field in a media file, which triggers a large memory allocation.",
  "repo": "taglib/taglib",
  "patch_hash": "dcdf4fd954e3213c355746fa15b7480461972308",
  "patch_info": {
    "commit_hash": "dcdf4fd954e3213c355746fa15b7480461972308",
    "repo": "taglib/taglib",
    "commit_url": "https://github.com/taglib/taglib/commit/dcdf4fd954e3213c355746fa15b7480461972308",
    "files": [
      "taglib/toolkit/tbytevector.cpp"
    ],
    "message": "Avoid uint overflow in case the length + index is over UINT_MAX",
    "before_after_code_files": [
      "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp"
    ]
  },
  "patch_diff": {
    "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp": [
      "File: taglib/toolkit/tbytevector.cpp -> taglib/toolkit/tbytevector.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "364:   ConstIterator endIt;",
      "367:     endIt = d->data.begin() + index + length;",
      "368:   else",
      "369:     endIt = d->data.end();",
      "",
      "[Removed Lines]",
      "366:   if(length < 0xffffffff && length + index < size())",
      "",
      "[Added Lines]",
      "366:   if(length < size() - index)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "110cac8429bdf660e7749ced7054b0d1728df75c",
      "candidate_info": {
        "commit_hash": "110cac8429bdf660e7749ced7054b0d1728df75c",
        "repo": "taglib/taglib",
        "commit_url": "https://github.com/taglib/taglib/commit/110cac8429bdf660e7749ced7054b0d1728df75c",
        "files": [
          "taglib/toolkit/tbytevector.cpp"
        ],
        "message": "Avoid uint overflow in case the length + index is over UINT_MAX",
        "before_after_code_files": [
          "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp"
          ],
          "candidate": [
            "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp"
          ]
        }
      },
      "candidate_diff": {
        "taglib/toolkit/tbytevector.cpp||taglib/toolkit/tbytevector.cpp": [
          "File: taglib/toolkit/tbytevector.cpp -> taglib/toolkit/tbytevector.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:   ConstIterator endIt;",
          "367:     endIt = d->data.begin() + index + length;",
          "368:   else",
          "369:     endIt = d->data.end();",
          "",
          "[Removed Lines]",
          "366:   if(length < 0xffffffff && length + index < size())",
          "",
          "[Added Lines]",
          "366:   if(length < size() - index)",
          "",
          "---------------"
        ]
      }
    }
  ]
}