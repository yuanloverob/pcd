{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "609673d93b8d9d53b687d84afe40b7f30f43adf3",
      "candidate_info": {
        "commit_hash": "609673d93b8d9d53b687d84afe40b7f30f43adf3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/609673d93b8d9d53b687d84afe40b7f30f43adf3",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Default CT_POLICY_EVAL_CTX.epoch_time_in_ms to time()\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit e25233d99c30885bdf97bfb6df657e13ca2bf1da)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #include <openssl/ct.h>",
          "15: #include <openssl/err.h>",
          "17: #include \"ct_locl.h\"",
          "19: CT_POLICY_EVAL_CTX *CT_POLICY_EVAL_CTX_new(void)",
          "20: {",
          "21:     CT_POLICY_EVAL_CTX *ctx = OPENSSL_zalloc(sizeof(CT_POLICY_EVAL_CTX));",
          "23:     if (ctx == NULL) {",
          "24:         CTerr(CT_F_CT_POLICY_EVAL_CTX_NEW, ERR_R_MALLOC_FAILURE);",
          "25:         return NULL;",
          "26:     }",
          "28:     return ctx;",
          "29: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include <time.h>",
          "23:     time_t epoch_time_in_s;",
          "31:     time(&epoch_time_in_s);",
          "32:     if (epoch_time_in_s != -1)",
          "33:         ctx->epoch_time_in_ms = epoch_time_in_s * 1000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "376dc4e06b4936ff0c9c53b8f53795d0b3774ab3",
      "candidate_info": {
        "commit_hash": "376dc4e06b4936ff0c9c53b8f53795d0b3774ab3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/376dc4e06b4936ff0c9c53b8f53795d0b3774ab3",
        "files": [
          "crypto/asn1/x_int64.c"
        ],
        "message": "Reject decoding of an INT64 with a value >INT64_MAX\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3159)\n(cherry picked from commit 0856e3f167964f58c26796331eab9d8b0a883921)",
        "before_after_code_files": [
          "crypto/asn1/x_int64.c||crypto/asn1/x_int64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/x_int64.c||crypto/asn1/x_int64.c": [
          "File: crypto/asn1/x_int64.c -> crypto/asn1/x_int64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         ASN1err(ASN1_F_UINT64_C2I, ASN1_R_ILLEGAL_NEGATIVE_VALUE);",
          "72:         return 0;",
          "73:     }",
          "74:     memcpy(cp, &utmp, sizeof(utmp));",
          "75:     return 1;",
          "76: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     if ((it->size & INTxx_FLAG_SIGNED) == INTxx_FLAG_SIGNED",
          "75:             && !neg && utmp > INT64_MAX) {",
          "76:         ASN1err(ASN1_F_UINT64_C2I, ASN1_R_TOO_LARGE);",
          "77:         return 0;",
          "78:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fadfc8ecfd277af189600648fcf1d28f33fd76fe",
      "candidate_info": {
        "commit_hash": "fadfc8ecfd277af189600648fcf1d28f33fd76fe",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fadfc8ecfd277af189600648fcf1d28f33fd76fe",
        "files": [
          "crypto/asn1/a_int.c"
        ],
        "message": "Cast to an unsigned type before negating\n\nllvm's ubsan reported:\nruntime error: negation of -9223372036854775808 cannot be represented in\ntype 'int64_t' (aka 'long'); cast to an unsigned type to negate this\nvalue to itself\n\nFound using libfuzzer\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n\nGH: #1908\n(cherry picked from commit e80f3b6af295133107ac709329eee16ccf9af61c)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c"
        ]
      }
    },
    {
      "candidate_hash": "be25316469eebf7e55cdcf3b5ded5edcf09a2723",
      "candidate_info": {
        "commit_hash": "be25316469eebf7e55cdcf3b5ded5edcf09a2723",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/be25316469eebf7e55cdcf3b5ded5edcf09a2723",
        "files": [
          "crypto/aes/asm/bsaes-armv7.pl"
        ],
        "message": "aes/asm/bsaes-armv7.pl: relax stack alignment requirement.\n\nEven though Apple refers to Procedure Call Standard for ARM Architecture\n(AAPCS), they apparently adhere to custom version that doesn't follow\nstack alignment constraints in the said standard. [Why or why? If it's\nvendor lock-in thing, then it would be like worst spot ever.] And since\nbsaes-armv7 relied on standard alignment, it became problematic to\nexecute the code on iOS.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 0822d41b6d54132df96c02cc6f6fa9b179378351)",
        "before_after_code_files": [
          "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl": [
          "File: crypto/aes/asm/bsaes-armv7.pl -> crypto/aes/asm/bsaes-armv7.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1365:  vmov @XMM[4],@XMM[15]  @ just in case ensure that IV",
          "1366:  vmov @XMM[5],@XMM[0]   @ and input are preserved",
          "1367:  bl AES_decrypt",
          "1369:  veor @XMM[0], @XMM[0], @XMM[4] @ ^= IV",
          "1370:  vmov @XMM[15], @XMM[5]  @ @XMM[5] holds input",
          "1371:  vst1.8 {@XMM[0]}, [$rounds]  @ write output",
          "",
          "[Removed Lines]",
          "1368:  vld1.8 {@XMM[0]}, [$fp,:64]  @ load result",
          "",
          "[Added Lines]",
          "1368:  vld1.8 {@XMM[0]}, [$fp]  @ load result",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a4eee0b18cf5f927c528d6e7bd0470c1cb679cb",
      "candidate_info": {
        "commit_hash": "8a4eee0b18cf5f927c528d6e7bd0470c1cb679cb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8a4eee0b18cf5f927c528d6e7bd0470c1cb679cb",
        "files": [
          "crypto/ppccap.c"
        ],
        "message": "crypto/ppccap.c: SIGILL-free processor capabilities detection on MacOS X.\n\nIt seems to be problematic to probe processor capabilities with SIGILL\non MacOS X. The problem should be limited to cases when application code\nis debugged, but crashes were reported even during normal execution...\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 0bd93bbe4ae60e5f318b298bfe617e468a7b71d0)",
        "before_after_code_files": [
          "crypto/ppccap.c||crypto/ppccap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ppccap.c||crypto/ppccap.c": [
          "File: crypto/ppccap.c -> crypto/ppccap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #  define __power_set(a) (_system_configuration.implementation & (a))",
          "23: # endif",
          "24: #endif",
          "25: #include <openssl/crypto.h>",
          "26: #include <openssl/bn.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #if defined(__APPLE__) && defined(__MACH__)",
          "26: # include <sys/types.h>",
          "27: # include <sys/sysctl.h>",
          "28: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230: # endif",
          "231: #endif",
          "233:     if (getauxval != NULL) {",
          "234:         unsigned long hwcap = getauxval(HWCAP);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237: #if defined(__APPLE__) && defined(__MACH__)",
          "238:     OPENSSL_ppccap_P |= PPC_FPU;",
          "240:     {",
          "241:         int val;",
          "242:         size_t len = sizeof(val);",
          "244:         if (sysctlbyname(\"hw.optional.64bitops\", &val, &len, NULL, 0) == 0) {",
          "245:             if (val)",
          "246:                 OPENSSL_ppccap_P |= PPC_FPU64;",
          "247:         }",
          "249:         len = sizeof(val);",
          "250:         if (sysctlbyname(\"hw.optional.altivec\", &val, &len, NULL, 0) == 0) {",
          "251:             if (val)",
          "252:                 OPENSSL_ppccap_P |= PPC_ALTIVEC;",
          "253:         }",
          "255:         return;",
          "256:     }",
          "257: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}