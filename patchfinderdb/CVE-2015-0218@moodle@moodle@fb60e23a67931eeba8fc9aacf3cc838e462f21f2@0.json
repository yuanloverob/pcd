{
  "cve_id": "CVE-2015-0218",
  "cve_desc": "Cross-site request forgery (CSRF) vulnerability in auth/shibboleth/logout.php in Moodle through 2.5.9, 2.6.x before 2.6.7, 2.7.x before 2.7.4, and 2.8.x before 2.8.2 allows remote attackers to hijack the authentication of arbitrary users for requests that trigger a logout.",
  "repo": "moodle/moodle",
  "patch_hash": "fb60e23a67931eeba8fc9aacf3cc838e462f21f2",
  "patch_info": {
    "commit_hash": "fb60e23a67931eeba8fc9aacf3cc838e462f21f2",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/fb60e23a67931eeba8fc9aacf3cc838e462f21f2",
    "files": [
      "auth/shibboleth/logout.php"
    ],
    "message": "MDL-47964 auth_shibboleth: Fix DOS on the shibboleth logout",
    "before_after_code_files": [
      "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
    ]
  },
  "patch_diff": {
    "auth/shibboleth/logout.php||auth/shibboleth/logout.php": [
      "File: auth/shibboleth/logout.php -> auth/shibboleth/logout.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: require_once($CFG->dirroot.\"/auth/shibboleth/auth.php\");",
      "13: $protocol = 'http://';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: $action = optional_param('action', '', PARAM_ALPHA);",
      "12: $redirect = optional_param('return', '', PARAM_URL);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "15:     $protocol = 'https://';",
      "16: }",
      "31: }",
      "40:     $server = new SoapServer($protocol.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'/LogoutNotification.wsdl');",
      "43:     $server->addFunction(\"LogoutNotification\");",
      "44:     $server->handle();",
      "50:     header('Content-Type: text/xml');",
      "52:     echo <<<WSDL",
      "",
      "[Removed Lines]",
      "19: if (",
      "20:         isset($_GET['return'])",
      "21:         && isset($_GET['action'])",
      "22:         && $_GET['action'] == 'logout'",
      "23:    ){",
      "27:     require_logout();",
      "30:     redirect($_GET['return']);",
      "34: elseif (!empty($HTTP_RAW_POST_DATA)) {",
      "45: }",
      "48: else {",
      "",
      "[Added Lines]",
      "21: if (!is_enabled_auth('shibboleth')) {",
      "22:     throw new moodle_exception(get_string('pluginnotenabled', 'auth', 'shibboleth'));",
      "26: if ($action == 'logout' && !empty($redirect)) {",
      "28:     if ($USER->auth == 'shibboleth') {",
      "30:         require_logout();",
      "32:         redirect($redirect);",
      "33:     }",
      "35: } else if (!empty($HTTP_RAW_POST_DATA)) {",
      "43: } else {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4d16a2749f8b5d6dd2858106b5cae5e383256fa7",
      "candidate_info": {
        "commit_hash": "4d16a2749f8b5d6dd2858106b5cae5e383256fa7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/4d16a2749f8b5d6dd2858106b5cae5e383256fa7",
        "files": [
          "auth/shibboleth/logout.php",
          "mnet/xmlrpc/server.php",
          "mnet/xmlrpc/serverlib.php"
        ],
        "message": "MDL-51162 core: replace all HTTP_RAW_POST_DATA  usages\n\nThis patch replace all usages of HTTP_RAW_POST_DATA that was deprecated on PHP 5.6 by\nfile_get_contents('php://input'). Only the TinyMCE library has not been updated.",
        "before_after_code_files": [
          "auth/shibboleth/logout.php||auth/shibboleth/logout.php",
          "mnet/xmlrpc/server.php||mnet/xmlrpc/server.php",
          "mnet/xmlrpc/serverlib.php||mnet/xmlrpc/serverlib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ],
          "candidate": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ]
        }
      },
      "candidate_diff": {
        "auth/shibboleth/logout.php||auth/shibboleth/logout.php": [
          "File: auth/shibboleth/logout.php -> auth/shibboleth/logout.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:         redirect($redirect);",
          "33:     }",
          "",
          "[Removed Lines]",
          "35: } else if (!empty($HTTP_RAW_POST_DATA)) {",
          "",
          "[Added Lines]",
          "35: } else if (!file_get_contents(\"php://input\")) {",
          "",
          "---------------"
        ],
        "mnet/xmlrpc/server.php||mnet/xmlrpc/server.php": [
          "File: mnet/xmlrpc/server.php -> mnet/xmlrpc/server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: header('Content-type: text/xml; charset=utf-8');",
          "45: if (!isset($_SERVER)) {",
          "46:     exit(mnet_server_fault(712, get_string('phperror', 'mnet')));",
          "",
          "[Removed Lines]",
          "38: if (empty($HTTP_RAW_POST_DATA)) {",
          "39:     $HTTP_RAW_POST_DATA = file_get_contents('php://input');",
          "40: }",
          "42: mnet_debug(\"HTTP_RAW_POST_DATA\", 2);",
          "43: mnet_debug($HTTP_RAW_POST_DATA, 2);",
          "",
          "[Added Lines]",
          "36: $rawpostdata = file_get_contents(\"php://input\");",
          "37: mnet_debug(\"RAW POST DATA\", 2);",
          "38: mnet_debug($rawpostdata, 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: set_mnet_remote_client($remoteclient);",
          "55: try {",
          "57:     $xmlrpcrequest = mnet_server_strip_signature($plaintextmessage);",
          "58: } catch (Exception $e) {",
          "59:     mnet_debug('encryption strip exception thrown: ' . $e->getMessage());",
          "",
          "[Removed Lines]",
          "56:     $plaintextmessage = mnet_server_strip_encryption($HTTP_RAW_POST_DATA);",
          "",
          "[Added Lines]",
          "51:     $plaintextmessage = mnet_server_strip_encryption($rawpostdata);",
          "",
          "---------------"
        ],
        "mnet/xmlrpc/serverlib.php||mnet/xmlrpc/serverlib.php": [
          "File: mnet/xmlrpc/serverlib.php -> mnet/xmlrpc/serverlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     $remoteclient = get_mnet_remote_client();",
          "38:     $crypt_parser = new mnet_encxml_parser();",
          "40:     $mnet = get_mnet_environment();",
          "42:     if (!$crypt_parser->payload_encrypted) {",
          "44:     }",
          "",
          "[Removed Lines]",
          "36: function mnet_server_strip_encryption($HTTP_RAW_POST_DATA) {",
          "39:     $crypt_parser->parse($HTTP_RAW_POST_DATA);",
          "43:         return $HTTP_RAW_POST_DATA;",
          "",
          "[Added Lines]",
          "36: function mnet_server_strip_encryption($rawpostdata) {",
          "39:     $crypt_parser->parse($rawpostdata);",
          "43:         return $rawpostdata;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "693918c30e6b7c95dddd9c5973f98d98342a59d9",
      "candidate_info": {
        "commit_hash": "693918c30e6b7c95dddd9c5973f98d98342a59d9",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/693918c30e6b7c95dddd9c5973f98d98342a59d9",
        "files": [
          "auth/shibboleth/logout.php"
        ],
        "message": "MDL-47964 auth_shibboleth: Fix DOS on the shibboleth logout",
        "before_after_code_files": [
          "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ],
          "candidate": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ]
        }
      },
      "candidate_diff": {
        "auth/shibboleth/logout.php||auth/shibboleth/logout.php": [
          "File: auth/shibboleth/logout.php -> auth/shibboleth/logout.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: require_once($CFG->dirroot.\"/auth/shibboleth/auth.php\");",
          "13: $protocol = 'http://';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: $action = optional_param('action', '', PARAM_ALPHA);",
          "12: $redirect = optional_param('return', '', PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:     $protocol = 'https://';",
          "16: }",
          "31: }",
          "40:     $server = new SoapServer($protocol.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'/LogoutNotification.wsdl');",
          "43:     $server->addFunction(\"LogoutNotification\");",
          "44:     $server->handle();",
          "50:     header('Content-Type: text/xml');",
          "52:     echo <<<WSDL",
          "",
          "[Removed Lines]",
          "19: if (",
          "20:         isset($_GET['return'])",
          "21:         && isset($_GET['action'])",
          "22:         && $_GET['action'] == 'logout'",
          "23:    ){",
          "27:     require_logout();",
          "30:     redirect($_GET['return']);",
          "34: elseif (!empty($HTTP_RAW_POST_DATA)) {",
          "45: }",
          "48: else {",
          "",
          "[Added Lines]",
          "21: if (!is_enabled_auth('shibboleth')) {",
          "22:     throw new moodle_exception(get_string('pluginnotenabled', 'auth', 'shibboleth'));",
          "26: if ($action == 'logout' && !empty($redirect)) {",
          "28:     if ($USER->auth == 'shibboleth') {",
          "30:         require_logout();",
          "32:         redirect($redirect);",
          "33:     }",
          "35: } else if (!empty($HTTP_RAW_POST_DATA)) {",
          "43: } else {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "371d58d70d4ef866f35e33ea6898007112bfe654",
      "candidate_info": {
        "commit_hash": "371d58d70d4ef866f35e33ea6898007112bfe654",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/371d58d70d4ef866f35e33ea6898007112bfe654",
        "files": [
          "auth/shibboleth/logout.php"
        ],
        "message": "MDL-47964 auth_shibboleth: Fix DOS on the shibboleth logout",
        "before_after_code_files": [
          "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ],
          "candidate": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ]
        }
      },
      "candidate_diff": {
        "auth/shibboleth/logout.php||auth/shibboleth/logout.php": [
          "File: auth/shibboleth/logout.php -> auth/shibboleth/logout.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: require_once($CFG->dirroot.\"/auth/shibboleth/auth.php\");",
          "13: $protocol = 'http://';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: $action = optional_param('action', '', PARAM_ALPHA);",
          "12: $redirect = optional_param('return', '', PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:     $protocol = 'https://';",
          "16: }",
          "31: }",
          "40:     $server = new SoapServer($protocol.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'/LogoutNotification.wsdl');",
          "43:     $server->addFunction(\"LogoutNotification\");",
          "44:     $server->handle();",
          "50:     header('Content-Type: text/xml');",
          "52:     echo <<<WSDL",
          "",
          "[Removed Lines]",
          "19: if (",
          "20:         isset($_GET['return'])",
          "21:         && isset($_GET['action'])",
          "22:         && $_GET['action'] == 'logout'",
          "23:    ){",
          "27:     require_logout();",
          "30:     redirect($_GET['return']);",
          "34: elseif (!empty($HTTP_RAW_POST_DATA)) {",
          "45: }",
          "48: else {",
          "",
          "[Added Lines]",
          "21: if (!is_enabled_auth('shibboleth')) {",
          "22:     throw new moodle_exception(get_string('pluginnotenabled', 'auth', 'shibboleth'));",
          "26: if ($action == 'logout' && !empty($redirect)) {",
          "28:     if ($USER->auth == 'shibboleth') {",
          "30:         require_logout();",
          "32:         redirect($redirect);",
          "33:     }",
          "35: } else if (!empty($HTTP_RAW_POST_DATA)) {",
          "43: } else {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b82b4c562b705ea8f11893d9126889bb696b9612",
      "candidate_info": {
        "commit_hash": "b82b4c562b705ea8f11893d9126889bb696b9612",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b82b4c562b705ea8f11893d9126889bb696b9612",
        "files": [
          "auth/shibboleth/logout.php"
        ],
        "message": "MDL-47964 auth_shibboleth: Fix DOS on the shibboleth logout",
        "before_after_code_files": [
          "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ],
          "candidate": [
            "auth/shibboleth/logout.php||auth/shibboleth/logout.php"
          ]
        }
      },
      "candidate_diff": {
        "auth/shibboleth/logout.php||auth/shibboleth/logout.php": [
          "File: auth/shibboleth/logout.php -> auth/shibboleth/logout.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: require_once($CFG->dirroot.\"/auth/shibboleth/auth.php\");",
          "13: $protocol = 'http://';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: $action = optional_param('action', '', PARAM_ALPHA);",
          "12: $redirect = optional_param('return', '', PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:     $protocol = 'https://';",
          "16: }",
          "31: }",
          "40:     $server = new SoapServer($protocol.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'/LogoutNotification.wsdl');",
          "43:     $server->addFunction(\"LogoutNotification\");",
          "44:     $server->handle();",
          "50:     header('Content-Type: text/xml');",
          "52:     echo <<<WSDL",
          "",
          "[Removed Lines]",
          "19: if (",
          "20:         isset($_GET['return'])",
          "21:         && isset($_GET['action'])",
          "22:         && $_GET['action'] == 'logout'",
          "23:    ){",
          "27:     require_logout();",
          "30:     redirect($_GET['return']);",
          "34: elseif (!empty($HTTP_RAW_POST_DATA)) {",
          "45: }",
          "48: else {",
          "",
          "[Added Lines]",
          "21: if (!is_enabled_auth('shibboleth')) {",
          "22:     throw new moodle_exception(get_string('pluginnotenabled', 'auth', 'shibboleth'));",
          "26: if ($action == 'logout' && !empty($redirect)) {",
          "28:     if ($USER->auth == 'shibboleth') {",
          "30:         require_logout();",
          "32:         redirect($redirect);",
          "33:     }",
          "35: } else if (!empty($HTTP_RAW_POST_DATA)) {",
          "43: } else {",
          "",
          "---------------"
        ]
      }
    }
  ]
}