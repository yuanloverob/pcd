{
  "cve_id": "CVE-2021-29600",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of the `OneHot` TFLite operator is vulnerable to a division by zero error(https://github.com/tensorflow/tensorflow/blob/f61c57bd425878be108ec787f4d96390579fb83e/tensorflow/lite/kernels/one_hot.cc#L68-L72). An attacker can craft a model such that at least one of the dimensions of `indices` would be 0. In turn, the `prefix_dim_size` value would become 0. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "3ebedd7e345453d68e279cfc3e4072648e5e12e5",
  "patch_info": {
    "commit_hash": "3ebedd7e345453d68e279cfc3e4072648e5e12e5",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/3ebedd7e345453d68e279cfc3e4072648e5e12e5",
    "files": [
      "tensorflow/lite/kernels/one_hot.cc"
    ],
    "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
    "before_after_code_files": [
      "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
      "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:   for (int i = 0; i < op_context.axis; ++i) {",
      "70:     prefix_dim_size *= op_context.indices->dims->data[i];",
      "71:   }",
      "72:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
      "73:   const int depth = *op_context.depth->data.i32;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72:   if (prefix_dim_size == 0) {",
      "75:     return;",
      "76:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e7848c9c10ab7860677b55b0cbd98008cca1b7bc",
      "candidate_info": {
        "commit_hash": "e7848c9c10ab7860677b55b0cbd98008cca1b7bc",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e7848c9c10ab7860677b55b0cbd98008cca1b7bc",
        "files": [
          "tensorflow/lite/kernels/one_hot.cc"
        ],
        "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
        "before_after_code_files": [
          "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
          "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   for (int i = 0; i < op_context.axis; ++i) {",
          "68:     prefix_dim_size *= op_context.indices->dims->data[i];",
          "69:   }",
          "70:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
          "71:   const int depth = *op_context.depth->data.i32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:   if (prefix_dim_size == 0) {",
          "73:     return;",
          "74:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b45bc99c6bcc784731adb9a6d0d59b21a0c56aa",
      "candidate_info": {
        "commit_hash": "8b45bc99c6bcc784731adb9a6d0d59b21a0c56aa",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8b45bc99c6bcc784731adb9a6d0d59b21a0c56aa",
        "files": [
          "tensorflow/lite/kernels/one_hot.cc"
        ],
        "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
        "before_after_code_files": [
          "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
          "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   for (int i = 0; i < op_context.axis; ++i) {",
          "70:     prefix_dim_size *= op_context.indices->dims->data[i];",
          "71:   }",
          "72:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
          "73:   const int depth = *op_context.depth->data.i32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   if (prefix_dim_size == 0) {",
          "75:     return;",
          "76:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4523630d754d6823d0aaf3406a4c8bade983f400",
      "candidate_info": {
        "commit_hash": "4523630d754d6823d0aaf3406a4c8bade983f400",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4523630d754d6823d0aaf3406a4c8bade983f400",
        "files": [
          "tensorflow/lite/kernels/one_hot.cc"
        ],
        "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
        "before_after_code_files": [
          "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
          "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   for (int i = 0; i < op_context.axis; ++i) {",
          "70:     prefix_dim_size *= op_context.indices->dims->data[i];",
          "71:   }",
          "72:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
          "73:   const int depth = *op_context.depth->data.i32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   if (prefix_dim_size == 0) {",
          "75:     return;",
          "76:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6812ad5ab43beb428f98bfe4ab89938021e355b3",
      "candidate_info": {
        "commit_hash": "6812ad5ab43beb428f98bfe4ab89938021e355b3",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6812ad5ab43beb428f98bfe4ab89938021e355b3",
        "files": [
          "tensorflow/lite/kernels/one_hot.cc"
        ],
        "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
        "before_after_code_files": [
          "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
          "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   for (int i = 0; i < op_context.axis; ++i) {",
          "70:     prefix_dim_size *= op_context.indices->dims->data[i];",
          "71:   }",
          "72:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
          "73:   const int depth = *op_context.depth->data.i32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   if (prefix_dim_size == 0) {",
          "75:     return;",
          "76:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d8787e1297f204b5d892c1fcc7874d668ff0917",
      "candidate_info": {
        "commit_hash": "7d8787e1297f204b5d892c1fcc7874d668ff0917",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7d8787e1297f204b5d892c1fcc7874d668ff0917",
        "files": [
          "tensorflow/lite/kernels/one_hot.cc"
        ],
        "message": "Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
        "before_after_code_files": [
          "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/one_hot.cc||tensorflow/lite/kernels/one_hot.cc": [
          "File: tensorflow/lite/kernels/one_hot.cc -> tensorflow/lite/kernels/one_hot.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   for (int i = 0; i < op_context.axis; ++i) {",
          "68:     prefix_dim_size *= op_context.indices->dims->data[i];",
          "69:   }",
          "70:   const int suffix_dim_size = NumElements(op_context.indices) / prefix_dim_size;",
          "71:   const int depth = *op_context.depth->data.i32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:   if (prefix_dim_size == 0) {",
          "73:     return;",
          "74:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}