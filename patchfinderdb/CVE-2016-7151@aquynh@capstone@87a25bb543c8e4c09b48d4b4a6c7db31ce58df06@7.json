{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54f4863303c273463fa5e1187e45b95934d1341a",
      "candidate_info": {
        "commit_hash": "54f4863303c273463fa5e1187e45b95934d1341a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/54f4863303c273463fa5e1187e45b95934d1341a",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "python: add a debug line",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "216: def _load_lib(path):",
          "217:     lib_file = join(path, _lib)",
          "218:     try:",
          "219:         return ctypes.cdll.LoadLibrary(lib_file)",
          "220:     except OSError:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:     #print(\"Trying to load %s\" %lib_file)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "861a09822f5ae5475bb90b30e78e436cc1d6002e",
      "candidate_info": {
        "commit_hash": "861a09822f5ae5475bb90b30e78e436cc1d6002e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/861a09822f5ae5475bb90b30e78e436cc1d6002e",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: remove its version",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #include <capstone.h>",
          "12: void print_insn_detail_x86(csh ud, cs_mode mode, cs_insn *ins);",
          "13: void print_insn_detail_arm(csh handle, cs_insn *ins);",
          "",
          "[Removed Lines]",
          "10: #define VERSION \"2.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: static void usage(char *prog)",
          "75: {",
          "77:  printf(\"Syntax: %s [-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "78:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "",
          "[Removed Lines]",
          "76:  printf(\"Cstool v%s for Capstone Disassembler Engine (core v%u.%u.%u)\\n\\n\", VERSION, CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "",
          "[Added Lines]",
          "75:  printf(\"Cstool for Capstone Disassembler Engine v%u.%u.%u\\n\\n\", CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47509918cb7e032f8398c7c993519e9aaa70f123",
      "candidate_info": {
        "commit_hash": "47509918cb7e032f8398c7c993519e9aaa70f123",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/47509918cb7e032f8398c7c993519e9aaa70f123",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "fixup qsort",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2755: struct insn_reg insn_regs_intel_sorted [ARR_SIZE(insn_regs_intel)];",
          "2758: {",
          "2759:  uint16_t l = ((struct insn_reg *)a)->insn;",
          "2760:  uint16_t r = ((struct insn_reg *)b)->insn;",
          "",
          "[Removed Lines]",
          "2757: static void regs_cmp(const void *a, const void *b)",
          "",
          "[Added Lines]",
          "2757: static int regs_cmp(const void *a, const void *b)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2774:  if (!intel_resgs_sorted) {",
          "2775:   memcpy (insn_regs_intel_sorted, insn_regs_intel,",
          "2776:     sizeof(insn_regs_intel_sorted));",
          "2779:   intel_resgs_sorted = true;",
          "2780:  }",
          "",
          "[Removed Lines]",
          "2777:   qsort ((void*)insn_regs_intel_sorted,",
          "2778:     ARR_SIZE(insn_regs_intel_sorted), sizeof(struct insn_reg), regs_cmp);",
          "",
          "[Added Lines]",
          "2777:   qsort (insn_regs_intel_sorted,",
          "2778:     ARR_SIZE(insn_regs_intel_sorted),",
          "2779:     sizeof(struct insn_reg), regs_cmp);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2266e67160184df606cf708382cafb71af168a98",
      "candidate_info": {
        "commit_hash": "2266e67160184df606cf708382cafb71af168a98",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2266e67160184df606cf708382cafb71af168a98",
        "files": [
          "nmake-x86.bat"
        ],
        "message": "fix nmake-x86.bat",
        "before_after_code_files": [
          "nmake-x86.bat||nmake-x86.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "nmake-x86.bat||nmake-x86.bat": [
          "File: nmake-x86.bat -> nmake-x86.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: :: Capstone disassembler engine (www.capstone-engine.org)",
          "3: :: By Nguyen Anh Quynh, 2017",
          "6: nmake",
          "",
          "[Removed Lines]",
          "2: :: Build Capstone libs (capstone.dll & capstone.lib) on Windows with CMake & Nmake",
          "5: cmake -DCMAKE_BUILD_TYPE=Release SUPPORTED_ARCHITECTURES=X86 -G \"NMake Makefiles\" ..",
          "",
          "[Added Lines]",
          "2: :: Build Capstone libs for X86 only (capstone.dll & capstone.lib) on Windows with CMake & Nmake",
          "5: :: cmake -DCMAKE_BUILD_TYPE=Release -DCAPSTONE_BUILD_DIET=ON -DCAPSTONE_ARM_SUPPORT=0 -DCAPSTONE_ARM64_SUPPORT=0 -DCAPSTONE_M68K_SUPPORT=0 -DCAPSTONE_MIPS_SUPPORT=0 -DCAPSTONE_PPC_SUPPORT=0 -DCAPSTONE_SPARC_SUPPORT=0 -DCAPSTONE_SYSZ_SUPPORT=0 -DCAPSTONE_XCORE_SUPPORT=0 -DCAPSTONE_TMS320C64X_SUPPORT=0 -DCAPSTONE_BUILD_STATIC_RUNTIME=OFF -G \"NMake Makefiles\" ..",
          "7: cmake -DCMAKE_BUILD_TYPE=Release -DCAPSTONE_ARM_SUPPORT=0 -DCAPSTONE_ARM64_SUPPORT=0 -DCAPSTONE_M68K_SUPPORT=0 -DCAPSTONE_MIPS_SUPPORT=0 -DCAPSTONE_PPC_SUPPORT=0 -DCAPSTONE_SPARC_SUPPORT=0 -DCAPSTONE_SYSZ_SUPPORT=0 -DCAPSTONE_XCORE_SUPPORT=0 -DCAPSTONE_TMS320C64X_SUPPORT=0 -DCAPSTONE_BUILD_STATIC_RUNTIME=OFF -G \"NMake Makefiles\" ..",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5be7444c09e291e9ea0f4c11ba6118115945f947",
      "candidate_info": {
        "commit_hash": "5be7444c09e291e9ea0f4c11ba6118115945f947",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/5be7444c09e291e9ea0f4c11ba6118115945f947",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: support BND prefix. issue #872",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47609:  return false;",
          "47610: }",
          "47613: static bool valid_rep(cs_struct *h, unsigned int opcode)",
          "47614: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47614: static bool valid_bnd(cs_struct *h, unsigned int opcode)",
          "47615: {",
          "47616:  unsigned int id;",
          "47617:  int i = insn_find(insns, ARR_SIZE(insns), opcode, &h->insn_cache);",
          "47618:  if (i != 0) {",
          "47619:   id = insns[i].mapid;",
          "47620:   switch(id) {",
          "47621:    default:",
          "47622:     return false;",
          "47624:    case X86_INS_JAE:",
          "47625:             case X86_INS_JA:",
          "47626:             case X86_INS_JBE:",
          "47627:             case X86_INS_JB:",
          "47628:             case X86_INS_JCXZ:",
          "47629:             case X86_INS_JECXZ:",
          "47630:             case X86_INS_JE:",
          "47631:             case X86_INS_JGE:",
          "47632:             case X86_INS_JG:",
          "47633:             case X86_INS_JLE:",
          "47634:             case X86_INS_JL:",
          "47635:             case X86_INS_JMP:",
          "47636:             case X86_INS_JNE:",
          "47637:             case X86_INS_JNO:",
          "47638:             case X86_INS_JNP:",
          "47639:             case X86_INS_JNS:",
          "47640:             case X86_INS_JO:",
          "47641:             case X86_INS_JP:",
          "47642:             case X86_INS_JRCXZ:",
          "47643:             case X86_INS_JS:",
          "47645:             case X86_INS_CALL:",
          "47646:             case X86_INS_RET:",
          "47647:             case X86_INS_RETF:",
          "47648:             case X86_INS_RETFQ:",
          "47650:     return true;",
          "47651:   }",
          "47652:  }",
          "47655:  return false;",
          "47656: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47745:    if (valid_repne(MI->csh, opcode)) {",
          "47746:     SStream_concat(O, \"repne|\");",
          "47747:     add_cx(MI);",
          "47748:    } else {",
          "47750:     MI->x86_prefix[0] = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47794:    } else if (valid_bnd(MI->csh, opcode)) {",
          "47795:     SStream_concat(O, \"bnd|\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}