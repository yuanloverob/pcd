{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22de8357dfbc077ecedb1ebe7439a409f7903c6b",
      "candidate_info": {
        "commit_hash": "22de8357dfbc077ecedb1ebe7439a409f7903c6b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/22de8357dfbc077ecedb1ebe7439a409f7903c6b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Fix a harmless compiler warning.\n\nFossilOrigin-Name: 34343c4b0657767f2676a2a9feb670cf000824e3eadfb1a6d87b57404191d8f9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e6314e386c6877c669bd32788d3886253b0a187bee2c3889f4eaba219f5e52c7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "573:     assert( pExpr->y.pTab!=0 );",
          "574:     assert( pMatch->iCursor==pExpr->iTable );",
          "575:     if( pExpr->y.pTab->tabFlags & TF_HasGenerated ){",
          "578:     }",
          "579:     pMatch->colUsed |= ((Bitmask)1)<<n;",
          "580:   }",
          "",
          "[Removed Lines]",
          "576:       Column *pCol = pExpr->y.pTab->aCol + pExpr->iColumn;",
          "577:       if( pCol->colFlags & COLFLAG_GENERATED ) n = BMS-1;",
          "",
          "[Added Lines]",
          "576:       Column *pColumn = pExpr->y.pTab->aCol + pExpr->iColumn;",
          "577:       if( pColumn->colFlags & COLFLAG_GENERATED ) n = BMS-1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e20945729559e42520d786652c09b00cc9e414f2",
      "candidate_info": {
        "commit_hash": "e20945729559e42520d786652c09b00cc9e414f2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e20945729559e42520d786652c09b00cc9e414f2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "src/sqliteInt.h",
          "src/window.c"
        ],
        "message": "Consolidate the removal of Window objects from the Select.pWin list into a single subroutine.\n\nFossilOrigin-Name: e46b2afc99329c43de08d4a2e6ade4d2239d7409c5d5626bf272a3e0dd24d1b4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 05080344dceafcfb670fbf01f7d69a1d713a54b6845f968a9cfe941fb53b13af",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1305: static int resolveRemoveWindowsCb(Walker *pWalker, Expr *pExpr){",
          "1306:   if( ExprHasProperty(pExpr, EP_WinFunc) ){",
          "1307:     Window *pWin = pExpr->y.pWin;",
          "1313:   }",
          "1314:   return WRC_Continue;",
          "1315: }",
          "",
          "[Removed Lines]",
          "1308:     if( pWin->ppThis ){",
          "1310:       if( pWin->pNextWin ) pWin->pNextWin->ppThis = pWin->ppThis;",
          "1311:       pWin->ppThis = 0;",
          "1312:     }",
          "",
          "[Added Lines]",
          "1308:     sqlite3WindowUnlinkFromSelect(pWin);",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3615: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "3616: void sqlite3WindowDelete(sqlite3*, Window*);",
          "3617: void sqlite3WindowListDelete(sqlite3 *db, Window *p);",
          "3618: Window *sqlite3WindowAlloc(Parse*, int, int, Expr*, int , Expr*, u8);",
          "3619: void sqlite3WindowAttach(Parse*, Expr*, Window*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3617: void sqlite3WindowUnlinkFromSelect(Window*);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1017:   return rc;",
          "1018: }",
          "1023: void sqlite3WindowDelete(sqlite3 *db, Window *p){",
          "1024:   if( p ){",
          "1029:     sqlite3ExprDelete(db, p->pFilter);",
          "1030:     sqlite3ExprListDelete(db, p->pPartition);",
          "1031:     sqlite3ExprListDelete(db, p->pOrderBy);",
          "",
          "[Removed Lines]",
          "1025:     if( p->ppThis ){",
          "1027:       if( p->pNextWin ) p->pNextWin->ppThis = p->ppThis;",
          "1028:     }",
          "",
          "[Added Lines]",
          "1024: void sqlite3WindowUnlinkFromSelect(Window *p){",
          "1025:   if( p->ppThis ){",
          "1027:     if( p->pNextWin ) p->pNextWin->ppThis = p->ppThis;",
          "1028:     p->ppThis = 0;",
          "1029:   }",
          "1030: }",
          "1037:     sqlite3WindowUnlinkFromSelect(p);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
      "candidate_info": {
        "commit_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/495ed62e850f449e566a06ff827db1447cf03fcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Frame range comparisons can never be NULL because the values will have been checked for NULL prior to the test.\n\nFossilOrigin-Name: fa37cf9a6aa3e4325674cb6af68f617d25e349c3f694d0117a19a36fc42daf15",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a69bb4f257500e40ef4056d5628ef25266def5bcef07eebdb471a79fffe80237",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2543:   if( pMWin->eStart==pMWin->eEnd && regStart ){",
          "2544:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2545:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "2549:     windowAggFinal(&s, 0);",
          "2550:     sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2551:     VdbeCoverageNeverTaken(v);",
          "",
          "[Removed Lines]",
          "2546:     VdbeCoverage(v);",
          "2547:     VdbeCoverageIf(v, op==OP_Ge);",
          "2548:     VdbeCoverageIf(v, op==OP_Le);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
      "candidate_info": {
        "commit_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c"
        ],
        "message": "Avoid using non-ANSI return statement in void function sqlite3WalSnapshotUnlock().\n\nFossilOrigin-Name: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7b41222428dcebaae2e9a0e8192e091b6fdee5b1163a5fa14ca1cd4f06354983",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7698: void sqlite3PagerSnapshotUnlock(Pager *pPager){",
          "7699:   assert( pPager->pWal );",
          "7701: }",
          "",
          "[Removed Lines]",
          "7700:   return sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "[Added Lines]",
          "7700:   sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
      "candidate_info": {
        "commit_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7dc3547eeb691d5397e9dc55206daab0927937d8",
        "files": [
          "Makefile.linux-gcc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Updates to the default settings in Makefile.linux-gcc.\n\nFossilOrigin-Name: 3044cf6917ea8324175fc91657e9a5978af9748f72e1914bc361753f0b2d897d",
        "before_after_code_files": [
          "Makefile.linux-gcc||Makefile.linux-gcc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.linux-gcc||Makefile.linux-gcc": [
          "File: Makefile.linux-gcc -> Makefile.linux-gcc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #### C Compiler and options for use in building executables that",
          "20: #    will run on the platform that is doing the build.",
          "21: #",
          "23: #BCC = /opt/ancic/bin/c89 -0",
          "25: #### If the target operating system supports the \"usleep()\" system",
          "",
          "[Removed Lines]",
          "22: BCC = gcc -g -O2",
          "",
          "[Added Lines]",
          "22: BCC = gcc -g -O0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: #### Specify any extra linker options needed to make the library",
          "39: #    thread safe",
          "40: #",
          "44: #### Specify any extra libraries needed to access required functions.",
          "45: #",
          "",
          "[Removed Lines]",
          "41: #THREADLIB = -lpthread",
          "42: THREADLIB =",
          "",
          "[Added Lines]",
          "41: THREADLIB = -lpthread -lm -ldl",
          "42: #THREADLIB =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #    You can make the library go almost twice as fast if you compile",
          "55: #    with -DNDEBUG=1",
          "56: #",
          "63: #### The suffix to add to executable files.  \".exe\" for windows.",
          "64: #    Nothing for unix.",
          "",
          "[Removed Lines]",
          "57: #OPTS = -DSQLITE_DEBUG=2",
          "58: #OPTS = -DSQLITE_DEBUG=1",
          "59: #OPTS =",
          "60: OPTS = -DNDEBUG=1",
          "61: OPTS += -DHAVE_FDATASYNC=1",
          "",
          "[Added Lines]",
          "57: OPTS += -DSQLITE_DEBUG=1",
          "58: OPTS += -DSQLITE_ENABLE_WHERETRACE",
          "59: OPTS += -DSQLITE_ENABLE_SELECTTRACE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70: #    will run on the target platform.  This is usually the same",
          "71: #    as BCC, unless you are cross-compiling.",
          "72: #",
          "74: #TCC = gcc -g -O0 -Wall",
          "75: #TCC = gcc -g -O0 -Wall -fprofile-arcs -ftest-coverage",
          "76: #TCC = /opt/mingw/bin/i386-mingw32-gcc -O6",
          "",
          "[Removed Lines]",
          "73: TCC = gcc -O6",
          "",
          "[Added Lines]",
          "71: TCC = gcc -O0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92: #### Extra compiler options needed for programs that use the TCL library.",
          "93: #",
          "100: #### Linker options needed to link against the TCL library.",
          "101: #",
          "102: #LIBTCL = -ltcl -lm -ldl",
          "107: #### Additional objects for SQLite library when TCL support is enabled.",
          "108: #TCLOBJ =",
          "",
          "[Removed Lines]",
          "94: #TCL_FLAGS =",
          "95: #TCL_FLAGS = -DSTATIC_BUILD=1",
          "96: TCL_FLAGS = -I/home/drh/tcltk/8.5linux",
          "97: #TCL_FLAGS = -I/home/drh/tcltk/8.5win -DSTATIC_BUILD=1",
          "98: #TCL_FLAGS = -I/home/drh/tcltk/8.3hpux",
          "103: LIBTCL = /home/drh/tcltk/8.5linux/libtcl8.5g.a -lm -ldl",
          "104: #LIBTCL = /home/drh/tcltk/8.5win/libtcl85s.a -lmsvcrt",
          "105: #LIBTCL = /home/drh/tcltk/8.3hpux/libtcl8.3.a -ldld -lm -lc",
          "",
          "[Added Lines]",
          "92: TCL_FLAGS = -I/home/drh/tcl/include/tcl8.6",
          "97: LIBTCL = /home/drh/tcl/lib/libtcl8.6.a -lm -lpthread -ldl -lz",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5351e920f489562f959ab8a376ff720f845ea165e0cdc7c3a271aac53c2aa64a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}