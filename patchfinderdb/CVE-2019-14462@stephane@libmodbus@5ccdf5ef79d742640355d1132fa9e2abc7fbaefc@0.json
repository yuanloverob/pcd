{
  "cve_id": "CVE-2019-14462",
  "cve_desc": "An issue was discovered in libmodbus before 3.0.7 and 3.1.x before 3.1.5. There is an out-of-bounds read for the MODBUS_FC_WRITE_MULTIPLE_COILS case, aka VD-1302.",
  "repo": "stephane/libmodbus",
  "patch_hash": "5ccdf5ef79d742640355d1132fa9e2abc7fbaefc",
  "patch_info": {
    "commit_hash": "5ccdf5ef79d742640355d1132fa9e2abc7fbaefc",
    "repo": "stephane/libmodbus",
    "commit_url": "https://github.com/stephane/libmodbus/commit/5ccdf5ef79d742640355d1132fa9e2abc7fbaefc",
    "files": [
      "src/modbus.c"
    ],
    "message": "Fix VD-1301 and VD-1302 vulnerabilities\n\nThis patch was contributed by Maor Vermucht and Or Peles from\nVDOO Connected Trust.",
    "before_after_code_files": [
      "src/modbus.c||src/modbus.c"
    ]
  },
  "patch_diff": {
    "src/modbus.c||src/modbus.c": [
      "File: src/modbus.c -> src/modbus.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "839:         break;",
      "840:     case MODBUS_FC_WRITE_MULTIPLE_COILS: {",
      "841:         int nb = (req[offset + 3] << 8) + req[offset + 4];",
      "842:         int mapping_address = address - mb_mapping->start_bits;",
      "",
      "[Removed Lines]",
      "844:         if (nb < 1 || MODBUS_MAX_WRITE_BITS < nb) {",
      "",
      "[Added Lines]",
      "842:         int nb_bits = req[offset + 5];",
      "845:         if (nb < 1 || MODBUS_MAX_WRITE_BITS < nb || nb_bits * 8 < nb) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "870:         break;",
      "871:     case MODBUS_FC_WRITE_MULTIPLE_REGISTERS: {",
      "872:         int nb = (req[offset + 3] << 8) + req[offset + 4];",
      "873:         int mapping_address = address - mb_mapping->start_registers;",
      "876:             rsp_length = response_exception(",
      "877:                 ctx, &sft, MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE, rsp, TRUE,",
      "878:                 \"Illegal number of values %d in write_registers (max %d)\\n\",",
      "",
      "[Removed Lines]",
      "875:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb) {",
      "",
      "[Added Lines]",
      "874:         int nb_bytes = req[offset + 5];",
      "877:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb || nb_bytes * 8 < nb) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6f915d4215c06be3c719761423d9b5e8aa3cb820",
      "candidate_info": {
        "commit_hash": "6f915d4215c06be3c719761423d9b5e8aa3cb820",
        "repo": "stephane/libmodbus",
        "commit_url": "https://github.com/stephane/libmodbus/commit/6f915d4215c06be3c719761423d9b5e8aa3cb820",
        "files": [
          "src/modbus.c"
        ],
        "message": "Fix my so stupid fix for VD-1301 vulnerability\n\nI can't believe I committed that copy/paste mistake.\nSorry Maor Vermucht and Or Peles, excepted naming your original\npatch was OK.\n\nThank you Karl Palsson for your review.",
        "before_after_code_files": [
          "src/modbus.c||src/modbus.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/modbus.c||src/modbus.c"
          ],
          "candidate": [
            "src/modbus.c||src/modbus.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modbus.c||src/modbus.c": [
          "File: src/modbus.c -> src/modbus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "874:         int nb_bytes = req[offset + 5];",
          "875:         int mapping_address = address - mb_mapping->start_registers;",
          "878:             rsp_length = response_exception(",
          "879:                 ctx, &sft, MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE, rsp, TRUE,",
          "880:                 \"Illegal number of values %d in write_registers (max %d)\\n\",",
          "",
          "[Removed Lines]",
          "877:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb || nb_bytes * 8 < nb) {",
          "",
          "[Added Lines]",
          "877:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb || nb_bytes != nb * 2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b5cb5896120d7564f4c34fdc5aaa4f22a97e45c",
      "candidate_info": {
        "commit_hash": "2b5cb5896120d7564f4c34fdc5aaa4f22a97e45c",
        "repo": "stephane/libmodbus",
        "commit_url": "https://github.com/stephane/libmodbus/commit/2b5cb5896120d7564f4c34fdc5aaa4f22a97e45c",
        "files": [
          "src/modbus.c"
        ],
        "message": "Fix VD-1301 and VD-1302 vulnerabilities\n\nThis patch was contributed by Maor Vermucht and Or Peles from\nVDOO Connected Trust.",
        "before_after_code_files": [
          "src/modbus.c||src/modbus.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/modbus.c||src/modbus.c"
          ],
          "candidate": [
            "src/modbus.c||src/modbus.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modbus.c||src/modbus.c": [
          "File: src/modbus.c -> src/modbus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "832:         break;",
          "833:     case _FC_WRITE_MULTIPLE_COILS: {",
          "834:         int nb = (req[offset + 3] << 8) + req[offset + 4];",
          "837:             if (ctx->debug) {",
          "838:                 fprintf(stderr,",
          "839:                         \"Illegal number of values %d in write_bits (max %d)\\n\",",
          "",
          "[Removed Lines]",
          "836:         if (nb < 1 || MODBUS_MAX_WRITE_BITS < nb) {",
          "",
          "[Added Lines]",
          "835:         int nb_bits = req[offset + 5];",
          "837:         if (nb < 1 || MODBUS_MAX_WRITE_BITS < nb || nb_bits * 8 < nb) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "842:             rsp_length = response_exception(",
          "843:                 ctx, &sft,",
          "844:                 MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE, rsp);",
          "846:             if (ctx->debug) {",
          "847:                 fprintf(stderr, \"Illegal data address %0X in write_bits\\n\",",
          "848:                         address + nb);",
          "",
          "[Removed Lines]",
          "845:         } else if ((address + nb) > mb_mapping->nb_bits) {",
          "",
          "[Added Lines]",
          "846:         } else if ((address + nb) > mb_mapping->nb_bits ) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "863:         break;",
          "864:     case _FC_WRITE_MULTIPLE_REGISTERS: {",
          "865:         int nb = (req[offset + 3] << 8) + req[offset + 4];",
          "868:             if (ctx->debug) {",
          "869:                 fprintf(stderr,",
          "870:                         \"Illegal number of values %d in write_registers (max %d)\\n\",",
          "",
          "[Removed Lines]",
          "867:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb) {",
          "",
          "[Added Lines]",
          "867:         int nb_bytes = req[offset + 5];",
          "869:         if (nb < 1 || MODBUS_MAX_WRITE_REGISTERS < nb || nb_bytes * 8 < nb) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}