{
  "cve_id": "CVE-2020-1898",
  "cve_desc": "The fb_unserialize function did not impose a depth limit for nested deserialization. That meant a maliciously constructed string could cause deserialization to recurse, leading to stack exhaustion. This issue affected HHVM prior to v4.32.3, between versions 4.33.0 and 4.56.0, 4.57.0, 4.58.0, 4.58.1, 4.59.0, 4.60.0, 4.61.0, 4.62.0.",
  "repo": "facebook/hhvm",
  "patch_hash": "1746dfb11fc0048366f34669e74318b8278a684c",
  "patch_info": {
    "commit_hash": "1746dfb11fc0048366f34669e74318b8278a684c",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/1746dfb11fc0048366f34669e74318b8278a684c",
    "files": [
      "hphp/hack/hhi/builtins_fb.hhi",
      "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
      "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
      "hphp/runtime/ext/fb/VariantController.h",
      "hphp/runtime/ext/fb/ext_fb.cpp",
      "hphp/test/slow/ext_fb/unserialize-bad-set.php",
      "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
      "hphp/test/slow/ext_fb/unserialize_max_depth.php",
      "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
    ],
    "message": "CVE-2020-1898\n\nDon't allow for unlimited nesting in FBUnserialize or fb_compact_unserialize",
    "before_after_code_files": [
      "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
      "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
      "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
      "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h",
      "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
      "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
      "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
      "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
      "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
    ]
  },
  "patch_diff": {
    "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
      "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
      "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
      "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
      "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
      "10: const FB_SERIALIZE_HACK_ARRAYS_AND_KEYSETS = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
      "",
      "---------------"
    ],
    "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h": [
      "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "406:   folly::StringPiece serialized) {",
      "408:   FBUnserializer<V> unserializer(serialized);",
      "410: }",
      "412: template <class V>",
      "",
      "[Removed Lines]",
      "409:   return unserializer.unserializeThing();",
      "",
      "[Added Lines]",
      "409:   return unserializer.unserializeThing(0);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "524: }",
      "526: template <class V>",
      "528:   p_ += CODE_SIZE;",
      "530:   typename V::MapType ret = V::createMap();",
      "",
      "[Removed Lines]",
      "527: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
      "",
      "[Added Lines]",
      "527: inline typename V::MapType FBUnserializer<V>::unserializeMap(size_t depth) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "536:       case FB_SERIALIZE_STRING:",
      "537:         {",
      "538:           auto key = unserializeString();",
      "540:           V::mapSet(ret, std::move(key), std::move(value));",
      "541:         }",
      "542:         break;",
      "543:       default:",
      "544:         {",
      "545:           auto key = unserializeInt64();",
      "547:           V::mapSet(ret, std::move(key), std::move(value));",
      "548:         }",
      "549:     }",
      "",
      "[Removed Lines]",
      "539:           auto value = unserializeThing();",
      "546:           auto value = unserializeThing();",
      "",
      "[Added Lines]",
      "539:           auto value = unserializeThing(depth + 1);",
      "546:           auto value = unserializeThing(depth + 1);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "556: }",
      "558: template <class V>",
      "560:   p_ += CODE_SIZE;",
      "562:   typename V::VectorType ret = V::createVector();",
      "564:   size_t code = nextCode();",
      "565:   while (code != FB_SERIALIZE_STOP) {",
      "567:     code = nextCode();",
      "568:   }",
      "569:   p_ += CODE_SIZE;",
      "",
      "[Removed Lines]",
      "559: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
      "566:     V::vectorAppend(ret, unserializeThing());",
      "",
      "[Added Lines]",
      "559: inline typename V::VectorType",
      "560: FBUnserializer<V>::unserializeVector(size_t depth) {",
      "567:     V::vectorAppend(ret, unserializeThing(depth + 1));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "571: }",
      "573: template <class V>",
      "575:   p_ += CODE_SIZE;",
      "",
      "[Removed Lines]",
      "574: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
      "",
      "[Added Lines]",
      "575: inline typename V::VectorType FBUnserializer<V>::unserializeList(size_t depth) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "583:   size_t code = nextCode();",
      "584:   while (code != FB_SERIALIZE_STOP) {",
      "586:     code = nextCode();",
      "587:   }",
      "588:   p_ += CODE_SIZE;",
      "",
      "[Removed Lines]",
      "585:     V::vectorAppend(ret, unserializeThing());",
      "",
      "[Added Lines]",
      "586:     V::vectorAppend(ret, unserializeThing(depth + 1));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "590: }",
      "592: template <class V>",
      "594:   p_ += CODE_SIZE;",
      "",
      "[Removed Lines]",
      "593: inline typename V::SetType FBUnserializer<V>::unserializeSet() {",
      "",
      "[Added Lines]",
      "594: inline typename V::SetType FBUnserializer<V>::unserializeSet(size_t depth) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "602:   size_t code = nextCode();",
      "603:   while (code != FB_SERIALIZE_STOP) {",
      "605:     code = nextCode();",
      "606:   }",
      "607:   p_ += CODE_SIZE;",
      "",
      "[Removed Lines]",
      "604:     V::setAppend(ret, unserializeThing());",
      "",
      "[Added Lines]",
      "605:     V::setAppend(ret, unserializeThing(depth + 1));",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "664: }",
      "666: template <class V>",
      "668:   size_t code = nextCode();",
      "670:   switch (code) {",
      "",
      "[Removed Lines]",
      "667: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
      "",
      "[Added Lines]",
      "668: inline typename V::VariantType",
      "669: FBUnserializer<V>::unserializeThing(size_t depth) {",
      "670:   if (UNLIKELY(depth > 1024)) {",
      "671:     throw UnserializeError(\"depth > 1024\");",
      "672:   }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "677:     case FB_SERIALIZE_STRING:",
      "678:       return V::fromString(unserializeString());",
      "679:     case FB_SERIALIZE_STRUCT:",
      "681:     case FB_SERIALIZE_NULL:",
      "682:       ++p_;",
      "683:       return V::createNull();",
      "",
      "[Removed Lines]",
      "680:       return V::fromMap(unserializeMap());",
      "",
      "[Added Lines]",
      "686:       return V::fromMap(unserializeMap(depth));",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "686:     case FB_SERIALIZE_BOOLEAN:",
      "687:       return V::fromBool(unserializeBoolean());",
      "688:     case FB_SERIALIZE_VECTOR:",
      "690:     case FB_SERIALIZE_LIST:",
      "692:     case FB_SERIALIZE_SET:",
      "694:     default:",
      "695:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
      "696:                              + \" at location \" + folly::to<std::string>(p_));",
      "",
      "[Removed Lines]",
      "689:       return V::fromVector(unserializeVector());",
      "691:       return V::fromVector(unserializeList());",
      "693:       return V::fromSet(unserializeSet());",
      "",
      "[Added Lines]",
      "695:       return V::fromVector(unserializeVector(depth));",
      "697:       return V::fromVector(unserializeList(depth));",
      "699:       return V::fromSet(unserializeSet(depth));",
      "",
      "---------------"
    ],
    "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h": [
      "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "165:   double unserializeDouble();",
      "166:   typename V::StringType unserializeString();",
      "167:   folly::StringPiece unserializeStringPiece();",
      "174:   folly::StringPiece getSerializedMap();",
      "177:   void advance(size_t delta);",
      "178:   Code nextCode() const;",
      "",
      "[Removed Lines]",
      "168:   typename V::MapType unserializeMap();",
      "169:   typename V::VectorType unserializeVector();",
      "170:   typename V::VectorType unserializeList();",
      "171:   typename V::SetType unserializeSet();",
      "175:   typename V::VariantType unserializeThing();",
      "",
      "[Added Lines]",
      "168:   typename V::MapType unserializeMap(size_t depth);",
      "169:   typename V::VectorType unserializeVector(size_t depth);",
      "170:   typename V::VectorType unserializeList(size_t depth);",
      "171:   typename V::SetType unserializeSet(size_t depth);",
      "175:   typename V::VariantType unserializeThing(size_t depth);",
      "",
      "---------------"
    ],
    "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h": [
      "File: hphp/runtime/ext/fb/VariantController.h -> hphp/runtime/ext/fb/VariantController.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "283:     return set.size();",
      "284:   }",
      "285:   static void setAppend(SetType& set, const VariantType& v) {",
      "289:       throw HPHP::serialize::UnserializeError(",
      "292:     }",
      "293:     set.append(v);",
      "294:   }",
      "",
      "[Removed Lines]",
      "286:     auto value_type = type(v);",
      "287:     if (value_type != HPHP::serialize::Type::INT64 &&",
      "288:         value_type != HPHP::serialize::Type::STRING) {",
      "290:           \"Unsupported keyset element of type \" +",
      "291:           folly::to<std::string>(value_type));",
      "",
      "[Added Lines]",
      "286:     if (!v.isInteger() && !v.isString()) {",
      "288:         \"Keysets can only contain integers or strings\"",
      "289:       );",
      "",
      "---------------"
    ],
    "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp": [
      "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fb/ext_fb.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "66: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
      "67: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
      "68: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
      "70: #ifdef FACEBOOK",
      "71: # define HHVM_FACEBOOK true",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "69: #define FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED        0x0005",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "705: const StaticString s_empty(\"\");",
      "707: int fb_compact_unserialize_from_buffer(",
      "710:   CHECK_ENOUGH(1, p, n);",
      "711:   int code = (unsigned char)buf[p];",
      "",
      "[Removed Lines]",
      "708:   Variant& out, const char* buf, int n, int& p) {",
      "",
      "[Added Lines]",
      "709:     Variant& out, const char* buf, int n, int& p, size_t depth) {",
      "710:   if (UNLIKELY(depth > 1024)) {",
      "711:     return FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED;",
      "712:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "774:       Array arr = Array::CreateVArray();",
      "775:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
      "776:         Variant value;",
      "778:         if (err) {",
      "779:           return err;",
      "780:         }",
      "",
      "[Removed Lines]",
      "777:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
      "",
      "[Added Lines]",
      "781:         int err =",
      "782:           fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "799:           ++p;",
      "800:         } else {",
      "801:           Variant value;",
      "803:           if (err) {",
      "804:             return err;",
      "805:           }",
      "",
      "[Removed Lines]",
      "802:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
      "",
      "[Added Lines]",
      "807:           int err =",
      "808:             fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "820:       Array arr = Array::CreateDArray();",
      "821:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
      "822:         Variant key;",
      "824:         if (err) {",
      "825:           return err;",
      "826:         }",
      "827:         Variant value;",
      "829:         if (err) {",
      "830:           return err;",
      "831:         }",
      "",
      "[Removed Lines]",
      "823:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
      "828:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
      "",
      "[Added Lines]",
      "829:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p, depth + 1);",
      "834:         err = fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "862:   Variant ret;",
      "863:   int p = 0;",
      "865:   if (err) {",
      "866:     success = false;",
      "867:     errcode = err;",
      "",
      "[Removed Lines]",
      "864:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
      "",
      "[Added Lines]",
      "870:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p, 0);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1313:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
      "1314:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
      "1315:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
      "1317:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
      "1318:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1322:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED);",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php": [
      "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_fb/unserialize-bad-set.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?hh",
      "4: <<__EntryPoint>>",
      "5: function main() {",
      "6:   $ret = null;",
      "7:   var_dump(fb_unserialize(\"\\x14\\x02\\x01\\x14\\x02\\x01\\x02\\x01\\x01\\x01\", inout $ret));",
      "8:   var_dump($ret);",
      "9: }",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect": [
      "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: bool(false)",
      "2: bool(false)",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php": [
      "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_fb/unserialize_max_depth.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?hh",
      "4: function make_fb_serialize_struct($size) {",
      "5:   return str_repeat(\"\\x0a\\x02\\x01\", $size) . \"\\x02\\x01\" . str_repeat(\"\\x01\", $size);",
      "6: }",
      "8: function make_fb_serialize_vector($size) {",
      "9:   return str_repeat(\"\\x12\", $size) . str_repeat(\"\\x01\", $size);",
      "10: }",
      "12: function make_fb_serialize_list($size) {",
      "13:   return str_repeat(\"\\x13\\x02\\x01\", $size) . \"\\x02\\x01\" . str_repeat(\"\\x01\", $size);",
      "14: }",
      "16: function make_fb_cs_list_map($size) {",
      "17:   return str_repeat(\"\\xfa\\xfd\", $size) . str_repeat(\"\\xfc\", $size);",
      "18: }",
      "20: function make_fb_cs_map($size) {",
      "21:   return str_repeat(\"\\xfb\\x01\", $size) . \"\\x01\" . str_repeat(\"\\xfc\", $size);",
      "22: }",
      "24: function make_fb_cs_vector($size) {",
      "25:   return str_repeat(\"\\xfe\", $size) . str_repeat(\"\\xfc\", $size);",
      "26: }",
      "28: function test($serialized) {",
      "29:   $ret = null;",
      "30:   var_dump(",
      "31:     fb_unserialize(",
      "32:       $serialized,",
      "33:       inout $ret,",
      "34:       FB_SERIALIZE_HACK_ARRAYS",
      "35:     )",
      "36:   );",
      "37:   var_dump($ret);",
      "38: }",
      "40: function tests($size) {",
      "41:   test(make_fb_serialize_struct($size));",
      "42:   test(make_fb_serialize_vector($size));",
      "43:   test(make_fb_serialize_list($size));",
      "44:   test(make_fb_cs_list_map($size));",
      "45:   test(make_fb_cs_map($size));",
      "46:   test(make_fb_cs_vector($size));",
      "47: }",
      "49: <<__EntryPoint>>",
      "50: function main() {",
      "51:   tests(10);",
      "52:   tests(1026);",
      "53: }",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect": [
      "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_fb/unserialize_max_depth.php.expect",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: dict(1) {",
      "2:   [1]=>",
      "3:   dict(1) {",
      "4:     [1]=>",
      "5:     dict(1) {",
      "6:       [1]=>",
      "7:       dict(1) {",
      "8:         [1]=>",
      "9:         dict(1) {",
      "10:           [1]=>",
      "11:           dict(1) {",
      "12:             [1]=>",
      "13:             dict(1) {",
      "14:               [1]=>",
      "15:               dict(1) {",
      "16:                 [1]=>",
      "17:                 dict(1) {",
      "18:                   [1]=>",
      "19:                   dict(1) {",
      "20:                     [1]=>",
      "21:                     int(1)",
      "22:                   }",
      "23:                 }",
      "24:               }",
      "25:             }",
      "26:           }",
      "27:         }",
      "28:       }",
      "29:     }",
      "30:   }",
      "31: }",
      "32: bool(true)",
      "33: vec(1) {",
      "34:   vec(1) {",
      "35:     vec(1) {",
      "36:       vec(1) {",
      "37:         vec(1) {",
      "38:           vec(1) {",
      "39:             vec(1) {",
      "40:               vec(1) {",
      "41:                 vec(1) {",
      "42:                   vec(0) {",
      "43:                   }",
      "44:                 }",
      "45:               }",
      "46:             }",
      "47:           }",
      "48:         }",
      "49:       }",
      "50:     }",
      "51:   }",
      "52: }",
      "53: bool(true)",
      "54: vec(1) {",
      "55:   vec(1) {",
      "56:     vec(1) {",
      "57:       vec(1) {",
      "58:         vec(1) {",
      "59:           vec(1) {",
      "60:             vec(1) {",
      "61:               vec(1) {",
      "62:                 vec(1) {",
      "63:                   vec(1) {",
      "64:                     int(1)",
      "65:                   }",
      "66:                 }",
      "67:               }",
      "68:             }",
      "69:           }",
      "70:         }",
      "71:       }",
      "72:     }",
      "73:   }",
      "74: }",
      "75: bool(true)",
      "76: array(1) {",
      "77:   [1]=>",
      "78:   array(1) {",
      "79:     [1]=>",
      "80:     array(1) {",
      "81:       [1]=>",
      "82:       array(1) {",
      "83:         [1]=>",
      "84:         array(1) {",
      "85:           [1]=>",
      "86:           array(1) {",
      "87:             [1]=>",
      "88:             array(1) {",
      "89:               [1]=>",
      "90:               array(1) {",
      "91:                 [1]=>",
      "92:                 array(1) {",
      "93:                   [1]=>",
      "94:                   array(0) {",
      "95:                   }",
      "96:                 }",
      "97:               }",
      "98:             }",
      "99:           }",
      "100:         }",
      "101:       }",
      "102:     }",
      "103:   }",
      "104: }",
      "105: bool(true)",
      "106: array(1) {",
      "107:   [1]=>",
      "108:   array(1) {",
      "109:     [1]=>",
      "110:     array(1) {",
      "111:       [1]=>",
      "112:       array(1) {",
      "113:         [1]=>",
      "114:         array(1) {",
      "115:           [1]=>",
      "116:           array(1) {",
      "117:             [1]=>",
      "118:             array(1) {",
      "119:               [1]=>",
      "120:               array(1) {",
      "121:                 [1]=>",
      "122:                 array(1) {",
      "123:                   [1]=>",
      "124:                   array(1) {",
      "125:                     [1]=>",
      "126:                     int(1)",
      "127:                   }",
      "128:                 }",
      "129:               }",
      "130:             }",
      "131:           }",
      "132:         }",
      "133:       }",
      "134:     }",
      "135:   }",
      "136: }",
      "137: bool(true)",
      "138: array(1) {",
      "139:   [0]=>",
      "140:   array(1) {",
      "141:     [0]=>",
      "142:     array(1) {",
      "143:       [0]=>",
      "144:       array(1) {",
      "145:         [0]=>",
      "146:         array(1) {",
      "147:           [0]=>",
      "148:           array(1) {",
      "149:             [0]=>",
      "150:             array(1) {",
      "151:               [0]=>",
      "152:               array(1) {",
      "153:                 [0]=>",
      "154:                 array(1) {",
      "155:                   [0]=>",
      "156:                   array(0) {",
      "157:                   }",
      "158:                 }",
      "159:               }",
      "160:             }",
      "161:           }",
      "162:         }",
      "163:       }",
      "164:     }",
      "165:   }",
      "166: }",
      "167: bool(true)",
      "168: bool(false)",
      "169: bool(false)",
      "170: bool(false)",
      "171: bool(false)",
      "172: bool(false)",
      "173: bool(false)",
      "174: bool(false)",
      "175: bool(false)",
      "176: bool(false)",
      "177: bool(false)",
      "178: bool(false)",
      "179: bool(false)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "db643579839a3ac4f286960b3ac7a97f35ed6f7a",
      "candidate_info": {
        "commit_hash": "db643579839a3ac4f286960b3ac7a97f35ed6f7a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/db643579839a3ac4f286960b3ac7a97f35ed6f7a",
        "files": [
          "hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ],
        "message": "CVE-2020-1898\n\nDon't allow for unlimited nesting in FBUnserialize or fb_compact_unserialize",
        "before_after_code_files": [
          "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ],
          "candidate": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
          "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
          "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
          "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
          "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
          "10: const FB_SERIALIZE_HACK_ARRAYS_AND_KEYSETS = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:   folly::StringPiece serialized) {",
          "408:   FBUnserializer<V> unserializer(serialized);",
          "410: }",
          "412: template <class V>",
          "",
          "[Removed Lines]",
          "409:   return unserializer.unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524: }",
          "526: template <class V>",
          "528:   p_ += CODE_SIZE;",
          "530:   typename V::MapType ret = V::createMap();",
          "",
          "[Removed Lines]",
          "527: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536:       case FB_SERIALIZE_STRING:",
          "537:         {",
          "538:           auto key = unserializeString();",
          "540:           V::mapSet(ret, std::move(key), std::move(value));",
          "541:         }",
          "542:         break;",
          "543:       default:",
          "544:         {",
          "545:           auto key = unserializeInt64();",
          "547:           V::mapSet(ret, std::move(key), std::move(value));",
          "548:         }",
          "549:     }",
          "",
          "[Removed Lines]",
          "539:           auto value = unserializeThing();",
          "546:           auto value = unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556: }",
          "558: template <class V>",
          "560:   p_ += CODE_SIZE;",
          "562:   typename V::VectorType ret = V::createVector();",
          "564:   size_t code = nextCode();",
          "565:   while (code != FB_SERIALIZE_STOP) {",
          "567:     code = nextCode();",
          "568:   }",
          "569:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "559: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
          "566:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571: }",
          "573: template <class V>",
          "575:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "574: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "583:   size_t code = nextCode();",
          "584:   while (code != FB_SERIALIZE_STOP) {",
          "586:     code = nextCode();",
          "587:   }",
          "588:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "585:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "590: }",
          "592: template <class V>",
          "594:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "593: inline typename V::SetType FBUnserializer<V>::unserializeSet() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "602:   size_t code = nextCode();",
          "603:   while (code != FB_SERIALIZE_STOP) {",
          "605:     code = nextCode();",
          "606:   }",
          "607:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "604:     V::setAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "664: }",
          "666: template <class V>",
          "668:   size_t code = nextCode();",
          "670:   switch (code) {",
          "",
          "[Removed Lines]",
          "667: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "677:     case FB_SERIALIZE_STRING:",
          "678:       return V::fromString(unserializeString());",
          "679:     case FB_SERIALIZE_STRUCT:",
          "681:     case FB_SERIALIZE_NULL:",
          "682:       ++p_;",
          "683:       return V::createNull();",
          "",
          "[Removed Lines]",
          "680:       return V::fromMap(unserializeMap());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "686:     case FB_SERIALIZE_BOOLEAN:",
          "687:       return V::fromBool(unserializeBoolean());",
          "688:     case FB_SERIALIZE_VECTOR:",
          "690:     case FB_SERIALIZE_LIST:",
          "692:     case FB_SERIALIZE_SET:",
          "694:     default:",
          "695:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
          "696:                              + \" at location \" + folly::to<std::string>(p_));",
          "",
          "[Removed Lines]",
          "689:       return V::fromVector(unserializeVector());",
          "691:       return V::fromVector(unserializeList());",
          "693:       return V::fromSet(unserializeSet());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   double unserializeDouble();",
          "166:   typename V::StringType unserializeString();",
          "167:   folly::StringPiece unserializeStringPiece();",
          "174:   folly::StringPiece getSerializedMap();",
          "177:   void advance(size_t delta);",
          "178:   Code nextCode() const;",
          "",
          "[Removed Lines]",
          "168:   typename V::MapType unserializeMap();",
          "169:   typename V::VectorType unserializeVector();",
          "170:   typename V::VectorType unserializeList();",
          "171:   typename V::SetType unserializeSet();",
          "175:   typename V::VariantType unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h": [
          "File: hphp/runtime/ext/fb/VariantController.h -> hphp/runtime/ext/fVariantController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:     return set.size();",
          "284:   }",
          "285:   static void setAppend(SetType& set, const VariantType& v) {",
          "289:       throw HPHP::serialize::UnserializeError(",
          "292:     }",
          "293:     set.append(v);",
          "294:   }",
          "",
          "[Removed Lines]",
          "286:     auto value_type = type(v);",
          "287:     if (value_type != HPHP::serialize::Type::INT64 &&",
          "288:         value_type != HPHP::serialize::Type::STRING) {",
          "290:           \"Unsupported keyset element of type \" +",
          "291:           folly::to<std::string>(value_type));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp": [
          "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fext_fb.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
          "67: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
          "68: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
          "70: #ifdef FACEBOOK",
          "71: # define HHVM_FACEBOOK true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "705: const StaticString s_empty(\"\");",
          "707: int fb_compact_unserialize_from_buffer(",
          "710:   CHECK_ENOUGH(1, p, n);",
          "711:   int code = (unsigned char)buf[p];",
          "",
          "[Removed Lines]",
          "708:   Variant& out, const char* buf, int n, int& p) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "774:       Array arr = Array::CreateVArray();",
          "775:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "776:         Variant value;",
          "778:         if (err) {",
          "779:           return err;",
          "780:         }",
          "",
          "[Removed Lines]",
          "777:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "799:           ++p;",
          "800:         } else {",
          "801:           Variant value;",
          "803:           if (err) {",
          "804:             return err;",
          "805:           }",
          "",
          "[Removed Lines]",
          "802:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "820:       Array arr = Array::CreateDArray();",
          "821:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "822:         Variant key;",
          "824:         if (err) {",
          "825:           return err;",
          "826:         }",
          "827:         Variant value;",
          "829:         if (err) {",
          "830:           return err;",
          "831:         }",
          "",
          "[Removed Lines]",
          "823:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
          "828:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "862:   Variant ret;",
          "863:   int p = 0;",
          "865:   if (err) {",
          "866:     success = false;",
          "867:     errcode = err;",
          "",
          "[Removed Lines]",
          "864:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1313:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
          "1314:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
          "1315:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
          "1317:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
          "1318:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_funserialize-bad-set.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_funserialize_max_depth.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_funserialize_max_depth.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f6709471fc65f0eecdbfef8ae1ce679c9ae5fd8",
      "candidate_info": {
        "commit_hash": "8f6709471fc65f0eecdbfef8ae1ce679c9ae5fd8",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/8f6709471fc65f0eecdbfef8ae1ce679c9ae5fd8",
        "files": [
          "hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ],
        "message": "CVE-2020-1898\n\nDon't allow for unlimited nesting in FBUnserialize or fb_compact_unserialize",
        "before_after_code_files": [
          "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ],
          "candidate": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
          "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
          "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
          "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
          "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
          "10: const FB_SERIALIZE_HACK_ARRAYS_AND_KEYSETS = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:   folly::StringPiece serialized) {",
          "408:   FBUnserializer<V> unserializer(serialized);",
          "410: }",
          "412: template <class V>",
          "",
          "[Removed Lines]",
          "409:   return unserializer.unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524: }",
          "526: template <class V>",
          "528:   p_ += CODE_SIZE;",
          "530:   typename V::MapType ret = V::createMap();",
          "",
          "[Removed Lines]",
          "527: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536:       case FB_SERIALIZE_STRING:",
          "537:         {",
          "538:           auto key = unserializeString();",
          "540:           V::mapSet(ret, std::move(key), std::move(value));",
          "541:         }",
          "542:         break;",
          "543:       default:",
          "544:         {",
          "545:           auto key = unserializeInt64();",
          "547:           V::mapSet(ret, std::move(key), std::move(value));",
          "548:         }",
          "549:     }",
          "",
          "[Removed Lines]",
          "539:           auto value = unserializeThing();",
          "546:           auto value = unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556: }",
          "558: template <class V>",
          "560:   p_ += CODE_SIZE;",
          "562:   typename V::VectorType ret = V::createVector();",
          "564:   size_t code = nextCode();",
          "565:   while (code != FB_SERIALIZE_STOP) {",
          "567:     code = nextCode();",
          "568:   }",
          "569:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "559: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
          "566:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571: }",
          "573: template <class V>",
          "575:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "574: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "583:   size_t code = nextCode();",
          "584:   while (code != FB_SERIALIZE_STOP) {",
          "586:     code = nextCode();",
          "587:   }",
          "588:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "585:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "590: }",
          "592: template <class V>",
          "594:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "593: inline typename V::SetType FBUnserializer<V>::unserializeSet() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "602:   size_t code = nextCode();",
          "603:   while (code != FB_SERIALIZE_STOP) {",
          "605:     code = nextCode();",
          "606:   }",
          "607:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "604:     V::setAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "664: }",
          "666: template <class V>",
          "668:   size_t code = nextCode();",
          "670:   switch (code) {",
          "",
          "[Removed Lines]",
          "667: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "677:     case FB_SERIALIZE_STRING:",
          "678:       return V::fromString(unserializeString());",
          "679:     case FB_SERIALIZE_STRUCT:",
          "681:     case FB_SERIALIZE_NULL:",
          "682:       ++p_;",
          "683:       return V::createNull();",
          "",
          "[Removed Lines]",
          "680:       return V::fromMap(unserializeMap());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "686:     case FB_SERIALIZE_BOOLEAN:",
          "687:       return V::fromBool(unserializeBoolean());",
          "688:     case FB_SERIALIZE_VECTOR:",
          "690:     case FB_SERIALIZE_LIST:",
          "692:     case FB_SERIALIZE_SET:",
          "694:     default:",
          "695:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
          "696:                              + \" at location \" + folly::to<std::string>(p_));",
          "",
          "[Removed Lines]",
          "689:       return V::fromVector(unserializeVector());",
          "691:       return V::fromVector(unserializeList());",
          "693:       return V::fromSet(unserializeSet());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   double unserializeDouble();",
          "166:   typename V::StringType unserializeString();",
          "167:   folly::StringPiece unserializeStringPiece();",
          "174:   folly::StringPiece getSerializedMap();",
          "177:   void advance(size_t delta);",
          "178:   Code nextCode() const;",
          "",
          "[Removed Lines]",
          "168:   typename V::MapType unserializeMap();",
          "169:   typename V::VectorType unserializeVector();",
          "170:   typename V::VectorType unserializeList();",
          "171:   typename V::SetType unserializeSet();",
          "175:   typename V::VariantType unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h": [
          "File: hphp/runtime/ext/fb/VariantController.h -> hphp/runtime/ext/fVariantController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:     return set.size();",
          "280:   }",
          "281:   static void setAppend(SetType& set, const VariantType& v) {",
          "285:       throw HPHP::serialize::UnserializeError(",
          "288:     }",
          "289:     set.append(v);",
          "290:   }",
          "",
          "[Removed Lines]",
          "282:     auto value_type = type(v);",
          "283:     if (value_type != HPHP::serialize::Type::INT64 &&",
          "284:         value_type != HPHP::serialize::Type::STRING) {",
          "286:           \"Unsupported keyset element of type \" +",
          "287:           folly::to<std::string>(value_type));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp": [
          "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fext_fb.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
          "67: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
          "68: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
          "70: #ifdef FACEBOOK",
          "71: # define HHVM_FACEBOOK true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "700: const StaticString s_empty(\"\");",
          "702: int fb_compact_unserialize_from_buffer(",
          "705:   CHECK_ENOUGH(1, p, n);",
          "706:   int code = (unsigned char)buf[p];",
          "",
          "[Removed Lines]",
          "703:   Variant& out, const char* buf, int n, int& p) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "769:       Array arr = Array::CreateVArray();",
          "770:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "771:         Variant value;",
          "773:         if (err) {",
          "774:           return err;",
          "775:         }",
          "",
          "[Removed Lines]",
          "772:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "794:           ++p;",
          "795:         } else {",
          "796:           Variant value;",
          "798:           if (err) {",
          "799:             return err;",
          "800:           }",
          "",
          "[Removed Lines]",
          "797:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "815:       Array arr = Array::CreateDArray();",
          "816:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "817:         Variant key;",
          "819:         if (err) {",
          "820:           return err;",
          "821:         }",
          "822:         Variant value;",
          "824:         if (err) {",
          "825:           return err;",
          "826:         }",
          "",
          "[Removed Lines]",
          "818:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
          "823:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "857:   Variant ret;",
          "858:   int p = 0;",
          "860:   if (err) {",
          "861:     success = false;",
          "862:     errcode = err;",
          "",
          "[Removed Lines]",
          "859:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1308:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
          "1309:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
          "1310:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
          "1312:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
          "1313:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_funserialize-bad-set.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_funserialize_max_depth.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_funserialize_max_depth.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a61d67b0ad2f89749a38025177c78d6f070843a6",
      "candidate_info": {
        "commit_hash": "a61d67b0ad2f89749a38025177c78d6f070843a6",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/a61d67b0ad2f89749a38025177c78d6f070843a6",
        "files": [
          "hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ],
        "message": "CVE-2020-1898\n\nDon't allow for unlimited nesting in FBUnserialize or fb_compact_unserialize",
        "before_after_code_files": [
          "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ],
          "candidate": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
          "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
          "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
          "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
          "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
          "10: const FB_SERIALIZE_HACK_ARRAYS_AND_KEYSETS = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:   folly::StringPiece serialized) {",
          "408:   FBUnserializer<V> unserializer(serialized);",
          "410: }",
          "412: template <class V>",
          "",
          "[Removed Lines]",
          "409:   return unserializer.unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524: }",
          "526: template <class V>",
          "528:   p_ += CODE_SIZE;",
          "530:   typename V::MapType ret = V::createMap();",
          "",
          "[Removed Lines]",
          "527: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536:       case FB_SERIALIZE_STRING:",
          "537:         {",
          "538:           auto key = unserializeString();",
          "540:           V::mapSet(ret, std::move(key), std::move(value));",
          "541:         }",
          "542:         break;",
          "543:       default:",
          "544:         {",
          "545:           auto key = unserializeInt64();",
          "547:           V::mapSet(ret, std::move(key), std::move(value));",
          "548:         }",
          "549:     }",
          "",
          "[Removed Lines]",
          "539:           auto value = unserializeThing();",
          "546:           auto value = unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556: }",
          "558: template <class V>",
          "560:   p_ += CODE_SIZE;",
          "562:   typename V::VectorType ret = V::createVector();",
          "564:   size_t code = nextCode();",
          "565:   while (code != FB_SERIALIZE_STOP) {",
          "567:     code = nextCode();",
          "568:   }",
          "569:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "559: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
          "566:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571: }",
          "573: template <class V>",
          "575:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "574: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "583:   size_t code = nextCode();",
          "584:   while (code != FB_SERIALIZE_STOP) {",
          "586:     code = nextCode();",
          "587:   }",
          "588:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "585:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "590: }",
          "592: template <class V>",
          "594:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "593: inline typename V::SetType FBUnserializer<V>::unserializeSet() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "602:   size_t code = nextCode();",
          "603:   while (code != FB_SERIALIZE_STOP) {",
          "605:     code = nextCode();",
          "606:   }",
          "607:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "604:     V::setAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "664: }",
          "666: template <class V>",
          "668:   size_t code = nextCode();",
          "670:   switch (code) {",
          "",
          "[Removed Lines]",
          "667: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "677:     case FB_SERIALIZE_STRING:",
          "678:       return V::fromString(unserializeString());",
          "679:     case FB_SERIALIZE_STRUCT:",
          "681:     case FB_SERIALIZE_NULL:",
          "682:       ++p_;",
          "683:       return V::createNull();",
          "",
          "[Removed Lines]",
          "680:       return V::fromMap(unserializeMap());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "686:     case FB_SERIALIZE_BOOLEAN:",
          "687:       return V::fromBool(unserializeBoolean());",
          "688:     case FB_SERIALIZE_VECTOR:",
          "690:     case FB_SERIALIZE_LIST:",
          "692:     case FB_SERIALIZE_SET:",
          "694:     default:",
          "695:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
          "696:                              + \" at location \" + folly::to<std::string>(p_));",
          "",
          "[Removed Lines]",
          "689:       return V::fromVector(unserializeVector());",
          "691:       return V::fromVector(unserializeList());",
          "693:       return V::fromSet(unserializeSet());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   double unserializeDouble();",
          "166:   typename V::StringType unserializeString();",
          "167:   folly::StringPiece unserializeStringPiece();",
          "174:   folly::StringPiece getSerializedMap();",
          "177:   void advance(size_t delta);",
          "178:   Code nextCode() const;",
          "",
          "[Removed Lines]",
          "168:   typename V::MapType unserializeMap();",
          "169:   typename V::VectorType unserializeVector();",
          "170:   typename V::VectorType unserializeList();",
          "171:   typename V::SetType unserializeSet();",
          "175:   typename V::VariantType unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h": [
          "File: hphp/runtime/ext/fb/VariantController.h -> hphp/runtime/ext/fVariantController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:     return set.size();",
          "284:   }",
          "285:   static void setAppend(SetType& set, const VariantType& v) {",
          "289:       throw HPHP::serialize::UnserializeError(",
          "292:     }",
          "293:     set.append(v);",
          "294:   }",
          "",
          "[Removed Lines]",
          "286:     auto value_type = type(v);",
          "287:     if (value_type != HPHP::serialize::Type::INT64 &&",
          "288:         value_type != HPHP::serialize::Type::STRING) {",
          "290:           \"Unsupported keyset element of type \" +",
          "291:           folly::to<std::string>(value_type));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp": [
          "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fext_fb.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
          "67: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
          "68: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
          "70: #ifdef FACEBOOK",
          "71: # define HHVM_FACEBOOK true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "705: const StaticString s_empty(\"\");",
          "707: int fb_compact_unserialize_from_buffer(",
          "710:   CHECK_ENOUGH(1, p, n);",
          "711:   int code = (unsigned char)buf[p];",
          "",
          "[Removed Lines]",
          "708:   Variant& out, const char* buf, int n, int& p) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "774:       Array arr = Array::CreateVArray();",
          "775:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "776:         Variant value;",
          "778:         if (err) {",
          "779:           return err;",
          "780:         }",
          "",
          "[Removed Lines]",
          "777:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "799:           ++p;",
          "800:         } else {",
          "801:           Variant value;",
          "803:           if (err) {",
          "804:             return err;",
          "805:           }",
          "",
          "[Removed Lines]",
          "802:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "820:       Array arr = Array::CreateDArray();",
          "821:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "822:         Variant key;",
          "824:         if (err) {",
          "825:           return err;",
          "826:         }",
          "827:         Variant value;",
          "829:         if (err) {",
          "830:           return err;",
          "831:         }",
          "",
          "[Removed Lines]",
          "823:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
          "828:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "862:   Variant ret;",
          "863:   int p = 0;",
          "865:   if (err) {",
          "866:     success = false;",
          "867:     errcode = err;",
          "",
          "[Removed Lines]",
          "864:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1313:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
          "1314:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
          "1315:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
          "1317:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
          "1318:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_funserialize-bad-set.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_funserialize_max_depth.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_funserialize_max_depth.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b36461f79806f1674819bcf6d72d7e07ba3756a",
      "candidate_info": {
        "commit_hash": "1b36461f79806f1674819bcf6d72d7e07ba3756a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/1b36461f79806f1674819bcf6d72d7e07ba3756a",
        "files": [
          "hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ],
        "message": "CVE-2020-1898\n\nDon't allow for unlimited nesting in FBUnserialize or fb_compact_unserialize",
        "before_after_code_files": [
          "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
          "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fb/VariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ],
          "candidate": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
          "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
          "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
          "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
          "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
          "10: const FB_SERIALIZE_HACK_ARRAYS_AND_KEYSETS = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fFBSerialize/FBSerialize-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:   folly::StringPiece serialized) {",
          "408:   FBUnserializer<V> unserializer(serialized);",
          "410: }",
          "412: template <class V>",
          "",
          "[Removed Lines]",
          "409:   return unserializer.unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524: }",
          "526: template <class V>",
          "528:   p_ += CODE_SIZE;",
          "530:   typename V::MapType ret = V::createMap();",
          "",
          "[Removed Lines]",
          "527: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536:       case FB_SERIALIZE_STRING:",
          "537:         {",
          "538:           auto key = unserializeString();",
          "540:           V::mapSet(ret, std::move(key), std::move(value));",
          "541:         }",
          "542:         break;",
          "543:       default:",
          "544:         {",
          "545:           auto key = unserializeInt64();",
          "547:           V::mapSet(ret, std::move(key), std::move(value));",
          "548:         }",
          "549:     }",
          "",
          "[Removed Lines]",
          "539:           auto value = unserializeThing();",
          "546:           auto value = unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556: }",
          "558: template <class V>",
          "560:   p_ += CODE_SIZE;",
          "562:   typename V::VectorType ret = V::createVector();",
          "564:   size_t code = nextCode();",
          "565:   while (code != FB_SERIALIZE_STOP) {",
          "567:     code = nextCode();",
          "568:   }",
          "569:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "559: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
          "566:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571: }",
          "573: template <class V>",
          "575:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "574: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "583:   size_t code = nextCode();",
          "584:   while (code != FB_SERIALIZE_STOP) {",
          "586:     code = nextCode();",
          "587:   }",
          "588:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "585:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "590: }",
          "592: template <class V>",
          "594:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "593: inline typename V::SetType FBUnserializer<V>::unserializeSet() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "602:   size_t code = nextCode();",
          "603:   while (code != FB_SERIALIZE_STOP) {",
          "605:     code = nextCode();",
          "606:   }",
          "607:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "604:     V::setAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "664: }",
          "666: template <class V>",
          "668:   size_t code = nextCode();",
          "670:   switch (code) {",
          "",
          "[Removed Lines]",
          "667: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "677:     case FB_SERIALIZE_STRING:",
          "678:       return V::fromString(unserializeString());",
          "679:     case FB_SERIALIZE_STRUCT:",
          "681:     case FB_SERIALIZE_NULL:",
          "682:       ++p_;",
          "683:       return V::createNull();",
          "",
          "[Removed Lines]",
          "680:       return V::fromMap(unserializeMap());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "686:     case FB_SERIALIZE_BOOLEAN:",
          "687:       return V::fromBool(unserializeBoolean());",
          "688:     case FB_SERIALIZE_VECTOR:",
          "690:     case FB_SERIALIZE_LIST:",
          "692:     case FB_SERIALIZE_SET:",
          "694:     default:",
          "695:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
          "696:                              + \" at location \" + folly::to<std::string>(p_));",
          "",
          "[Removed Lines]",
          "689:       return V::fromVector(unserializeVector());",
          "691:       return V::fromVector(unserializeList());",
          "693:       return V::fromSet(unserializeSet());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fFBSerialize/FBSerialize.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fFBSerialize/FBSerialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   double unserializeDouble();",
          "166:   typename V::StringType unserializeString();",
          "167:   folly::StringPiece unserializeStringPiece();",
          "174:   folly::StringPiece getSerializedMap();",
          "177:   void advance(size_t delta);",
          "178:   Code nextCode() const;",
          "",
          "[Removed Lines]",
          "168:   typename V::MapType unserializeMap();",
          "169:   typename V::VectorType unserializeVector();",
          "170:   typename V::VectorType unserializeList();",
          "171:   typename V::SetType unserializeSet();",
          "175:   typename V::VariantType unserializeThing();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/VariantController.h||hphp/runtime/ext/fVariantController.h": [
          "File: hphp/runtime/ext/fb/VariantController.h -> hphp/runtime/ext/fVariantController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:     return set.size();",
          "284:   }",
          "285:   static void setAppend(SetType& set, const VariantType& v) {",
          "289:       throw HPHP::serialize::UnserializeError(",
          "292:     }",
          "293:     set.append(v);",
          "294:   }",
          "",
          "[Removed Lines]",
          "286:     auto value_type = type(v);",
          "287:     if (value_type != HPHP::serialize::Type::INT64 &&",
          "288:         value_type != HPHP::serialize::Type::STRING) {",
          "290:           \"Unsupported keyset element of type \" +",
          "291:           folly::to<std::string>(value_type));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fext_fb.cpp": [
          "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fext_fb.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
          "67: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
          "68: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
          "70: #ifdef FACEBOOK",
          "71: # define HHVM_FACEBOOK true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "705: const StaticString s_empty(\"\");",
          "707: int fb_compact_unserialize_from_buffer(",
          "710:   CHECK_ENOUGH(1, p, n);",
          "711:   int code = (unsigned char)buf[p];",
          "",
          "[Removed Lines]",
          "708:   Variant& out, const char* buf, int n, int& p) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "774:       Array arr = Array::CreateVArray();",
          "775:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "776:         Variant value;",
          "778:         if (err) {",
          "779:           return err;",
          "780:         }",
          "",
          "[Removed Lines]",
          "777:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "799:           ++p;",
          "800:         } else {",
          "801:           Variant value;",
          "803:           if (err) {",
          "804:             return err;",
          "805:           }",
          "",
          "[Removed Lines]",
          "802:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "820:       Array arr = Array::CreateDArray();",
          "821:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "822:         Variant key;",
          "824:         if (err) {",
          "825:           return err;",
          "826:         }",
          "827:         Variant value;",
          "829:         if (err) {",
          "830:           return err;",
          "831:         }",
          "",
          "[Removed Lines]",
          "823:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
          "828:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "862:   Variant ret;",
          "863:   int p = 0;",
          "865:   if (err) {",
          "866:     success = false;",
          "867:     errcode = err;",
          "",
          "[Removed Lines]",
          "864:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1313:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
          "1314:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
          "1315:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
          "1317:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
          "1318:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_funserialize-bad-set.php": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_funserialize-bad-set.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_funserialize-bad-set.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_funserialize-bad-set.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_funserialize_max_depth.php": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_funserialize_max_depth.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_funserialize_max_depth.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_funserialize_max_depth.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "107c6d926b1f80d45300f17ad4422a39b53762f0",
      "candidate_info": {
        "commit_hash": "107c6d926b1f80d45300f17ad4422a39b53762f0",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/107c6d926b1f80d45300f17ad4422a39b53762f0",
        "files": [
          "hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ],
        "message": "CVE-2020-1898",
        "before_after_code_files": [
          "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ],
          "candidate": [
            "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
            "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
            "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php",
            "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php",
            "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/hack/hhi/builtins_fb.hhi||hphp/hack/hhi/builtins_fb.hhi": [
          "File: hphp/hack/hhi/builtins_fb.hhi -> hphp/hack/hhi/builtins_fb.hhi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const FB_UNSERIALIZE_UNEXPECTED_END = 0;",
          "6: const FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE = 0;",
          "7: const FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE = 0;",
          "9: const FB_SERIALIZE_HACK_ARRAYS = 0;",
          "10: const FB_SERIALIZE_VARRAY_DARRAY = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: const FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED = 0;",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h -> hphp/runtime/ext/fb/FBSerialize/FBSerialize-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:   folly::StringPiece serialized) {",
          "365:   FBUnserializer<V> unserializer(serialized);",
          "367: }",
          "369: template <class V>",
          "",
          "[Removed Lines]",
          "366:   return unserializer.unserializeThing();",
          "",
          "[Added Lines]",
          "366:   return unserializer.unserializeThing(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "481: }",
          "483: template <class V>",
          "485:   p_ += CODE_SIZE;",
          "487:   typename V::MapType ret = V::createMap();",
          "",
          "[Removed Lines]",
          "484: inline typename V::MapType FBUnserializer<V>::unserializeMap() {",
          "",
          "[Added Lines]",
          "484: inline typename V::MapType FBUnserializer<V>::unserializeMap(size_t depth) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "493:       case FB_SERIALIZE_STRING:",
          "494:         {",
          "495:           auto key = unserializeString();",
          "497:           V::mapSet(ret, std::move(key), std::move(value));",
          "498:         }",
          "499:         break;",
          "500:       default:",
          "501:         {",
          "502:           auto key = unserializeInt64();",
          "504:           V::mapSet(ret, std::move(key), std::move(value));",
          "505:         }",
          "506:     }",
          "",
          "[Removed Lines]",
          "496:           auto value = unserializeThing();",
          "503:           auto value = unserializeThing();",
          "",
          "[Added Lines]",
          "496:           auto value = unserializeThing(depth + 1);",
          "503:           auto value = unserializeThing(depth + 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "513: }",
          "515: template <class V>",
          "517:   p_ += CODE_SIZE;",
          "519:   typename V::VectorType ret = V::createVector();",
          "521:   size_t code = nextCode();",
          "522:   while (code != FB_SERIALIZE_STOP) {",
          "524:     code = nextCode();",
          "525:   }",
          "526:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "516: inline typename V::VectorType FBUnserializer<V>::unserializeVector() {",
          "523:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "516: inline typename V::VectorType",
          "517: FBUnserializer<V>::unserializeVector(size_t depth) {",
          "524:     V::vectorAppend(ret, unserializeThing(depth + 1));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528: }",
          "530: template <class V>",
          "532:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "531: inline typename V::VectorType FBUnserializer<V>::unserializeList() {",
          "",
          "[Added Lines]",
          "532: inline typename V::VectorType FBUnserializer<V>::unserializeList(size_t depth) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "540:   size_t code = nextCode();",
          "541:   while (code != FB_SERIALIZE_STOP) {",
          "543:     code = nextCode();",
          "544:   }",
          "545:   p_ += CODE_SIZE;",
          "",
          "[Removed Lines]",
          "542:     V::vectorAppend(ret, unserializeThing());",
          "",
          "[Added Lines]",
          "543:     V::vectorAppend(ret, unserializeThing(depth + 1));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "602: }",
          "604: template <class V>",
          "606:   size_t code = nextCode();",
          "608:   switch (code) {",
          "",
          "[Removed Lines]",
          "605: inline typename V::VariantType FBUnserializer<V>::unserializeThing() {",
          "",
          "[Added Lines]",
          "606: inline typename V::VariantType",
          "607: FBUnserializer<V>::unserializeThing(size_t depth) {",
          "608:   if (UNLIKELY(depth > 1024)) {",
          "609:     throw UnserializeError(\"depth > 1024\");",
          "610:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "615:     case FB_SERIALIZE_STRING:",
          "616:       return V::fromString(unserializeString());",
          "617:     case FB_SERIALIZE_STRUCT:",
          "619:     case FB_SERIALIZE_NULL:",
          "620:       ++p_;",
          "621:       return V::createNull();",
          "",
          "[Removed Lines]",
          "618:       return V::fromMap(unserializeMap());",
          "",
          "[Added Lines]",
          "624:       return V::fromMap(unserializeMap(depth));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "624:     case FB_SERIALIZE_BOOLEAN:",
          "625:       return V::fromBool(unserializeBoolean());",
          "626:     case FB_SERIALIZE_VECTOR:",
          "628:     case FB_SERIALIZE_LIST:",
          "630:     default:",
          "631:       throw UnserializeError(\"Invalid code: \" + folly::to<std::string>(code)",
          "632:                              + \" at location \" + folly::to<std::string>(p_));",
          "",
          "[Removed Lines]",
          "627:       return V::fromVector(unserializeVector());",
          "629:       return V::fromVector(unserializeList());",
          "",
          "[Added Lines]",
          "633:       return V::fromVector(unserializeVector(depth));",
          "635:       return V::fromVector(unserializeList(depth));",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/FBSerialize/FBSerialize.h||hphp/runtime/ext/fb/FBSerialize/FBSerialize.h": [
          "File: hphp/runtime/ext/fb/FBSerialize/FBSerialize.h -> hphp/runtime/ext/fb/FBSerialize/FBSerialize.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   double unserializeDouble();",
          "155:   typename V::StringType unserializeString();",
          "156:   folly::StringPiece unserializeStringPiece();",
          "162:   folly::StringPiece getSerializedMap();",
          "165:   void advance(size_t delta);",
          "166:   Code nextCode() const;",
          "",
          "[Removed Lines]",
          "157:   typename V::MapType unserializeMap();",
          "158:   typename V::VectorType unserializeVector();",
          "159:   typename V::VectorType unserializeList();",
          "163:   typename V::VariantType unserializeThing();",
          "",
          "[Added Lines]",
          "157:   typename V::MapType unserializeMap(size_t depth);",
          "158:   typename V::VectorType unserializeVector(size_t depth);",
          "159:   typename V::VectorType unserializeList(size_t depth);",
          "163:   typename V::VariantType unserializeThing(size_t depth);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/fb/ext_fb.cpp||hphp/runtime/ext/fb/ext_fb.cpp": [
          "File: hphp/runtime/ext/fb/ext_fb.cpp -> hphp/runtime/ext/fb/ext_fb.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: #define FB_UNSERIALIZE_UNEXPECTED_END            0x0002",
          "66: #define FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE  0x0003",
          "67: #define FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE 0x0004",
          "69: #ifdef FACEBOOK",
          "70: # define HHVM_FACEBOOK true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: #define FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED        0x0005",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "669: const StaticString s_empty(\"\");",
          "671: int fb_compact_unserialize_from_buffer(",
          "674:   CHECK_ENOUGH(1, p, n);",
          "675:   int code = (unsigned char)buf[p];",
          "",
          "[Removed Lines]",
          "672:   Variant& out, const char* buf, int n, int& p) {",
          "",
          "[Added Lines]",
          "673:     Variant& out, const char* buf, int n, int& p, size_t depth) {",
          "674:   if (UNLIKELY(depth > 1024)) {",
          "675:     return FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED;",
          "676:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "751:           continue;",
          "752:         }",
          "753:         Variant value;",
          "755:         if (err) {",
          "756:           return err;",
          "757:         }",
          "",
          "[Removed Lines]",
          "754:         int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "758:         int err =",
          "759:           fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "776:           ++p;",
          "777:         } else {",
          "778:           Variant value;",
          "780:           if (err) {",
          "781:             return err;",
          "782:           }",
          "",
          "[Removed Lines]",
          "779:           int err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "784:           int err =",
          "785:             fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "797:       Array arr = Array::CreateDArray();",
          "798:       while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {",
          "799:         Variant key;",
          "801:         if (err) {",
          "802:           return err;",
          "803:         }",
          "804:         Variant value;",
          "806:         if (err) {",
          "807:           return err;",
          "808:         }",
          "",
          "[Removed Lines]",
          "800:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p);",
          "805:         err = fb_compact_unserialize_from_buffer(value, buf, n, p);",
          "",
          "[Added Lines]",
          "806:         int err = fb_compact_unserialize_from_buffer(key, buf, n, p, depth + 1);",
          "811:         err = fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "839:   Variant ret;",
          "840:   int p = 0;",
          "842:   if (err) {",
          "843:     success = false;",
          "844:     errcode = err;",
          "",
          "[Removed Lines]",
          "841:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p);",
          "",
          "[Added Lines]",
          "847:   int err = fb_compact_unserialize_from_buffer(ret, str, len, p, 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1290:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_END);",
          "1291:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE);",
          "1292:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE);",
          "1294:     HHVM_RC_INT(FB_SERIALIZE_HACK_ARRAYS, k_FB_SERIALIZE_HACK_ARRAYS);",
          "1295:     HHVM_RC_INT(FB_SERIALIZE_VARRAY_DARRAY, k_FB_SERIALIZE_VARRAY_DARRAY);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1299:     HHVM_RC_INT_SAME(FB_UNSERIALIZE_MAX_DEPTH_EXCEEDED);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php||hphp/test/slow/ext_fb/unserialize-bad-set.php": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php -> hphp/test/slow/ext_fb/unserialize-bad-set.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: <<__EntryPoint>>",
          "5: function main() {",
          "6:   $ret = null;",
          "7:   var_dump(fb_unserialize(\"\\x14\\x02\\x01\\x14\\x02\\x01\\x02\\x01\\x01\\x01\", inout $ret));",
          "8:   var_dump($ret);",
          "9: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize-bad-set.php.expect||hphp/test/slow/ext_fb/unserialize-bad-set.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize-bad-set.php.expect -> hphp/test/slow/ext_fb/unserialize-bad-set.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: bool(false)",
          "2: bool(false)",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php||hphp/test/slow/ext_fb/unserialize_max_depth.php": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php -> hphp/test/slow/ext_fb/unserialize_max_depth.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: function make_fb_serialize_struct($size) {",
          "5:   return str_repeat(\"\\x0a\\x02\\x01\", $size) . \"\\x02\\x01\" . str_repeat(\"\\x01\", $size);",
          "6: }",
          "8: function make_fb_serialize_vector($size) {",
          "9:   return str_repeat(\"\\x12\", $size) . str_repeat(\"\\x01\", $size);",
          "10: }",
          "12: function make_fb_serialize_list($size) {",
          "13:   return str_repeat(\"\\x13\\x02\\x01\", $size) . \"\\x02\\x01\" . str_repeat(\"\\x01\", $size);",
          "14: }",
          "16: function make_fb_cs_list_map($size) {",
          "17:   return str_repeat(\"\\xfa\\xfd\", $size) . str_repeat(\"\\xfc\", $size);",
          "18: }",
          "20: function make_fb_cs_map($size) {",
          "21:   return str_repeat(\"\\xfb\\x01\", $size) . \"\\x01\" . str_repeat(\"\\xfc\", $size);",
          "22: }",
          "24: function make_fb_cs_vector($size) {",
          "25:   return str_repeat(\"\\xfe\", $size) . str_repeat(\"\\xfc\", $size);",
          "26: }",
          "28: function test($serialized) {",
          "29:   $ret = null;",
          "30:   var_dump(",
          "31:     fb_unserialize(",
          "32:       $serialized,",
          "33:       inout $ret,",
          "34:       FB_SERIALIZE_HACK_ARRAYS",
          "35:     )",
          "36:   );",
          "37:   var_dump($ret);",
          "38: }",
          "40: function tests($size) {",
          "41:   test(make_fb_serialize_struct($size));",
          "42:   test(make_fb_serialize_vector($size));",
          "43:   test(make_fb_serialize_list($size));",
          "44:   test(make_fb_cs_list_map($size));",
          "45:   test(make_fb_cs_map($size));",
          "46:   test(make_fb_cs_vector($size));",
          "47: }",
          "49: <<__EntryPoint>>",
          "50: function main() {",
          "51:   tests(10);",
          "52:   tests(1026);",
          "53: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_fb/unserialize_max_depth.php.expect||hphp/test/slow/ext_fb/unserialize_max_depth.php.expect": [
          "File: hphp/test/slow/ext_fb/unserialize_max_depth.php.expect -> hphp/test/slow/ext_fb/unserialize_max_depth.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: dict(1) {",
          "2:   [1]=>",
          "3:   dict(1) {",
          "4:     [1]=>",
          "5:     dict(1) {",
          "6:       [1]=>",
          "7:       dict(1) {",
          "8:         [1]=>",
          "9:         dict(1) {",
          "10:           [1]=>",
          "11:           dict(1) {",
          "12:             [1]=>",
          "13:             dict(1) {",
          "14:               [1]=>",
          "15:               dict(1) {",
          "16:                 [1]=>",
          "17:                 dict(1) {",
          "18:                   [1]=>",
          "19:                   dict(1) {",
          "20:                     [1]=>",
          "21:                     int(1)",
          "22:                   }",
          "23:                 }",
          "24:               }",
          "25:             }",
          "26:           }",
          "27:         }",
          "28:       }",
          "29:     }",
          "30:   }",
          "31: }",
          "32: bool(true)",
          "33: vec(1) {",
          "34:   vec(1) {",
          "35:     vec(1) {",
          "36:       vec(1) {",
          "37:         vec(1) {",
          "38:           vec(1) {",
          "39:             vec(1) {",
          "40:               vec(1) {",
          "41:                 vec(1) {",
          "42:                   vec(0) {",
          "43:                   }",
          "44:                 }",
          "45:               }",
          "46:             }",
          "47:           }",
          "48:         }",
          "49:       }",
          "50:     }",
          "51:   }",
          "52: }",
          "53: bool(true)",
          "54: vec(1) {",
          "55:   vec(1) {",
          "56:     vec(1) {",
          "57:       vec(1) {",
          "58:         vec(1) {",
          "59:           vec(1) {",
          "60:             vec(1) {",
          "61:               vec(1) {",
          "62:                 vec(1) {",
          "63:                   vec(1) {",
          "64:                     int(1)",
          "65:                   }",
          "66:                 }",
          "67:               }",
          "68:             }",
          "69:           }",
          "70:         }",
          "71:       }",
          "72:     }",
          "73:   }",
          "74: }",
          "75: bool(true)",
          "76: array(1) {",
          "77:   [1]=>",
          "78:   array(1) {",
          "79:     [1]=>",
          "80:     array(1) {",
          "81:       [1]=>",
          "82:       array(1) {",
          "83:         [1]=>",
          "84:         array(1) {",
          "85:           [1]=>",
          "86:           array(1) {",
          "87:             [1]=>",
          "88:             array(1) {",
          "89:               [1]=>",
          "90:               array(1) {",
          "91:                 [1]=>",
          "92:                 array(1) {",
          "93:                   [1]=>",
          "94:                   array(0) {",
          "95:                   }",
          "96:                 }",
          "97:               }",
          "98:             }",
          "99:           }",
          "100:         }",
          "101:       }",
          "102:     }",
          "103:   }",
          "104: }",
          "105: bool(true)",
          "106: array(1) {",
          "107:   [1]=>",
          "108:   array(1) {",
          "109:     [1]=>",
          "110:     array(1) {",
          "111:       [1]=>",
          "112:       array(1) {",
          "113:         [1]=>",
          "114:         array(1) {",
          "115:           [1]=>",
          "116:           array(1) {",
          "117:             [1]=>",
          "118:             array(1) {",
          "119:               [1]=>",
          "120:               array(1) {",
          "121:                 [1]=>",
          "122:                 array(1) {",
          "123:                   [1]=>",
          "124:                   array(1) {",
          "125:                     [1]=>",
          "126:                     int(1)",
          "127:                   }",
          "128:                 }",
          "129:               }",
          "130:             }",
          "131:           }",
          "132:         }",
          "133:       }",
          "134:     }",
          "135:   }",
          "136: }",
          "137: bool(true)",
          "138: array(1) {",
          "139:   [0]=>",
          "140:   array(1) {",
          "141:     [0]=>",
          "142:     array(1) {",
          "143:       [0]=>",
          "144:       array(1) {",
          "145:         [0]=>",
          "146:         array(1) {",
          "147:           [0]=>",
          "148:           array(1) {",
          "149:             [0]=>",
          "150:             array(1) {",
          "151:               [0]=>",
          "152:               array(1) {",
          "153:                 [0]=>",
          "154:                 array(1) {",
          "155:                   [0]=>",
          "156:                   array(0) {",
          "157:                   }",
          "158:                 }",
          "159:               }",
          "160:             }",
          "161:           }",
          "162:         }",
          "163:       }",
          "164:     }",
          "165:   }",
          "166: }",
          "167: bool(true)",
          "168: bool(false)",
          "169: bool(false)",
          "170: bool(false)",
          "171: bool(false)",
          "172: bool(false)",
          "173: bool(false)",
          "174: bool(false)",
          "175: bool(false)",
          "176: bool(false)",
          "177: bool(false)",
          "178: bool(false)",
          "179: bool(false)",
          "",
          "---------------"
        ]
      }
    }
  ]
}