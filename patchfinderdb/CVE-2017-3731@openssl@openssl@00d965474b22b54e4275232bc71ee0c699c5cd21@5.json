{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
      "candidate_info": {
        "commit_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "files": [
          "include/internal/thread_once.h"
        ],
        "message": "Clarify what RUN_ONCE returns\n\nRUN_ONCE really just returns 0 on failure or whatever the init\nfunction returned.  By convention, however, the init function must\nreturn 0 on failure and 1 on success.  This needed to be clarified.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2225)\n(cherry picked from commit 37b8f1e21c56996644afa38816f575b05eb483ae)",
        "before_after_code_files": [
          "include/internal/thread_once.h||include/internal/thread_once.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/internal/thread_once.h||include/internal/thread_once.h": [
          "File: include/internal/thread_once.h -> include/internal/thread_once.h"
        ]
      }
    },
    {
      "candidate_hash": "267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
      "candidate_info": {
        "commit_hash": "267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/267d4fb1830ffd66fbc80a4e89e85ca67fdce3bb",
        "files": [
          "test/shlibloadtest.c"
        ],
        "message": "Fix no-dso (shlibloadtest)\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit 586b79d8884b171eb3fae1ef230572921715ce1a)",
        "before_after_code_files": [
          "test/shlibloadtest.c||test/shlibloadtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/shlibloadtest.c||test/shlibloadtest.c": [
          "File: test/shlibloadtest.c -> test/shlibloadtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: #include <stdlib.h>",
          "13: #include <openssl/opensslv.h>",
          "15: #define SSL_CTX_NEW \"SSL_CTX_new\"",
          "16: #define SSL_CTX_FREE \"SSL_CTX_free\"",
          "17: #define TLS_METHOD \"TLS_method\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #if defined(DSO_DLFCN) || defined(DSO_WIN32)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104: #endif",
          "109: # define CRYPTO_FIRST_OPT    \"-crypto_first\"",
          "110: # define SSL_FIRST_OPT       \"-ssl_first\"",
          "111: # define JUST_CRYPTO_OPT     \"-just_crypto\"",
          "",
          "[Removed Lines]",
          "107: #if defined(DSO_DLFCN) || defined(DSO_WIN32)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
      "candidate_info": {
        "commit_hash": "2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2a7dd548a6f5d6f7f84a89c98323b70a2822406e",
        "files": [
          "crypto/bn/asm/x86_64-mont.pl"
        ],
        "message": "bn/asm/x86_64-mont.pl: fix for CVE-2016-7055 (Low severity).\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 2fac86d9abeaa643677d1ffd0a139239fdf9406a)",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont.pl||crypto/bn/asm/x86_64-mont.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont.pl||crypto/bn/asm/x86_64-mont.pl": [
          "File: crypto/bn/asm/x86_64-mont.pl -> crypto/bn/asm/x86_64-mont.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1157:  adox -4*8($tptr),$mi",
          "1158:  adcx %r14,%r11",
          "1159:  mulx 2*8($aptr),%r15,%r13 # ...",
          "1161:  adcx %r15,%r12",
          "1162:  adox $zero,%r12",
          "1163:  adcx $zero,%r13",
          "1165:  mov $bptr,8(%rsp)  # off-load &b[i]",
          "1166:  .byte 0x67",
          "1167:  mov $mi,%r15",
          "1168:  imulq 24(%rsp),$mi  # \"t[0]\"*n0",
          "1169:  xor %ebp,%ebp  # xor $zero,$zero # cf=0, of=0",
          "1172:   mov $mi,%rdx",
          "1173:  adox -2*8($tptr),%r12",
          "1174:  adcx %rax,%r13",
          "",
          "[Removed Lines]",
          "1160:  adox -3*8($tptr),%r11",
          "1171:  mulx 3*8($aptr),%rax,%r14",
          "",
          "[Added Lines]",
          "1160:  adox -3*8($tptr),%r11",
          "1162:  adox -2*8($tptr),%r12",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4caa44d7ea001708069d8ce638e11e7dfd975f85",
      "candidate_info": {
        "commit_hash": "4caa44d7ea001708069d8ce638e11e7dfd975f85",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4caa44d7ea001708069d8ce638e11e7dfd975f85",
        "files": [
          "crypto/ct/ct_b64.c"
        ],
        "message": "Pass a temporary pointer to o2i_SCT_signature from SCT_new_from_base64\n\nOtherwise, |dec| gets moved past the end of the signature by\no2i_SCT_signature and then can't be correctly freed afterwards.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 73ccf3ca01085d143aecb7fcfb0aac18caa678d2)",
        "before_after_code_files": [
          "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c": [
          "File: crypto/ct/ct_b64.c -> crypto/ct/ct_b64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: {",
          "65:     SCT *sct = SCT_new();",
          "66:     unsigned char *dec = NULL;",
          "67:     int declen;",
          "69:     if (sct == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     const unsigned char* p = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:         CTerr(CT_F_SCT_NEW_FROM_BASE64, X509_R_BASE64_DECODE_ERROR);",
          "103:         goto err;",
          "104:     }",
          "106:         goto err;",
          "107:     OPENSSL_free(dec);",
          "108:     dec = NULL;",
          "",
          "[Removed Lines]",
          "105:     if (o2i_SCT_signature(sct, (const unsigned char **)&dec, declen) <= 0)",
          "",
          "[Added Lines]",
          "107:     p = dec;",
          "108:     if (o2i_SCT_signature(sct, &p, declen) <= 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
      "candidate_info": {
        "commit_hash": "b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
        "files": [
          "util/process_docs.pl"
        ],
        "message": "util/process_docs.pl: make it possible to add a suffix to man docs\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2864)",
        "before_after_code_files": [
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:            #'in=s@',             # Explicit files to process (ignores sourcedir)",
          "35:            #'section=i',         # Default section used for --in files",
          "36:            'type=s',            # The result type, 'man' or 'html'",
          "37:            'remove',            # To remove files rather than writing them",
          "38:            'dry-run|n',         # Only output file names on STDOUT",
          "39:            'debug|D+',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:            'suffix:s',          # Suffix to add to the extension.",
          "38:                                 # Only used with type=man",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:                       && defined $options{type}",
          "54:                       && ($options{type} eq 'man'",
          "55:                           || $options{type} eq 'html') );",
          "57: if ($options{debug}) {",
          "58:     print STDERR \"DEBUG: options:\\n\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: pod2usage(1) if ( $options{type} eq 'html'",
          "59:                   && defined $options{suffix} );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:         if defined $options{destdir};",
          "63:     print STDERR \"DEBUG:   --type      = $options{type}\\n\"",
          "64:         if defined $options{type};",
          "65:     foreach (keys %{$options{subdir}}) {",
          "66:         print STDERR \"DEBUG:   --subdir    = $_=$options{subdir}->{$_}\\n\";",
          "67:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     print STDERR \"DEBUG:   --suffix    = $options{suffix}\\n\"",
          "70:         if defined $options{suffix};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:         my $updir = updir();",
          "92:         my $name = uc $podname;",
          "94:                        html => \".html\" } -> {$options{type}};",
          "95:         my $generate = { man  => \"pod2man --name=$name --section=$podinfo{section} --center=OpenSSL --release=$config{version} \\\"$podpath\\\"\",",
          "96:                          html => \"pod2html \\\"--podroot=$options{sourcedir}\\\" --htmldir=$updir --podpath=apps:crypto:ssl \\\"--infile=$podpath\\\" \\\"--title=$podname\\\"\"",
          "",
          "[Removed Lines]",
          "93:         my $suffix = { man  => \".$podinfo{section}\",",
          "",
          "[Added Lines]",
          "99:         my $suffix = { man  => \".$podinfo{section}\".($options{suffix} // \"\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "177: [B<--sourcedir>=I<dir>]",
          "178: B<--destdir>=I<dir>",
          "179: B<--type>=B<man>|B<html>",
          "180: [B<--remove>]",
          "181: [B<--dry-run>|B<-n>]",
          "182: [B<--debug>|B<-D>]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186: [B<--suffix>=I<suffix>]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "210: Type of output to produce.  Currently supported are man pages and HTML files.",
          "212: =item B<--remove>",
          "214: Instead of writing the files, remove them.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219: =item B<--suffix>=I<suffix>",
          "221: A suffix added to the extension.  Only valid with B<--type>=B<man>",
          "",
          "---------------"
        ]
      }
    }
  ]
}