{
  "cve_id": "CVE-2017-14954",
  "cve_desc": "The waitid implementation in kernel/exit.c in the Linux kernel through 4.13.4 accesses rusage data structures in unintended cases, which allows local users to obtain sensitive information, and bypass the KASLR protection mechanism, via a crafted system call.",
  "repo": "torvalds/linux",
  "patch_hash": "6c85501f2fabcfc4fc6ed976543d252c4eaf4be9",
  "patch_info": {
    "commit_hash": "6c85501f2fabcfc4fc6ed976543d252c4eaf4be9",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/6c85501f2fabcfc4fc6ed976543d252c4eaf4be9",
    "files": [
      "kernel/exit.c"
    ],
    "message": "fix infoleak in waitid(2)\n\nkernel_waitid() can return a PID, an error or 0.  rusage is filled in the first\ncase and waitid(2) rusage should've been copied out exactly in that case, *not*\nwhenever kernel_waitid() has not returned an error.  Compat variant shares that\nbraino; none of kernel_wait4() callers do, so the below ought to fix it.\n\nReported-and-tested-by: Alexander Potapenko <glider@google.com>\nFixes: ce72a16fa705 (\"wait4(2)/waitid(2): separate copying rusage to userland\")\nCc: stable@vger.kernel.org # v4.13\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "before_after_code_files": [
      "kernel/exit.c||kernel/exit.c"
    ]
  },
  "patch_diff": {
    "kernel/exit.c||kernel/exit.c": [
      "File: kernel/exit.c -> kernel/exit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1600:  struct waitid_info info = {.status = 0};",
      "1601:  long err = kernel_waitid(which, upid, &info, options, ru ? &r : NULL);",
      "1602:  int signo = 0;",
      "1603:  if (err > 0) {",
      "1604:   signo = SIGCHLD;",
      "1605:   err = 0;",
      "1609:   if (ru && copy_to_user(ru, &r, sizeof(struct rusage)))",
      "1610:    return -EFAULT;",
      "1611:  }",
      "",
      "[Removed Lines]",
      "1606:  }",
      "1608:  if (!err) {",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1723:  if (err > 0) {",
      "1724:   signo = SIGCHLD;",
      "1725:   err = 0;",
      "1736:  }",
      "1738:  if (!infop)",
      "",
      "[Removed Lines]",
      "1726:  }",
      "1728:  if (!err && uru) {",
      "1730:   if (COMPAT_USE_64BIT_TIME)",
      "1731:    err = copy_to_user(uru, &ru, sizeof(ru));",
      "1732:   else",
      "1733:    err = put_compat_rusage(&ru, uru);",
      "1734:   if (err)",
      "1735:    return -EFAULT;",
      "",
      "[Added Lines]",
      "1724:   if (uru) {",
      "1726:    if (COMPAT_USE_64BIT_TIME)",
      "1727:     err = copy_to_user(uru, &ru, sizeof(ru));",
      "1728:    else",
      "1729:     err = put_compat_rusage(&ru, uru);",
      "1730:    if (err)",
      "1731:     return -EFAULT;",
      "1732:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "634a81609561f05266e1f625b6f2567c2e0b0419",
      "candidate_info": {
        "commit_hash": "634a81609561f05266e1f625b6f2567c2e0b0419",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/634a81609561f05266e1f625b6f2567c2e0b0419",
        "files": [
          "kernel/exit.c"
        ],
        "message": "fix waitid(2) breakage\n\nWe lose the distinction between \"found a PID\" and \"nothing, but that's not\nan error\" a bit too early in waitid().  Easily fixed, fortunately...\n\nReported-by: Markus Trippelsdorf <markus@trippelsdorf.de>\nFixes: 67d7ddded322 (\"waitid(2): leave copyout of siginfo to syscall itself\")\nTested-by: Markus Trippelsdorf <markus@trippelsdorf.de>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "kernel/exit.c||kernel/exit.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/exit.c||kernel/exit.c"
          ],
          "candidate": [
            "kernel/exit.c||kernel/exit.c"
          ]
        }
      },
      "candidate_diff": {
        "kernel/exit.c||kernel/exit.c": [
          "File: kernel/exit.c -> kernel/exit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1590:  wo.wo_rusage = ru;",
          "1591:  ret = do_wait(&wo);",
          "1596:  put_pid(pid);",
          "1597:  return ret;",
          "1598: }",
          "",
          "[Removed Lines]",
          "1593:  if (ret > 0)",
          "1594:   ret = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1603:  struct rusage r;",
          "1604:  struct waitid_info info = {.status = 0};",
          "1605:  long err = kernel_waitid(which, upid, &info, options, ru ? &r : NULL);",
          "1607:  if (!err) {",
          "1608:   if (ru && copy_to_user(ru, &r, sizeof(struct rusage)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1603:  int signo = 0;",
          "1604:  if (err > 0) {",
          "1605:   signo = SIGCHLD;",
          "1606:   err = 0;",
          "1607:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1612:   return err;",
          "1614:  user_access_begin();",
          "1616:  unsafe_put_user(0, &infop->si_errno, Efault);",
          "1617:  unsafe_put_user((short)info.cause, &infop->si_code, Efault);",
          "1618:  unsafe_put_user(info.pid, &infop->si_pid, Efault);",
          "",
          "[Removed Lines]",
          "1615:  unsafe_put_user(err ? 0 : SIGCHLD, &infop->si_signo, Efault);",
          "",
          "[Added Lines]",
          "1617:  unsafe_put_user(signo, &infop->si_signo, Efault);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1714:  struct rusage ru;",
          "1715:  struct waitid_info info = {.status = 0};",
          "1716:  long err = kernel_waitid(which, pid, &info, options, uru ? &ru : NULL);",
          "1718:  if (!err && uru) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1719:  int signo = 0;",
          "1720:  if (err > 0) {",
          "1721:   signo = SIGCHLD;",
          "1722:   err = 0;",
          "1723:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1729:   return err;",
          "1731:  user_access_begin();",
          "1733:  unsafe_put_user(0, &infop->si_errno, Efault);",
          "1734:  unsafe_put_user((short)info.cause, &infop->si_code, Efault);",
          "1735:  unsafe_put_user(info.pid, &infop->si_pid, Efault);",
          "",
          "[Removed Lines]",
          "1732:  unsafe_put_user(err ? 0 : SIGCHLD, &infop->si_signo, Efault);",
          "",
          "[Added Lines]",
          "1739:  unsafe_put_user(signo, &infop->si_signo, Efault);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67d7ddded322db99f451a7959d56ed6c70a6c4aa",
      "candidate_info": {
        "commit_hash": "67d7ddded322db99f451a7959d56ed6c70a6c4aa",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/67d7ddded322db99f451a7959d56ed6c70a6c4aa",
        "files": [
          "kernel/exit.c"
        ],
        "message": "waitid(2): leave copyout of siginfo to syscall itself\n\nhave kernel_waitid() collect the information needed for siginfo into\na small structure (waitid_info) passed to it; deal with copyout in\nsys_waitid()/compat_sys_waitid().\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "kernel/exit.c||kernel/exit.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/exit.c||kernel/exit.c"
          ],
          "candidate": [
            "kernel/exit.c||kernel/exit.c"
          ]
        }
      },
      "candidate_diff": {
        "kernel/exit.c||kernel/exit.c": [
          "File: kernel/exit.c -> kernel/exit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "996:  return 0;",
          "997: }",
          "999: struct wait_opts {",
          "1000:  enum pid_type  wo_type;",
          "1001:  int   wo_flags;",
          "1002:  struct pid  *wo_pid;",
          "1005:  int   wo_stat;",
          "1006:  struct rusage  *wo_rusage;",
          "",
          "[Removed Lines]",
          "1004:  struct siginfo __user *wo_info;",
          "",
          "[Added Lines]",
          "999: struct waitid_info {",
          "1000:  pid_t pid;",
          "1001:  uid_t uid;",
          "1002:  int status;",
          "1003:  int cause;",
          "1004: };",
          "1011:  struct waitid_info *wo_info;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1053: static int wait_noreap_copyout(struct wait_opts *wo, struct task_struct *p,",
          "1054:     pid_t pid, uid_t uid, int why, int status)",
          "1055: {",
          "1059:  if (wo->wo_rusage)",
          "1060:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "",
          "[Removed Lines]",
          "1056:  struct siginfo __user *infop;",
          "1057:  int retval = 0;",
          "",
          "[Added Lines]",
          "1063:  struct waitid_info *infop;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1062:  put_task_struct(p);",
          "1063:  infop = wo->wo_info;",
          "1064:  if (infop) {",
          "1077:  }",
          "1081: }",
          "",
          "[Removed Lines]",
          "1065:   if (!retval)",
          "1066:    retval = put_user(SIGCHLD, &infop->si_signo);",
          "1067:   if (!retval)",
          "1068:    retval = put_user(0, &infop->si_errno);",
          "1069:   if (!retval)",
          "1070:    retval = put_user((short)why, &infop->si_code);",
          "1071:   if (!retval)",
          "1072:    retval = put_user(pid, &infop->si_pid);",
          "1073:   if (!retval)",
          "1074:    retval = put_user(uid, &infop->si_uid);",
          "1075:   if (!retval)",
          "1076:    retval = put_user(status, &infop->si_status);",
          "1078:  if (!retval)",
          "1079:   retval = pid;",
          "1080:  return retval;",
          "",
          "[Added Lines]",
          "1071:   infop->cause = why;",
          "1072:   infop->pid = pid;",
          "1073:   infop->uid = uid;",
          "1074:   infop->status = status;",
          "1076:  return pid;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1089: static int wait_task_zombie(struct wait_opts *wo, struct task_struct *p)",
          "1090: {",
          "1092:  pid_t pid = task_pid_vnr(p);",
          "1093:  uid_t uid = from_kuid_munged(current_user_ns(), task_uid(p));",
          "1096:  if (!likely(wo->wo_flags & WEXITED))",
          "1097:   return 0;",
          "",
          "[Removed Lines]",
          "1091:  int state, retval, status;",
          "1094:  struct siginfo __user *infop;",
          "",
          "[Added Lines]",
          "1087:  int state, status;",
          "1090:  struct waitid_info *infop;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1187:  if (wo->wo_rusage)",
          "1188:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "1190:  status = (p->signal->flags & SIGNAL_GROUP_EXIT)",
          "1191:   ? p->signal->group_exit_code : p->exit_code;",
          "1192:  wo->wo_stat = status;",
          "1194:  infop = wo->wo_info;",
          "1202:   if ((status & 0x7f) == 0) {",
          "1205:   } else {",
          "1208:   }",
          "1212:  }",
          "1220:  if (state == EXIT_TRACE) {",
          "1221:   write_lock_irq(&tasklist_lock);",
          "",
          "[Removed Lines]",
          "1189:  retval = 0;",
          "1195:  if (!retval && infop)",
          "1196:   retval = put_user(SIGCHLD, &infop->si_signo);",
          "1197:  if (!retval && infop)",
          "1198:   retval = put_user(0, &infop->si_errno);",
          "1199:  if (!retval && infop) {",
          "1200:   int why;",
          "1203:    why = CLD_EXITED;",
          "1204:    status >>= 8;",
          "1206:    why = (status & 0x80) ? CLD_DUMPED : CLD_KILLED;",
          "1207:    status &= 0x7f;",
          "1209:   retval = put_user((short)why, &infop->si_code);",
          "1210:   if (!retval)",
          "1211:    retval = put_user(status, &infop->si_status);",
          "1213:  if (!retval && infop)",
          "1214:   retval = put_user(pid, &infop->si_pid);",
          "1215:  if (!retval && infop)",
          "1216:   retval = put_user(uid, &infop->si_uid);",
          "1217:  if (!retval)",
          "1218:   retval = pid;",
          "",
          "[Added Lines]",
          "1190:  if (infop) {",
          "1192:    infop->cause = CLD_EXITED;",
          "1193:    infop->status = status >> 8;",
          "1195:    infop->cause = (status & 0x80) ? CLD_DUMPED : CLD_KILLED;",
          "1196:    infop->status = status & 0x7f;",
          "1198:   infop->pid = pid;",
          "1199:   infop->uid = uid;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1232:  if (state == EXIT_DEAD)",
          "1233:   release_task(p);",
          "1236: }",
          "1238: static int *task_stopped_code(struct task_struct *p, bool ptrace)",
          "",
          "[Removed Lines]",
          "1235:  return retval;",
          "",
          "[Added Lines]",
          "1217:  return pid;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1268: static int wait_task_stopped(struct wait_opts *wo,",
          "1269:     int ptrace, struct task_struct *p)",
          "1270: {",
          "1274:  pid_t pid;",
          "",
          "[Removed Lines]",
          "1271:  struct siginfo __user *infop;",
          "1272:  int retval, exit_code, *p_code, why;",
          "",
          "[Added Lines]",
          "1253:  struct waitid_info *infop;",
          "1254:  int exit_code, *p_code, why;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1321:  if (wo->wo_rusage)",
          "1322:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "1324:  wo->wo_stat = (exit_code << 8) | 0x7f;",
          "1326:  infop = wo->wo_info;",
          "1341:  put_task_struct(p);",
          "1345: }",
          "",
          "[Removed Lines]",
          "1323:  retval = 0;",
          "1327:  if (!retval && infop)",
          "1328:   retval = put_user(SIGCHLD, &infop->si_signo);",
          "1329:  if (!retval && infop)",
          "1330:   retval = put_user(0, &infop->si_errno);",
          "1331:  if (!retval && infop)",
          "1332:   retval = put_user((short)why, &infop->si_code);",
          "1333:  if (!retval && infop)",
          "1334:   retval = put_user(exit_code, &infop->si_status);",
          "1335:  if (!retval && infop)",
          "1336:   retval = put_user(pid, &infop->si_pid);",
          "1337:  if (!retval && infop)",
          "1338:   retval = put_user(uid, &infop->si_uid);",
          "1339:  if (!retval)",
          "1340:   retval = pid;",
          "1343:  BUG_ON(!retval);",
          "1344:  return retval;",
          "",
          "[Added Lines]",
          "1308:  if (infop) {",
          "1309:   infop->cause = why;",
          "1310:   infop->status = exit_code;",
          "1311:   infop->pid = pid;",
          "1312:   infop->uid = uid;",
          "1313:  }",
          "1316:  BUG_ON(!pid);",
          "1317:  return pid;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1618:  return retval;",
          "1619: }",
          "1622:      int options, struct rusage *ru)",
          "1623: {",
          "1624:  struct wait_opts wo;",
          "",
          "[Removed Lines]",
          "1621: static long kernel_waitid(int which, pid_t upid, struct siginfo __user *infop,",
          "",
          "[Added Lines]",
          "1594: static long kernel_waitid(int which, pid_t upid, struct waitid_info *infop,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1660:  wo.wo_rusage = ru;",
          "1661:  ret = do_wait(&wo);",
          "1664:   ret = 0;",
          "1685:  put_pid(pid);",
          "1686:  return ret;",
          "",
          "[Removed Lines]",
          "1663:  if (ret > 0) {",
          "1665:  } else if (infop) {",
          "1671:   if (!ret)",
          "1672:    ret = put_user(0, &infop->si_signo);",
          "1673:   if (!ret)",
          "1674:    ret = put_user(0, &infop->si_errno);",
          "1675:   if (!ret)",
          "1676:    ret = put_user(0, &infop->si_code);",
          "1677:   if (!ret)",
          "1678:    ret = put_user(0, &infop->si_pid);",
          "1679:   if (!ret)",
          "1680:    ret = put_user(0, &infop->si_uid);",
          "1681:   if (!ret)",
          "1682:    ret = put_user(0, &infop->si_status);",
          "1683:  }",
          "",
          "[Added Lines]",
          "1636:  if (ret > 0)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1690:   infop, int, options, struct rusage __user *, ru)",
          "1691: {",
          "1692:  struct rusage r;",
          "1695:  if (!err) {",
          "1696:   if (ru && copy_to_user(ru, &r, sizeof(struct rusage)))",
          "1697:    return -EFAULT;",
          "1698:  }",
          "1699:  return err;",
          "1700: }",
          "",
          "[Removed Lines]",
          "1693:  long err = kernel_waitid(which, upid, infop, options, ru ? &r : NULL);",
          "",
          "[Added Lines]",
          "1647:  struct waitid_info info = {.status = 0};",
          "1648:  long err = kernel_waitid(which, upid, &info, options, ru ? &r : NULL);",
          "1654:  if (!infop)",
          "1655:   return err;",
          "1657:  if (put_user(err ? 0 : SIGCHLD, &infop->si_signo) ||",
          "1658:      put_user(0, &infop->si_errno) ||",
          "1659:      put_user((short)info.cause, &infop->si_code) ||",
          "1660:      put_user(info.pid, &infop->si_pid) ||",
          "1661:      put_user(info.uid, &infop->si_uid) ||",
          "1662:      put_user(info.status, &infop->si_status))",
          "1663:   err = -EFAULT;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1785:   struct compat_siginfo __user *, infop, int, options,",
          "1786:   struct compat_rusage __user *, uru)",
          "1787: {",
          "1789:  struct rusage ru;",
          "1805:   if (COMPAT_USE_64BIT_TIME)",
          "1807:   else",
          "1810:    return -EFAULT;",
          "1811:  }",
          "1816: }",
          "1817: #endif",
          "",
          "[Removed Lines]",
          "1788:  siginfo_t info;",
          "1790:  long ret;",
          "1791:  mm_segment_t old_fs = get_fs();",
          "1793:  memset(&info, 0, sizeof(info));",
          "1795:  set_fs(KERNEL_DS);",
          "1796:  ret = kernel_waitid(which, pid, (siginfo_t __user *)&info, options,",
          "1797:     uru ? &ru : NULL);",
          "1798:  set_fs(old_fs);",
          "1800:  if ((ret < 0) || (info.si_signo == 0))",
          "1801:   return ret;",
          "1803:  if (uru) {",
          "1806:    ret = copy_to_user(uru, &ru, sizeof(ru));",
          "1808:    ret = put_compat_rusage(&ru, uru);",
          "1809:   if (ret)",
          "1813:  BUG_ON(info.si_code & __SI_MASK);",
          "1814:  info.si_code |= __SI_CHLD;",
          "1815:  return copy_siginfo_to_user32(infop, &info);",
          "",
          "[Added Lines]",
          "1755:  struct waitid_info info = {.status = 0};",
          "1756:  long err = kernel_waitid(which, pid, &info, options, uru ? &ru : NULL);",
          "1758:  if (!err && uru) {",
          "1761:    err = copy_to_user(uru, &ru, sizeof(ru));",
          "1763:    err = put_compat_rusage(&ru, uru);",
          "1764:   if (err)",
          "1768:  if (put_user(err ? 0 : SIGCHLD, &infop->si_signo) ||",
          "1769:      put_user(0, &infop->si_errno) ||",
          "1770:      put_user((short)info.cause, &infop->si_code) ||",
          "1771:      put_user(info.pid, &infop->si_pid) ||",
          "1772:      put_user(info.uid, &infop->si_uid) ||",
          "1773:      put_user(info.status, &infop->si_status))",
          "1774:   err = -EFAULT;",
          "1775:  return err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce72a16fa705f960ca2352e95a7c5f4801475e75",
      "candidate_info": {
        "commit_hash": "ce72a16fa705f960ca2352e95a7c5f4801475e75",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ce72a16fa705f960ca2352e95a7c5f4801475e75",
        "files": [
          "include/linux/resource.h",
          "kernel/exit.c",
          "kernel/sys.c"
        ],
        "message": "wait4(2)/waitid(2): separate copying rusage to userland\n\nNew helpers: kernel_waitid() and kernel_wait4().  sys_waitid(),\nsys_wait4() and their compat variants switched to those.  Copying\nstruct rusage to userland is left to syscall itself.  For\ncompat_sys_wait4() that eliminates the use of set_fs() completely.\nFor compat_sys_waitid() it's still needed (for siginfo handling);\nthat will change shortly.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "include/linux/resource.h||include/linux/resource.h",
          "kernel/exit.c||kernel/exit.c",
          "kernel/sys.c||kernel/sys.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/exit.c||kernel/exit.c"
          ],
          "candidate": [
            "kernel/exit.c||kernel/exit.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/resource.h||include/linux/resource.h": [
          "File: include/linux/resource.h -> include/linux/resource.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: struct task_struct;",
          "10: int do_prlimit(struct task_struct *tsk, unsigned int resource,",
          "11:   struct rlimit *new_rlim, struct rlimit *old_rlim);",
          "",
          "[Removed Lines]",
          "9: int getrusage(struct task_struct *p, int who, struct rusage __user *ru);",
          "",
          "[Added Lines]",
          "9: void getrusage(struct task_struct *p, int who, struct rusage *ru);",
          "",
          "---------------"
        ],
        "kernel/exit.c||kernel/exit.c": [
          "File: kernel/exit.c -> kernel/exit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1004:  struct siginfo __user *wo_info;",
          "1005:  int __user  *wo_stat;",
          "1008:  wait_queue_t  child_wait;",
          "1009:  int   notask_error;",
          "",
          "[Removed Lines]",
          "1006:  struct rusage __user *wo_rusage;",
          "",
          "[Added Lines]",
          "1006:  struct rusage  *wo_rusage;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1054:     pid_t pid, uid_t uid, int why, int status)",
          "1055: {",
          "1056:  struct siginfo __user *infop;",
          "1060:  put_task_struct(p);",
          "1061:  infop = wo->wo_info;",
          "",
          "[Removed Lines]",
          "1057:  int retval = wo->wo_rusage",
          "1058:   ? getrusage(p, RUSAGE_BOTH, wo->wo_rusage) : 0;",
          "",
          "[Added Lines]",
          "1057:  int retval = 0;",
          "1059:  if (wo->wo_rusage)",
          "1060:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1182:   spin_unlock_irq(&current->sighand->siglock);",
          "1183:  }",
          "1187:  status = (p->signal->flags & SIGNAL_GROUP_EXIT)",
          "1188:   ? p->signal->group_exit_code : p->exit_code;",
          "1189:  if (!retval && wo->wo_stat)",
          "",
          "[Removed Lines]",
          "1185:  retval = wo->wo_rusage",
          "1186:   ? getrusage(p, RUSAGE_BOTH, wo->wo_rusage) : 0;",
          "",
          "[Added Lines]",
          "1187:  if (wo->wo_rusage)",
          "1188:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "1189:  retval = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1316:  if (unlikely(wo->wo_flags & WNOWAIT))",
          "1317:   return wait_noreap_copyout(wo, p, pid, uid, why, exit_code);",
          "1321:  if (!retval && wo->wo_stat)",
          "1322:   retval = put_user((exit_code << 8) | 0x7f, wo->wo_stat);",
          "",
          "[Removed Lines]",
          "1319:  retval = wo->wo_rusage",
          "1320:   ? getrusage(p, RUSAGE_BOTH, wo->wo_rusage) : 0;",
          "",
          "[Added Lines]",
          "1322:  if (wo->wo_rusage)",
          "1323:   getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "1324:  retval = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1377:  sched_annotate_sleep();",
          "1379:  if (!wo->wo_info) {",
          "1382:   put_task_struct(p);",
          "1383:   if (!retval && wo->wo_stat)",
          "1384:    retval = put_user(0xffff, wo->wo_stat);",
          "",
          "[Removed Lines]",
          "1380:   retval = wo->wo_rusage",
          "1381:    ? getrusage(p, RUSAGE_BOTH, wo->wo_rusage) : 0;",
          "",
          "[Added Lines]",
          "1384:   if (wo->wo_rusage)",
          "1385:    getrusage(p, RUSAGE_BOTH, wo->wo_rusage);",
          "1386:   retval = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1618:  return retval;",
          "1619: }",
          "1623: {",
          "1624:  struct wait_opts wo;",
          "1625:  struct pid *pid = NULL;",
          "",
          "[Removed Lines]",
          "1621: SYSCALL_DEFINE5(waitid, int, which, pid_t, upid, struct siginfo __user *,",
          "1622:   infop, int, options, struct rusage __user *, ru)",
          "",
          "[Added Lines]",
          "1626: static long kernel_waitid(int which, pid_t upid, struct siginfo __user *infop,",
          "1627:      int options, struct rusage *ru)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1687:  return ret;",
          "1688: }",
          "1692: {",
          "1693:  struct wait_opts wo;",
          "1694:  struct pid *pid = NULL;",
          "",
          "[Removed Lines]",
          "1690: SYSCALL_DEFINE4(wait4, pid_t, upid, int __user *, stat_addr,",
          "1691:   int, options, struct rusage __user *, ru)",
          "",
          "[Added Lines]",
          "1695: SYSCALL_DEFINE5(waitid, int, which, pid_t, upid, struct siginfo __user *,",
          "1696:   infop, int, options, struct rusage __user *, ru)",
          "1697: {",
          "1698:  struct rusage r;",
          "1699:  long err = kernel_waitid(which, upid, infop, options, ru ? &r : NULL);",
          "1701:  if (!err) {",
          "1702:   if (ru && copy_to_user(ru, &r, sizeof(struct rusage)))",
          "1703:    return -EFAULT;",
          "1704:  }",
          "1705:  return err;",
          "1706: }",
          "1708: static long kernel_wait4(pid_t upid, int __user *stat_addr,",
          "1709:    int options, struct rusage *ru)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1724:  return ret;",
          "1725: }",
          "1727: #ifdef __ARCH_WANT_SYS_WAITPID",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1745: SYSCALL_DEFINE4(wait4, pid_t, upid, int __user *, stat_addr,",
          "1746:   int, options, struct rusage __user *, ru)",
          "1747: {",
          "1748:  struct rusage r;",
          "1749:  long err = kernel_wait4(upid, stat_addr, options, ru ? &r : NULL);",
          "1751:  if (err > 0) {",
          "1752:   if (ru && copy_to_user(ru, &r, sizeof(struct rusage)))",
          "1753:    return -EFAULT;",
          "1754:  }",
          "1755:  return err;",
          "1756: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1744:  int, options,",
          "1745:  struct compat_rusage __user *, ru)",
          "1746: {",
          "1769:  }",
          "1770: }",
          "1772: COMPAT_SYSCALL_DEFINE5(waitid,",
          "",
          "[Removed Lines]",
          "1747:  if (!ru) {",
          "1748:   return sys_wait4(pid, stat_addr, options, NULL);",
          "1749:  } else {",
          "1750:   struct rusage r;",
          "1751:   int ret;",
          "1752:   unsigned int status;",
          "1753:   mm_segment_t old_fs = get_fs();",
          "1755:   set_fs (KERNEL_DS);",
          "1756:   ret = sys_wait4(pid,",
          "1757:     (stat_addr ?",
          "1758:      (unsigned int __user *) &status : NULL),",
          "1759:     options, (struct rusage __user *) &r);",
          "1760:   set_fs (old_fs);",
          "1762:   if (ret > 0) {",
          "1763:    if (put_compat_rusage(&r, ru))",
          "1764:     return -EFAULT;",
          "1765:    if (stat_addr && put_user(status, stat_addr))",
          "1766:     return -EFAULT;",
          "1767:   }",
          "1768:   return ret;",
          "",
          "[Added Lines]",
          "1778:  struct rusage r;",
          "1779:  long err = kernel_wait4(pid, stat_addr, options, ru ? &r : NULL);",
          "1780:  if (err > 0) {",
          "1781:   if (ru && put_compat_rusage(&r, ru))",
          "1782:    return -EFAULT;",
          "1784:  return err;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1782:  memset(&info, 0, sizeof(info));",
          "1784:  set_fs(KERNEL_DS);",
          "1787:  set_fs(old_fs);",
          "1789:  if ((ret < 0) || (info.si_signo == 0))",
          "",
          "[Removed Lines]",
          "1785:  ret = sys_waitid(which, pid, (siginfo_t __user *)&info, options,",
          "1786:     uru ? (struct rusage __user *)&ru : NULL);",
          "",
          "[Added Lines]",
          "1800:  ret = kernel_waitid(which, pid, (siginfo_t __user *)&info, options,",
          "1801:     uru ? &ru : NULL);",
          "",
          "---------------"
        ],
        "kernel/sys.c||kernel/sys.c": [
          "File: kernel/sys.c -> kernel/sys.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1552:  r->ru_oublock += task_io_get_oublock(t);",
          "1553: }",
          "1556: {",
          "1557:  struct task_struct *t;",
          "1558:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "1555: static void k_getrusage(struct task_struct *p, int who, struct rusage *r)",
          "",
          "[Added Lines]",
          "1555: void getrusage(struct task_struct *p, int who, struct rusage *r)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1627: }",
          "1630: {",
          "1631:  struct rusage r;",
          "1639:  if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN &&",
          "1640:      who != RUSAGE_THREAD)",
          "1641:   return -EINVAL;",
          "1643: }",
          "1645: #ifdef CONFIG_COMPAT",
          "",
          "[Removed Lines]",
          "1629: int getrusage(struct task_struct *p, int who, struct rusage __user *ru)",
          "1633:  k_getrusage(p, who, &r);",
          "1634:  return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;",
          "1635: }",
          "1637: SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)",
          "1638: {",
          "1642:  return getrusage(current, who, ru);",
          "",
          "[Added Lines]",
          "1629: SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)",
          "1637:  getrusage(current, who, &r);",
          "1638:  return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1651:      who != RUSAGE_THREAD)",
          "1652:   return -EINVAL;",
          "1655:  return put_compat_rusage(&r, ru);",
          "1656: }",
          "1657: #endif",
          "",
          "[Removed Lines]",
          "1654:  k_getrusage(current, who, &r);",
          "",
          "[Added Lines]",
          "1650:  getrusage(current, who, &r);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c48abe91be03d191d0c20cc755877da2cb35622",
      "candidate_info": {
        "commit_hash": "4c48abe91be03d191d0c20cc755877da2cb35622",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4c48abe91be03d191d0c20cc755877da2cb35622",
        "files": [
          "kernel/exit.c"
        ],
        "message": "waitid(): switch copyout of siginfo to unsafe_put_user()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "kernel/exit.c||kernel/exit.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/exit.c||kernel/exit.c"
          ],
          "candidate": [
            "kernel/exit.c||kernel/exit.c"
          ]
        }
      },
      "candidate_diff": {
        "kernel/exit.c||kernel/exit.c": [
          "File: kernel/exit.c -> kernel/exit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1625:  if (!infop)",
          "1626:   return err;",
          "1636:  return err;",
          "1637: }",
          "1639: static long kernel_wait4(pid_t upid, int __user *stat_addr,",
          "",
          "[Removed Lines]",
          "1628:  if (put_user(err ? 0 : SIGCHLD, &infop->si_signo) ||",
          "1629:      put_user(0, &infop->si_errno) ||",
          "1630:      put_user((short)info.cause, &infop->si_code) ||",
          "1631:      put_user(info.pid, &infop->si_pid) ||",
          "1632:      put_user(info.uid, &infop->si_uid) ||",
          "1633:      put_user(info.status, &infop->si_status))",
          "1634:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "1628:  user_access_begin();",
          "1629:  unsafe_put_user(err ? 0 : SIGCHLD, &infop->si_signo, Efault);",
          "1630:  unsafe_put_user(0, &infop->si_errno, Efault);",
          "1631:  unsafe_put_user((short)info.cause, &infop->si_code, Efault);",
          "1632:  unsafe_put_user(info.pid, &infop->si_pid, Efault);",
          "1633:  unsafe_put_user(info.uid, &infop->si_uid, Efault);",
          "1634:  unsafe_put_user(info.status, &infop->si_status, Efault);",
          "1635:  user_access_end();",
          "1637: Efault:",
          "1638:  user_access_end();",
          "1639:  return -EFAULT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1736:    return -EFAULT;",
          "1737:  }",
          "1746:  return err;",
          "1747: }",
          "1748: #endif",
          "",
          "[Removed Lines]",
          "1739:  if (put_user(err ? 0 : SIGCHLD, &infop->si_signo) ||",
          "1740:      put_user(0, &infop->si_errno) ||",
          "1741:      put_user((short)info.cause, &infop->si_code) ||",
          "1742:      put_user(info.pid, &infop->si_pid) ||",
          "1743:      put_user(info.uid, &infop->si_uid) ||",
          "1744:      put_user(info.status, &infop->si_status))",
          "1745:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "1742:  if (!infop)",
          "1743:   return err;",
          "1745:  user_access_begin();",
          "1746:  unsafe_put_user(err ? 0 : SIGCHLD, &infop->si_signo, Efault);",
          "1747:  unsafe_put_user(0, &infop->si_errno, Efault);",
          "1748:  unsafe_put_user((short)info.cause, &infop->si_code, Efault);",
          "1749:  unsafe_put_user(info.pid, &infop->si_pid, Efault);",
          "1750:  unsafe_put_user(info.uid, &infop->si_uid, Efault);",
          "1751:  unsafe_put_user(info.status, &infop->si_status, Efault);",
          "1752:  user_access_end();",
          "1754: Efault:",
          "1755:  user_access_end();",
          "1756:  return -EFAULT;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7e95a225901a5d2fd140f14b4302805cecc22da7",
      "candidate_info": {
        "commit_hash": "7e95a225901a5d2fd140f14b4302805cecc22da7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7e95a225901a5d2fd140f14b4302805cecc22da7",
        "files": [
          "kernel/compat.c",
          "kernel/exit.c"
        ],
        "message": "move compat wait4 and waitid next to native variants\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "kernel/compat.c||kernel/compat.c",
          "kernel/exit.c||kernel/exit.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/exit.c||kernel/exit.c"
          ],
          "candidate": [
            "kernel/exit.c||kernel/exit.c"
          ]
        }
      },
      "candidate_diff": {
        "kernel/compat.c||kernel/compat.c": [
          "File: kernel/compat.c -> kernel/compat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "543:  return 0;",
          "544: }",
          "612: static int compat_get_user_cpu_mask(compat_ulong_t __user *user_mask_ptr,",
          "613:         unsigned len, struct cpumask *new_mask)",
          "614: {",
          "",
          "[Removed Lines]",
          "546: COMPAT_SYSCALL_DEFINE4(wait4,",
          "547:  compat_pid_t, pid,",
          "548:  compat_uint_t __user *, stat_addr,",
          "549:  int, options,",
          "550:  struct compat_rusage __user *, ru)",
          "551: {",
          "552:  if (!ru) {",
          "553:   return sys_wait4(pid, stat_addr, options, NULL);",
          "554:  } else {",
          "555:   struct rusage r;",
          "556:   int ret;",
          "557:   unsigned int status;",
          "558:   mm_segment_t old_fs = get_fs();",
          "560:   set_fs (KERNEL_DS);",
          "561:   ret = sys_wait4(pid,",
          "562:     (stat_addr ?",
          "563:      (unsigned int __user *) &status : NULL),",
          "564:     options, (struct rusage __user *) &r);",
          "565:   set_fs (old_fs);",
          "567:   if (ret > 0) {",
          "568:    if (put_compat_rusage(&r, ru))",
          "569:     return -EFAULT;",
          "570:    if (stat_addr && put_user(status, stat_addr))",
          "571:     return -EFAULT;",
          "572:   }",
          "573:   return ret;",
          "574:  }",
          "575: }",
          "577: COMPAT_SYSCALL_DEFINE5(waitid,",
          "578:   int, which, compat_pid_t, pid,",
          "579:   struct compat_siginfo __user *, uinfo, int, options,",
          "580:   struct compat_rusage __user *, uru)",
          "581: {",
          "582:  siginfo_t info;",
          "583:  struct rusage ru;",
          "584:  long ret;",
          "585:  mm_segment_t old_fs = get_fs();",
          "587:  memset(&info, 0, sizeof(info));",
          "589:  set_fs(KERNEL_DS);",
          "590:  ret = sys_waitid(which, pid, (siginfo_t __user *)&info, options,",
          "591:     uru ? (struct rusage __user *)&ru : NULL);",
          "592:  set_fs(old_fs);",
          "594:  if ((ret < 0) || (info.si_signo == 0))",
          "595:   return ret;",
          "597:  if (uru) {",
          "599:   if (COMPAT_USE_64BIT_TIME)",
          "600:    ret = copy_to_user(uru, &ru, sizeof(ru));",
          "601:   else",
          "602:    ret = put_compat_rusage(&ru, uru);",
          "603:   if (ret)",
          "604:    return -EFAULT;",
          "605:  }",
          "607:  BUG_ON(info.si_code & __SI_MASK);",
          "608:  info.si_code |= __SI_CHLD;",
          "609:  return copy_siginfo_to_user32(uinfo, &info);",
          "610: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "kernel/exit.c||kernel/exit.c": [
          "File: kernel/exit.c -> kernel/exit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: #include <linux/kcov.h>",
          "63: #include <linux/random.h>",
          "64: #include <linux/rcuwait.h>",
          "66: #include <linux/uaccess.h>",
          "67: #include <asm/unistd.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: #include <linux/compat.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1735: }",
          "1737: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1740: #ifdef CONFIG_COMPAT",
          "1741: COMPAT_SYSCALL_DEFINE4(wait4,",
          "1742:  compat_pid_t, pid,",
          "1743:  compat_uint_t __user *, stat_addr,",
          "1744:  int, options,",
          "1745:  struct compat_rusage __user *, ru)",
          "1746: {",
          "1747:  if (!ru) {",
          "1748:   return sys_wait4(pid, stat_addr, options, NULL);",
          "1749:  } else {",
          "1750:   struct rusage r;",
          "1751:   int ret;",
          "1752:   unsigned int status;",
          "1753:   mm_segment_t old_fs = get_fs();",
          "1755:   set_fs (KERNEL_DS);",
          "1756:   ret = sys_wait4(pid,",
          "1757:     (stat_addr ?",
          "1758:      (unsigned int __user *) &status : NULL),",
          "1759:     options, (struct rusage __user *) &r);",
          "1760:   set_fs (old_fs);",
          "1762:   if (ret > 0) {",
          "1763:    if (put_compat_rusage(&r, ru))",
          "1764:     return -EFAULT;",
          "1765:    if (stat_addr && put_user(status, stat_addr))",
          "1766:     return -EFAULT;",
          "1767:   }",
          "1768:   return ret;",
          "1769:  }",
          "1770: }",
          "1772: COMPAT_SYSCALL_DEFINE5(waitid,",
          "1773:   int, which, compat_pid_t, pid,",
          "1774:   struct compat_siginfo __user *, infop, int, options,",
          "1775:   struct compat_rusage __user *, uru)",
          "1776: {",
          "1777:  siginfo_t info;",
          "1778:  struct rusage ru;",
          "1779:  long ret;",
          "1780:  mm_segment_t old_fs = get_fs();",
          "1782:  memset(&info, 0, sizeof(info));",
          "1784:  set_fs(KERNEL_DS);",
          "1785:  ret = sys_waitid(which, pid, (siginfo_t __user *)&info, options,",
          "1786:     uru ? (struct rusage __user *)&ru : NULL);",
          "1787:  set_fs(old_fs);",
          "1789:  if ((ret < 0) || (info.si_signo == 0))",
          "1790:   return ret;",
          "1792:  if (uru) {",
          "1794:   if (COMPAT_USE_64BIT_TIME)",
          "1795:    ret = copy_to_user(uru, &ru, sizeof(ru));",
          "1796:   else",
          "1797:    ret = put_compat_rusage(&ru, uru);",
          "1798:   if (ret)",
          "1799:    return -EFAULT;",
          "1800:  }",
          "1802:  BUG_ON(info.si_code & __SI_MASK);",
          "1803:  info.si_code |= __SI_CHLD;",
          "1804:  return copy_siginfo_to_user32(infop, &info);",
          "1805: }",
          "1806: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}