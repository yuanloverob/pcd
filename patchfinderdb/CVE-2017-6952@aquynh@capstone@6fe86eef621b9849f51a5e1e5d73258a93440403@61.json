{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bd8e5ba3707007a67245e1b16d04b9418014782b",
      "candidate_info": {
        "commit_hash": "bd8e5ba3707007a67245e1b16d04b9418014782b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bd8e5ba3707007a67245e1b16d04b9418014782b",
        "files": [
          "bindings/python/capstone/__init__.py",
          "bindings/python/test_skipdata.py"
        ],
        "message": "python: cast skipdata function inside binding to simplify the API",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py",
          "bindings/python/test_skipdata.py||bindings/python/test_skipdata.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "860:         _skipdata_opt = _cs_opt_skipdata()",
          "861:         _mnem, _cb, _ud = opt",
          "862:         _skipdata_opt.mnemonic = _mnem.encode()",
          "864:         _skipdata_opt.user_data = ctypes.cast(_ud, ctypes.c_void_p)",
          "865:         status = _cs.cs_option(self.csh, CS_OPT_SKIPDATA_SETUP, ctypes.cast(ctypes.byref(_skipdata_opt), ctypes.c_void_p))",
          "866:         if status != CS_ERR_OK:",
          "",
          "[Removed Lines]",
          "863:         _skipdata_opt.callback = ctypes.cast(_cb, CS_SKIPDATA_CALLBACK)",
          "",
          "[Added Lines]",
          "863:         _skipdata_opt.callback = CS_SKIPDATA_CALLBACK(_cb)",
          "",
          "---------------"
        ],
        "bindings/python/test_skipdata.py||bindings/python/test_skipdata.py": [
          "File: bindings/python/test_skipdata.py -> bindings/python/test_skipdata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:             # NOTE: This example ignores SKIPDATA's callback (first None) & user_data (second None)",
          "47:             # To customize the SKIPDATA callback, uncomment the line below.",
          "50:             for insn in md.disasm(code, 0x1000):",
          "51:                 #bytes = binascii.hexlify(insn.bytes)",
          "",
          "[Removed Lines]",
          "48:             # md.skipdata_setup = (\".db\", CS_SKIPDATA_CALLBACK(testcb), None)",
          "",
          "[Added Lines]",
          "48:             # md.skipdata_setup = (\".db\", testcb, None)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05ddfacbc369c38e800dc95775d7177ca94404b0",
      "candidate_info": {
        "commit_hash": "05ddfacbc369c38e800dc95775d7177ca94404b0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/05ddfacbc369c38e800dc95775d7177ca94404b0",
        "files": [
          "arch/X86/X86MappingInsnOp_reduce.inc"
        ],
        "message": "Fix mov *ax, addr register access for CAPSTONE_REDUCE files",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc": [
          "File: arch/X86/X86MappingInsnOp_reduce.inc -> arch/X86/X86MappingInsnOp_reduce.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2863: },",
          "2865:  0,",
          "2867: },",
          "2869:  0,",
          "2871: },",
          "2873:  0,",
          "",
          "[Removed Lines]",
          "2866:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "2870:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "2866:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "2870:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2931: },",
          "2933:  0,",
          "2935: },",
          "2937:  0,",
          "2939: },",
          "2941:  0,",
          "",
          "[Removed Lines]",
          "2934:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "2938:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "2934:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "2938:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3015: },",
          "3017:  0,",
          "3019: },",
          "3021:  0,",
          "",
          "[Removed Lines]",
          "3018:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "3018:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3091: },",
          "3093:  0,",
          "3095: },",
          "3097:  0,",
          "3099: },",
          "3101:  0,",
          "",
          "[Removed Lines]",
          "3094:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "3098:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "3094:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "3098:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a5c10686bec921e0c5a724aae73fcef7b233669",
      "candidate_info": {
        "commit_hash": "3a5c10686bec921e0c5a724aae73fcef7b233669",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3a5c10686bec921e0c5a724aae73fcef7b233669",
        "files": [
          "bindings/python/.gitignore",
          "bindings/python/BUILDING.txt",
          "bindings/python/Makefile",
          "bindings/python/README.txt",
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "Python: Make cython work with extreme prejudice",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import glob",
          "4: import os",
          "5: import shutil",
          "7: import sys",
          "8: import platform",
          "",
          "[Removed Lines]",
          "6: import stat",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:         pass",
          "57:     shutil.copytree(os.path.join(BUILD_DIR, \"arch\"), os.path.join(SRC_DIR, \"arch\"))",
          "60:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.[ch]\")))",
          "71:     for filename in src:",
          "72:         outpath = os.path.join(SRC_DIR, os.path.basename(filename))",
          "",
          "[Removed Lines]",
          "58:  shutil.copytree(os.path.join(BUILD_DIR, \"include\"), os.path.join(SRC_DIR, \"include\"))",
          "61:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.mk\"))",
          "63:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"Makefile\"))",
          "64:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"LICENSE*\"))",
          "65:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"README\"))",
          "66:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.TXT\"))",
          "67:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\"))",
          "68:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\"))",
          "69:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\"))",
          "",
          "[Added Lines]",
          "57:     shutil.copytree(os.path.join(BUILD_DIR, \"include\"), os.path.join(SRC_DIR, \"include\"))",
          "60:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.mk\")))",
          "62:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"Makefile\")))",
          "63:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"LICENSE*\")))",
          "64:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"README\")))",
          "65:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.TXT\")))",
          "66:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\")))",
          "67:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\")))",
          "68:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\")))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:         os.system('cmake -DCMAKE_BUILD_TYPE=RELEASE -DCAPSTONE_BUILD_TESTS=0 -DCAPSTONE_BUILD_STATIC=0 -G \"NMake Makefiles\" ..')",
          "102:         os.system(\"nmake\")",
          "103:     elif SYSTEM == \"cygwin\":",
          "107:         else:",
          "111:     else:   # Unix",
          "114:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "115:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Removed Lines]",
          "104:         os.chmod(\"make.sh\", stat.S_IREAD|stat.S_IEXEC)",
          "105:         if is_64bits:",
          "106:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh cygwin-mingw64\")",
          "108:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh cygwin-mingw32\")",
          "110:         so = \"capstone.dll\"",
          "112:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh\")",
          "",
          "[Added Lines]",
          "103:         if IS_64BITS:",
          "104:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw64\")",
          "106:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw32\")",
          "108:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:     cmdclass['develop'] = custom_develop",
          "155: except ImportError:",
          "158: if 'bdist_wheel' in sys.argv and '--plat-name' not in sys.argv:",
          "159:     idx = sys.argv.index('bdist_wheel') + 1",
          "",
          "[Removed Lines]",
          "156:     print \"Proper 'develop' support unavailable.\"",
          "",
          "[Added Lines]",
          "152:     print(\"Proper 'develop' support unavailable.\")",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from distutils.core import setup",
          "2: from distutils.extension import Extension",
          "4: from Cython.Distutils import build_ext",
          "6: VERSION = '3.0.4'",
          "30: # clean package directory first",
          "31: #import os.path, shutil, sys",
          "",
          "[Removed Lines]",
          "3: from distutils.command.install_lib import install_lib as _install",
          "8: compile_args = ['-O3', '-fomit-frame-pointer']",
          "10: ext_modules = [",
          "11:     Extension(\"capstone.ccapstone\", [\"pyx/ccapstone.pyx\"], libraries=[\"capstone\"], extra_compile_args=compile_args),",
          "12:     Extension(\"capstone.arm\", [\"pyx/arm.pyx\"], extra_compile_args=compile_args),",
          "13:     Extension(\"capstone.arm_const\", [\"pyx/arm_const.pyx\"], extra_compile_args=compile_args),",
          "14:     Extension(\"capstone.arm64\", [\"pyx/arm64.pyx\"], extra_compile_args=compile_args),",
          "15:     Extension(\"capstone.arm64_const\", [\"pyx/arm64_const.pyx\"], extra_compile_args=compile_args),",
          "16:     Extension(\"capstone.mips\", [\"pyx/mips.pyx\"], extra_compile_args=compile_args),",
          "17:     Extension(\"capstone.mips_const\", [\"pyx/mips_const.pyx\"], extra_compile_args=compile_args),",
          "18:     Extension(\"capstone.ppc\", [\"pyx/ppc.pyx\"], extra_compile_args=compile_args),",
          "19:     Extension(\"capstone.ppc_const\", [\"pyx/ppc_const.pyx\"], extra_compile_args=compile_args),",
          "20:     Extension(\"capstone.x86\", [\"pyx/x86.pyx\"], extra_compile_args=compile_args),",
          "21:     Extension(\"capstone.x86_const\", [\"pyx/x86_const.pyx\"], extra_compile_args=compile_args),",
          "22:     Extension(\"capstone.sparc\", [\"pyx/sparc.pyx\"], extra_compile_args=compile_args),",
          "23:     Extension(\"capstone.sparc_const\", [\"pyx/sparc_const.pyx\"], extra_compile_args=compile_args),",
          "24:     Extension(\"capstone.systemz\", [\"pyx/systemz.pyx\"], extra_compile_args=compile_args),",
          "25:     Extension(\"capstone.sysz_const\", [\"pyx/sysz_const.pyx\"], extra_compile_args=compile_args),",
          "26:     Extension(\"capstone.xcore\", [\"pyx/xcore.pyx\"], extra_compile_args=compile_args),",
          "27:     Extension(\"capstone.xcore_const\", [\"pyx/xcore_const.pyx\"], extra_compile_args=compile_args)",
          "28: ]",
          "",
          "[Added Lines]",
          "1: import os",
          "2: import sys",
          "3: import shutil",
          "4: from distutils import log",
          "7: from distutils.command.build import build",
          "11: SYSTEM = sys.platform",
          "14: # adapted from commit e504b81 of Nguyen Tan Cong",
          "15: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "16: IS_64BITS = sys.maxsize > 2**32",
          "18: # are we building from the repository or from a source distribution?",
          "19: ROOT_DIR = os.path.dirname(os.path.realpath(__file__))",
          "20: LIBS_DIR = os.path.join(ROOT_DIR, 'pyx', 'lib')",
          "21: HEADERS_DIR = os.path.join(ROOT_DIR, 'pyx', 'include')",
          "22: SRC_DIR = os.path.join(ROOT_DIR, 'src')",
          "23: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "24: PYPACKAGE_DIR = os.path.join(ROOT_DIR, 'capstone')",
          "25: CYPACKAGE_DIR = os.path.join(ROOT_DIR, 'pyx')",
          "27: if SYSTEM == 'darwin':",
          "28:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "29:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "30: elif SYSTEM in ('win32', 'cygwin'):",
          "31:     LIBRARY_FILE = \"capstone.dll\"",
          "32:     STATIC_LIBRARY_FILE = None",
          "33: else:",
          "34:     LIBRARY_FILE = \"libcapstone.so\"",
          "35:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "37: compile_args = ['-O3', '-fomit-frame-pointer', '-I' + HEADERS_DIR]",
          "38: link_args = ['-L' + LIBS_DIR]",
          "40: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "41: ext_modules = [Extension(\"capstone.ccapstone\",",
          "42:                          [\"pyx/ccapstone.pyx\"],",
          "43:                          libraries=[\"capstone\"],",
          "44:                          extra_compile_args=compile_args,",
          "45:                          extra_link_args=link_args)]",
          "46: ext_modules += [Extension(\"capstone.%s\" % name,",
          "47:                           [\"pyx/%s.pyx\" % name],",
          "48:                           extra_compile_args=compile_args,",
          "49:                           extra_link_args=link_args)",
          "50:                 for name in ext_module_names]",
          "52: def clean_bins():",
          "53:     shutil.rmtree(LIBS_DIR, ignore_errors=True)",
          "54:     shutil.rmtree(HEADERS_DIR, ignore_errors=True)",
          "56: def copy_pysources():",
          "57:     for fname in os.listdir(PYPACKAGE_DIR):",
          "58:         if not fname.endswith('.py'):",
          "59:             continue",
          "61:         if fname == '__init__.py':",
          "62:             shutil.copy(os.path.join(PYPACKAGE_DIR, fname), os.path.join(CYPACKAGE_DIR, fname))",
          "63:         else:",
          "64:             shutil.copy(os.path.join(PYPACKAGE_DIR, fname), os.path.join(CYPACKAGE_DIR, fname + 'x'))",
          "66: def build_libraries():",
          "67:     \"\"\"",
          "68:     Prepare the capstone directory for a binary distribution or installation.",
          "69:     Builds shared libraries and copies header files.",
          "71:     Will use a src/ dir if one exists in the current directory, otherwise assumes it's in the repo",
          "72:     \"\"\"",
          "73:     cwd = os.getcwd()",
          "74:     clean_bins()",
          "75:     os.mkdir(HEADERS_DIR)",
          "76:     os.mkdir(LIBS_DIR)",
          "78:     # copy public headers",
          "79:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "81:     os.chdir(BUILD_DIR)",
          "83:     # platform description refers at https://docs.python.org/2/library/sys.html#sys.platform",
          "84:     if SYSTEM == \"win32\":",
          "85:         # Windows build: this process requires few things:",
          "86:         #    - CMake + MSVC installed",
          "87:         #    - Run this command in an environment setup for MSVC",
          "88:         if not os.path.exists(\"build\"): os.mkdir(\"build\")",
          "89:         os.chdir(\"build\")",
          "90:         # Do not build tests & static library",
          "91:         os.system('cmake -DCMAKE_BUILD_TYPE=RELEASE -DCAPSTONE_BUILD_TESTS=0 -DCAPSTONE_BUILD_STATIC=0 -G \"NMake Makefiles\" ..')",
          "92:         os.system(\"nmake\")",
          "93:     elif SYSTEM == \"cygwin\":",
          "94:         if IS_64BITS:",
          "95:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw64\")",
          "96:         else:",
          "97:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw32\")",
          "99:     else:   # Unix",
          "100:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "102:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "103:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "104:     os.chdir(cwd)",
          "107: class custom_build(build):",
          "108:     def run(self):",
          "109:         log.info('Copying python sources')",
          "110:         copy_pysources()",
          "111:         log.info('Building C extensions')",
          "112:         build_libraries()",
          "113:         return build.run(self)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     packages     = ['capstone'],",
          "45:     name         = 'capstone',",
          "46:     version      = VERSION,",
          "48:     ext_modules  = ext_modules,",
          "49:     author       = 'Nguyen Anh Quynh',",
          "50:     author_email = 'aquynh@gmail.com',",
          "",
          "[Removed Lines]",
          "47:     cmdclass     = {'build_ext': build_ext},",
          "",
          "[Added Lines]",
          "132:     cmdclass     = {'build_ext': build_ext, 'build': custom_build},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:                 'License :: OSI Approved :: BSD License',",
          "55:                 'Programming Language :: Python :: 2',",
          "56:                 ],",
          "57: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:     include_package_data=True,",
          "143:     package_data={",
          "144:         \"capstone\": [\"lib/*\", \"include/capstone/*\"],",
          "145:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8c7e4a5371def7927123d80892e214d84de390e",
      "candidate_info": {
        "commit_hash": "a8c7e4a5371def7927123d80892e214d84de390e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a8c7e4a5371def7927123d80892e214d84de390e",
        "files": [
          "arch/X86/X86GenAsmWriter1.inc",
          "arch/X86/X86GenAsmWriter1_reduce.inc",
          "arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c",
          "cs.c",
          "include/capstone/capstone.h",
          "include/capstone/platform.h"
        ],
        "message": "Merge #929 with some changes to get things compile (#930)",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter1.inc||arch/X86/X86GenAsmWriter1.inc",
          "arch/X86/X86GenAsmWriter1_reduce.inc||arch/X86/X86GenAsmWriter1_reduce.inc",
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c",
          "cs.c||cs.c",
          "include/capstone/capstone.h||include/capstone/capstone.h",
          "include/capstone/platform.h||include/capstone/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter1.inc||arch/X86/X86GenAsmWriter1.inc": [
          "File: arch/X86/X86GenAsmWriter1.inc -> arch/X86/X86GenAsmWriter1.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "20484: #ifdef PRINT_ALIAS_INSTR",
          "20485: #undef PRINT_ALIAS_INSTR",
          "20487: static void printCustomAliasOperand(MCInst *MI, unsigned OpIdx,",
          "20488:   unsigned PrintMethodIdx, SStream *OS)",
          "20489: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20487: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20573:   return tmp;",
          "20574: }",
          "20576: #endif // PRINT_ALIAS_INSTR",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20578: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86GenAsmWriter1_reduce.inc||arch/X86/X86GenAsmWriter1_reduce.inc": [
          "File: arch/X86/X86GenAsmWriter1_reduce.inc -> arch/X86/X86GenAsmWriter1_reduce.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4575: #ifdef PRINT_ALIAS_INSTR",
          "4576: #undef PRINT_ALIAS_INSTR",
          "4578: static void printCustomAliasOperand(MCInst *MI, unsigned OpIdx,",
          "4579:   unsigned PrintMethodIdx, SStream *OS)",
          "4580: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4578: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4646:   return tmp;",
          "4647: }",
          "4649: #endif // PRINT_ALIAS_INSTR",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4651: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "720:  printMemOffset(MI, OpNo, O);",
          "721: }",
          "723: static char *printAliasInstr(MCInst *MI, SStream *OS, void *info);",
          "724: static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI);",
          "725: void X86_Intel_printInst(MCInst *MI, SStream *O, void *Info)",
          "726: {",
          "727:  char *mnem;",
          "728:  x86_reg reg, reg2;",
          "729:  enum cs_ac_type access1, access2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "723: #ifndef CAPSTONE_DIET",
          "725: #endif",
          "730: #ifndef CAPSTONE_DIET",
          "732: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "734:   return;",
          "735:  }",
          "738:  mnem = printAliasInstr(MI, O, Info);",
          "739:  if (mnem)",
          "740:   cs_mem_free(mnem);",
          "741:  else",
          "742:   printInstruction(MI, O, Info);",
          "744:  reg = X86_insn_reg_intel(MCInst_getOpcode(MI), &access1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "742: #ifndef CAPSTONE_DIET",
          "748: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #ifdef CAPSTONE_HAS_X86",
          "6: #include <string.h>",
          "7: #include <stdlib.h>",
          "9: #include \"X86Mapping.h\"",
          "10: #include \"X86DisassemblerDecoder.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #ifndef CAPSTONE_HAS_OSXKERNEL",
          "9: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3131: static bool valid_bnd(cs_struct *h, unsigned int opcode)",
          "3132: {",
          "3133:  unsigned int id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3133: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3171:  return false;",
          "3172: }",
          "3175: static bool valid_rep(cs_struct *h, unsigned int opcode)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3176: #endif",
          "",
          "---------------"
        ],
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #endif",
          "48: #define SKIPDATA_MNEM \".byte\"",
          "50: cs_err (*arch_init[MAX_ARCH])(cs_struct *) = { NULL };",
          "51: cs_err (*arch_option[MAX_ARCH]) (cs_struct *, cs_opt_type, size_t value) = { NULL };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #ifndef CAPSTONE_DIET",
          "50: #else // No printing is available in diet mode",
          "51: #define SKIPDATA_MNEM NULL",
          "52: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "552: }",
          "555: static void skipdata_opstr(char *opstr, const uint8_t *buffer, size_t size)",
          "556: {",
          "557:  char *p = opstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "559: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "580:   available -= len;",
          "581:  }",
          "582: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "588: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "708:    insn_cache->address = offset;",
          "709:    insn_cache->size = (uint16_t)skipdata_bytes;",
          "710:    memcpy(insn_cache->bytes, buffer, skipdata_bytes);",
          "711:    strncpy(insn_cache->mnemonic, handle->skipdata_setup.mnemonic,",
          "712:      sizeof(insn_cache->mnemonic) - 1);",
          "713:    skipdata_opstr(insn_cache->op_str, buffer, skipdata_bytes);",
          "714:    insn_cache->detail = NULL;",
          "716:    next_offset = skipdata_bytes;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "717: #ifdef CAPSTONE_DIET",
          "718:    insn_cache->mnemonic[0] = '\\0';",
          "719:    insn_cache->op_str[0] = '\\0';",
          "720: #else",
          "724: #endif",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "912:   insn->id = 0; // invalid ID for this \"data\" instruction",
          "913:   insn->address = *address;",
          "914:   insn->size = (uint16_t)skipdata_bytes;",
          "915:   memcpy(insn->bytes, *code, skipdata_bytes);",
          "916:   strncpy(insn->mnemonic, handle->skipdata_setup.mnemonic,",
          "917:     sizeof(insn->mnemonic) - 1);",
          "918:   skipdata_opstr(insn->op_str, *code, skipdata_bytes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "926: #ifdef CAPSTONE_DIET",
          "927:   insn->mnemonic[0] = '\\0';",
          "928:   insn->op_str[0] = '\\0';",
          "929: #else",
          "934: #endif",
          "",
          "---------------"
        ],
        "include/capstone/capstone.h||include/capstone/capstone.h": [
          "File: include/capstone/capstone.h -> include/capstone/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #endif",
          "31: #else",
          "32: #define CAPSTONE_API",
          "34: #define CAPSTONE_EXPORT __attribute__((visibility(\"default\")))",
          "36: #define CAPSTONE_EXPORT",
          "37: #endif",
          "38: #endif",
          "",
          "[Removed Lines]",
          "33: #ifdef __GNUC__",
          "35: #else",
          "",
          "[Added Lines]",
          "33: #if defined(__GNUC__) && !defined(CAPSTONE_STATIC)",
          "35: #else    // defined(CAPSTONE_STATIC)",
          "",
          "---------------"
        ],
        "include/capstone/platform.h||include/capstone/platform.h": [
          "File: include/capstone/platform.h -> include/capstone/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: #define UINT64_MAX       0xffffffffffffffffui64",
          "63: #endif  // defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE))",
          "65: #define __PRI_8_LENGTH_MODIFIER__ \"hh\"",
          "66: #define __PRI_64_LENGTH_MODIFIER__ \"ll\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: #ifdef CAPSTONE_HAS_OSXKERNEL",
          "67: #include <stdint.h>",
          "68: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cab4dab32ee4fdeace60c82431e7abab4693155",
      "candidate_info": {
        "commit_hash": "7cab4dab32ee4fdeace60c82431e7abab4693155",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7cab4dab32ee4fdeace60c82431e7abab4693155",
        "files": [
          "include/capstone.h"
        ],
        "message": "minor typo fix",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "123: typedef enum cs_opt_type {",
          "125:  CS_OPT_SYNTAX, // Assembly output syntax",
          "126:  CS_OPT_DETAIL, // Break down instruction structure into details",
          "127:  CS_OPT_MODE, // Change engine's mode at run-time",
          "",
          "[Removed Lines]",
          "124:  CS_OPT_INVALID = 0, // No opetion specified",
          "",
          "[Added Lines]",
          "124:  CS_OPT_INVALID = 0, // No option specified",
          "",
          "---------------"
        ]
      }
    }
  ]
}