{
  "cve_id": "CVE-2017-14604",
  "cve_desc": "GNOME Nautilus before 3.23.90 allows attackers to spoof a file type by using the .desktop file extension, as demonstrated by an attack in which a .desktop file's Name field ends in .pdf but this file's Exec field launches a malicious \"sh -c\" command. In other words, Nautilus provides no UI indication that a file actually has the potentially unsafe .desktop extension; instead, the UI only shows the .pdf extension. One (slightly) mitigating factor is that an attack requires the .desktop file to have execute permission. The solution is to ask the user to confirm that the file is supposed to be treated as a .desktop file, and then remember the user's answer in the metadata::trusted field.",
  "repo": "GNOME/nautilus",
  "patch_hash": "1630f53481f445ada0a455e9979236d31a8d3bb0",
  "patch_info": {
    "commit_hash": "1630f53481f445ada0a455e9979236d31a8d3bb0",
    "repo": "GNOME/nautilus",
    "commit_url": "https://github.com/GNOME/nautilus/commit/1630f53481f445ada0a455e9979236d31a8d3bb0",
    "files": [
      "src/nautilus-directory-async.c",
      "src/nautilus-file-operations.c",
      "src/nautilus-file-operations.h",
      "src/nautilus-metadata.c",
      "src/nautilus-metadata.h",
      "src/nautilus-mime-actions.c"
    ],
    "message": "mime-actions: use file metadata for trusting desktop files\n\nCurrently we only trust desktop files that have the executable bit\nset, and don't replace the displayed icon or the displayed name until\nit's trusted, which prevents for running random programs by a malicious\ndesktop file.\n\nHowever, the executable permission is preserved if the desktop file\ncomes from a compressed file.\n\nTo prevent this, add a metadata::trusted metadata to the file once the\nuser acknowledges the file as trusted. This adds metadata to the file,\nwhich cannot be added unless it has access to the computer.\n\nAlso remove the SHEBANG \"trusted\" content we were putting inside the\ndesktop file, since that doesn't add more security since it can come\nwith the file itself.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=777991",
    "before_after_code_files": [
      "src/nautilus-directory-async.c||src/nautilus-directory-async.c",
      "src/nautilus-file-operations.c||src/nautilus-file-operations.c",
      "src/nautilus-file-operations.h||src/nautilus-file-operations.h",
      "src/nautilus-metadata.c||src/nautilus-metadata.c",
      "src/nautilus-metadata.h||src/nautilus-metadata.h",
      "src/nautilus-mime-actions.c||src/nautilus-mime-actions.c"
    ]
  },
  "patch_diff": {
    "src/nautilus-directory-async.c||src/nautilus-directory-async.c": [
      "File: src/nautilus-directory-async.c -> src/nautilus-directory-async.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: #include \"nautilus-global-preferences.h\"",
      "31: #include \"nautilus-link.h\"",
      "32: #include \"nautilus-profile.h\"",
      "33: #include <eel/eel-glib-extensions.h>",
      "34: #include <gtk/gtk.h>",
      "35: #include <libxml/parser.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: #include \"nautilus-metadata.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3580: {",
      "3581:     GFile *location;",
      "3582:     gboolean res;",
      "3584:     if (!is_launcher)",
      "3585:     {",
      "3586:         return TRUE;",
      "3587:     }",
      "3590:     {",
      "3591:         return TRUE;",
      "3592:     }",
      "",
      "[Removed Lines]",
      "3589:     if (nautilus_file_can_execute (file))",
      "",
      "[Added Lines]",
      "3584:     g_autofree gchar* trusted = NULL;",
      "3591:     trusted = nautilus_file_get_metadata (file,",
      "3592:                                           NAUTILUS_METADATA_KEY_DESKTOP_FILE_TRUSTED,",
      "3593:                                           NULL);",
      "3594:     if (nautilus_file_can_execute (file) && trusted != NULL)",
      "",
      "---------------"
    ],
    "src/nautilus-file-operations.c||src/nautilus-file-operations.c": [
      "File: src/nautilus-file-operations.c -> src/nautilus-file-operations.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "235: #define COPY_FORCE _(\"Copy _Anyway\")",
      "237: static void",
      "243: static gboolean",
      "244: is_all_button_text (const char *button_text)",
      "",
      "[Removed Lines]",
      "238: mark_desktop_file_trusted (CommonJob    *common,",
      "239:                            GCancellable *cancellable,",
      "240:                            GFile        *file,",
      "241:                            gboolean      interactive);",
      "",
      "[Added Lines]",
      "238: mark_desktop_file_executable (CommonJob    *common,",
      "239:                               GCancellable *cancellable,",
      "240:                               GFile        *file,",
      "241:                               gboolean      interactive);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "5290:             g_file_equal (copy_job->desktop_location, dest_dir) &&",
      "5291:             is_trusted_desktop_file (src, job->cancellable))",
      "5292:         {",
      "5297:         }",
      "5299:         if (job->undo_info != NULL)",
      "",
      "[Removed Lines]",
      "5293:             mark_desktop_file_trusted (job,",
      "5294:                                        job->cancellable,",
      "5295:                                        dest,",
      "5296:                                        FALSE);",
      "",
      "[Added Lines]",
      "5293:             mark_desktop_file_executable (job,",
      "5294:                                           job->cancellable,",
      "5295:                                           dest,",
      "5296:                                           FALSE);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7887: }",
      "7889: static void",
      "7893: {",
      "7894:     MarkTrustedJob *job = user_data;",
      "",
      "[Removed Lines]",
      "7890: mark_trusted_task_done (GObject      *source_object,",
      "7891:                         GAsyncResult *res,",
      "7892:                         gpointer      user_data)",
      "",
      "[Added Lines]",
      "7890: mark_desktop_file_executable_task_done (GObject      *source_object,",
      "7891:                                         GAsyncResult *res,",
      "7892:                                         gpointer      user_data)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "7907: #define TRUSTED_SHEBANG \"#!/usr/bin/env xdg-open\\n\"",
      "7909: static void",
      "7914: {",
      "7917:     GError *error;",
      "7918:     guint32 current_perms, new_perms;",
      "7919:     int response;",
      "7920:     GFileInfo *info;",
      "7922: retry:",
      "8014:     info = g_file_query_info (file,",
      "8015:                               G_FILE_ATTRIBUTE_STANDARD_TYPE \",\"",
      "8016:                               G_FILE_ATTRIBUTE_UNIX_MODE,",
      "",
      "[Removed Lines]",
      "7910: mark_desktop_file_trusted (CommonJob    *common,",
      "7911:                            GCancellable *cancellable,",
      "7912:                            GFile        *file,",
      "7913:                            gboolean      interactive)",
      "7915:     char *contents, *new_contents;",
      "7916:     gsize length, new_length;",
      "7923:     error = NULL;",
      "7924:     if (!g_file_load_contents (file,",
      "7925:                                cancellable,",
      "7926:                                &contents, &length,",
      "7927:                                NULL, &error))",
      "7928:     {",
      "7929:         if (interactive)",
      "7930:         {",
      "7931:             response = run_error (common,",
      "7932:                                   g_strdup (_(\"Unable to mark launcher trusted (executable)\")),",
      "7933:                                   error->message,",
      "7934:                                   NULL,",
      "7935:                                   FALSE,",
      "7936:                                   CANCEL, RETRY,",
      "7937:                                   NULL);",
      "7938:         }",
      "7939:         else",
      "7940:         {",
      "7941:             response = 0;",
      "7942:         }",
      "7945:         if (response == 0 || response == GTK_RESPONSE_DELETE_EVENT)",
      "7946:         {",
      "7947:             abort_job (common);",
      "7948:         }",
      "7949:         else if (response == 1)",
      "7950:         {",
      "7951:             goto retry;",
      "7952:         }",
      "7953:         else",
      "7954:         {",
      "7955:             g_assert_not_reached ();",
      "7956:         }",
      "7958:         goto out;",
      "7959:     }",
      "7961:     if (!g_str_has_prefix (contents, \"#!\"))",
      "7962:     {",
      "7963:         new_length = length + strlen (TRUSTED_SHEBANG);",
      "7964:         new_contents = g_malloc (new_length);",
      "7966:         strcpy (new_contents, TRUSTED_SHEBANG);",
      "7967:         memcpy (new_contents + strlen (TRUSTED_SHEBANG),",
      "7968:                 contents, length);",
      "7970:         if (!g_file_replace_contents (file,",
      "7971:                                       new_contents,",
      "7972:                                       new_length,",
      "7973:                                       NULL,",
      "7974:                                       FALSE, 0,",
      "7975:                                       NULL, cancellable, &error))",
      "7976:         {",
      "7977:             g_free (contents);",
      "7978:             g_free (new_contents);",
      "7980:             if (interactive)",
      "7981:             {",
      "7982:                 response = run_error (common,",
      "7983:                                       g_strdup (_(\"Unable to mark launcher trusted (executable)\")),",
      "7984:                                       error->message,",
      "7985:                                       NULL,",
      "7986:                                       FALSE,",
      "7987:                                       CANCEL, RETRY,",
      "7988:                                       NULL);",
      "7989:             }",
      "7990:             else",
      "7991:             {",
      "7992:                 response = 0;",
      "7993:             }",
      "7995:             if (response == 0 || response == GTK_RESPONSE_DELETE_EVENT)",
      "7996:             {",
      "7997:                 abort_job (common);",
      "7998:             }",
      "7999:             else if (response == 1)",
      "8000:             {",
      "8001:                 goto retry;",
      "8002:             }",
      "8003:             else",
      "8004:             {",
      "8005:                 g_assert_not_reached ();",
      "8006:             }",
      "8008:             goto out;",
      "8009:         }",
      "8010:         g_free (new_contents);",
      "8011:     }",
      "8012:     g_free (contents);",
      "",
      "[Added Lines]",
      "7910: mark_desktop_file_executable (CommonJob    *common,",
      "7911:                               GCancellable *cancellable,",
      "7912:                               GFile        *file,",
      "7913:                               gboolean      interactive)",
      "7922:     error = NULL;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "8101: }",
      "8103: static void",
      "8108: {",
      "8109:     MarkTrustedJob *job = task_data;",
      "8110:     CommonJob *common;",
      "",
      "[Removed Lines]",
      "8104: mark_trusted_task_thread_func (GTask        *task,",
      "8105:                                gpointer      source_object,",
      "8106:                                gpointer      task_data,",
      "8107:                                GCancellable *cancellable)",
      "",
      "[Added Lines]",
      "8013: mark_desktop_file_executable_task_thread_func (GTask        *task,",
      "8014:                                                gpointer      source_object,",
      "8015:                                                gpointer      task_data,",
      "8016:                                                GCancellable *cancellable)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "8114:     nautilus_progress_info_start (job->common.progress);",
      "8120: }",
      "8122: void",
      "8128: {",
      "8129:     GTask *task;",
      "8130:     MarkTrustedJob *job;",
      "",
      "[Removed Lines]",
      "8116:     mark_desktop_file_trusted (common,",
      "8117:                                cancellable,",
      "8118:                                job->file,",
      "8119:                                job->interactive);",
      "8123: nautilus_file_mark_desktop_file_trusted (GFile              *file,",
      "8124:                                          GtkWindow          *parent_window,",
      "8125:                                          gboolean            interactive,",
      "8126:                                          NautilusOpCallback  done_callback,",
      "8127:                                          gpointer            done_callback_data)",
      "",
      "[Added Lines]",
      "8025:     mark_desktop_file_executable (common,",
      "8026:                                   cancellable,",
      "8027:                                   job->file,",
      "8028:                                   job->interactive);",
      "8032: nautilus_file_mark_desktop_file_executable (GFile              *file,",
      "8033:                                             GtkWindow          *parent_window,",
      "8034:                                             gboolean            interactive,",
      "8035:                                             NautilusOpCallback  done_callback,",
      "8036:                                             gpointer            done_callback_data)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "8135:     job->done_callback = done_callback;",
      "8136:     job->done_callback_data = done_callback_data;",
      "8139:     g_task_set_task_data (task, job, NULL);",
      "8141:     g_object_unref (task);",
      "8142: }",
      "",
      "[Removed Lines]",
      "8138:     task = g_task_new (NULL, NULL, mark_trusted_task_done, job);",
      "8140:     g_task_run_in_thread (task, mark_trusted_task_thread_func);",
      "",
      "[Added Lines]",
      "8047:     task = g_task_new (NULL, NULL, mark_desktop_file_executable_task_done, job);",
      "8049:     g_task_run_in_thread (task, mark_desktop_file_executable_task_thread_func);",
      "",
      "---------------"
    ],
    "src/nautilus-file-operations.h||src/nautilus-file-operations.h": [
      "File: src/nautilus-file-operations.h -> src/nautilus-file-operations.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "146:       GtkWindow            *parent_window,",
      "147:       NautilusCopyCallback  done_callback,",
      "148:       gpointer              done_callback_data);",
      "154: void nautilus_file_operations_extract_files (GList                   *files,",
      "155:                                              GFile                   *destination_directory,",
      "156:                                              GtkWindow               *parent_window,",
      "",
      "[Removed Lines]",
      "149: void nautilus_file_mark_desktop_file_trusted (GFile           *file,",
      "150:            GtkWindow        *parent_window,",
      "151:            gboolean          interactive,",
      "152:            NautilusOpCallback done_callback,",
      "153:            gpointer          done_callback_data);",
      "",
      "[Added Lines]",
      "149: void nautilus_file_mark_desktop_file_executable (GFile           *file,",
      "150:                                                  GtkWindow        *parent_window,",
      "151:                                                  gboolean          interactive,",
      "152:                                                  NautilusOpCallback done_callback,",
      "153:                                                  gpointer          done_callback_data);",
      "",
      "---------------"
    ],
    "src/nautilus-metadata.c||src/nautilus-metadata.c": [
      "File: src/nautilus-metadata.c -> src/nautilus-metadata.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:     NAUTILUS_METADATA_KEY_CUSTOM_ICON_NAME,",
      "52:     NAUTILUS_METADATA_KEY_SCREEN,",
      "53:     NAUTILUS_METADATA_KEY_EMBLEMS,",
      "54:     NULL",
      "55: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "54:     NAUTILUS_METADATA_KEY_DESKTOP_FILE_TRUSTED,",
      "",
      "---------------"
    ],
    "src/nautilus-metadata.h||src/nautilus-metadata.h": [
      "File: src/nautilus-metadata.h -> src/nautilus-metadata.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "67: #define NAUTILUS_METADATA_KEY_SCREEN    \"screen\"",
      "68: #define NAUTILUS_METADATA_KEY_EMBLEMS    \"emblems\"",
      "70: guint nautilus_metadata_get_id (const char *metadata);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "70: #define NAUTILUS_METADATA_KEY_DESKTOP_FILE_TRUSTED    \"trusted\"",
      "",
      "---------------"
    ],
    "src/nautilus-mime-actions.c||src/nautilus-mime-actions.c": [
      "File: src/nautilus-mime-actions.c -> src/nautilus-mime-actions.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "42: #include \"nautilus-program-choosing.h\"",
      "43: #include \"nautilus-global-preferences.h\"",
      "44: #include \"nautilus-signaller.h\"",
      "46: #define DEBUG_FLAG NAUTILUS_DEBUG_MIME",
      "47: #include \"nautilus-debug.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "45: #include \"nautilus-metadata.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "221: #define RESPONSE_RUN 1000",
      "222: #define RESPONSE_DISPLAY 1001",
      "223: #define RESPONSE_RUN_IN_TERMINAL 1002",
      "226: #define SILENT_WINDOW_OPEN_LIMIT 5",
      "227: #define SILENT_OPEN_LIMIT 5",
      "",
      "[Removed Lines]",
      "224: #define RESPONSE_MARK_TRUSTED 1003",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1518:     switch (response_id)",
      "1519:     {",
      "1521:         {",
      "1522:             screen = gtk_widget_get_screen (GTK_WIDGET (parameters->parent_window));",
      "1523:             uri = nautilus_file_get_uri (parameters->file);",
      "1524:             DEBUG (\"Launching untrusted launcher %s\", uri);",
      "1525:             nautilus_launch_desktop_file (screen, uri, NULL,",
      "1526:                                           parameters->parent_window);",
      "1527:             g_free (uri);",
      "1538:             g_object_unref (file);",
      "1539:         }",
      "1540:         break;",
      "",
      "[Removed Lines]",
      "1520:         case RESPONSE_RUN:",
      "1528:         }",
      "1529:         break;",
      "1531:         case RESPONSE_MARK_TRUSTED:",
      "1532:         {",
      "1533:             file = nautilus_file_get_location (parameters->file);",
      "1534:             nautilus_file_mark_desktop_file_trusted (file,",
      "1535:                                                      parameters->parent_window,",
      "1536:                                                      TRUE,",
      "1537:                                                      NULL, NULL);",
      "",
      "[Added Lines]",
      "1520:         case GTK_RESPONSE_OK:",
      "1522:             file = nautilus_file_get_location (parameters->file);",
      "1528:             nautilus_file_set_metadata (parameters->file, NAUTILUS_METADATA_KEY_DESKTOP_FILE_TRUSTED,",
      "1529:                                         NULL,",
      "1530:                                         \"yes\");",
      "1532:             nautilus_file_mark_desktop_file_executable (file,",
      "1533:                                                         parameters->parent_window,",
      "1534:                                                         TRUE,",
      "1535:                                                         NULL, NULL);",
      "1541:             nautilus_file_invalidate_all_attributes (parameters->file);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1590:                       \"text\", primary,",
      "1591:                       \"secondary-text\", secondary,",
      "1592:                       NULL);",
      "1593:         gtk_dialog_add_button (GTK_DIALOG (dialog),",
      "1595:         if (nautilus_file_can_set_permissions (file))",
      "1596:         {",
      "1597:             gtk_dialog_add_button (GTK_DIALOG (dialog),",
      "1599:         }",
      "1604:         g_signal_connect (dialog, \"response\",",
      "1605:                           G_CALLBACK (untrusted_launcher_response_callback),",
      "1606:                           parameters_desktop);",
      "",
      "[Removed Lines]",
      "1594:                                _(\"_Launch Anyway\"), RESPONSE_RUN);",
      "1598:                                    _(\"Mark as _Trusted\"), RESPONSE_MARK_TRUSTED);",
      "1600:         gtk_dialog_add_button (GTK_DIALOG (dialog),",
      "1601:                                _(\"_Cancel\"), GTK_RESPONSE_CANCEL);",
      "1602:         gtk_dialog_set_default_response (GTK_DIALOG (dialog), GTK_RESPONSE_CANCEL);",
      "",
      "[Added Lines]",
      "1606:                                _(\"_Cancel\"), GTK_RESPONSE_CANCEL);",
      "1608:         gtk_dialog_set_default_response (GTK_DIALOG (dialog), GTK_RESPONSE_CANCEL);",
      "1612:                                    _(\"Trust and _Launch\"), GTK_RESPONSE_OK);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2686ff876bc8b1d66923a54d19847bf0dc7f6e71",
      "candidate_info": {
        "commit_hash": "2686ff876bc8b1d66923a54d19847bf0dc7f6e71",
        "repo": "GNOME/nautilus",
        "commit_url": "https://github.com/GNOME/nautilus/commit/2686ff876bc8b1d66923a54d19847bf0dc7f6e71",
        "files": [
          "src/nautilus-files-view.c",
          "src/nautilus-places-view.c",
          "src/nautilus-trash-bar.c",
          "src/nautilus-view.c"
        ],
        "message": "view: add NautilusView::selection property\n\nCurrently we don't have any way to track selection\nchanges, although NautilusView exposes selection. This\nis an inconsistency in code, and should be avoided.\n\nFix that by adding a NautilusView::selection property\nand deprecating the NautilusFilesView::selection-changed\nsignal.",
        "before_after_code_files": [
          "src/nautilus-files-view.c||src/nautilus-files-view.c",
          "src/nautilus-places-view.c||src/nautilus-places-view.c",
          "src/nautilus-trash-bar.c||src/nautilus-trash-bar.c",
          "src/nautilus-view.c||src/nautilus-view.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/nautilus-files-view.c||src/nautilus-files-view.c": [
          "File: src/nautilus-files-view.c -> src/nautilus-files-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     FILE_CHANGED,",
          "143:     MOVE_COPY_ITEMS,",
          "144:     REMOVE_FILE,",
          "146:     TRASH,",
          "147:     DELETE,",
          "148:     LAST_SIGNAL",
          "",
          "[Removed Lines]",
          "145:     SELECTION_CHANGED,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:     PROP_IS_LOADING,",
          "158:     PROP_LOCATION,",
          "159:     PROP_SEARCH_QUERY,",
          "160:     NUM_PROPERTIES",
          "161: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:     PROP_SELECTION,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2916:         nautilus_files_view_call_set_selection (view, selection);",
          "2917:         nautilus_files_view_reveal_selection (view);",
          "2918:     }",
          "2919:     else",
          "2920:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2918:         g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3275:     g_free (detail_status);",
          "3276: }",
          "3284: static void",
          "3285: nautilus_files_view_set_location (NautilusView *view,",
          "3286:                                   GFile        *location)",
          "",
          "[Removed Lines]",
          "3278: static void",
          "3279: nautilus_files_view_send_selection_change (NautilusFilesView *view)",
          "3280: {",
          "3281:     g_signal_emit (view, signals[SELECTION_CHANGED], 0);",
          "3282: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3407:         if (selection)",
          "3408:         {",
          "3409:             g_list_free_full (selection, g_object_unref);",
          "3410:         }",
          "3412:         if (pending_selection)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3405:             g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3959:         }",
          "3961:         g_signal_emit (view, signals[END_FILE_CHANGES], 0);",
          "",
          "[Removed Lines]",
          "3958:             nautilus_files_view_send_selection_change (view);",
          "",
          "[Added Lines]",
          "3954:             g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4001:     view->details->display_selection_idle_id = 0;",
          "4002:     nautilus_files_view_display_selection_info (view);",
          "4005:     g_object_unref (G_OBJECT (view));",
          "",
          "[Removed Lines]",
          "4003:     nautilus_files_view_send_selection_change (view);",
          "",
          "[Added Lines]",
          "3999:     g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8509:             }",
          "8510:             break;",
          "8512:         default:",
          "8513:             g_assert_not_reached ();",
          "8514:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8508:         case PROP_SELECTION:",
          "8509:             {",
          "8510:                 g_value_set_pointer (value, nautilus_view_get_selection (NAUTILUS_VIEW (view)));",
          "8511:             }",
          "8512:             break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8561:             }",
          "8562:             break;",
          "8564:         default:",
          "8565:             {",
          "8566:                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8566:         case PROP_SELECTION:",
          "8567:             {",
          "8568:                 nautilus_view_set_selection (NAUTILUS_VIEW (directory_view), g_value_get_pointer (value));",
          "8569:             }",
          "8570:             break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8985:                       NULL, NULL,",
          "8986:                       g_cclosure_marshal_generic,",
          "8987:                       G_TYPE_NONE, 2, NAUTILUS_TYPE_FILE, NAUTILUS_TYPE_DIRECTORY);",
          "8997:     klass->get_backing_uri = real_get_backing_uri;",
          "8998:     klass->using_manual_layout = real_using_manual_layout;",
          "8999:     klass->get_window = nautilus_files_view_get_window;",
          "",
          "[Removed Lines]",
          "8988:     signals[SELECTION_CHANGED] =",
          "8989:         g_signal_new (\"selection-changed\",",
          "8990:                       G_TYPE_FROM_CLASS (klass),",
          "8991:                       G_SIGNAL_RUN_LAST,",
          "8992:                       0,",
          "8993:                       NULL, NULL,",
          "8994:                       g_cclosure_marshal_VOID__VOID,",
          "8995:                       G_TYPE_NONE, 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9024:     g_object_class_override_property (oclass, PROP_IS_SEARCH, \"is-searching\");",
          "9025:     g_object_class_override_property (oclass, PROP_LOCATION, \"location\");",
          "9026:     g_object_class_override_property (oclass, PROP_SEARCH_QUERY, \"search-query\");",
          "9027: }",
          "9029: static void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9026:     g_object_class_override_property (oclass, PROP_SELECTION, \"selection\");",
          "",
          "---------------"
        ],
        "src/nautilus-places-view.c||src/nautilus-places-view.c": [
          "File: src/nautilus-places-view.c -> src/nautilus-places-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     PROP_SEARCH_QUERY,",
          "51:     PROP_IS_LOADING,",
          "52:     PROP_IS_SEARCHING,",
          "53:     LAST_PROP",
          "54: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     PROP_SELECTION,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170:         }",
          "171:         break;",
          "173:         default:",
          "174:             G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "175:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:         case PROP_SELECTION:",
          "175:         {",
          "176:             g_value_set_pointer (value, NULL);",
          "177:         }",
          "178:         break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:         }",
          "198:         break;",
          "200:         default:",
          "201:             G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "202:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:         case PROP_SELECTION:",
          "208:         break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "348:     g_object_class_override_property (object_class, PROP_IS_LOADING, \"is-loading\");",
          "349:     g_object_class_override_property (object_class, PROP_IS_SEARCHING, \"is-searching\");",
          "350:     g_object_class_override_property (object_class, PROP_LOCATION, \"location\");",
          "351:     g_object_class_override_property (object_class, PROP_SEARCH_QUERY, \"search-query\");",
          "352: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361:     g_object_class_override_property (object_class, PROP_SELECTION, \"selection\");",
          "",
          "---------------"
        ],
        "src/nautilus-trash-bar.c||src/nautilus-trash-bar.c": [
          "File: src/nautilus-trash-bar.c -> src/nautilus-trash-bar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: static void",
          "57: selection_changed_cb (NautilusFilesView *view,",
          "58:                       NautilusTrashBar  *bar)",
          "59: {",
          "60:     GList *selection;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:                       GParamSpec        *pspec,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: connect_view_and_update_button (NautilusTrashBar *bar)",
          "75: {",
          "76:     bar->selection_handler_id = g_signal_connect (bar->view,",
          "78:                                                   G_CALLBACK (selection_changed_cb),",
          "79:                                                   bar);",
          "82: }",
          "84: static void",
          "",
          "[Removed Lines]",
          "77:                                                   \"selection-changed\",",
          "81:     selection_changed_cb (bar->view, bar);",
          "",
          "[Added Lines]",
          "78:                                                   \"notify::selection\",",
          "82:     selection_changed_cb (bar->view, NULL, bar);",
          "",
          "---------------"
        ],
        "src/nautilus-view.c||src/nautilus-view.c": [
          "File: src/nautilus-view.c -> src/nautilus-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:                                                               \"The search query being performed on the view\",",
          "73:                                                               NAUTILUS_TYPE_QUERY,",
          "74:                                                               G_PARAM_READWRITE));",
          "75: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     g_object_interface_install_property (iface,",
          "82:                                          g_param_spec_pointer (\"selection\",",
          "83:                                                                \"Selection of the view\",",
          "84:                                                                \"The selection of the view\",",
          "85:                                                                 G_PARAM_READWRITE));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b31223df74e0097e8a398e1d001900e18a88c6f",
      "candidate_info": {
        "commit_hash": "1b31223df74e0097e8a398e1d001900e18a88c6f",
        "repo": "GNOME/nautilus",
        "commit_url": "https://github.com/GNOME/nautilus/commit/1b31223df74e0097e8a398e1d001900e18a88c6f",
        "files": [
          "src/nautilus-files-view.c",
          "src/nautilus-places-view.c",
          "src/nautilus-trash-bar.c",
          "src/nautilus-view.c"
        ],
        "message": "view: add NautilusView::selection property\n\nCurrently we don't have any way to track selection\nchanges, although NautilusView exposes selection. This\nis an inconsistency in code, and should be avoided.\n\nFix that by adding a NautilusView::selection property\nand deprecating the NautilusFilesView::selection-changed\nsignal.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=767874",
        "before_after_code_files": [
          "src/nautilus-files-view.c||src/nautilus-files-view.c",
          "src/nautilus-places-view.c||src/nautilus-places-view.c",
          "src/nautilus-trash-bar.c||src/nautilus-trash-bar.c",
          "src/nautilus-view.c||src/nautilus-view.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/nautilus-files-view.c||src/nautilus-files-view.c": [
          "File: src/nautilus-files-view.c -> src/nautilus-files-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         FILE_CHANGED,",
          "136:         MOVE_COPY_ITEMS,",
          "137:         REMOVE_FILE,",
          "139:         TRASH,",
          "140:         DELETE,",
          "141:         LAST_SIGNAL",
          "",
          "[Removed Lines]",
          "138:         SELECTION_CHANGED,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:         PROP_IS_LOADING,",
          "151:         PROP_LOCATION,",
          "152:         PROP_SEARCH_QUERY,",
          "153:         NUM_PROPERTIES",
          "154: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:         PROP_SELECTION,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2794:                 nautilus_files_view_call_set_selection (view, selection);",
          "2795:                 nautilus_files_view_reveal_selection (view);",
          "2796:         } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2797:                 g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3104:         g_free (detail_status);",
          "3105: }",
          "3113: static void",
          "3114: nautilus_files_view_set_location (NautilusView *view,",
          "3115:                                   GFile        *location)",
          "",
          "[Removed Lines]",
          "3107: static void",
          "3108: nautilus_files_view_send_selection_change (NautilusFilesView *view)",
          "3109: {",
          "3110:         g_signal_emit (view, signals[SELECTION_CHANGED], 0);",
          "3111: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3236:                         }",
          "3237:                 }",
          "3238:                 nautilus_files_view_display_selection_info (view);",
          "3239:         }",
          "3241:         view->details->loading = FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3236:                 g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3712:                 }",
          "3714:                 g_signal_emit (view, signals[END_FILE_CHANGES], 0);",
          "",
          "[Removed Lines]",
          "3711:                         nautilus_files_view_send_selection_change (view);",
          "",
          "[Added Lines]",
          "3709:                         g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3747:         view->details->display_selection_idle_id = 0;",
          "3748:         nautilus_files_view_display_selection_info (view);",
          "3751:         g_object_unref (G_OBJECT (view));",
          "",
          "[Removed Lines]",
          "3749:         nautilus_files_view_send_selection_change (view);",
          "",
          "[Added Lines]",
          "3748:         g_object_notify (G_OBJECT (view), \"selection\");",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7644:                 g_value_set_object (value, view->details->search_query);",
          "7645:                 break;",
          "7647:         default:",
          "7648:                 g_assert_not_reached ();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7646:         case PROP_SELECTION:",
          "7647:                 g_value_set_pointer (value, nautilus_view_get_selection (NAUTILUS_VIEW (view)));",
          "7648:                 break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7687:                 nautilus_view_set_search_query (NAUTILUS_VIEW (directory_view), g_value_get_object (value));",
          "7688:                 break;",
          "7690:         default:",
          "7691:                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "7692:                 break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7693:         case PROP_SELECTION:",
          "7694:                 nautilus_view_set_selection (NAUTILUS_VIEW (directory_view), g_value_get_pointer (value));",
          "7695:                 break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8074:                               NULL, NULL,",
          "8075:                               g_cclosure_marshal_generic,",
          "8076:                               G_TYPE_NONE, 2, NAUTILUS_TYPE_FILE, NAUTILUS_TYPE_DIRECTORY);",
          "8086:         klass->get_backing_uri = real_get_backing_uri;",
          "8087:         klass->using_manual_layout = real_using_manual_layout;",
          "",
          "[Removed Lines]",
          "8077:         signals[SELECTION_CHANGED] =",
          "8078:                 g_signal_new (\"selection-changed\",",
          "8079:                               G_TYPE_FROM_CLASS (klass),",
          "8080:                               G_SIGNAL_RUN_LAST,",
          "8081:                               0,",
          "8082:                               NULL, NULL,",
          "8083:                               g_cclosure_marshal_VOID__VOID,",
          "8084:                               G_TYPE_NONE, 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8117:         g_object_class_override_property (oclass, PROP_IS_SEARCH, \"is-searching\");",
          "8118:         g_object_class_override_property (oclass, PROP_LOCATION, \"location\");",
          "8119:         g_object_class_override_property (oclass, PROP_SEARCH_QUERY, \"search-query\");",
          "8120: }",
          "8122: static void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8119:         g_object_class_override_property (oclass, PROP_SELECTION, \"selection\");",
          "",
          "---------------"
        ],
        "src/nautilus-places-view.c||src/nautilus-places-view.c": [
          "File: src/nautilus-places-view.c -> src/nautilus-places-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         PROP_VIEW_WIDGET,",
          "51:         PROP_IS_LOADING,",
          "52:         PROP_IS_SEARCHING,",
          "53:         LAST_PROP",
          "54: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:         PROP_SELECTION,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:                 g_value_set_object (value, nautilus_view_get_view_widget (view));",
          "165:                 break;",
          "167:         default:",
          "168:                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "169:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:         case PROP_SELECTION:",
          "169:                 g_value_set_pointer (value, NULL);",
          "170:                 break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:                 nautilus_view_set_search_query (view, g_value_get_object (value));",
          "187:                 break;",
          "189:         default:",
          "190:                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);",
          "191:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:         case PROP_SELECTION:",
          "195:                 break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:         g_object_class_override_property (object_class, PROP_IS_SEARCHING, \"is-searching\");",
          "337:         g_object_class_override_property (object_class, PROP_LOCATION, \"location\");",
          "338:         g_object_class_override_property (object_class, PROP_SEARCH_QUERY, \"search-query\");",
          "339:         g_object_class_override_property (object_class, PROP_VIEW_WIDGET, \"view-widget\");",
          "340: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:         g_object_class_override_property (object_class, PROP_SELECTION, \"selection\");",
          "",
          "---------------"
        ],
        "src/nautilus-trash-bar.c||src/nautilus-trash-bar.c": [
          "File: src/nautilus-trash-bar.c -> src/nautilus-trash-bar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: static void",
          "56: selection_changed_cb (NautilusFilesView *view,",
          "57:         NautilusTrashBar *bar)",
          "58: {",
          "59:         GList *selection;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:         GParamSpec        *pspec,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73: connect_view_and_update_button (NautilusTrashBar *bar)",
          "74: {",
          "75:  bar->priv->selection_handler_id =",
          "77:       G_CALLBACK (selection_changed_cb), bar);",
          "80: }",
          "82: static void",
          "",
          "[Removed Lines]",
          "76:   g_signal_connect (bar->priv->view, \"selection-changed\",",
          "79:  selection_changed_cb (bar->priv->view, bar);",
          "",
          "[Added Lines]",
          "77:   g_signal_connect (bar->priv->view, \"notify::selection\",",
          "80:  selection_changed_cb (bar->priv->view, NULL, bar);",
          "",
          "---------------"
        ],
        "src/nautilus-view.c||src/nautilus-view.c": [
          "File: src/nautilus-view.c -> src/nautilus-view.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:                                                                   \"The search query being performed on the view\",",
          "97:                                                                   NAUTILUS_TYPE_QUERY,",
          "98:                                                                   G_PARAM_READWRITE));",
          "99: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:         g_object_interface_install_property (iface,",
          "106:                                              g_param_spec_pointer (\"selection\",",
          "107:                                                                    \"Selection of the view\",",
          "108:                                                                    \"The selection of the view\",",
          "109:                                                                     G_PARAM_READWRITE));",
          "",
          "---------------"
        ]
      }
    }
  ]
}