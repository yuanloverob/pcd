{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b8552dc80a611083754493283e72d51f3015753a",
      "candidate_info": {
        "commit_hash": "b8552dc80a611083754493283e72d51f3015753a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b8552dc80a611083754493283e72d51f3015753a",
        "files": [
          "crypto/evp/evp_enc.c"
        ],
        "message": "Remove assert from is_partially_overlapping()\n\nThis function is used to validate application supplied parameters. An\nassert should be used to check for an error that is internal to OpenSSL.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit b153f0921bea38127de0b9440b0487db3004330d)",
        "before_after_code_files": [
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:     int overlapped = (len > 0) & (diff != 0) & ((diff < (PTRDIFF_T)len) |",
          "288:                                                 (diff > (0 - (PTRDIFF_T)len)));",
          "290:     return overlapped;",
          "291: }",
          "",
          "[Removed Lines]",
          "289:     assert(!overlapped);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "610b66267e41a32805ab54cbc580c5a6d5826cb4",
      "candidate_info": {
        "commit_hash": "610b66267e41a32805ab54cbc580c5a6d5826cb4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/610b66267e41a32805ab54cbc580c5a6d5826cb4",
        "files": [
          "crypto/asn1/tasn_dec.c"
        ],
        "message": "Don't set choice selector on parse failure.\n\nDon't set choice selector on parse failure: this can pass unexpected\nvalues to the choice callback. Instead free up partial structure\ndirectly.\n\nCVE-2016-7053\n\nThanks to Tyler Nighswander of ForAllSecure for reporting this issue.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/tasn_dec.c||crypto/asn1/tasn_dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/tasn_dec.c||crypto/asn1/tasn_dec.c": [
          "File: crypto/asn1/tasn_dec.c -> crypto/asn1/tasn_dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:             if (ret == -1)",
          "227:                 continue;",
          "235:             if (ret > 0)",
          "236:                 break;",
          "238:             errtt = tt;",
          "239:             ASN1err(ASN1_F_ASN1_ITEM_EMBED_D2I, ERR_R_NESTED_ASN1_ERROR);",
          "240:             goto err;",
          "",
          "[Removed Lines]",
          "233:             asn1_set_choice_selector(pval, i, it);",
          "",
          "[Added Lines]",
          "235:             asn1_template_free(pchptr, tt);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252:             goto err;",
          "253:         }",
          "255:         if (asn1_cb && !asn1_cb(ASN1_OP_D2I_POST, pval, it, NULL))",
          "256:             goto auxerr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253:         asn1_set_choice_selector(pval, i, it);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e597b2ba1165bb94e384f5cd37ea359f926a05cc",
      "candidate_info": {
        "commit_hash": "e597b2ba1165bb94e384f5cd37ea359f926a05cc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e597b2ba1165bb94e384f5cd37ea359f926a05cc",
        "files": [
          "apps/dsa.c",
          "apps/rsa.c"
        ],
        "message": "Support MSBLOB format if RC4 is disabled\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit b6c6898234a12b9c6cdaa8f16fb9156097649ad7)",
        "before_after_code_files": [
          "apps/dsa.c||apps/dsa.c",
          "apps/rsa.c||apps/rsa.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/dsa.c||apps/dsa.c": [
          "File: apps/dsa.c -> apps/dsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:             i = PEM_write_bio_DSAPrivateKey(out, dsa, enc,",
          "214:                                             NULL, 0, NULL, passout);",
          "215:         }",
          "217:     } else if (outformat == FORMAT_MSBLOB || outformat == FORMAT_PVK) {",
          "218:         EVP_PKEY *pk;",
          "219:         pk = EVP_PKEY_new();",
          "",
          "[Removed Lines]",
          "216: # if !defined(OPENSSL_NO_RSA) && !defined(OPENSSL_NO_RC4)",
          "",
          "[Added Lines]",
          "216: # ifndef OPENSSL_NO_RSA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:                 goto end;",
          "226:             }",
          "227:             assert(private);",
          "228:             i = i2b_PVK_bio(out, pk, pvk_encr, 0, passout);",
          "229:         }",
          "230:         else if (pubin || pubout)",
          "231:             i = i2b_PublicKey_bio(out, pk);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228: #  ifdef OPENSSL_NO_RC4",
          "229:             BIO_printf(bio_err, \"PVK format not supported\\n\");",
          "230:             EVP_PKEY_free(pk);",
          "231:             goto end;",
          "232: #  else",
          "234: #  endif",
          "",
          "---------------"
        ],
        "apps/rsa.c||apps/rsa.c": [
          "File: apps/rsa.c -> apps/rsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:             i = PEM_write_bio_RSAPrivateKey(out, rsa,",
          "264:                                             enc, NULL, 0, NULL, passout);",
          "265:         }",
          "267:     } else if (outformat == FORMAT_MSBLOB || outformat == FORMAT_PVK) {",
          "268:         EVP_PKEY *pk;",
          "269:         pk = EVP_PKEY_new();",
          "",
          "[Removed Lines]",
          "266: # if !defined(OPENSSL_NO_DSA) && !defined(OPENSSL_NO_RC4)",
          "",
          "[Added Lines]",
          "266: # ifndef OPENSSL_NO_DSA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275:                 goto end;",
          "276:             }",
          "277:             assert(private);",
          "278:             i = i2b_PVK_bio(out, pk, pvk_encr, 0, passout);",
          "279:         } else if (pubin || pubout) {",
          "280:             i = i2b_PublicKey_bio(out, pk);",
          "281:         } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "278: #  ifdef OPENSSL_NO_RC4",
          "279:             BIO_printf(bio_err, \"PVK format not supported\\n\");",
          "280:             EVP_PKEY_free(pk);",
          "281:             goto end;",
          "282: #  else",
          "284: #  endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b17d15f07ab02b8449db096eaafa56e93b242dee",
      "candidate_info": {
        "commit_hash": "b17d15f07ab02b8449db096eaafa56e93b242dee",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b17d15f07ab02b8449db096eaafa56e93b242dee",
        "files": [
          "crypto/x509/t_x509.c"
        ],
        "message": "Fix undefined behaviour when printing the X509 serial\n\nFound by afl\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nGH: #2230\n(cherry picked from commit 244d7b288f2b9ab7f6a2dbf068eccd6e20d9eef6)",
        "before_after_code_files": [
          "crypto/x509/t_x509.c||crypto/x509/t_x509.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/t_x509.c||crypto/x509/t_x509.c": [
          "File: crypto/x509/t_x509.c -> crypto/x509/t_x509.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:             l = -1;",
          "94:         }",
          "95:         if (l != -1) {",
          "96:             if (bs->type == V_ASN1_NEG_INTEGER) {",
          "98:                 neg = \"-\";",
          "99:             } else",
          "100:                 neg = \"\";",
          "102:                 goto err;",
          "103:         } else {",
          "104:             neg = (bs->type == V_ASN1_NEG_INTEGER) ? \" (Negative)\" : \"\";",
          "",
          "[Removed Lines]",
          "97:                 l = -l;",
          "101:             if (BIO_printf(bp, \" %s%lu (%s0x%lx)\\n\", neg, l, neg, l) <= 0)",
          "",
          "[Added Lines]",
          "96:             unsigned long ul;",
          "98:                 ul = 0 - (unsigned long)l;",
          "101:                 ul = l;",
          "103:             if (BIO_printf(bp, \" %s%lu (%s0x%lx)\\n\", neg, ul, neg, ul) <= 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
      "candidate_info": {
        "commit_hash": "05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
        "files": [
          "crypto/o_dir.c"
        ],
        "message": "Have the directory reader use the Unix API on VMS\n\nopendir(), readdir() and closedir() have been available on VMS since\nversion 7.0.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2707)\n(cherry picked from commit d8eaaf15356e1559f0f669b430b0d22b3514f8f0)",
        "before_after_code_files": [
          "crypto/o_dir.c||crypto/o_dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_dir.c||crypto/o_dir.c": [
          "File: crypto/o_dir.c -> crypto/o_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include \"internal/o_dir.h\"",
          "25: #define LPDIR_H",
          "27: # include \"LPdir_unix.c\"",
          "28: #elif defined OPENSSL_SYS_VMS",
          "29: # include \"LPdir_vms.c\"",
          "",
          "[Removed Lines]",
          "26: #if defined OPENSSL_SYS_UNIX || defined DJGPP",
          "",
          "[Added Lines]",
          "26: #if defined OPENSSL_SYS_UNIX || defined DJGPP \\",
          "27:     (defined __VMS_VER && __VMS_VER >= 70000000)",
          "",
          "---------------"
        ]
      }
    }
  ]
}