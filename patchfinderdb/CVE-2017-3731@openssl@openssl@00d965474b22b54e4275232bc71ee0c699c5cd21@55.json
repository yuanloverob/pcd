{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
      "candidate_info": {
        "commit_hash": "936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Unix Makefile: Some sed implementation truncate long lines.  Use perl instead.\n\nFixes #1781\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1813)\n(cherry picked from commit ebca7961a6bc2652ecb3cf6dda3f43943e2965d3)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "297: depend:",
          "298:  @: {- output_off() if $disabled{makedepend}; \"\" -}",
          "299:  @if egrep \"^# DO NOT DELETE THIS LINE\" Makefile >/dev/null && [ -z \"`find $(DEPS) -newer Makefile 2>/dev/null; exit 0`\" ]; then :; else \\",
          "301:      echo '# DO NOT DELETE THIS LINE -- make depend depends on it.'; \\",
          "302:      echo; \\",
          "303:      for f in $(DEPS); do \\",
          "",
          "[Removed Lines]",
          "300:    ( sed -e '/^# DO NOT DELETE THIS LINE.*/,$$d' < Makefile; \\",
          "",
          "[Added Lines]",
          "300:    ( $(PERL) -pe 'exit 0 if /^# DO NOT DELETE THIS LINE.*/' < Makefile; \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
      "candidate_info": {
        "commit_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c4fec137617c2002f6f8a76981a47ab79908f628",
        "files": [
          "test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in"
        ],
        "message": "Extend the test_ssl_new renegotiation tests to include client auth\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf": [
          "File: test/ssl-tests/17-renegotiate.conf -> test/ssl-tests/17-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-no-resume",
          "8: test-3 = 3-renegotiate-server-resume",
          "9: # ===========================================================",
          "11: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 4",
          "",
          "[Added Lines]",
          "3: num_tests = 6",
          "9: test-4 = 4-renegotiate-client-auth-require",
          "10: test-5 = 5-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112: ResumptionExpected = Yes",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: # ===========================================================",
          "119: [4-renegotiate-client-auth-require]",
          "120: ssl_conf = 4-renegotiate-client-auth-require-ssl",
          "122: [4-renegotiate-client-auth-require-ssl]",
          "123: server = 4-renegotiate-client-auth-require-server",
          "124: client = 4-renegotiate-client-auth-require-client",
          "126: [4-renegotiate-client-auth-require-server]",
          "127: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "128: CipherString = DEFAULT",
          "129: MaxProtocol = TLSv1.2",
          "130: Options = NoResumptionOnRenegotiation",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Require",
          "135: [4-renegotiate-client-auth-require-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = TLS",
          "146: ResumptionExpected = No",
          "149: # ===========================================================",
          "151: [5-renegotiate-client-auth-once]",
          "152: ssl_conf = 5-renegotiate-client-auth-once-ssl",
          "154: [5-renegotiate-client-auth-once-ssl]",
          "155: server = 5-renegotiate-client-auth-once-server",
          "156: client = 5-renegotiate-client-auth-once-client",
          "158: [5-renegotiate-client-auth-once-server]",
          "159: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "160: CipherString = DEFAULT",
          "161: MaxProtocol = TLSv1.2",
          "162: Options = NoResumptionOnRenegotiation",
          "163: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "164: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "165: VerifyMode = Once",
          "167: [5-renegotiate-client-auth-once-client]",
          "168: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "169: CipherString = DEFAULT",
          "170: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "171: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "172: VerifyMode = Peer",
          "174: [test-5]",
          "175: ExpectedResult = Success",
          "176: HandshakeMode = RenegotiateServer",
          "177: Method = TLS",
          "178: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             \"ExpectedResult\" => \"Success\"",
          "65:         }",
          "66:     },",
          "67: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     {",
          "69:         name => \"renegotiate-client-auth-require\",",
          "70:         server => {",
          "71:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "72:             \"MaxProtocol\" => \"TLSv1.2\",",
          "73:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "74:             \"VerifyMode\" => \"Require\",",
          "75:         },",
          "76:         client => {",
          "77:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "78:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "79:         },",
          "80:         test => {",
          "81:             \"Method\" => \"TLS\",",
          "82:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "83:             \"ResumptionExpected\" => \"No\",",
          "84:             \"ExpectedResult\" => \"Success\"",
          "85:         }",
          "86:     },",
          "87:     {",
          "88:         name => \"renegotiate-client-auth-once\",",
          "89:         server => {",
          "90:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "91:             \"MaxProtocol\" => \"TLSv1.2\",",
          "92:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "93:             \"VerifyMode\" => \"Once\",",
          "94:         },",
          "95:         client => {",
          "96:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "97:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "98:         },",
          "99:         test => {",
          "100:             \"Method\" => \"TLS\",",
          "101:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "102:             \"ResumptionExpected\" => \"No\",",
          "103:             \"ExpectedResult\" => \"Success\"",
          "104:         }",
          "105:     }",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf -> test/ssl-tests/18-dtls-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-resume",
          "8: # ===========================================================",
          "10: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 3",
          "",
          "[Added Lines]",
          "3: num_tests = 5",
          "8: test-3 = 3-renegotiate-client-auth-require",
          "9: test-4 = 4-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84: ResumptionExpected = No",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: # ===========================================================",
          "91: [3-renegotiate-client-auth-require]",
          "92: ssl_conf = 3-renegotiate-client-auth-require-ssl",
          "94: [3-renegotiate-client-auth-require-ssl]",
          "95: server = 3-renegotiate-client-auth-require-server",
          "96: client = 3-renegotiate-client-auth-require-client",
          "98: [3-renegotiate-client-auth-require-server]",
          "99: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "100: CipherString = DEFAULT",
          "101: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "102: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "103: VerifyMode = Require",
          "105: [3-renegotiate-client-auth-require-client]",
          "106: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "107: CipherString = DEFAULT",
          "108: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "109: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "110: VerifyMode = Peer",
          "112: [test-3]",
          "113: ExpectedResult = Success",
          "114: HandshakeMode = RenegotiateServer",
          "115: Method = DTLS",
          "116: ResumptionExpected = No",
          "119: # ===========================================================",
          "121: [4-renegotiate-client-auth-once]",
          "122: ssl_conf = 4-renegotiate-client-auth-once-ssl",
          "124: [4-renegotiate-client-auth-once-ssl]",
          "125: server = 4-renegotiate-client-auth-once-server",
          "126: client = 4-renegotiate-client-auth-once-client",
          "128: [4-renegotiate-client-auth-once-server]",
          "129: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "130: CipherString = DEFAULT",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Once",
          "135: [4-renegotiate-client-auth-once-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = DTLS",
          "146: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             \"ExpectedResult\" => \"Success\"",
          "61:         }",
          "62:     },",
          "63: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     {",
          "65:         name => \"renegotiate-client-auth-require\",",
          "66:         server => {",
          "67:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "68:             \"VerifyMode\" => \"Require\",",
          "69:         },",
          "70:         client => {",
          "71:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "72:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "73:         },",
          "74:         test => {",
          "75:             \"Method\" => \"DTLS\",",
          "76:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "77:             \"ResumptionExpected\" => \"No\",",
          "78:             \"ExpectedResult\" => \"Success\"",
          "79:         }",
          "80:     },",
          "81:     {",
          "82:         name => \"renegotiate-client-auth-once\",",
          "83:         server => {",
          "84:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "85:             \"VerifyMode\" => \"Once\",",
          "86:         },",
          "87:         client => {",
          "88:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "89:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "90:         },",
          "91:         test => {",
          "92:             \"Method\" => \"DTLS\",",
          "93:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "94:             \"ResumptionExpected\" => \"No\",",
          "95:             \"ExpectedResult\" => \"Success\"",
          "96:         }",
          "97:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be31d57686a551261cfd5deb95c9553402942a43",
      "candidate_info": {
        "commit_hash": "be31d57686a551261cfd5deb95c9553402942a43",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/be31d57686a551261cfd5deb95c9553402942a43",
        "files": [
          "crypto/mem_sec.c"
        ],
        "message": "Prevent allocations of size 0 in sh_init.\n\nwhich are not possible with the default OPENSSL_zalloc, but are possible if\nthe user has installed their own allocator using CRYPTO_set_mem_functions. If\nthe 0-allocations succeeds, the secure heap code will later access\n(at least) the first byte of that space, which is technically an OOB\naccess. This could lead to problems with some custom allocators that only\nreturn a valid pointer for subsequent free()-ing, and do not expect that\nthe pointer is actually dereferenced.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2605)\n(cherry picked from commit 7f07149d25f8d7e00e9350ff2f064a4d25c1a13d)",
        "before_after_code_files": [
          "crypto/mem_sec.c||crypto/mem_sec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem_sec.c||crypto/mem_sec.c": [
          "File: crypto/mem_sec.c -> crypto/mem_sec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:     sh.minsize = minsize;",
          "357:     sh.bittable_size = (sh.arena_size / sh.minsize) * 2;",
          "359:     sh.freelist_size = -1;",
          "360:     for (i = sh.bittable_size; i; i >>= 1)",
          "361:         sh.freelist_size++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:     if (sh.bittable_size >> 3 == 0)",
          "361:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16db345c47cbf97ea01e655d4eb00f9c4c52f361",
      "candidate_info": {
        "commit_hash": "16db345c47cbf97ea01e655d4eb00f9c4c52f361",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/16db345c47cbf97ea01e655d4eb00f9c4c52f361",
        "files": [
          "util/process_docs.pl"
        ],
        "message": "Small fixup of util/process_docs.pl\n\nApparently, pod2html doesn't add \".html\" at the end of links, making\nthem useless, so we need to fix that\n\nWith thanks for the report to Michel <michel.sales@free.fr>\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1897)",
        "before_after_code_files": [
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:                 if $options{debug};",
          "106:             unless ($options{\"dry-run\"}) {",
          "107:                 @output = `$generate`;",
          "109:                     if $options{type} eq \"html\";",
          "110:             }",
          "111:             print STDERR \"DEBUG: Done processing\\n\" if $options{debug};",
          "",
          "[Removed Lines]",
          "108:                 map { s|href=\"http://man\\.he\\.net/man|href=\"../man|g; } @output",
          "",
          "[Added Lines]",
          "108:                 map { s|href=\"http://man\\.he\\.net/(man\\d/[^\"]+)(?:\\.html)?\"|href=\"../$1.html|g; } @output",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d5936e478194798a287e165b81d27a1bcceaae8",
      "candidate_info": {
        "commit_hash": "1d5936e478194798a287e165b81d27a1bcceaae8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1d5936e478194798a287e165b81d27a1bcceaae8",
        "files": [
          "apps/ca.c",
          "crypto/txt_db/txt_db.c"
        ],
        "message": "Fix a few memleaks in TXT_DB.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2684)\n(cherry picked from commit 9ad52c562a93c9a57ae3024e54c575430753244c)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c",
          "crypto/txt_db/txt_db.c||crypto/txt_dtxt_db.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1838:     }",
          "1840:     irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row space\");",
          "1842:         irow[i] = row[i];",
          "1845:     irow[DB_NUMBER] = NULL;",
          "1847:     if (!TXT_DB_insert(db->db, irow)) {",
          "",
          "[Removed Lines]",
          "1841:     for (i = 0; i < DB_NUMBER; i++) {",
          "1843:         row[i] = NULL;",
          "1844:     }",
          "",
          "[Added Lines]",
          "1841:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1849:         BIO_printf(bio_err, \"TXT_DB error number %ld\\n\", db->db->error);",
          "1850:         goto end;",
          "1851:     }",
          "1852:     ok = 1;",
          "1853:  end:",
          "1857:     X509_NAME_free(CAname);",
          "1858:     X509_NAME_free(subject);",
          "",
          "[Removed Lines]",
          "1854:     for (i = 0; i < DB_NUMBER; i++)",
          "1855:         OPENSSL_free(row[i]);",
          "",
          "[Added Lines]",
          "1850:     irow = NULL;",
          "1853:     if (irow != NULL) {",
          "1854:         for (i = 0; i < DB_NUMBER; i++)",
          "1855:             OPENSSL_free(row[i]);",
          "1856:         OPENSSL_free(irow);",
          "1857:     }",
          "",
          "---------------"
        ],
        "crypto/txt_db/txt_db.c||crypto/txt_dtxt_db.c": [
          "File: crypto/txt_db/txt_db.c -> crypto/txt_dtxt_db.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:         }",
          "106:         if ((n != num) || (*f != '\\0')) {",
          "107:             ret->error = DB_ERROR_WRONG_NUM_FIELDS;",
          "108:             goto err;",
          "109:         }",
          "110:         pp[n] = p;",
          "112:             goto err;",
          "113:     }",
          "114:     BUF_MEM_free(buf);",
          "115:     return ret;",
          "",
          "[Removed Lines]",
          "111:         if (!sk_OPENSSL_PSTRING_push(ret->data, pp))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:                         OPENSSL_LH_HASHFUNC hash, OPENSSL_LH_COMPFUNC cmp)",
          "149: {",
          "150:     LHASH_OF(OPENSSL_STRING) *idx;",
          "152:     int i, n;",
          "154:     if (field >= db->num_fields) {",
          "",
          "[Removed Lines]",
          "151:     OPENSSL_STRING *r;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:         r = sk_OPENSSL_PSTRING_value(db->data, i);",
          "166:         if ((qual != NULL) && (qual(r) == 0))",
          "167:             continue;",
          "169:             db->error = DB_ERROR_INDEX_CLASH;",
          "171:             db->arg2 = i;",
          "172:             lh_OPENSSL_STRING_free(idx);",
          "173:             return (0);",
          "174:         }",
          "175:     }",
          "176:     lh_OPENSSL_STRING_free(db->index[field]);",
          "177:     db->index[field] = idx;",
          "",
          "[Removed Lines]",
          "168:         if ((r = lh_OPENSSL_STRING_insert(idx, r)) != NULL) {",
          "170:             db->arg1 = sk_OPENSSL_PSTRING_find(db->data, r);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "244:             }",
          "245:         }",
          "246:     }",
          "253:     for (i = 0; i < db->num_fields; i++) {",
          "254:         if (db->index[i] != NULL) {",
          "255:             if ((db->qual[i] != NULL) && (db->qual[i] (row) == 0))",
          "256:                 continue;",
          "257:             (void)lh_OPENSSL_STRING_insert(db->index[i], row);",
          "258:         }",
          "259:     }",
          "260:     return (1);",
          "261:  err:",
          "262:     return (0);",
          "263: }",
          "",
          "[Removed Lines]",
          "248:     if (!sk_OPENSSL_PSTRING_push(db->data, row)) {",
          "249:         db->error = DB_ERROR_MALLOC;",
          "250:         goto err;",
          "251:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}