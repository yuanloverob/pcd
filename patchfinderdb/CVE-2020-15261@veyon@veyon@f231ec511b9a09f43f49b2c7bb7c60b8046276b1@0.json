{
  "cve_id": "CVE-2020-15261",
  "cve_desc": "On Windows the Veyon Service before version 4.4.2 contains an unquoted service path vulnerability, allowing locally authenticated users with administrative privileges to run malicious executables with LocalSystem privileges. Since Veyon users (both students and teachers) usually don't have administrative privileges, this vulnerability is only dangerous in anyway unsafe setups. The problem has been fixed in version 4.4.2. As a workaround, the exploitation of the vulnerability can be prevented by revoking administrative privileges from all potentially untrustworthy users.",
  "repo": "veyon/veyon",
  "patch_hash": "f231ec511b9a09f43f49b2c7bb7c60b8046276b1",
  "patch_info": {
    "commit_hash": "f231ec511b9a09f43f49b2c7bb7c60b8046276b1",
    "repo": "veyon/veyon",
    "commit_url": "https://github.com/veyon/veyon/commit/f231ec511b9a09f43f49b2c7bb7c60b8046276b1",
    "files": [
      "plugins/platform/windows/WindowsServiceControl.cpp"
    ],
    "message": "WindowsServiceControl: quote service binary path\n\nFix unquoted service path vulnerability.\n\nCloses #657.",
    "before_after_code_files": [
      "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp"
    ]
  },
  "patch_diff": {
    "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp": [
      "File: plugins/platform/windows/WindowsServiceControl.cpp -> plugins/platform/windows/WindowsServiceControl.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "159: bool WindowsServiceControl::install( const QString& filePath, const QString& displayName  )",
      "160: {",
      "161:  m_serviceHandle = CreateService(",
      "162:     m_serviceManager,  // SCManager database",
      "163:     WindowsCoreFunctions::toConstWCharArray( m_name ), // name of service",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "161:  const auto binaryPath = QStringLiteral(\"\\\"%1\\\"\").arg( QString( filePath ).replace( QLatin1Char('\"'), QString() ) );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:     SERVICE_AUTO_START, // start type",
      "169:     SERVICE_ERROR_NORMAL, // error control type",
      "171:     nullptr,   // no load ordering group",
      "172:     nullptr,   // no tag identifier",
      "173:     L\"Tcpip\\0RpcSs\\0\\0\",  // dependencies",
      "",
      "[Removed Lines]",
      "170:     WindowsCoreFunctions::toConstWCharArray( filePath ),  // service's binary",
      "",
      "[Added Lines]",
      "172:     WindowsCoreFunctions::toConstWCharArray( binaryPath ),  // service's binary",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e9a5d21f4aa2738e1aa1cb0e41859b261c851e8",
      "candidate_info": {
        "commit_hash": "0e9a5d21f4aa2738e1aa1cb0e41859b261c851e8",
        "repo": "veyon/veyon",
        "commit_url": "https://github.com/veyon/veyon/commit/0e9a5d21f4aa2738e1aa1cb0e41859b261c851e8",
        "files": [
          "plugins/platform/windows/WindowsServiceControl.cpp"
        ],
        "message": "WindowsServiceControl: quote service binary path\n\nFix unquoted service path vulnerability.\n\nCloses #657.\n\n(cherry picked from commit f231ec511b9a09f43f49b2c7bb7c60b8046276b1)",
        "before_after_code_files": [
          "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp"
          ],
          "candidate": [
            "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp"
          ]
        }
      },
      "candidate_diff": {
        "plugins/platform/windows/WindowsServiceControl.cpp||plugins/platform/windows/WindowsServiceControl.cpp": [
          "File: plugins/platform/windows/WindowsServiceControl.cpp -> plugins/platform/windows/WindowsServiceControl.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "159: bool WindowsServiceControl::install( const QString& filePath, const QString& displayName  )",
          "160: {",
          "161:  m_serviceHandle = CreateService(",
          "162:     m_serviceManager,  // SCManager database",
          "163:     WindowsCoreFunctions::toConstWCharArray( m_name ), // name of service",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:  const auto binaryPath = QStringLiteral(\"\\\"%1\\\"\").arg( QString( filePath ).replace( QLatin1Char('\"'), QString() ) );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:     SERVICE_AUTO_START, // start type",
          "169:     SERVICE_ERROR_NORMAL, // error control type",
          "171:     nullptr,   // no load ordering group",
          "172:     nullptr,   // no tag identifier",
          "173:     L\"Tcpip\\0RpcSs\\0\\0\",  // dependencies",
          "",
          "[Removed Lines]",
          "170:     WindowsCoreFunctions::toConstWCharArray( filePath ),  // service's binary",
          "",
          "[Added Lines]",
          "172:     WindowsCoreFunctions::toConstWCharArray( binaryPath ),  // service's binary",
          "",
          "---------------"
        ]
      }
    }
  ]
}