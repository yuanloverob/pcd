{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "247c1b4a0bef2dcefffb96ce228136c63564be75",
      "candidate_info": {
        "commit_hash": "247c1b4a0bef2dcefffb96ce228136c63564be75",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/247c1b4a0bef2dcefffb96ce228136c63564be75",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/update.c",
          "test/update2.test"
        ],
        "message": "Make sure cursors are opened on all indexes for an UPDATE OR REPLACE regardless of whether or not the indexes are partial or contain columns that might need to be updated.\n\nFossilOrigin-Name: e148cdad35520e6684cfeba23b003f60b55f83a6bf621aff16be8aa5612cdcee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/update.c||src/update.c",
          "test/update2.test||test/update2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ba3b8412726548a0716c1a2d67260c3b7e31956474f4cd4ce607cf2cebc667dd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:   for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){",
          "358:     int reg;",
          "359:     if( chngKey || hasFK>1 || pIdx==pPk",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "357:   if( onError==OE_Replace ) bReplace = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "367:         if( indexColumnIsBeingUpdated(pIdx, i, aXRef, chngRowid) ){",
          "368:           reg = ++pParse->nMem;",
          "369:           pParse->nMem += pIdx->nColumn;",
          "373:             bReplace = 1;",
          "374:           }",
          "375:           break;",
          "",
          "[Removed Lines]",
          "370:           if( (onError==OE_Replace)",
          "371:            || (onError==OE_Default && pIdx->onError==OE_Replace)",
          "372:           ){",
          "",
          "[Added Lines]",
          "371:           if( onError==OE_Default && pIdx->onError==OE_Replace ){",
          "",
          "---------------"
        ],
        "test/update2.test||test/update2.test": [
          "File: test/update2.test -> test/update2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:   SELECT * FROM d1;",
          "217: } {3 2}",
          "219: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219: # 2019-01-22 Bug in UPDATE OR REPLACE discovered by the",
          "220: # Matt Denton's LPM fuzzer",
          "221: #",
          "222: do_execsql_test 7.100 {",
          "223:   DROP TABLE IF EXISTS t1;",
          "224:   CREATE TABLE t1(x,y);",
          "225:   CREATE UNIQUE INDEX t1x1 ON t1(x) WHERE x IS NOT NULL;",
          "226:   INSERT INTO t1(x) VALUES(NULL),(NULL);",
          "227:   CREATE INDEX t1x2 ON t1(y);",
          "228:   SELECT quote(x), quote(y), '|' FROM t1;",
          "229: } {NULL NULL | NULL NULL |}",
          "230: do_execsql_test 7.110 {",
          "231:   UPDATE OR REPLACE t1 SET x=1;",
          "232:   SELECT quote(x), quote(y), '|' FROM t1;",
          "233: } {1 NULL |}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2046a773658569ad88df4590d808b1ee16c2d14b",
      "candidate_info": {
        "commit_hash": "2046a773658569ad88df4590d808b1ee16c2d14b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2046a773658569ad88df4590d808b1ee16c2d14b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "src/window.c"
        ],
        "message": "Fix the patch on this branch so that it works with sub-queries, as well as views.\n\nFossilOrigin-Name: 7480db307c39b86bce269583e5917f5e1a3990500552fd98400ef3e7088c0b2a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09cd0c0c6e6c963e0039a733876e5149adb3cd10e9b92699fa1dcb0633e997a4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5196:       Select *pSel = pFrom->pSelect;",
          "5197:       if( pSel ){",
          "5198:         while( pSel->pPrior ) pSel = pSel->pPrior;",
          "5202:       }",
          "5203:     }",
          "5204:   }",
          "",
          "[Removed Lines]",
          "5199:         sqlite3SelectAddColumnTypeAndCollation(",
          "5200:           pParse, pTab, pSel, SQLITE_AFF_BLOB",
          "5201:         );",
          "",
          "[Added Lines]",
          "5199:         sqlite3SelectAddColumnTypeAndCollation(pParse, pTab, pSel, 0);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "994:       p->pSrc->a[0].pSelect = pSub;",
          "995:       sqlite3SrcListAssignCursors(pParse, p->pSrc);",
          "996:       pSub->selFlags |= SF_Expanded;",
          "998:       if( pTab2==0 ){",
          "999:         rc = SQLITE_NOMEM;",
          "1000:       }else{",
          "",
          "[Removed Lines]",
          "997:       pTab2 = sqlite3ResultSetOfSelect(pParse, pSub, SQLITE_AFF_BLOB);",
          "",
          "[Added Lines]",
          "997:       pTab2 = sqlite3ResultSetOfSelect(pParse, pSub, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b92d7d264ea0b811267a91b0ece3e7170bd57d6a",
      "candidate_info": {
        "commit_hash": "b92d7d264ea0b811267a91b0ece3e7170bd57d6a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b92d7d264ea0b811267a91b0ece3e7170bd57d6a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wal.c"
        ],
        "message": "Add a defense-in-depth NEVER() test to the WAL cleanup code.\n\nFossilOrigin-Name: 8d3af2010f4f652865f5c0d18e3bc793de05f8e75e75cc77786f61004b2ad28f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wal.c||src/wal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 39225cc77579896214dceb93b7f224b4b3bc95b3505a2e19b41b0b18b184fbc4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wal.c||src/wal.c": [
          "File: src/wal.c -> src/wal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1001:   assert( pWal->nWiData>walFramePage(pWal->hdr.mxFrame) );",
          "1002:   assert( pWal->apWiData[walFramePage(pWal->hdr.mxFrame)] );",
          "",
          "[Removed Lines]",
          "1003:   walHashGet(pWal, walFramePage(pWal->hdr.mxFrame), &sLoc);",
          "",
          "[Added Lines]",
          "1004:   rc = walHashGet(pWal, walFramePage(pWal->hdr.mxFrame), &sLoc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25e3073741c2bc23b846bd74dc50334295dd2c1a",
      "candidate_info": {
        "commit_hash": "25e3073741c2bc23b846bd74dc50334295dd2c1a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/25e3073741c2bc23b846bd74dc50334295dd2c1a",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5update.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid use-after-free and double-free errors that could occur if an fts5 table is modified in certain ways while there are active cursors.\n\nFossilOrigin-Name: 3291b2a6fe6f38ae91b933e5cd2bf7d97432374b4fb1fccd92b4bd759b02ee06",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2758:     for(i=0; i<pIter->nSeg; i++){",
          "2759:       fts5SegIterClear(&pIter->aSeg[i]);",
          "2760:     }",
          "2762:     fts5BufferFree(&pIter->poslist);",
          "2763:     sqlite3_free(pIter);",
          "2764:   }",
          "",
          "[Removed Lines]",
          "2761:     fts5StructureRelease(pIter->pStruct);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3404:   if( pNew==0 ) return;",
          "3405:   pNew->bRev = (0!=(flags & FTS5INDEX_QUERY_DESC));",
          "3406:   pNew->bSkipEmpty = (0!=(flags & FTS5INDEX_QUERY_SKIPEMPTY));",
          "3408:   pNew->pColset = pColset;",
          "3409:   fts5StructureRef(pStruct);",
          "3410:   if( (flags & FTS5INDEX_QUERY_NOOUTPUT)==0 ){",
          "",
          "[Removed Lines]",
          "3407:   pNew->pStruct = pStruct;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3512:   SELECT fts5_decode(id, block) FROM t1_data;",
          "3513: } {1 {database disk image is malformed}}",
          "3515: sqlite3_fts5_may_be_corrupt 0",
          "3516: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3515: #-------------------------------------------------------------------------",
          "3516: reset_db",
          "3517: do_test 31.0 {",
          "3518:   sqlite3 db {}",
          "3519:   db deserialize [decode_hexdb {",
          "3520: | size 8192 pagesize 4096 filename crash-7629f35f11d48e.db",
          "3521: | page 1 offset 0",
          "3522: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3523: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 02   .....@  ........",
          "3524: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 04   ................",
          "3525: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "3526: |     96: 00 00 00 00 0d 00 00 00 01 0f c7 00 0f c7 00 00   ................",
          "3527: |   4032: 00 00 00 00 00 00 00 37 01 06 17 15 15 01 53 74   .......7......St",
          "3528: |   4048: 61 62 6c 65 64 75 61 6c 64 75 61 6c 02 43 52 45   abledualdual.CRE",
          "3529: |   4064: 41 54 45 20 54 41 42 4c 45 20 64 75 61 6c 28 64   ATE TABLE dual(d",
          "3530: |   4080: 75 6d 6d 79 20 76 61 72 28 31 29 29 0d 00 00 00   ummy var(1))....",
          "3531: | page 2 offset 4096",
          "3532: |      0: 01 0f fb 00 0f fb 00 00 00 00 00 00 00 00 00 00   ................",
          "3533: |   4080: 00 00 00 00 00 00 00 00 00 00 00 03 01 02 0f 58   ...............X",
          "3534: | end crash-7629f35f11d48e.db",
          "3535: }]} {}",
          "3537: do_execsql_test 31.1 {",
          "3538:   CREATE VIRTUAL TABLE t1 USING fts5(a,b,c);",
          "3539:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<72)",
          "3540:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "3541:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)",
          "3542:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "3543: }",
          "3545: do_catchsql_test 31.2 {",
          "3546:   DELETE FROM t1 WHERE a MATCH X'6620e574f32a';",
          "3547: } {0 {}}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test": [
          "File: ext/fts5/test/fts5update.test -> ext/fts5/test/fts5update.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:   INSERT INTO x2(x2) VALUES('integrity-check');",
          "116: }",
          "118: }",
          "119: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118: #-------------------------------------------------------------------------",
          "119: #",
          "120: do_execsql_test 3.0 {",
          "121:   CREATE VIRTUAL TABLE x3 USING fts5(x, detail=%DETAIL%);",
          "122:   INSERT INTO x3 VALUES('one');",
          "123:   INSERT INTO x3 VALUES('two');",
          "124:   INSERT INTO x3 VALUES('one');",
          "125:   INSERT INTO x3 VALUES('two');",
          "126:   INSERT INTO x3 VALUES('one');",
          "127: }",
          "129: do_test 3.1 {",
          "130:   db eval { SELECT * FROM x3('one') } {",
          "131:     db eval {",
          "132:       INSERT INTO x3(x3) VALUES('optimize');",
          "133:     }",
          "134:   }",
          "135: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 83c467d7af63bd2e7800aff4fe9b09dbd75557460b75a9e07205dfae7e28312c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
      "candidate_info": {
        "commit_hash": "74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/74c490e0450093c00b37d900c8ccc0ad6b4db6ba",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Do not make SQLITE_READ authorizer calls for tables without names, as all such tables will be internal-use-only tables for subqueries and whatnot.\n\nFossilOrigin-Name: 193c87fc96f964984a144c1a4506ef9db033ab2b80e64dd4d09d820fef466407",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 17b3d2218c02a4005d4c96471c452105b54abb25901ae62990b01f0c955135fe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5864:       sqlite3AuthCheck(pParse, SQLITE_READ, pItem->zName, \"\", pItem->zDatabase);",
          "5865:     }",
          "",
          "[Removed Lines]",
          "5863:     if( pItem->colUsed==0 ){",
          "",
          "[Added Lines]",
          "5863:     if( pItem->colUsed==0 && pItem->zName!=0 ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}