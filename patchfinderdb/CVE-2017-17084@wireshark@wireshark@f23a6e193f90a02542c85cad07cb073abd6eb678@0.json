{
  "cve_id": "CVE-2017-17084",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.2 and 2.2.0 to 2.2.10, the IWARP_MPA dissector could crash. This was addressed in epan/dissectors/packet-iwarp-mpa.c by validating a ULPDU length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "f23a6e193f90a02542c85cad07cb073abd6eb678",
  "patch_info": {
    "commit_hash": "f23a6e193f90a02542c85cad07cb073abd6eb678",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/f23a6e193f90a02542c85cad07cb073abd6eb678",
    "files": [
      "epan/dissectors/packet-iwarp-mpa.c"
    ],
    "message": "packet-iwarp-mpa.c:  Stop FPDU dissection if the ULPDU_LENGTH field does NOT contain what is expected\n\nBug: 14236\nChange-Id: I15f1bc70978d1e5ae3b4bba1ff87b590726cfaa1\nReviewed-on: https://code.wireshark.org/review/24578\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c": [
      "File: epan/dissectors/packet-iwarp-mpa.c -> epan/dissectors/packet-iwarp-mpa.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "688:  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);",
      "692:  if (state->minfo[endpoint].valid) {",
      "693:   num_of_m = number_of_markers(state, tcpinfo, endpoint);",
      "694:  }",
      "",
      "[Removed Lines]",
      "690:  mpa_packetlist(pinfo, MPA_FPDU);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "707:   pad_length = fpdu_pad_length(ulpdu_length);",
      "708:   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);",
      "709:   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {",
      "714:   }",
      "716:   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,",
      "717:     -1, ENC_NA);",
      "718:   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);",
      "",
      "[Removed Lines]",
      "710:    proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,",
      "711:     MPA_ULPDU_LENGTH_LEN,",
      "712:     \"[ULPDU length [%u] field does not contain the expected length[%u]]\",",
      "713:     exp_ulpdu_length, ulpdu_length + pad_length);",
      "",
      "[Added Lines]",
      "708:    return 0;",
      "711:   mpa_packetlist(pinfo, MPA_FPDU);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53cf81d4f2739a9365c19c1c54dc2bacfed3654a",
      "candidate_info": {
        "commit_hash": "53cf81d4f2739a9365c19c1c54dc2bacfed3654a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/53cf81d4f2739a9365c19c1c54dc2bacfed3654a",
        "files": [
          "epan/dissectors/packet-iwarp-mpa.c"
        ],
        "message": "packet-iwarp-mpa.c:  Stop FPDU dissection if the ULPDU_LENGTH field does NOT contain what is expected\n\nBug: 14236\nChange-Id: I15f1bc70978d1e5ae3b4bba1ff87b590726cfaa1\nReviewed-on: https://code.wireshark.org/review/24578\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit f23a6e193f90a02542c85cad07cb073abd6eb678)\nReviewed-on: https://code.wireshark.org/review/24581",
        "before_after_code_files": [
          "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
          ],
          "candidate": [
            "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c": [
          "File: epan/dissectors/packet-iwarp-mpa.c -> epan/dissectors/packet-iwarp-mpa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);",
          "700:  if (state->minfo[endpoint].valid) {",
          "701:   num_of_m = number_of_markers(state, tcpinfo, endpoint);",
          "702:  }",
          "",
          "[Removed Lines]",
          "698:  mpa_packetlist(pinfo, MPA_FPDU);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "717:   pad_length = fpdu_pad_length(ulpdu_length);",
          "718:   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);",
          "719:   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {",
          "724:   }",
          "726:   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,",
          "727:     -1, ENC_NA);",
          "728:   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);",
          "",
          "[Removed Lines]",
          "720:    proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,",
          "721:     MPA_ULPDU_LENGTH_LEN,",
          "722:     \"[ULPDU length [%u] field does not contain the expected length[%u]]\",",
          "723:     exp_ulpdu_length, ulpdu_length + pad_length);",
          "",
          "[Added Lines]",
          "718:    return 0;",
          "721:   mpa_packetlist(pinfo, MPA_FPDU);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8502fe94ef9e431860921507e1a351c5e3f5c634",
      "candidate_info": {
        "commit_hash": "8502fe94ef9e431860921507e1a351c5e3f5c634",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8502fe94ef9e431860921507e1a351c5e3f5c634",
        "files": [
          "epan/dissectors/packet-iwarp-mpa.c"
        ],
        "message": "packet-iwarp-mpa.c:  Stop FPDU dissection if the ULPDU_LENGTH field does NOT contain what is expected\n\nBug: 14236\nChange-Id: I15f1bc70978d1e5ae3b4bba1ff87b590726cfaa1\nReviewed-on: https://code.wireshark.org/review/24578\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit f23a6e193f90a02542c85cad07cb073abd6eb678)\nReviewed-on: https://code.wireshark.org/review/24580",
        "before_after_code_files": [
          "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
          ],
          "candidate": [
            "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-iwarp-mpa.c||epan/dissectors/packet-iwarp-mpa.c": [
          "File: epan/dissectors/packet-iwarp-mpa.c -> epan/dissectors/packet-iwarp-mpa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "692:  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);",
          "696:  if (state->minfo[endpoint].valid) {",
          "697:   num_of_m = number_of_markers(state, tcpinfo, endpoint);",
          "698:  }",
          "",
          "[Removed Lines]",
          "694:  mpa_packetlist(pinfo, MPA_FPDU);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "711:   pad_length = fpdu_pad_length(ulpdu_length);",
          "712:   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);",
          "713:   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {",
          "718:   }",
          "720:   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,",
          "721:     -1, ENC_NA);",
          "722:   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);",
          "",
          "[Removed Lines]",
          "714:    proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,",
          "715:     MPA_ULPDU_LENGTH_LEN,",
          "716:     \"[ULPDU length [%u] field does not contain the expected length[%u]]\",",
          "717:     exp_ulpdu_length, ulpdu_length + pad_length);",
          "",
          "[Added Lines]",
          "712:    return 0;",
          "715:   mpa_packetlist(pinfo, MPA_FPDU);",
          "",
          "---------------"
        ]
      }
    }
  ]
}