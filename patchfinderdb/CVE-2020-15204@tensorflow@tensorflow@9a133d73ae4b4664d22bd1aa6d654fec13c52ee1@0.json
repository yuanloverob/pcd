{
  "cve_id": "CVE-2020-15204",
  "cve_desc": "In eager mode, TensorFlow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1 does not set the session state. Hence, calling `tf.raw_ops.GetSessionHandle` or `tf.raw_ops.GetSessionHandleV2` results in a null pointer dereference In linked snippet, in eager mode, `ctx->session_state()` returns `nullptr`. Since code immediately dereferences this, we get a segmentation fault. The issue is patched in commit 9a133d73ae4b4664d22bd1aa6d654fec13c52ee1, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "9a133d73ae4b4664d22bd1aa6d654fec13c52ee1",
  "patch_info": {
    "commit_hash": "9a133d73ae4b4664d22bd1aa6d654fec13c52ee1",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/9a133d73ae4b4664d22bd1aa6d654fec13c52ee1",
    "files": [
      "tensorflow/core/kernels/session_ops.cc",
      "tensorflow/python/ops/raw_ops_test.py"
    ],
    "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
    "before_after_code_files": [
      "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
      "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
      "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"tensorflow/core/framework/types.h\"",
      "28: #include \"tensorflow/core/lib/core/errors.h\"",
      "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
      "30: #include \"tensorflow/core/platform/logging.h\"",
      "31: #include \"tensorflow/core/platform/macros.h\"",
      "32: #include \"tensorflow/core/platform/mutex.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: #include \"tensorflow/core/platform/errors.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:   void Compute(OpKernelContext* ctx) override {",
      "44:     const Tensor& val = ctx->input(0);",
      "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
      "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
      "",
      "[Removed Lines]",
      "45:     int64 id = ctx->session_state()->GetNewId();",
      "",
      "[Added Lines]",
      "47:     auto session_state = ctx->session_state();",
      "48:     OP_REQUIRES(ctx, session_state != nullptr,",
      "49:                 errors::FailedPrecondition(",
      "50:                     \"GetSessionHandle called on null session state\"));",
      "51:     int64 id = session_state->GetNewId();",
      "",
      "---------------"
    ],
    "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
      "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: from tensorflow.python.framework import errors",
      "26: from tensorflow.python.framework import ops",
      "27: from tensorflow.python.framework import test_util",
      "28: from tensorflow.python.ops import gen_math_ops",
      "29: from tensorflow.python.ops import gen_string_ops",
      "30: from tensorflow.python.platform import test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: from tensorflow.python.ops import gen_data_flow_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:               pad_width=0,",
      "80:               preserve_short_sequences=False))",
      "83: if __name__ == \"__main__\":",
      "84:   ops.enable_eager_execution()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:   def testGetSessionHandle(self):",
      "84:     if context.executing_eagerly():",
      "85:       with self.assertRaisesRegex(",
      "86:           errors.FailedPreconditionError,",
      "87:           \"GetSessionHandle called on null session state\"):",
      "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ce90127d7037004a1c818a7055995f075fe97daa",
      "candidate_info": {
        "commit_hash": "ce90127d7037004a1c818a7055995f075fe97daa",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ce90127d7037004a1c818a7055995f075fe97daa",
        "files": [
          "tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
        "before_after_code_files": [
          "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
          "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/lib/core/errors.h\"",
          "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
          "30: #include \"tensorflow/core/platform/logging.h\"",
          "31: #include \"tensorflow/core/platform/macros.h\"",
          "32: #include \"tensorflow/core/platform/mutex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void Compute(OpKernelContext* ctx) override {",
          "44:     const Tensor& val = ctx->input(0);",
          "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
          "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
          "",
          "[Removed Lines]",
          "45:     int64 id = ctx->session_state()->GetNewId();",
          "",
          "[Added Lines]",
          "47:     auto session_state = ctx->session_state();",
          "48:     OP_REQUIRES(ctx, session_state != nullptr,",
          "49:                 errors::FailedPrecondition(",
          "50:                     \"GetSessionHandle called on null session state\"));",
          "51:     int64 id = session_state->GetNewId();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: from tensorflow.python.framework import errors",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import gen_math_ops",
          "29: from tensorflow.python.ops import gen_string_ops",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from tensorflow.python.ops import gen_data_flow_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "83: if __name__ == \"__main__\":",
          "84:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testGetSessionHandle(self):",
          "84:     if context.executing_eagerly():",
          "85:       with self.assertRaisesRegex(",
          "86:           errors.FailedPreconditionError,",
          "87:           \"GetSessionHandle called on null session state\"):",
          "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cdee3c8fe8dd01e2e92321841611ad7e4bcaa54",
      "candidate_info": {
        "commit_hash": "8cdee3c8fe8dd01e2e92321841611ad7e4bcaa54",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8cdee3c8fe8dd01e2e92321841611ad7e4bcaa54",
        "files": [
          "tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
        "before_after_code_files": [
          "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
          "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/lib/core/errors.h\"",
          "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
          "30: #include \"tensorflow/core/platform/logging.h\"",
          "31: #include \"tensorflow/core/platform/macros.h\"",
          "32: #include \"tensorflow/core/platform/mutex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void Compute(OpKernelContext* ctx) override {",
          "44:     const Tensor& val = ctx->input(0);",
          "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
          "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
          "",
          "[Removed Lines]",
          "45:     int64 id = ctx->session_state()->GetNewId();",
          "",
          "[Added Lines]",
          "47:     auto session_state = ctx->session_state();",
          "48:     OP_REQUIRES(ctx, session_state != nullptr,",
          "49:                 errors::FailedPrecondition(",
          "50:                     \"GetSessionHandle called on null session state\"));",
          "51:     int64 id = session_state->GetNewId();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: from tensorflow.python.framework import errors",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import gen_math_ops",
          "29: from tensorflow.python.ops import gen_string_ops",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from tensorflow.python.ops import gen_data_flow_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "83: if __name__ == \"__main__\":",
          "84:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testGetSessionHandle(self):",
          "84:     if context.executing_eagerly():",
          "85:       with self.assertRaisesRegex(",
          "86:           errors.FailedPreconditionError,",
          "87:           \"GetSessionHandle called on null session state\"):",
          "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b9795ae2277c2044f2773cc7a53714a773f3909",
      "candidate_info": {
        "commit_hash": "1b9795ae2277c2044f2773cc7a53714a773f3909",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1b9795ae2277c2044f2773cc7a53714a773f3909",
        "files": [
          "tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
        "before_after_code_files": [
          "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
          "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/lib/core/errors.h\"",
          "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
          "30: #include \"tensorflow/core/platform/logging.h\"",
          "31: #include \"tensorflow/core/platform/macros.h\"",
          "32: #include \"tensorflow/core/platform/mutex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void Compute(OpKernelContext* ctx) override {",
          "44:     const Tensor& val = ctx->input(0);",
          "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
          "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
          "",
          "[Removed Lines]",
          "45:     int64 id = ctx->session_state()->GetNewId();",
          "",
          "[Added Lines]",
          "47:     auto session_state = ctx->session_state();",
          "48:     OP_REQUIRES(ctx, session_state != nullptr,",
          "49:                 errors::FailedPrecondition(",
          "50:                     \"GetSessionHandle called on null session state\"));",
          "51:     int64 id = session_state->GetNewId();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: from tensorflow.python.framework import errors",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import gen_math_ops",
          "29: from tensorflow.python.ops import gen_string_ops",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from tensorflow.python.ops import gen_data_flow_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "83: if __name__ == \"__main__\":",
          "84:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testGetSessionHandle(self):",
          "84:     if context.executing_eagerly():",
          "85:       with self.assertRaisesRegex(",
          "86:           errors.FailedPreconditionError,",
          "87:           \"GetSessionHandle called on null session state\"):",
          "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0579571f7eefc61ed5c65fd32a855ecdfcbf286a",
      "candidate_info": {
        "commit_hash": "0579571f7eefc61ed5c65fd32a855ecdfcbf286a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0579571f7eefc61ed5c65fd32a855ecdfcbf286a",
        "files": [
          "tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
        "before_after_code_files": [
          "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
          "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/lib/core/errors.h\"",
          "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
          "30: #include \"tensorflow/core/platform/logging.h\"",
          "31: #include \"tensorflow/core/platform/macros.h\"",
          "32: #include \"tensorflow/core/platform/mutex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void Compute(OpKernelContext* ctx) override {",
          "44:     const Tensor& val = ctx->input(0);",
          "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
          "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
          "",
          "[Removed Lines]",
          "45:     int64 id = ctx->session_state()->GetNewId();",
          "",
          "[Added Lines]",
          "47:     auto session_state = ctx->session_state();",
          "48:     OP_REQUIRES(ctx, session_state != nullptr,",
          "49:                 errors::FailedPrecondition(",
          "50:                     \"GetSessionHandle called on null session state\"));",
          "51:     int64 id = session_state->GetNewId();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: from tensorflow.python.framework import errors",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import gen_math_ops",
          "29: from tensorflow.python.ops import gen_string_ops",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from tensorflow.python.ops import gen_data_flow_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "83: if __name__ == \"__main__\":",
          "84:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testGetSessionHandle(self):",
          "84:     if context.executing_eagerly():",
          "85:       with self.assertRaisesRegex(",
          "86:           errors.FailedPreconditionError,",
          "87:           \"GetSessionHandle called on null session state\"):",
          "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "68242bc392e297fe50093630d533a7303bce8869",
      "candidate_info": {
        "commit_hash": "68242bc392e297fe50093630d533a7303bce8869",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/68242bc392e297fe50093630d533a7303bce8869",
        "files": [
          "tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Prevent segfault in `GetSessionHandle{,V2}`.\n\nIn eager mode, session state is null.\n\nPiperOrigin-RevId: 332548597\nChange-Id: If094812c2e094044220b9ba28f7d7601be042f38",
        "before_after_code_files": [
          "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/session_ops.cc||tensorflow/core/kernels/session_ops.cc": [
          "File: tensorflow/core/kernels/session_ops.cc -> tensorflow/core/kernels/session_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/lib/core/errors.h\"",
          "29: #include \"tensorflow/core/lib/gtl/map_util.h\"",
          "30: #include \"tensorflow/core/platform/logging.h\"",
          "31: #include \"tensorflow/core/platform/macros.h\"",
          "32: #include \"tensorflow/core/platform/mutex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void Compute(OpKernelContext* ctx) override {",
          "44:     const Tensor& val = ctx->input(0);",
          "46:     TensorStore::TensorAndKey tk{val, id, requested_device()};",
          "47:     OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",
          "",
          "[Removed Lines]",
          "45:     int64 id = ctx->session_state()->GetNewId();",
          "",
          "[Added Lines]",
          "47:     auto session_state = ctx->session_state();",
          "48:     OP_REQUIRES(ctx, session_state != nullptr,",
          "49:                 errors::FailedPrecondition(",
          "50:                     \"GetSessionHandle called on null session state\"));",
          "51:     int64 id = session_state->GetNewId();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: from tensorflow.python.framework import errors",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import gen_math_ops",
          "29: from tensorflow.python.ops import gen_string_ops",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from tensorflow.python.ops import gen_data_flow_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "83: if __name__ == \"__main__\":",
          "84:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testGetSessionHandle(self):",
          "84:     if context.executing_eagerly():",
          "85:       with self.assertRaisesRegex(",
          "86:           errors.FailedPreconditionError,",
          "87:           \"GetSessionHandle called on null session state\"):",
          "88:         gen_data_flow_ops.GetSessionHandle(value=[1])",
          "",
          "---------------"
        ]
      }
    }
  ]
}