{
  "cve_id": "CVE-2018-7260",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in db_central_columns.php in phpMyAdmin before 4.7.8 allows remote authenticated users to inject arbitrary web script or HTML via a crafted URL.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "d2886a3e8745e8845633ae8a0054b5ee4d8babd5",
  "patch_info": {
    "commit_hash": "d2886a3e8745e8845633ae8a0054b5ee4d8babd5",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d2886a3e8745e8845633ae8a0054b5ee4d8babd5",
    "files": [
      "ChangeLog",
      "db_central_columns.php"
    ],
    "message": "Fix XSS vulnerability in central columns feature\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "before_after_code_files": [
      "db_central_columns.php||db_central_columns.php"
    ]
  },
  "patch_diff": {
    "db_central_columns.php||db_central_columns.php": [
      "File: db_central_columns.php -> db_central_columns.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "90:     parse_str($_POST['col_name'], $col_name);",
      "91:     $tmp_msg = PMA_deleteColumnsFromList($col_name['selected_fld'], false);",
      "92: }",
      "94:     $total_rows = $_REQUEST['total_rows'];",
      "95: } else {",
      "96:     $total_rows = PMA_getCentralColumnsCount($db);",
      "",
      "[Removed Lines]",
      "93: if (isset($_REQUEST['total_rows']) && $_REQUEST['total_rows']) {",
      "",
      "[Added Lines]",
      "93: if (!empty($_REQUEST['total_rows'])",
      "94:     && PMA_isValid($_REQUEST['total_rows'], 'integer')",
      "95: ) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "77ea7024bfa75659dea20dacb225f0d48414fd02",
      "candidate_info": {
        "commit_hash": "77ea7024bfa75659dea20dacb225f0d48414fd02",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/77ea7024bfa75659dea20dacb225f0d48414fd02",
        "files": [
          "db_central_columns.php",
          "js/db_central_columns.js",
          "libraries/classes/CentralColumns.php",
          "test/classes/CentralColumnsTest.php"
        ],
        "message": "Retrieve parameters from $_POST in central columns page\n\nSigned-off-by: Maur\u00edcio Meneghini Fauth <mauriciofauth@gmail.com>",
        "before_after_code_files": [
          "db_central_columns.php||db_central_columns.php",
          "js/db_central_columns.js||js/db_central_columns.js",
          "libraries/classes/CentralColumns.php||libraries/classes/CentralColumns.php",
          "test/classes/CentralColumnsTest.php||test/classes/CentralColumnsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "db_central_columns.php||db_central_columns.php"
          ],
          "candidate": [
            "db_central_columns.php||db_central_columns.php"
          ]
        }
      },
      "candidate_diff": {
        "db_central_columns.php||db_central_columns.php": [
          "File: db_central_columns.php -> db_central_columns.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: $pmatable = $cfgCentralColumns['table'];",
          "85: $max_rows = intval($GLOBALS['cfg']['MaxRows']);",
          "90:     $edit_central_column_page = $centralColumns->getHtmlForEditingPage(",
          "91:         $selected_fld,",
          "92:         $selected_db",
          "",
          "[Removed Lines]",
          "87: if (isset($_REQUEST['edit_central_columns_page'])) {",
          "88:     $selected_fld = $_REQUEST['selected_fld'];",
          "89:     $selected_db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "87: if (isset($_POST['edit_central_columns_page'])) {",
          "88:     $selected_fld = $_POST['selected_fld'];",
          "89:     $selected_db = $_POST['db'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:         false",
          "110:     );",
          "111: }",
          "114: ) {",
          "116: } else {",
          "117:     $total_rows = $centralColumns->getCount($db);",
          "118: }",
          "121: } else {",
          "122:     $pos = 0;",
          "123: }",
          "",
          "[Removed Lines]",
          "112: if (!empty($_REQUEST['total_rows'])",
          "113:     && Core::isValid($_REQUEST['total_rows'], 'integer')",
          "115:     $total_rows = $_REQUEST['total_rows'];",
          "119: if (Core::isValid($_REQUEST['pos'], 'integer')) {",
          "120:     $pos = intval($_REQUEST['pos']);",
          "",
          "[Added Lines]",
          "112: if (!empty($_POST['total_rows'])",
          "113:     && Core::isValid($_POST['total_rows'], 'integer')",
          "115:     $total_rows = $_POST['total_rows'];",
          "119: if (Core::isValid($_POST['pos'], 'integer')) {",
          "120:     $pos = intval($_POST['pos']);",
          "",
          "---------------"
        ],
        "js/db_central_columns.js||js/db_central_columns.js": [
          "File: js/db_central_columns.js -> js/db_central_columns.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:             return false;",
          "66:         }",
          "67:         var argsep = PMA_commonParams.get('arg_separator');",
          "69:         PMA_ajaxShowMessage();",
          "70:         AJAX.source = $(this);",
          "72:     });",
          "73:     $('#multi_edit_central_columns').submit(function (event) {",
          "74:         event.preventDefault();",
          "",
          "[Removed Lines]",
          "68:         var editColumnData = editColumnList + '' + argsep + 'edit_central_columns_page=true' + argsep + 'ajax_request=true' + argsep + 'ajax_page_request=true' + argsep + 'db=' + PMA_commonParams.get('db');",
          "71:         $.get('db_central_columns.php', editColumnData, AJAX.responseHandler);",
          "",
          "[Added Lines]",
          "68:         var editColumnData = editColumnList + '' + argsep + 'edit_central_columns_page=true' + argsep + 'ajax_request=true' + argsep + 'ajax_page_request=true' + argsep + 'db=' + encodeURIComponent(PMA_commonParams.get('db'));",
          "71:         $.post('db_central_columns.php', editColumnData, AJAX.responseHandler);",
          "",
          "---------------"
        ],
        "libraries/classes/CentralColumns.php||libraries/classes/CentralColumns.php": [
          "File: libraries/classes/CentralColumns.php -> libraries/classes/CentralColumns.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:         if (empty($cfgCentralColumns)) {",
          "300:             return $this->configErrorMessage();",
          "301:         }",
          "303:         $pmadb = $cfgCentralColumns['db'];",
          "304:         $central_list_table = $cfgCentralColumns['table'];",
          "305:         $this->dbi->selectDb($db);",
          "",
          "[Removed Lines]",
          "302:         $db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "302:         $db = $_POST['db'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:             }",
          "334:         } else {",
          "335:             if ($table === null) {",
          "337:             }",
          "338:             foreach ($field_select as $column) {",
          "339:                 $cols .= \"'\" . $this->dbi->escapeString($column) . \"',\";",
          "",
          "[Removed Lines]",
          "336:                 $table = $_REQUEST['table'];",
          "",
          "[Added Lines]",
          "336:                 $table = $_POST['table'];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406:         if (empty($cfgCentralColumns)) {",
          "407:             return $this->configErrorMessage();",
          "408:         }",
          "410:         $pmadb = $cfgCentralColumns['db'];",
          "411:         $central_list_table = $cfgCentralColumns['table'];",
          "412:         $this->dbi->selectDb($db);",
          "",
          "[Removed Lines]",
          "409:         $db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "409:         $db = $_POST['db'];",
          "",
          "---------------"
        ],
        "test/classes/CentralColumnsTest.php||test/classes/CentralColumnsTest.php": [
          "File: test/classes/CentralColumnsTest.php -> test/classes/CentralColumnsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     public function testSyncUniqueColumns()",
          "229:     {",
          "233:         $this->assertTrue(",
          "234:             $this->centralColumns->syncUniqueColumns(",
          "",
          "[Removed Lines]",
          "230:         $_REQUEST['db'] = 'PMA_db';",
          "231:         $_REQUEST['table'] = 'PMA_table';",
          "",
          "[Added Lines]",
          "230:         $_POST['db'] = 'PMA_db';",
          "231:         $_POST['table'] = 'PMA_table';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:     public function testDeleteColumnsFromList()",
          "246:     {",
          "251:         $GLOBALS['dbi']->expects($this->at(4))",
          "",
          "[Removed Lines]",
          "247:         $_REQUEST['db'] = 'PMA_db';",
          "248:         $_REQUEST['table'] = 'PMA_table';",
          "",
          "[Added Lines]",
          "247:         $_POST['db'] = 'PMA_db';",
          "248:         $_POST['table'] = 'PMA_table';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d752096d5038d4eaf823159570d8d88b1ec969be",
      "candidate_info": {
        "commit_hash": "d752096d5038d4eaf823159570d8d88b1ec969be",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d752096d5038d4eaf823159570d8d88b1ec969be",
        "files": [
          "db_central_columns.php",
          "js/db_central_columns.js",
          "libraries/classes/CentralColumns.php",
          "test/classes/CentralColumnsTest.php"
        ],
        "message": "Retrieve parameters from $_POST in central columns page\n\nSigned-off-by: Maur\u00edcio Meneghini Fauth <mauriciofauth@gmail.com>",
        "before_after_code_files": [
          "db_central_columns.php||db_central_columns.php",
          "js/db_central_columns.js||js/db_central_columns.js",
          "libraries/classes/CentralColumns.php||libraries/classes/CentralColumns.php",
          "test/classes/CentralColumnsTest.php||test/classes/CentralColumnsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "db_central_columns.php||db_central_columns.php"
          ],
          "candidate": [
            "db_central_columns.php||db_central_columns.php"
          ]
        }
      },
      "candidate_diff": {
        "db_central_columns.php||db_central_columns.php": [
          "File: db_central_columns.php -> db_central_columns.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: $pmatable = $cfgCentralColumns['table'];",
          "85: $max_rows = intval($GLOBALS['cfg']['MaxRows']);",
          "90:     $edit_central_column_page = $centralColumns->getHtmlForEditingPage(",
          "91:         $selected_fld,",
          "92:         $selected_db",
          "",
          "[Removed Lines]",
          "87: if (isset($_REQUEST['edit_central_columns_page'])) {",
          "88:     $selected_fld = $_REQUEST['selected_fld'];",
          "89:     $selected_db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "87: if (isset($_POST['edit_central_columns_page'])) {",
          "88:     $selected_fld = $_POST['selected_fld'];",
          "89:     $selected_db = $_POST['db'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:         false",
          "110:     );",
          "111: }",
          "114: ) {",
          "116: } else {",
          "117:     $total_rows = $centralColumns->getCount($db);",
          "118: }",
          "121: } else {",
          "122:     $pos = 0;",
          "123: }",
          "",
          "[Removed Lines]",
          "112: if (!empty($_REQUEST['total_rows'])",
          "113:     && Core::isValid($_REQUEST['total_rows'], 'integer')",
          "115:     $total_rows = $_REQUEST['total_rows'];",
          "119: if (Core::isValid($_REQUEST['pos'], 'integer')) {",
          "120:     $pos = intval($_REQUEST['pos']);",
          "",
          "[Added Lines]",
          "112: if (!empty($_POST['total_rows'])",
          "113:     && Core::isValid($_POST['total_rows'], 'integer')",
          "115:     $total_rows = $_POST['total_rows'];",
          "119: if (Core::isValid($_POST['pos'], 'integer')) {",
          "120:     $pos = intval($_POST['pos']);",
          "",
          "---------------"
        ],
        "js/db_central_columns.js||js/db_central_columns.js": [
          "File: js/db_central_columns.js -> js/db_central_columns.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:             return false;",
          "66:         }",
          "67:         var argsep = PMA_commonParams.get('arg_separator');",
          "69:         PMA_ajaxShowMessage();",
          "70:         AJAX.source = $(this);",
          "72:     });",
          "73:     $('#multi_edit_central_columns').submit(function (event) {",
          "74:         event.preventDefault();",
          "",
          "[Removed Lines]",
          "68:         var editColumnData = editColumnList + '' + argsep + 'edit_central_columns_page=true' + argsep + 'ajax_request=true' + argsep + 'ajax_page_request=true' + argsep + 'db=' + PMA_commonParams.get('db');",
          "71:         $.get('db_central_columns.php', editColumnData, AJAX.responseHandler);",
          "",
          "[Added Lines]",
          "68:         var editColumnData = editColumnList + '' + argsep + 'edit_central_columns_page=true' + argsep + 'ajax_request=true' + argsep + 'ajax_page_request=true' + argsep + 'db=' + encodeURIComponent(PMA_commonParams.get('db'));",
          "71:         $.post('db_central_columns.php', editColumnData, AJAX.responseHandler);",
          "",
          "---------------"
        ],
        "libraries/classes/CentralColumns.php||libraries/classes/CentralColumns.php": [
          "File: libraries/classes/CentralColumns.php -> libraries/classes/CentralColumns.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:         if (empty($cfgCentralColumns)) {",
          "300:             return $this->configErrorMessage();",
          "301:         }",
          "303:         $pmadb = $cfgCentralColumns['db'];",
          "304:         $central_list_table = $cfgCentralColumns['table'];",
          "305:         $this->dbi->selectDb($db);",
          "",
          "[Removed Lines]",
          "302:         $db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "302:         $db = $_POST['db'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:             }",
          "334:         } else {",
          "335:             if ($table === null) {",
          "337:             }",
          "338:             foreach ($field_select as $column) {",
          "339:                 $cols .= \"'\" . $this->dbi->escapeString($column) . \"',\";",
          "",
          "[Removed Lines]",
          "336:                 $table = $_REQUEST['table'];",
          "",
          "[Added Lines]",
          "336:                 $table = $_POST['table'];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406:         if (empty($cfgCentralColumns)) {",
          "407:             return $this->configErrorMessage();",
          "408:         }",
          "410:         $pmadb = $cfgCentralColumns['db'];",
          "411:         $central_list_table = $cfgCentralColumns['table'];",
          "412:         $this->dbi->selectDb($db);",
          "",
          "[Removed Lines]",
          "409:         $db = $_REQUEST['db'];",
          "",
          "[Added Lines]",
          "409:         $db = $_POST['db'];",
          "",
          "---------------"
        ],
        "test/classes/CentralColumnsTest.php||test/classes/CentralColumnsTest.php": [
          "File: test/classes/CentralColumnsTest.php -> test/classes/CentralColumnsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     public function testSyncUniqueColumns()",
          "229:     {",
          "233:         $this->assertTrue(",
          "234:             $this->centralColumns->syncUniqueColumns(",
          "",
          "[Removed Lines]",
          "230:         $_REQUEST['db'] = 'PMA_db';",
          "231:         $_REQUEST['table'] = 'PMA_table';",
          "",
          "[Added Lines]",
          "230:         $_POST['db'] = 'PMA_db';",
          "231:         $_POST['table'] = 'PMA_table';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:     public function testDeleteColumnsFromList()",
          "246:     {",
          "251:         $GLOBALS['dbi']->expects($this->at(4))",
          "",
          "[Removed Lines]",
          "247:         $_REQUEST['db'] = 'PMA_db';",
          "248:         $_REQUEST['table'] = 'PMA_table';",
          "",
          "[Added Lines]",
          "247:         $_POST['db'] = 'PMA_db';",
          "248:         $_POST['table'] = 'PMA_table';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2eaf6abb6e346da1f78a40424d406b0d2eb8dff",
      "candidate_info": {
        "commit_hash": "b2eaf6abb6e346da1f78a40424d406b0d2eb8dff",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/b2eaf6abb6e346da1f78a40424d406b0d2eb8dff",
        "files": [
          "db_central_columns.php"
        ],
        "message": "Fix wrong function call\n\nReplace PMA_isValid with Core::isValid\n\nSigned-off-by: Maur\u00edcio Meneghini Fauth <mauriciofauth@gmail.com>",
        "before_after_code_files": [
          "db_central_columns.php||db_central_columns.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "db_central_columns.php||db_central_columns.php"
          ],
          "candidate": [
            "db_central_columns.php||db_central_columns.php"
          ]
        }
      },
      "candidate_diff": {
        "db_central_columns.php||db_central_columns.php": [
          "File: db_central_columns.php -> db_central_columns.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     );",
          "111: }",
          "112: if (!empty($_REQUEST['total_rows'])",
          "114: ) {",
          "115:     $total_rows = $_REQUEST['total_rows'];",
          "116: } else {",
          "",
          "[Removed Lines]",
          "113:     && PMA_isValid($_REQUEST['total_rows'], 'integer')",
          "",
          "[Added Lines]",
          "113:     && Core::isValid($_REQUEST['total_rows'], 'integer')",
          "",
          "---------------"
        ]
      }
    }
  ]
}