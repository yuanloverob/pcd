{
  "cve_id": "CVE-2020-15569",
  "cve_desc": "PlayerGeneric.cpp in MilkyTracker through 1.02.00 has a use-after-free in the PlayerGeneric destructor.",
  "repo": "milkytracker/MilkyTracker",
  "patch_hash": "7afd55c42ad80d01a339197a2d8b5461d214edaf",
  "patch_info": {
    "commit_hash": "7afd55c42ad80d01a339197a2d8b5461d214edaf",
    "repo": "milkytracker/MilkyTracker",
    "commit_url": "https://github.com/milkytracker/MilkyTracker/commit/7afd55c42ad80d01a339197a2d8b5461d214edaf",
    "files": [
      "src/milkyplay/PlayerGeneric.cpp"
    ],
    "message": "Fix use-after-free in PlayerGeneric destructor",
    "before_after_code_files": [
      "src/milkyplay/PlayerGeneric.cpp||src/milkyplay/PlayerGeneric.cpp"
    ]
  },
  "patch_diff": {
    "src/milkyplay/PlayerGeneric.cpp||src/milkyplay/PlayerGeneric.cpp": [
      "File: src/milkyplay/PlayerGeneric.cpp -> src/milkyplay/PlayerGeneric.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "203: PlayerGeneric::~PlayerGeneric()",
      "204: {",
      "208:  if (player)",
      "209:  {",
      "211:    mixer->removeDevice(player);",
      "212:   delete player;",
      "213:  }",
      "215:  delete[] audioDriverName;",
      "",
      "[Removed Lines]",
      "205:  if (mixer)",
      "206:   delete mixer;",
      "210:   if (mixer->isActive() && !mixer->isDeviceRemoved(player))",
      "",
      "[Added Lines]",
      "208:   if (mixer && mixer->isActive() && !mixer->isDeviceRemoved(player))",
      "213:  if (mixer)",
      "214:   delete mixer;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "891fa6671ef8a05d10d7a8f82c93797542b950e7",
      "candidate_info": {
        "commit_hash": "891fa6671ef8a05d10d7a8f82c93797542b950e7",
        "repo": "milkytracker/MilkyTracker",
        "commit_url": "https://github.com/milkytracker/MilkyTracker/commit/891fa6671ef8a05d10d7a8f82c93797542b950e7",
        "files": [
          "src/milkyplay/ChannelMixer.cpp"
        ],
        "message": "set active channels too when changing number of allocated channels. This fixes segfaults due to mixing uninitialised channels, when using milkyplay as a library",
        "before_after_code_files": [
          "src/milkyplay/ChannelMixer.cpp||src/milkyplay/ChannelMixer.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/milkytracker/MilkyTracker/pull/208"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/milkyplay/ChannelMixer.cpp||src/milkyplay/ChannelMixer.cpp": [
          "File: src/milkyplay/ChannelMixer.cpp -> src/milkyplay/ChannelMixer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "657:   mixerNumAllocatedChannels = num;",
          "658:   resetChannelsWithoutMuting();",
          "659:  }",
          "660: }",
          "662: void ChannelMixer::setActiveChannels(mp_uint32 num)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "661:  mixerNumActiveChannels = num;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f86af2e18a984801fa3f7f8d4dfdb2497ef9c165",
      "candidate_info": {
        "commit_hash": "f86af2e18a984801fa3f7f8d4dfdb2497ef9c165",
        "repo": "milkytracker/MilkyTracker",
        "commit_url": "https://github.com/milkytracker/MilkyTracker/commit/f86af2e18a984801fa3f7f8d4dfdb2497ef9c165",
        "files": [
          "src/milkyplay/ChannelMixer.cpp"
        ],
        "message": "Don't close mixer when setting buffer size. This check might be important, but it prevents milkyplay from starting up because it thinks it has already initialised when playing a song for the first time. Maybe there's a more correct solution for this",
        "before_after_code_files": [
          "src/milkyplay/ChannelMixer.cpp||src/milkyplay/ChannelMixer.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/milkytracker/MilkyTracker/pull/208"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/milkyplay/ChannelMixer.cpp||src/milkyplay/ChannelMixer.cpp": [
          "File: src/milkyplay/ChannelMixer.cpp -> src/milkyplay/ChannelMixer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1196:  if (this->mixBufferSize == bufferSize)",
          "1197:   return MP_OK;",
          "1206:  this->mixBufferSize = bufferSize;",
          "",
          "[Removed Lines]",
          "1199:  if (initialized)",
          "1200:  {",
          "1201:   mp_sint32 err = closeDevice();",
          "1202:   if (err != MP_OK)",
          "1203:    return err;",
          "1204:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b150b263540a0f02ea7a1d0355a9736b9fd76604",
      "candidate_info": {
        "commit_hash": "b150b263540a0f02ea7a1d0355a9736b9fd76604",
        "repo": "milkytracker/MilkyTracker",
        "commit_url": "https://github.com/milkytracker/MilkyTracker/commit/b150b263540a0f02ea7a1d0355a9736b9fd76604",
        "files": [
          "src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp",
          "src/milkyplay/drivers/sdl/AudioDriver_SDL.h"
        ],
        "message": "SDL: force desired audio format",
        "before_after_code_files": [
          "src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp||src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp",
          "src/milkyplay/drivers/sdl/AudioDriver_SDL.h||src/milkyplay/drivers/sdl/AudioDriver_SDL.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/milkytracker/MilkyTracker/pull/208"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp||src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp": [
          "File: src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp -> src/milkyplay/drivers/sdl/AudioDriver_SDL.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:  memcpy(&saved, &wanted, sizeof(wanted));",
          "95:  {",
          "96:   memcpy(&wanted, &saved, sizeof(wanted));",
          "97:   fprintf(stderr, \"SDL: Failed to open audio device! (buffer = %d bytes)..\\n\", saved.samples*4);",
          "",
          "[Removed Lines]",
          "94:  if(SDL_OpenAudio(&wanted, &obtained) < 0)",
          "",
          "[Added Lines]",
          "94:  device = SDL_OpenAudioDevice(NULL, false, &wanted, &obtained, SDL_AUDIO_ALLOW_FREQUENCY_CHANGE);",
          "96:  if (device == 0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:  printf(\"SDL: Using audio driver: %s\\n\", SDL_GetCurrentAudioDriver());",
          "118:  if (wanted.freq != obtained.freq)",
          "119:  {",
          "",
          "[Removed Lines]",
          "104:  if(wanted.format != obtained.format)",
          "105:  {",
          "106:   fprintf(stderr, \"SDL: Audio driver doesn't support 16-bit signed samples!\\n\");",
          "107:   return MP_DEVICE_ERROR;",
          "108:  }",
          "110:  if (wanted.channels != obtained.channels)",
          "111:  {",
          "112:   fprintf(stderr, \"SDL: Failed to obtain requested audio format.  Suggested format:\\n\");",
          "113:   fprintf(stderr, \"SDL: Frequency: %d\\nChannels: %d\\n\", obtained.freq, obtained.channels);",
          "114:   return MP_DEVICE_ERROR;",
          "115:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131: mp_sint32 AudioDriver_SDL::stop()",
          "132: {",
          "134:  deviceHasStarted = false;",
          "135:  return MP_OK;",
          "136: }",
          "138: mp_sint32 AudioDriver_SDL::closeDevice()",
          "139: {",
          "141:  deviceHasStarted = false;",
          "142:  return MP_OK;",
          "143: }",
          "145: mp_sint32 AudioDriver_SDL::start()",
          "146: {",
          "148:  deviceHasStarted = true;",
          "149:  return MP_OK;",
          "150: }",
          "152: mp_sint32 AudioDriver_SDL::pause()",
          "153: {",
          "155:  return MP_OK;",
          "156: }",
          "158: mp_sint32 AudioDriver_SDL::resume()",
          "159: {",
          "161:  return MP_OK;",
          "162: }",
          "",
          "[Removed Lines]",
          "133:  SDL_PauseAudio(1);",
          "140:  SDL_CloseAudio();",
          "147:  SDL_PauseAudio(0);",
          "154:  SDL_PauseAudio(1);",
          "160:  SDL_PauseAudio(0);",
          "",
          "[Added Lines]",
          "122:  SDL_PauseAudioDevice(device, 1);",
          "129:  SDL_CloseAudioDevice(device);",
          "136:  SDL_PauseAudioDevice(device, 0);",
          "143:  SDL_PauseAudioDevice(device, 1);",
          "149:  SDL_PauseAudioDevice(device, 0);",
          "",
          "---------------"
        ],
        "src/milkyplay/drivers/sdl/AudioDriver_SDL.h||src/milkyplay/drivers/sdl/AudioDriver_SDL.h": [
          "File: src/milkyplay/drivers/sdl/AudioDriver_SDL.h -> src/milkyplay/drivers/sdl/AudioDriver_SDL.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: {",
          "47: private:",
          "48:  mp_uint32 periodSize;",
          "50:  static void SDLCALL fill_audio(void *udata, Uint8 *stream, int len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:  int   device;      // SDL audio device ID",
          "",
          "---------------"
        ]
      }
    }
  ]
}