{
  "cve_id": "CVE-2017-11719",
  "cve_desc": "The dnxhd_decode_header function in libavcodec/dnxhddec.c in FFmpeg 3.0 through 3.3.2 allows remote attackers to cause a denial of service (out-of-array access) or possibly have unspecified other impact via a crafted DNxHD file.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "f31fc4755f69ab26bf6e8be47875b7dcede8e29e",
  "patch_info": {
    "commit_hash": "f31fc4755f69ab26bf6e8be47875b7dcede8e29e",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f31fc4755f69ab26bf6e8be47875b7dcede8e29e",
    "files": [
      "libavcodec/dnxhddec.c"
    ],
    "message": "avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 296debd213bd6dce7647cedd34eb64e5b94cdc92)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
      "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "278:     if (header_prefix == DNXHD_HEADER_HR2) {",
      "279:         ctx->data_offset = 0x170 + (ctx->mb_height << 2);",
      "280:     } else {",
      "283:             av_log(ctx->avctx, AV_LOG_ERROR,",
      "284:                    \"mb height too big: %d\\n\", ctx->mb_height);",
      "285:             return AVERROR_INVALIDDATA;",
      "286:         }",
      "287:         ctx->data_offset = 0x280;",
      "288:     }",
      "290:     if (buf_size < ctx->data_offset) {",
      "291:         av_log(ctx->avctx, AV_LOG_ERROR,",
      "",
      "[Removed Lines]",
      "281:         if (ctx->mb_height > 68 ||",
      "282:             (ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
      "",
      "[Added Lines]",
      "281:         if (ctx->mb_height > 68) {",
      "288:     if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
      "289:         av_log(ctx->avctx, AV_LOG_ERROR,",
      "290:                 \"mb height too big: %d\\n\", ctx->mb_height);",
      "291:         return AVERROR_INVALIDDATA;",
      "292:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a10b962e3053b9fc851fcce23a60ac653abdc8c",
      "candidate_info": {
        "commit_hash": "6a10b962e3053b9fc851fcce23a60ac653abdc8c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6a10b962e3053b9fc851fcce23a60ac653abdc8c",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 296debd213bd6dce7647cedd34eb64e5b94cdc92)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:     if (ctx->mb_height > 68 && ff_dnxhd_check_header_prefix_hr(header_prefix)) {",
          "295:         ctx->data_offset = 0x170 + (ctx->mb_height << 2);",
          "296:     } else {",
          "299:             av_log(ctx->avctx, AV_LOG_ERROR,",
          "300:                    \"mb height too big: %d\\n\", ctx->mb_height);",
          "301:             return AVERROR_INVALIDDATA;",
          "302:         }",
          "303:         ctx->data_offset = 0x280;",
          "304:     }",
          "306:     if (buf_size < ctx->data_offset) {",
          "307:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "",
          "[Removed Lines]",
          "297:         if (ctx->mb_height > 68 ||",
          "298:             (ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "",
          "[Added Lines]",
          "297:         if (ctx->mb_height > 68) {",
          "304:     if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "305:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "306:                 \"mb height too big: %d\\n\", ctx->mb_height);",
          "307:         return AVERROR_INVALIDDATA;",
          "308:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47c0626ec721749b28df1c61c481e318e50058e4",
      "candidate_info": {
        "commit_hash": "47c0626ec721749b28df1c61c481e318e50058e4",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/47c0626ec721749b28df1c61c481e318e50058e4",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 296debd213bd6dce7647cedd34eb64e5b94cdc92)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     if (ctx->mb_height > 68 && ff_dnxhd_check_header_prefix_hr(header_prefix)) {",
          "299:         ctx->data_offset = 0x170 + (ctx->mb_height << 2);",
          "300:     } else {",
          "303:             av_log(ctx->avctx, AV_LOG_ERROR,",
          "304:                    \"mb height too big: %d\\n\", ctx->mb_height);",
          "305:             return AVERROR_INVALIDDATA;",
          "306:         }",
          "307:         ctx->data_offset = 0x280;",
          "308:     }",
          "310:     if (buf_size < ctx->data_offset) {",
          "311:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "",
          "[Removed Lines]",
          "301:         if (ctx->mb_height > 68 ||",
          "302:             (ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "",
          "[Added Lines]",
          "301:         if (ctx->mb_height > 68) {",
          "308:     if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "309:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "310:                 \"mb height too big: %d\\n\", ctx->mb_height);",
          "311:         return AVERROR_INVALIDDATA;",
          "312:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "956f2db21ffc1ca7f8dae7a3f44b09a145d9b9fa",
      "candidate_info": {
        "commit_hash": "956f2db21ffc1ca7f8dae7a3f44b09a145d9b9fa",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/956f2db21ffc1ca7f8dae7a3f44b09a145d9b9fa",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 296debd213bd6dce7647cedd34eb64e5b94cdc92)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:     if (header_prefix == DNXHD_HEADER_HR2) {",
          "274:         ctx->data_offset = 0x170 + (ctx->mb_height << 2);",
          "275:     } else {",
          "278:             av_log(ctx->avctx, AV_LOG_ERROR,",
          "279:                    \"mb height too big: %d\\n\", ctx->mb_height);",
          "280:             return AVERROR_INVALIDDATA;",
          "281:         }",
          "282:         ctx->data_offset = 0x280;",
          "283:     }",
          "285:     if (buf_size < ctx->data_offset) {",
          "286:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "",
          "[Removed Lines]",
          "276:         if (ctx->mb_height > 68 ||",
          "277:             (ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "",
          "[Added Lines]",
          "276:         if (ctx->mb_height > 68) {",
          "283:     if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "284:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "285:                 \"mb height too big: %d\\n\", ctx->mb_height);",
          "286:         return AVERROR_INVALIDDATA;",
          "287:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "296debd213bd6dce7647cedd34eb64e5b94cdc92",
      "candidate_info": {
        "commit_hash": "296debd213bd6dce7647cedd34eb64e5b94cdc92",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/296debd213bd6dce7647cedd34eb64e5b94cdc92",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     if (ctx->mb_height > 68 && ff_dnxhd_check_header_prefix_hr(header_prefix)) {",
          "299:         ctx->data_offset = 0x170 + (ctx->mb_height << 2);",
          "300:     } else {",
          "303:             av_log(ctx->avctx, AV_LOG_ERROR,",
          "304:                    \"mb height too big: %d\\n\", ctx->mb_height);",
          "305:             return AVERROR_INVALIDDATA;",
          "306:         }",
          "307:         ctx->data_offset = 0x280;",
          "308:     }",
          "310:     if (buf_size < ctx->data_offset) {",
          "311:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "",
          "[Removed Lines]",
          "301:         if (ctx->mb_height > 68 ||",
          "302:             (ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "",
          "[Added Lines]",
          "301:         if (ctx->mb_height > 68) {",
          "308:     if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {",
          "309:         av_log(ctx->avctx, AV_LOG_ERROR,",
          "310:                 \"mb height too big: %d\\n\", ctx->mb_height);",
          "311:         return AVERROR_INVALIDDATA;",
          "312:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}