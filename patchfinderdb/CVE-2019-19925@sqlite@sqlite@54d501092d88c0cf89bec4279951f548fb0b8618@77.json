{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2081dd859867674dccd51b95d77d42fdada14cf",
      "candidate_info": {
        "commit_hash": "e2081dd859867674dccd51b95d77d42fdada14cf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2081dd859867674dccd51b95d77d42fdada14cf",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/dbfuzz001.test"
        ],
        "message": "Partially revert the test file changes in [4371a0c46e]. It is no longer required following [93ae382e97c23c90].\n\nFossilOrigin-Name: 593a7e6e20a2f91fe3497edd7effad50ac876f7f03c9222e332dfeb43d26882e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6fc0deffa4eed902fd13eefe6d2765f338f3dadc5b29f7cae5064e135417746b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: # cause a rebalance operation, which would leave the btree in a weird",
          "190: # state that would lead to segfaults and or assertion faults.",
          "191: #",
          "195:   DELETE FROM t3 WHERE x IS NOT NULL AND +rowid=6;",
          "198: # This is a dbfuzz2-generate test case that can cause a page with",
          "199: # pPage->nCell==0 to enter the balancer.",
          "",
          "[Removed Lines]",
          "192: set res {0 {}}",
          "193: ifcapable oversize_cell_check { set res {1 {database disk image is malformed}} }",
          "194: do_catchsql_test dbfuzz001-110 {",
          "196: } $res",
          "",
          "[Added Lines]",
          "192: do_execsql_test dbfuzz001-110 {",
          "194: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a02f237e376effb4547ea5d53033a3f555e6925",
      "candidate_info": {
        "commit_hash": "6a02f237e376effb4547ea5d53033a3f555e6925",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a02f237e376effb4547ea5d53033a3f555e6925",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/walker.c"
        ],
        "message": "Remove an unreachable branch.\n\nFossilOrigin-Name: 4c976f171342ba2d39779279c28f3bc088572c440922e3e4421a3bf541263360",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/walker.c||src/walker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a70958cd7d5cf750c293537856918e5789013b70f6a827f724d83559b38629c8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/walker.c||src/walker.c": [
          "File: src/walker.c -> src/walker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:   {",
          "117:     Parse *pParse = pWalker->pParse;",
          "118:     if( pParse && IN_RENAME_OBJECT ){",
          "120:     }",
          "121:   }",
          "122: #endif",
          "",
          "[Removed Lines]",
          "119:       if( walkWindowList(pWalker, p->pWinDefn) ) return WRC_Abort;",
          "",
          "[Added Lines]",
          "119:       int rc = walkWindowList(pWalker, p->pWinDefn);",
          "120:       assert( rc==WRC_Continue );",
          "121:       return rc;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b13365bbadb5e16da3579fcb8941799760817c1",
      "candidate_info": {
        "commit_hash": "9b13365bbadb5e16da3579fcb8941799760817c1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9b13365bbadb5e16da3579fcb8941799760817c1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Ensure that a key comparison does not read a collating sequence past the end of the KeyInfo, even if the key field of an index is corrupted by having a string in the last column instead of the ROWID.\n\nFossilOrigin-Name: 058a8006dceda78a894ea9446f057aa60b6d38e96506d4d91bda0ee2f9314ba3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3ecaaee69f49e43d38047b7d53b82689eba7f7d33541fcac3c32b6dc8a568458",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3906:     if( rc!=0 ){",
          "3908:       if( pKeyInfo->aSortOrder[i] ){",
          "",
          "[Removed Lines]",
          "3905:     rc = sqlite3MemCompare(&mem1, &pPKey2->aMem[i], pKeyInfo->aColl[i]);",
          "",
          "[Added Lines]",
          "3905:     rc = sqlite3MemCompare(&mem1, &pPKey2->aMem[i],",
          "3906:                            pKeyInfo->nAllField>i ? pKeyInfo->aColl[i] : 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4333:         mem1.n = (serial_type - 12) / 2;",
          "4334:         testcase( (d1+mem1.n)==(unsigned)nKey1 );",
          "4335:         testcase( (d1+mem1.n+1)==(unsigned)nKey1 );",
          "4337:           pPKey2->errCode = (u8)SQLITE_CORRUPT_BKPT;",
          "4340:           mem1.enc = pKeyInfo->enc;",
          "4341:           mem1.db = pKeyInfo->db;",
          "4342:           mem1.flags = MEM_Str;",
          "",
          "[Removed Lines]",
          "4336:         if( (d1+mem1.n) > (unsigned)nKey1 ){",
          "4339:         }else if( (pKeyInfo = pPKey2->pKeyInfo)->aColl[i] ){",
          "",
          "[Added Lines]",
          "4337:         if( (d1+mem1.n) > (unsigned)nKey1",
          "4338:          || (pKeyInfo = pPKey2->pKeyInfo)->nAllField<=i",
          "4339:         ){",
          "4342:         }else if( pKeyInfo->aColl[i] ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e24439c2ff727332e9141f34aceb323c1126a3a",
      "candidate_info": {
        "commit_hash": "9e24439c2ff727332e9141f34aceb323c1126a3a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9e24439c2ff727332e9141f34aceb323c1126a3a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/window1.test"
        ],
        "message": "Fix a crash that could occur if the RHS of an IN expression is a correlated sub-query that refers to the outer query from within a window frame definition only.\n\nFossilOrigin-Name: 0524aaaf45681437c2dca3d31ff26a65bee7bd2074730277c29136635ee0be0f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 62ac9cb07f5f2d14e716cd0f99f3f2fd34f6c9b4303619be8dfbca2eecf5b727",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1520:   }else if( p->x.pList ){",
          "1521:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->x.pList);",
          "1522:   }",
          "1523:   return mask;",
          "1524: }",
          "1525: Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1523: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "1524:   if( p->op==TK_FUNCTION && p->y.pWin ){",
          "1525:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->y.pWin->pPartition);",
          "1526:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->y.pWin->pOrderBy);",
          "1527:   }",
          "1528: #endif",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "720:   ORDER BY 10+sum(a) OVER (ORDER BY a) DESC;",
          "721: } {16 13 11}",
          "724: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "723: #-------------------------------------------------------------------------",
          "724: #",
          "725: reset_db",
          "726: do_execsql_test 18.0 {",
          "727:   CREATE TABLE t1 ( t1_id INTEGER PRIMARY KEY );",
          "728:   CREATE TABLE t2 ( t2_id INTEGER PRIMARY KEY );",
          "729:   CREATE TABLE t3 ( t3_id INTEGER PRIMARY KEY );",
          "731:   INSERT INTO t1 VALUES(1),  (3), (5);",
          "732:   INSERT INTO t2 VALUES      (3), (5);",
          "733:   INSERT INTO t3 VALUES(10), (11), (12);",
          "734: }",
          "736: do_execsql_test 18.1 {",
          "737:   SELECT t1.* FROM t1, t2 WHERE",
          "738:     t1_id=t2_id AND t1_id IN (",
          "739:         SELECT t1_id + row_number() OVER ( ORDER BY t1_id ) FROM t3",
          "740:     )",
          "741: }",
          "743: do_execsql_test 18.2 {",
          "744:   SELECT t1.* FROM t1, t2 WHERE",
          "745:     t1_id=t2_id AND t1_id IN (",
          "746:         SELECT         row_number() OVER ( ORDER BY t1_id ) FROM t3",
          "747:     )",
          "748: } {3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05d49d1442d3d99237050c5f1502b56a79f72d2f",
      "candidate_info": {
        "commit_hash": "05d49d1442d3d99237050c5f1502b56a79f72d2f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/05d49d1442d3d99237050c5f1502b56a79f72d2f",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases form dbsqlfuzz\n\nFossilOrigin-Name: 9cf8ebd141aa2eb661d457624c76433bd9e4abfdef04aa52e28bc169172c2c8f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0ea05a0eb96acb860d8af2e788e29a5ae3b161e7892ab62f1ff2f3e722c0dcb6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}