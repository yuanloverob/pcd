{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e9e40d8b027faca62fe51954f022efdd9bfe62a",
      "candidate_info": {
        "commit_hash": "1e9e40d8b027faca62fe51954f022efdd9bfe62a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1e9e40d8b027faca62fe51954f022efdd9bfe62a",
        "files": [
          "crypto/evp/evp_lib.c"
        ],
        "message": "Fix EVP_MD_meth_get_flags\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2134)\n(cherry picked from commit 8bfa99f04f9763a6a8d72a6d5c1f0a962f8a084b)",
        "before_after_code_files": [
          "crypto/evp/evp_lib.c||crypto/evp/evp_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_lib.c||crypto/evp/evp_lib.c": [
          "File: crypto/evp/evp_lib.c -> crypto/evp/evp_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "404: }",
          "405: unsigned long EVP_MD_meth_get_flags(const EVP_MD *md)",
          "406: {",
          "408: }",
          "409: int (*EVP_MD_meth_get_init(const EVP_MD *md))(EVP_MD_CTX *ctx)",
          "410: {",
          "",
          "[Removed Lines]",
          "407:     return md->block_size;",
          "",
          "[Added Lines]",
          "407:     return md->flags;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
      "candidate_info": {
        "commit_hash": "9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
        "files": [
          "ssl/d1_lib.c"
        ],
        "message": "Ensure we are in accept state in DTLSv1_listen\n\nCalling SSL_set_accept_state() after DTLSv1_listen() clears the state, so\nSSL_accept() no longer works. In 1.0.2 calling DTLSv1_listen() would set\nthe accept state automatically. We should still do that.\n\nFixes #1989\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit 5bdcd362d24cbbcf18c5eb9df655fe9f7bcf5850)",
        "before_after_code_files": [
          "ssl/d1_lib.c||ssl/d1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/d1_lib.c||ssl/d1_lib.c": [
          "File: ssl/d1_lib.c -> ssl/d1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:     BIO_ADDR *tmpclient = NULL;",
          "442:     PACKET pkt, msgpkt, msgpayload, session, cookiepkt;",
          "445:     if (!SSL_clear(s))",
          "446:         return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:     if (s->handshake_func == NULL) {",
          "446:         SSL_set_accept_state(s);",
          "447:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ba808de916c9390d45d733563313d8d8f8dbe44",
      "candidate_info": {
        "commit_hash": "4ba808de916c9390d45d733563313d8d8f8dbe44",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4ba808de916c9390d45d733563313d8d8f8dbe44",
        "files": [
          "test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in"
        ],
        "message": "Fix test_ssl_new when compiled with no-tls1_2 or no-dtls1_2\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2788)\n(cherry picked from commit 4d118fe007692de2dd8c5dd084254f8d3b308167)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   \"07-dtls-protocol-version.conf\" => !$is_default_dtls,",
          "55:   \"10-resumption.conf\" => !$is_default_tls,",
          "56:   \"11-dtls_resumption.conf\" => !$is_default_dtls,",
          "57: );",
          "59: # Add your test here if it should be skipped for some compile-time",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   \"17-renegotiate.conf\" => disabled(\"tls1_2\"),",
          "58:   \"18-dtls-renegotiate.conf\" => disabled(\"dtls1_2\"),",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use warnings;",
          "15: package ssltests;",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:             \"ResumptionExpected\" => \"No\",",
          "103:             \"ExpectedResult\" => \"Success\"",
          "104:         }",
          "106:     {",
          "107:         name => \"renegotiate-aead-to-non-aead\",",
          "108:         server => {",
          "",
          "[Removed Lines]",
          "105:     },",
          "",
          "[Added Lines]",
          "106:     }",
          "107: );",
          "108: our @tests_tls1_2 = (",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:             \"ResumptionExpected\" => \"No\",",
          "179:             \"ExpectedResult\" => \"Success\"",
          "180:         }",
          "182: );",
          "",
          "[Removed Lines]",
          "181:     },",
          "",
          "[Added Lines]",
          "184:     }",
          "187: push @tests, @tests_tls1_2 unless disabled(\"tls1_2\");",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use warnings;",
          "15: package ssltests;",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:             \"ResumptionExpected\" => \"No\",",
          "95:             \"ExpectedResult\" => \"Success\"",
          "96:         }",
          "98:     {",
          "99:         name => \"renegotiate-aead-to-non-aead\",",
          "100:         server => {",
          "",
          "[Removed Lines]",
          "97:     },",
          "",
          "[Added Lines]",
          "98:     }",
          "99: );",
          "100: our @tests_dtls1_2 = (",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:         }",
          "169:     },",
          "170: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176: push @tests, @tests_dtls1_2 unless disabled(\"dtls1_2\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
      "candidate_info": {
        "commit_hash": "0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
        "files": [
          "crypto/bn/bn_lcl.h"
        ],
        "message": "bn: catch negative zero as an error\n\nChange-Id: I5ab72ad0aae9069b47d5b7b7b9e25bd1b7afa251\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 2fc9b36a96ccd77cbd9ecfb3a3cdaa7ad2ca305e)",
        "before_after_code_files": [
          "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h": [
          "File: crypto/bn/bn_lcl.h -> crypto/bn/bn_lcl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:         do { \\",
          "178:                 const BIGNUM *_bnum2 = (a); \\",
          "179:                 if (_bnum2 != NULL) { \\",
          "182:                         bn_pollute(_bnum2); \\",
          "183:                 } \\",
          "184:         } while(0)",
          "",
          "[Removed Lines]",
          "180:                         OPENSSL_assert((_bnum2->top == 0) || \\",
          "181:                                 (_bnum2->d[_bnum2->top - 1] != 0)); \\",
          "",
          "[Added Lines]",
          "180:                         OPENSSL_assert(((_bnum2->top == 0) && !_bnum2->neg) || \\",
          "181:                                 (_bnum2->top && (_bnum2->d[_bnum2->top - 1] != 0))); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
      "candidate_info": {
        "commit_hash": "d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
        "files": [
          "crypto/bn/bn_exp.c",
          "crypto/bn/bn_mul.c",
          "crypto/bn/bn_prime.c",
          "crypto/bn/bn_sqr.c",
          "crypto/ec/ec2_mult.c",
          "crypto/rsa/rsa_gen.c"
        ],
        "message": "Check return value of some BN functions.\n\nFactorise multiple bn_get_top(group->field) calls\nAdd missing checks on some conditional BN_copy return value\nAdd missing checks on some BN_copy return value\nAdd missing checks on a few bn_wexpand return value\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1626)\n\n(cherry picked from commit 78e09b53a40729f5e99829ccc733b592bd22fea1)",
        "before_after_code_files": [
          "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c",
          "crypto/bn/bn_sqr.c||crypto/bn/bn_sqr.c",
          "crypto/ec/ec2_mult.c||crypto/ec/ec2_mult.c",
          "crypto/rsrsa_gen.c||crypto/rsa/rsa_gen.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
          "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:                 goto err;",
          "79:         }",
          "80:     }",
          "83:     ret = 1;",
          "84:  err:",
          "85:     BN_CTX_end(ctx);",
          "",
          "[Removed Lines]",
          "81:     if (r != rr)",
          "82:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "81:     if (r != rr && BN_copy(r, rr) == NULL)",
          "82:         goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:  end:",
          "971: #endif",
          "972:     bn_correct_top(rr);",
          "975:     ret = 1;",
          "976:  err:",
          "977:     bn_check_top(r);",
          "",
          "[Removed Lines]",
          "973:     if (r != rr)",
          "974:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "973:     if (r != rr && BN_copy(r, rr) == NULL)",
          "974:         goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c": [
          "File: crypto/bn/bn_prime.c -> crypto/bn/bn_prime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:         BIGNUM *t;",
          "241:         if ((t = BN_CTX_get(ctx)) == NULL)",
          "242:             goto err;",
          "244:         t->neg = 0;",
          "245:         A = t;",
          "246:     } else",
          "",
          "[Removed Lines]",
          "243:         BN_copy(t, a);",
          "",
          "[Added Lines]",
          "243:         if (BN_copy(t, a) == NULL)",
          "244:             goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_sqr.c||crypto/bn/bn_sqr.c": [
          "File: crypto/bn/bn_sqr.c -> crypto/bn/bn_sqr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:         rr->top = max - 1;",
          "91:     else",
          "92:         rr->top = max;",
          "95:     ret = 1;",
          "96:  err:",
          "97:     bn_check_top(rr);",
          "",
          "[Removed Lines]",
          "93:     if (rr != r)",
          "94:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "93:     if (r != rr && BN_copy(r, rr) == NULL)",
          "94:         goto err;",
          "",
          "---------------"
        ],
        "crypto/ec/ec2_mult.c||crypto/ec/ec2_mult.c": [
          "File: crypto/ec/ec2_mult.c -> crypto/ec/ec2_mult.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:                                              BN_CTX *ctx)",
          "224: {",
          "225:     BIGNUM *x1, *x2, *z1, *z2;",
          "227:     BN_ULONG mask, word;",
          "229:     if (r == point) {",
          "",
          "[Removed Lines]",
          "226:     int ret = 0, i;",
          "",
          "[Added Lines]",
          "226:     int ret = 0, i, group_top;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:     x2 = r->X;",
          "254:     z2 = r->Y;",
          "261:     if (!BN_GF2m_mod_arr(x1, point->X, group->poly))",
          "",
          "[Removed Lines]",
          "256:     bn_wexpand(x1, bn_get_top(group->field));",
          "257:     bn_wexpand(z1, bn_get_top(group->field));",
          "258:     bn_wexpand(x2, bn_get_top(group->field));",
          "259:     bn_wexpand(z2, bn_get_top(group->field));",
          "",
          "[Added Lines]",
          "256:     group_top = bn_get_top(group->field);",
          "257:     if (bn_wexpand(x1, group_top) == NULL",
          "258:         || bn_wexpand(z1, group_top) == NULL",
          "259:         || bn_wexpand(x2, group_top) == NULL",
          "260:         || bn_wexpand(z2, group_top) == NULL)",
          "261:         goto err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "285:     for (; i >= 0; i--) {",
          "286:         word = bn_get_words(scalar)[i];",
          "287:         while (mask) {",
          "290:             if (!gf2m_Madd(group, point->X, x2, z2, x1, z1, ctx))",
          "291:                 goto err;",
          "292:             if (!gf2m_Mdouble(group, x1, z1, ctx))",
          "293:                 goto err;",
          "296:             mask >>= 1;",
          "297:         }",
          "298:         mask = BN_TBIT;",
          "",
          "[Removed Lines]",
          "288:             BN_consttime_swap(word & mask, x1, x2, bn_get_top(group->field));",
          "289:             BN_consttime_swap(word & mask, z1, z2, bn_get_top(group->field));",
          "294:             BN_consttime_swap(word & mask, x1, x2, bn_get_top(group->field));",
          "295:             BN_consttime_swap(word & mask, z1, z2, bn_get_top(group->field));",
          "",
          "[Added Lines]",
          "290:             BN_consttime_swap(word & mask, x1, x2, group_top);",
          "291:             BN_consttime_swap(word & mask, z1, z2, group_top);",
          "296:             BN_consttime_swap(word & mask, x1, x2, group_top);",
          "297:             BN_consttime_swap(word & mask, z1, z2, group_top);",
          "",
          "---------------"
        ],
        "crypto/rsrsa_gen.c||crypto/rsa/rsa_gen.c": [
          "File: crypto/rsrsa_gen.c -> crypto/rsa/rsa_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:     if (BN_copy(rsa->e, e_value) == NULL)",
          "79:         goto err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}