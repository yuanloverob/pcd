{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
      "candidate_info": {
        "commit_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "files": [
          "apps/req.c",
          "doc/apps/req.pod"
        ],
        "message": "Fix parsing of serial# in req\n\nReported by Jakub Wilk.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2556)\n(cherry picked from commit be4c82aa767998ce2a5717fc895482052373f1b1)",
        "before_after_code_files": [
          "apps/req.c||apps/req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/req.c||apps/req.c": [
          "File: apps/req.c -> apps/req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     {\"multivalue-rdn\", OPT_MULTIVALUE_RDN, '-',",
          "122:      \"Enable support for multivalued RDNs\"},",
          "123:     {\"days\", OPT_DAYS, 'p', \"Number of days cert is valid for\"},",
          "125:     {\"extensions\", OPT_EXTENSIONS, 's',",
          "126:      \"Cert extension section (override value in config file)\"},",
          "127:     {\"reqexts\", OPT_REQEXTS, 's',",
          "",
          "[Removed Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 'p', \"Serial number to use\"},",
          "",
          "[Added Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 's', \"Serial number to use\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
      "candidate_info": {
        "commit_hash": "3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3ffb3406ce9d93756e15bf41fcfc86f9d582c452",
        "files": [
          "test/recipes/80-test_ssl_new.t",
          "test/recipes/80-test_sslcorrupt.t"
        ],
        "message": "Fix the no-tls option\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/recipes/80-test_sslcorrupt.t||test/recipes/80-test_sslcorrupt.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:   # We should review this once we have TLS 1.3.",
          "72:   \"13-fragmentation.conf\" => disabled(\"tls1_2\"),",
          "73:   \"14-curves.conf\" => disabled(\"tls1_2\") || $no_ec || $no_ec2m,",
          "75:   \"16-dtls-certstatus.conf\" => $no_dtls || $no_ocsp,",
          "76:   \"18-dtls-renegotiate.conf\" => $no_dtls,",
          "77: );",
          "",
          "[Removed Lines]",
          "74:   \"15-certstatus.conf\" => $no_ocsp,",
          "",
          "[Added Lines]",
          "74:   \"15-certstatus.conf\" => $no_tls || $no_ocsp,",
          "",
          "---------------"
        ],
        "test/recipes/80-test_sslcorrupt.t||test/recipes/80-test_sslcorrupt.t": [
          "File: test/recipes/80-test_sslcorrupt.t -> test/recipes/80-test_sslcorrupt.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "9: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "11: setup(\"test_sslcorrupt\");",
          "13: plan tests => 1;",
          "15: ok(run(test([\"sslcorrupttest\", srctop_file(\"apps\", \"server.pem\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: use OpenSSL::Test::Utils;",
          "14: plan skip_all => \"No TLS protocols are supported by this OpenSSL build\"",
          "15:     if alldisabled(available_protocols(\"tls\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77cd04bd27397161faa4ad0b211727bfd97e6a67",
      "candidate_info": {
        "commit_hash": "77cd04bd27397161faa4ad0b211727bfd97e6a67",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/77cd04bd27397161faa4ad0b211727bfd97e6a67",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Fail if an unrecognised record type is received\n\nTLS1.0 and TLS1.1 say you SHOULD ignore unrecognised record types, but\nTLS 1.2 says you MUST send an unexpected message alert. We swap to the\nTLS 1.2 behaviour for all protocol versions to prevent issues where no\nprogress is being made and the peer continually sends unrecognised record\ntypes, using up resources processing them.\n\nIssue reported by \u90ed\u5fd7\u6500\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit 436a2a0179416d2cc22b678b63e50c2638384d5f)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1463:     switch (SSL3_RECORD_get_type(rr)) {",
          "1464:     default:",
          "1474:         al = SSL_AD_UNEXPECTED_MESSAGE;",
          "1475:         SSLerr(SSL_F_SSL3_READ_BYTES, SSL_R_UNEXPECTED_RECORD);",
          "1476:         goto f_err;",
          "",
          "[Removed Lines]",
          "1469:         if (s->version >= TLS1_VERSION && s->version <= TLS1_1_VERSION) {",
          "1470:             SSL3_RECORD_set_length(rr, 0);",
          "1471:             SSL3_RECORD_set_read(rr);",
          "1472:             goto start;",
          "1473:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f5fb2b28c2de4730c13f35d7d90265c62693631",
      "candidate_info": {
        "commit_hash": "7f5fb2b28c2de4730c13f35d7d90265c62693631",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7f5fb2b28c2de4730c13f35d7d90265c62693631",
        "files": [
          "test/build.info",
          "test/sslapitest.c"
        ],
        "message": "Provide some tests for the sig algs API\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2160)\n(cherry picked from commit f1b25aaed32f90b3309243d24353bf636c1c786b)",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:   DEPEND[bioprinttest]=../libcrypto",
          "270:   SOURCE[sslapitest]=sslapitest.c ssltestlib.c testutil.c",
          "272:   DEPEND[sslapitest]=../libcrypto ../libssl",
          "274:   SOURCE[dtlstest]=dtlstest.c ssltestlib.c testutil.c",
          "",
          "[Removed Lines]",
          "271:   INCLUDE[sslapitest]=../include",
          "",
          "[Added Lines]",
          "271:   INCLUDE[sslapitest]=../include ..",
          "",
          "---------------"
        ],
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"ssltestlib.h\"",
          "19: #include \"testutil.h\"",
          "21: static char *cert = NULL;",
          "22: static char *privkey = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #include \"e_os.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "875:     EXECUTE_TEST(execute_test_ssl_bio, ssl_bio_tear_down);",
          "876: }",
          "878: int main(int argc, char *argv[])",
          "879: {",
          "880:     BIO *err = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "879: typedef struct {",
          "881:     const int *list;",
          "883:     size_t listlen;",
          "885:     const char *liststr;",
          "887:     int valid;",
          "889:     int connsuccess;",
          "890: } sigalgs_list;",
          "892: static const int validlist1[] = {NID_sha256, EVP_PKEY_RSA};",
          "893: static const int validlist2[] = {NID_sha256, EVP_PKEY_RSA, NID_sha512, EVP_PKEY_EC};",
          "894: static const int validlist3[] = {NID_sha512, EVP_PKEY_EC};",
          "895: static const int invalidlist1[] = {NID_undef, EVP_PKEY_RSA};",
          "896: static const int invalidlist2[] = {NID_sha256, NID_undef};",
          "897: static const int invalidlist3[] = {NID_sha256, EVP_PKEY_RSA, NID_sha256};",
          "898: static const int invalidlist4[] = {NID_sha256};",
          "899: static const sigalgs_list testsigalgs[] = {",
          "900:     {validlist1, OSSL_NELEM(validlist1), NULL, 1, 1},",
          "901:     {validlist2, OSSL_NELEM(validlist2), NULL, 1, 1},",
          "902:     {validlist3, OSSL_NELEM(validlist3), NULL, 1, 0},",
          "903:     {NULL, 0, \"RSA+SHA256\", 1, 1},",
          "904:     {NULL, 0, \"RSA+SHA256:ECDSA+SHA512\", 1, 1},",
          "905:     {NULL, 0, \"ECDSA+SHA512\", 1, 0},",
          "906:     {invalidlist1, OSSL_NELEM(invalidlist1), NULL, 0, 0},",
          "907:     {invalidlist2, OSSL_NELEM(invalidlist2), NULL, 0, 0},",
          "908:     {invalidlist3, OSSL_NELEM(invalidlist3), NULL, 0, 0},",
          "909:     {invalidlist4, OSSL_NELEM(invalidlist4), NULL, 0, 0},",
          "910:     {NULL, 0, \"RSA\", 0, 0},",
          "911:     {NULL, 0, \"SHA256\", 0, 0},",
          "912:     {NULL, 0, \"RSA+SHA256:SHA256\", 0, 0},",
          "913:     {NULL, 0, \"Invalid\", 0, 0}};",
          "915: static int test_set_sigalgs(int idx)",
          "916: {",
          "917:     SSL_CTX *cctx = NULL, *sctx = NULL;",
          "918:     SSL *clientssl = NULL, *serverssl = NULL;",
          "919:     int testresult = 0;",
          "920:     const sigalgs_list *curr;",
          "921:     int testctx;",
          "924:     if ((size_t)idx >= OSSL_NELEM(testsigalgs) * 2)",
          "925:         return 0;",
          "927:     testctx = ((size_t)idx < OSSL_NELEM(testsigalgs));",
          "928:     curr = testctx ? &testsigalgs[idx]",
          "929:                    : &testsigalgs[idx - OSSL_NELEM(testsigalgs)];",
          "931:     if (!create_ssl_ctx_pair(TLS_server_method(), TLS_client_method(), &sctx,",
          "932:                              &cctx, cert, privkey)) {",
          "933:         printf(\"Unable to create SSL_CTX pair\\n\");",
          "934:         return 0;",
          "935:     }",
          "937:     if (testctx) {",
          "938:         int ret;",
          "939:         if (curr->list != NULL)",
          "940:             ret = SSL_CTX_set1_sigalgs(cctx, curr->list, curr->listlen);",
          "941:         else",
          "942:             ret = SSL_CTX_set1_sigalgs_list(cctx, curr->liststr);",
          "944:         if (!ret) {",
          "945:             if (curr->valid)",
          "946:                 printf(\"Unexpected failure setting sigalgs in SSL_CTX (%d)\\n\",",
          "947:                        idx);",
          "948:             else",
          "949:                 testresult = 1;",
          "950:             goto end;",
          "951:         }",
          "952:         if (!curr->valid) {",
          "953:             printf(\"Unexpected success setting sigalgs in SSL_CTX (%d)\\n\", idx);",
          "954:             goto end;",
          "955:         }",
          "956:     }",
          "958:     if (!create_ssl_objects(sctx, cctx, &serverssl, &clientssl, NULL, NULL)) {",
          "959:         printf(\"Unable to create SSL objects\\n\");",
          "960:         goto end;",
          "961:     }",
          "963:     if (!testctx) {",
          "964:         int ret;",
          "966:         if (curr->list != NULL)",
          "967:             ret = SSL_set1_sigalgs(clientssl, curr->list, curr->listlen);",
          "968:         else",
          "969:             ret = SSL_set1_sigalgs_list(clientssl, curr->liststr);",
          "970:         if (!ret) {",
          "971:             if (curr->valid)",
          "972:                 printf(\"Unexpected failure setting sigalgs in SSL (%d)\\n\", idx);",
          "973:             else",
          "974:                 testresult = 1;",
          "975:             goto end;",
          "976:         }",
          "977:         if (!curr->valid) {",
          "978:             printf(\"Unexpected success setting sigalgs in SSL (%d)\\n\", idx);",
          "979:             goto end;",
          "980:         }",
          "981:     }",
          "983:     if (curr->connsuccess != create_ssl_connection(serverssl, clientssl)) {",
          "984:         printf(\"Unexpected return value creating SSL connection (%d)\\n\", idx);",
          "985:         goto end;",
          "986:     }",
          "988:     testresult = 1;",
          "990:  end:",
          "991:     SSL_free(serverssl);",
          "992:     SSL_free(clientssl);",
          "993:     SSL_CTX_free(sctx);",
          "994:     SSL_CTX_free(cctx);",
          "996:     return testresult;",
          "997: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "909:     ADD_TEST(test_ssl_bio_pop_ssl_bio);",
          "910:     ADD_TEST(test_ssl_bio_change_rbio);",
          "911:     ADD_TEST(test_ssl_bio_change_wbio);",
          "913:     testresult = run_tests(argv[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1033:     ADD_ALL_TESTS(test_set_sigalgs, OSSL_NELEM(testsigalgs) * 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfca0515b6977cba7b50215fc6d7d88250c9ca38",
      "candidate_info": {
        "commit_hash": "bfca0515b6977cba7b50215fc6d7d88250c9ca38",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bfca0515b6977cba7b50215fc6d7d88250c9ca38",
        "files": [
          "test/recipes/70-test_asyncio.t",
          "test/recipes/80-test_dtls.t",
          "test/recipes/90-test_sslapi.t"
        ],
        "message": "Test recipes: remove duplicate OpenSSL::Test usage\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1815)\n(cherry picked from commit 2c4a3f938ca378d2017275d299f02512b232ceaf)",
        "before_after_code_files": [
          "test/recipes/70-test_asyncio.t||test/recipes/70-test_asyncio.t",
          "test/recipes/80-test_dtls.t||test/recipes/80-test_dtls.t",
          "test/recipes/90-test_sslapi.t||test/recipes/90-test_sslapi.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/70-test_asyncio.t||test/recipes/70-test_asyncio.t": [
          "File: test/recipes/70-test_asyncio.t -> test/recipes/70-test_asyncio.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # https://www.openssl.org/source/license.html",
          "11: use OpenSSL::Test::Utils;",
          "12: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "10: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recipes/80-test_dtls.t||test/recipes/80-test_dtls.t": [
          "File: test/recipes/80-test_dtls.t -> test/recipes/80-test_dtls.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use OpenSSL::Test::Utils;",
          "11: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "9: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recipes/90-test_sslapi.t||test/recipes/90-test_sslapi.t": [
          "File: test/recipes/90-test_sslapi.t -> test/recipes/90-test_sslapi.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # https://www.openssl.org/source/license.html",
          "11: use OpenSSL::Test::Utils;",
          "12: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "10: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}