{
  "cve_id": "CVE-2014-6425",
  "cve_desc": "The (1) get_quoted_string and (2) get_unquoted_string functions in epan/dissectors/packet-cups.c in the CUPS dissector in Wireshark 1.12.x before 1.12.1 allow remote attackers to cause a denial of service (buffer over-read and application crash) via a CUPS packet that lacks a trailing '\\0' character.",
  "repo": "wireshark/wireshark",
  "patch_hash": "c10396dbbf782a576bc1f9a931cf86090cec3878",
  "patch_info": {
    "commit_hash": "c10396dbbf782a576bc1f9a931cf86090cec3878",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/c10396dbbf782a576bc1f9a931cf86090cec3878",
    "files": [
      "epan/dissectors/packet-cups.c"
    ],
    "message": "Fix read-past-end-of-buffer in CUPS dissector\n\nEven when the protocol specifies that a string ends in a null-terminator, there\nare packets which won't. Therefore:\n\n**the result of tvb_get_ptr SHALL NOT be treated as a null-terminated string**\n\nWe need to post that in big neon lettering somewhere obvious.\n\nBug: 10353\nChange-Id: Ie30cd13353a9830311e573e734dd89dc07622c98\nReviewed-on: https://code.wireshark.org/review/3485\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c": [
      "File: epan/dissectors/packet-cups.c -> epan/dissectors/packet-cups.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "279:         if (o != -1) {",
      "280:             offset++;",
      "281:             l = o - offset;",
      "283:             offset = o + 1;",
      "284:         }",
      "285:     }",
      "",
      "[Removed Lines]",
      "282:             s = tvb_get_ptr(tvb, offset, l);",
      "",
      "[Added Lines]",
      "282:             s = tvb_get_string_enc(wmem_packet_scope(), tvb, offset, l, ENC_ASCII);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "300:     o = tvb_pbrk_guint8(tvb, offset, -1, \" \\t\\r\\n\", NULL);",
      "301:     if (o != -1) {",
      "302:         l = o - offset;",
      "304:         offset = o;",
      "305:     }",
      "",
      "[Removed Lines]",
      "303:         s = tvb_get_ptr(tvb, offset, l);",
      "",
      "[Added Lines]",
      "303:         s = tvb_get_string_enc(wmem_packet_scope(), tvb, offset, l, ENC_ASCII);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6501534041acf4bb509e36b719126fa4185ccaea",
      "candidate_info": {
        "commit_hash": "6501534041acf4bb509e36b719126fa4185ccaea",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/6501534041acf4bb509e36b719126fa4185ccaea",
        "files": [
          "epan/dissectors/packet-cups.c"
        ],
        "message": "Fix read-past-end-of-buffer in CUPS dissector\n\nEven when the protocol specifies that a string ends in a null-terminator, there\nare packets which won't. Therefore:\n\n**the result of tvb_get_ptr SHALL NOT be treated as a null-terminated string**\n\nWe need to post that in big neon lettering somewhere obvious.\n\nBug: 10353\nChange-Id: Ie30cd13353a9830311e573e734dd89dc07622c98\nReviewed-on: https://code.wireshark.org/review/3486\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c"
          ],
          "candidate": [
            "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-cups.c||epan/dissectors/packet-cups.c": [
          "File: epan/dissectors/packet-cups.c -> epan/dissectors/packet-cups.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:         if (o != -1) {",
          "280:             offset++;",
          "281:             l = o - offset;",
          "283:             offset = o + 1;",
          "284:         }",
          "285:     }",
          "",
          "[Removed Lines]",
          "282:             s = tvb_get_ptr(tvb, offset, l);",
          "",
          "[Added Lines]",
          "282:             s = tvb_get_string_enc(wmem_packet_scope(), tvb, offset, l, ENC_ASCII);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "300:     o = tvb_pbrk_guint8(tvb, offset, -1, \" \\t\\r\\n\", NULL);",
          "301:     if (o != -1) {",
          "302:         l = o - offset;",
          "304:         offset = o;",
          "305:     }",
          "",
          "[Removed Lines]",
          "303:         s = tvb_get_ptr(tvb, offset, l);",
          "",
          "[Added Lines]",
          "303:         s = tvb_get_string_enc(wmem_packet_scope(), tvb, offset, l, ENC_ASCII);",
          "",
          "---------------"
        ]
      }
    }
  ]
}