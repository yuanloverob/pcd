{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
      "candidate_info": {
        "commit_hash": "9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Update the configure-generated makekfile to generate a portable pkgIndex.tcl.\n\nFossilOrigin-Name: 35cbee7fe4a0b7ca06206ca2f69fc35abe3de4929070d6585ab765af82027438",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1424:  $(INSTALL) -m 0644 sqlite3.pc $(DESTDIR)$(pkgconfigdir)",
          "1426: pkgIndex.tcl:",
          "1428: tcl_install: lib_install libtclsqlite3.la pkgIndex.tcl",
          "1429:  $(INSTALL) -d $(DESTDIR)$(TCLLIBDIR)",
          "1430:  $(LTINSTALL) libtclsqlite3.la $(DESTDIR)$(TCLLIBDIR)",
          "",
          "[Removed Lines]",
          "1427:  echo 'package ifneeded sqlite3 $(RELEASE) [list load $(TCLLIBDIR)/libtclsqlite3$(SHLIB_SUFFIX) sqlite3]' > $@",
          "",
          "[Added Lines]",
          "1427:  echo 'package ifneeded sqlite3 $(RELEASE) [list load [file join $$dir libtclsqlite3[info sharedlibextension]] sqlite3]' > $@",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7c941ce5bcc872ec92cbe0e409fd773f44a5ab1f814e689ad57f756b911e2b96",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aff0fd483c24ea83377824dbcbd17fad374594b2",
      "candidate_info": {
        "commit_hash": "aff0fd483c24ea83377824dbcbd17fad374594b2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/aff0fd483c24ea83377824dbcbd17fad374594b2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c",
          "test/fuzzdata8.db"
        ],
        "message": "Add an \"|| CORRUPT_DB\" term to an assert() that might be false if the database is corrupt.  Also add a branch to have sqlite3PagerMovepage() return SQLITE_CORRUPT in that case.\n\nFossilOrigin-Name: b0d5cf40bba34e459caa7480bc84a1d75496c2ab52029f4bb0a31f2d9369a8ee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3803e750384ec37091b0a6c350f8ef67720e316fd6f74c95e3c5f231c4a01ceb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7178:   pPg->flags &= ~PGHDR_NEED_SYNC;",
          "7179:   pPgOld = sqlite3PagerLookup(pPager, pgno);",
          "7181:   if( pPgOld ){",
          "7182:     pPg->flags |= (pPgOld->flags&PGHDR_NEED_SYNC);",
          "7183:     if( pPager->tempFile ){",
          "",
          "[Removed Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 );",
          "",
          "[Added Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 || CORRUPT_DB );",
          "7182:     if( pPgOld->nRef>1 ){",
          "7183:       sqlite3PagerUnrefNotNull(pPgOld);",
          "7184:       return SQLITE_CORRUPT_BKPT;",
          "7185:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
      "candidate_info": {
        "commit_hash": "c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Change an unreachable testcase() into an assert()\n\nFossilOrigin-Name: 062e00c4d7e30155299339eaefe6cbe01953894baebf0af6d7ab3295b7436eb7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3709:       return target;",
          "3710:     }",
          "3711:     default: {",
          "3713:       sqlite3VdbeAddOp2(v, OP_Null, 0, target);",
          "3714:       return target;",
          "3715:     }",
          "",
          "[Removed Lines]",
          "3712:       testcase( op!=TK_NULL );",
          "",
          "[Added Lines]",
          "3716:       assert( op==TK_NULL );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00885742712b5f54866b74c167b3cb9597850789",
      "candidate_info": {
        "commit_hash": "00885742712b5f54866b74c167b3cb9597850789",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/00885742712b5f54866b74c167b3cb9597850789",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y",
          "test/filterfault.test"
        ],
        "message": "Fix a memory leak that could follow an OOM in the new FILTER code.\n\nFossilOrigin-Name: 85fd70fead834aed16cffbea892b2255b4e10dd677f4dbbb96062d5ff42efdeb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y",
          "test/filterfault.test||test/filterfault.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8c80e81d01abde9a5032cdc1a492d0fccd8db139f78d2db9413a60cfdc8e0f64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1742:   if( A ){",
          "1743:     A->eFrmType = TK_FILTER;",
          "1744:     A->pFilter = F;",
          "1745:   }",
          "1746: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1745:   }else{",
          "1746:     sqlite3ExprDelete(pParse->db, F);",
          "",
          "---------------"
        ],
        "test/filterfault.test||test/filterfault.test": [
          "File: test/filterfault.test -> test/filterfault.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2018 May 8",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # This file implements regression tests for SQLite library.",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix filterfault",
          "18: ifcapable !windowfunc {",
          "19:   finish_test",
          "20:   return",
          "21: }",
          "23: do_execsql_test 1.0 {",
          "24:   CREATE TABLE t1(a, b, c, d);",
          "25:   INSERT INTO t1 VALUES(1, 2, 3, 4);",
          "26:   INSERT INTO t1 VALUES(5, 6, 7, 8);",
          "27:   INSERT INTO t1 VALUES(9, 10, 11, 12);",
          "28: }",
          "29: faultsim_save_and_close",
          "31: do_faultsim_test 1 -faults oom-t* -prep {",
          "32:   faultsim_restore_and_reopen",
          "33: } -body {",
          "34:   execsql {",
          "35:     SELECT sum(a) FILTER (WHERE b<5),",
          "36:            count() FILTER (WHERE d!=c)",
          "37:       FROM t1 GROUP BY c ORDER BY 1;",
          "38:   }",
          "39: } -test {",
          "40:   faultsim_test_result {0 {{} 1 {} 1 1 1}}",
          "41: }",
          "44: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2f142d079110237e8c0a02c701b3d387526fbfa",
      "candidate_info": {
        "commit_hash": "a2f142d079110237e8c0a02c701b3d387526fbfa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a2f142d079110237e8c0a02c701b3d387526fbfa",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Abort the window function tree rewrite early following an OOM.\n\nFossilOrigin-Name: d66f95a51530259ab48f78c9f91acc38055caf338b6fee846b99a8c077466e95",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 57070c68bbe15fc1d19a765182432e844c082909bdbc63b58fd86b96e2c521dd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "813:         pExpr->iTable = p->pWin->iEphCsr;",
          "814:         pExpr->y.pTab = p->pTab;",
          "815:       }",
          "817:       break;",
          "818:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "816:       if( pParse->db->mallocFailed ) return WRC_Abort;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1275: int sqlite3WindowCompare(Parse *pParse, Window *p1, Window *p2, int bFilter){",
          "1276:   if( p1->eFrmType!=p2->eFrmType ) return 1;",
          "1277:   if( p1->eStart!=p2->eStart ) return 1;",
          "1278:   if( p1->eEnd!=p2->eEnd ) return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1276:   if( NEVER(p1==0) || NEVER(p2==0) ) return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}