{
  "cve_id": "CVE-2022-36000",
  "cve_desc": "TensorFlow is an open source platform for machine learning. When `mlir::tfg::ConvertGenericFunctionToFunctionDef` is given empty function attributes, it gives a null dereference. We have patched the issue in GitHub commit aed36912609fc07229b4d0a7b44f3f48efc00fd0. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "aed36912609fc07229b4d0a7b44f3f48efc00fd0",
  "patch_info": {
    "commit_hash": "aed36912609fc07229b4d0a7b44f3f48efc00fd0",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/aed36912609fc07229b4d0a7b44f3f48efc00fd0",
    "files": [
      "tensorflow/core/kernels/linalg/linalg_ops_common.cc",
      "tensorflow/python/kernel_tests/linalg/eig_op_test.py"
    ],
    "message": "Check correct input/output scalar types for LinearAlgebraOp.\n\nIf calling the `tf.raw_ops` versions, it's possible to provide bad output scalar\ntypes (e.g. for `Eig`), causing a failing check when trying to actually compute\noutputs.  Here we add an appropriate input validation check.\n\nNOTE: no test is added because it's impossible to trigger these using the\nofficial public API.\nPiperOrigin-RevId: 461637318",
    "before_after_code_files": [
      "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
      "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc": [
      "File: tensorflow/core/kernels/linalg/linalg_ops_common.cc -> tensorflow/core/kernels/linalg/linalg_ops_common.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: #include \"tensorflow/core/kernels/linalg/linalg_ops_common.h\"",
      "18: #include <utility>",
      "20: #include \"third_party/eigen3/Eigen/Core\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18: #include <initializer_list>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "22: #include \"tensorflow/core/framework/kernel_def_builder.h\"",
      "23: #include \"tensorflow/core/framework/op_kernel.h\"",
      "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
      "25: #include \"tensorflow/core/lib/core/errors.h\"",
      "26: #include \"tensorflow/core/platform/logging.h\"",
      "27: #include \"tensorflow/core/platform/types.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: #include \"tensorflow/core/framework/types.h\"",
      "28: #include \"tensorflow/core/platform/errors.h\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "152:     input_matrix_shapes->emplace_back(",
      "153:         std::initializer_list<int64_t>({num_rows, num_cols}));",
      "154:     inputs->emplace_back(&in);",
      "155:   }",
      "157:   ValidateInputMatrixShapes(context, *input_matrix_shapes);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "158:     OP_REQUIRES(",
      "159:         context, in.dtype() == DataTypeToEnum<InputScalar>::v(),",
      "160:         errors::InvalidArgument(\"Invalid input dtype \", in.dtype(), \" vs \",",
      "161:                                 DataTypeToEnum<InputScalar>::v()));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "212:       OP_REQUIRES_OK(context, context->allocate_output(",
      "213:                                   output_idx, output_tensor_shape, &out));",
      "214:     }",
      "215:     outputs->emplace_back(out);",
      "216:   }",
      "217: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "222:     OP_REQUIRES(",
      "223:         context, out->dtype() == DataTypeToEnum<OutputScalar>::v(),",
      "224:         errors::InvalidArgument(\"Invalid output dtype \", out->dtype(), \" vs \",",
      "225:                                 DataTypeToEnum<OutputScalar>::v()));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py": [
      "File: tensorflow/python/kernel_tests/linalg/eig_op_test.py -> tensorflow/python/kernel_tests/linalg/eig_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: from tensorflow.python.framework import constant_op",
      "20: from tensorflow.python.framework import dtypes as dtypes_lib",
      "21: from tensorflow.python.framework import test_util",
      "22: from tensorflow.python.ops import array_ops",
      "23: from tensorflow.python.ops import gradient_checker_v2",
      "24: from tensorflow.python.ops import linalg_ops",
      "25: from tensorflow.python.ops import math_ops",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: from tensorflow.python.framework import errors",
      "24: from tensorflow.python.ops import gen_linalg_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "88:       self.assertAllClose(matrix,",
      "89:                           np.matmul(np.matmul(v, np.diag(e)), v.transpose()))",
      "92: def SortEigenValues(e):",
      "93:   perm = np.argsort(e.real + e.imag, -1)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "93:   def testMismatchedDtypes(self):",
      "94:     tensor = constant_op.constant([[0, 1], [2, 3]], dtype=dtypes_lib.float32)",
      "95:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
      "96:                                 \"Invalid output dtype\"):",
      "97:       self.evaluate(",
      "98:           gen_linalg_ops.eig(",
      "99:               input=tensor,",
      "100:               Tout=dtypes_lib.complex128,  # Expected dtype: complex64.",
      "101:               compute_v=True))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e0a0aa1513d3ff41080a4f5bc9f633985b2ff79",
      "candidate_info": {
        "commit_hash": "0e0a0aa1513d3ff41080a4f5bc9f633985b2ff79",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0e0a0aa1513d3ff41080a4f5bc9f633985b2ff79",
        "files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/eig_op_test.py"
        ],
        "message": "Check correct input/output scalar types for LinearAlgebraOp.\n\nIf calling the `tf.raw_ops` versions, it's possible to provide bad output scalar\ntypes (e.g. for `Eig`), causing a failing check when trying to actually compute\noutputs.  Here we add an appropriate input validation check.\n\nNOTE: no test is added because it's impossible to trigger these using the\nofficial public API.\nPiperOrigin-RevId: 461637318",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/eig_op_test.py||tensorflow/python/kernel_tests/eig_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc": [
          "File: tensorflow/core/kernels/linalg/linalg_ops_common.cc -> tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/kernels/linalg/linalg_ops_common.h\"",
          "18: #include <utility>",
          "20: #include \"third_party/eigen3/Eigen/Core\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #include <initializer_list>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/kernel_def_builder.h\"",
          "23: #include \"tensorflow/core/framework/op_kernel.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/lib/core/errors.h\"",
          "26: #include \"tensorflow/core/platform/logging.h\"",
          "27: #include \"tensorflow/core/platform/types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     input_matrix_shapes->emplace_back(",
          "153:         std::initializer_list<int64_t>({num_rows, num_cols}));",
          "154:     inputs->emplace_back(&in);",
          "155:   }",
          "157:   ValidateInputMatrixShapes(context, *input_matrix_shapes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:     OP_REQUIRES(",
          "159:         context, in.dtype() == DataTypeToEnum<InputScalar>::v(),",
          "160:         errors::InvalidArgument(\"Invalid input dtype \", in.dtype(), \" vs \",",
          "161:                                 DataTypeToEnum<InputScalar>::v()));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:       OP_REQUIRES_OK(context, context->allocate_output(",
          "213:                                   output_idx, output_tensor_shape, &out));",
          "214:     }",
          "215:     outputs->emplace_back(out);",
          "216:   }",
          "217: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:     OP_REQUIRES(",
          "223:         context, out->dtype() == DataTypeToEnum<OutputScalar>::v(),",
          "224:         errors::InvalidArgument(\"Invalid output dtype \", out->dtype(), \" vs \",",
          "225:                                 DataTypeToEnum<OutputScalar>::v()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/eig_op_test.py||tensorflow/python/kernel_tests/eig_op_test.py": [
          "File: tensorflow/python/kernel_tests/eig_op_test.py -> tensorflow/python/kernel_tests/eig_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes as dtypes_lib",
          "25: from tensorflow.python.framework import test_util",
          "26: from tensorflow.python.ops import array_ops",
          "27: from tensorflow.python.ops import gradient_checker_v2",
          "28: from tensorflow.python.ops import linalg_ops",
          "29: from tensorflow.python.ops import math_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: from tensorflow.python.framework import errors",
          "28: from tensorflow.python.ops import gen_linalg_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:       self.assertAllClose(matrix,",
          "93:                           np.matmul(np.matmul(v, np.diag(e)), v.transpose()))",
          "96: def SortEigenValues(e):",
          "97:   perm = np.argsort(e.real + e.imag, -1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   def testMismatchedDtypes(self):",
          "98:     tensor = constant_op.constant([[0, 1], [2, 3]], dtype=dtypes_lib.float32)",
          "99:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "100:                                 \"Invalid output dtype\"):",
          "101:       self.evaluate(",
          "102:           gen_linalg_ops.eig(",
          "103:               input=tensor,",
          "104:               Tout=dtypes_lib.complex128,  # Expected dtype: complex64.",
          "105:               compute_v=True))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d63e1407ddf8d3a166b4db88b36cfee59589671d",
      "candidate_info": {
        "commit_hash": "d63e1407ddf8d3a166b4db88b36cfee59589671d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d63e1407ddf8d3a166b4db88b36cfee59589671d",
        "files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/linalg/eig_op_test.py"
        ],
        "message": "Check correct input/output scalar types for LinearAlgebraOp.\n\nIf calling the `tf.raw_ops` versions, it's possible to provide bad output scalar\ntypes (e.g. for `Eig`), causing a failing check when trying to actually compute\noutputs.  Here we add an appropriate input validation check.\n\nNOTE: no test is added because it's impossible to trigger these using the\nofficial public API.\nPiperOrigin-RevId: 461637318",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
            "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
            "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc": [
          "File: tensorflow/core/kernels/linalg/linalg_ops_common.cc -> tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/kernels/linalg/linalg_ops_common.h\"",
          "18: #include <utility>",
          "20: #include \"third_party/eigen3/Eigen/Core\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #include <initializer_list>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/kernel_def_builder.h\"",
          "23: #include \"tensorflow/core/framework/op_kernel.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/lib/core/errors.h\"",
          "26: #include \"tensorflow/core/platform/logging.h\"",
          "27: #include \"tensorflow/core/platform/types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     input_matrix_shapes->emplace_back(",
          "153:         std::initializer_list<int64_t>({num_rows, num_cols}));",
          "154:     inputs->emplace_back(&in);",
          "155:   }",
          "157:   ValidateInputMatrixShapes(context, *input_matrix_shapes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:     OP_REQUIRES(",
          "159:         context, in.dtype() == DataTypeToEnum<InputScalar>::v(),",
          "160:         errors::InvalidArgument(\"Invalid input dtype \", in.dtype(), \" vs \",",
          "161:                                 DataTypeToEnum<InputScalar>::v()));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:       OP_REQUIRES_OK(context, context->allocate_output(",
          "213:                                   output_idx, output_tensor_shape, &out));",
          "214:     }",
          "215:     outputs->emplace_back(out);",
          "216:   }",
          "217: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:     OP_REQUIRES(",
          "223:         context, out->dtype() == DataTypeToEnum<OutputScalar>::v(),",
          "224:         errors::InvalidArgument(\"Invalid output dtype \", out->dtype(), \" vs \",",
          "225:                                 DataTypeToEnum<OutputScalar>::v()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py": [
          "File: tensorflow/python/kernel_tests/linalg/eig_op_test.py -> tensorflow/python/kernel_tests/linalg/eig_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import dtypes as dtypes_lib",
          "21: from tensorflow.python.framework import test_util",
          "22: from tensorflow.python.ops import array_ops",
          "23: from tensorflow.python.ops import gradient_checker_v2",
          "24: from tensorflow.python.ops import linalg_ops",
          "25: from tensorflow.python.ops import math_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from tensorflow.python.framework import errors",
          "24: from tensorflow.python.ops import gen_linalg_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:       self.assertAllClose(matrix,",
          "89:                           np.matmul(np.matmul(v, np.diag(e)), v.transpose()))",
          "92: def SortEigenValues(e):",
          "93:   perm = np.argsort(e.real + e.imag, -1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:   def testMismatchedDtypes(self):",
          "94:     tensor = constant_op.constant([[0, 1], [2, 3]], dtype=dtypes_lib.float32)",
          "95:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "96:                                 \"Invalid output dtype\"):",
          "97:       self.evaluate(",
          "98:           gen_linalg_ops.eig(",
          "99:               input=tensor,",
          "100:               Tout=dtypes_lib.complex128,  # Expected dtype: complex64.",
          "101:               compute_v=True))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21433b64b1b01261c77a147a115123171a86ee01",
      "candidate_info": {
        "commit_hash": "21433b64b1b01261c77a147a115123171a86ee01",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/21433b64b1b01261c77a147a115123171a86ee01",
        "files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/linalg/eig_op_test.py"
        ],
        "message": "Check correct input/output scalar types for LinearAlgebraOp.\n\nIf calling the `tf.raw_ops` versions, it's possible to provide bad output scalar\ntypes (e.g. for `Eig`), causing a failing check when trying to actually compute\noutputs.  Here we add an appropriate input validation check.\n\nNOTE: no test is added because it's impossible to trigger these using the\nofficial public API.\nPiperOrigin-RevId: 461637318",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
            "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc",
            "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/linalg_ops_common.cc||tensorflow/core/kernels/linalg/linalg_ops_common.cc": [
          "File: tensorflow/core/kernels/linalg/linalg_ops_common.cc -> tensorflow/core/kernels/linalg/linalg_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/kernels/linalg/linalg_ops_common.h\"",
          "18: #include <utility>",
          "20: #include \"third_party/eigen3/Eigen/Core\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #include <initializer_list>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/kernel_def_builder.h\"",
          "23: #include \"tensorflow/core/framework/op_kernel.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/lib/core/errors.h\"",
          "26: #include \"tensorflow/core/platform/logging.h\"",
          "27: #include \"tensorflow/core/platform/types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include \"tensorflow/core/framework/types.h\"",
          "28: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     input_matrix_shapes->emplace_back(",
          "153:         std::initializer_list<int64_t>({num_rows, num_cols}));",
          "154:     inputs->emplace_back(&in);",
          "155:   }",
          "157:   ValidateInputMatrixShapes(context, *input_matrix_shapes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:     OP_REQUIRES(",
          "159:         context, in.dtype() == DataTypeToEnum<InputScalar>::v(),",
          "160:         errors::InvalidArgument(\"Invalid input dtype \", in.dtype(), \" vs \",",
          "161:                                 DataTypeToEnum<InputScalar>::v()));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:       OP_REQUIRES_OK(context, context->allocate_output(",
          "213:                                   output_idx, output_tensor_shape, &out));",
          "214:     }",
          "215:     outputs->emplace_back(out);",
          "216:   }",
          "217: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:     OP_REQUIRES(",
          "223:         context, out->dtype() == DataTypeToEnum<OutputScalar>::v(),",
          "224:         errors::InvalidArgument(\"Invalid output dtype \", out->dtype(), \" vs \",",
          "225:                                 DataTypeToEnum<OutputScalar>::v()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/linalg/eig_op_test.py||tensorflow/python/kernel_tests/linalg/eig_op_test.py": [
          "File: tensorflow/python/kernel_tests/linalg/eig_op_test.py -> tensorflow/python/kernel_tests/linalg/eig_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import dtypes as dtypes_lib",
          "21: from tensorflow.python.framework import test_util",
          "22: from tensorflow.python.ops import array_ops",
          "23: from tensorflow.python.ops import gradient_checker_v2",
          "24: from tensorflow.python.ops import linalg_ops",
          "25: from tensorflow.python.ops import math_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from tensorflow.python.framework import errors",
          "24: from tensorflow.python.ops import gen_linalg_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:       self.assertAllClose(matrix,",
          "89:                           np.matmul(np.matmul(v, np.diag(e)), v.transpose()))",
          "92: def SortEigenValues(e):",
          "93:   perm = np.argsort(e.real + e.imag, -1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:   def testMismatchedDtypes(self):",
          "94:     tensor = constant_op.constant([[0, 1], [2, 3]], dtype=dtypes_lib.float32)",
          "95:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "96:                                 \"Invalid output dtype\"):",
          "97:       self.evaluate(",
          "98:           gen_linalg_ops.eig(",
          "99:               input=tensor,",
          "100:               Tout=dtypes_lib.complex128,  # Expected dtype: complex64.",
          "101:               compute_v=True))",
          "",
          "---------------"
        ]
      }
    }
  ]
}