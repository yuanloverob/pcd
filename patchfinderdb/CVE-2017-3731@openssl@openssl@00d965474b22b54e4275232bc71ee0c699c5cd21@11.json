{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "83b90e40d312ef9f189990293e253b3c1e7e92a1",
      "candidate_info": {
        "commit_hash": "83b90e40d312ef9f189990293e253b3c1e7e92a1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/83b90e40d312ef9f189990293e253b3c1e7e92a1",
        "files": [
          "crypto/dsa/dsa_err.c",
          "crypto/dsa/dsa_gen.c",
          "include/openssl/dsa.h"
        ],
        "message": "dsa/dsa_gen: add error message for seed_len < 0\n\nprio openssl 1.1.0 seed_len < q was accepted and the seed argument was\nthen ignored. Now DSA_generate_parameters_ex() returns an error in such\na case but no error string.\n\nSigned-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1657)\n(cherry picked from commit af5474126546b558b0e6f8be4bec4b70977e24b7)",
        "before_after_code_files": [
          "crypto/dsdsa_err.c||crypto/dsa/dsa_err.c",
          "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c",
          "include/openssl/dsa.h||include/openssl/dsa.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_err.c||crypto/dsa/dsa_err.c": [
          "File: crypto/dsdsa_err.c -> crypto/dsa/dsa_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     {ERR_FUNC(DSA_F_DSA_BUILTIN_PARAMGEN), \"dsa_builtin_paramgen\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     {ERR_REASON(DSA_R_SEED_LEN_SMALL),",
          "60:      \"seed_len is less than the length of q\"},",
          "",
          "---------------"
        ],
        "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c": [
          "File: crypto/dsdsa_gen.c -> crypto/dsa/dsa_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:         if (seed_len < (size_t)qsize) {",
          "78:             DSAerr(DSA_F_DSA_BUILTIN_PARAMGEN, DSA_R_SEED_LEN_SMALL);",
          "80:         }",
          "",
          "---------------"
        ],
        "include/openssl/dsa.h||include/openssl/dsa.h": [
          "File: include/openssl/dsa.h -> include/openssl/dsa.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: # define DSA_R_NO_PARAMETERS_SET                          107",
          "275: # define DSA_R_PARAMETER_ENCODING_ERROR                   105",
          "276: # define DSA_R_Q_NOT_PRIME                                113",
          "278: #  ifdef  __cplusplus",
          "279: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277: # define DSA_R_SEED_LEN_SMALL                             110",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac162301b45a7458ced227437922141c692383ae",
      "candidate_info": {
        "commit_hash": "ac162301b45a7458ced227437922141c692383ae",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ac162301b45a7458ced227437922141c692383ae",
        "files": [
          "ssl/ssl_lib.c",
          "ssl/ssl_locl.h",
          "ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c"
        ],
        "message": "Majority rules, use session_ctx vs initial_ctx\n\nsession_ctx and initial_ctx are aliases of each other, and with the\nopaque data structures, there's no need to keep both around. Since\nthere were more references of session_ctx, replace all instances of\ninitial_ctx with session_ctx.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2340)",
        "before_after_code_files": [
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/ssl_locl.h||ssl/ssl_locl.h",
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:     s->tlsext_ocsp_resp = NULL;",
          "601:     s->tlsext_ocsp_resplen = -1;",
          "602:     SSL_CTX_up_ref(ctx);",
          "604: #ifndef OPENSSL_NO_EC",
          "605:     if (ctx->tlsext_ecpointformatlist) {",
          "606:         s->tlsext_ecpointformatlist =",
          "",
          "[Removed Lines]",
          "603:     s->initial_ctx = ctx;",
          "",
          "[Added Lines]",
          "603:     s->session_ctx = ctx;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1001:     OPENSSL_free(s->tlsext_hostname);",
          "1003: #ifndef OPENSSL_NO_EC",
          "1004:     OPENSSL_free(s->tlsext_ecpointformatlist);",
          "1005:     OPENSSL_free(s->tlsext_ellipticcurvelist);",
          "",
          "[Removed Lines]",
          "1002:     SSL_CTX_free(s->initial_ctx);",
          "",
          "[Added Lines]",
          "1002:     SSL_CTX_free(s->session_ctx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3380:     if (ssl->ctx == ctx)",
          "3381:         return ssl->ctx;",
          "3382:     if (ctx == NULL)",
          "3384:     new_cert = ssl_cert_dup(ctx->cert);",
          "3385:     if (new_cert == NULL) {",
          "3386:         return NULL;",
          "",
          "[Removed Lines]",
          "3383:         ctx = ssl->initial_ctx;",
          "",
          "[Added Lines]",
          "3383:         ctx = ssl->session_ctx;",
          "",
          "---------------"
        ],
        "ssl/ssl_locl.h||ssl/ssl_locl.h": [
          "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:     unsigned char *next_proto_negotiated;",
          "1090:     unsigned char next_proto_negotiated_len;",
          "1091: # endif",
          "1094:     STACK_OF(SRTP_PROTECTION_PROFILE) *srtp_profiles;",
          "",
          "[Removed Lines]",
          "1092: # define session_ctx initial_ctx",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2992:     int len, slen_full, slen;",
          "2993:     SSL_SESSION *sess;",
          "2994:     unsigned int hlen;",
          "2996:     unsigned char iv[EVP_MAX_IV_LENGTH];",
          "2997:     unsigned char key_name[TLSEXT_KEYNAME_LENGTH];",
          "2998:     int iv_len;",
          "",
          "[Removed Lines]",
          "2995:     SSL_CTX *tctx = s->initial_ctx;",
          "",
          "[Added Lines]",
          "2995:     SSL_CTX *tctx = s->session_ctx;",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2684:         ret =",
          "2685:             s->ctx->tlsext_servername_callback(s, &al,",
          "2686:                                                s->ctx->tlsext_servername_arg);",
          "2689:         ret =",
          "2691:                                                        s->",
          "2694:     switch (ret) {",
          "2695:     case SSL_TLSEXT_ERR_ALERT_FATAL:",
          "",
          "[Removed Lines]",
          "2687:     else if (s->initial_ctx != NULL",
          "2688:              && s->initial_ctx->tlsext_servername_callback != 0)",
          "2690:             s->initial_ctx->tlsext_servername_callback(s, &al,",
          "2692:                                                        initial_ctx->tlsext_servername_arg);",
          "",
          "[Added Lines]",
          "2687:     else if (s->session_ctx != NULL",
          "2688:              && s->session_ctx->tlsext_servername_callback != 0)",
          "2690:             s->session_ctx->tlsext_servername_callback(s, &al,",
          "2692:                                                        session_ctx->tlsext_servername_arg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2863:         ret =",
          "2864:             s->ctx->tlsext_servername_callback(s, &al,",
          "2865:                                                s->ctx->tlsext_servername_arg);",
          "2868:         ret =",
          "2870:                                                        s->",
          "",
          "[Removed Lines]",
          "2866:     else if (s->initial_ctx != NULL",
          "2867:              && s->initial_ctx->tlsext_servername_callback != 0)",
          "2869:             s->initial_ctx->tlsext_servername_callback(s, &al,",
          "2871:                                                        initial_ctx->tlsext_servername_arg);",
          "",
          "[Added Lines]",
          "2866:     else if (s->session_ctx != NULL",
          "2867:              && s->session_ctx->tlsext_servername_callback != 0)",
          "2869:             s->session_ctx->tlsext_servername_callback(s, &al,",
          "2871:                                                        session_ctx->tlsext_servername_arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3084:     unsigned char tick_hmac[EVP_MAX_MD_SIZE];",
          "3085:     HMAC_CTX *hctx = NULL;",
          "3086:     EVP_CIPHER_CTX *ctx;",
          "3090:     hctx = HMAC_CTX_new();",
          "",
          "[Removed Lines]",
          "3087:     SSL_CTX *tctx = s->initial_ctx;",
          "",
          "[Added Lines]",
          "3087:     SSL_CTX *tctx = s->session_ctx;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bc3bcb34946933bf14c7d8df3cc646f5f977160",
      "candidate_info": {
        "commit_hash": "6bc3bcb34946933bf14c7d8df3cc646f5f977160",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6bc3bcb34946933bf14c7d8df3cc646f5f977160",
        "files": [
          "util/TLSProxy/Message.pm"
        ],
        "message": "Fix a bug in TLSProxy where zero length messages were not being recorded\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "util/TLSProxy/Message.pm||util/TLSProxy/Message.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Message.pm||util/TLSProxy/Message.pm": [
          "File: util/TLSProxy/Message.pm -> util/TLSProxy/Message.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:                 $recoffset += 4;",
          "172:                 $payload = \"\";",
          "175:                     #Some payload data is present in this record",
          "176:                     if ($record->decrypt_len - $recoffset >= $messlen) {",
          "177:                         #We can complete the message with this record",
          "",
          "[Removed Lines]",
          "174:                 if ($recoffset < $record->decrypt_len) {",
          "",
          "[Added Lines]",
          "174:                 if ($recoffset <= $record->decrypt_len) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "695fea206b30d3c195dc95f8c1f8c5e29fc07113",
      "candidate_info": {
        "commit_hash": "695fea206b30d3c195dc95f8c1f8c5e29fc07113",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/695fea206b30d3c195dc95f8c1f8c5e29fc07113",
        "files": [
          "test/evp_test.c",
          "test/evptests.txt"
        ],
        "message": "Add function and reason checking to evp_test\n\nAdd options to check the function and reason code matches expected values.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 99f2f1dc3e5c95961f57ca41e9fbb76863e69e46)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:     const char *err, *aux_err;",
          "212:     char *expected_err;",
          "214:     int ntests;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:     char *func;",
          "216:     char *reason;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296: {",
          "297:     OPENSSL_free(t->expected_err);",
          "298:     t->expected_err = NULL;",
          "299:     OPENSSL_free(t->out_expected);",
          "300:     OPENSSL_free(t->out_received);",
          "301:     t->out_expected = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "303:     OPENSSL_free(t->func);",
          "304:     t->func = NULL;",
          "305:     OPENSSL_free(t->reason);",
          "306:     t->reason = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318: static int check_test_error(struct evp_test *t)",
          "319: {",
          "320:     if (!t->err && !t->expected_err)",
          "321:         return 1;",
          "322:     if (t->err && !t->expected_err) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:     unsigned long err;",
          "329:     const char *func;",
          "330:     const char *reason;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "335:                 t->start_line, t->expected_err);",
          "336:         return 0;",
          "337:     }",
          "339:         return 1;",
          "343:     return 0;",
          "344: }",
          "",
          "[Removed Lines]",
          "338:     if (strcmp(t->err, t->expected_err) == 0)",
          "341:     fprintf(stderr, \"Test line %d: expecting %s got %s\\n\",",
          "342:             t->start_line, t->expected_err, t->err);",
          "",
          "[Added Lines]",
          "350:     if (strcmp(t->err, t->expected_err) != 0) {",
          "351:         fprintf(stderr, \"Test line %d: expecting %s got %s\\n\",",
          "352:                 t->start_line, t->expected_err, t->err);",
          "353:         return 0;",
          "354:     }",
          "356:     if (t->func == NULL && t->reason == NULL)",
          "357:         return 1;",
          "359:     if (t->func == NULL || t->reason == NULL) {",
          "360:         fprintf(stderr, \"Test line %d: missing function or reason code\\n\",",
          "361:                 t->start_line);",
          "362:         return 0;",
          "363:     }",
          "365:     err = ERR_peek_error();",
          "366:     if (err == 0) {",
          "367:         fprintf(stderr, \"Test line %d, expected error \\\"%s:%s\\\" not set\\n\",",
          "368:                 t->start_line, t->func, t->reason);",
          "369:         return 0;",
          "370:     }",
          "372:     func = ERR_func_error_string(err);",
          "373:     reason = ERR_reason_error_string(err);",
          "375:     if (strcmp(func, t->func) == 0 && strcmp(reason, t->reason) == 0)",
          "378:     fprintf(stderr, \"Test line %d: expected error \\\"%s:%s\\\", got \\\"%s:%s\\\"\\n\",",
          "379:             t->start_line, t->func, t->reason, func, reason);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "494:             return 0;",
          "495:         }",
          "496:         t->expected_err = OPENSSL_strdup(value);",
          "498:             return 0;",
          "499:     } else {",
          "",
          "[Removed Lines]",
          "497:         if (!t->expected_err)",
          "",
          "[Added Lines]",
          "535:         if (t->expected_err == NULL)",
          "536:             return 0;",
          "537:     } else if (strcmp(keyword, \"Function\") == 0) {",
          "538:         if (t->func != NULL) {",
          "539:             fprintf(stderr, \"Line %d: multiple function lines\\n\", t->line);",
          "540:             return 0;",
          "541:         }",
          "542:         t->func = OPENSSL_strdup(value);",
          "543:         if (t->func == NULL)",
          "544:             return 0;",
          "545:     } else if (strcmp(keyword, \"Reason\") == 0) {",
          "546:         if (t->reason != NULL) {",
          "547:             fprintf(stderr, \"Line %d: multiple reason lines\\n\", t->line);",
          "548:             return 0;",
          "549:         }",
          "550:         t->reason = OPENSSL_strdup(value);",
          "551:         if (t->reason == NULL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79037e85140887276476e03ce941b1ff0382543d",
      "candidate_info": {
        "commit_hash": "79037e85140887276476e03ce941b1ff0382543d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/79037e85140887276476e03ce941b1ff0382543d",
        "files": [
          "apps/s_server.c"
        ],
        "message": "Fix no-dtls builds\n\nCommits f2ff1432f in master and 14d4d7eda in 1.1.0 broke the no-dtls build\nby moving the position of a \"#endif\" for OPENSSL_NO_DTLS in a change\nwhich is otherwise unrelated to DTLS. This puts it back to where it was.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2974)\n(cherry picked from commit 9998b32cb63b0bdd3d014abfa1d70e9a2c20a283)",
        "before_after_code_files": [
          "apps/s_server.c||apps/s_server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_server.c||apps/s_server.c": [
          "File: apps/s_server.c -> apps/s_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137: #ifndef OPENSSL_NO_DTLS",
          "138: static int enable_timeouts = 0;",
          "139: static long socket_mtu;",
          "141: #endif",
          "143: #ifndef OPENSSL_NO_PSK",
          "144: static const char psk_identity[] = \"Client_identity\";",
          "",
          "[Removed Lines]",
          "140: static int dtlslisten = 0;",
          "",
          "[Added Lines]",
          "146: static int dtlslisten = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}