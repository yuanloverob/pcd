{
  "cve_id": "CVE-2016-9559",
  "cve_desc": "coders/tiff.c in ImageMagick before 7.0.3.7 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via a crafted image.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "b61d35eaccc0a7ddeff8a1c3abfcd0a43ccf210b",
  "patch_info": {
    "commit_hash": "b61d35eaccc0a7ddeff8a1c3abfcd0a43ccf210b",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/b61d35eaccc0a7ddeff8a1c3abfcd0a43ccf210b",
    "files": [
      "MagickCore/property.c",
      "coders/tiff.c",
      "coders/txt.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/298",
    "before_after_code_files": [
      "MagickCore/property.c||MagickCore/property.c",
      "coders/tiff.c||coders/tiff.c",
      "coders/txt.c||coders/txt.c"
    ]
  },
  "patch_diff": {
    "MagickCore/property.c||MagickCore/property.c": [
      "File: MagickCore/property.c -> MagickCore/property.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "213: %                                                                             %",
      "214: %                                                                             %",
      "215: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
      "217: %  DefineImageProperty() associates an assignment string of the form",
      "218: %  \"key=value\" with an artifact or options. It is equivelent to",
      "219: %  SetImageProperty()",
      "",
      "[Removed Lines]",
      "216: %",
      "",
      "[Added Lines]",
      "216: %",
      "",
      "---------------"
    ],
    "coders/tiff.c||coders/tiff.c": [
      "File: coders/tiff.c -> coders/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "632:   uint32",
      "633:     count,",
      "634:     length,",
      "642:     (void) SetImageProperty(image,\"tiff:artist\",text,exception);",
      "644:     (void) SetImageProperty(image,\"tiff:copyright\",text,exception);",
      "646:     (void) SetImageProperty(image,\"tiff:timestamp\",text,exception);",
      "648:     (void) SetImageProperty(image,\"tiff:document\",text,exception);",
      "650:     (void) SetImageProperty(image,\"tiff:hostcomputer\",text,exception);",
      "652:     (void) SetImageProperty(image,\"comment\",text,exception);",
      "653:   if (TIFFGetField(tiff,TIFFTAG_MAKE,&text) == 1)",
      "654:     (void) SetImageProperty(image,\"tiff:make\",text,exception);",
      "655:   if (TIFFGetField(tiff,TIFFTAG_MODEL,&text) == 1)",
      "656:     (void) SetImageProperty(image,\"tiff:model\",text,exception);",
      "657:   if (TIFFGetField(tiff,TIFFTAG_OPIIMAGEID,&count,&text) == 1)",
      "659:       if (count >= MagickPathExtent)",
      "661:       (void) CopyMagickString(message,text,count+1);",
      "663:     }",
      "664:   if (TIFFGetField(tiff,TIFFTAG_PAGENAME,&text) == 1)",
      "665:     (void) SetImageProperty(image,\"label\",text,exception);",
      "666:   if (TIFFGetField(tiff,TIFFTAG_SOFTWARE,&text) == 1)",
      "667:     (void) SetImageProperty(image,\"tiff:software\",text,exception);",
      "668:   if (TIFFGetField(tiff,33423,&count,&text) == 1)",
      "670:       if (count >= MagickPathExtent)",
      "671:         count=MagickPathExtent-1;",
      "672:       (void) CopyMagickString(message,text,count+1);",
      "",
      "[Removed Lines]",
      "635:     type;",
      "637:   unsigned long",
      "641:   if (TIFFGetField(tiff,TIFFTAG_ARTIST,&text) == 1)",
      "643:   if (TIFFGetField(tiff,TIFFTAG_COPYRIGHT,&text) == 1)",
      "645:   if (TIFFGetField(tiff,TIFFTAG_DATETIME,&text) == 1)",
      "647:   if (TIFFGetField(tiff,TIFFTAG_DOCUMENTNAME,&text) == 1)",
      "649:   if (TIFFGetField(tiff,TIFFTAG_HOSTCOMPUTER,&text) == 1)",
      "651:   if (TIFFGetField(tiff,TIFFTAG_IMAGEDESCRIPTION,&text) == 1)",
      "658:     {",
      "660:         count=MagickPathExtent-1;",
      "662:       (void) SetImageProperty(image,\"tiff:image-id\",message,exception);",
      "669:     {",
      "",
      "[Added Lines]",
      "634:     length,",
      "635:     type;",
      "637:   unsigned long",
      "640:   if ((TIFFGetField(tiff,TIFFTAG_ARTIST,&text) == 1) &&",
      "641:       (text != (char *) NULL))",
      "643:   if ((TIFFGetField(tiff,TIFFTAG_COPYRIGHT,&text) == 1) &&",
      "644:       (text != (char *) NULL))",
      "646:   if ((TIFFGetField(tiff,TIFFTAG_DATETIME,&text) == 1) &&",
      "647:       (text != (char *) NULL))",
      "649:   if ((TIFFGetField(tiff,TIFFTAG_DOCUMENTNAME,&text) == 1) &&",
      "650:       (text != (char *) NULL))",
      "652:   if ((TIFFGetField(tiff,TIFFTAG_HOSTCOMPUTER,&text) == 1) &&",
      "653:       (text != (char *) NULL))",
      "655:   if ((TIFFGetField(tiff,TIFFTAG_IMAGEDESCRIPTION,&text) == 1) &&",
      "656:       (text != (char *) NULL))",
      "658:   if ((TIFFGetField(tiff,TIFFTAG_MAKE,&text) == 1) &&",
      "659:       (text != (char *) NULL))",
      "666:     {",
      "667:       if (count >= MagickPathExtent)",
      "669:       (void) CopyMagickString(message,text,count+1);",
      "670:       (void) SetImageProperty(image,\"tiff:image-id\",message,exception);",
      "672:   if ((TIFFGetField(tiff,TIFFTAG_PAGENAME,&text) == 1) &&",
      "673:       (text != (char *) NULL))",
      "680:     {",
      "681:       if (count >= MagickPathExtent)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "695:       }",
      "696:       case 0x04:",
      "697:       {",
      "699:         break;",
      "700:       }",
      "701:       default:",
      "",
      "[Removed Lines]",
      "698:         (void) SetImageProperty(image,\"tiff:subfiletype\",\"MASK\",exception);",
      "",
      "[Added Lines]",
      "710:         (void) SetImageProperty(image,\"tiff:subfiletype\",\"MASK\",exception);",
      "711:         break;",
      "",
      "---------------"
    ],
    "coders/txt.c||coders/txt.c": [
      "File: coders/txt.c -> coders/txt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "793:                 (void) WriteBlobString(image,tuple);",
      "794:                 (void) WriteBlobString(image,\" \");",
      "795:               }",
      "798:           }",
      "799:         (void) FormatLocaleString(buffer,MagickPathExtent,\"%.20g,%.20g: \",",
      "800:           (double) x,(double) y);",
      "",
      "[Removed Lines]",
      "796:             p+=GetPixelChannels(image);",
      "797:             continue;",
      "",
      "[Added Lines]",
      "796:             p+=GetPixelChannels(image);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5c755b61eb3dd3260d337b276570ec38de971591",
      "candidate_info": {
        "commit_hash": "5c755b61eb3dd3260d337b276570ec38de971591",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/5c755b61eb3dd3260d337b276570ec38de971591",
        "files": [
          "MagickCore/profile.c",
          "MagickCore/property.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "MagickCore/profile.c||MagickCore/profile.c",
          "MagickCore/property.c||MagickCore/property.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/property.c||MagickCore/property.c"
          ],
          "candidate": [
            "MagickCore/property.c||MagickCore/property.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/profile.c||MagickCore/profile.c": [
          "File: MagickCore/profile.c -> MagickCore/profile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1457:     count=(ssize_t) value;",
          "1458:     if ((count & 0x01) != 0)",
          "1459:       count++;",
          "1461:         (count > (ssize_t) length))",
          "1462:       break;",
          "1463:     if (id != profile_id)",
          "1464:       p+=count;",
          "1466:       {",
          "1467:         size_t",
          "1468:           extent,",
          "",
          "[Removed Lines]",
          "1460:     if ((count < 0) || (p > (datum+length-count)) ||",
          "1465:     else",
          "",
          "[Added Lines]",
          "1460:     if ((count < 0) || (p > (datum+length-count)) ||",
          "1465:     else",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1474:         StringInfo",
          "1480:           {",
          "1483:             (void) CopyMagickMemory(extract_profile->datum,datum,offset);",
          "1484:           }",
          "1485:         else",
          "1487:             offset=(p-datum);",
          "1488:             extract_count=profile->length;",
          "1489:             if ((extract_count & 0x01) != 0)",
          "",
          "[Removed Lines]",
          "1477:         extract_count=0;",
          "1478:         extent=(datum+length)-(p+count);",
          "1479:         if (profile == (StringInfo *) NULL)",
          "1481:             offset=(q-datum);",
          "1482:             extract_profile=AcquireStringInfo(offset+extent);",
          "1486:           {",
          "",
          "[Added Lines]",
          "1477:         extract_extent=0;",
          "1478:         extent=(datum+length)-(p+count);",
          "1479:         if (profile == (StringInfo *) NULL)",
          "1481:             offset=(q-datum);",
          "1482:             extract_profile=AcquireStringInfo(offset+extent);",
          "1486:           {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1514:   register const unsigned char",
          "1520:   ssize_t",
          "1521:     count;",
          "",
          "[Removed Lines]",
          "1517:   size_t",
          "1518:     length;",
          "",
          "[Added Lines]",
          "1517:   size_t",
          "1518:     length;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1889:       continue;",
          "1890:     if (length < 7)",
          "1891:       return(MagickFalse);",
          "1893:     count=(ssize_t) ReadProfileByte(&p,&length);",
          "1894:     if ((count > (ssize_t) length) || (count < 0))",
          "1896:     p+=count;",
          "1897:     if ((*p & 0x01) == 0)",
          "1898:       (void) ReadProfileByte(&p,&length);",
          "1900:     if ((count > (ssize_t) length) || (count < 0))",
          "1901:       return(MagickFalse);",
          "1903:       {",
          "1904:         if (image->units == PixelsPerCentimeterResolution)",
          "1905:           WriteProfileLong(MSBEndian, (unsigned int) (image->resolution.x*2.54*",
          "",
          "[Removed Lines]",
          "1892:     id=ReadProfileMSBShort(&p,&length);",
          "1895:       return(MagickFalse);",
          "1899:     count=(ssize_t) ReadProfileMSBLong(&p,&length);",
          "1902:     if ((id == 0x3ED) && (count == 16))",
          "",
          "[Added Lines]",
          "1892:     id=ReadProfileMSBShort(&p,&length);",
          "1895:       return(MagickFalse);",
          "1899:     count=(ssize_t) ReadProfileMSBLong(&p,&length);",
          "1902:     if ((id == 0x3ED) && (count == 16))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1938:     size_t",
          "1939:       entry;",
          "1940:   } DirectoryInfo;",
          "1942:   DirectoryInfo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1940:   } DirectoryInfo;",
          "1942:   DirectoryInfo",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1993:       id=(ssize_t) ReadProfileShort(LSBEndian,exif);",
          "1994:     }",
          "1995:   endian=LSBEndian;",
          "1997:     endian=LSBEndian;",
          "1998:   else",
          "1999:     if (id == 0x4D4D)",
          "2000:       endian=MSBEndian;",
          "2001:     else",
          "2002:       return(MagickFalse);",
          "2003:   if (ReadProfileShort(endian,exif+2) != 0x002a)",
          "",
          "[Removed Lines]",
          "1996:   if (id == 0x4949)",
          "",
          "[Added Lines]",
          "1999:   if (id == 0x4949)",
          "2004:     else",
          "2005:       return(MagickFalse);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2031:         components;",
          "2033:       register unsigned char",
          "2037:       size_t",
          "2040:       ssize_t",
          "2041:         format,",
          "",
          "[Removed Lines]",
          "2038:         number_bytes;",
          "",
          "[Added Lines]",
          "2046:         format,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2048:       format=(ssize_t) ReadProfileShort(endian,q+2);",
          "2049:       if ((format < 0) || ((format-1) >= EXIF_NUM_FORMATS))",
          "2050:         break;",
          "2052:       if (components < 0)",
          "2054:       number_bytes=(size_t) components*format_bytes[format];",
          "",
          "[Removed Lines]",
          "2051:       components=(ssize_t) ReadProfileLong(endian,q+4);",
          "",
          "[Added Lines]",
          "2059:       components=(int) ReadProfileLong(endian,q+4);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2095:         }",
          "2096:         case 0x0128:",
          "2097:         {",
          "2099:             {",
          "2100:               (void) WriteProfileLong(endian,(size_t) (image->units+1),p);",
          "2101:               break;",
          "",
          "[Removed Lines]",
          "2098:           if (number_bytes == 4)",
          "",
          "[Added Lines]",
          "2106:           if (number_bytes == 4)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2107:           break;",
          "2108:       }",
          "2109:       if ((tag_value == TAG_EXIF_OFFSET) || (tag_value == TAG_INTEROP_OFFSET))",
          "2111:           offset=(ssize_t)  ReadProfileLong(endian,p);",
          "2112:           if (((size_t) offset < length) && (level < (MaxDirectoryStack-2)))",
          "2113:             {",
          "",
          "[Removed Lines]",
          "2110:         {",
          "",
          "[Added Lines]",
          "2118:         {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2121:               if ((directory+2+(12*number_entries)) > (exif+length))",
          "2122:                 break;",
          "2123:               offset=(ssize_t)  ReadProfileLong(endian,directory+2+(12*",
          "2124:                 number_entries));",
          "2125:               if ((offset != 0) && ((size_t) offset < length) &&",
          "2126:                   (level < (MaxDirectoryStack-2)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2132:                 number_entries));",
          "",
          "---------------"
        ],
        "MagickCore/property.c||MagickCore/property.c": [
          "File: MagickCore/property.c -> MagickCore/property.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213: %                                                                             %",
          "214: %                                                                             %",
          "215: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "217: %  DefineImageProperty() associates an assignment string of the form",
          "218: %  \"key=value\" with an artifact or options. It is equivelent to",
          "219: %  SetImageProperty()",
          "",
          "[Removed Lines]",
          "216: %",
          "",
          "[Added Lines]",
          "216: %",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "855: #define TAG_EXIF_OFFSET  0x8769",
          "856: #define TAG_GPS_OFFSET  0x8825",
          "857: #define TAG_INTEROP_OFFSET  0xa005",
          "859: #define EXIFMultipleValues(size,format,arg) \\",
          "860: { \\",
          "861:    ssize_t \\",
          "862:      component; \\",
          "864:    size_t \\",
          "865:      length1; \\",
          "866:  \\",
          "871:    p1=p; \\",
          "872:    for (component=0; component < components; component++) \\",
          "875:        format\", \",arg); \\",
          "876:      if (length1 >= (MagickPathExtent-1)) \\",
          "877:        length1=MagickPathExtent-1; \\",
          "",
          "[Removed Lines]",
          "863:  \\",
          "867:    unsigned char \\",
          "869:  \\",
          "870:    length1=0; \\",
          "873:    { \\",
          "874:      length1+=FormatLocaleString(buffer+length1,MagickPathExtent-length1, \\",
          "",
          "[Added Lines]",
          "863:  \\",
          "867:    unsigned char \\",
          "869:  \\",
          "870:    length=0; \\",
          "873:    { \\",
          "874:      length+=FormatLocaleString(buffer+length,MagickPathExtent-length, \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "881:      buffer[length1-2]='\\0'; \\",
          "882:    value=AcquireString(buffer); \\",
          "883: }",
          "885: #define EXIFMultipleFractions(size,format,arg1,arg2) \\",
          "886: { \\",
          "887:    ssize_t \\",
          "888:      component; \\",
          "890:    size_t \\",
          "891:      length1; \\",
          "892:  \\",
          "897:    p1=p; \\",
          "898:    for (component=0; component < components; component++) \\",
          "901:        format\", \",(arg1),(arg2)); \\",
          "902:      if (length1 >= (MagickPathExtent-1)) \\",
          "903:        length1=MagickPathExtent-1; \\",
          "",
          "[Removed Lines]",
          "889:  \\",
          "893:    unsigned char \\",
          "895:  \\",
          "896:    length1=0; \\",
          "899:    { \\",
          "900:      length1+=FormatLocaleString(buffer+length1,MagickPathExtent-length1, \\",
          "",
          "[Added Lines]",
          "889:  \\",
          "893:    unsigned char \\",
          "895:  \\",
          "896:    length=0; \\",
          "899:    { \\",
          "900:      length+=FormatLocaleString(buffer+length,MagickPathExtent-length, \\",
          "",
          "---------------"
        ]
      }
    }
  ]
}