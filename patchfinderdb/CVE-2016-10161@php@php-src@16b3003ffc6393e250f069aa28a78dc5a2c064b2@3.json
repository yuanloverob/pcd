{
  "cve_id": "CVE-2016-10161",
  "cve_desc": "The object_common1 function in ext/standard/var_unserializer.c in PHP before 5.6.30, 7.0.x before 7.0.15, and 7.1.x before 7.1.1 allows remote attackers to cause a denial of service (buffer over-read and application crash) via crafted serialized data that is mishandled in a finish_nested_data call.",
  "repo": "php/php-src",
  "patch_hash": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
  "patch_info": {
    "commit_hash": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/16b3003ffc6393e250f069aa28a78dc5a2c064b2",
    "files": [
      "ext/standard/tests/serialize/bug73825.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()",
    "before_after_code_files": [
      "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt": [
      "File: ext/standard/tests/serialize/bug73825.phpt -> ext/standard/tests/serialize/bug73825.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()",
      "3: --FILE--",
      "4: <?php",
      "5: $obj = unserialize('O:8:\"00000000\":');",
      "6: var_dump($obj);",
      "7: ?>",
      "8: --EXPECTF--",
      "9: Warning: Bad unserialize data in %sbug73825.php on line %d",
      "11: Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d",
      "12: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "405: {",
      "406:  long elements;",
      "408:  elements = parse_iv2((*p) + 2, p);",
      "410:  (*p) += 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "408:  if( *p >= max - 2) {",
      "409:   zend_error(E_WARNING, \"Bad unserialize data\");",
      "410:   return -1;",
      "411:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "417:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
      "419:  }",
      "421:  return elements;",
      "",
      "[Removed Lines]",
      "418:   return 0;",
      "",
      "[Added Lines]",
      "423:   return -1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "496: {",
      "497:  YYCTYPE yych;",
      "498:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "495: #line 496 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "500: #line 501 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "552:  yych = *(YYMARKER = ++YYCURSOR);",
      "553:  if (yych == ':') goto yy95;",
      "554: yy3:",
      "556:  { return 0; }",
      "558: yy4:",
      "559:  yych = *(YYMARKER = ++YYCURSOR);",
      "560:  if (yych == ':') goto yy89;",
      "",
      "[Removed Lines]",
      "555: #line 861 \"ext/standard/var_unserializer.re\"",
      "557: #line 558 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "560: #line 875 \"ext/standard/var_unserializer.re\"",
      "562: #line 563 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "597:  goto yy3;",
      "598: yy14:",
      "599:  ++YYCURSOR;",
      "601:  {",
      "603:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
      "605: }",
      "607: yy16:",
      "608:  yych = *++YYCURSOR;",
      "609:  goto yy3;",
      "",
      "[Removed Lines]",
      "600: #line 855 \"ext/standard/var_unserializer.re\"",
      "606: #line 607 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "605: #line 869 \"ext/standard/var_unserializer.re\"",
      "611: #line 612 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "634:  yych = *++YYCURSOR;",
      "635:  if (yych != '\"') goto yy18;",
      "636:  ++YYCURSOR;",
      "638:  {",
      "639:  size_t len, len2, len3, maxlen;",
      "640:  long elements;",
      "",
      "[Removed Lines]",
      "637: #line 708 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "642: #line 717 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "775:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "777:  if (incomplete_class) {",
      "778:   php_store_class_name(*rval, class_name, len2);",
      "779:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "782:  if (elements < 0) {",
      "783:     efree(class_name);",
      "784:     return 0;",
      "785:  }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "782:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "783: }",
      "785: yy25:",
      "786:  yych = *++YYCURSOR;",
      "787:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "784: #line 785 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "794: #line 795 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "806:  yych = *++YYCURSOR;",
      "807:  if (yych != '\"') goto yy18;",
      "808:  ++YYCURSOR;",
      "810:  {",
      "811:     if (!var_hash) return 0;",
      "813:  INIT_PZVAL(*rval);",
      "817: }",
      "819: yy32:",
      "820:  yych = *++YYCURSOR;",
      "821:  if (yych == '+') goto yy33;",
      "",
      "[Removed Lines]",
      "809: #line 699 \"ext/standard/var_unserializer.re\"",
      "815:  return object_common2(UNSERIALIZE_PASSTHRU,",
      "816:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
      "818: #line 819 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "819: #line 704 \"ext/standard/var_unserializer.re\"",
      "821:  long elements;",
      "826:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "827:  if (elements < 0) {",
      "828:   return 0;",
      "829:  }",
      "830:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "832: #line 833 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "836:  yych = *++YYCURSOR;",
      "837:  if (yych != '{') goto yy18;",
      "838:  ++YYCURSOR;",
      "840:  {",
      "841:  long elements = parse_iv(start + 2);",
      "",
      "[Removed Lines]",
      "839: #line 678 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "853: #line 683 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "858:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "859: }",
      "861: yy39:",
      "862:  yych = *++YYCURSOR;",
      "863:  if (yych == '+') goto yy40;",
      "",
      "[Removed Lines]",
      "860: #line 861 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "874: #line 875 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "878:  yych = *++YYCURSOR;",
      "879:  if (yych != '\"') goto yy18;",
      "880:  ++YYCURSOR;",
      "882:  {",
      "883:  size_t len, maxlen;",
      "884:  char *str;",
      "",
      "[Removed Lines]",
      "881: #line 643 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "895: #line 648 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "913:  ZVAL_STRINGL(*rval, str, len, 0);",
      "914:  return 1;",
      "915: }",
      "917: yy46:",
      "918:  yych = *++YYCURSOR;",
      "919:  if (yych == '+') goto yy47;",
      "",
      "[Removed Lines]",
      "916: #line 917 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "930: #line 931 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "934:  yych = *++YYCURSOR;",
      "935:  if (yych != '\"') goto yy18;",
      "936:  ++YYCURSOR;",
      "938:  {",
      "939:  size_t len, maxlen;",
      "940:  char *str;",
      "",
      "[Removed Lines]",
      "937: #line 610 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "951: #line 615 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "967:  ZVAL_STRINGL(*rval, str, len, 1);",
      "968:  return 1;",
      "969: }",
      "971: yy53:",
      "972:  yych = *++YYCURSOR;",
      "973:  if (yych <= '/') {",
      "",
      "[Removed Lines]",
      "970: #line 971 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "984: #line 985 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1055:  }",
      "1056: yy63:",
      "1057:  ++YYCURSOR;",
      "1059:  {",
      "1060: #if SIZEOF_LONG == 4",
      "1061: use_double:",
      "",
      "[Removed Lines]",
      "1058: #line 600 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1072: #line 605 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "1065:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
      "1066:  return 1;",
      "1067: }",
      "1069: yy65:",
      "1070:  yych = *++YYCURSOR;",
      "1071:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "1124:  yych = *++YYCURSOR;",
      "1125:  if (yych != ';') goto yy18;",
      "1126:  ++YYCURSOR;",
      "1128:  {",
      "1130:  INIT_PZVAL(*rval);",
      "",
      "[Removed Lines]",
      "1127: #line 585 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1141: #line 590 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "1140:  return 1;",
      "1141: }",
      "1143: yy76:",
      "1144:  yych = *++YYCURSOR;",
      "1145:  if (yych == 'N') goto yy73;",
      "",
      "[Removed Lines]",
      "1142: #line 1143 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1156: #line 1157 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "1166:  if (yych <= '9') goto yy79;",
      "1167:  if (yych != ';') goto yy18;",
      "1168:  ++YYCURSOR;",
      "1170:  {",
      "1171: #if SIZEOF_LONG == 4",
      "1172:  int digits = YYCURSOR - start - 3;",
      "",
      "[Removed Lines]",
      "1169: #line 558 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1183: #line 563 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "1193:  ZVAL_LONG(*rval, parse_iv(start + 2));",
      "1194:  return 1;",
      "1195: }",
      "1197: yy83:",
      "1198:  yych = *++YYCURSOR;",
      "1199:  if (yych <= '/') goto yy18;",
      "",
      "[Removed Lines]",
      "1196: #line 1197 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "1201:  yych = *++YYCURSOR;",
      "1202:  if (yych != ';') goto yy18;",
      "1203:  ++YYCURSOR;",
      "1205:  {",
      "1207:  INIT_PZVAL(*rval);",
      "1208:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
      "1209:  return 1;",
      "1210: }",
      "1212: yy87:",
      "1213:  ++YYCURSOR;",
      "1215:  {",
      "1217:  INIT_PZVAL(*rval);",
      "1218:  ZVAL_NULL(*rval);",
      "1219:  return 1;",
      "1220: }",
      "1222: yy89:",
      "1223:  yych = *++YYCURSOR;",
      "1224:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1204: #line 551 \"ext/standard/var_unserializer.re\"",
      "1211: #line 1212 \"ext/standard/var_unserializer.c\"",
      "1214: #line 544 \"ext/standard/var_unserializer.re\"",
      "1221: #line 1222 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1218: #line 556 \"ext/standard/var_unserializer.re\"",
      "1225: #line 1226 \"ext/standard/var_unserializer.c\"",
      "1228: #line 549 \"ext/standard/var_unserializer.re\"",
      "1235: #line 1236 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "1241:  if (yych <= '9') goto yy91;",
      "1242:  if (yych != ';') goto yy18;",
      "1243:  ++YYCURSOR;",
      "1245:  {",
      "1246:  long id;",
      "",
      "[Removed Lines]",
      "1244: #line 521 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1258: #line 526 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "1265:  return 1;",
      "1266: }",
      "1268: yy95:",
      "1269:  yych = *++YYCURSOR;",
      "1270:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1267: #line 1268 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1281: #line 1282 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1287:  if (yych <= '9') goto yy97;",
      "1288:  if (yych != ';') goto yy18;",
      "1289:  ++YYCURSOR;",
      "1291:  {",
      "1292:  long id;",
      "",
      "[Removed Lines]",
      "1290: #line 500 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1304: #line 505 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "1309:  return 1;",
      "1310: }",
      "1312: }",
      "1316:  return 0;",
      "",
      "[Removed Lines]",
      "1311: #line 1312 \"ext/standard/var_unserializer.c\"",
      "1313: #line 863 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1325: #line 1326 \"ext/standard/var_unserializer.c\"",
      "1327: #line 877 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "409: {",
      "410:  long elements;",
      "412:  elements = parse_iv2((*p) + 2, p);",
      "414:  (*p) += 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "412:  if( *p >= max - 2) {",
      "413:   zend_error(E_WARNING, \"Bad unserialize data\");",
      "414:   return -1;",
      "415:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
      "423:  }",
      "425:  return elements;",
      "",
      "[Removed Lines]",
      "422:   return 0;",
      "",
      "[Added Lines]",
      "427:   return -1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "697: }",
      "699: \"o:\" iv \":\" [\"] {",
      "700:     if (!var_hash) return 0;",
      "702:  INIT_PZVAL(*rval);",
      "706: }",
      "708: object \":\" uiv \":\" [\"] {",
      "",
      "[Removed Lines]",
      "704:  return object_common2(UNSERIALIZE_PASSTHRU,",
      "705:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
      "",
      "[Added Lines]",
      "705:  long elements;",
      "710:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "711:  if (elements < 0) {",
      "712:   return 0;",
      "713:  }",
      "714:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "845:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "847:  if (incomplete_class) {",
      "848:   php_store_class_name(*rval, class_name, len2);",
      "849:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "856:  if (elements < 0) {",
      "857:     efree(class_name);",
      "858:     return 0;",
      "859:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ee5e813ab5e97624a8474269ed5bdb7f6b85de5",
      "candidate_info": {
        "commit_hash": "6ee5e813ab5e97624a8474269ed5bdb7f6b85de5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6ee5e813ab5e97624a8474269ed5bdb7f6b85de5",
        "files": [
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "var_push_dtor_no_addref() is useles (var_push_dtor() doesn't work properly as well)",
        "before_after_code_files": [
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:  var_hash->data[var_hash->used_slots++] = rval;",
          "84: }",
          "86: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "87: {",
          "88:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87: #if 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:  var_hash->data[var_hash->used_slots++] = rval;",
          "108: }",
          "110: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "111: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "210: #line 215 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "213: #line 218 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "439:  start = cursor;",
          "443: {",
          "444:  YYCTYPE yych;",
          "445:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "442: #line 443 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "445: #line 446 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "499:  yych = *(YYMARKER = ++YYCURSOR);",
          "500:  if (yych == ':') goto yy95;",
          "501: yy3:",
          "503:  { return 0; }",
          "505: yy4:",
          "506:  yych = *(YYMARKER = ++YYCURSOR);",
          "507:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "502: #line 789 \"ext/standard/var_unserializer.re\"",
          "504: #line 505 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "505: #line 792 \"ext/standard/var_unserializer.re\"",
          "507: #line 508 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "544:  goto yy3;",
          "545: yy14:",
          "546:  ++YYCURSOR;",
          "548:  {",
          "550:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "552: }",
          "554: yy16:",
          "555:  yych = *++YYCURSOR;",
          "556:  goto yy3;",
          "",
          "[Removed Lines]",
          "547: #line 783 \"ext/standard/var_unserializer.re\"",
          "553: #line 554 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "550: #line 786 \"ext/standard/var_unserializer.re\"",
          "556: #line 557 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "580:  yych = *++YYCURSOR;",
          "581:  if (yych != '\"') goto yy18;",
          "582:  ++YYCURSOR;",
          "584:  {",
          "585:  size_t len, len2, len3, maxlen;",
          "586:  long elements;",
          "",
          "[Removed Lines]",
          "583: #line 644 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "586: #line 647 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "720:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "721: }",
          "723: yy25:",
          "724:  yych = *++YYCURSOR;",
          "725:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "722: #line 723 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "725: #line 726 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "744:  yych = *++YYCURSOR;",
          "745:  if (yych != '\"') goto yy18;",
          "746:  ++YYCURSOR;",
          "748:  {",
          "",
          "[Removed Lines]",
          "747: #line 636 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "750: #line 639 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "752:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "753:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "754: }",
          "756: yy32:",
          "757:  yych = *++YYCURSOR;",
          "758:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "755: #line 756 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "758: #line 759 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "773:  yych = *++YYCURSOR;",
          "774:  if (yych != '{') goto yy18;",
          "775:  ++YYCURSOR;",
          "777:  {",
          "778:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "776: #line 615 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "779: #line 618 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "795:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "796: }",
          "798: yy39:",
          "799:  yych = *++YYCURSOR;",
          "800:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "797: #line 798 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "800: #line 801 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "815:  yych = *++YYCURSOR;",
          "816:  if (yych != '\"') goto yy18;",
          "817:  ++YYCURSOR;",
          "819:  {",
          "820:  size_t len, maxlen;",
          "",
          "[Removed Lines]",
          "818: #line 585 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "821: #line 588 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "845:  efree(str);",
          "846:  return 1;",
          "847: }",
          "849: yy46:",
          "850:  yych = *++YYCURSOR;",
          "851:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "848: #line 849 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "851: #line 852 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "866:  yych = *++YYCURSOR;",
          "867:  if (yych != '\"') goto yy18;",
          "868:  ++YYCURSOR;",
          "870:  {",
          "871:  size_t len, maxlen;",
          "872:  char *str;",
          "",
          "[Removed Lines]",
          "869: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "872: #line 561 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "893:  ZVAL_STRINGL(rval, str, len);",
          "894:  return 1;",
          "895: }",
          "897: yy53:",
          "898:  yych = *++YYCURSOR;",
          "899:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "896: #line 897 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "899: #line 900 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "981:  }",
          "982: yy63:",
          "983:  ++YYCURSOR;",
          "985:  {",
          "986: #if SIZEOF_LONG == 4",
          "987: use_double:",
          "",
          "[Removed Lines]",
          "984: #line 549 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "987: #line 552 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "990:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "991:  return 1;",
          "992: }",
          "994: yy65:",
          "995:  yych = *++YYCURSOR;",
          "996:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "993: #line 994 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "996: #line 997 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1049:  yych = *++YYCURSOR;",
          "1050:  if (yych != ';') goto yy18;",
          "1051:  ++YYCURSOR;",
          "1053:  {",
          "",
          "[Removed Lines]",
          "1052: #line 533 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1055: #line 536 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1066:  return 1;",
          "1067: }",
          "1069: yy76:",
          "1070:  yych = *++YYCURSOR;",
          "1071:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1071: #line 1072 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1092:  if (yych <= '9') goto yy79;",
          "1093:  if (yych != ';') goto yy18;",
          "1094:  ++YYCURSOR;",
          "1096:  {",
          "1097: #if SIZEOF_LONG == 4",
          "1098:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1095: #line 507 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1098: #line 510 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1118:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1119:  return 1;",
          "1120: }",
          "1122: yy83:",
          "1123:  yych = *++YYCURSOR;",
          "1124:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1121: #line 1122 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1124: #line 1125 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1126:  yych = *++YYCURSOR;",
          "1127:  if (yych != ';') goto yy18;",
          "1128:  ++YYCURSOR;",
          "1130:  {",
          "1132:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1133:  return 1;",
          "1134: }",
          "1136: yy87:",
          "1137:  ++YYCURSOR;",
          "1139:  {",
          "1141:  ZVAL_NULL(rval);",
          "1142:  return 1;",
          "1143: }",
          "1145: yy89:",
          "1146:  yych = *++YYCURSOR;",
          "1147:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1129: #line 501 \"ext/standard/var_unserializer.re\"",
          "1135: #line 1136 \"ext/standard/var_unserializer.c\"",
          "1138: #line 495 \"ext/standard/var_unserializer.re\"",
          "1144: #line 1145 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1132: #line 504 \"ext/standard/var_unserializer.re\"",
          "1138: #line 1139 \"ext/standard/var_unserializer.c\"",
          "1141: #line 498 \"ext/standard/var_unserializer.re\"",
          "1147: #line 1148 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1164:  if (yych <= '9') goto yy91;",
          "1165:  if (yych != ';') goto yy18;",
          "1166:  ++YYCURSOR;",
          "1168:  {",
          "1169:  long id;",
          "",
          "[Removed Lines]",
          "1167: #line 472 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1170: #line 475 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1185:  ZVAL_COPY(rval, rval_ref);",
          "1188:  return 1;",
          "1189: }",
          "1191: yy95:",
          "1192:  yych = *++YYCURSOR;",
          "1193:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1182:  if (!ZVAL_IS_UNDEF(rval)) {",
          "1183:   var_push_dtor_no_addref(var_hash, rval);",
          "1184:  }",
          "1190: #line 1191 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1193: #line 1194 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1210:  if (yych <= '9') goto yy97;",
          "1211:  if (yych != ';') goto yy18;",
          "1212:  ++YYCURSOR;",
          "1214:  {",
          "1215:  long id;",
          "",
          "[Removed Lines]",
          "1213: #line 447 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1216: #line 450 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1236:  return 1;",
          "1237: }",
          "1239: }",
          "1243:  return 0;",
          "",
          "[Removed Lines]",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1240: #line 791 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1241: #line 1242 \"ext/standard/var_unserializer.c\"",
          "1243: #line 794 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  var_hash->data[var_hash->used_slots++] = rval;",
          "82: }",
          "84: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "85: {",
          "86:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: #if 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:  var_hash->data[var_hash->used_slots++] = rval;",
          "106: }",
          "108: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "109: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "489:  ZVAL_COPY(rval, rval_ref);",
          "",
          "[Removed Lines]",
          "486:  if (!ZVAL_IS_UNDEF(rval)) {",
          "487:   var_push_dtor_no_addref(var_hash, rval);",
          "488:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
      "candidate_info": {
        "commit_hash": "9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
        "files": [
          "Zend/zend_ast.c",
          "Zend/zend_builtin_functions.c",
          "Zend/zend_closures.c",
          "Zend/zend_compile.c",
          "Zend/zend_hash.c",
          "Zend/zend_hash.h",
          "Zend/zend_operators.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "ext/dom/xpath.c",
          "ext/libxml/libxml.c",
          "ext/mbstring/mbstring.c",
          "ext/mysqli/mysqli_nonapi.c",
          "ext/mysqli/mysqli_prop.c",
          "ext/reflection/php_reflection.c",
          "ext/simplexml/simplexml.c",
          "ext/spl/spl_fixedarray.c",
          "ext/sqlite3/sqlite3.c",
          "ext/standard/array.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c"
        ],
        "message": "Avoid HashTable allocations for empty arrays (using zend_empty_array).",
        "before_after_code_files": [
          "Zend/zend_ast.c||Zend/zend_ast.c",
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_closures.c||Zend/zend_closures.c",
          "Zend/zend_compile.c||Zend/zend_compile.c",
          "Zend/zend_hash.c||Zend/zend_hash.c",
          "Zend/zend_hash.h||Zend/zend_hash.h",
          "Zend/zend_operators.c||Zend/zend_operators.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "ext/dom/xpath.c||ext/dom/xpath.c",
          "ext/libxml/libxml.c||ext/libxml/libxml.c",
          "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c",
          "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c",
          "ext/mysqli/mysqli_prop.c||ext/mysqli/mysqli_prop.c",
          "ext/reflection/php_reflection.c||ext/reflection/php_reflection.c",
          "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c",
          "ext/spl/spl_fixedarray.c||ext/spl/spl_fixedarray.c",
          "ext/sqlite3/sqlite3.c||ext/sqlite3/sqlite3.c",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_ast.c||Zend/zend_ast.c": [
          "File: Zend/zend_ast.c -> Zend/zend_ast.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:    }",
          "409:    break;",
          "410:   case ZEND_AST_ARRAY:",
          "412:    {",
          "413:     uint32_t i;",
          "414:     zend_ast_list *list = zend_ast_get_list(ast);",
          "415:     for (i = 0; i < list->children; i++) {",
          "416:      zend_ast *elem = list->child[i];",
          "417:      if (elem->child[1]) {",
          "",
          "[Removed Lines]",
          "411:    array_init(result);",
          "",
          "[Added Lines]",
          "415:     if (!list->children) {",
          "416:      ZVAL_EMPTY_ARRAY(result);",
          "417:      break;",
          "418:     }",
          "419:     array_init(result);",
          "",
          "---------------"
        ],
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "473:  arg_count = ZEND_CALL_NUM_ARGS(ex);",
          "476:  if (arg_count) {",
          "477:   first_extra_arg = ex->func->op_array.num_args;",
          "478:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "479:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "",
          "[Removed Lines]",
          "475:  array_init_size(return_value, arg_count);",
          "",
          "[Added Lines]",
          "476:   array_init_size(return_value, arg_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "512:    }",
          "513:   } ZEND_HASH_FILL_END();",
          "514:   Z_ARRVAL_P(return_value)->nNumOfElements = arg_count;",
          "515:  }",
          "516: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "515:  } else {",
          "516:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2122: {",
          "2123:  uint32_t num_args = ZEND_CALL_NUM_ARGS(call);",
          "2126:  if (num_args) {",
          "2127:   uint32_t i = 0;",
          "2128:   zval *p = ZEND_CALL_ARG(call, 1);",
          "2130:   zend_hash_real_init(Z_ARRVAL_P(arg_array), 1);",
          "2131:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(arg_array)) {",
          "2132:    if (call->func->type == ZEND_USER_FUNCTION) {",
          "",
          "[Removed Lines]",
          "2125:  array_init_size(arg_array, num_args);",
          "",
          "[Added Lines]",
          "2131:   array_init_size(arg_array, num_args);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2184:    }",
          "2185:   } ZEND_HASH_FILL_END();",
          "2186:   Z_ARRVAL_P(arg_array)->nNumOfElements = num_args;",
          "2187:  }",
          "2188: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2189:  } else {",
          "2190:   ZVAL_EMPTY_ARRAY(arg_array);",
          "",
          "---------------"
        ],
        "Zend/zend_closures.c||Zend/zend_closures.c": [
          "File: Zend/zend_closures.c -> Zend/zend_closures.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:  fci.params = params;",
          "252:  fci.param_count = 2;",
          "253:  ZVAL_STR(&fci.params[0], EX(func)->common.function_name);",
          "257:  fci.object = Z_OBJ(EX(This));",
          "258:  fcc.object = Z_OBJ(EX(This));",
          "",
          "[Removed Lines]",
          "254:  array_init(&fci.params[1]);",
          "255:  zend_copy_parameters_array(ZEND_NUM_ARGS(), &fci.params[1]);",
          "",
          "[Added Lines]",
          "254:  if (ZEND_NUM_ARGS()) {",
          "255:   array_init_size(&fci.params[1], ZEND_NUM_ARGS());",
          "256:   zend_copy_parameters_array(ZEND_NUM_ARGS(), &fci.params[1]);",
          "257:  } else {",
          "258:   ZVAL_EMPTY_ARRAY(&fci.params[1]);",
          "259:  }",
          "",
          "---------------"
        ],
        "Zend/zend_compile.c||Zend/zend_compile.c": [
          "File: Zend/zend_compile.c -> Zend/zend_compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6949:   return 0;",
          "6950:  }",
          "6952:  array_init_size(result, list->children);",
          "6953:  for (i = 0; i < list->children; ++i) {",
          "6954:   zend_ast *elem_ast = list->child[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6952:  if (!list->children) {",
          "6953:   ZVAL_EMPTY_ARRAY(result);",
          "6954:   return 1;",
          "6955:  }",
          "",
          "---------------"
        ],
        "Zend/zend_hash.c||Zend/zend_hash.c": [
          "File: Zend/zend_hash.c -> Zend/zend_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: static const uint32_t uninitialized_bucket[-HT_MIN_MASK] =",
          "158:  {HT_INVALID_IDX, HT_INVALID_IDX};",
          "160: static zend_always_inline void _zend_hash_init_int(HashTable *ht, uint32_t nSize, dtor_func_t pDestructor, zend_bool persistent)",
          "161: {",
          "162:  GC_REFCOUNT(ht) = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160: ZEND_API const HashTable zend_empty_array = {",
          "161:  .gc.refcount = 2,",
          "162:  .gc.u.type_info = IS_ARRAY | (GC_IMMUTABLE << GC_FLAGS_SHIFT),",
          "163:  .u.flags = HASH_FLAG_STATIC_KEYS,",
          "164:  .nTableMask = HT_MIN_MASK,",
          "165:  .arData = (Bucket*)&uninitialized_bucket[2],",
          "166:  .nNumUsed = 0,",
          "167:  .nNumOfElements = 0,",
          "168:  .nTableSize = HT_MIN_SIZE,",
          "169:  .nInternalPointer = HT_INVALID_IDX,",
          "170:  .nNextFreeElement = 0,",
          "171:  .pDestructor = ZVAL_PTR_DTOR",
          "172: };",
          "",
          "---------------"
        ],
        "Zend/zend_hash.h||Zend/zend_hash.h": [
          "File: Zend/zend_hash.h -> Zend/zend_hash.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: # define HT_ALLOW_COW_VIOLATION(ht)",
          "57: #endif",
          "59: typedef struct _zend_hash_key {",
          "60:  zend_ulong h;",
          "61:  zend_string *key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: extern ZEND_API const HashTable zend_empty_array;",
          "61: #define ZVAL_EMPTY_ARRAY(z) do {      \\",
          "62:   zval *__z = (z);        \\",
          "63:   Z_ARR_P(__z) = (zend_array*)&zend_empty_array; \\",
          "64:   Z_TYPE_INFO_P(__z) = IS_ARRAY | (IS_TYPE_COPYABLE << Z_TYPE_FLAGS_SHIFT); \\",
          "65:  } while (0)",
          "",
          "---------------"
        ],
        "Zend/zend_operators.c||Zend/zend_operators.c": [
          "File: Zend/zend_operators.c -> Zend/zend_operators.c"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4782:    }",
          "4783:   } ZEND_HASH_FILL_END();",
          "4784:  } else {",
          "4786:  }",
          "4788:  ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();",
          "",
          "[Removed Lines]",
          "4785:   array_init(params);",
          "",
          "[Added Lines]",
          "4785:   ZVAL_EMPTY_ARRAY(params);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5263:  array = EX_VAR(opline->result.var);",
          "5264:  if (OP1_TYPE != IS_UNUSED) {",
          "5265:   size = opline->extended_value >> ZEND_ARRAY_SIZE_SHIFT;",
          "5273:   if (opline->extended_value & ZEND_ARRAY_NOT_PACKED) {",
          "5274:    zend_hash_real_init(Z_ARRVAL_P(array), 0);",
          "5275:   }",
          "5276:  }",
          "5279: }",
          "5281: ZEND_VM_HANDLER(21, ZEND_CAST, CONST|TMP|VAR|CV, ANY, TYPE)",
          "",
          "[Removed Lines]",
          "5266:  } else {",
          "5267:   size = 0;",
          "5268:  }",
          "5269:  ZVAL_ARR(array, zend_new_array(size));",
          "5271:  if (OP1_TYPE != IS_UNUSED) {",
          "5278:  ZEND_VM_DISPATCH_TO_HANDLER(ZEND_ADD_ARRAY_ELEMENT);",
          "",
          "[Added Lines]",
          "5266:   ZVAL_ARR(array, zend_new_array(size));",
          "5271:   ZEND_VM_DISPATCH_TO_HANDLER(ZEND_ADD_ARRAY_ELEMENT);",
          "5272:  } else {",
          "5273:   ZVAL_EMPTY_ARRAY(array);",
          "5274:   ZEND_VM_NEXT_OPCODE();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5324:    if (opline->extended_value == IS_ARRAY) {",
          "5325:     if (Z_TYPE_P(expr) != IS_OBJECT) {",
          "5327:      if (Z_TYPE_P(expr) != IS_NULL) {",
          "5328:       expr = zend_hash_index_add_new(Z_ARRVAL_P(result), 0, expr);",
          "5329:       if (OP1_TYPE == IS_CONST) {",
          "5330:        if (UNEXPECTED(Z_OPT_REFCOUNTED_P(expr))) Z_ADDREF_P(expr);",
          "5331:       } else {",
          "5332:        if (Z_OPT_REFCOUNTED_P(expr)) Z_ADDREF_P(expr);",
          "5333:       }",
          "5334:      }",
          "5335:     } else {",
          "5336:      ZVAL_COPY_VALUE(result, expr);",
          "",
          "[Removed Lines]",
          "5326:      ZVAL_ARR(result, zend_new_array(8));",
          "",
          "[Added Lines]",
          "5324:       ZVAL_ARR(result, zend_new_array(8));",
          "5331:      } else {",
          "5332:       ZVAL_EMPTY_ARRAY(result);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7820:  SAVE_OPLINE();",
          "7823:  if (num_args) {",
          "7824:   zval *p = ZEND_CALL_ARG(execute_data, 1);",
          "7825:   zval *end = p + num_args;",
          "7827:   zend_hash_real_init(args, 1);",
          "7828:   ZEND_HASH_FILL_PACKED(args) {",
          "7829:    do {",
          "",
          "[Removed Lines]",
          "7822:  args = zend_new_array(num_args);",
          "",
          "[Added Lines]",
          "7825:   args = zend_new_array(num_args);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7842:  ZEND_CALL_NUM_ARGS(call) = 2;",
          "7844:  ZVAL_STR(ZEND_CALL_ARG(call, 1), fbc->common.function_name);",
          "7846:  zend_free_trampoline(fbc);",
          "7847:  fbc = call->func;",
          "",
          "[Removed Lines]",
          "7845:  ZVAL_ARR(ZEND_CALL_ARG(call, 2), args);",
          "",
          "[Added Lines]",
          "7844:  if (num_args) {",
          "7845:   ZVAL_ARR(ZEND_CALL_ARG(call, 2), args);",
          "7846:  } else {",
          "7847:   ZVAL_EMPTY_ARRAY(ZEND_CALL_ARG(call, 2));",
          "7848:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8316:   result_size = arg_count;",
          "8317:  }",
          "8322:  if (result_size) {",
          "8323:   uint32_t first_extra_arg = EX(func)->op_array.num_args;",
          "8324:   zend_hash_real_init(ht, 1);",
          "8325:   ZEND_HASH_FILL_PACKED(ht) {",
          "8326:    zval *p, *q;",
          "",
          "[Removed Lines]",
          "8319:  ht = zend_new_array(result_size);",
          "8320:  ZVAL_ARR(EX_VAR(opline->result.var), ht);",
          "",
          "[Added Lines]",
          "8325:   ht = zend_new_array(result_size);",
          "8326:   ZVAL_ARR(EX_VAR(opline->result.var), ht);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8364:    }",
          "8365:   } ZEND_HASH_FILL_END();",
          "8366:   ht->nNumOfElements = result_size;",
          "8367:  }",
          "8368:  ZEND_VM_NEXT_OPCODE();",
          "8369: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8370:  } else {",
          "8371:   ZVAL_EMPTY_ARRAY(EX_VAR(opline->result.var));",
          "",
          "---------------"
        ],
        "ext/dom/xpath.c||ext/dom/xpath.c": [
          "File: ext/dom/xpath.c -> ext/dom/xpath.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:      xmlFree(str);",
          "135:     } else if (type == 2) {",
          "136:      int j;",
          "138:      if (obj->nodesetval && obj->nodesetval->nodeNr > 0) {",
          "139:       for (j = 0; j < obj->nodesetval->nodeNr; j++) {",
          "140:        xmlNodePtr node = obj->nodesetval->nodeTab[j];",
          "141:        zval child;",
          "",
          "[Removed Lines]",
          "137:      array_init(&fci.params[i]);",
          "",
          "[Added Lines]",
          "138:       array_init(&fci.params[i]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:        php_dom_create_object(node, &child, &intern->dom);",
          "162:        add_next_index_zval(&fci.params[i], &child);",
          "163:       }",
          "164:      }",
          "165:     }",
          "166:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:      } else {",
          "165:       ZVAL_EMPTY_ARRAY(&fci.params[i]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "430:    int i;",
          "431:    xmlNodeSetPtr nodesetp;",
          "437:     for (i = 0; i < nodesetp->nodeNr; i++) {",
          "438:      xmlNodePtr node = nodesetp->nodeTab[i];",
          "439:      zval child;",
          "",
          "[Removed Lines]",
          "433:    array_init(&retval);",
          "435:    if (xpathobjp->type == XPATH_NODESET && NULL != (nodesetp = xpathobjp->nodesetval)) {",
          "",
          "[Added Lines]",
          "435:    if (xpathobjp->type == XPATH_NODESET && NULL != (nodesetp = xpathobjp->nodesetval) && nodesetp->nodeNr) {",
          "437:     array_init(&retval);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "459:      php_dom_create_object(node, &child, &intern->dom);",
          "460:      add_next_index_zval(&retval, &child);",
          "461:     }",
          "462:    }",
          "463:    php_dom_create_interator(return_value, DOM_NODELIST);",
          "464:    nodeobj = Z_DOMOBJ_P(return_value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "463:    } else {",
          "464:     ZVAL_EMPTY_ARRAY(&retval);",
          "",
          "---------------"
        ],
        "ext/libxml/libxml.c||ext/libxml/libxml.c": [
          "File: ext/libxml/libxml.c -> ext/libxml/libxml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:  xmlErrorPtr error;",
          "1047:  if (LIBXML(error_list)) {",
          "1049:   error = zend_llist_get_first(LIBXML(error_list));",
          "1051:   while (error != NULL) {",
          "",
          "[Removed Lines]",
          "1045:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1047:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1071:    error = zend_llist_get_next(LIBXML(error_list));",
          "1072:   }",
          "1073:  }",
          "1074: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1072:  } else {",
          "1073:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c": [
          "File: ext/mbstring/mbstring.c -> ext/mbstring/mbstring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3136:     break;",
          "3137:    case IS_ARRAY:",
          "3138:     chash = php_mb_convert_encoding_recursive(HASH_OF(entry), _to_encoding, _from_encodings);",
          "3141:     }",
          "3143:     break;",
          "3144:    case IS_OBJECT:",
          "3145:    default:",
          "",
          "[Removed Lines]",
          "3139:     if (!chash) {",
          "3140:      chash = zend_new_array(0);",
          "3142:     ZVAL_ARR(&entry_tmp, chash);",
          "",
          "[Added Lines]",
          "3139:     if (chash) {",
          "3140:      ZVAL_ARR(&entry_tmp, chash);",
          "3141:     } else {",
          "3142:      ZVAL_EMPTY_ARRAY(&entry_tmp);",
          "",
          "---------------"
        ],
        "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c": [
          "File: ext/mysqli/mysqli_nonapi.c -> ext/mysqli/mysqli_nonapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:   return;",
          "424:  }",
          "425:  MYSQLI_FETCH_RESOURCE_CONN(mysql, mysql_link, MYSQLI_STATUS_VALID);",
          "427: #if defined(MYSQLI_USE_MYSQLND)",
          "428:  if (mysql->mysql->data->error_info->error_list) {",
          "429:   MYSQLND_ERROR_LIST_ELEMENT * message;",
          "430:   zend_llist_position pos;",
          "431:   for (message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_first_ex(mysql->mysql->data->error_info->error_list, &pos);",
          "432:     message;",
          "433:     message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_next_ex(mysql->mysql->data->error_info->error_list, &pos))",
          "",
          "[Removed Lines]",
          "426:  array_init(return_value);",
          "",
          "[Added Lines]",
          "430:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:    add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, message->error);",
          "440:    add_next_index_zval(return_value, &single_error);",
          "441:   }",
          "442:  }",
          "443: #else",
          "444:  if (mysql_errno(mysql->mysql)) {",
          "445:   zval single_error;",
          "446:   array_init(&single_error);",
          "447:   add_assoc_long_ex(&single_error, \"errno\", sizeof(\"errno\") - 1, mysql_errno(mysql->mysql));",
          "448:   add_assoc_string_ex(&single_error, \"sqlstate\", sizeof(\"sqlstate\") - 1, mysql_sqlstate(mysql->mysql));",
          "449:   add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, mysql_error(mysql->mysql));",
          "450:   add_next_index_zval(return_value, &single_error);",
          "451:  }",
          "452: #endif",
          "453: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "442:  } else {",
          "443:   ZVAL_EMPTY_ARRAY(return_value);",
          "448:   array_init(return_value);",
          "454:  } else {",
          "455:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "464:   return;",
          "465:  }",
          "466:  MYSQLI_FETCH_RESOURCE_STMT(stmt, mysql_stmt, MYSQLI_STATUS_INITIALIZED);",
          "468: #if defined(MYSQLI_USE_MYSQLND)",
          "469:  if (stmt->stmt && stmt->stmt->data && stmt->stmt->data->error_info->error_list) {",
          "470:   MYSQLND_ERROR_LIST_ELEMENT * message;",
          "471:   zend_llist_position pos;",
          "472:   for (message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_first_ex(stmt->stmt->data->error_info->error_list, &pos);",
          "473:     message;",
          "474:     message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_next_ex(stmt->stmt->data->error_info->error_list, &pos))",
          "",
          "[Removed Lines]",
          "467:  array_init(return_value);",
          "",
          "[Added Lines]",
          "476:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "480:    add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, message->error);",
          "481:    add_next_index_zval(return_value, &single_error);",
          "482:   }",
          "483:  }",
          "484: #else",
          "485:  if (mysql_stmt_errno(stmt->stmt)) {",
          "486:   zval single_error;",
          "487:   array_init(&single_error);",
          "488:   add_assoc_long_ex(&single_error, \"errno\", sizeof(\"errno\") - 1, mysql_stmt_errno(stmt->stmt));",
          "489:   add_assoc_string_ex(&single_error, \"sqlstate\", sizeof(\"sqlstate\") - 1, mysql_stmt_sqlstate(stmt->stmt));",
          "490:   add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, mysql_stmt_error(stmt->stmt));",
          "491:   add_next_index_zval(return_value, &single_error);",
          "492:  }",
          "493: #endif",
          "494: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:  } else {",
          "489:   ZVAL_EMPTY_ARRAY(return_value);",
          "494:   array_init(return_value);",
          "500:  } else {",
          "501:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/mysqli/mysqli_prop.c||ext/mysqli/mysqli_prop.c": [
          "File: ext/mysqli/mysqli_prop.c -> ext/mysqli/mysqli_prop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:   mysql = (MY_MYSQL *)((MYSQLI_RESOURCE *)(obj->ptr))->ptr;",
          "188:  if (mysql) {",
          "189: #if defined(MYSQLI_USE_MYSQLND)",
          "190:   if (mysql->mysql->data->error_info->error_list) {",
          "191:    MYSQLND_ERROR_LIST_ELEMENT * message;",
          "",
          "[Removed Lines]",
          "187:  array_init(retval);",
          "",
          "[Added Lines]",
          "188:   array_init(retval);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212:    add_next_index_zval(retval, &single_error);",
          "213:   }",
          "214: #endif",
          "215:  }",
          "217:  return retval;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:  } else {",
          "216:   ZVAL_EMPTY_ARRAY(retval);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "374:  CHECK_STATUS(MYSQLI_STATUS_INITIALIZED);",
          "376:   stmt = (MY_STMT *)((MYSQLI_RESOURCE *)(obj->ptr))->ptr;",
          "378:  if (stmt && stmt->stmt) {",
          "379: #if defined(MYSQLI_USE_MYSQLND)",
          "380:   if (stmt->stmt->data && stmt->stmt->data->error_info->error_list) {",
          "381:    MYSQLND_ERROR_LIST_ELEMENT * message;",
          "",
          "[Removed Lines]",
          "377:  array_init(retval);",
          "",
          "[Added Lines]",
          "380:   array_init(retval);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "402:    add_next_index_zval(retval, &single_error);",
          "403:   }",
          "404: #endif",
          "405:  }",
          "406:  return retval;",
          "407: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:  } else {",
          "408:   ZVAL_EMPTY_ARRAY(retval);",
          "",
          "---------------"
        ],
        "ext/reflection/php_reflection.c||ext/reflection/php_reflection.c": [
          "File: ext/reflection/php_reflection.c -> ext/reflection/php_reflection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1846:  GET_REFLECTION_OBJECT_PTR(fptr);",
          "1850:  if (fptr->type == ZEND_USER_FUNCTION && fptr->op_array.static_variables != NULL) {",
          "1851:   if (GC_REFCOUNT(fptr->op_array.static_variables) > 1) {",
          "1852:    if (!(GC_FLAGS(fptr->op_array.static_variables) & IS_ARRAY_IMMUTABLE)) {",
          "1853:     GC_REFCOUNT(fptr->op_array.static_variables)--;",
          "",
          "[Removed Lines]",
          "1849:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1850:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1860:    }",
          "1861:   } ZEND_HASH_FOREACH_END();",
          "1862:   zend_hash_copy(Z_ARRVAL_P(return_value), fptr->op_array.static_variables, zval_add_ref);",
          "1863:  }",
          "1864: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1863:  } else {",
          "1864:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2046:   num_args++;",
          "2047:  }",
          "2049:  array_init(return_value);",
          "2050:  for (i = 0; i < num_args; i++) {",
          "2051:   zval parameter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2051:  if (!num_args) {",
          "2052:   ZVAL_EMPTY_ARRAY(return_value);",
          "2053:   return;",
          "2054:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4917:  }",
          "4918:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4923:  if (ce->num_interfaces) {",
          "4924:   uint32_t i;",
          "4926:   for (i=0; i < ce->num_interfaces; i++) {",
          "4927:    zval interface;",
          "4928:    zend_reflection_class_factory(ce->interfaces[i], &interface);",
          "4929:    zend_hash_update(Z_ARRVAL_P(return_value), ce->interfaces[i]->name, &interface);",
          "4930:   }",
          "4931:  }",
          "4932: }",
          "",
          "[Removed Lines]",
          "4921:  array_init(return_value);",
          "",
          "[Added Lines]",
          "4930:   array_init(return_value);",
          "4936:  } else {",
          "4937:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4945:  }",
          "4946:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4949:  array_init(return_value);",
          "4951:  for (i=0; i < ce->num_interfaces; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4955:  if (!ce->num_interfaces) {",
          "4957:   ZVAL_EMPTY_ARRAY(return_value);",
          "4958:   return;",
          "4959:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4967:  }",
          "4968:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4970:  array_init(return_value);",
          "4972:  for (i=0; i < ce->num_traits; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4982:  if (!ce->num_traits) {",
          "4983:   ZVAL_EMPTY_ARRAY(return_value);",
          "4984:   return;",
          "4985:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4990:  }",
          "4991:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4993:  array_init(return_value);",
          "4995:  for (i=0; i < ce->num_traits; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5010:  if (!ce->num_traits) {",
          "5011:   ZVAL_EMPTY_ARRAY(return_value);",
          "5012:   return;",
          "5013:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5010:  }",
          "5011:  GET_REFLECTION_OBJECT_PTR(ce);",
          "5015:  if (ce->trait_aliases) {",
          "5016:   uint32_t i = 0;",
          "5017:   while (ce->trait_aliases[i]) {",
          "5018:    zend_string *mname;",
          "5019:    zend_trait_method_reference *cur_ref = ce->trait_aliases[i]->trait_method;",
          "",
          "[Removed Lines]",
          "5013:  array_init(return_value);",
          "",
          "[Added Lines]",
          "5039:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5026:    }",
          "5027:    i++;",
          "5028:   }",
          "5029:  }",
          "5030: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5052:  } else {",
          "5053:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5961:  }",
          "5962:  GET_REFLECTION_OBJECT_PTR(module);",
          "5966:  dep = module->deps;",
          "5968:  if (!dep)",
          "5969:  {",
          "5970:   return;",
          "5971:  }",
          "5973:  while(dep->name) {",
          "5974:   zend_string *relation;",
          "5975:   char *rel_type;",
          "",
          "[Removed Lines]",
          "5964:  array_init(return_value);",
          "",
          "[Added Lines]",
          "5993:   ZVAL_EMPTY_ARRAY(return_value);",
          "5997:  array_init(return_value);",
          "",
          "---------------"
        ],
        "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c": [
          "File: ext/simplexml/simplexml.c -> ext/simplexml/simplexml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1351:  result = retval->nodesetval;",
          "1355:  if (result != NULL) {",
          "1356:   for (i = 0; i < result->nodeNr; ++i) {",
          "1357:    nodeptr = result->nodeTab[i];",
          "1358:    if (nodeptr->type == XML_TEXT_NODE || nodeptr->type == XML_ELEMENT_NODE || nodeptr->type == XML_ATTRIBUTE_NODE) {",
          "",
          "[Removed Lines]",
          "1353:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1354:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1372:     add_next_index_zval(return_value, &value);",
          "1373:    }",
          "1374:   }",
          "1375:  }",
          "1377:  xmlXPathFreeObject(retval);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1375:  } else {",
          "1376:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/spl/spl_fixedarray.c||ext/spl/spl_fixedarray.c": [
          "File: ext/spl/spl_fixedarray.c -> ext/spl/spl_fixedarray.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:  intern = Z_SPLFIXEDARRAY_P(getThis());",
          "641:  if (intern->array.size > 0) {",
          "642:   int i = 0;",
          "643:   for (; i < intern->array.size; i++) {",
          "644:    if (!Z_ISUNDEF(intern->array.elements[i])) {",
          "645:     zend_hash_index_update(Z_ARRVAL_P(return_value), i, &intern->array.elements[i]);",
          "",
          "[Removed Lines]",
          "640:  array_init(return_value);",
          "",
          "[Added Lines]",
          "643:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "650:     zend_hash_index_update(Z_ARRVAL_P(return_value), i, &EG(uninitialized_zval));",
          "651:    }",
          "652:   }",
          "653:  }",
          "654: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "654:  } else {",
          "655:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/sqlite3/sqlite3.c||ext/sqlite3/sqlite3.c": [
          "File: ext/sqlite3/sqlite3.c -> ext/sqlite3/sqlite3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676:    if (!entire_row) {",
          "677:     RETVAL_NULL();",
          "678:    } else {",
          "680:    }",
          "681:    break;",
          "682:   }",
          "",
          "[Removed Lines]",
          "679:     array_init(return_value);",
          "",
          "[Added Lines]",
          "679:     ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2689:    }",
          "2690:   }",
          "2691:  } else if (EXPECTED(num == 0)) {",
          "2693:   return;",
          "2694:  } else {",
          "2695:   php_error_docref(NULL, E_WARNING, \"Number of elements can't be negative\");",
          "",
          "[Removed Lines]",
          "2692:   array_init(return_value);",
          "",
          "[Added Lines]",
          "2692:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3547:  if (offset > num_in) {",
          "3549:   return;",
          "3550:  } else if (offset < 0 && (offset = (num_in + offset)) < 0) {",
          "3551:   offset = 0;",
          "",
          "[Removed Lines]",
          "3548:   array_init(return_value);",
          "",
          "[Added Lines]",
          "3548:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3559:  }",
          "3561:  if (length <= 0) {",
          "3563:   return;",
          "3564:  }",
          "",
          "[Removed Lines]",
          "3562:   array_init(return_value);",
          "",
          "[Added Lines]",
          "3562:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6316:   RETURN_FALSE;",
          "6317:  }",
          "6321:  if (!num_keys) {",
          "6322:   return;",
          "6323:  }",
          "6325:  ZEND_HASH_FOREACH_VAL(keys, entry_keys) {",
          "6326:   while (1) {",
          "6327:    if (pos_values >= values->nNumUsed) {",
          "",
          "[Removed Lines]",
          "6319:  array_init_size(return_value, num_keys);",
          "",
          "[Added Lines]",
          "6320:   ZVAL_EMPTY_ARRAY(return_value);",
          "6324:  array_init_size(return_value, num_keys);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:  yych = *(YYMARKER = ++YYCURSOR);",
          "705:  if (yych == ':') goto yy88;",
          "706: yy3:",
          "708:  { return 0; }",
          "709: #line 710 \"ext/standard/var_unserializer.c\"",
          "710: yy4:",
          "",
          "[Removed Lines]",
          "707: #line 1036 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "707: #line 1039 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:  goto yy3;",
          "750: yy14:",
          "751:  ++YYCURSOR;",
          "753:  {",
          "755:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "",
          "[Removed Lines]",
          "752: #line 1030 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "752: #line 1033 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "779:  yych = *++YYCURSOR;",
          "780:  if (yych != '\"') goto yy18;",
          "781:  ++YYCURSOR;",
          "783:  {",
          "784:  size_t len, len2, len3, maxlen;",
          "785:  zend_long elements;",
          "",
          "[Removed Lines]",
          "782: #line 878 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "782: #line 881 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "946:  yych = *++YYCURSOR;",
          "947:  if (yych != '\"') goto yy18;",
          "948:  ++YYCURSOR;",
          "950:  {",
          "951:  zend_long elements;",
          "952:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "949: #line 867 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "949: #line 870 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "983:   return 0;",
          "984:  }",
          "987:  if (elements) {",
          "990:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "991:  }",
          "",
          "[Removed Lines]",
          "986:  array_init_size(rval, elements);",
          "",
          "[Added Lines]",
          "987:   array_init_size(rval, elements);",
          "991:  } else {",
          "992:   ZVAL_EMPTY_ARRAY(rval);",
          "993:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1003:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1004: }",
          "1006: yy36:",
          "1007:  yych = *++YYCURSOR;",
          "1008:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1008: #line 1009 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1051:  ZVAL_STR(rval, str);",
          "1052:  return 1;",
          "1053: }",
          "1055: yy42:",
          "1056:  yych = *++YYCURSOR;",
          "1057:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1054: #line 1055 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1057: #line 1058 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1104:  }",
          "1105:  return 1;",
          "1106: }",
          "1108: yy48:",
          "1109:  yych = *++YYCURSOR;",
          "1110:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "1107: #line 1108 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1110: #line 1111 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1201:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1202:  return 1;",
          "1203: }",
          "1205: yy60:",
          "1206:  yych = *++YYCURSOR;",
          "1207:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1204: #line 1205 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1207: #line 1208 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1266:  return 1;",
          "1267: }",
          "1269: yy70:",
          "1270:  yych = *++YYCURSOR;",
          "1271:  if (yych == 'N') goto yy67;",
          "",
          "[Removed Lines]",
          "1268: #line 1269 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1271: #line 1272 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1318:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1319:  return 1;",
          "1320: }",
          "1322: yy77:",
          "1323:  yych = *++YYCURSOR;",
          "1324:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1321: #line 1322 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1324: #line 1325 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1332:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1333:  return 1;",
          "1334: }",
          "1336: yy81:",
          "1337:  ++YYCURSOR;",
          "1338: #line 702 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1335: #line 1336 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1338: #line 1339 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1341:  ZVAL_NULL(rval);",
          "1342:  return 1;",
          "1343: }",
          "1345: yy83:",
          "1346:  yych = *++YYCURSOR;",
          "1347:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1344: #line 1345 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1347: #line 1348 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1380:  return 1;",
          "1381: }",
          "1383: yy88:",
          "1384:  yych = *++YYCURSOR;",
          "1385:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1382: #line 1383 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1385: #line 1386 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1418:  return 1;",
          "1419: }",
          "1421: }",
          "1425:  return 0;",
          "",
          "[Removed Lines]",
          "1420: #line 1421 \"ext/standard/var_unserializer.c\"",
          "1422: #line 1038 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1423: #line 1424 \"ext/standard/var_unserializer.c\"",
          "1425: #line 1041 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "844:   return 0;",
          "845:  }",
          "848:  if (elements) {",
          "851:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "852:  }",
          "",
          "[Removed Lines]",
          "847:  array_init_size(rval, elements);",
          "",
          "[Added Lines]",
          "848:   array_init_size(rval, elements);",
          "852:  } else {",
          "853:   ZVAL_EMPTY_ARRAY(rval);",
          "854:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "---------------"
        ],
        "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c": [
          "File: ext/xsl/xsltprocessor.c -> ext/xsl/xsltprocessor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:     } else if (type == 2) {",
          "253:      int j;",
          "254:      dom_object *domintern = (dom_object *)intern->doc;",
          "256:      if (obj->nodesetval && obj->nodesetval->nodeNr > 0) {",
          "257:       for (j = 0; j < obj->nodesetval->nodeNr; j++) {",
          "258:        xmlNodePtr node = obj->nodesetval->nodeTab[j];",
          "259:        zval child;",
          "",
          "[Removed Lines]",
          "255:      array_init(&args[i]);",
          "",
          "[Added Lines]",
          "256:       array_init(&args[i]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "282:        php_dom_create_object(node, &child, domintern);",
          "283:        add_next_index_zval(&args[i], &child);",
          "284:       }",
          "285:      }",
          "286:     }",
          "287:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285:      } else {",
          "286:       ZVAL_EMPTY_ARRAY(&args[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a128950187da8771a09e784572a73ae6e7dcde6",
      "candidate_info": {
        "commit_hash": "2a128950187da8771a09e784572a73ae6e7dcde6",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/2a128950187da8771a09e784572a73ae6e7dcde6",
        "files": [
          "ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-7.1'",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt": [
          "File: ext/standard/tests/serialize/bug70963.phpt -> ext/standard/tests/serialize/bug70963.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: var_dump(unserialize('a:2:{i:0;O:9:\"exception\":1:{s:16:\"'.\"\\0\".'Exception'.\"\\0\".'trace\";s:4:\"test\";}i:1;r:3;}'));",
          "7: ?>",
          "8: --EXPECTF--",
          "10:   [0]=>",
          "11:   object(Exception)#%d (6) {",
          "12:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "9: array(1) {",
          "",
          "[Added Lines]",
          "9: array(2) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:     [\"previous\":\"Exception\":private]=>",
          "23:     NULL",
          "24:   }",
          "25: }",
          "27:   [0]=>",
          "28:   object(Exception)#%d (6) {",
          "29:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "26: array(1) {",
          "",
          "[Added Lines]",
          "25:   [1]=>",
          "26:   string(4) \"test\"",
          "28: array(2) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:     [\"previous\":\"Exception\":private]=>",
          "40:     NULL",
          "41:   }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   [1]=>",
          "45:   string(4) \"test\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #line 1 \"ext/standard/var_unserializer.re\"",
          "4:   +----------------------------------------------------------------------+",
          "5:   | PHP Version 7                                                        |",
          "6:   +----------------------------------------------------------------------+",
          "8:   +----------------------------------------------------------------------+",
          "9:   | This source file is subject to version 3.01 of the PHP license,      |",
          "10:   | that is bundled with this package in the file LICENSE, and is        |",
          "",
          "[Removed Lines]",
          "7:   | Copyright (c) 1997-2016 The PHP Group                                |",
          "",
          "[Added Lines]",
          "7:   | Copyright (c) 1997-2017 The PHP Group                                |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: #define VAR_ENTRIES_MAX 1024",
          "73: #define VAR_ENTRIES_DBG 0",
          "75: typedef struct {",
          "76:  zval *data[VAR_ENTRIES_MAX];",
          "77:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:         (*var_hashx)->last_dtor = var_hash;",
          "141:     }",
          "142:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "143:     return &var_hash->data[var_hash->used_slots++];",
          "144: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:  Z_ACCESS_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "187:  zend_long i;",
          "188:  var_entries *var_hash = (*var_hashx)->first;",
          "189:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "190: #if VAR_ENTRIES_DBG",
          "191:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "192: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:  zend_bool wakeup_failed = 0;",
          "195:  zval wakeup_name;",
          "196:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "200:  while (var_dtor_hash) {",
          "201:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "202: #if VAR_ENTRIES_DBG",
          "203:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "204: #endif",
          "206:   }",
          "207:   next = var_dtor_hash->next;",
          "208:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "209:   var_dtor_hash = next;",
          "210:  }",
          "211: }",
          "",
          "[Removed Lines]",
          "205:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "210:    zval *zv = &var_dtor_hash->data[i];",
          "216:    if (Z_ACCESS_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "217:     if (!wakeup_failed) {",
          "218:      zval retval;",
          "219:      if (Z_ISUNDEF(wakeup_name)) {",
          "220:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "221:      }",
          "223:      BG(serialize_lock)++;",
          "224:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "225:       wakeup_failed = 1;",
          "226:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "227:      }",
          "228:      BG(serialize_lock)--;",
          "230:      zval_ptr_dtor(&retval);",
          "231:     } else {",
          "232:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "233:     }",
          "234:    }",
          "236:    zval_ptr_dtor(zv);",
          "243:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "284: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "287: #line 292 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "320: #line 325 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "505: #endif",
          "506: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "507: {",
          "510:  HashTable *ht;",
          "511:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "508:  zval retval;",
          "509:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "530:  ZVAL_DEREF(rval);",
          "531:  if (has_wakeup) {",
          "544:  }",
          "546:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "532:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "533:   BG(serialize_lock)++;",
          "534:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "535:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "536:   }",
          "537:   BG(serialize_lock)--;",
          "538:   zval_dtor(&fname);",
          "539:   zval_dtor(&retval);",
          "540:  }",
          "542:  if (EG(exception)) {",
          "543:   return 0;",
          "",
          "[Added Lines]",
          "564:   zval *wakeup_var = var_tmp_var(var_hash);",
          "565:   ZVAL_COPY(wakeup_var, rval);",
          "566:   Z_ACCESS_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "595:  start = cursor;",
          "599: {",
          "600:  YYCTYPE yych;",
          "601:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "598: #line 599 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "621: #line 622 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "632:     0,   0,   0,   0,   0,   0,   0,   0,",
          "633:     0,   0,   0,   0,   0,   0,   0,   0,",
          "634:  };",
          "636:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "637:  yych = *YYCURSOR;",
          "638:  switch (yych) {",
          "639:  case 'C':",
          "641:  case 'N': goto yy5;",
          "648:  case 'o': goto yy12;",
          "653:  }",
          "654: yy2:",
          "657: yy3:",
          "659:  { return 0; }",
          "661: yy4:",
          "662:  yych = *(YYMARKER = ++YYCURSOR);",
          "664:  goto yy3;",
          "665: yy5:",
          "666:  yych = *++YYCURSOR;",
          "668:  goto yy3;",
          "669: yy6:",
          "670:  yych = *(YYMARKER = ++YYCURSOR);",
          "672:  goto yy3;",
          "673: yy7:",
          "674:  yych = *(YYMARKER = ++YYCURSOR);",
          "676:  goto yy3;",
          "677: yy8:",
          "678:  yych = *(YYMARKER = ++YYCURSOR);",
          "680:  goto yy3;",
          "681: yy9:",
          "682:  yych = *(YYMARKER = ++YYCURSOR);",
          "684:  goto yy3;",
          "685: yy10:",
          "686:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  goto yy3;",
          "689: yy11:",
          "690:  yych = *(YYMARKER = ++YYCURSOR);",
          "692:  goto yy3;",
          "693: yy12:",
          "694:  yych = *(YYMARKER = ++YYCURSOR);",
          "696:  goto yy3;",
          "697: yy13:",
          "698:  yych = *(YYMARKER = ++YYCURSOR);",
          "700:  goto yy3;",
          "701: yy14:",
          "702:  ++YYCURSOR;",
          "704:  {",
          "706:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "708: }",
          "713: yy17:",
          "714:  yych = *++YYCURSOR;",
          "715:  if (yybm[0+yych] & 128) {",
          "717:  }",
          "719: yy18:",
          "720:  YYCURSOR = YYMARKER;",
          "721:  goto yy3;",
          "722: yy19:",
          "723:  yych = *++YYCURSOR;",
          "726:  }",
          "727:  goto yy18;",
          "735:  if (yych <= '/') goto yy18;",
          "737:  yych = *++YYCURSOR;",
          "856:   }",
          "873:   }",
          "876:  }",
          "883:  }",
          "887:  }",
          "894:  yych = *++YYCURSOR;",
          "895:  if (yych <= ',') {",
          "897:  } else {",
          "899:   if (yych <= '/') goto yy18;",
          "901:   goto yy18;",
          "902:  }",
          "904:  yych = *++YYCURSOR;",
          "905:  if (yych <= '/') goto yy18;",
          "908:  ++YYCURSOR;",
          "909:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "910:  yych = *YYCURSOR;",
          "925:  }",
          "932:  if (yych <= '/') goto yy18;",
          "934:  goto yy18;",
          "935: yy33:",
          "936:  yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "640:  case 'O': goto yy13;",
          "642:  case 'R': goto yy2;",
          "643:  case 'S': goto yy10;",
          "644:  case 'a': goto yy11;",
          "645:  case 'b': goto yy6;",
          "646:  case 'd': goto yy8;",
          "647:  case 'i': goto yy7;",
          "649:  case 'r': goto yy4;",
          "650:  case 's': goto yy9;",
          "651:  case '}': goto yy14;",
          "652:  default: goto yy16;",
          "655:  yych = *(YYMARKER = ++YYCURSOR);",
          "656:  if (yych == ':') goto yy95;",
          "658: #line 976 \"ext/standard/var_unserializer.re\"",
          "660: #line 661 \"ext/standard/var_unserializer.c\"",
          "663:  if (yych == ':') goto yy89;",
          "667:  if (yych == ';') goto yy87;",
          "671:  if (yych == ':') goto yy83;",
          "675:  if (yych == ':') goto yy77;",
          "679:  if (yych == ':') goto yy53;",
          "683:  if (yych == ':') goto yy46;",
          "687:  if (yych == ':') goto yy39;",
          "691:  if (yych == ':') goto yy32;",
          "695:  if (yych == ':') goto yy25;",
          "699:  if (yych == ':') goto yy17;",
          "703: #line 970 \"ext/standard/var_unserializer.re\"",
          "709: #line 710 \"ext/standard/var_unserializer.c\"",
          "710: yy16:",
          "711:  yych = *++YYCURSOR;",
          "712:  goto yy3;",
          "716:   goto yy20;",
          "718:  if (yych == '+') goto yy19;",
          "724:  if (yybm[0+yych] & 128) {",
          "725:   goto yy20;",
          "728: yy20:",
          "729:  ++YYCURSOR;",
          "730:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "731:  yych = *YYCURSOR;",
          "732:  if (yybm[0+yych] & 128) {",
          "733:   goto yy20;",
          "734:  }",
          "736:  if (yych >= ';') goto yy18;",
          "738:  if (yych != '\"') goto yy18;",
          "739:  ++YYCURSOR;",
          "740: #line 818 \"ext/standard/var_unserializer.re\"",
          "741:  {",
          "742:  size_t len, len2, len3, maxlen;",
          "743:  zend_long elements;",
          "744:  char *str;",
          "745:  zend_string *class_name;",
          "746:  zend_class_entry *ce;",
          "747:  int incomplete_class = 0;",
          "749:  int custom_object = 0;",
          "751:  zval user_func;",
          "752:  zval retval;",
          "753:  zval args[1];",
          "755:     if (!var_hash) return 0;",
          "756:  if (*start == 'C') {",
          "757:   custom_object = 1;",
          "758:  }",
          "760:  len2 = len = parse_uiv(start + 2);",
          "761:  maxlen = max - YYCURSOR;",
          "762:  if (maxlen < len || len == 0) {",
          "764:   return 0;",
          "765:  }",
          "767:  str = (char*)YYCURSOR;",
          "769:  YYCURSOR += len;",
          "771:  if (*(YYCURSOR) != '\"') {",
          "773:   return 0;",
          "774:  }",
          "775:  if (*(YYCURSOR+1) != ':') {",
          "777:   return 0;",
          "778:  }",
          "780:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "781:  if (len3 != len)",
          "782:  {",
          "784:   return 0;",
          "785:  }",
          "787:  class_name = zend_string_init(str, len, 0);",
          "789:  do {",
          "790:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "791:    incomplete_class = 1;",
          "792:    ce = PHP_IC_ENTRY;",
          "793:    break;",
          "794:   }",
          "797:   BG(serialize_lock)++;",
          "798:   ce = zend_lookup_class(class_name);",
          "799:   if (ce) {",
          "800:    BG(serialize_lock)--;",
          "801:    if (EG(exception)) {",
          "802:     zend_string_release(class_name);",
          "803:     return 0;",
          "804:    }",
          "805:    break;",
          "806:   }",
          "807:   BG(serialize_lock)--;",
          "809:   if (EG(exception)) {",
          "810:    zend_string_release(class_name);",
          "811:    return 0;",
          "812:   }",
          "815:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "816:    incomplete_class = 1;",
          "817:    ce = PHP_IC_ENTRY;",
          "818:    break;",
          "819:   }",
          "822:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "824:   ZVAL_STR_COPY(&args[0], class_name);",
          "825:   BG(serialize_lock)++;",
          "826:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "827:    BG(serialize_lock)--;",
          "828:    if (EG(exception)) {",
          "829:     zend_string_release(class_name);",
          "830:     zval_ptr_dtor(&user_func);",
          "831:     zval_ptr_dtor(&args[0]);",
          "832:     return 0;",
          "833:    }",
          "834:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "835:    incomplete_class = 1;",
          "836:    ce = PHP_IC_ENTRY;",
          "837:    zval_ptr_dtor(&user_func);",
          "838:    zval_ptr_dtor(&args[0]);",
          "839:    break;",
          "840:   }",
          "841:   BG(serialize_lock)--;",
          "842:   zval_ptr_dtor(&retval);",
          "843:   if (EG(exception)) {",
          "844:    zend_string_release(class_name);",
          "845:    zval_ptr_dtor(&user_func);",
          "846:    zval_ptr_dtor(&args[0]);",
          "847:    return 0;",
          "848:   }",
          "851:   BG(serialize_lock)++;",
          "852:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "853:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "854:    incomplete_class = 1;",
          "855:    ce = PHP_IC_ENTRY;",
          "857:   BG(serialize_lock)--;",
          "859:   zval_ptr_dtor(&user_func);",
          "860:   zval_ptr_dtor(&args[0]);",
          "861:   break;",
          "862:  } while (1);",
          "866:  if (custom_object) {",
          "867:   int ret;",
          "869:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "871:   if (ret && incomplete_class) {",
          "872:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "874:   zend_string_release(class_name);",
          "875:   return ret;",
          "878:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "880:  if (elements < 0) {",
          "881:     zend_string_release(class_name);",
          "882:     return 0;",
          "885:  if (incomplete_class) {",
          "886:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "888:  zend_string_release(class_name);",
          "890:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "891: }",
          "892: #line 893 \"ext/standard/var_unserializer.c\"",
          "893: yy25:",
          "896:   if (yych != '+') goto yy18;",
          "898:   if (yych <= '-') goto yy26;",
          "900:   if (yych <= '9') goto yy27;",
          "903: yy26:",
          "906:  if (yych >= ':') goto yy18;",
          "907: yy27:",
          "911:  if (yych <= '/') goto yy18;",
          "912:  if (yych <= '9') goto yy27;",
          "913:  if (yych >= ';') goto yy18;",
          "914:  yych = *++YYCURSOR;",
          "915:  if (yych != '\"') goto yy18;",
          "916:  ++YYCURSOR;",
          "917: #line 807 \"ext/standard/var_unserializer.re\"",
          "918:  {",
          "919:  long elements;",
          "920:     if (!var_hash) return 0;",
          "922:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "923:  if (elements < 0) {",
          "924:   return 0;",
          "926:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "927: }",
          "928: #line 929 \"ext/standard/var_unserializer.c\"",
          "929: yy32:",
          "930:  yych = *++YYCURSOR;",
          "931:  if (yych == '+') goto yy33;",
          "933:  if (yych <= '9') goto yy34;",
          "",
          "[Added Lines]",
          "662:  case 'O': goto yy4;",
          "664:  case 'R': goto yy6;",
          "665:  case 'S': goto yy7;",
          "666:  case 'a': goto yy8;",
          "667:  case 'b': goto yy9;",
          "668:  case 'd': goto yy10;",
          "669:  case 'i': goto yy11;",
          "671:  case 'r': goto yy13;",
          "672:  case 's': goto yy14;",
          "673:  case '}': goto yy15;",
          "674:  default: goto yy2;",
          "677:  ++YYCURSOR;",
          "679: #line 999 \"ext/standard/var_unserializer.re\"",
          "681: #line 682 \"ext/standard/var_unserializer.c\"",
          "684:  if (yych == ':') goto yy17;",
          "688:  if (yych == ';') goto yy19;",
          "692:  if (yych == ':') goto yy21;",
          "696:  if (yych == ':') goto yy22;",
          "700:  if (yych == ':') goto yy23;",
          "704:  if (yych == ':') goto yy24;",
          "708:  if (yych == ':') goto yy25;",
          "712:  if (yych == ':') goto yy26;",
          "716:  if (yych == ':') goto yy27;",
          "720:  if (yych == ':') goto yy28;",
          "723:  yych = *(YYMARKER = ++YYCURSOR);",
          "724:  if (yych == ':') goto yy29;",
          "725:  goto yy3;",
          "726: yy15:",
          "728: #line 993 \"ext/standard/var_unserializer.re\"",
          "734: #line 735 \"ext/standard/var_unserializer.c\"",
          "738:   goto yy31;",
          "740:  if (yych == '+') goto yy30;",
          "745:  ++YYCURSOR;",
          "746: #line 677 \"ext/standard/var_unserializer.re\"",
          "747:  {",
          "749:  ZVAL_NULL(rval);",
          "750:  return 1;",
          "751: }",
          "752: #line 753 \"ext/standard/var_unserializer.c\"",
          "753: yy21:",
          "755:  if (yych <= ',') {",
          "756:   if (yych == '+') goto yy33;",
          "757:   goto yy18;",
          "758:  } else {",
          "759:   if (yych <= '-') goto yy33;",
          "760:   if (yych <= '/') goto yy18;",
          "761:   if (yych <= '9') goto yy34;",
          "762:   goto yy18;",
          "764: yy22:",
          "765:  yych = *++YYCURSOR;",
          "766:  if (yych == '+') goto yy36;",
          "767:  if (yych <= '/') goto yy18;",
          "768:  if (yych <= '9') goto yy37;",
          "770: yy23:",
          "771:  yych = *++YYCURSOR;",
          "772:  if (yych == '+') goto yy39;",
          "774:  if (yych <= '9') goto yy40;",
          "775:  goto yy18;",
          "776: yy24:",
          "778:  if (yych <= '/') goto yy18;",
          "779:  if (yych <= '1') goto yy42;",
          "780:  goto yy18;",
          "781: yy25:",
          "782:  yych = *++YYCURSOR;",
          "783:  if (yych <= '/') {",
          "784:   if (yych <= ',') {",
          "785:    if (yych == '+') goto yy43;",
          "786:    goto yy18;",
          "787:   } else {",
          "788:    if (yych <= '-') goto yy44;",
          "789:    if (yych <= '.') goto yy45;",
          "790:    goto yy18;",
          "792:  } else {",
          "793:   if (yych <= 'I') {",
          "794:    if (yych <= '9') goto yy46;",
          "795:    if (yych <= 'H') goto yy18;",
          "796:    goto yy48;",
          "797:   } else {",
          "798:    if (yych == 'N') goto yy49;",
          "799:    goto yy18;",
          "802: yy26:",
          "803:  yych = *++YYCURSOR;",
          "804:  if (yych <= ',') {",
          "805:   if (yych == '+') goto yy50;",
          "806:   goto yy18;",
          "807:  } else {",
          "808:   if (yych <= '-') goto yy50;",
          "809:   if (yych <= '/') goto yy18;",
          "810:   if (yych <= '9') goto yy51;",
          "811:   goto yy18;",
          "813: yy27:",
          "814:  yych = *++YYCURSOR;",
          "815:  if (yych <= ',') {",
          "816:   if (yych == '+') goto yy53;",
          "817:   goto yy18;",
          "818:  } else {",
          "819:   if (yych <= '-') goto yy53;",
          "820:   if (yych <= '/') goto yy18;",
          "821:   if (yych <= '9') goto yy54;",
          "822:   goto yy18;",
          "824: yy28:",
          "827:   if (yych == '+') goto yy56;",
          "828:   goto yy18;",
          "830:   if (yych <= '-') goto yy56;",
          "832:   if (yych <= '9') goto yy57;",
          "835: yy29:",
          "837:  if (yych == '+') goto yy59;",
          "839:  if (yych <= '9') goto yy60;",
          "840:  goto yy18;",
          "841: yy30:",
          "842:  yych = *++YYCURSOR;",
          "843:  if (yybm[0+yych] & 128) {",
          "844:   goto yy31;",
          "845:  }",
          "846:  goto yy18;",
          "847: yy31:",
          "851:  if (yybm[0+yych] & 128) {",
          "852:   goto yy31;",
          "855:  if (yych <= ':') goto yy62;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "938:  if (yych >= ':') goto yy18;",
          "939: yy34:",
          "940:  ++YYCURSOR;",
          "942:  yych = *YYCURSOR;",
          "943:  if (yych <= '/') goto yy18;",
          "944:  if (yych <= '9') goto yy34;",
          "981:  yych = *++YYCURSOR;",
          "982:  if (yych <= '/') goto yy18;",
          "983:  if (yych >= ':') goto yy18;",
          "985:  ++YYCURSOR;",
          "986:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "987:  yych = *YYCURSOR;",
          "988:  if (yych <= '/') goto yy18;",
          "1034:  goto yy18;",
          "1036:  yych = *++YYCURSOR;",
          "1037:  if (yych <= '/') goto yy18;",
          "1038:  if (yych >= ':') goto yy18;",
          "1040:  ++YYCURSOR;",
          "1041:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1042:  yych = *YYCURSOR;",
          "1043:  if (yych <= '/') goto yy18;",
          "1083:  yych = *++YYCURSOR;",
          "1102:  yych = *++YYCURSOR;",
          "1104:  goto yy18;",
          "1106:  yych = *++YYCURSOR;",
          "1107:  if (yych <= '/') {",
          "1110:  } else {",
          "1113:  }",
          "1115:  yych = *++YYCURSOR;",
          "1121:  if (yych <= '/') goto yy18;",
          "1124:  ++YYCURSOR;",
          "1125:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1126:  yych = *YYCURSOR;",
          "1127:  if (yych <= ':') {",
          "1128:   if (yych <= '.') {",
          "1129:    if (yych <= '-') goto yy18;",
          "1131:   } else {",
          "1132:    if (yych <= '/') goto yy18;",
          "1134:    goto yy18;",
          "1135:   }",
          "1136:  } else {",
          "1137:   if (yych <= 'E') {",
          "1139:    if (yych <= 'D') goto yy18;",
          "1141:   } else {",
          "1143:    goto yy18;",
          "1144:   }",
          "1145:  }",
          "1147:  yych = *++YYCURSOR;",
          "1148:  if (yych <= '/') goto yy18;",
          "1149:  if (yych >= ':') goto yy18;",
          "1151:  ++YYCURSOR;",
          "1152:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1153:  yych = *YYCURSOR;",
          "1154:  if (yych <= ';') {",
          "1155:   if (yych <= '/') goto yy18;",
          "1157:   if (yych <= ':') goto yy18;",
          "1158:  } else {",
          "1159:   if (yych <= 'E') {",
          "1160:    if (yych <= 'D') goto yy18;",
          "1162:   } else {",
          "1164:    goto yy18;",
          "1165:   }",
          "1166:  }",
          "1168:  ++YYCURSOR;",
          "1170:  {",
          "1171: #if SIZEOF_ZEND_LONG == 4",
          "1172: use_double:",
          "",
          "[Removed Lines]",
          "941:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "945:  if (yych >= ';') goto yy18;",
          "946:  yych = *++YYCURSOR;",
          "947:  if (yych != '{') goto yy18;",
          "948:  ++YYCURSOR;",
          "949: #line 783 \"ext/standard/var_unserializer.re\"",
          "950:  {",
          "951:  zend_long elements = parse_iv(start + 2);",
          "954:     if (!var_hash) return 0;",
          "956:  if (elements < 0) {",
          "957:   return 0;",
          "958:  }",
          "960:  array_init_size(rval, elements);",
          "961:  if (elements) {",
          "964:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "965:  }",
          "967:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "968:   return 0;",
          "969:  }",
          "971:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "972: }",
          "973: #line 974 \"ext/standard/var_unserializer.c\"",
          "974: yy39:",
          "975:  yych = *++YYCURSOR;",
          "976:  if (yych == '+') goto yy40;",
          "977:  if (yych <= '/') goto yy18;",
          "978:  if (yych <= '9') goto yy41;",
          "979:  goto yy18;",
          "980: yy40:",
          "984: yy41:",
          "989:  if (yych <= '9') goto yy41;",
          "990:  if (yych >= ';') goto yy18;",
          "991:  yych = *++YYCURSOR;",
          "992:  if (yych != '\"') goto yy18;",
          "993:  ++YYCURSOR;",
          "994: #line 749 \"ext/standard/var_unserializer.re\"",
          "995:  {",
          "996:  size_t len, maxlen;",
          "997:  zend_string *str;",
          "999:  len = parse_uiv(start + 2);",
          "1000:  maxlen = max - YYCURSOR;",
          "1001:  if (maxlen < len) {",
          "1003:   return 0;",
          "1004:  }",
          "1006:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1007:   return 0;",
          "1008:  }",
          "1010:  if (*(YYCURSOR) != '\"') {",
          "1011:   zend_string_free(str);",
          "1013:   return 0;",
          "1014:  }",
          "1016:  if (*(YYCURSOR + 1) != ';') {",
          "1017:   efree(str);",
          "1019:   return 0;",
          "1020:  }",
          "1022:  YYCURSOR += 2;",
          "1025:  ZVAL_STR(rval, str);",
          "1026:  return 1;",
          "1027: }",
          "1028: #line 1029 \"ext/standard/var_unserializer.c\"",
          "1029: yy46:",
          "1030:  yych = *++YYCURSOR;",
          "1031:  if (yych == '+') goto yy47;",
          "1032:  if (yych <= '/') goto yy18;",
          "1033:  if (yych <= '9') goto yy48;",
          "1035: yy47:",
          "1039: yy48:",
          "1044:  if (yych <= '9') goto yy48;",
          "1045:  if (yych >= ';') goto yy18;",
          "1046:  yych = *++YYCURSOR;",
          "1047:  if (yych != '\"') goto yy18;",
          "1048:  ++YYCURSOR;",
          "1049: #line 717 \"ext/standard/var_unserializer.re\"",
          "1050:  {",
          "1051:  size_t len, maxlen;",
          "1052:  char *str;",
          "1054:  len = parse_uiv(start + 2);",
          "1055:  maxlen = max - YYCURSOR;",
          "1056:  if (maxlen < len) {",
          "1058:   return 0;",
          "1059:  }",
          "1061:  str = (char*)YYCURSOR;",
          "1063:  YYCURSOR += len;",
          "1065:  if (*(YYCURSOR) != '\"') {",
          "1067:   return 0;",
          "1068:  }",
          "1070:  if (*(YYCURSOR + 1) != ';') {",
          "1072:   return 0;",
          "1073:  }",
          "1075:  YYCURSOR += 2;",
          "1078:  ZVAL_STRINGL(rval, str, len);",
          "1079:  return 1;",
          "1080: }",
          "1081: #line 1082 \"ext/standard/var_unserializer.c\"",
          "1082: yy53:",
          "1084:  if (yych <= '/') {",
          "1085:   if (yych <= ',') {",
          "1086:    if (yych == '+') goto yy57;",
          "1087:    goto yy18;",
          "1088:   } else {",
          "1089:    if (yych <= '-') goto yy55;",
          "1090:    if (yych <= '.') goto yy60;",
          "1091:    goto yy18;",
          "1092:   }",
          "1093:  } else {",
          "1094:   if (yych <= 'I') {",
          "1095:    if (yych <= '9') goto yy58;",
          "1096:    if (yych <= 'H') goto yy18;",
          "1097:    goto yy56;",
          "1098:   } else {",
          "1099:    if (yych != 'N') goto yy18;",
          "1100:   }",
          "1101:  }",
          "1103:  if (yych == 'A') goto yy76;",
          "1105: yy55:",
          "1108:   if (yych == '.') goto yy60;",
          "1109:   goto yy18;",
          "1111:   if (yych <= '9') goto yy58;",
          "1112:   if (yych != 'I') goto yy18;",
          "1114: yy56:",
          "1116:  if (yych == 'N') goto yy72;",
          "1117:  goto yy18;",
          "1118: yy57:",
          "1119:  yych = *++YYCURSOR;",
          "1120:  if (yych == '.') goto yy60;",
          "1122:  if (yych >= ':') goto yy18;",
          "1123: yy58:",
          "1130:    goto yy70;",
          "1133:    if (yych <= '9') goto yy58;",
          "1138:    if (yych <= ';') goto yy63;",
          "1140:    goto yy65;",
          "1142:    if (yych == 'e') goto yy65;",
          "1146: yy60:",
          "1150: yy61:",
          "1156:   if (yych <= '9') goto yy61;",
          "1161:    goto yy65;",
          "1163:    if (yych == 'e') goto yy65;",
          "1167: yy63:",
          "1169: #line 708 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "863:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "867:  if (yych == ';') goto yy63;",
          "868:  goto yy18;",
          "869: yy36:",
          "873: yy37:",
          "878:  if (yych <= '9') goto yy37;",
          "879:  if (yych <= ':') goto yy65;",
          "881: yy39:",
          "885: yy40:",
          "890:  if (yych <= '9') goto yy40;",
          "891:  if (yych <= ':') goto yy66;",
          "892:  goto yy18;",
          "893: yy42:",
          "895:  if (yych == ';') goto yy67;",
          "896:  goto yy18;",
          "897: yy43:",
          "899:  if (yych == '.') goto yy45;",
          "900:  if (yych <= '/') goto yy18;",
          "901:  if (yych <= '9') goto yy46;",
          "903: yy44:",
          "906:   if (yych != '.') goto yy18;",
          "908:   if (yych <= '9') goto yy46;",
          "909:   if (yych == 'I') goto yy48;",
          "910:   goto yy18;",
          "912: yy45:",
          "915:  if (yych <= '9') goto yy69;",
          "916:  goto yy18;",
          "917: yy46:",
          "924:    goto yy69;",
          "927:    if (yych <= '9') goto yy46;",
          "932:    if (yych <= ';') goto yy71;",
          "934:    goto yy73;",
          "936:    if (yych == 'e') goto yy73;",
          "940: yy48:",
          "941:  yych = *++YYCURSOR;",
          "942:  if (yych == 'N') goto yy74;",
          "943:  goto yy18;",
          "944: yy49:",
          "945:  yych = *++YYCURSOR;",
          "946:  if (yych == 'A') goto yy75;",
          "947:  goto yy18;",
          "948: yy50:",
          "949:  yych = *++YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "951:  if (yych >= ':') goto yy18;",
          "952: yy51:",
          "953:  ++YYCURSOR;",
          "954:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "955:  yych = *YYCURSOR;",
          "956:  if (yych <= '/') goto yy18;",
          "957:  if (yych <= '9') goto yy51;",
          "958:  if (yych == ';') goto yy76;",
          "959:  goto yy18;",
          "960: yy53:",
          "961:  yych = *++YYCURSOR;",
          "962:  if (yych <= '/') goto yy18;",
          "963:  if (yych >= ':') goto yy18;",
          "964: yy54:",
          "965:  ++YYCURSOR;",
          "966:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "967:  yych = *YYCURSOR;",
          "968:  if (yych <= '/') goto yy18;",
          "969:  if (yych <= '9') goto yy54;",
          "970:  if (yych <= ':') goto yy78;",
          "971:  goto yy18;",
          "972: yy56:",
          "973:  yych = *++YYCURSOR;",
          "974:  if (yych <= '/') goto yy18;",
          "975:  if (yych >= ':') goto yy18;",
          "976: yy57:",
          "977:  ++YYCURSOR;",
          "978:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "979:  yych = *YYCURSOR;",
          "980:  if (yych <= '/') goto yy18;",
          "981:  if (yych <= '9') goto yy57;",
          "982:  if (yych == ';') goto yy79;",
          "983:  goto yy18;",
          "984: yy59:",
          "988: yy60:",
          "989:  ++YYCURSOR;",
          "990:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "991:  yych = *YYCURSOR;",
          "992:  if (yych <= '/') goto yy18;",
          "993:  if (yych <= '9') goto yy60;",
          "994:  if (yych <= ':') goto yy81;",
          "995:  goto yy18;",
          "996: yy62:",
          "997:  yych = *++YYCURSOR;",
          "998:  if (yych == '\"') goto yy82;",
          "999:  goto yy18;",
          "1000: yy63:",
          "1001:  ++YYCURSOR;",
          "1002: #line 626 \"ext/standard/var_unserializer.re\"",
          "1003:  {",
          "1004:  zend_long id;",
          "1007:  if (!var_hash) return 0;",
          "1009:  id = parse_iv(start + 2) - 1;",
          "1010:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1011:   return 0;",
          "1012:  }",
          "1014:  zval_ptr_dtor(rval);",
          "1015:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1016:   ZVAL_UNDEF(rval);",
          "1017:   return 1;",
          "1018:  }",
          "1019:  if (Z_ISREF_P(rval_ref)) {",
          "1020:   ZVAL_COPY(rval, rval_ref);",
          "1021:  } else {",
          "1022:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1023:   ZVAL_COPY(rval, rval_ref);",
          "1024:  }",
          "1026:  return 1;",
          "1027: }",
          "1028: #line 1029 \"ext/standard/var_unserializer.c\"",
          "1029: yy65:",
          "1030:  yych = *++YYCURSOR;",
          "1031:  if (yych == '\"') goto yy84;",
          "1032:  goto yy18;",
          "1033: yy66:",
          "1034:  yych = *++YYCURSOR;",
          "1035:  if (yych == '{') goto yy86;",
          "1036:  goto yy18;",
          "1037: yy67:",
          "1038:  ++YYCURSOR;",
          "1039: #line 683 \"ext/standard/var_unserializer.re\"",
          "1040:  {",
          "1042:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1043:  return 1;",
          "1044: }",
          "1045: #line 1046 \"ext/standard/var_unserializer.c\"",
          "1046: yy69:",
          "1052:   if (yych <= '9') goto yy69;",
          "1057:    goto yy73;",
          "1059:    if (yych == 'e') goto yy73;",
          "1063: yy71:",
          "1065: #line 731 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1175:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1176:  return 1;",
          "1177: }",
          "1180:  yych = *++YYCURSOR;",
          "1181:  if (yych <= ',') {",
          "1183:  } else {",
          "1185:   if (yych <= '/') goto yy18;",
          "1187:   goto yy18;",
          "1188:  }",
          "1190:  yych = *++YYCURSOR;",
          "1206:  goto yy18;",
          "1208:  yych = *++YYCURSOR;",
          "1211:  goto yy18;",
          "1236:  ++YYCURSOR;",
          "1238:  {",
          "1285:  if (start[2] == '-' || start[2] == '+') {",
          "1286:   digits--;",
          "",
          "[Removed Lines]",
          "1178: #line 1179 \"ext/standard/var_unserializer.c\"",
          "1179: yy65:",
          "1182:   if (yych != '+') goto yy18;",
          "1184:   if (yych <= '-') goto yy66;",
          "1186:   if (yych <= '9') goto yy67;",
          "1189: yy66:",
          "1191:  if (yych <= ',') {",
          "1192:   if (yych == '+') goto yy69;",
          "1193:   goto yy18;",
          "1194:  } else {",
          "1195:   if (yych <= '-') goto yy69;",
          "1196:   if (yych <= '/') goto yy18;",
          "1197:   if (yych >= ':') goto yy18;",
          "1198:  }",
          "1199: yy67:",
          "1200:  ++YYCURSOR;",
          "1201:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1202:  yych = *YYCURSOR;",
          "1203:  if (yych <= '/') goto yy18;",
          "1204:  if (yych <= '9') goto yy67;",
          "1205:  if (yych == ';') goto yy63;",
          "1207: yy69:",
          "1209:  if (yych <= '/') goto yy18;",
          "1210:  if (yych <= '9') goto yy67;",
          "1212: yy70:",
          "1213:  ++YYCURSOR;",
          "1214:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1215:  yych = *YYCURSOR;",
          "1216:  if (yych <= ';') {",
          "1217:   if (yych <= '/') goto yy18;",
          "1218:   if (yych <= '9') goto yy70;",
          "1219:   if (yych <= ':') goto yy18;",
          "1220:   goto yy63;",
          "1221:  } else {",
          "1222:   if (yych <= 'E') {",
          "1223:    if (yych <= 'D') goto yy18;",
          "1224:    goto yy65;",
          "1225:   } else {",
          "1226:    if (yych == 'e') goto yy65;",
          "1227:    goto yy18;",
          "1228:   }",
          "1229:  }",
          "1230: yy72:",
          "1231:  yych = *++YYCURSOR;",
          "1232:  if (yych != 'F') goto yy18;",
          "1233: yy73:",
          "1234:  yych = *++YYCURSOR;",
          "1235:  if (yych != ';') goto yy18;",
          "1237: #line 692 \"ext/standard/var_unserializer.re\"",
          "1241:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1242:   ZVAL_DOUBLE(rval, ZEND_NAN);",
          "1243:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1244:   ZVAL_DOUBLE(rval, ZEND_INFINITY);",
          "1245:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1246:   ZVAL_DOUBLE(rval, -ZEND_INFINITY);",
          "1247:  } else {",
          "1248:   ZVAL_NULL(rval);",
          "1249:  }",
          "1251:  return 1;",
          "1252: }",
          "1253: #line 1254 \"ext/standard/var_unserializer.c\"",
          "1254: yy76:",
          "1255:  yych = *++YYCURSOR;",
          "1256:  if (yych == 'N') goto yy73;",
          "1257:  goto yy18;",
          "1258: yy77:",
          "1259:  yych = *++YYCURSOR;",
          "1260:  if (yych <= ',') {",
          "1261:   if (yych != '+') goto yy18;",
          "1262:  } else {",
          "1263:   if (yych <= '-') goto yy78;",
          "1264:   if (yych <= '/') goto yy18;",
          "1265:   if (yych <= '9') goto yy79;",
          "1266:   goto yy18;",
          "1267:  }",
          "1268: yy78:",
          "1269:  yych = *++YYCURSOR;",
          "1270:  if (yych <= '/') goto yy18;",
          "1271:  if (yych >= ':') goto yy18;",
          "1272: yy79:",
          "1273:  ++YYCURSOR;",
          "1274:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1275:  yych = *YYCURSOR;",
          "1276:  if (yych <= '/') goto yy18;",
          "1277:  if (yych <= '9') goto yy79;",
          "1278:  if (yych != ';') goto yy18;",
          "1279:  ++YYCURSOR;",
          "1280: #line 666 \"ext/standard/var_unserializer.re\"",
          "1281:  {",
          "1282: #if SIZEOF_ZEND_LONG == 4",
          "1283:  int digits = YYCURSOR - start - 3;",
          "",
          "[Added Lines]",
          "1074: #line 1075 \"ext/standard/var_unserializer.c\"",
          "1075: yy73:",
          "1078:   if (yych == '+') goto yy88;",
          "1079:   goto yy18;",
          "1081:   if (yych <= '-') goto yy88;",
          "1083:   if (yych <= '9') goto yy89;",
          "1086: yy74:",
          "1088:  if (yych == 'F') goto yy91;",
          "1090: yy75:",
          "1092:  if (yych == 'N') goto yy91;",
          "1094: yy76:",
          "1096: #line 689 \"ext/standard/var_unserializer.re\"",
          "1098: #if SIZEOF_ZEND_LONG == 4",
          "1099:  int digits = YYCURSOR - start - 3;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1303:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1304:  return 1;",
          "1305: }",
          "1341:  yych = *++YYCURSOR;",
          "1351:  ++YYCURSOR;",
          "1353:  {",
          "1354:  zend_long id;",
          "",
          "[Removed Lines]",
          "1306: #line 1307 \"ext/standard/var_unserializer.c\"",
          "1307: yy83:",
          "1308:  yych = *++YYCURSOR;",
          "1309:  if (yych <= '/') goto yy18;",
          "1310:  if (yych >= '2') goto yy18;",
          "1311:  yych = *++YYCURSOR;",
          "1312:  if (yych != ';') goto yy18;",
          "1313:  ++YYCURSOR;",
          "1314: #line 660 \"ext/standard/var_unserializer.re\"",
          "1315:  {",
          "1317:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1318:  return 1;",
          "1319: }",
          "1320: #line 1321 \"ext/standard/var_unserializer.c\"",
          "1321: yy87:",
          "1322:  ++YYCURSOR;",
          "1323: #line 654 \"ext/standard/var_unserializer.re\"",
          "1324:  {",
          "1326:  ZVAL_NULL(rval);",
          "1327:  return 1;",
          "1328: }",
          "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
          "1330: yy89:",
          "1331:  yych = *++YYCURSOR;",
          "1332:  if (yych <= ',') {",
          "1333:   if (yych != '+') goto yy18;",
          "1334:  } else {",
          "1335:   if (yych <= '-') goto yy90;",
          "1336:   if (yych <= '/') goto yy18;",
          "1337:   if (yych <= '9') goto yy91;",
          "1338:   goto yy18;",
          "1339:  }",
          "1340: yy90:",
          "1342:  if (yych <= '/') goto yy18;",
          "1343:  if (yych >= ':') goto yy18;",
          "1344: yy91:",
          "1345:  ++YYCURSOR;",
          "1346:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1347:  yych = *YYCURSOR;",
          "1348:  if (yych <= '/') goto yy18;",
          "1349:  if (yych <= '9') goto yy91;",
          "1350:  if (yych != ';') goto yy18;",
          "1352: #line 629 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1122: #line 1123 \"ext/standard/var_unserializer.c\"",
          "1123: yy78:",
          "1125:  if (yych == '\"') goto yy92;",
          "1126:  goto yy18;",
          "1127: yy79:",
          "1129: #line 652 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1375:  return 1;",
          "1376: }",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1379:  yych = *++YYCURSOR;",
          "1380:  if (yych <= ',') {",
          "1382:  } else {",
          "1383:   if (yych <= '-') goto yy96;",
          "1384:   if (yych <= '/') goto yy18;",
          "1387:  }",
          "1393:  ++YYCURSOR;",
          "1394:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1395:  yych = *YYCURSOR;",
          "1396:  if (yych <= '/') goto yy18;",
          "1399:  ++YYCURSOR;",
          "1401:  {",
          "1409:   return 0;",
          "1410:  }",
          "1416:  }",
          "1419:  } else {",
          "1422:  }",
          "1424:  return 1;",
          "1425: }",
          "1427: }",
          "1431:  return 0;",
          "",
          "[Removed Lines]",
          "1378: yy95:",
          "1381:   if (yych != '+') goto yy18;",
          "1385:   if (yych <= '9') goto yy97;",
          "1386:   goto yy18;",
          "1388: yy96:",
          "1389:  yych = *++YYCURSOR;",
          "1390:  if (yych <= '/') goto yy18;",
          "1391:  if (yych >= ':') goto yy18;",
          "1392: yy97:",
          "1397:  if (yych <= '9') goto yy97;",
          "1398:  if (yych != ';') goto yy18;",
          "1400: #line 603 \"ext/standard/var_unserializer.re\"",
          "1402:  zend_long id;",
          "1405:  if (!var_hash) return 0;",
          "1407:  id = parse_iv(start + 2) - 1;",
          "1408:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1412:  zval_ptr_dtor(rval);",
          "1413:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1414:   ZVAL_UNDEF(rval);",
          "1415:   return 1;",
          "1417:  if (Z_ISREF_P(rval_ref)) {",
          "1418:   ZVAL_COPY(rval, rval_ref);",
          "1420:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1421:   ZVAL_COPY(rval, rval_ref);",
          "1426: #line 1427 \"ext/standard/var_unserializer.c\"",
          "1428: #line 978 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1154: #line 1155 \"ext/standard/var_unserializer.c\"",
          "1155: yy81:",
          "1156:  yych = *++YYCURSOR;",
          "1157:  if (yych == '\"') goto yy94;",
          "1158:  goto yy18;",
          "1159: yy82:",
          "1160:  ++YYCURSOR;",
          "1161: #line 841 \"ext/standard/var_unserializer.re\"",
          "1162:  {",
          "1163:  size_t len, len2, len3, maxlen;",
          "1164:  zend_long elements;",
          "1165:  char *str;",
          "1166:  zend_string *class_name;",
          "1167:  zend_class_entry *ce;",
          "1168:  int incomplete_class = 0;",
          "1170:  int custom_object = 0;",
          "1172:  zval user_func;",
          "1173:  zval retval;",
          "1174:  zval args[1];",
          "1176:     if (!var_hash) return 0;",
          "1177:  if (*start == 'C') {",
          "1178:   custom_object = 1;",
          "1179:  }",
          "1181:  len2 = len = parse_uiv(start + 2);",
          "1182:  maxlen = max - YYCURSOR;",
          "1183:  if (maxlen < len || len == 0) {",
          "1185:   return 0;",
          "1186:  }",
          "1188:  str = (char*)YYCURSOR;",
          "1190:  YYCURSOR += len;",
          "1192:  if (*(YYCURSOR) != '\"') {",
          "1194:   return 0;",
          "1195:  }",
          "1196:  if (*(YYCURSOR+1) != ':') {",
          "1198:   return 0;",
          "1199:  }",
          "1201:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1202:  if (len3 != len)",
          "1203:  {",
          "1205:   return 0;",
          "1206:  }",
          "1208:  class_name = zend_string_init(str, len, 0);",
          "1210:  do {",
          "1211:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "1212:    incomplete_class = 1;",
          "1213:    ce = PHP_IC_ENTRY;",
          "1214:    break;",
          "1215:   }",
          "1218:   BG(serialize_lock)++;",
          "1219:   ce = zend_lookup_class(class_name);",
          "1220:   if (ce) {",
          "1221:    BG(serialize_lock)--;",
          "1222:    if (EG(exception)) {",
          "1223:     zend_string_release(class_name);",
          "1224:     return 0;",
          "1225:    }",
          "1226:    break;",
          "1227:   }",
          "1228:   BG(serialize_lock)--;",
          "1230:   if (EG(exception)) {",
          "1231:    zend_string_release(class_name);",
          "1232:    return 0;",
          "1233:   }",
          "1236:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1237:    incomplete_class = 1;",
          "1238:    ce = PHP_IC_ENTRY;",
          "1239:    break;",
          "1240:   }",
          "1243:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1245:   ZVAL_STR_COPY(&args[0], class_name);",
          "1246:   BG(serialize_lock)++;",
          "1247:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1248:    BG(serialize_lock)--;",
          "1249:    if (EG(exception)) {",
          "1250:     zend_string_release(class_name);",
          "1251:     zval_ptr_dtor(&user_func);",
          "1252:     zval_ptr_dtor(&args[0]);",
          "1253:     return 0;",
          "1254:    }",
          "1255:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1256:    incomplete_class = 1;",
          "1257:    ce = PHP_IC_ENTRY;",
          "1258:    zval_ptr_dtor(&user_func);",
          "1259:    zval_ptr_dtor(&args[0]);",
          "1260:    break;",
          "1261:   }",
          "1262:   BG(serialize_lock)--;",
          "1263:   zval_ptr_dtor(&retval);",
          "1264:   if (EG(exception)) {",
          "1265:    zend_string_release(class_name);",
          "1266:    zval_ptr_dtor(&user_func);",
          "1267:    zval_ptr_dtor(&args[0]);",
          "1268:    return 0;",
          "1269:   }",
          "1272:   BG(serialize_lock)++;",
          "1273:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1274:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1275:    incomplete_class = 1;",
          "1276:    ce = PHP_IC_ENTRY;",
          "1277:   }",
          "1278:   BG(serialize_lock)--;",
          "1280:   zval_ptr_dtor(&user_func);",
          "1281:   zval_ptr_dtor(&args[0]);",
          "1282:   break;",
          "1283:  } while (1);",
          "1287:  if (custom_object) {",
          "1288:   int ret;",
          "1290:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1292:   if (ret && incomplete_class) {",
          "1293:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1294:   }",
          "1295:   zend_string_release(class_name);",
          "1296:   return ret;",
          "1297:  }",
          "1299:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1301:  if (elements < 0) {",
          "1302:     zend_string_release(class_name);",
          "1303:     return 0;",
          "1304:  }",
          "1306:  if (incomplete_class) {",
          "1307:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1308:  }",
          "1309:  zend_string_release(class_name);",
          "1311:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1312: }",
          "1313: #line 1314 \"ext/standard/var_unserializer.c\"",
          "1314: yy84:",
          "1315:  ++YYCURSOR;",
          "1316: #line 772 \"ext/standard/var_unserializer.re\"",
          "1317:  {",
          "1318:  size_t len, maxlen;",
          "1319:  zend_string *str;",
          "1321:  len = parse_uiv(start + 2);",
          "1322:  maxlen = max - YYCURSOR;",
          "1323:  if (maxlen < len) {",
          "1325:   return 0;",
          "1326:  }",
          "1328:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1329:   return 0;",
          "1330:  }",
          "1332:  if (*(YYCURSOR) != '\"') {",
          "1333:   zend_string_free(str);",
          "1335:   return 0;",
          "1336:  }",
          "1338:  if (*(YYCURSOR + 1) != ';') {",
          "1339:   efree(str);",
          "1341:   return 0;",
          "1342:  }",
          "1344:  YYCURSOR += 2;",
          "1347:  ZVAL_STR(rval, str);",
          "1348:  return 1;",
          "1349: }",
          "1350: #line 1351 \"ext/standard/var_unserializer.c\"",
          "1351: yy86:",
          "1352:  ++YYCURSOR;",
          "1353: #line 806 \"ext/standard/var_unserializer.re\"",
          "1354:  {",
          "1355:  zend_long elements = parse_iv(start + 2);",
          "1358:     if (!var_hash) return 0;",
          "1360:  if (elements < 0) {",
          "1361:   return 0;",
          "1362:  }",
          "1364:  array_init_size(rval, elements);",
          "1365:  if (elements) {",
          "1368:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1369:  }",
          "1371:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1372:   return 0;",
          "1373:  }",
          "1375:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1376: }",
          "1378: yy88:",
          "1381:   if (yych == '+') goto yy96;",
          "1382:   goto yy18;",
          "1386:   if (yych >= ':') goto yy18;",
          "1388: yy89:",
          "1393:  if (yych <= '9') goto yy89;",
          "1394:  if (yych == ';') goto yy71;",
          "1395:  goto yy18;",
          "1396: yy91:",
          "1397:  yych = *++YYCURSOR;",
          "1398:  if (yych == ';') goto yy97;",
          "1399:  goto yy18;",
          "1400: yy92:",
          "1402: #line 830 \"ext/standard/var_unserializer.re\"",
          "1404:  long elements;",
          "1405:     if (!var_hash) return 0;",
          "1407:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1408:  if (elements < 0) {",
          "1409:   return 0;",
          "1410:  }",
          "1411:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1412: }",
          "1413: #line 1414 \"ext/standard/var_unserializer.c\"",
          "1414: yy94:",
          "1415:  ++YYCURSOR;",
          "1416: #line 740 \"ext/standard/var_unserializer.re\"",
          "1417:  {",
          "1418:  size_t len, maxlen;",
          "1419:  char *str;",
          "1421:  len = parse_uiv(start + 2);",
          "1422:  maxlen = max - YYCURSOR;",
          "1423:  if (maxlen < len) {",
          "1428:  str = (char*)YYCURSOR;",
          "1430:  YYCURSOR += len;",
          "1432:  if (*(YYCURSOR) != '\"') {",
          "1434:   return 0;",
          "1437:  if (*(YYCURSOR + 1) != ';') {",
          "1439:   return 0;",
          "1440:  }",
          "1442:  YYCURSOR += 2;",
          "1445:  ZVAL_STRINGL(rval, str, len);",
          "1446:  return 1;",
          "1447: }",
          "1448: #line 1449 \"ext/standard/var_unserializer.c\"",
          "1449: yy96:",
          "1450:  yych = *++YYCURSOR;",
          "1451:  if (yych <= '/') goto yy18;",
          "1452:  if (yych <= '9') goto yy89;",
          "1453:  goto yy18;",
          "1454: yy97:",
          "1455:  ++YYCURSOR;",
          "1456: #line 715 \"ext/standard/var_unserializer.re\"",
          "1457:  {",
          "1460:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1461:   ZVAL_DOUBLE(rval, ZEND_NAN);",
          "1462:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1463:   ZVAL_DOUBLE(rval, ZEND_INFINITY);",
          "1464:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1465:   ZVAL_DOUBLE(rval, -ZEND_INFINITY);",
          "1467:   ZVAL_NULL(rval);",
          "1472: #line 1473 \"ext/standard/var_unserializer.c\"",
          "1474: #line 1001 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: #define VAR_ENTRIES_MAX 1024",
          "71: #define VAR_ENTRIES_DBG 0",
          "73: typedef struct {",
          "74:  zval *data[VAR_ENTRIES_MAX];",
          "75:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:         (*var_hashx)->last_dtor = var_hash;",
          "139:     }",
          "140:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "141:     return &var_hash->data[var_hash->used_slots++];",
          "142: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:  Z_ACCESS_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "185:  zend_long i;",
          "186:  var_entries *var_hash = (*var_hashx)->first;",
          "187:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "188: #if VAR_ENTRIES_DBG",
          "189:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "190: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:  zend_bool wakeup_failed = 0;",
          "193:  zval wakeup_name;",
          "194:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "198:  while (var_dtor_hash) {",
          "199:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "200: #if VAR_ENTRIES_DBG",
          "201:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "202: #endif",
          "204:   }",
          "205:   next = var_dtor_hash->next;",
          "206:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "207:   var_dtor_hash = next;",
          "208:  }",
          "209: }",
          "",
          "[Removed Lines]",
          "203:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "208:    zval *zv = &var_dtor_hash->data[i];",
          "214:    if (Z_ACCESS_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "215:     if (!wakeup_failed) {",
          "216:      zval retval;",
          "217:      if (Z_ISUNDEF(wakeup_name)) {",
          "218:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "219:      }",
          "221:      BG(serialize_lock)++;",
          "222:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "223:       wakeup_failed = 1;",
          "224:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "225:      }",
          "226:      BG(serialize_lock)--;",
          "228:      zval_ptr_dtor(&retval);",
          "229:     } else {",
          "230:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "231:     }",
          "232:    }",
          "234:    zval_ptr_dtor(zv);",
          "241:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "509: #endif",
          "510: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "511: {",
          "514:  HashTable *ht;",
          "515:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "512:  zval retval;",
          "513:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "534:  ZVAL_DEREF(rval);",
          "535:  if (has_wakeup) {",
          "548:  }",
          "550:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "536:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "537:   BG(serialize_lock)++;",
          "538:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "539:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "540:   }",
          "541:   BG(serialize_lock)--;",
          "542:   zval_dtor(&fname);",
          "543:   zval_dtor(&retval);",
          "544:  }",
          "546:  if (EG(exception)) {",
          "547:   return 0;",
          "",
          "[Added Lines]",
          "568:   zval *wakeup_var = var_tmp_var(var_hash);",
          "569:   ZVAL_COPY(wakeup_var, rval);",
          "570:   Z_ACCESS_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61f2f5a0f760157f9c9d32d7d3df2be47a73e74d",
      "candidate_info": {
        "commit_hash": "61f2f5a0f760157f9c9d32d7d3df2be47a73e74d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/61f2f5a0f760157f9c9d32d7d3df2be47a73e74d",
        "files": [
          "ext/standard/tests/serialize/bug72663_2.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Bug #72663 - part 2\n\nIf a (nested) unserialize() call fails, we remove all the values\nthat were inserted into var_hash during that call. This prevents\ntheir use in other unserializations in the same context.",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug72663_2.phpt||ext/standard/tests/serialize/bug72663_2.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug72663_2.phpt||ext/standard/tests/serialize/bug72663_2.phpt": [
          "File: ext/standard/tests/serialize/bug72663_2.phpt -> ext/standard/tests/serialize/bug72663_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72663 (2): Don't allow references into failed unserialize",
          "3: --FILE--",
          "4: <?php",
          "6: class obj implements Serializable {",
          "7:     public $data;",
          "8:     function serialize() {",
          "9:         return serialize($this->data);",
          "10:     }",
          "11:     function unserialize($data) {",
          "12:         $this->data = unserialize($data);",
          "13:     }",
          "14: }",
          "16: $inner = 'a:1:{i:0;O:9:\"Exception\":2:{s:7:\"'.\"\\0\".'*'.\"\\0\".'file\";R:4;}';",
          "17: $exploit = 'a:2:{i:0;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';",
          "18: var_dump(unserialize($exploit));",
          "20: ?>",
          "21: --EXPECTF--",
          "22: Notice: unserialize(): Unexpected end of serialized data in %s on line %d",
          "24: Notice: unserialize(): Error at offset 46 of 47 bytes in %s on line %d",
          "26: Notice: unserialize(): Error at offset 79 of 80 bytes in %s on line %d",
          "27: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "301: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash, HashTable *classes",
          "302: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash, classes",
          "304: static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, zend_long elements, int objprops)",
          "305: {",
          "306:  while (elements-- > 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:   ZVAL_UNDEF(&key);",
          "313:    zval_dtor(&key);",
          "314:    return 0;",
          "315:   }",
          "",
          "[Removed Lines]",
          "312:   if (!php_var_unserialize_ex(&key, p, max, NULL, classes)) {",
          "",
          "[Added Lines]",
          "314:   if (!php_var_unserialize_internal(&key, p, max, NULL, classes)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "365:    }",
          "366:   }",
          "369:    zval_dtor(&key);",
          "370:    return 0;",
          "371:   }",
          "",
          "[Removed Lines]",
          "368:   if (!php_var_unserialize_ex(data, p, max, var_hash, classes)) {",
          "",
          "[Added Lines]",
          "370:   if (!php_var_unserialize_internal(data, p, max, var_hash, classes)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "502:  return php_var_unserialize_ex(UNSERIALIZE_PASSTHRU);",
          "503: }",
          "506: PHPAPI int php_var_unserialize_ex(UNSERIALIZE_PARAMETER)",
          "507: {",
          "508:  const unsigned char *cursor, *limit, *marker, *start;",
          "509:  zval *rval_ref;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "508: {",
          "509:  var_entries *orig_var_entries = (*var_hash)->last;",
          "510:  zend_long orig_used_slots = orig_var_entries ? orig_var_entries->used_slots : 0;",
          "511:  int result;",
          "513:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU);",
          "515:  if (!result) {",
          "519:   var_entries *e = orig_var_entries;",
          "520:   zend_long s = orig_used_slots;",
          "521:   while (e) {",
          "522:    for (; s < e->used_slots; s++) {",
          "523:     e->data[s] = NULL;",
          "524:    }",
          "526:    e = e->next;",
          "527:    s = 0;",
          "528:   }",
          "529:  }",
          "531:  return result;",
          "532: }",
          "534: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "522:  start = cursor;",
          "526: {",
          "527:  YYCTYPE yych;",
          "528:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "525: #line 526 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "553: #line 554 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash, HashTable *classes",
          "306: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash, classes",
          "308: static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, zend_long elements, int objprops)",
          "309: {",
          "310:  while (elements-- > 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "314:   ZVAL_UNDEF(&key);",
          "317:    zval_dtor(&key);",
          "318:    return 0;",
          "319:   }",
          "",
          "[Removed Lines]",
          "316:   if (!php_var_unserialize_ex(&key, p, max, NULL, classes)) {",
          "",
          "[Added Lines]",
          "318:   if (!php_var_unserialize_internal(&key, p, max, NULL, classes)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "369:    }",
          "370:   }",
          "373:    zval_dtor(&key);",
          "374:    return 0;",
          "375:   }",
          "",
          "[Removed Lines]",
          "372:   if (!php_var_unserialize_ex(data, p, max, var_hash, classes)) {",
          "",
          "[Added Lines]",
          "374:   if (!php_var_unserialize_internal(data, p, max, var_hash, classes)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "506:  return php_var_unserialize_ex(UNSERIALIZE_PASSTHRU);",
          "507: }",
          "510: PHPAPI int php_var_unserialize_ex(UNSERIALIZE_PARAMETER)",
          "511: {",
          "512:  const unsigned char *cursor, *limit, *marker, *start;",
          "513:  zval *rval_ref;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512: {",
          "513:  var_entries *orig_var_entries = (*var_hash)->last;",
          "514:  zend_long orig_used_slots = orig_var_entries ? orig_var_entries->used_slots : 0;",
          "515:  int result;",
          "517:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU);",
          "519:  if (!result) {",
          "523:   var_entries *e = orig_var_entries;",
          "524:   zend_long s = orig_used_slots;",
          "525:   while (e) {",
          "526:    for (; s < e->used_slots; s++) {",
          "527:     e->data[s] = NULL;",
          "528:    }",
          "530:    e = e->next;",
          "531:    s = 0;",
          "532:   }",
          "533:  }",
          "535:  return result;",
          "536: }",
          "538: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7caa2bd8e72d51201b90158c34219d6feefb4ff",
      "candidate_info": {
        "commit_hash": "f7caa2bd8e72d51201b90158c34219d6feefb4ff",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f7caa2bd8e72d51201b90158c34219d6feefb4ff",
        "files": [
          "ext/standard/php_var.h",
          "ext/standard/var.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Hide (un)serialize data from ABI\n\nThe (UN)SERIALIZE_INIT/DESTROY macros now go through non-inlined\nfunctions, so any changes to them will apply to extensions without\nrebuilds.\n\nAdditionally, the (un)serialize_data structures are now no longer\nexported.\n\nThis means that we are allowed to change these structures in patch\nreleases without breaking the ABI.",
        "before_after_code_files": [
          "ext/standard/php_var.h||ext/standard/php_var.h",
          "ext/standard/var.c||ext/standard/var.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/php_var.h||ext/standard/php_var.h": [
          "File: ext/standard/php_var.h -> ext/standard/php_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: PHPAPI void php_debug_zval_dump(zval *struc, int level);",
          "53: typedef struct php_serialize_data *php_serialize_data_t;",
          "54: typedef struct php_unserialize_data *php_unserialize_data_t;",
          "",
          "[Removed Lines]",
          "41: struct php_serialize_data {",
          "42:  HashTable ht;",
          "43:  uint32_t n;",
          "44: };",
          "46: struct php_unserialize_data {",
          "47:  void *first;",
          "48:  void *last;",
          "49:  void *first_dtor;",
          "50:  void *last_dtor;",
          "51: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: PHPAPI int php_var_unserialize_intern(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash);",
          "60: PHPAPI int php_var_unserialize_ex(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash, HashTable *classes);",
          "62: #define PHP_VAR_SERIALIZE_INIT(d) \\",
          "79: #define PHP_VAR_SERIALIZE_DESTROY(d) \\",
          "91: #define PHP_VAR_UNSERIALIZE_INIT(d) \\",
          "106: #define PHP_VAR_UNSERIALIZE_DESTROY(d) \\",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hash, zval *ozval, zval *nzval);",
          "119: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hash, zval *val);",
          "",
          "[Removed Lines]",
          "63: do  { \\",
          "65:  if (BG(serialize_lock) || !BG(serialize).level) { \\",
          "66:   (d) = (php_serialize_data_t) emalloc(sizeof(struct php_serialize_data)); \\",
          "67:   zend_hash_init(&(d)->ht, 16, NULL, ZVAL_PTR_DTOR, 0); \\",
          "68:   (d)->n = 0; \\",
          "69:   if (!BG(serialize_lock)) { \\",
          "70:    BG(serialize).data = d; \\",
          "71:    BG(serialize).level = 1; \\",
          "72:   } \\",
          "73:  } else { \\",
          "74:   (d) = BG(serialize).data; \\",
          "75:   ++BG(serialize).level; \\",
          "76:  } \\",
          "77: } while(0)",
          "80: do { \\",
          "82:  if (BG(serialize_lock) || BG(serialize).level == 1) { \\",
          "83:   zend_hash_destroy(&(d)->ht); \\",
          "84:   efree((d)); \\",
          "85:  } \\",
          "86:  if (!BG(serialize_lock) && !--BG(serialize).level) { \\",
          "87:   BG(serialize).data = NULL; \\",
          "88:  } \\",
          "89: } while (0)",
          "92: do { \\",
          "94:  if (BG(serialize_lock) || !BG(unserialize).level) { \\",
          "95:   (d) = (php_unserialize_data_t)ecalloc(1, sizeof(struct php_unserialize_data)); \\",
          "96:   if (!BG(serialize_lock)) { \\",
          "97:    BG(unserialize).data = (d); \\",
          "98:    BG(unserialize).level = 1; \\",
          "99:   } \\",
          "100:  } else { \\",
          "101:   (d) = BG(unserialize).data; \\",
          "102:   ++BG(unserialize).level; \\",
          "103:  } \\",
          "104: } while (0)",
          "107: do { \\",
          "109:  if (BG(serialize_lock) || BG(unserialize).level == 1) { \\",
          "110:   var_destroy(&(d)); \\",
          "111:   efree((d)); \\",
          "112:  } \\",
          "113:  if (!BG(serialize_lock) && !--BG(unserialize).level) { \\",
          "114:   BG(unserialize).data = NULL; \\",
          "115:  } \\",
          "116: } while (0)",
          "",
          "[Added Lines]",
          "50: PHPAPI php_serialize_data_t php_var_serialize_init(void);",
          "51: PHPAPI void php_var_serialize_destroy(php_serialize_data_t d);",
          "52: PHPAPI php_unserialize_data_t php_var_unserialize_init(void);",
          "53: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d);",
          "56:  (d) = php_var_serialize_init()",
          "59:  php_var_serialize_destroy(d)",
          "62:  (d) = php_var_unserialize_init()",
          "65:  php_var_unserialize_destroy(d)",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"php_incomplete_class.h\"",
          "36: #define COMMON (is_ref ? \"&\" : \"\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: struct php_serialize_data {",
          "37:  HashTable ht;",
          "38:  uint32_t n;",
          "39: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "993: }",
          "998: PHP_FUNCTION(serialize)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1001: PHPAPI php_serialize_data_t php_var_serialize_init() {",
          "1002:  struct php_serialize_data *d;",
          "1004:  if (BG(serialize_lock) || !BG(serialize).level) {",
          "1005:   d = emalloc(sizeof(struct php_serialize_data));",
          "1006:   zend_hash_init(&d->ht, 16, NULL, ZVAL_PTR_DTOR, 0);",
          "1007:   d->n = 0;",
          "1008:   if (!BG(serialize_lock)) {",
          "1009:    BG(serialize).data = d;",
          "1010:    BG(serialize).level = 1;",
          "1011:   }",
          "1012:  } else {",
          "1013:   d = BG(serialize).data;",
          "1014:   ++BG(serialize).level;",
          "1015:  }",
          "1016:  return d;",
          "1017: }",
          "1019: PHPAPI void php_var_serialize_destroy(php_serialize_data_t d) {",
          "1021:  if (BG(serialize_lock) || BG(serialize).level == 1) {",
          "1022:   zend_hash_destroy(&d->ht);",
          "1023:   efree(d);",
          "1024:  }",
          "1025:  if (!BG(serialize_lock) && !--BG(serialize).level) {",
          "1026:   BG(serialize).data = NULL;",
          "1027:  }",
          "1028: }",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include \"ext/standard/php_var.h\"",
          "25: #include \"php_incomplete_class.h\"",
          "28: #define VAR_ENTRIES_MAX 1024",
          "29: #define VAR_ENTRIES_DBG 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: struct php_unserialize_data {",
          "28:  void *first;",
          "29:  void *last;",
          "30:  void *first_dtor;",
          "31:  void *last_dtor;",
          "32: };",
          "34: PHPAPI php_unserialize_data_t php_var_unserialize_init() {",
          "35:  php_unserialize_data_t d;",
          "37:  if (BG(serialize_lock) || !BG(unserialize).level) {",
          "38:   d = ecalloc(1, sizeof(struct php_unserialize_data));",
          "39:   if (!BG(serialize_lock)) {",
          "40:    BG(unserialize).data = d;",
          "41:    BG(unserialize).level = 1;",
          "42:   }",
          "43:  } else {",
          "44:   d = BG(unserialize).data;",
          "45:   ++BG(unserialize).level;",
          "46:  }",
          "47:  return d;",
          "48: }",
          "50: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d) {",
          "52:  if (BG(serialize_lock) || BG(unserialize).level == 1) {",
          "53:   var_destroy(&d);",
          "54:   efree(d);",
          "55:  }",
          "56:  if (!BG(serialize_lock) && !--BG(unserialize).level) {",
          "57:   BG(unserialize).data = NULL;",
          "58:  }",
          "59: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "238: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "241: #line 246 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "276: #line 281 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "514:  start = cursor;",
          "518: {",
          "519:  YYCTYPE yych;",
          "520:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "517: #line 518 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "552: #line 553 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "551:     0,   0,   0,   0,   0,   0,   0,   0,",
          "552:     0,   0,   0,   0,   0,   0,   0,   0,",
          "553:  };",
          "555:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "556:  yych = *YYCURSOR;",
          "557:  switch (yych) {",
          "558:  case 'C':",
          "560:  case 'N': goto yy5;",
          "567:  case 'o': goto yy12;",
          "572:  }",
          "573: yy2:",
          "576: yy3:",
          "578:  { return 0; }",
          "580: yy4:",
          "581:  yych = *(YYMARKER = ++YYCURSOR);",
          "583:  goto yy3;",
          "584: yy5:",
          "585:  yych = *++YYCURSOR;",
          "587:  goto yy3;",
          "588: yy6:",
          "589:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  goto yy3;",
          "592: yy7:",
          "593:  yych = *(YYMARKER = ++YYCURSOR);",
          "595:  goto yy3;",
          "596: yy8:",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "599:  goto yy3;",
          "600: yy9:",
          "601:  yych = *(YYMARKER = ++YYCURSOR);",
          "603:  goto yy3;",
          "604: yy10:",
          "605:  yych = *(YYMARKER = ++YYCURSOR);",
          "607:  goto yy3;",
          "608: yy11:",
          "609:  yych = *(YYMARKER = ++YYCURSOR);",
          "611:  goto yy3;",
          "612: yy12:",
          "613:  yych = *(YYMARKER = ++YYCURSOR);",
          "615:  goto yy3;",
          "616: yy13:",
          "617:  yych = *(YYMARKER = ++YYCURSOR);",
          "619:  goto yy3;",
          "620: yy14:",
          "621:  ++YYCURSOR;",
          "623:  {",
          "625:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "627: }",
          "632: yy17:",
          "633:  yych = *++YYCURSOR;",
          "634:  if (yybm[0+yych] & 128) {",
          "636:  }",
          "638: yy18:",
          "639:  YYCURSOR = YYMARKER;",
          "640:  goto yy3;",
          "641: yy19:",
          "642:  yych = *++YYCURSOR;",
          "645:  }",
          "646:  goto yy18;",
          "655:  yych = *++YYCURSOR;",
          "773:   }",
          "789:   }",
          "792:  }",
          "798:  }",
          "805:  yych = *++YYCURSOR;",
          "806:  if (yych <= ',') {",
          "808:  } else {",
          "810:   if (yych <= '/') goto yy18;",
          "812:   goto yy18;",
          "813:  }",
          "815:  yych = *++YYCURSOR;",
          "816:  if (yych <= '/') goto yy18;",
          "819:  ++YYCURSOR;",
          "820:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "821:  yych = *YYCURSOR;",
          "822:  if (yych <= '/') goto yy18;",
          "825:  yych = *++YYCURSOR;",
          "827:  ++YYCURSOR;",
          "839:  if (yych <= '/') goto yy18;",
          "840:  if (yych <= '9') goto yy34;",
          "841:  goto yy18;",
          "843:  yych = *++YYCURSOR;",
          "844:  if (yych <= '/') goto yy18;",
          "845:  if (yych >= ':') goto yy18;",
          "847:  ++YYCURSOR;",
          "848:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "849:  yych = *YYCURSOR;",
          "850:  if (yych <= '/') goto yy18;",
          "853:  yych = *++YYCURSOR;",
          "855:  ++YYCURSOR;",
          "872:  }",
          "876:  }",
          "882:  yych = *++YYCURSOR;",
          "884:  if (yych <= '/') goto yy18;",
          "886:  goto yy18;",
          "888:  yych = *++YYCURSOR;",
          "889:  if (yych <= '/') goto yy18;",
          "890:  if (yych >= ':') goto yy18;",
          "892:  ++YYCURSOR;",
          "893:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "894:  yych = *YYCURSOR;",
          "895:  if (yych <= '/') goto yy18;",
          "898:  yych = *++YYCURSOR;",
          "900:  ++YYCURSOR;",
          "939:  if (yych <= '/') goto yy18;",
          "941:  goto yy18;",
          "943:  yych = *++YYCURSOR;",
          "944:  if (yych <= '/') goto yy18;",
          "945:  if (yych >= ':') goto yy18;",
          "947:  ++YYCURSOR;",
          "948:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "949:  yych = *YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "953:  yych = *++YYCURSOR;",
          "955:  ++YYCURSOR;",
          "957:  {",
          "974:   return 0;",
          "975:  }",
          "980:  }",
          "986:  return 1;",
          "987: }",
          "1009:  yych = *++YYCURSOR;",
          "1011:  goto yy18;",
          "1022:  yych = *++YYCURSOR;",
          "1024:  goto yy18;",
          "1031:  ++YYCURSOR;",
          "1058:  ++YYCURSOR;",
          "1059:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1060:  yych = *YYCURSOR;",
          "1061:  if (yych <= ';') {",
          "1062:   if (yych <= '/') goto yy18;",
          "1064:   if (yych <= ':') goto yy18;",
          "1065:  } else {",
          "1066:   if (yych <= 'E') {",
          "1067:    if (yych <= 'D') goto yy18;",
          "1069:   } else {",
          "1071:    goto yy18;",
          "1072:   }",
          "1073:  }",
          "1075:  ++YYCURSOR;",
          "1077:  {",
          "1078: #if SIZEOF_ZEND_LONG == 4",
          "1079: use_double:",
          "",
          "[Removed Lines]",
          "559:  case 'O': goto yy13;",
          "561:  case 'R': goto yy2;",
          "562:  case 'S': goto yy10;",
          "563:  case 'a': goto yy11;",
          "564:  case 'b': goto yy6;",
          "565:  case 'd': goto yy8;",
          "566:  case 'i': goto yy7;",
          "568:  case 'r': goto yy4;",
          "569:  case 's': goto yy9;",
          "570:  case '}': goto yy14;",
          "571:  default: goto yy16;",
          "574:  yych = *(YYMARKER = ++YYCURSOR);",
          "575:  if (yych == ':') goto yy95;",
          "577: #line 884 \"ext/standard/var_unserializer.re\"",
          "579: #line 580 \"ext/standard/var_unserializer.c\"",
          "582:  if (yych == ':') goto yy89;",
          "586:  if (yych == ';') goto yy87;",
          "590:  if (yych == ':') goto yy83;",
          "594:  if (yych == ':') goto yy77;",
          "598:  if (yych == ':') goto yy53;",
          "602:  if (yych == ':') goto yy46;",
          "606:  if (yych == ':') goto yy39;",
          "610:  if (yych == ':') goto yy32;",
          "614:  if (yych == ':') goto yy25;",
          "618:  if (yych == ':') goto yy17;",
          "622: #line 878 \"ext/standard/var_unserializer.re\"",
          "628: #line 629 \"ext/standard/var_unserializer.c\"",
          "629: yy16:",
          "630:  yych = *++YYCURSOR;",
          "631:  goto yy3;",
          "635:   goto yy20;",
          "637:  if (yych == '+') goto yy19;",
          "643:  if (yybm[0+yych] & 128) {",
          "644:   goto yy20;",
          "647: yy20:",
          "648:  ++YYCURSOR;",
          "649:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "650:  yych = *YYCURSOR;",
          "651:  if (yybm[0+yych] & 128) {",
          "652:   goto yy20;",
          "653:  }",
          "654:  if (yych != ':') goto yy18;",
          "656:  if (yych != '\"') goto yy18;",
          "657:  ++YYCURSOR;",
          "658: #line 733 \"ext/standard/var_unserializer.re\"",
          "659:  {",
          "660:  size_t len, len2, len3, maxlen;",
          "661:  zend_long elements;",
          "662:  char *str;",
          "663:  zend_string *class_name;",
          "664:  zend_class_entry *ce;",
          "665:  int incomplete_class = 0;",
          "667:  int custom_object = 0;",
          "669:  zval user_func;",
          "670:  zval retval;",
          "671:  zval args[1];",
          "673:     if (!var_hash) return 0;",
          "674:  if (*start == 'C') {",
          "675:   custom_object = 1;",
          "676:  }",
          "678:  len2 = len = parse_uiv(start + 2);",
          "679:  maxlen = max - YYCURSOR;",
          "680:  if (maxlen < len || len == 0) {",
          "682:   return 0;",
          "683:  }",
          "685:  str = (char*)YYCURSOR;",
          "687:  YYCURSOR += len;",
          "689:  if (*(YYCURSOR) != '\"') {",
          "691:   return 0;",
          "692:  }",
          "693:  if (*(YYCURSOR+1) != ':') {",
          "695:   return 0;",
          "696:  }",
          "698:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "699:  if (len3 != len)",
          "700:  {",
          "702:   return 0;",
          "703:  }",
          "705:  class_name = zend_string_init(str, len, 0);",
          "707:  do {",
          "708:   if(!unserialize_allowed_class(class_name, classes)) {",
          "709:    incomplete_class = 1;",
          "710:    ce = PHP_IC_ENTRY;",
          "711:    break;",
          "712:   }",
          "715:   BG(serialize_lock)++;",
          "716:   ce = zend_lookup_class(class_name);",
          "717:   if (ce) {",
          "718:    BG(serialize_lock)--;",
          "719:    if (EG(exception)) {",
          "720:     zend_string_release(class_name);",
          "721:     return 0;",
          "722:    }",
          "723:    break;",
          "724:   }",
          "725:   BG(serialize_lock)--;",
          "727:   if (EG(exception)) {",
          "728:    zend_string_release(class_name);",
          "729:    return 0;",
          "730:   }",
          "733:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "734:    incomplete_class = 1;",
          "735:    ce = PHP_IC_ENTRY;",
          "736:    break;",
          "737:   }",
          "740:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "742:   ZVAL_STR_COPY(&args[0], class_name);",
          "743:   BG(serialize_lock)++;",
          "744:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "745:    BG(serialize_lock)--;",
          "746:    if (EG(exception)) {",
          "747:     zend_string_release(class_name);",
          "748:     zval_ptr_dtor(&user_func);",
          "749:     zval_ptr_dtor(&args[0]);",
          "750:     return 0;",
          "751:    }",
          "752:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "753:    incomplete_class = 1;",
          "754:    ce = PHP_IC_ENTRY;",
          "755:    zval_ptr_dtor(&user_func);",
          "756:    zval_ptr_dtor(&args[0]);",
          "757:    break;",
          "758:   }",
          "759:   BG(serialize_lock)--;",
          "760:   zval_ptr_dtor(&retval);",
          "761:   if (EG(exception)) {",
          "762:    zend_string_release(class_name);",
          "763:    zval_ptr_dtor(&user_func);",
          "764:    zval_ptr_dtor(&args[0]);",
          "765:    return 0;",
          "766:   }",
          "769:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "770:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "771:    incomplete_class = 1;",
          "772:    ce = PHP_IC_ENTRY;",
          "775:   zval_ptr_dtor(&user_func);",
          "776:   zval_ptr_dtor(&args[0]);",
          "777:   break;",
          "778:  } while (1);",
          "782:  if (custom_object) {",
          "783:   int ret;",
          "785:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "787:   if (ret && incomplete_class) {",
          "788:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "790:   zend_string_release(class_name);",
          "791:   return ret;",
          "794:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "796:  if (incomplete_class) {",
          "797:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "799:  zend_string_release(class_name);",
          "801:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "802: }",
          "803: #line 804 \"ext/standard/var_unserializer.c\"",
          "804: yy25:",
          "807:   if (yych != '+') goto yy18;",
          "809:   if (yych <= '-') goto yy26;",
          "811:   if (yych <= '9') goto yy27;",
          "814: yy26:",
          "817:  if (yych >= ':') goto yy18;",
          "818: yy27:",
          "823:  if (yych <= '9') goto yy27;",
          "824:  if (yych >= ';') goto yy18;",
          "826:  if (yych != '\"') goto yy18;",
          "828: #line 726 \"ext/standard/var_unserializer.re\"",
          "829:  {",
          "830:     if (!var_hash) return 0;",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "833:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "834: }",
          "835: #line 836 \"ext/standard/var_unserializer.c\"",
          "836: yy32:",
          "837:  yych = *++YYCURSOR;",
          "838:  if (yych == '+') goto yy33;",
          "842: yy33:",
          "846: yy34:",
          "851:  if (yych <= '9') goto yy34;",
          "852:  if (yych >= ';') goto yy18;",
          "854:  if (yych != '{') goto yy18;",
          "856: #line 702 \"ext/standard/var_unserializer.re\"",
          "857:  {",
          "858:  zend_long elements = parse_iv(start + 2);",
          "861:     if (!var_hash) return 0;",
          "863:  if (elements < 0) {",
          "864:   return 0;",
          "865:  }",
          "867:  array_init_size(rval, elements);",
          "868:  if (elements) {",
          "871:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "874:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "875:   return 0;",
          "878:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "879: }",
          "880: #line 881 \"ext/standard/var_unserializer.c\"",
          "881: yy39:",
          "883:  if (yych == '+') goto yy40;",
          "885:  if (yych <= '9') goto yy41;",
          "887: yy40:",
          "891: yy41:",
          "896:  if (yych <= '9') goto yy41;",
          "897:  if (yych >= ';') goto yy18;",
          "899:  if (yych != '\"') goto yy18;",
          "901: #line 668 \"ext/standard/var_unserializer.re\"",
          "902:  {",
          "903:  size_t len, maxlen;",
          "904:  zend_string *str;",
          "906:  len = parse_uiv(start + 2);",
          "907:  maxlen = max - YYCURSOR;",
          "908:  if (maxlen < len) {",
          "910:   return 0;",
          "911:  }",
          "913:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "914:   return 0;",
          "915:  }",
          "917:  if (*(YYCURSOR) != '\"') {",
          "918:   zend_string_free(str);",
          "920:   return 0;",
          "921:  }",
          "923:  if (*(YYCURSOR + 1) != ';') {",
          "924:   efree(str);",
          "926:   return 0;",
          "927:  }",
          "929:  YYCURSOR += 2;",
          "932:  ZVAL_STR(rval, str);",
          "933:  return 1;",
          "934: }",
          "935: #line 936 \"ext/standard/var_unserializer.c\"",
          "936: yy46:",
          "937:  yych = *++YYCURSOR;",
          "938:  if (yych == '+') goto yy47;",
          "940:  if (yych <= '9') goto yy48;",
          "942: yy47:",
          "946: yy48:",
          "951:  if (yych <= '9') goto yy48;",
          "952:  if (yych >= ';') goto yy18;",
          "954:  if (yych != '\"') goto yy18;",
          "956: #line 636 \"ext/standard/var_unserializer.re\"",
          "958:  size_t len, maxlen;",
          "959:  char *str;",
          "961:  len = parse_uiv(start + 2);",
          "962:  maxlen = max - YYCURSOR;",
          "963:  if (maxlen < len) {",
          "965:   return 0;",
          "966:  }",
          "968:  str = (char*)YYCURSOR;",
          "970:  YYCURSOR += len;",
          "972:  if (*(YYCURSOR) != '\"') {",
          "977:  if (*(YYCURSOR + 1) != ';') {",
          "979:   return 0;",
          "982:  YYCURSOR += 2;",
          "985:  ZVAL_STRINGL(rval, str, len);",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy53:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych <= '/') {",
          "992:   if (yych <= ',') {",
          "993:    if (yych == '+') goto yy57;",
          "994:    goto yy18;",
          "995:   } else {",
          "996:    if (yych <= '-') goto yy55;",
          "997:    if (yych <= '.') goto yy60;",
          "998:    goto yy18;",
          "999:   }",
          "1000:  } else {",
          "1001:   if (yych <= 'I') {",
          "1002:    if (yych <= '9') goto yy58;",
          "1003:    if (yych <= 'H') goto yy18;",
          "1004:    goto yy56;",
          "1005:   } else {",
          "1006:    if (yych != 'N') goto yy18;",
          "1007:   }",
          "1008:  }",
          "1010:  if (yych == 'A') goto yy76;",
          "1012: yy55:",
          "1013:  yych = *++YYCURSOR;",
          "1014:  if (yych <= '/') {",
          "1015:   if (yych == '.') goto yy60;",
          "1016:   goto yy18;",
          "1017:  } else {",
          "1018:   if (yych <= '9') goto yy58;",
          "1019:   if (yych != 'I') goto yy18;",
          "1020:  }",
          "1021: yy56:",
          "1023:  if (yych == 'N') goto yy72;",
          "1025: yy57:",
          "1026:  yych = *++YYCURSOR;",
          "1027:  if (yych == '.') goto yy60;",
          "1028:  if (yych <= '/') goto yy18;",
          "1029:  if (yych >= ':') goto yy18;",
          "1030: yy58:",
          "1032:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1033:  yych = *YYCURSOR;",
          "1034:  if (yych <= ':') {",
          "1035:   if (yych <= '.') {",
          "1036:    if (yych <= '-') goto yy18;",
          "1037:    goto yy70;",
          "1038:   } else {",
          "1039:    if (yych <= '/') goto yy18;",
          "1040:    if (yych <= '9') goto yy58;",
          "1041:    goto yy18;",
          "1042:   }",
          "1043:  } else {",
          "1044:   if (yych <= 'E') {",
          "1045:    if (yych <= ';') goto yy63;",
          "1046:    if (yych <= 'D') goto yy18;",
          "1047:    goto yy65;",
          "1048:   } else {",
          "1049:    if (yych == 'e') goto yy65;",
          "1050:    goto yy18;",
          "1051:   }",
          "1052:  }",
          "1053: yy60:",
          "1054:  yych = *++YYCURSOR;",
          "1055:  if (yych <= '/') goto yy18;",
          "1056:  if (yych >= ':') goto yy18;",
          "1057: yy61:",
          "1063:   if (yych <= '9') goto yy61;",
          "1068:    goto yy65;",
          "1070:    if (yych == 'e') goto yy65;",
          "1074: yy63:",
          "1076: #line 627 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "593:  case 'O': goto yy4;",
          "595:  case 'R': goto yy6;",
          "596:  case 'S': goto yy7;",
          "597:  case 'a': goto yy8;",
          "598:  case 'b': goto yy9;",
          "599:  case 'd': goto yy10;",
          "600:  case 'i': goto yy11;",
          "602:  case 'r': goto yy13;",
          "603:  case 's': goto yy14;",
          "604:  case '}': goto yy15;",
          "605:  default: goto yy2;",
          "608:  ++YYCURSOR;",
          "610: #line 919 \"ext/standard/var_unserializer.re\"",
          "612: #line 613 \"ext/standard/var_unserializer.c\"",
          "615:  if (yych == ':') goto yy17;",
          "619:  if (yych == ';') goto yy19;",
          "623:  if (yych == ':') goto yy21;",
          "627:  if (yych == ':') goto yy22;",
          "631:  if (yych == ':') goto yy23;",
          "635:  if (yych == ':') goto yy24;",
          "639:  if (yych == ':') goto yy25;",
          "643:  if (yych == ':') goto yy26;",
          "647:  if (yych == ':') goto yy27;",
          "651:  if (yych == ':') goto yy28;",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "655:  if (yych == ':') goto yy29;",
          "656:  goto yy3;",
          "657: yy15:",
          "659: #line 913 \"ext/standard/var_unserializer.re\"",
          "665: #line 666 \"ext/standard/var_unserializer.c\"",
          "669:   goto yy31;",
          "671:  if (yych == '+') goto yy30;",
          "676:  ++YYCURSOR;",
          "677: #line 608 \"ext/standard/var_unserializer.re\"",
          "678:  {",
          "680:  ZVAL_NULL(rval);",
          "681:  return 1;",
          "682: }",
          "683: #line 684 \"ext/standard/var_unserializer.c\"",
          "684: yy21:",
          "686:  if (yych <= ',') {",
          "687:   if (yych == '+') goto yy33;",
          "688:   goto yy18;",
          "689:  } else {",
          "690:   if (yych <= '-') goto yy33;",
          "691:   if (yych <= '/') goto yy18;",
          "692:   if (yych <= '9') goto yy34;",
          "693:   goto yy18;",
          "695: yy22:",
          "696:  yych = *++YYCURSOR;",
          "697:  if (yych == '+') goto yy36;",
          "698:  if (yych <= '/') goto yy18;",
          "699:  if (yych <= '9') goto yy37;",
          "701: yy23:",
          "703:  if (yych == '+') goto yy39;",
          "704:  if (yych <= '/') goto yy18;",
          "705:  if (yych <= '9') goto yy40;",
          "706:  goto yy18;",
          "707: yy24:",
          "708:  yych = *++YYCURSOR;",
          "709:  if (yych <= '/') goto yy18;",
          "710:  if (yych <= '1') goto yy42;",
          "711:  goto yy18;",
          "712: yy25:",
          "713:  yych = *++YYCURSOR;",
          "714:  if (yych <= '/') {",
          "715:   if (yych <= ',') {",
          "716:    if (yych == '+') goto yy43;",
          "717:    goto yy18;",
          "718:   } else {",
          "719:    if (yych <= '-') goto yy44;",
          "720:    if (yych <= '.') goto yy45;",
          "721:    goto yy18;",
          "723:  } else {",
          "724:   if (yych <= 'I') {",
          "725:    if (yych <= '9') goto yy46;",
          "726:    if (yych <= 'H') goto yy18;",
          "727:    goto yy48;",
          "728:   } else {",
          "729:    if (yych == 'N') goto yy49;",
          "730:    goto yy18;",
          "733: yy26:",
          "734:  yych = *++YYCURSOR;",
          "735:  if (yych <= ',') {",
          "736:   if (yych == '+') goto yy50;",
          "737:   goto yy18;",
          "738:  } else {",
          "739:   if (yych <= '-') goto yy50;",
          "740:   if (yych <= '/') goto yy18;",
          "741:   if (yych <= '9') goto yy51;",
          "742:   goto yy18;",
          "744: yy27:",
          "745:  yych = *++YYCURSOR;",
          "746:  if (yych <= ',') {",
          "747:   if (yych == '+') goto yy53;",
          "748:   goto yy18;",
          "749:  } else {",
          "750:   if (yych <= '-') goto yy53;",
          "751:   if (yych <= '/') goto yy18;",
          "752:   if (yych <= '9') goto yy54;",
          "753:   goto yy18;",
          "754:  }",
          "755: yy28:",
          "758:   if (yych == '+') goto yy56;",
          "759:   goto yy18;",
          "761:   if (yych <= '-') goto yy56;",
          "763:   if (yych <= '9') goto yy57;",
          "766: yy29:",
          "768:  if (yych == '+') goto yy59;",
          "770:  if (yych <= '9') goto yy60;",
          "771:  goto yy18;",
          "772: yy30:",
          "773:  yych = *++YYCURSOR;",
          "774:  if (yybm[0+yych] & 128) {",
          "775:   goto yy31;",
          "776:  }",
          "777:  goto yy18;",
          "778: yy31:",
          "782:  if (yybm[0+yych] & 128) {",
          "783:   goto yy31;",
          "784:  }",
          "786:  if (yych <= ':') goto yy62;",
          "787:  goto yy18;",
          "788: yy33:",
          "790:  if (yych <= '/') goto yy18;",
          "791:  if (yych >= ':') goto yy18;",
          "792: yy34:",
          "794:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "795:  yych = *YYCURSOR;",
          "798:  if (yych == ';') goto yy63;",
          "800: yy36:",
          "804: yy37:",
          "809:  if (yych <= '9') goto yy37;",
          "810:  if (yych <= ':') goto yy65;",
          "811:  goto yy18;",
          "812: yy39:",
          "814:  if (yych <= '/') goto yy18;",
          "815:  if (yych >= ':') goto yy18;",
          "816: yy40:",
          "818:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "819:  yych = *YYCURSOR;",
          "820:  if (yych <= '/') goto yy18;",
          "821:  if (yych <= '9') goto yy40;",
          "822:  if (yych <= ':') goto yy66;",
          "823:  goto yy18;",
          "824: yy42:",
          "825:  yych = *++YYCURSOR;",
          "826:  if (yych == ';') goto yy67;",
          "827:  goto yy18;",
          "828: yy43:",
          "829:  yych = *++YYCURSOR;",
          "830:  if (yych == '.') goto yy45;",
          "831:  if (yych <= '/') goto yy18;",
          "832:  if (yych <= '9') goto yy46;",
          "833:  goto yy18;",
          "834: yy44:",
          "835:  yych = *++YYCURSOR;",
          "836:  if (yych <= '/') {",
          "837:   if (yych != '.') goto yy18;",
          "838:  } else {",
          "839:   if (yych <= '9') goto yy46;",
          "840:   if (yych == 'I') goto yy48;",
          "841:   goto yy18;",
          "843: yy45:",
          "844:  yych = *++YYCURSOR;",
          "845:  if (yych <= '/') goto yy18;",
          "846:  if (yych <= '9') goto yy69;",
          "847:  goto yy18;",
          "848: yy46:",
          "849:  ++YYCURSOR;",
          "850:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "851:  yych = *YYCURSOR;",
          "852:  if (yych <= ':') {",
          "853:   if (yych <= '.') {",
          "854:    if (yych <= '-') goto yy18;",
          "855:    goto yy69;",
          "856:   } else {",
          "857:    if (yych <= '/') goto yy18;",
          "858:    if (yych <= '9') goto yy46;",
          "859:    goto yy18;",
          "860:   }",
          "861:  } else {",
          "862:   if (yych <= 'E') {",
          "863:    if (yych <= ';') goto yy71;",
          "864:    if (yych <= 'D') goto yy18;",
          "865:    goto yy73;",
          "866:   } else {",
          "867:    if (yych == 'e') goto yy73;",
          "868:    goto yy18;",
          "869:   }",
          "871: yy48:",
          "873:  if (yych == 'N') goto yy74;",
          "874:  goto yy18;",
          "875: yy49:",
          "876:  yych = *++YYCURSOR;",
          "877:  if (yych == 'A') goto yy75;",
          "878:  goto yy18;",
          "879: yy50:",
          "880:  yych = *++YYCURSOR;",
          "881:  if (yych <= '/') goto yy18;",
          "882:  if (yych >= ':') goto yy18;",
          "883: yy51:",
          "884:  ++YYCURSOR;",
          "885:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "886:  yych = *YYCURSOR;",
          "888:  if (yych <= '9') goto yy51;",
          "889:  if (yych == ';') goto yy76;",
          "891: yy53:",
          "895: yy54:",
          "900:  if (yych <= '9') goto yy54;",
          "901:  if (yych <= ':') goto yy78;",
          "902:  goto yy18;",
          "903: yy56:",
          "905:  if (yych <= '/') goto yy18;",
          "906:  if (yych >= ':') goto yy18;",
          "907: yy57:",
          "909:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "910:  yych = *YYCURSOR;",
          "912:  if (yych <= '9') goto yy57;",
          "913:  if (yych == ';') goto yy79;",
          "915: yy59:",
          "919: yy60:",
          "924:  if (yych <= '9') goto yy60;",
          "925:  if (yych <= ':') goto yy81;",
          "926:  goto yy18;",
          "927: yy62:",
          "929:  if (yych == '\"') goto yy82;",
          "930:  goto yy18;",
          "931: yy63:",
          "933: #line 557 \"ext/standard/var_unserializer.re\"",
          "935:  zend_long id;",
          "938:  if (!var_hash) return 0;",
          "940:  id = parse_iv(start + 2) - 1;",
          "941:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "945:  zval_ptr_dtor(rval);",
          "946:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "947:   ZVAL_UNDEF(rval);",
          "948:   return 1;",
          "949:  }",
          "950:  if (Z_ISREF_P(rval_ref)) {",
          "951:   ZVAL_COPY(rval, rval_ref);",
          "952:  } else {",
          "953:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "954:   ZVAL_COPY(rval, rval_ref);",
          "959: #line 960 \"ext/standard/var_unserializer.c\"",
          "960: yy65:",
          "962:  if (yych == '\"') goto yy84;",
          "964: yy66:",
          "966:  if (yych == '{') goto yy86;",
          "968: yy67:",
          "970: #line 614 \"ext/standard/var_unserializer.re\"",
          "971:  {",
          "973:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "974:  return 1;",
          "975: }",
          "976: #line 977 \"ext/standard/var_unserializer.c\"",
          "977: yy69:",
          "983:   if (yych <= '9') goto yy69;",
          "988:    goto yy73;",
          "990:    if (yych == 'e') goto yy73;",
          "994: yy71:",
          "996: #line 662 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1082:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1083:  return 1;",
          "1084: }",
          "1087:  yych = *++YYCURSOR;",
          "1088:  if (yych <= ',') {",
          "1090:  } else {",
          "1092:   if (yych <= '/') goto yy18;",
          "1094:   goto yy18;",
          "1095:  }",
          "1097:  yych = *++YYCURSOR;",
          "1113:  goto yy18;",
          "1115:  yych = *++YYCURSOR;",
          "1118:  goto yy18;",
          "1120:  ++YYCURSOR;",
          "1132:   } else {",
          "1135:   }",
          "1136:  }",
          "1141:  yych = *++YYCURSOR;",
          "1143:  ++YYCURSOR;",
          "1145:  {",
          "1156:  }",
          "1158:  return 1;",
          "1159: }",
          "1162:  yych = *++YYCURSOR;",
          "1164:  goto yy18;",
          "1186:  ++YYCURSOR;",
          "1188:  {",
          "1194:  }",
          "1203:    }",
          "1206:   }",
          "1212: }",
          "1220:  ++YYCURSOR;",
          "1222:  {",
          "1225:  return 1;",
          "1226: }",
          "1229:  ++YYCURSOR;",
          "1231:  {",
          "1235: }",
          "1238:  yych = *++YYCURSOR;",
          "1239:  if (yych <= ',') {",
          "1241:  } else {",
          "1243:   if (yych <= '/') goto yy18;",
          "1246:  }",
          "1252:  ++YYCURSOR;",
          "1253:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1254:  yych = *YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1258:  ++YYCURSOR;",
          "1260:  {",
          "1268:   return 0;",
          "1269:  }",
          "1272:   return 0;",
          "1273:  }",
          "1278:  }",
          "1282:  return 1;",
          "1283: }",
          "1295: yy96:",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych <= '/') goto yy18;",
          "1299: yy97:",
          "1300:  ++YYCURSOR;",
          "1308:  {",
          "1326:  } else {",
          "1329:  }",
          "1331:  return 1;",
          "1332: }",
          "1334: }",
          "1338:  return 0;",
          "",
          "[Removed Lines]",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "1086: yy65:",
          "1089:   if (yych != '+') goto yy18;",
          "1091:   if (yych <= '-') goto yy66;",
          "1093:   if (yych <= '9') goto yy67;",
          "1096: yy66:",
          "1098:  if (yych <= ',') {",
          "1099:   if (yych == '+') goto yy69;",
          "1100:   goto yy18;",
          "1101:  } else {",
          "1102:   if (yych <= '-') goto yy69;",
          "1103:   if (yych <= '/') goto yy18;",
          "1104:   if (yych >= ':') goto yy18;",
          "1105:  }",
          "1106: yy67:",
          "1107:  ++YYCURSOR;",
          "1108:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1109:  yych = *YYCURSOR;",
          "1110:  if (yych <= '/') goto yy18;",
          "1111:  if (yych <= '9') goto yy67;",
          "1112:  if (yych == ';') goto yy63;",
          "1114: yy69:",
          "1116:  if (yych <= '/') goto yy18;",
          "1117:  if (yych <= '9') goto yy67;",
          "1119: yy70:",
          "1121:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1122:  yych = *YYCURSOR;",
          "1123:  if (yych <= ';') {",
          "1124:   if (yych <= '/') goto yy18;",
          "1125:   if (yych <= '9') goto yy70;",
          "1126:   if (yych <= ':') goto yy18;",
          "1127:   goto yy63;",
          "1128:  } else {",
          "1129:   if (yych <= 'E') {",
          "1130:    if (yych <= 'D') goto yy18;",
          "1131:    goto yy65;",
          "1133:    if (yych == 'e') goto yy65;",
          "1134:    goto yy18;",
          "1137: yy72:",
          "1138:  yych = *++YYCURSOR;",
          "1139:  if (yych != 'F') goto yy18;",
          "1140: yy73:",
          "1142:  if (yych != ';') goto yy18;",
          "1144: #line 611 \"ext/standard/var_unserializer.re\"",
          "1148:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1149:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1150:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1151:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1152:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1153:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1154:  } else {",
          "1155:   ZVAL_NULL(rval);",
          "1160: #line 1161 \"ext/standard/var_unserializer.c\"",
          "1161: yy76:",
          "1163:  if (yych == 'N') goto yy73;",
          "1165: yy77:",
          "1166:  yych = *++YYCURSOR;",
          "1167:  if (yych <= ',') {",
          "1168:   if (yych != '+') goto yy18;",
          "1169:  } else {",
          "1170:   if (yych <= '-') goto yy78;",
          "1171:   if (yych <= '/') goto yy18;",
          "1172:   if (yych <= '9') goto yy79;",
          "1173:   goto yy18;",
          "1174:  }",
          "1175: yy78:",
          "1176:  yych = *++YYCURSOR;",
          "1177:  if (yych <= '/') goto yy18;",
          "1178:  if (yych >= ':') goto yy18;",
          "1179: yy79:",
          "1180:  ++YYCURSOR;",
          "1181:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1182:  yych = *YYCURSOR;",
          "1183:  if (yych <= '/') goto yy18;",
          "1184:  if (yych <= '9') goto yy79;",
          "1185:  if (yych != ';') goto yy18;",
          "1187: #line 585 \"ext/standard/var_unserializer.re\"",
          "1189: #if SIZEOF_ZEND_LONG == 4",
          "1190:  int digits = YYCURSOR - start - 3;",
          "1192:  if (start[2] == '-' || start[2] == '+') {",
          "1193:   digits--;",
          "1197:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1198:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1199:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1201:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1202:     goto use_double;",
          "1204:   } else {",
          "1205:    goto use_double;",
          "1207:  }",
          "1208: #endif",
          "1210:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1211:  return 1;",
          "1213: #line 1214 \"ext/standard/var_unserializer.c\"",
          "1214: yy83:",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych <= '/') goto yy18;",
          "1217:  if (yych >= '2') goto yy18;",
          "1218:  yych = *++YYCURSOR;",
          "1219:  if (yych != ';') goto yy18;",
          "1221: #line 579 \"ext/standard/var_unserializer.re\"",
          "1224:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "1228: yy87:",
          "1230: #line 573 \"ext/standard/var_unserializer.re\"",
          "1233:  ZVAL_NULL(rval);",
          "1234:  return 1;",
          "1236: #line 1237 \"ext/standard/var_unserializer.c\"",
          "1237: yy89:",
          "1240:   if (yych != '+') goto yy18;",
          "1242:   if (yych <= '-') goto yy90;",
          "1244:   if (yych <= '9') goto yy91;",
          "1245:   goto yy18;",
          "1247: yy90:",
          "1248:  yych = *++YYCURSOR;",
          "1249:  if (yych <= '/') goto yy18;",
          "1250:  if (yych >= ':') goto yy18;",
          "1251: yy91:",
          "1256:  if (yych <= '9') goto yy91;",
          "1257:  if (yych != ';') goto yy18;",
          "1259: #line 548 \"ext/standard/var_unserializer.re\"",
          "1261:  zend_long id;",
          "1264:  if (!var_hash) return 0;",
          "1266:  id = parse_iv(start + 2) - 1;",
          "1267:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1271:  if (rval_ref == rval) {",
          "1275:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1276:   ZVAL_UNDEF(rval);",
          "1277:   return 1;",
          "1280:  ZVAL_COPY(rval, rval_ref);",
          "1284: #line 1285 \"ext/standard/var_unserializer.c\"",
          "1285: yy95:",
          "1286:  yych = *++YYCURSOR;",
          "1287:  if (yych <= ',') {",
          "1288:   if (yych != '+') goto yy18;",
          "1289:  } else {",
          "1290:   if (yych <= '-') goto yy96;",
          "1291:   if (yych <= '/') goto yy18;",
          "1292:   if (yych <= '9') goto yy97;",
          "1293:   goto yy18;",
          "1294:  }",
          "1298:  if (yych >= ':') goto yy18;",
          "1301:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1302:  yych = *YYCURSOR;",
          "1303:  if (yych <= '/') goto yy18;",
          "1304:  if (yych <= '9') goto yy97;",
          "1305:  if (yych != ';') goto yy18;",
          "1306:  ++YYCURSOR;",
          "1307: #line 522 \"ext/standard/var_unserializer.re\"",
          "1309:  zend_long id;",
          "1312:  if (!var_hash) return 0;",
          "1314:  id = parse_iv(start + 2) - 1;",
          "1315:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1316:   return 0;",
          "1317:  }",
          "1319:  zval_ptr_dtor(rval);",
          "1320:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1321:   ZVAL_UNDEF(rval);",
          "1322:   return 1;",
          "1323:  }",
          "1324:  if (Z_ISREF_P(rval_ref)) {",
          "1325:   ZVAL_COPY(rval, rval_ref);",
          "1327:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1328:   ZVAL_COPY(rval, rval_ref);",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "1335: #line 886 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "1006: yy73:",
          "1009:   if (yych == '+') goto yy88;",
          "1010:   goto yy18;",
          "1012:   if (yych <= '-') goto yy88;",
          "1014:   if (yych <= '9') goto yy89;",
          "1017: yy74:",
          "1019:  if (yych == 'F') goto yy91;",
          "1021: yy75:",
          "1023:  if (yych == 'N') goto yy91;",
          "1025: yy76:",
          "1027: #line 620 \"ext/standard/var_unserializer.re\"",
          "1028:  {",
          "1029: #if SIZEOF_ZEND_LONG == 4",
          "1030:  int digits = YYCURSOR - start - 3;",
          "1032:  if (start[2] == '-' || start[2] == '+') {",
          "1033:   digits--;",
          "1034:  }",
          "1037:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1038:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1039:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1041:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1042:     goto use_double;",
          "1043:    }",
          "1045:    goto use_double;",
          "1048: #endif",
          "1050:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1051:  return 1;",
          "1052: }",
          "1053: #line 1054 \"ext/standard/var_unserializer.c\"",
          "1054: yy78:",
          "1056:  if (yych == '\"') goto yy92;",
          "1057:  goto yy18;",
          "1058: yy79:",
          "1060: #line 583 \"ext/standard/var_unserializer.re\"",
          "1062:  zend_long id;",
          "1065:  if (!var_hash) return 0;",
          "1067:  id = parse_iv(start + 2) - 1;",
          "1068:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1069:   return 0;",
          "1070:  }",
          "1072:  if (rval_ref == rval) {",
          "1073:   return 0;",
          "1074:  }",
          "1076:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1077:   ZVAL_UNDEF(rval);",
          "1078:   return 1;",
          "1081:  ZVAL_COPY(rval, rval_ref);",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "1086: yy81:",
          "1088:  if (yych == '\"') goto yy94;",
          "1090: yy82:",
          "1092: #line 768 \"ext/standard/var_unserializer.re\"",
          "1094:  size_t len, len2, len3, maxlen;",
          "1095:  zend_long elements;",
          "1096:  char *str;",
          "1097:  zend_string *class_name;",
          "1098:  zend_class_entry *ce;",
          "1099:  int incomplete_class = 0;",
          "1101:  int custom_object = 0;",
          "1103:  zval user_func;",
          "1104:  zval retval;",
          "1105:  zval args[1];",
          "1107:     if (!var_hash) return 0;",
          "1108:  if (*start == 'C') {",
          "1109:   custom_object = 1;",
          "1112:  len2 = len = parse_uiv(start + 2);",
          "1113:  maxlen = max - YYCURSOR;",
          "1114:  if (maxlen < len || len == 0) {",
          "1116:   return 0;",
          "1117:  }",
          "1119:  str = (char*)YYCURSOR;",
          "1121:  YYCURSOR += len;",
          "1123:  if (*(YYCURSOR) != '\"') {",
          "1125:   return 0;",
          "1126:  }",
          "1127:  if (*(YYCURSOR+1) != ':') {",
          "1129:   return 0;",
          "1130:  }",
          "1132:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1133:  if (len3 != len)",
          "1134:  {",
          "1136:   return 0;",
          "1137:  }",
          "1139:  class_name = zend_string_init(str, len, 0);",
          "1141:  do {",
          "1142:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1143:    incomplete_class = 1;",
          "1144:    ce = PHP_IC_ENTRY;",
          "1145:    break;",
          "1146:   }",
          "1149:   BG(serialize_lock)++;",
          "1150:   ce = zend_lookup_class(class_name);",
          "1151:   if (ce) {",
          "1152:    BG(serialize_lock)--;",
          "1153:    if (EG(exception)) {",
          "1154:     zend_string_release(class_name);",
          "1155:     return 0;",
          "1157:    break;",
          "1159:   BG(serialize_lock)--;",
          "1161:   if (EG(exception)) {",
          "1162:    zend_string_release(class_name);",
          "1163:    return 0;",
          "1164:   }",
          "1167:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1168:    incomplete_class = 1;",
          "1169:    ce = PHP_IC_ENTRY;",
          "1170:    break;",
          "1171:   }",
          "1174:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1176:   ZVAL_STR_COPY(&args[0], class_name);",
          "1177:   BG(serialize_lock)++;",
          "1178:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1179:    BG(serialize_lock)--;",
          "1180:    if (EG(exception)) {",
          "1181:     zend_string_release(class_name);",
          "1182:     zval_ptr_dtor(&user_func);",
          "1183:     zval_ptr_dtor(&args[0]);",
          "1184:     return 0;",
          "1185:    }",
          "1186:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1187:    incomplete_class = 1;",
          "1188:    ce = PHP_IC_ENTRY;",
          "1189:    zval_ptr_dtor(&user_func);",
          "1190:    zval_ptr_dtor(&args[0]);",
          "1191:    break;",
          "1192:   }",
          "1193:   BG(serialize_lock)--;",
          "1194:   zval_ptr_dtor(&retval);",
          "1195:   if (EG(exception)) {",
          "1196:    zend_string_release(class_name);",
          "1197:    zval_ptr_dtor(&user_func);",
          "1198:    zval_ptr_dtor(&args[0]);",
          "1199:    return 0;",
          "1200:   }",
          "1203:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1204:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1205:    incomplete_class = 1;",
          "1206:    ce = PHP_IC_ENTRY;",
          "1207:   }",
          "1209:   zval_ptr_dtor(&user_func);",
          "1210:   zval_ptr_dtor(&args[0]);",
          "1211:   break;",
          "1212:  } while (1);",
          "1216:  if (custom_object) {",
          "1217:   int ret;",
          "1219:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1221:   if (ret && incomplete_class) {",
          "1222:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1223:   }",
          "1224:   zend_string_release(class_name);",
          "1225:   return ret;",
          "1226:  }",
          "1228:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1230:  if (incomplete_class) {",
          "1231:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1232:  }",
          "1233:  zend_string_release(class_name);",
          "1235:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "1238: yy84:",
          "1240: #line 703 \"ext/standard/var_unserializer.re\"",
          "1242:  size_t len, maxlen;",
          "1243:  zend_string *str;",
          "1245:  len = parse_uiv(start + 2);",
          "1246:  maxlen = max - YYCURSOR;",
          "1247:  if (maxlen < len) {",
          "1249:   return 0;",
          "1250:  }",
          "1252:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1253:   return 0;",
          "1254:  }",
          "1256:  if (*(YYCURSOR) != '\"') {",
          "1257:   zend_string_free(str);",
          "1259:   return 0;",
          "1260:  }",
          "1262:  if (*(YYCURSOR + 1) != ';') {",
          "1263:   efree(str);",
          "1265:   return 0;",
          "1266:  }",
          "1268:  YYCURSOR += 2;",
          "1271:  ZVAL_STR(rval, str);",
          "1274: #line 1275 \"ext/standard/var_unserializer.c\"",
          "1275: yy86:",
          "1277: #line 737 \"ext/standard/var_unserializer.re\"",
          "1279:  zend_long elements = parse_iv(start + 2);",
          "1282:     if (!var_hash) return 0;",
          "1284:  if (elements < 0) {",
          "1285:   return 0;",
          "1286:  }",
          "1288:  array_init_size(rval, elements);",
          "1289:  if (elements) {",
          "1292:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1293:  }",
          "1295:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1296:   return 0;",
          "1297:  }",
          "1299:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1301: #line 1302 \"ext/standard/var_unserializer.c\"",
          "1302: yy88:",
          "1305:   if (yych == '+') goto yy96;",
          "1306:   goto yy18;",
          "1308:   if (yych <= '-') goto yy96;",
          "1310:   if (yych >= ':') goto yy18;",
          "1312: yy89:",
          "1317:  if (yych <= '9') goto yy89;",
          "1318:  if (yych == ';') goto yy71;",
          "1319:  goto yy18;",
          "1320: yy91:",
          "1321:  yych = *++YYCURSOR;",
          "1322:  if (yych == ';') goto yy97;",
          "1323:  goto yy18;",
          "1324: yy92:",
          "1326: #line 761 \"ext/standard/var_unserializer.re\"",
          "1328:     if (!var_hash) return 0;",
          "1330:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "1331:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "1332: }",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "1334: yy94:",
          "1335:  ++YYCURSOR;",
          "1336: #line 671 \"ext/standard/var_unserializer.re\"",
          "1337:  {",
          "1338:  size_t len, maxlen;",
          "1339:  char *str;",
          "1341:  len = parse_uiv(start + 2);",
          "1342:  maxlen = max - YYCURSOR;",
          "1343:  if (maxlen < len) {",
          "1348:  str = (char*)YYCURSOR;",
          "1350:  YYCURSOR += len;",
          "1352:  if (*(YYCURSOR) != '\"') {",
          "1357:  if (*(YYCURSOR + 1) != ';') {",
          "1359:   return 0;",
          "1362:  YYCURSOR += 2;",
          "1365:  ZVAL_STRINGL(rval, str, len);",
          "1368: #line 1369 \"ext/standard/var_unserializer.c\"",
          "1372:  if (yych <= '9') goto yy89;",
          "1373:  goto yy18;",
          "1376: #line 646 \"ext/standard/var_unserializer.re\"",
          "1380:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1381:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1382:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1383:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1384:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1385:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1387:   ZVAL_NULL(rval);",
          "1392: #line 1393 \"ext/standard/var_unserializer.c\"",
          "1394: #line 921 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"ext/standard/php_var.h\"",
          "23: #include \"php_incomplete_class.h\"",
          "26: #define VAR_ENTRIES_MAX 1024",
          "27: #define VAR_ENTRIES_DBG 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: struct php_unserialize_data {",
          "26:  void *first;",
          "27:  void *last;",
          "28:  void *first_dtor;",
          "29:  void *last_dtor;",
          "30: };",
          "32: PHPAPI php_unserialize_data_t php_var_unserialize_init() {",
          "33:  php_unserialize_data_t d;",
          "35:  if (BG(serialize_lock) || !BG(unserialize).level) {",
          "36:   d = ecalloc(1, sizeof(struct php_unserialize_data));",
          "37:   if (!BG(serialize_lock)) {",
          "38:    BG(unserialize).data = d;",
          "39:    BG(unserialize).level = 1;",
          "40:   }",
          "41:  } else {",
          "42:   d = BG(unserialize).data;",
          "43:   ++BG(unserialize).level;",
          "44:  }",
          "45:  return d;",
          "46: }",
          "48: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d) {",
          "50:  if (BG(serialize_lock) || BG(unserialize).level == 1) {",
          "51:   var_destroy(&d);",
          "52:   efree(d);",
          "53:  }",
          "54:  if (!BG(serialize_lock) && !--BG(unserialize).level) {",
          "55:   BG(unserialize).data = NULL;",
          "56:  }",
          "57: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}