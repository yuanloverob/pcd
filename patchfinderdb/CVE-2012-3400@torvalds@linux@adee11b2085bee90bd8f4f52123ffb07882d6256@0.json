{
  "cve_id": "CVE-2012-3400",
  "cve_desc": "Heap-based buffer overflow in the udf_load_logicalvol function in fs/udf/super.c in the Linux kernel before 3.4.5 allows remote attackers to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted UDF filesystem.",
  "repo": "torvalds/linux",
  "patch_hash": "adee11b2085bee90bd8f4f52123ffb07882d6256",
  "patch_info": {
    "commit_hash": "adee11b2085bee90bd8f4f52123ffb07882d6256",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/adee11b2085bee90bd8f4f52123ffb07882d6256",
    "files": [
      "fs/udf/super.c"
    ],
    "message": "udf: Avoid run away loop when partition table length is corrupted\n\nCheck provided length of partition table so that (possibly maliciously)\ncorrupted partition table cannot cause accessing data beyond current buffer.\n\nSigned-off-by: Jan Kara <jack@suse.cz>",
    "before_after_code_files": [
      "fs/udf/super.c||fs/udf/super.c"
    ]
  },
  "patch_diff": {
    "fs/udf/super.c||fs/udf/super.c": [
      "File: fs/udf/super.c -> fs/udf/super.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1225:  struct genericPartitionMap *gpm;",
      "1226:  uint16_t ident;",
      "1227:  struct buffer_head *bh;",
      "1228:  int ret = 0;",
      "1230:  bh = udf_read_tagged(sb, block, block, &ident);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1228:  unsigned int table_len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1232:   return 1;",
      "1233:  BUG_ON(ident != TAG_IDENT_LVD);",
      "1234:  lvd = (struct logicalVolDesc *)bh->b_data;",
      "1236:  ret = udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps));",
      "1237:  if (ret)",
      "1238:   goto out_bh;",
      "1240:  for (i = 0, offset = 0;",
      "1242:       i++, offset += gpm->partitionMapLength) {",
      "1243:   struct udf_part_map *map = &sbi->s_partmaps[i];",
      "1244:   gpm = (struct genericPartitionMap *)",
      "",
      "[Removed Lines]",
      "1241:       i < sbi->s_partitions && offset < le32_to_cpu(lvd->mapTableLength);",
      "",
      "[Added Lines]",
      "1236:  table_len = le32_to_cpu(lvd->mapTableLength);",
      "1237:  if (sizeof(*lvd) + table_len > sb->s_blocksize) {",
      "1238:   udf_err(sb, \"error loading logical volume descriptor: \"",
      "1239:    \"Partition table too long (%u > %lu)\\n\", table_len,",
      "1240:    sb->s_blocksize - sizeof(*lvd));",
      "1241:   goto out_bh;",
      "1242:  }",
      "1249:       i < sbi->s_partitions && offset < table_len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57b9655d01ef057a523e810d29c37ac09b80eead",
      "candidate_info": {
        "commit_hash": "57b9655d01ef057a523e810d29c37ac09b80eead",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/57b9655d01ef057a523e810d29c37ac09b80eead",
        "files": [
          "fs/udf/super.c"
        ],
        "message": "udf: Improve table length check to avoid possible overflow\n\nWhen a partition table length is corrupted to be close to 1 << 32, the\ncheck for its length may overflow on 32-bit systems and we will think\nthe length is valid. Later on the kernel can crash trying to read beyond\nend of buffer. Fix the check to avoid possible overflow.\n\nCC: stable@vger.kernel.org\nReported-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: Jan Kara <jack@suse.cz>",
        "before_after_code_files": [
          "fs/udf/super.c||fs/udf/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/udf/super.c||fs/udf/super.c"
          ],
          "candidate": [
            "fs/udf/super.c||fs/udf/super.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/udf/super.c||fs/udf/super.c": [
          "File: fs/udf/super.c -> fs/udf/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1340:  BUG_ON(ident != TAG_IDENT_LVD);",
          "1341:  lvd = (struct logicalVolDesc *)bh->b_data;",
          "1342:  table_len = le32_to_cpu(lvd->mapTableLength);",
          "1344:   udf_err(sb, \"error loading logical volume descriptor: \"",
          "1345:    \"Partition table too long (%u > %lu)\\n\", table_len,",
          "1346:    sb->s_blocksize - sizeof(*lvd));",
          "",
          "[Removed Lines]",
          "1343:  if (sizeof(*lvd) + table_len > sb->s_blocksize) {",
          "",
          "[Added Lines]",
          "1343:  if (table_len > sb->s_blocksize - sizeof(*lvd)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}