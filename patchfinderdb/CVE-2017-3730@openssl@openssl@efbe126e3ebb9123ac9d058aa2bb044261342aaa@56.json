{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c1d0d2e690d2a33216de6c5920c81d9852080d36",
      "candidate_info": {
        "commit_hash": "c1d0d2e690d2a33216de6c5920c81d9852080d36",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c1d0d2e690d2a33216de6c5920c81d9852080d36",
        "files": [
          "crypto/ec/ec_asn1.c"
        ],
        "message": "Fix typo, should be && rather than &\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2689)\n(cherry picked from commit 50799f3558981eac0482d3ea77b21c58b56d4871)",
        "before_after_code_files": [
          "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c": [
          "File: crypto/ec/ec_asn1.c -> crypto/ec/ec_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     for (i = 0;",
          "28:          i++)",
          "29:         continue;",
          "",
          "[Removed Lines]",
          "27:          i < (int)OSSL_NELEM(group->poly) & group->poly[i] != 0;",
          "",
          "[Added Lines]",
          "27:          i < (int)OSSL_NELEM(group->poly) && group->poly[i] != 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
      "candidate_info": {
        "commit_hash": "38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
        "files": [
          "crypto/asn1/f_int.c"
        ],
        "message": "Fix a slightly confusing if condition in a2i_ASN1_INTEGER.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2640)\n(cherry picked from commit aa402e2ba408254c052b5750b14e7f01e48bced1)",
        "before_after_code_files": [
          "crypto/asn1/f_int.c||crypto/asn1/f_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/f_int.c||crypto/asn1/f_int.c": [
          "File: crypto/asn1/f_int.c -> crypto/asn1/f_int.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         bufp = (unsigned char *)buf;",
          "104:         if (first) {",
          "105:             first = 0;",
          "107:                 bufp += 2;",
          "108:                 i -= 2;",
          "109:             }",
          "",
          "[Removed Lines]",
          "106:             if ((bufp[0] == '0') && (buf[1] == '0')) {",
          "",
          "[Added Lines]",
          "106:             if ((bufp[0] == '0') && (bufp[1] == '0')) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
      "candidate_info": {
        "commit_hash": "e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
        "files": [
          "apps/apps.c"
        ],
        "message": "Make sure that password_callback exercises UI\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2040)\n(cherry picked from commit 57c0f378b8fdbdc55dba783e9b744b8ed2132819)",
        "before_after_code_files": [
          "apps/apps.c||apps/apps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.c||apps/apps.c": [
          "File: apps/apps.c -> apps/apps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:     int res = 0;",
          "245: #ifndef OPENSSL_NO_UI",
          "246:     UI *ui = NULL;",
          "248: #endif",
          "250:     PW_CB_DATA *cb_data = (PW_CB_DATA *)cb_tmp;",
          "263:         if (res > bufsiz)",
          "264:             res = bufsiz;",
          "267:     }",
          "270:     ui = UI_new_method(ui_method);",
          "271:     if (ui) {",
          "272:         int ok = 0;",
          "273:         char *buff = NULL;",
          "274:         int ui_flags = 0;",
          "275:         char *prompt;",
          "277:         prompt = UI_construct_prompt(ui, \"pass phrase\", prompt_info);",
          "278:         if (!prompt) {",
          "279:             BIO_printf(bio_err, \"Out of memory\\n\");",
          "",
          "[Removed Lines]",
          "247:     const char *prompt_info = NULL;",
          "249:     const char *password = NULL;",
          "252:     if (cb_data) {",
          "253:         if (cb_data->password)",
          "254:             password = cb_data->password;",
          "255: #ifndef OPENSSL_NO_UI",
          "256:         if (cb_data->prompt_info)",
          "257:             prompt_info = cb_data->prompt_info;",
          "258: #endif",
          "259:     }",
          "261:     if (password) {",
          "262:         res = strlen(password);",
          "265:         memcpy(buf, password, res);",
          "266:         return res;",
          "269: #ifndef OPENSSL_NO_UI",
          "",
          "[Added Lines]",
          "250: #ifdef OPENSSL_NO_UI",
          "251:     if (cb_data != NULL && cb_data->password != NULL) {",
          "252:         res = strlen(cb_data->password);",
          "255:         memcpy(buf, cb_data->password, res);",
          "257: #else",
          "263:         const char *prompt_info = NULL;",
          "266:         if (cb_data != NULL && cb_data->prompt_info != NULL)",
          "267:             prompt_info = cb_data->prompt_info;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "284:         ui_flags |= UI_INPUT_FLAG_DEFAULT_PWD;",
          "285:         UI_ctrl(ui, UI_CTRL_PRINT_ERRORS, 1, 0, 0);",
          "287:         if (ok >= 0)",
          "288:             ok = UI_add_input_string(ui, prompt, ui_flags, buf,",
          "289:                                      PW_MIN_LENGTH, bufsiz - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:         (void)UI_add_user_data(ui, cb_data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5cb5dbd3cc55514bb1e59a63dc8cb49221ec506",
      "candidate_info": {
        "commit_hash": "e5cb5dbd3cc55514bb1e59a63dc8cb49221ec506",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e5cb5dbd3cc55514bb1e59a63dc8cb49221ec506",
        "files": [
          "apps/apps.c"
        ],
        "message": "apps/apps.c: include sys/socket.h to declare recv()\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit a19228b7f4fc6fcb49713455b3caedbc24fb0b01)",
        "before_after_code_files": [
          "apps/apps.c||apps/apps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.c||apps/apps.c": [
          "File: apps/apps.c -> apps/apps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2340:         return (-1);",
          "2341: }",
          "2342: #elif defined(__VMS)",
          "2343: int raw_read_stdin(void *buf, int siz)",
          "2344: {",
          "2345:     return recv(fileno_stdin(), buf, siz, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2343: #include <sys/socket.h>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
      "candidate_info": {
        "commit_hash": "bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
        "files": [
          "crypto/ct/ct_b64.c"
        ],
        "message": "Subtract padding from outlen in ct_base64_decode\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 70a06fc1a8b098e9934f837896159bfc6caf0228)",
        "before_after_code_files": [
          "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c": [
          "File: crypto/ct/ct_b64.c -> crypto/ct/ct_b64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         goto err;",
          "46:     }",
          "49:     return outlen;",
          "50: err:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     while (in[--inlen] == '=') {",
          "50:         --outlen;",
          "51:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}