{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
      "candidate_info": {
        "commit_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Improvements to the LEFT JOIN strength reduction optimization.\n\nFossilOrigin-Name: 548082dfab5d9484279ccc11cd2833ac131b54b7481372b576d7c28bbb3294ea",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4ed905b18847d4dbf5a2570052abced338065f824137b90300f62d77b3159d80",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5231: int sqlite3ExprImpliesNonNullRow(Expr *p, int iTab){",
          "5232:   Walker w;",
          "5233:   p = sqlite3ExprSkipCollateAndLikely(p);",
          "5235:     p = p->pLeft;",
          "5236:   }",
          "5237:   w.xExprCallback = impliesNotNullRow;",
          "5238:   w.xSelectCallback = 0;",
          "",
          "[Removed Lines]",
          "5234:   if( p && p->op==TK_NOTNULL ){",
          "",
          "[Added Lines]",
          "5234:   if( p==0 ) return 0;",
          "5235:   if( p->op==TK_NOTNULL ){",
          "5237:   }else if( p->op==TK_AND ){",
          "5238:     if( sqlite3ExprImpliesNonNullRow(p->pLeft, iTab) ) return 1;",
          "5239:     p = p->pRight;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
      "candidate_info": {
        "commit_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab2.test",
          "test/altertab3.test",
          "test/autoindex5.test"
        ],
        "message": "Build and test fixes for SQLITE_OMIT_WINDOWFUNC builds.\n\nFossilOrigin-Name: 8824115a9776e876a3677f0cb479e311ee65584d43872b37766a146afec72d8f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab2.test||test/altertab2.test",
          "test/altertab3.test||test/altertab3.test",
          "test/autoindex5.test||test/autoindex5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1533:       }",
          "1534:     }",
          "1536:     if( IN_RENAME_OBJECT ){",
          "1537:       Window *pWin;",
          "1538:       for(pWin=p->pWinDefn; pWin; pWin=pWin->pNextWin){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1536: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1543:         }",
          "1544:       }",
          "1545:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1547: #endif",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: }",
          "181: #-------------------------------------------------------------------------",
          "182: do_execsql_test 5.0 {",
          "183:   CREATE TABLE t2(a);",
          "184:   CREATE TRIGGER r2 AFTER INSERT ON t2 WHEN new.a NOT NULL BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235: do_execsql_test 5.3 {",
          "236:   INSERT INTO t2x VALUES(1);",
          "237: } {}",
          "239: #-------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return",
          "21: }",
          "23: do_execsql_test 1.0 {",
          "24:   CREATE TABLE t1(a, b);",
          "25:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: do_execsql_test 1.3 {",
          "41:   INSERT INTO t1 VALUES(1, 2);",
          "42: }",
          "44: #-------------------------------------------------------------------------",
          "45: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/autoindex5.test||test/autoindex5.test": [
          "File: test/autoindex5.test -> test/autoindex5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: # Segfault due to multiple uses of the same subquery where the",
          "129: # subquery is implemented via coroutine.",
          "130: #",
          "131: sqlite3 db :memory:",
          "132: do_execsql_test 3.0 {",
          "133:   -- This is the original test case reported on the mailing list",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:       AND (albums.id IN (1, 2)))",
          "167:   ));",
          "168: } {1 Ar}",
          "169: # The remaining test cases were discovered (by Dan) during trouble-shooting",
          "170: sqlite3 db :memory:",
          "171: do_execsql_test 3.1 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170: } ;# windowfunc",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e99cb2da5fc664c2e40304868e3d0815b18f7614",
      "candidate_info": {
        "commit_hash": "e99cb2da5fc664c2e40304868e3d0815b18f7614",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e99cb2da5fc664c2e40304868e3d0815b18f7614",
        "files": [
          "Makefile.msc",
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid",
          "tool/mkmsvcmin.tcl"
        ],
        "message": "Export the public RBU entry points from the Win32 DLL.\n\nFossilOrigin-Name: e62d1791f428b7a9bb14a59483f12d8ee08afbf4061a5e3be8f64787444301e7",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid",
          "tool/mkmsvcmin.tcl||tool/mkmsvcmin.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "248: SESSION = 0",
          "249: !ENDIF",
          "251: # Set the source code file to be used by executables and libraries when",
          "252: # they need the amalgamation.",
          "253: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251: # Set this to non-0 to enable support for the rbu extension.",
          "252: #",
          "253: !IFNDEF RBU",
          "254: RBU = 0",
          "255: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "364: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_PREUPDATE_HOOK=1",
          "365: !ENDIF",
          "367: # These are the \"extended\" SQLite compilation options used when compiling for",
          "368: # the Windows 10 platform.",
          "369: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "373: # Should the rbu extension be enabled?  If so, add compilation options",
          "374: # to enable it.",
          "375: #",
          "376: !IF $(RBU)!=0",
          "377: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_RBU=1",
          "378: !ENDIF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1742: sqlite3.def: libsqlite3.lib",
          "1743:  echo EXPORTS > sqlite3.def",
          "1744:  dumpbin /all libsqlite3.lib \\",
          "1746:   | sort >> sqlite3.def",
          "1747: # <</block2>>",
          "",
          "[Removed Lines]",
          "1745:   | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl include \"^\\s+1 _?(sqlite3(?:session|changeset|changegroup|rebaser)?_[^@]*)(?:@\\d+)?$$\" \\1 \\",
          "",
          "[Added Lines]",
          "1758:   | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl include \"^\\s+1 _?(sqlite3(?:session|changeset|changegroup|rebaser|rbu)?_[^@]*)(?:@\\d+)?$$\" \\1 \\",
          "",
          "---------------"
        ],
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "210: SESSION = 0",
          "211: !ENDIF",
          "213: # Set the source code file to be used by executables and libraries when",
          "214: # they need the amalgamation.",
          "215: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: # Set this to non-0 to enable support for the rbu extension.",
          "214: #",
          "215: !IFNDEF RBU",
          "216: RBU = 0",
          "217: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "295: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_PREUPDATE_HOOK=1",
          "296: !ENDIF",
          "298: # These are the \"extended\" SQLite compilation options used when compiling for",
          "299: # the Windows 10 platform.",
          "300: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304: # Should the rbu extension be enabled?  If so, add compilation options",
          "305: # to enable it.",
          "306: #",
          "307: !IF $(RBU)!=0",
          "308: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_RBU=1",
          "309: !ENDIF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "977: sqlite3.def: Replace.exe $(LIBOBJ)",
          "978:  echo EXPORTS > sqlite3.def",
          "979:  dumpbin /all $(LIBOBJ) \\",
          "981:   | sort >> sqlite3.def",
          "983: $(SQLITE3EXE): shell.c $(SHELL_CORE_DEP) $(LIBRESOBJS) $(SHELL_CORE_SRC) $(SQLITE3H)",
          "",
          "[Removed Lines]",
          "980:   | .\\Replace.exe \"^\\s+/EXPORT:_?(sqlite3(?:session|changeset|changegroup|rebaser)?_[^@,]*)(?:@\\d+|,DATA)?$$\" $$1 true \\",
          "",
          "[Added Lines]",
          "993:   | .\\Replace.exe \"^\\s+/EXPORT:_?(sqlite3(?:session|changeset|changegroup|rebaser|rbu)?_[^@,]*)(?:@\\d+|,DATA)?$$\" $$1 true \\",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: dc5f1d282d1e75f8a3791b0c95cb8f143b2a956323cb6c889d76d20db7f89257",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/mkmsvcmin.tcl||tool/mkmsvcmin.tcl": [
          "File: tool/mkmsvcmin.tcl -> tool/mkmsvcmin.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: sqlite3.def: Replace.exe $(LIBOBJ)",
          "84:  echo EXPORTS > sqlite3.def",
          "85:  dumpbin /all $(LIBOBJ) \\\\",
          "87:   | sort >> sqlite3.def",
          "88: }]]",
          "",
          "[Removed Lines]",
          "86:   | .\\Replace.exe \"^\\s+/EXPORT:_?(sqlite3(?:session|changeset|changegroup|rebaser)?_[^@,]*)(?:@\\d+|,DATA)?$$\" $$1 true \\\\",
          "",
          "[Added Lines]",
          "86:   | .\\Replace.exe \"^\\s+/EXPORT:_?(sqlite3(?:session|changeset|changegroup|rebaser|rbu)?_[^@,]*)(?:@\\d+|,DATA)?$$\" $$1 true \\\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "713836f913a4af0be745c606c658f17c51cdf77f",
      "candidate_info": {
        "commit_hash": "713836f913a4af0be745c606c658f17c51cdf77f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/713836f913a4af0be745c606c658f17c51cdf77f",
        "files": [
          "LICENSE.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add a LICENSE.md, containing the text of the blessing.\n\nFossilOrigin-Name: cbb7e60272cda518fa1bd8d3e3cd02e031b657fef92a9d4d7ed8c2bfb97be7c8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b3fa58dd7403dbd4d2e9f3ae23d7d1337830d6fef2aa2f137ac5174de0d5828e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
      "candidate_info": {
        "commit_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/vdbeaux.c",
          "test/altertab3.test"
        ],
        "message": "Ensure that ALTER TABLE commands open statement transactions. Fix for [596d059a].\n\nFossilOrigin-Name: 0f2129f59f7df929106e2af876c2976dea6528c1dc1850d64cddb256f20e121a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fb60150aeedc3898cb249c75c98a7cb48fcec090f94ded7896b634e436c7daa5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   }",
          "167: #endif",
          "174:   v = sqlite3GetVdbe(pParse);",
          "175:   if( v==0 ){",
          "176:     goto exit_rename_table;",
          "177:   }",
          "180:   zTabName = pTab->zName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:   sqlite3MayAbort(pParse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:     int i = ++pParse->nMem;",
          "244:     sqlite3VdbeLoadString(v, i, zName);",
          "245:     sqlite3VdbeAddOp4(v, OP_VRename, i, 0, 0,(const char*)pVTab, P4_VTAB);",
          "247:   }",
          "248: #endif",
          "",
          "[Removed Lines]",
          "246:     sqlite3MayAbort(pParse);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "567:   zNew = sqlite3NameFromToken(db, pNew);",
          "568:   if( !zNew ) goto exit_rename_column;",
          "569:   assert( pNew->n>0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:   sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:     int opcode = pOp->opcode;",
          "638:     if( opcode==OP_Destroy || opcode==OP_VUpdate || opcode==OP_VRename",
          "639:      || opcode==OP_VDestroy",
          "640:      || ((opcode==OP_Halt || opcode==OP_HaltIfNull)",
          "641:       && ((pOp->p1)!=SQLITE_OK && pOp->p2==OE_Abort))",
          "642:     ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "640:      || (opcode==OP_Function0 && pOp->p4.pFunc->funcFlags&SQLITE_FUNC_INTERNAL)",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "86: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: #-------------------------------------------------------------------------",
          "85: reset_db",
          "86: do_execsql_test 4.0 {",
          "87:   CREATE TABLE t1(a, b);",
          "88:   CREATE TABLE t3(e, f);",
          "89:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "90:     INSERT INTO t2 VALUES(new.a, new.b);",
          "91:   END;",
          "92: }",
          "94: do_catchsql_test 4.1.2 {",
          "95:   BEGIN;",
          "96:     ALTER TABLE t3 RENAME TO t4;",
          "97: } {1 {error in trigger tr1: no such table: main.t2}}",
          "98: do_execsql_test 4.1.2 {",
          "99:   COMMIT;",
          "100: }",
          "101: do_execsql_test 4.1.3 {",
          "102:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "103: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "106: do_catchsql_test 4.2.1 {",
          "107:   BEGIN;",
          "108:     ALTER TABLE t3 RENAME e TO eee;",
          "109: } {1 {error in trigger tr1: no such table: main.t2}}",
          "110: do_execsql_test 4.2.2 {",
          "111:   COMMIT;",
          "112: }",
          "113: do_execsql_test 4.2.3 {",
          "114:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "115: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}