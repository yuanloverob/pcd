{
  "cve_id": "CVE-2017-1000354",
  "cve_desc": "Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to a login command which allowed impersonating any Jenkins user. The `login` command available in the remoting-based CLI stored the encrypted user name of the successfully authenticated user in a cache file used to authenticate further commands. Users with sufficient permission to create secrets in Jenkins, and download their encrypted values (e.g. with Job/Configure permission), were able to impersonate any other Jenkins user on the same instance.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "02d24053bdfeb219d2387a19885a60bdab510479",
  "patch_info": {
    "commit_hash": "02d24053bdfeb219d2387a19885a60bdab510479",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/02d24053bdfeb219d2387a19885a60bdab510479",
    "files": [
      "core/src/main/java/hudson/cli/ClientAuthenticationCache.java",
      "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
    ],
    "message": "[SECURITY-466] Use more tamperproof storage for ClientAuthenticationCache.",
    "before_after_code_files": [
      "core/src/main/java/hudson/cli/ClientAuthenticationCache.java||core/src/main/java/hudson/cli/ClientAuthenticationCache.java",
      "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/cli/ClientAuthenticationCache.java||core/src/main/java/hudson/cli/ClientAuthenticationCache.java": [
      "File: core/src/main/java/hudson/cli/ClientAuthenticationCache.java -> core/src/main/java/hudson/cli/ClientAuthenticationCache.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package hudson.cli;",
      "3: import hudson.FilePath;",
      "4: import hudson.remoting.Channel;",
      "5: import hudson.util.Secret;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import com.google.common.annotations.VisibleForTesting;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "17: import java.io.OutputStream;",
      "18: import java.io.Serializable;",
      "19: import java.util.Properties;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: import java.util.logging.Level;",
      "22: import java.util.logging.Logger;",
      "23: import jenkins.security.HMACConfidentialKey;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "31: public class ClientAuthenticationCache implements Serializable {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37:     private static final HMACConfidentialKey MAC = new HMACConfidentialKey(ClientAuthenticationCache.class, \"MAC\");",
      "38:     private static final Logger LOGGER = Logger.getLogger(ClientAuthenticationCache.class.getName());",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "42:     public ClientAuthenticationCache(Channel channel) throws IOException, InterruptedException {",
      "43:         store = (channel==null ? FilePath.localChannel :  channel).call(new MasterToSlaveCallable<FilePath, IOException>() {",
      "",
      "[Removed Lines]",
      "40:     private final Properties props = new Properties();",
      "",
      "[Added Lines]",
      "48:     @VisibleForTesting",
      "49:     final Properties props = new Properties();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "68:     public Authentication get() {",
      "69:         Jenkins h = Jenkins.getInstance();",
      "72:         try {",
      "74:             return new UsernamePasswordAuthenticationToken(u.getUsername(), \"\", u.getAuthorities());",
      "78:             return Jenkins.ANONYMOUS;",
      "79:         }",
      "80:     }",
      "",
      "[Removed Lines]",
      "70:         Secret userName = Secret.decrypt(props.getProperty(getPropertyKey()));",
      "71:         if (userName==null) return Jenkins.ANONYMOUS; // failed to decrypt",
      "73:             UserDetails u = h.getSecurityRealm().loadUserByUsername(userName.getPlainText());",
      "75:         } catch (AuthenticationException e) {",
      "76:             return Jenkins.ANONYMOUS;",
      "77:         } catch (DataAccessException e) {",
      "",
      "[Added Lines]",
      "79:         String val = props.getProperty(getPropertyKey());",
      "80:         if (val == null) {",
      "81:             LOGGER.finer(\"No stored CLI authentication\");",
      "82:             return Jenkins.ANONYMOUS;",
      "83:         }",
      "84:         Secret oldSecret = Secret.decrypt(val);",
      "85:         if (oldSecret != null) {",
      "86:             LOGGER.log(Level.FINE, \"Ignoring insecure stored CLI authentication for {0}\", oldSecret.getPlainText());",
      "87:             return Jenkins.ANONYMOUS;",
      "88:         }",
      "89:         int idx = val.lastIndexOf(':');",
      "90:         if (idx == -1) {",
      "91:             LOGGER.log(Level.FINE, \"Ignoring malformed stored CLI authentication: {0}\", val);",
      "92:             return Jenkins.ANONYMOUS;",
      "93:         }",
      "94:         String username = val.substring(0, idx);",
      "95:         if (!MAC.checkMac(username, val.substring(idx + 1))) {",
      "96:             LOGGER.log(Level.FINE, \"Ignoring stored CLI authentication due to MAC mismatch: {0}\", val);",
      "97:             return Jenkins.ANONYMOUS;",
      "98:         }",
      "100:             UserDetails u = h.getSecurityRealm().loadUserByUsername(username);",
      "101:             LOGGER.log(Level.FINER, \"Loaded stored CLI authentication for {0}\", username);",
      "103:         } catch (AuthenticationException | DataAccessException x) {",
      "104:             LOGGER.log(Level.FINE, \"Stored CLI authentication did not correspond to a valid user: \" + username, x);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "86:         String url = Jenkins.getInstance().getRootUrl();",
      "87:         if (url!=null)  return url;",
      "88:         return Secret.fromString(\"key\").toString();",
      "",
      "[Removed Lines]",
      "85:     private String getPropertyKey() {",
      "",
      "[Added Lines]",
      "112:     @VisibleForTesting",
      "113:     String getPropertyKey() {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "99:         UserDetails u = h.getSecurityRealm().loadUserByUsername(a.getName());",
      "102:         save();",
      "103:     }",
      "",
      "[Removed Lines]",
      "100:         props.setProperty(getPropertyKey(), Secret.fromString(u.getUsername()).getEncryptedValue());",
      "",
      "[Added Lines]",
      "128:         String username = u.getUsername();",
      "129:         props.setProperty(getPropertyKey(), username + \":\" + MAC.mac(username));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "110:             save();",
      "111:     }",
      "114:         OutputStream os = store.write();",
      "115:         try {",
      "116:             props.store(os,\"Credential store\");",
      "",
      "[Removed Lines]",
      "113:     private void save() throws IOException, InterruptedException {",
      "",
      "[Added Lines]",
      "142:     @VisibleForTesting",
      "143:     void save() throws IOException, InterruptedException {",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java": [
      "File: test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java -> test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: package hudson.cli;",
      "27: import com.google.common.collect.Lists;",
      "28: import hudson.Launcher;",
      "29: import hudson.security.FullControlOnceLoggedInAuthorizationStrategy;",
      "30: import hudson.util.Secret;",
      "31: import hudson.util.StreamTaskListener;",
      "32: import java.io.ByteArrayOutputStream;",
      "33: import java.io.File;",
      "34: import java.util.Arrays;",
      "35: import java.util.List;",
      "36: import javax.annotation.CheckForNull;",
      "37: import org.apache.commons.io.FileUtils;",
      "38: import org.apache.commons.io.output.TeeOutputStream;",
      "39: import static org.hamcrest.Matchers.containsString;",
      "40: import org.junit.Test;",
      "41: import static org.junit.Assert.*;",
      "42: import org.junit.Ignore;",
      "43: import org.junit.Rule;",
      "44: import org.junit.rules.TemporaryFolder;",
      "45: import org.jvnet.hudson.test.Issue;",
      "46: import org.jvnet.hudson.test.JenkinsRule;",
      "48: public class ClientAuthenticationCacheTest {",
      "50:     @Rule",
      "51:     public JenkinsRule r = new JenkinsRule();",
      "53:     @Rule",
      "54:     public TemporaryFolder tmp = new TemporaryFolder();",
      "58:     @Issue(\"SECURITY-466\")",
      "59:     @Test",
      "60:     public void login() throws Exception {",
      "61:         File jar = tmp.newFile(\"jenkins-cli.jar\");",
      "62:         FileUtils.copyURLToFile(r.jenkins.getJnlpJars(\"jenkins-cli.jar\").getURL(), jar);",
      "63:         r.jenkins.setSecurityRealm(r.createDummySecurityRealm());",
      "64:         r.jenkins.setAuthorizationStrategy(new FullControlOnceLoggedInAuthorizationStrategy());",
      "65:         assertCLI(0, \"Authenticated as: anonymous\", jar, \"who-am-i\");",
      "66:         assertCLI(0, null, jar, \"login\", \"--username\", \"dev\", \"--password\", \"dev\");",
      "67:         try {",
      "68:             assertCLI(0, \"Authenticated as: dev\", jar, \"who-am-i\");",
      "69:             ClientAuthenticationCache cache = new ClientAuthenticationCache(null);",
      "70:             String val = cache.props.getProperty(cache.getPropertyKey());",
      "71:             assertNotNull(val);",
      "72:             System.err.println(val);",
      "73:             Secret s = Secret.decrypt(val);",
      "74:             if (s != null && s.getPlainText().equals(\"dev\")) {",
      "75:                 val = Secret.fromString(\"admin\").getEncryptedValue();",
      "76:             }",
      "77:             System.err.println(val);",
      "78:             val = val.replace(\"dev\", \"admin\");",
      "79:             System.err.println(val);",
      "80:             cache.props.put(cache.getPropertyKey(), val);",
      "81:             cache.save();",
      "82:             assertCLI(0, \"Authenticated as: anonymous\", jar, \"who-am-i\");",
      "83:         } finally {",
      "84:             assertCLI(0, null, jar, \"logout\");",
      "85:         }",
      "86:     }",
      "88:     @Ignore(\"TODO fails unless CLICommand.main patched to replace (auth==Jenkins.ANONYMOUS) with (auth instanceof AnonymousAuthenticationToken), not just (Jenkins.ANONYMOUS.equals(auth)), since SecurityFilters.groovy sets userAttribute='anonymous,' so UserAttributeEditor.setAsText configures AnonymousProcessingFilter with a token with an empty authority which fails AbstractAuthenticationToken.equals\")",
      "89:     @Test",
      "90:     public void overHttp() throws Exception {",
      "91:         File jar = tmp.newFile(\"jenkins-cli.jar\");",
      "92:         FileUtils.copyURLToFile(r.jenkins.getJnlpJars(\"jenkins-cli.jar\").getURL(), jar);",
      "93:         r.jenkins.setSecurityRealm(r.createDummySecurityRealm());",
      "94:         r.jenkins.setAuthorizationStrategy(new FullControlOnceLoggedInAuthorizationStrategy());",
      "95:         r.jenkins.setSlaveAgentPort(-1);",
      "96:         assertCLI(0, \"Authenticated as: anonymous\", jar, \"who-am-i\");",
      "97:         assertCLI(0, null, jar, \"login\", \"--username\", \"admin\", \"--password\", \"admin\");",
      "98:         try {",
      "99:             assertCLI(0, \"Authenticated as: admin\", jar, \"who-am-i\");",
      "100:         } finally {",
      "101:             assertCLI(0, null, jar, \"logout\");",
      "102:         }",
      "103:     }",
      "105:     private void assertCLI(int code, @CheckForNull String output, File jar, String... args) throws Exception {",
      "106:         List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");",
      "107:         commands.addAll(Arrays.asList(args));",
      "108:         ByteArrayOutputStream baos = new ByteArrayOutputStream();",
      "109:         assertEquals(code, new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(commands).stdout(new TeeOutputStream(System.out, baos)).stderr(System.err).join());",
      "110:         if (output != null) {",
      "111:             assertThat(baos.toString(), containsString(output));",
      "112:         }",
      "113:     }",
      "115: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "87edd4296ba4d21e577dacdcc6fa09250874524c",
      "candidate_info": {
        "commit_hash": "87edd4296ba4d21e577dacdcc6fa09250874524c",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/87edd4296ba4d21e577dacdcc6fa09250874524c",
        "files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ],
        "message": "Fix test failure.",
        "before_after_code_files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java": [
          "File: test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java -> test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:     }",
          "118:     private void assertCLI(int code, @CheckForNull String output, File jar, String... args) throws Exception {",
          "120:         commands.addAll(Arrays.asList(args));",
          "121:         ByteArrayOutputStream baos = new ByteArrayOutputStream();",
          "122:         assertEquals(code, new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(commands).stdout(new TeeOutputStream(System.out, baos)).stderr(System.err).join());",
          "",
          "[Removed Lines]",
          "119:         List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");",
          "",
          "[Added Lines]",
          "119:         List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84dcde5902755239f915dedafbdc0566bcde087a",
      "candidate_info": {
        "commit_hash": "84dcde5902755239f915dedafbdc0566bcde087a",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/84dcde5902755239f915dedafbdc0566bcde087a",
        "files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ],
        "message": "Fix test failure.",
        "before_after_code_files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java": [
          "File: test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java -> test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:     }",
          "118:     private void assertCLI(int code, @CheckForNull String output, File jar, String... args) throws Exception {",
          "120:         commands.addAll(Arrays.asList(args));",
          "121:         ByteArrayOutputStream baos = new ByteArrayOutputStream();",
          "122:         assertEquals(code, new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(commands).stdout(new TeeOutputStream(System.out, baos)).stderr(System.err).join());",
          "",
          "[Removed Lines]",
          "119:         List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");",
          "",
          "[Added Lines]",
          "119:         List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6773274284eaeaad4ece6ebfa98709c641807e1",
      "candidate_info": {
        "commit_hash": "d6773274284eaeaad4ece6ebfa98709c641807e1",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d6773274284eaeaad4ece6ebfa98709c641807e1",
        "files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ],
        "message": "LoggerRule",
        "before_after_code_files": [
          "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java||test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java": [
          "File: test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java -> test/src/test/java/hudson/cli/ClientAuthenticationCacheTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import java.io.File;",
          "34: import java.util.Arrays;",
          "35: import java.util.List;",
          "36: import javax.annotation.CheckForNull;",
          "37: import jenkins.model.JenkinsLocationConfiguration;",
          "38: import org.apache.commons.io.FileUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import java.util.logging.Level;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: import org.junit.rules.TemporaryFolder;",
          "46: import org.jvnet.hudson.test.Issue;",
          "47: import org.jvnet.hudson.test.JenkinsRule;",
          "49: public class ClientAuthenticationCacheTest {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: import org.jvnet.hudson.test.LoggerRule;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:     @Rule",
          "55:     public TemporaryFolder tmp = new TemporaryFolder();",
          "59:     @Issue(\"SECURITY-466\")",
          "60:     @Test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     @Rule",
          "60:     public LoggerRule logging = new LoggerRule().record(ClientAuthenticationCache.class, Level.FINER);",
          "",
          "---------------"
        ]
      }
    }
  ]
}