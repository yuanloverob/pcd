{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "577d7010c6ffa98e8dc61d8826693db9d8f57bd5",
      "candidate_info": {
        "commit_hash": "577d7010c6ffa98e8dc61d8826693db9d8f57bd5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/577d7010c6ffa98e8dc61d8826693db9d8f57bd5",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0f release\n\nReviewed-by: Stephen Henson <steve@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100060L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0f-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0f-dev  xx XXX xxxx\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010006fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0f-fips  25 May 2017\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0f  25 May 2017\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e127fdd1c7851eec4199cdec4ee0f8b748e7603",
      "candidate_info": {
        "commit_hash": "6e127fdd1c7851eec4199cdec4ee0f8b748e7603",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6e127fdd1c7851eec4199cdec4ee0f8b748e7603",
        "files": [
          "apps/apps.h",
          "apps/s_server.c",
          "doc/ssl/SSL_CONF_cmd.pod",
          "doc/ssl/SSL_CTX_set_options.pod",
          "include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c",
          "ssl/record/rec_layer_s3.c",
          "ssl/ssl_conf.c",
          "ssl/ssl_err.c",
          "ssl/ssl_lib.c",
          "ssl/statem/statem.c",
          "ssl/t1_lib.c",
          "test/handshake_helper.c",
          "test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in"
        ],
        "message": "Add the SSL_OP_NO_RENEGOTIATION option to 1.1.0\n\nThis is based on a heavily modified version of commit db0f35dda by Todd\nShort from the master branch.\n\nWe are adding this because it used to be possible to disable reneg using\nthe flag SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS in 1.0.2. This is no longer\npossible because of the opacity work.\n\nA point to note about this is that if an application built against new\n1.1.0 headers (that know about the new option SSL_OP_NO_RENEGOTIATION\noption) is run using an older version of 1.1.0 (that doesn't know about\nthe option) then the option will be accepted but nothing will happen, i.e.\nrenegotiation will not be prevented. There's probably not much we can do\nabout that.\n\nFixes #4739\n\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\n(Merged from https://github.com/openssl/openssl/pull/4901)",
        "before_after_code_files": [
          "apps/apps.h||apps/apps.h",
          "apps/s_server.c||apps/s_server.c",
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c",
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "ssl/ssl_conf.c||ssl/ssl_conf.c",
          "ssl/ssl_err.c||ssl/ssl_err.c",
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/statem/statem.c||ssl/statem/statem.c",
          "ssl/t1_lib.c||ssl/t1_lib.c",
          "test/handshake_helper.c||test/handshake_helper.c",
          "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.h||apps/apps.h": [
          "File: apps/apps.h -> apps/apps.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:         OPT_S_ONRESUMP, OPT_S_NOLEGACYCONN, OPT_S_STRICT, OPT_S_SIGALGS, \\",
          "216:         OPT_S_CLIENTSIGALGS, OPT_S_CURVES, OPT_S_NAMEDCURVE, OPT_S_CIPHER, \\",
          "217:         OPT_S_DEBUGBROKE, OPT_S_COMP, \\",
          "220: # define OPT_S_OPTIONS \\",
          "221:         {\"no_ssl3\", OPT_S_NOSSL3, '-',\"Just disable SSLv3\" }, \\",
          "",
          "[Removed Lines]",
          "218:         OPT_S__LAST",
          "",
          "[Added Lines]",
          "218:         OPT_S_NO_RENEGOTIATION, OPT_S__LAST",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:         {\"serverpref\", OPT_S_SERVERPREF, '-', \"Use server's cipher preferences\"}, \\",
          "231:         {\"legacy_renegotiation\", OPT_S_LEGACYRENEG, '-', \\",
          "232:             \"Enable use of legacy renegotiation (dangerous)\"}, \\",
          "233:         {\"legacy_server_connect\", OPT_S_LEGACYCONN, '-', \\",
          "234:             \"Allow initial connection to servers that don't support RI\"}, \\",
          "235:         {\"no_resumption_on_reneg\", OPT_S_ONRESUMP, '-', \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:         {\"no_renegotiation\", OPT_S_NO_RENEGOTIATION, '-', \\",
          "234:             \"Disable all renegotiation.\"}, \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "272:         case OPT_S_CURVES: \\",
          "273:         case OPT_S_NAMEDCURVE: \\",
          "274:         case OPT_S_CIPHER: \\",
          "275:         case OPT_S_DEBUGBROKE",
          "277: #define IS_NO_PROT_FLAG(o) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277:         case OPT_S_NO_RENEGOTIATION: \\",
          "",
          "---------------"
        ],
        "apps/s_server.c||apps/s_server.c": [
          "File: apps/s_server.c -> apps/s_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2575:         BIO_printf(bio_s_out, \"Reused session-id\\n\");",
          "2576:     BIO_printf(bio_s_out, \"Secure Renegotiation IS%s supported\\n\",",
          "2577:                SSL_get_secure_renegotiation_support(con) ? \"\" : \" NOT\");",
          "2578:     if (keymatexportlabel != NULL) {",
          "2579:         BIO_printf(bio_s_out, \"Keying material exporter:\\n\");",
          "2580:         BIO_printf(bio_s_out, \"    Label: '%s'\\n\", keymatexportlabel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2578:     if ((SSL_get_options(con) & SSL_OP_NO_RENEGOTIATION))",
          "2579:         BIO_printf(bio_s_out, \"Renegotiation is DISABLED\\n\");",
          "",
          "---------------"
        ],
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:         SSL_OP_NO_TLSv1|SSL_OP_NO_TLSv1_1|SSL_OP_NO_TLSv1_2)",
          "324: # define SSL_OP_NO_DTLS_MASK (SSL_OP_NO_DTLSv1|SSL_OP_NO_DTLSv1_2)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327: # define SSL_OP_NO_RENEGOTIATION                         0x40000000U",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2201: # define SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT         311",
          "2202: # define SSL_F_SSL_PEEK                                   270",
          "2203: # define SSL_F_SSL_READ                                   223",
          "2204: # define SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT                320",
          "2205: # define SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT                321",
          "2206: # define SSL_F_SSL_SESSION_DUP                            348",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2207: # define SSL_F_SSL_RENEGOTIATE                            516",
          "2208: # define SSL_F_SSL_RENEGOTIATE_ABBREVIATED                546",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c": [
          "File: ssl/record/rec_layer_d1.c -> ssl/record/rec_layer_d1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "646:                             s->msg_callback_arg);",
          "648:         if (SSL_is_init_finished(s) &&",
          "649:             !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&",
          "650:             !s->s3->renegotiate) {",
          "651:             s->d1->handshake_read_seq++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "649:             (s->options & SSL_OP_NO_RENEGOTIATION) == 0 &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:                     }",
          "679:                 }",
          "680:             }",
          "681:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "682:         } else {",
          "683:             SSL3_RECORD_set_length(rr, 0);",
          "684:             ssl3_send_alert(s, SSL3_AL_WARNING, SSL_AD_NO_RENEGOTIATION);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "693:     if (s->server",
          "694:             && SSL_is_init_finished(s)",
          "696:             && s->rlayer.d->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH",
          "697:             && s->rlayer.d->handshake_fragment[0] == SSL3_MT_CLIENT_HELLO",
          "698:             && s->s3->previous_client_finished_len != 0",
          "700:         s->rlayer.d->handshake_fragment_len = 0;",
          "701:         SSL3_RECORD_set_length(rr, 0);",
          "702:         ssl3_send_alert(s, SSL3_AL_WARNING, SSL_AD_NO_RENEGOTIATION);",
          "",
          "[Removed Lines]",
          "695:             && !s->s3->send_connection_binding",
          "699:             && (s->options & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) == 0) {",
          "",
          "[Added Lines]",
          "702:             && ((!s->s3->send_connection_binding",
          "703:                     && (s->options",
          "704:                         & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) == 0)",
          "705:                 || (s->options & SSL_OP_NO_RENEGOTIATION) != 0)) {",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1284:             s->msg_callback(0, s->version, SSL3_RT_HANDSHAKE,",
          "1285:                             s->rlayer.handshake_fragment, 4, s,",
          "1286:                             s->msg_callback_arg);",
          "1288:         if (SSL_is_init_finished(s) &&",
          "1289:             !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&",
          "1290:             !s->s3->renegotiate) {",
          "1291:             ssl3_renegotiate(s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288:             (s->options & SSL_OP_NO_RENEGOTIATION) == 0 &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1319:                 SSL3_RECORD_set_read(rr);",
          "1320:             }",
          "1321:         } else {",
          "1323:             SSL3_RECORD_set_read(rr);",
          "1324:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1322:             ssl3_send_alert(s, SSL3_AL_WARNING, SSL_AD_NO_RENEGOTIATION);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1335:     if (s->server",
          "1336:             && SSL_is_init_finished(s)",
          "1338:             && s->version > SSL3_VERSION",
          "1339:             && s->rlayer.handshake_fragment_len >= SSL3_HM_HEADER_LENGTH",
          "1340:             && s->rlayer.handshake_fragment[0] == SSL3_MT_CLIENT_HELLO",
          "1341:             && s->s3->previous_client_finished_len != 0",
          "1343:         SSL3_RECORD_set_length(rr, 0);",
          "1344:         SSL3_RECORD_set_read(rr);",
          "1345:         ssl3_send_alert(s, SSL3_AL_WARNING, SSL_AD_NO_RENEGOTIATION);",
          "",
          "[Removed Lines]",
          "1337:             && !s->s3->send_connection_binding",
          "1342:             && (s->options & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) == 0) {",
          "",
          "[Added Lines]",
          "1341:             && ((!s->s3->send_connection_binding",
          "1342:                     && (s->options",
          "1343:                         & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) == 0)",
          "1344:                 || (s->options & SSL_OP_NO_RENEGOTIATION) != 0)) {",
          "",
          "---------------"
        ],
        "ssl/ssl_conf.c||ssl/ssl_conf.c": [
          "File: ssl/ssl_conf.c -> ssl/ssl_conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         SSL_FLAG_TBL(\"UnsafeLegacyRenegotiation\",",
          "359:                      SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION),",
          "360:         SSL_FLAG_TBL_INV(\"EncryptThenMac\", SSL_OP_NO_ENCRYPT_THEN_MAC),",
          "361:     };",
          "362:     if (value == NULL)",
          "363:         return -3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361:         SSL_FLAG_TBL(\"NoRenegotiation\", SSL_OP_NO_RENEGOTIATION),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "543:     SSL_CONF_CMD_SWITCH(\"serverpref\", SSL_CONF_FLAG_SERVER),",
          "544:     SSL_CONF_CMD_SWITCH(\"legacy_renegotiation\", 0),",
          "545:     SSL_CONF_CMD_SWITCH(\"legacy_server_connect\", SSL_CONF_FLAG_SERVER),",
          "546:     SSL_CONF_CMD_SWITCH(\"no_resumption_on_reneg\", SSL_CONF_FLAG_SERVER),",
          "547:     SSL_CONF_CMD_SWITCH(\"no_legacy_server_connect\", SSL_CONF_FLAG_SERVER),",
          "548:     SSL_CONF_CMD_SWITCH(\"strict\", 0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "547:     SSL_CONF_CMD_SWITCH(\"no_renegotiation\", 0),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "602:     {SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION, 0},",
          "604:     {SSL_OP_LEGACY_SERVER_CONNECT, 0},",
          "606:     {SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION, 0},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "608:     {SSL_OP_NO_RENEGOTIATION, 0},",
          "",
          "---------------"
        ],
        "ssl/ssl_err.c||ssl/ssl_err.c": [
          "File: ssl/ssl_err.c -> ssl/ssl_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:      \"ssl_parse_serverhello_use_srtp_ext\"},",
          "178:     {ERR_FUNC(SSL_F_SSL_PEEK), \"SSL_peek\"},",
          "179:     {ERR_FUNC(SSL_F_SSL_READ), \"SSL_read\"},",
          "180:     {ERR_FUNC(SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT),",
          "181:      \"ssl_scan_clienthello_tlsext\"},",
          "182:     {ERR_FUNC(SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:     {ERR_FUNC(SSL_F_SSL_RENEGOTIATE), \"SSL_renegotiate\"},",
          "181:     {ERR_FUNC(SSL_F_SSL_RENEGOTIATE_ABBREVIATED),",
          "182:      \"SSL_renegotiate_abbreviated\"},",
          "",
          "---------------"
        ],
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1794: int SSL_renegotiate(SSL *s)",
          "1795: {",
          "1796:     if (s->renegotiate == 0)",
          "1797:         s->renegotiate = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1796:     if ((s->options & SSL_OP_NO_RENEGOTIATION)) {",
          "1797:         SSLerr(SSL_F_SSL_RENEGOTIATE, SSL_R_NO_RENEGOTIATION);",
          "1798:         return 0;",
          "1799:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1804: int SSL_renegotiate_abbreviated(SSL *s)",
          "1805: {",
          "1806:     if (s->renegotiate == 0)",
          "1807:         s->renegotiate = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1811:     if ((s->options & SSL_OP_NO_RENEGOTIATION)) {",
          "1812:         SSLerr(SSL_F_SSL_RENEGOTIATE_ABBREVIATED, SSL_R_NO_RENEGOTIATION);",
          "1813:         return 0;",
          "1814:     }",
          "",
          "---------------"
        ],
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:         if (server) {",
          "343:             if (st->state != MSG_FLOW_RENEGOTIATE) {",
          "344:                 s->ctx->stats.sess_accept++;",
          "345:             } else if (!s->s3->send_connection_binding &&",
          "346:                        !(s->options &",
          "347:                          SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "345:             } else if ((s->options & SSL_OP_NO_RENEGOTIATION)) {",
          "349:                 SSLerr(SSL_F_STATE_MACHINE, ERR_R_INTERNAL_ERROR);",
          "350:                 ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR);",
          "351:                 ossl_statem_set_error(s);",
          "352:                 goto end;",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c"
        ],
        "test/handshake_helper.c||test/handshake_helper.c": [
          "File: test/handshake_helper.c -> test/handshake_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505: {",
          "506:     int ret;",
          "509:     ret = SSL_do_handshake(peer->ssl);",
          "511:     if (ret == 1) {",
          "",
          "[Removed Lines]",
          "508:     TEST_check(peer->status == PEER_RETRY);",
          "",
          "[Added Lines]",
          "508:     if (peer->status != PEER_RETRY) {",
          "509:         peer->status = PEER_ERROR;",
          "510:         return;",
          "511:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "588:     int ret;",
          "589:     char buf;",
          "591:     TEST_check(peer->status == PEER_RETRY);",
          "592:     TEST_check(test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_SERVER",
          "593:                 || test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_CLIENT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "595:     if (peer->status == PEER_SUCCESS) {",
          "601:         peer->status = PEER_RETRY;",
          "602:         do_handshake_step(peer);",
          "603:         return;",
          "604:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "807:         break;",
          "809:     case PEER_RETRY:",
          "820:     case PEER_ERROR:",
          "821:         switch (previous_status) {",
          "822:         case PEER_SUCCESS:",
          "",
          "[Removed Lines]",
          "810:         if (previous_status == PEER_RETRY) {",
          "812:             return HANDSHAKE_RETRY;",
          "813:         } else {",
          "818:             return INTERNAL_ERROR;",
          "819:         }",
          "",
          "[Added Lines]",
          "825:         return HANDSHAKE_RETRY;",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf": [
          "File: test/ssl-tests/17-renegotiate.conf -> test/ssl-tests/17-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "",
          "[Removed Lines]",
          "3: num_tests = 10",
          "",
          "[Added Lines]",
          "3: num_tests = 14",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: test-7 = 7-renegotiate-non-aead-to-aead",
          "13: test-8 = 8-renegotiate-non-aead-to-non-aead",
          "14: test-9 = 9-renegotiate-aead-to-aead",
          "15: # ===========================================================",
          "17: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: test-10 = 10-no-renegotiation-server-by-client",
          "16: test-11 = 11-no-renegotiation-server-by-server",
          "17: test-12 = 12-no-renegotiation-client-by-server",
          "18: test-13 = 13-no-renegotiation-client-by-client",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "310: RenegotiateCiphers = AES256-GCM-SHA384",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317: # ===========================================================",
          "319: [10-no-renegotiation-server-by-client]",
          "320: ssl_conf = 10-no-renegotiation-server-by-client-ssl",
          "322: [10-no-renegotiation-server-by-client-ssl]",
          "323: server = 10-no-renegotiation-server-by-client-server",
          "324: client = 10-no-renegotiation-server-by-client-client",
          "326: [10-no-renegotiation-server-by-client-server]",
          "327: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "328: CipherString = DEFAULT",
          "329: MaxProtocol = TLSv1.2",
          "330: Options = NoRenegotiation",
          "331: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "333: [10-no-renegotiation-server-by-client-client]",
          "334: CipherString = DEFAULT",
          "335: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "336: VerifyMode = Peer",
          "338: [test-10]",
          "339: ExpectedResult = ClientFail",
          "340: HandshakeMode = RenegotiateClient",
          "341: Method = TLS",
          "342: ResumptionExpected = No",
          "345: # ===========================================================",
          "347: [11-no-renegotiation-server-by-server]",
          "348: ssl_conf = 11-no-renegotiation-server-by-server-ssl",
          "350: [11-no-renegotiation-server-by-server-ssl]",
          "351: server = 11-no-renegotiation-server-by-server-server",
          "352: client = 11-no-renegotiation-server-by-server-client",
          "354: [11-no-renegotiation-server-by-server-server]",
          "355: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "356: CipherString = DEFAULT",
          "357: MaxProtocol = TLSv1.2",
          "358: Options = NoRenegotiation",
          "359: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "361: [11-no-renegotiation-server-by-server-client]",
          "362: CipherString = DEFAULT",
          "363: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "364: VerifyMode = Peer",
          "366: [test-11]",
          "367: ExpectedResult = ServerFail",
          "368: HandshakeMode = RenegotiateServer",
          "369: Method = TLS",
          "370: ResumptionExpected = No",
          "373: # ===========================================================",
          "375: [12-no-renegotiation-client-by-server]",
          "376: ssl_conf = 12-no-renegotiation-client-by-server-ssl",
          "378: [12-no-renegotiation-client-by-server-ssl]",
          "379: server = 12-no-renegotiation-client-by-server-server",
          "380: client = 12-no-renegotiation-client-by-server-client",
          "382: [12-no-renegotiation-client-by-server-server]",
          "383: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "384: CipherString = DEFAULT",
          "385: MaxProtocol = TLSv1.2",
          "386: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "388: [12-no-renegotiation-client-by-server-client]",
          "389: CipherString = DEFAULT",
          "390: Options = NoRenegotiation",
          "391: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "392: VerifyMode = Peer",
          "394: [test-12]",
          "395: ExpectedResult = ServerFail",
          "396: HandshakeMode = RenegotiateServer",
          "397: Method = TLS",
          "398: ResumptionExpected = No",
          "401: # ===========================================================",
          "403: [13-no-renegotiation-client-by-client]",
          "404: ssl_conf = 13-no-renegotiation-client-by-client-ssl",
          "406: [13-no-renegotiation-client-by-client-ssl]",
          "407: server = 13-no-renegotiation-client-by-client-server",
          "408: client = 13-no-renegotiation-client-by-client-client",
          "410: [13-no-renegotiation-client-by-client-server]",
          "411: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "412: CipherString = DEFAULT",
          "413: MaxProtocol = TLSv1.2",
          "414: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "416: [13-no-renegotiation-client-by-client-client]",
          "417: CipherString = DEFAULT",
          "418: Options = NoRenegotiation",
          "419: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "420: VerifyMode = Peer",
          "422: [test-13]",
          "423: ExpectedResult = ClientFail",
          "424: HandshakeMode = RenegotiateClient",
          "425: Method = TLS",
          "426: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:             \"ResumptionExpected\" => \"No\",",
          "180:             \"ExpectedResult\" => \"Success\"",
          "181:         }",
          "182:     }",
          "183: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:     },",
          "183:     {",
          "184:         name => \"no-renegotiation-server-by-client\",",
          "185:         server => {",
          "186:             \"Options\" => \"NoRenegotiation\",",
          "187:             \"MaxProtocol\" => \"TLSv1.2\"",
          "188:         },",
          "189:         client => { },",
          "190:         test => {",
          "191:             \"Method\" => \"TLS\",",
          "192:             \"HandshakeMode\" => \"RenegotiateClient\",",
          "193:             \"ResumptionExpected\" => \"No\",",
          "194:             \"ExpectedResult\" => \"ClientFail\"",
          "195:         }",
          "196:     },",
          "197:     {",
          "198:         name => \"no-renegotiation-server-by-server\",",
          "199:         server => {",
          "200:             \"Options\" => \"NoRenegotiation\",",
          "201:             \"MaxProtocol\" => \"TLSv1.2\"",
          "202:         },",
          "203:         client => { },",
          "204:         test => {",
          "205:             \"Method\" => \"TLS\",",
          "206:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "207:             \"ResumptionExpected\" => \"No\",",
          "208:             \"ExpectedResult\" => \"ServerFail\"",
          "209:         }",
          "210:     },",
          "211:     {",
          "212:         name => \"no-renegotiation-client-by-server\",",
          "213:         server => {",
          "214:             \"MaxProtocol\" => \"TLSv1.2\"",
          "215:         },",
          "216:         client => {",
          "217:             \"Options\" => \"NoRenegotiation\",",
          "218:         },",
          "219:         test => {",
          "220:             \"Method\" => \"TLS\",",
          "221:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "222:             \"ResumptionExpected\" => \"No\",",
          "223:             \"ExpectedResult\" => \"ServerFail\"",
          "224:         }",
          "225:     },",
          "226:     {",
          "227:         name => \"no-renegotiation-client-by-client\",",
          "228:         server => {",
          "229:             \"MaxProtocol\" => \"TLSv1.2\"",
          "230:         },",
          "231:         client => {",
          "232:             \"Options\" => \"NoRenegotiation\",",
          "233:         },",
          "234:         test => {",
          "235:             \"Method\" => \"TLS\",",
          "236:             \"HandshakeMode\" => \"RenegotiateClient\",",
          "237:             \"ResumptionExpected\" => \"No\",",
          "238:             \"ExpectedResult\" => \"ClientFail\"",
          "239:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "470a601705673102b9d33359408bef6334f07078",
      "candidate_info": {
        "commit_hash": "470a601705673102b9d33359408bef6334f07078",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/470a601705673102b9d33359408bef6334f07078",
        "files": [
          "Configure",
          "test/generate_ssl_tests.pl",
          "test/recipes/80-test_ssl_new.t",
          "test/recipes/tconversion.pl",
          "test/run_tests.pl",
          "test/testlib/OpenSSL/Test.pm",
          "test/testlib/OpenSSL/Test/Simple.pm",
          "test/testlib/OpenSSL/Test/Utils.pm",
          "util/OpenSSL/Glob.pm",
          "util/TLSProxy/ClientHello.pm",
          "util/TLSProxy/Message.pm",
          "util/TLSProxy/NewSessionTicket.pm",
          "util/TLSProxy/Proxy.pm",
          "util/TLSProxy/Record.pm",
          "util/TLSProxy/ServerHello.pm",
          "util/TLSProxy/ServerKeyExchange.pm",
          "util/dofile.pl",
          "util/mkdef.pl",
          "util/perl/OpenSSL/Glob.pm",
          "util/perl/OpenSSL/Test.pm",
          "util/perl/OpenSSL/Test/Simple.pm",
          "util/perl/OpenSSL/Test/Utils.pm",
          "util/perl/TLSProxy/ClientHello.pm",
          "util/perl/TLSProxy/Message.pm",
          "util/perl/TLSProxy/NewSessionTicket.pm",
          "util/perl/TLSProxy/Proxy.pm",
          "util/perl/TLSProxy/Record.pm",
          "util/perl/TLSProxy/ServerHello.pm",
          "util/perl/TLSProxy/ServerKeyExchange.pm",
          "util/perl/with_fallback.pm",
          "util/process_docs.pl",
          "util/with_fallback.pm"
        ],
        "message": "Consolidate the locations where we have our internal perl modules\n\nInstead of having perl modules under test/testlib and util,\nconsolidate them all to be inside util/perl.\n\n(this is an adaptation of the part of #4069 that wasn't included in #4666)\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4667)",
        "before_after_code_files": [
          "test/generate_ssl_tests.pl||test/generate_ssl_tests.pl",
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/recipes/tconversion.pl||test/recipes/tconversion.pl",
          "test/run_tests.pl||test/run_tests.pl",
          "util/dofile.pl||util/dofile.pl",
          "util/mkdef.pl||util/mkdef.pl",
          "util/with_fallback.pm||util/perl/with_fallback.pm",
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/generate_ssl_tests.pl||test/generate_ssl_tests.pl": [
          "File: test/generate_ssl_tests.pl -> test/generate_ssl_tests.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     OpenSSL::Test::setup(\"no_test_here\");",
          "23: }",
          "26: use lib srctop_dir(\"test\", \"ssl-tests\");  # for ssltests_base",
          "28: use with_fallback qw(Text::Template);",
          "",
          "[Removed Lines]",
          "25: use lib srctop_dir(\"util\");  # for with_fallback",
          "",
          "[Added Lines]",
          "25: use lib srctop_dir(\"util\", \"perl\");  # for with_fallback",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:       skip 'failure', 2 unless",
          "103:         ok(run(perltest([\"generate_ssl_tests.pl\", $input_file],",
          "105:                         stdout => $tmp_file)),",
          "106:            \"Getting output from generate_ssl_tests.pl.\");",
          "",
          "[Removed Lines]",
          "104:                         interpreter_args => [ \"-I\", srctop_dir(\"test\", \"testlib\")],",
          "",
          "[Added Lines]",
          "104:                         interpreter_args => [ \"-I\", srctop_dir(\"util\", \"perl\")],",
          "",
          "---------------"
        ],
        "test/recipes/tconversion.pl||test/recipes/tconversion.pl": [
          "File: test/recipes/tconversion.pl -> test/recipes/tconversion.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Compare qw/compare_text/;",
          "14: use File::Copy;",
          "16: use OpenSSL::Test qw/:DEFAULT/;",
          "18: my %conversionforms = (",
          "",
          "[Removed Lines]",
          "15: use lib 'testlib';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/run_tests.pl||test/run_tests.pl": [
          "File: test/run_tests.pl -> test/run_tests.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: use File::Spec::Functions qw/catdir catfile curdir abs2rel rel2abs/;",
          "18: use File::Basename;",
          "19: use FindBin;",
          "21: use OpenSSL::Glob;",
          "22: use Module::Load::Conditional qw(can_load);",
          "",
          "[Removed Lines]",
          "20: use lib \"$FindBin::Bin/../util\";",
          "",
          "[Added Lines]",
          "20: use lib \"$FindBin::Bin/../util/perl\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: my $srctop = $ENV{SRCTOP} || $ENV{TOP};",
          "28: my $bldtop = $ENV{BLDTOP} || $ENV{TOP};",
          "29: my $recipesdir = catdir($srctop, \"test\", \"recipes\");",
          "33: my %tapargs =",
          "34:     ( verbosity => $ENV{VERBOSE} || $ENV{V} || $ENV{HARNESS_VERBOSE} ? 1 : 0,",
          "36:       switches  => '-w',",
          "37:       merge     => 1",
          "38:     );",
          "",
          "[Removed Lines]",
          "30: my $testlib = catdir($srctop, \"test\", \"testlib\");",
          "31: my $utillib = catdir($srctop, \"util\");",
          "35:       lib       => [ $testlib, $utillib ],",
          "",
          "[Added Lines]",
          "30: my $libdir = rel2abs(catdir($srctop, \"util\", \"perl\"));",
          "34:       lib       => [ $libdir ],",
          "",
          "---------------"
        ],
        "util/dofile.pl||util/dofile.pl": [
          "File: util/dofile.pl -> util/dofile.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use strict;",
          "15: use warnings;",
          "17: use Getopt::Std;",
          "19: # We actually expect to get the following hash tables from configdata:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: use FindBin;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: # a fallback in case it's not installed on the system",
          "39: use File::Basename;",
          "40: use File::Spec::Functions;",
          "42: use with_fallback qw(Text::Template);",
          "44: #use parent qw/Text::Template/;",
          "",
          "[Removed Lines]",
          "41: use lib catdir(dirname(__FILE__));",
          "",
          "[Added Lines]",
          "42: use lib \"$FindBin::Bin/perl\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "175: # Load the full template (combination of files) into Text::Template",
          "176: # and fill it up with our data.  Output goes directly to STDOUT",
          "180: sub output_reset_on {",
          "181:     $template->output_reset_on();",
          "",
          "[Removed Lines]",
          "178: my $template = OpenSSL::Template->new(TYPE => 'STRING', SOURCE => $text );",
          "",
          "[Added Lines]",
          "179: my $template =",
          "180:     OpenSSL::Template->new(TYPE => 'STRING',",
          "181:                            SOURCE => $text,",
          "182:                            PREPEND => qq{use lib \"$FindBin::Bin/perl\";});",
          "",
          "---------------"
        ],
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: use File::Spec::Functions;",
          "51: use File::Basename;",
          "52: use FindBin;",
          "54: use OpenSSL::Glob;",
          "56: my $debug=0;",
          "",
          "[Removed Lines]",
          "53: use lib \"$FindBin::Bin\";",
          "",
          "[Added Lines]",
          "53: use lib \"$FindBin::Bin/perl\";",
          "",
          "---------------"
        ],
        "util/with_fallback.pm||util/perl/with_fallback.pm": [
          "File: util/with_fallback.pm -> util/perl/with_fallback.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     foreach (@_) {",
          "14:  eval \"require $_\";",
          "15:  if ($@) {",
          "17:      my $transfer = \"transfer::$_\";",
          "18:      eval \"require $transfer\";",
          "19:      shift @INC;",
          "",
          "[Removed Lines]",
          "16:      unshift @INC, catdir(dirname(__FILE__), \"..\", \"external\", \"perl\");",
          "",
          "[Added Lines]",
          "16:      unshift @INC, catdir(dirname(__FILE__),",
          "17:                                  \"..\", \"..\", \"external\", \"perl\");",
          "",
          "---------------"
        ],
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use File::Copy;",
          "15: use File::Path;",
          "16: use FindBin;",
          "18: use OpenSSL::Glob;",
          "19: use Getopt::Long;",
          "20: use Pod::Usage;",
          "",
          "[Removed Lines]",
          "17: use lib \"$FindBin::Bin\";",
          "",
          "[Added Lines]",
          "17: use lib \"$FindBin::Bin/perl\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efd10d34b3d3d3e694d6f4667e09efba1fde51f1",
      "candidate_info": {
        "commit_hash": "efd10d34b3d3d3e694d6f4667e09efba1fde51f1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/efd10d34b3d3d3e694d6f4667e09efba1fde51f1",
        "files": [
          "crypto/bn/bn_mul.c"
        ],
        "message": "Remove a pointless \"#if 0\" block from BN_mul.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3683)\n\n(cherry picked from commit 93a8b3ba793c769a3634e56642dac55a8d44023f)",
        "before_after_code_files": [
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:             rr->top = top;",
          "919:             goto end;",
          "920:         }",
          "961:     }",
          "963:     if (bn_wexpand(rr, top) == NULL)",
          "",
          "[Removed Lines]",
          "921: # if 0",
          "922:         if (i == 1 && !BN_get_flags(b, BN_FLG_STATIC_DATA)) {",
          "923:             BIGNUM *tmp_bn = (BIGNUM *)b;",
          "924:             if (bn_wexpand(tmp_bn, al) == NULL)",
          "925:                 goto err;",
          "926:             tmp_bn->d[bl] = 0;",
          "927:             bl++;",
          "928:             i--;",
          "929:         } else if (i == -1 && !BN_get_flags(a, BN_FLG_STATIC_DATA)) {",
          "930:             BIGNUM *tmp_bn = (BIGNUM *)a;",
          "931:             if (bn_wexpand(tmp_bn, bl) == NULL)",
          "932:                 goto err;",
          "933:             tmp_bn->d[al] = 0;",
          "934:             al++;",
          "935:             i++;",
          "936:         }",
          "937:         if (i == 0) {",
          "940:             j = BN_num_bits_word((BN_ULONG)al);",
          "941:             j = 1 << (j - 1);",
          "942:             k = j + j;",
          "943:             t = BN_CTX_get(ctx);",
          "945:                 if (bn_wexpand(t, k * 2) == NULL)",
          "946:                     goto err;",
          "947:                 if (bn_wexpand(rr, k * 2) == NULL)",
          "948:                     goto err;",
          "949:                 bn_mul_recursive(rr->d, a->d, b->d, al, t->d);",
          "950:             } else {",
          "951:                 if (bn_wexpand(t, k * 4) == NULL)",
          "952:                     goto err;",
          "953:                 if (bn_wexpand(rr, k * 4) == NULL)",
          "954:                     goto err;",
          "955:                 bn_mul_part_recursive(rr->d, a->d, b->d, al - j, j, t->d);",
          "956:             }",
          "957:             rr->top = top;",
          "958:             goto end;",
          "959:         }",
          "960: # endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c96485f77c2e4cf44aa352890568145e19a056bc",
      "candidate_info": {
        "commit_hash": "c96485f77c2e4cf44aa352890568145e19a056bc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c96485f77c2e4cf44aa352890568145e19a056bc",
        "files": [
          "crypto/asn1/a_strnid.c"
        ],
        "message": "Fix nid assignment in ASN1_STRING_TABLE_add\n\nCLA: trivial\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3934)\n\n(cherry picked from commit 386e9169c35718436ba038dff93711d2db73fa6a)",
        "before_after_code_files": [
          "crypto/asn1/a_strnid.c||crypto/asn1/a_strnid.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_strnid.c||crypto/asn1/a_strnid.c": [
          "File: crypto/asn1/a_strnid.c -> crypto/asn1/a_strnid.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:         rv->mask = tmp->mask;",
          "215:         rv->flags = tmp->flags | STABLE_FLAGS_MALLOC;",
          "216:     } else {",
          "217:         rv->minsize = -1;",
          "218:         rv->maxsize = -1;",
          "219:         rv->flags = STABLE_FLAGS_MALLOC;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:         rv->nid = nid;",
          "",
          "---------------"
        ]
      }
    }
  ]
}