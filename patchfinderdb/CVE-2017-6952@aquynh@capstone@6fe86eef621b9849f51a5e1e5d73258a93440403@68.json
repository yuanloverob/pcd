{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "733984689188729d2f0db5bc74d1158fd3c5b8b0",
      "candidate_info": {
        "commit_hash": "733984689188729d2f0db5bc74d1158fd3c5b8b0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/733984689188729d2f0db5bc74d1158fd3c5b8b0",
        "files": [
          "arch/X86/X86GenDisassemblerTables.inc"
        ],
        "message": "x86: Fix the operand encoding in the test instruction, issue #702",
        "before_after_code_files": [
          "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc": [
          "File: arch/X86/X86GenDisassemblerTables.inc -> arch/X86/X86GenDisassemblerTables.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21532:   },",
          "21536:   },",
          "",
          "[Removed Lines]",
          "21534:     69,",
          "",
          "[Added Lines]",
          "21534:     73,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21560:   },",
          "21564:   },",
          "",
          "[Removed Lines]",
          "21562:     69,",
          "",
          "[Added Lines]",
          "21562:     73,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "21588:   },",
          "21592:   },",
          "",
          "[Removed Lines]",
          "21590:     43,",
          "",
          "[Added Lines]",
          "21590:     76,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "21620:   },",
          "21624:   },",
          "",
          "[Removed Lines]",
          "21622:     88,",
          "",
          "[Added Lines]",
          "21622:     87,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8879b5d6cc3c02d51d98ca6e17b97cc03610d17c",
      "candidate_info": {
        "commit_hash": "8879b5d6cc3c02d51d98ca6e17b97cc03610d17c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8879b5d6cc3c02d51d98ca6e17b97cc03610d17c",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "python: import os",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Capstone Python bindings, by Nguyen Anh Quynnh <aquynh@gmail.com>",
          "3: from platform import system",
          "4: _python2 = sys.version_info[0] < 3",
          "5: if _python2:",
          "",
          "[Removed Lines]",
          "2: import sys",
          "",
          "[Added Lines]",
          "2: import os, sys",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ccd9066461ab0eddc262ce3e441d312901d35678",
      "candidate_info": {
        "commit_hash": "ccd9066461ab0eddc262ce3e441d312901d35678",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ccd9066461ab0eddc262ce3e441d312901d35678",
        "files": [
          "include/capstone.h",
          "tests/test_skipdata.c"
        ],
        "message": "Replace CAPSTONE_API to mycallback and cs_skipdata_cb_t",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h",
          "tests/test_skipdata.c||tests/test_skipdata.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  @return: return number of bytes to skip, or 0 to immediately stop disassembling.",
          "178: typedef struct cs_opt_skipdata {",
          "",
          "[Removed Lines]",
          "175: typedef size_t (*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "[Added Lines]",
          "175: typedef size_t (CAPSTONE_API*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "---------------"
        ],
        "tests/test_skipdata.c||tests/test_skipdata.c": [
          "File: tests/test_skipdata.c -> tests/test_skipdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  printf(\"\\n\");",
          "31: }",
          "34: {",
          "36:  return 2;",
          "",
          "[Removed Lines]",
          "33: static size_t mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "[Added Lines]",
          "33: static size_t CAPSTONE_API mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1287c8e221e01d3afd1d9160eff0ec6fe4b9e26",
      "candidate_info": {
        "commit_hash": "f1287c8e221e01d3afd1d9160eff0ec6fe4b9e26",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f1287c8e221e01d3afd1d9160eff0ec6fe4b9e26",
        "files": [
          "include/capstone/sparc.h"
        ],
        "message": "Fixed sparc header to comply with bindings",
        "before_after_code_files": [
          "include/capstone/sparc.h||include/capstone/sparc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/sparc.h||include/capstone/sparc.h": [
          "File: include/capstone/sparc.h -> include/capstone/sparc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: typedef struct sparc_op_mem {",
          "184:  int32_t disp;  // displacement/offset value",
          "185: } sparc_op_mem;",
          "",
          "[Removed Lines]",
          "182:  sparc_reg base;  // base register",
          "183:  sparc_reg index; // index register",
          "",
          "[Added Lines]",
          "182:  uint8_t base;  // base register, can be safely interpreted as",
          "185:  uint8_t index;  // index register, same conditions apply here",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8fba330a6e2328afec684ea688bbe614eeb6a177",
      "candidate_info": {
        "commit_hash": "8fba330a6e2328afec684ea688bbe614eeb6a177",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8fba330a6e2328afec684ea688bbe614eeb6a177",
        "files": [
          "bindings/python/test_lite.py"
        ],
        "message": "Add missing architectures to test_lite.py.\n\nThe code constants and the all_tests tuple is now analogous to\ntest_basic.py.",
        "before_after_code_files": [
          "bindings/python/test_lite.py||bindings/python/test_lite.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/test_lite.py||bindings/python/test_lite.py": [
          "File: bindings/python/test_lite.py -> bindings/python/test_lite.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: X86_CODE16 = b\"\\x8d\\x4c\\x32\\x08\\x01\\xd8\\x81\\xc6\\x34\\x12\\x00\\x00\"",
          "11: X86_CODE64 = b\"\\x55\\x48\\x8b\\x05\\xb8\\x13\\x00\\x00\"",
          "12: ARM_CODE = b\"\\xED\\xFF\\xFF\\xEB\\x04\\xe0\\x2d\\xe5\\x00\\x00\\x00\\x00\\xe0\\x83\\x22\\xe5\\xf1\\x02\\x03\\x0e\\x00\\x00\\xa0\\xe3\\x02\\x30\\xc1\\xe7\\x00\\x00\\x53\\xe3\"",
          "13: ARM_CODE2 = b\"\\x10\\xf1\\x10\\xe7\\x11\\xf2\\x31\\xe7\\xdc\\xa1\\x2e\\xf3\\xe8\\x4e\\x62\\xf3\"",
          "14: THUMB_CODE = b\"\\x70\\x47\\xeb\\x46\\x83\\xb0\\xc9\\x68\"",
          "15: THUMB_CODE2 = b\"\\x4f\\xf0\\x00\\x01\\xbd\\xe8\\x00\\x88\\xd1\\xe8\\x00\\xf0\"",
          "16: MIPS_CODE = b\"\\x0C\\x10\\x00\\x97\\x00\\x00\\x00\\x00\\x24\\x02\\x00\\x0c\\x8f\\xa2\\x00\\x00\\x34\\x21\\x34\\x56\"",
          "17: MIPS_CODE2 = b\"\\x56\\x34\\x21\\x34\\xc2\\x17\\x01\\x00\"",
          "18: ARM64_CODE = b\"\\x21\\x7c\\x02\\x9b\\x21\\x7c\\x00\\x53\\x00\\x40\\x21\\x4b\\xe1\\x0b\\x40\\xb9\"",
          "19: PPC_CODE = b\"\\x80\\x20\\x00\\x00\\x80\\x3f\\x00\\x00\\x10\\x43\\x23\\x0e\\xd0\\x44\\x00\\x80\\x4c\\x43\\x22\\x02\\x2d\\x03\\x00\\x80\\x7c\\x43\\x20\\x14\\x7c\\x43\\x20\\x93\\x4f\\x20\\x00\\x21\\x4c\\xc8\\x00\\x21\"",
          "21: all_tests = (",
          "22:         (CS_ARCH_X86, CS_MODE_16, X86_CODE16, \"X86 16bit (Intel syntax)\", None),",
          "23:         (CS_ARCH_X86, CS_MODE_32, X86_CODE32, \"X86 32bit (ATT syntax)\", CS_OPT_SYNTAX_ATT),",
          "24:         (CS_ARCH_X86, CS_MODE_32, X86_CODE32, \"X86 32 (Intel syntax)\", None),",
          "25:         (CS_ARCH_X86, CS_MODE_64, X86_CODE64, \"X86 64 (Intel syntax)\", None),",
          "26:         (CS_ARCH_ARM, CS_MODE_ARM, ARM_CODE, \"ARM\", None),",
          "27:         (CS_ARCH_ARM, CS_MODE_THUMB, THUMB_CODE2, \"THUMB-2\", None),",
          "28:         (CS_ARCH_ARM, CS_MODE_ARM, ARM_CODE2, \"ARM: Cortex-A15 + NEON\", None),",
          "29:         (CS_ARCH_ARM, CS_MODE_THUMB, THUMB_CODE, \"THUMB\", None),",
          "30:         (CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_BIG_ENDIAN, MIPS_CODE, \"MIPS-32 (Big-endian)\", None),",
          "31:         (CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_LITTLE_ENDIAN, MIPS_CODE2, \"MIPS-64-EL (Little-endian)\", None),",
          "32:         (CS_ARCH_ARM64, CS_MODE_ARM, ARM64_CODE, \"ARM-64\", None),",
          "33:         (CS_ARCH_PPC, CS_MODE_BIG_ENDIAN, PPC_CODE, \"PPC-64\", None),",
          "34:         (CS_ARCH_PPC, CS_MODE_BIG_ENDIAN, PPC_CODE, \"PPC-64, print register with number only\", CS_OPT_SYNTAX_NOREGNAME),",
          "35:         )",
          "",
          "[Removed Lines]",
          "10: X86_CODE32 = b\"\\x8d\\x4c\\x32\\x08\\x01\\xd8\\x81\\xc6\\x34\\x12\\x00\\x00\"",
          "",
          "[Added Lines]",
          "10: X86_CODE32 = b\"\\xba\\xcd\\xab\\x00\\x00\\x8d\\x4c\\x32\\x08\\x01\\xd8\\x81\\xc6\\x34\\x12\\x00\\x00\"",
          "16: THUMB_MCLASS = b\"\\xef\\xf3\\x02\\x80\"",
          "17: ARMV8 = b\"\\xe0\\x3b\\xb2\\xee\\x42\\x00\\x01\\xe1\\x51\\xf0\\x7f\\xf5\"",
          "20: MIPS_32R6M = b\"\\x00\\x07\\x00\\x07\\x00\\x11\\x93\\x7c\\x01\\x8c\\x8b\\x7c\\x00\\xc7\\x48\\xd0\"",
          "21: MIPS_32R6 = b\"\\xec\\x80\\x00\\x19\\x7c\\x43\\x22\\xa0\"",
          "24: PPC_CODE2 = b\"\\x10\\x60\\x2a\\x10\\x10\\x64\\x28\\x88\\x7c\\x4a\\x5d\\x0f\"",
          "25: SPARC_CODE = b\"\\x80\\xa0\\x40\\x02\\x85\\xc2\\x60\\x08\\x85\\xe8\\x20\\x01\\x81\\xe8\\x00\\x00\\x90\\x10\\x20\\x01\\xd5\\xf6\\x10\\x16\\x21\\x00\\x00\\x0a\\x86\\x00\\x40\\x02\\x01\\x00\\x00\\x00\\x12\\xbf\\xff\\xff\\x10\\xbf\\xff\\xff\\xa0\\x02\\x00\\x09\\x0d\\xbf\\xff\\xff\\xd4\\x20\\x60\\x00\\xd4\\x4e\\x00\\x16\\x2a\\xc2\\x80\\x03\"",
          "26: SPARCV9_CODE = b\"\\x81\\xa8\\x0a\\x24\\x89\\xa0\\x10\\x20\\x89\\xa0\\x1a\\x60\\x89\\xa0\\x00\\xe0\"",
          "27: SYSZ_CODE = b\"\\xed\\x00\\x00\\x00\\x00\\x1a\\x5a\\x0f\\x1f\\xff\\xc2\\x09\\x80\\x00\\x00\\x00\\x07\\xf7\\xeb\\x2a\\xff\\xff\\x7f\\x57\\xe3\\x01\\xff\\xff\\x7f\\x57\\xeb\\x00\\xf0\\x00\\x00\\x24\\xb2\\x4f\\x00\\x78\"",
          "28: XCORE_CODE = b\"\\xfe\\x0f\\xfe\\x17\\x13\\x17\\xc6\\xfe\\xec\\x17\\x97\\xf8\\xec\\x4f\\x1f\\xfd\\xec\\x37\\x07\\xf2\\x45\\x5b\\xf9\\xfa\\x02\\x06\\x1b\\x10\"",
          "34:         (CS_ARCH_X86, CS_MODE_32, X86_CODE32, \"X86 32 (MASM syntax)\", CS_OPT_SYNTAX_MASM),",
          "40:         (CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_MCLASS, THUMB_MCLASS, \"Thumb-MClass\", None),",
          "41:         (CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_V8, ARMV8, \"Arm-V8\", None),",
          "44:         (CS_ARCH_MIPS, CS_MODE_MIPS32R6 + CS_MODE_MICRO + CS_MODE_BIG_ENDIAN, MIPS_32R6M, \"MIPS-32R6 | Micro (Big-endian)\", None),",
          "45:         (CS_ARCH_MIPS, CS_MODE_MIPS32R6 + CS_MODE_BIG_ENDIAN, MIPS_32R6, \"MIPS-32R6 (Big-endian)\", None),",
          "49:         (CS_ARCH_PPC, CS_MODE_BIG_ENDIAN + CS_MODE_QPX, PPC_CODE2, \"PPC-64 + QPX\", CS_OPT_SYNTAX_NOREGNAME),",
          "50:         (CS_ARCH_SPARC, CS_MODE_BIG_ENDIAN, SPARC_CODE, \"Sparc\", None),",
          "51:         (CS_ARCH_SPARC, CS_MODE_BIG_ENDIAN + CS_MODE_V9, SPARCV9_CODE, \"SparcV9\", None),",
          "52:         (CS_ARCH_SYSZ, 0, SYSZ_CODE, \"SystemZ\", None),",
          "53:         (CS_ARCH_XCORE, 0, XCORE_CODE, \"XCore\", None),",
          "",
          "---------------"
        ]
      }
    }
  ]
}