{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "647ca2f679ae4d91ea840a50a388404bc41647a1",
      "candidate_info": {
        "commit_hash": "647ca2f679ae4d91ea840a50a388404bc41647a1",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/647ca2f679ae4d91ea840a50a388404bc41647a1",
        "files": [
          "arch/X86/X86MappingInsnOp.inc",
          "arch/X86/X86MappingInsnOp_reduce.inc"
        ],
        "message": "Changed X86_INS_POP flags",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc",
          "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc": [
          "File: arch/X86/X86MappingInsnOp.inc -> arch/X86/X86MappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7803: },",
          "7805:  0,",
          "7807: },",
          "7809:  0,",
          "",
          "[Removed Lines]",
          "7806:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "7806:  { CS_AC_WRITE, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7815: },",
          "7817:  0,",
          "7819: },",
          "7821:  0,",
          "",
          "[Removed Lines]",
          "7818:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "7818:  { CS_AC_WRITE, 0 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7827: },",
          "7829:  0,",
          "7831: },",
          "7833:  0,",
          "",
          "[Removed Lines]",
          "7830:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "7830:  { CS_AC_WRITE, 0 }",
          "",
          "---------------"
        ],
        "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc": [
          "File: arch/X86/X86MappingInsnOp_reduce.inc -> arch/X86/X86MappingInsnOp_reduce.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3771: },",
          "3773:  0,",
          "3775: },",
          "3777:  0,",
          "",
          "[Removed Lines]",
          "3774:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "3774:  { CS_AC_WRITE, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3783: },",
          "3785:  0,",
          "3787: },",
          "3789:  0,",
          "",
          "[Removed Lines]",
          "3786:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "3786:  { CS_AC_WRITE, 0 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3795: },",
          "3797:  0,",
          "3799: },",
          "3801:  0,",
          "",
          "[Removed Lines]",
          "3798:  { CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "3798:  { CS_AC_WRITE, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "003f50ee2d17ff7ef257cff28d047840ca5ed89a",
      "candidate_info": {
        "commit_hash": "003f50ee2d17ff7ef257cff28d047840ca5ed89a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/003f50ee2d17ff7ef257cff28d047840ca5ed89a",
        "files": [
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "python: version 4.0.0",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from setuptools.command.bdist_egg import bdist_egg",
          "16: SYSTEM = sys.platform",
          "19: # adapted from commit e504b81 of Nguyen Tan Cong",
          "20: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "17: VERSION = '4.0'",
          "",
          "[Added Lines]",
          "17: VERSION = '4.0.0'",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: from distutils.command.build import build",
          "9: from Cython.Distutils import build_ext",
          "12: SYSTEM = sys.platform",
          "14: # adapted from commit e504b81 of Nguyen Tan Cong",
          "15: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "11: VERSION = '4.0'",
          "",
          "[Added Lines]",
          "12: VERSION = '4.0.0'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e12e2de2cf9b0f5529ad91e9e4f1f13398d07f1a",
      "candidate_info": {
        "commit_hash": "e12e2de2cf9b0f5529ad91e9e4f1f13398d07f1a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e12e2de2cf9b0f5529ad91e9e4f1f13398d07f1a",
        "files": [
          "cstool/cstool_x86.c"
        ],
        "message": "cstool: cs_op_count() can return -1. fix #978",
        "before_after_code_files": [
          "cstool/cstool_x86.c||cstool/cstool_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:  count = cs_op_count(ud, ins, X86_OP_IMM);",
          "239:   printf(\"\\timm_count: %u\\n\", count);",
          "240:   for (i = 1; i < count + 1; i++) {",
          "241:    int index = cs_op_index(ud, ins, X86_OP_IMM, i);",
          "",
          "[Removed Lines]",
          "238:  if (count) {",
          "",
          "[Added Lines]",
          "238:  if (count > 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53b8174c6a3c7fd92266ce45729975e76ed21d8a",
      "candidate_info": {
        "commit_hash": "53b8174c6a3c7fd92266ce45729975e76ed21d8a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/53b8174c6a3c7fd92266ce45729975e76ed21d8a",
        "files": [
          "bindings/python/test_m68k.py",
          "tests/test_m68k.c"
        ],
        "message": "Further refinements to the tests + python test fix for M68K",
        "before_after_code_files": [
          "bindings/python/test_m68k.py||bindings/python/test_m68k.py",
          "tests/test_m68k.c||tests/test_m68k.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/test_m68k.py||bindings/python/test_m68k.py": [
          "File: bindings/python/test_m68k.py -> bindings/python/test_m68k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     for i, op in enumerate(insn.operands):",
          "51:         if op.type == M68K_OP_REG:",
          "52:             print(\"\\t\\toperands[%u].type: REG = %s\" % (i, insn.reg_name(op.reg)))",
          "63:             print(\"\\t\\toperands[%u].type: IMM = 0x%x\" % (i, op.imm & 0xffffffff))",
          "66:             print(\"\\t\\toperands[%u].type: MEM\" % (i))",
          "67:             if op.mem.base_reg != M68K_REG_INVALID:",
          "68:                 print(\"\\t\\t\\toperands[%u].mem.base: REG = %s\" % (i, insn.reg_name(op.mem.base_reg)))",
          "",
          "[Removed Lines]",
          "54:         if op.type == M68K_OP_IMM:",
          "55:             if insn.op_size.type == M68K_SIZE_TYPE_FPU:",
          "56:                 if insn.op_size.size == M68K_FPU_SIZE_SINGLE:",
          "57:                     print(\"\\t\\toperands[%u].type: IMM = %f\" % (i, op.simm))",
          "58:                 elif insn.op_size.size == M68K_FPU_SIZE_DOUBLE:",
          "59:                     print(\"\\t\\toperands[%u].type: IMM = %lf\" % (i, op.dimm))",
          "60:                 else:",
          "61:                     print(\"\\t\\toperands[%u].type: IMM = <unsupported>\" % (i))",
          "62:                 continue",
          "65:         if op.type == M68K_OP_MEM:",
          "",
          "[Added Lines]",
          "53:         elif op.type == M68K_OP_IMM:",
          "55:         elif op.type == M68K_OP_MEM:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:             if op.mem.scale != 0:",
          "78:                 print(\"\\t\\t\\toperands[%u].mem.scale: %d\" % (i, op.mem.scale))",
          "79:             print(\"\\t\\taddress mode: %s\" % (s_addressing_modes[op.address_mode]))",
          "80:     print()",
          "82: # ## Test class Cs",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:         elif op.type == M68K_OP_FP_SINGLE:",
          "71:             print(\"\\t\\toperands[%u].type: FP_SINGLE\" % i)",
          "72:             print(\"\\t\\\u0167\\toperands[%u].simm: %f\", i, op.simm)",
          "73:         elif op.type == M68K_OP_FP_DOUBLE:",
          "74:             print(\"\\t\\toperands[%u].type: FP_DOUBLE\" % i)",
          "75:             print(\"\\t\\\u0167\\toperands[%u].dimm: %lf\", i, op.dimm)",
          "",
          "---------------"
        ],
        "tests/test_m68k.c||tests/test_m68k.c": [
          "File: tests/test_m68k.c -> tests/test_m68k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     printf(\"\\t\\toperands[%u].type: REG = %s\\n\", i, cs_reg_name(handle, op->reg));",
          "86:     break;",
          "87:    case M68K_OP_IMM:",
          "98:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, (int)op->imm);",
          "99:     break;",
          "100:    case M68K_OP_MEM:",
          "",
          "[Removed Lines]",
          "88:     if (m68k->op_size.type == M68K_SIZE_TYPE_FPU) {",
          "89:      if (m68k->op_size.fpu_size == M68K_FPU_SIZE_SINGLE)",
          "90:       printf(\"\\t\\toperands[%u].type: IMM = %f\\n\", i, op->simm);",
          "91:      else if (m68k->op_size.fpu_size == M68K_FPU_SIZE_DOUBLE)",
          "92:       printf(\"\\t\\toperands[%u].type: IMM = %lf\\n\", i, op->dimm);",
          "93:      else",
          "94:       printf(\"\\t\\toperands[%u].type: IMM = <unsupported>\\n\", i);",
          "95:      break;",
          "96:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:     printf(\"\\t\\toperands[%u].type: FP_SINGLE\\n\", i);",
          "120:     printf(\"\\t\\t\\toperands[%u].simm: %f\\n\", i, op->simm);",
          "121:     break;",
          "122:   }",
          "123:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:    case M68K_OP_FP_DOUBLE:",
          "113:     printf(\"\\t\\toperands[%u].type: FP_DOUBLE\\n\", i);",
          "114:     printf(\"\\t\\t\\toperands[%u].dimm: %lf\\n\", i, op->dimm);",
          "115:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4cd08570d190a5866f3ea1a814743bbdddc6a498",
      "candidate_info": {
        "commit_hash": "4cd08570d190a5866f3ea1a814743bbdddc6a498",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4cd08570d190a5866f3ea1a814743bbdddc6a498",
        "files": [
          "arch/X86/X86Mapping.c",
          "arch/X86/qsort.h"
        ],
        "message": "Added qsort implementation for OS X kernel mode (#934)\n\n* Added qsort implementation for OS X kernel mode\n\n* Added qsort source reference",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c",
          "arch/X86/qsort.h||arch/X86/qsort.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #include <string.h>",
          "7: #ifndef CAPSTONE_HAS_OSXKERNEL",
          "8: #include <stdlib.h>",
          "9: #endif",
          "11: #include \"X86Mapping.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: #else",
          "10: #include \"qsort.h\"",
          "",
          "---------------"
        ],
        "arch/X86/qsort.h||arch/X86/qsort.h": [
          "File: arch/X86/qsort.h -> arch/X86/qsort.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69: #ifndef CS_QSORT_H",
          "70: #define CS_QSORT_H",
          "72: #include <libkern/libkern.h>",
          "74: #pragma clang diagnostic push",
          "75: #pragma clang diagnostic ignored \"-Wshorten-64-to-32\"",
          "77: void",
          "78: qsort(void *a, size_t n, size_t es, int (*cmp)(const void *, const void *));",
          "80: static inline char *med3(char *, char *, char *, int (*)(const void *, const void *));",
          "81: static inline void  swapfunc(char *, char *, int, int);",
          "83: #define min(a, b) (a) < (b) ? a : b",
          "88: #define swapcode(TYPE, parmi, parmj, n) {   \\",
          "89:  long i = (n) / sizeof (TYPE);    \\",
          "90:  TYPE *pi = (TYPE *) (parmi);    \\",
          "91:  TYPE *pj = (TYPE *) (parmj);    \\",
          "92:  do {       \\",
          "93:   TYPE t = *pi;   \\",
          "96:         } while (--i > 0);    \\",
          "97: }",
          "99: #define SWAPINIT(a, es) swaptype = ((char *)a - (char *)0) % sizeof(long) || \\",
          "100:  es % sizeof(long) ? 2 : es == sizeof(long)? 0 : 1;",
          "102: static inline void",
          "103: swapfunc(char *a, char *b, int n, int swaptype)",
          "104: {",
          "105:  if(swaptype <= 1)",
          "106:   swapcode(long, a, b, n)",
          "107:  else",
          "108:   swapcode(char, a, b, n)",
          "109: }",
          "111: #define swap(a, b)     \\",
          "112:  if (swaptype == 0) {    \\",
          "113:   long t = *(long *)(a);   \\",
          "116:  } else      \\",
          "117:   swapfunc(a, b, es, swaptype)",
          "119: #define vecswap(a, b, n)  if ((n) > 0) swapfunc(a, b, n, swaptype)",
          "121: static inline char *",
          "122: med3(char *a, char *b, char *c, int (*cmp)(const void *, const void *))",
          "123: {",
          "124:  return cmp(a, b) < 0 ?",
          "125:         (cmp(b, c) < 0 ? b : (cmp(a, c) < 0 ? c : a ))",
          "126:               :(cmp(b, c) > 0 ? b : (cmp(a, c) < 0 ? a : c ));",
          "127: }",
          "129: void",
          "130: qsort(void *a, size_t n, size_t es, int (*cmp)(const void *, const void *))",
          "131: {",
          "132:  char *pa, *pb, *pc, *pd, *pl, *pm, *pn;",
          "133:  int d, swaptype, swap_cnt;",
          "134:  int r;",
          "136: loop: SWAPINIT(a, es);",
          "137:  swap_cnt = 0;",
          "138:  if (n < 7) {",
          "139:   for (pm = (char *)a + es; pm < (char *) a + n * es; pm += es)",
          "140:    for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > 0;",
          "141:         pl -= es)",
          "142:     swap(pl, pl - es);",
          "143:   return;",
          "144:  }",
          "145:  pm = (char *)a + (n / 2) * es;",
          "146:  if (n > 7) {",
          "147:   pl = a;",
          "148:   pn = (char *)a + (n - 1) * es;",
          "149:   if (n > 40) {",
          "150:    d = (n / 8) * es;",
          "151:    pl = med3(pl, pl + d, pl + 2 * d, cmp);",
          "152:    pm = med3(pm - d, pm, pm + d, cmp);",
          "153:    pn = med3(pn - 2 * d, pn - d, pn, cmp);",
          "154:   }",
          "155:   pm = med3(pl, pm, pn, cmp);",
          "156:  }",
          "157:  swap(a, pm);",
          "158:  pa = pb = (char *)a + es;",
          "160:  pc = pd = (char *)a + (n - 1) * es;",
          "161:  for (;;) {",
          "162:   while (pb <= pc && (r = cmp(pb, a)) <= 0) {",
          "163:    if (r == 0) {",
          "164:     swap_cnt = 1;",
          "165:     swap(pa, pb);",
          "166:     pa += es;",
          "167:    }",
          "168:    pb += es;",
          "169:   }",
          "170:   while (pb <= pc && (r = cmp(pc, a)) >= 0) {",
          "171:    if (r == 0) {",
          "172:     swap_cnt = 1;",
          "173:     swap(pc, pd);",
          "174:     pd -= es;",
          "175:    }",
          "176:    pc -= es;",
          "177:   }",
          "178:   if (pb > pc)",
          "179:    break;",
          "180:   swap(pb, pc);",
          "181:   swap_cnt = 1;",
          "182:   pb += es;",
          "183:   pc -= es;",
          "184:  }",
          "186:   for (pm = (char *)a + es; pm < (char *) a + n * es; pm += es)",
          "187:    for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > 0;",
          "188:         pl -= es)",
          "189:     swap(pl, pl - es);",
          "190:   return;",
          "191:  }",
          "193:  pn = (char *)a + n * es;",
          "194:  r = min(pa - (char *)a, pb - pa);",
          "195:  vecswap(a, pb - r, r);",
          "196:  r = min((size_t)(pd - pc), pn - pd - es);",
          "197:  vecswap(pb, pn - r, r);",
          "198:  if ((size_t)(r = pb - pa) > es)",
          "199:   qsort(a, r / es, es, cmp);",
          "200:  if ((size_t)(r = pd - pc) > es) {",
          "202:   a = pn - r;",
          "203:   n = r / es;",
          "204:   goto loop;",
          "205:  }",
          "207: }",
          "209: #pragma clang diagnostic pop",
          "211: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}