{
  "cve_id": "CVE-2016-2522",
  "cve_desc": "The dissect_ber_constrained_bitstring function in epan/dissectors/packet-ber.c in the ASN.1 BER dissector in Wireshark 2.0.x before 2.0.2 does not verify that a certain length is nonzero, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "9b2f3f7c5c9205381cb72e42b66e97d8ed3abf63",
  "patch_info": {
    "commit_hash": "9b2f3f7c5c9205381cb72e42b66e97d8ed3abf63",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/9b2f3f7c5c9205381cb72e42b66e97d8ed3abf63",
    "files": [
      "epan/dissectors/packet-ber.c"
    ],
    "message": "[BER] Fix Wireshark heap-based out-of-bounds read in dissect_ber_constrained_bitstring\n\nBug: 11828\nChange-Id: I43c493ed261e73e0f3b31892c161dcfc46071054\nReviewed-on: https://code.wireshark.org/review/13292\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
      "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "188: static expert_field ei_ber_invalid_format_generalized_time = EI_INIT;",
      "189: static expert_field ei_ber_invalid_format_utctime = EI_INIT;",
      "190: static expert_field ei_hf_field_not_integer_type = EI_INIT;",
      "192: static dissector_handle_t ber_handle;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "191: static expert_field ei_ber_constr_bitstr = EI_INIT;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3913:         len = tvb_reported_length_remaining(tvb, offset);",
      "3914:         end_offset = offset+len;",
      "3915:     }",
      "3917:     actx->created_item = NULL;",
      "3919:     if (pc) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3917:     if (len == 0) {",
      "3918:         proto_tree_add_expert_format(",
      "3919:             parent_tree, actx->pinfo, &ei_ber_constr_bitstr, tvb, offset, len,",
      "3920:             \"dissect_ber_constrained_bitstring(): frame:%u offset:%d Was passed an illegal length of 0\",",
      "3921:             actx->pinfo->fd->num, offset);",
      "3922:         return offset;",
      "3923:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4479:         { &ei_ber_invalid_format_generalized_time, { \"ber.error.invalid_format.generalized_time\", PI_MALFORMED, PI_WARN, \"BER Error: GeneralizedTime invalid format\", EXPFILL }},",
      "4480:         { &ei_ber_invalid_format_utctime, { \"ber.error.invalid_format.utctime\", PI_MALFORMED, PI_WARN, \"BER Error: malformed UTCTime encoding\", EXPFILL }},",
      "4481:         { &ei_hf_field_not_integer_type, { \"ber.error.hf_field_not_integer_type\", PI_PROTOCOL, PI_ERROR, \"Was passed a HF field that was not integer type\", EXPFILL }},",
      "4482:     };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4489:         { &ei_ber_constr_bitstr,{ \"ber.error.constr_bitstr.len\", PI_MALFORMED, PI_WARN, \"BER Error: malformed Bitstring encoding\", EXPFILL } },",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1942c8a6eeb3741d83e9fcf2e8ea1e3643c21669",
      "candidate_info": {
        "commit_hash": "1942c8a6eeb3741d83e9fcf2e8ea1e3643c21669",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1942c8a6eeb3741d83e9fcf2e8ea1e3643c21669",
        "files": [
          "epan/dissectors/packet-ber.c"
        ],
        "message": "[BER] Fix Wireshark heap-based out-of-bounds read in dissect_ber_constrained_bitstring\n\nBug: 11828\nChange-Id: I43c493ed261e73e0f3b31892c161dcfc46071054\nReviewed-on: https://code.wireshark.org/review/13292\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 9b2f3f7c5c9205381cb72e42b66e97d8ed3abf63)\nReviewed-on: https://code.wireshark.org/review/13298",
        "before_after_code_files": [
          "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
          "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188: static expert_field ei_ber_invalid_format_generalized_time = EI_INIT;",
          "189: static expert_field ei_ber_invalid_format_utctime = EI_INIT;",
          "190: static expert_field ei_hf_field_not_integer_type = EI_INIT;",
          "192: static dissector_handle_t ber_handle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191: static expert_field ei_ber_constr_bitstr = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3933:         len = tvb_reported_length_remaining(tvb, offset);",
          "3934:         end_offset = offset+len;",
          "3935:     }",
          "3937:     actx->created_item = NULL;",
          "3939:     if (pc) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3937:     if (len == 0) {",
          "3938:         proto_tree_add_expert_format(",
          "3939:             parent_tree, actx->pinfo, &ei_ber_constr_bitstr, tvb, offset, len,",
          "3940:             \"dissect_ber_constrained_bitstring(): frame:%u offset:%d Was passed an illegal length of 0\",",
          "3941:             actx->pinfo->fd->num, offset);",
          "3942:         return offset;",
          "3943:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4499:         { &ei_ber_invalid_format_generalized_time, { \"ber.error.invalid_format.generalized_time\", PI_MALFORMED, PI_WARN, \"BER Error: GeneralizedTime invalid format\", EXPFILL }},",
          "4500:         { &ei_ber_invalid_format_utctime, { \"ber.error.invalid_format.utctime\", PI_MALFORMED, PI_WARN, \"BER Error: malformed UTCTime encoding\", EXPFILL }},",
          "4501:         { &ei_hf_field_not_integer_type, { \"ber.error.hf_field_not_integer_type\", PI_PROTOCOL, PI_ERROR, \"Was passed a HF field that was not integer type\", EXPFILL }},",
          "4502:     };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4509:         { &ei_ber_constr_bitstr,{ \"ber.error.constr_bitstr.len\", PI_MALFORMED, PI_WARN, \"BER Error: malformed Bitstring encoding\", EXPFILL } },",
          "",
          "---------------"
        ]
      }
    }
  ]
}