{
  "cve_id": "CVE-2011-2507",
  "cve_desc": "libraries/server_synchronize.lib.php in the Synchronize implementation in phpMyAdmin 3.x before 3.3.10.2 and 3.4.x before 3.4.3.1 does not properly quote regular expressions, which allows remote authenticated users to inject a PCRE e (aka PREG_REPLACE_EVAL) modifier, and consequently execute arbitrary PHP code, by leveraging the ability to modify the SESSION superglobal array.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "69fb0f8e7dc38075427aceaf09bcac697d0590ff",
  "patch_info": {
    "commit_hash": "69fb0f8e7dc38075427aceaf09bcac697d0590ff",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/69fb0f8e7dc38075427aceaf09bcac697d0590ff",
    "files": [
      "ChangeLog",
      "libraries/server_synchronize.lib.php"
    ],
    "message": "Fixed regexp quoting issue in Synchronize code, see PMASA-2011-7",
    "before_after_code_files": [
      "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php": [
      "File: libraries/server_synchronize.lib.php -> libraries/server_synchronize.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "624:         $Create_Query = PMA_DBI_fetch_value(\"SHOW CREATE TABLE \" . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), 0, 1, $src_link);",
      "628:                                             PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]),",
      "629:                                             $Create_Query,",
      "630:                                             $limit = 1",
      "",
      "[Removed Lines]",
      "627:         $Create_Table_Query = preg_replace('/' . PMA_backquote($uncommon_tables[$table_index]) . '/',",
      "",
      "[Added Lines]",
      "627:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac83360796d3667a2b3f4b991fa532a4bcbc80e6",
      "candidate_info": {
        "commit_hash": "ac83360796d3667a2b3f4b991fa532a4bcbc80e6",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ac83360796d3667a2b3f4b991fa532a4bcbc80e6",
        "files": [
          "libraries/List_Database.class.php",
          "libraries/PDF.class.php",
          "libraries/PMA.php",
          "libraries/mult_submits.inc.php",
          "libraries/navigation_header.inc.php",
          "libraries/opendocument.lib.php",
          "libraries/parse_analyze.lib.php",
          "libraries/pmd_common.php",
          "libraries/relation.lib.php",
          "libraries/relation_cleanup.lib.php",
          "libraries/replication.inc.php",
          "libraries/server_common.inc.php",
          "libraries/server_synchronize.lib.php",
          "libraries/session.inc.php",
          "libraries/sql_query_form.lib.php"
        ],
        "message": "Coding style improvements",
        "before_after_code_files": [
          "libraries/List_Database.class.php||libraries/List_Database.class.php",
          "libraries/PDF.class.php||libraries/PDF.class.php",
          "libraries/PMA.php||libraries/PMA.php",
          "libraries/mult_submits.inc.php||libraries/mult_submits.inc.php",
          "libraries/navigation_header.inc.php||libraries/navigation_header.inc.php",
          "libraries/opendocument.lib.php||libraries/opendocument.lib.php",
          "libraries/parse_analyze.lib.php||libraries/parse_analyze.lib.php",
          "libraries/pmd_common.php||libraries/pmd_common.php",
          "libraries/relation.lib.php||libraries/relation.lib.php",
          "libraries/relation_cleanup.lib.php||libraries/relation_cleanup.lib.php",
          "libraries/replication.inc.php||libraries/replication.inc.php",
          "libraries/server_common.inc.php||libraries/server_common.inc.php",
          "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php",
          "libraries/session.inc.php||libraries/session.inc.php",
          "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ],
          "candidate": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/List_Database.class.php||libraries/List_Database.class.php": [
          "File: libraries/List_Database.class.php -> libraries/List_Database.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:             WHERE `Select_priv` = 'Y'",
          "431:             AND `User`",
          "432:             IN ('\" . PMA_sqlAddSlashes($GLOBALS['cfg']['Server']['user']) . \"', '')\";",
          "435:         if ($tmp_mydbs) {",
          "",
          "[Removed Lines]",
          "433:         $tmp_mydbs = PMA_DBI_fetch_result($local_query, null, null,",
          "434:             $GLOBALS['controllink']);",
          "",
          "[Added Lines]",
          "433:         $tmp_mydbs = PMA_DBI_fetch_result(",
          "434:             $local_query, null, null, $GLOBALS['controllink']",
          "435:         );",
          "",
          "---------------"
        ],
        "libraries/PDF.class.php||libraries/PDF.class.php": [
          "File: libraries/PDF.class.php -> libraries/PDF.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     var $footerset;",
          "20:     var $Alias = array();",
          "24:         parent::__construct();",
          "25:         $this->SetAuthor('phpMyAdmin ' . PMA_VERSION);",
          "26:         $this->AliasNbPages();",
          "",
          "[Removed Lines]",
          "22:     public function __construct($orientation='P', $unit='mm', $format='A4', $unicode=true, $encoding='UTF-8', $diskcache=false)",
          "23:     {",
          "",
          "[Added Lines]",
          "22:     public function __construct($orientation = 'P', $unit = 'mm', $format = 'A4',",
          "23:         $unicode = true, $encoding = 'UTF-8', $diskcache = false",
          "24:     ) {",
          "",
          "---------------"
        ],
        "libraries/PMA.php||libraries/PMA.php": [
          "File: libraries/PMA.php -> libraries/PMA.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:     public function __get($param)",
          "52:     {",
          "53:         switch ($param) {",
          "63:         }",
          "65:         return null;",
          "",
          "[Removed Lines]",
          "54:             case 'databases' :",
          "55:                 return $this->getDatabaseList();",
          "56:                 break;",
          "57:             case 'userlink' :",
          "58:                 return $this->userlink;",
          "59:                 break;",
          "60:             case 'controllink' :",
          "61:                 return $this->controllink;",
          "62:                 break;",
          "",
          "[Added Lines]",
          "54:         case 'databases' :",
          "55:             return $this->getDatabaseList();",
          "56:             break;",
          "57:         case 'userlink' :",
          "58:             return $this->userlink;",
          "59:             break;",
          "60:         case 'controllink' :",
          "61:             return $this->controllink;",
          "62:             break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:     public function __set($param, $value)",
          "77:     {",
          "78:         switch ($param) {",
          "85:         }",
          "86:     }",
          "",
          "[Removed Lines]",
          "79:             case 'userlink' :",
          "80:                 $this->userlink = $value;",
          "81:                 break;",
          "82:             case 'controllink' :",
          "83:                 $this->controllink = $value;",
          "84:                 break;",
          "",
          "[Added Lines]",
          "80:         case 'userlink' :",
          "81:             $this->userlink = $value;",
          "82:             break;",
          "83:         case 'controllink' :",
          "84:             $this->controllink = $value;",
          "85:             break;",
          "",
          "---------------"
        ],
        "libraries/mult_submits.inc.php||libraries/mult_submits.inc.php": [
          "File: libraries/mult_submits.inc.php -> libraries/mult_submits.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: if (! empty($submit_mult)",
          "32:     define('PMA_SUBMIT_MULT', 1);",
          "33:     if (isset($selected_db) && !empty($selected_db)) {",
          "",
          "[Removed Lines]",
          "27:  && $submit_mult != __('With selected:')",
          "28:  && (! empty($selected_db)",
          "29:   || ! empty($selected_tbl)",
          "30:   || ! empty($selected_fld)",
          "31:   || ! empty($rows_to_delete))) {",
          "",
          "[Added Lines]",
          "27:     && $submit_mult != __('With selected:')",
          "28:     && (! empty($selected_db) || ! empty($selected_tbl) || ! empty($selected_fld) || ! empty($rows_to_delete))",
          "29: ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:         if ($submit_mult == 'print') {",
          "40:             include './tbl_printview.php';",
          "41:         } else {",
          "100:                 break;",
          "102:                 unset($submit_mult);",
          "104:                 $mult_btn   = __('Yes');",
          "105:                 break;",
          "107:                 unset($submit_mult);",
          "110:                 break;",
          "112:                 unset($submit_mult);",
          "114:                 $mult_btn   = __('Yes');",
          "121:         }",
          "122:     } else {",
          "",
          "[Removed Lines]",
          "42:            $selected = $selected_tbl;",
          "43:            switch ($submit_mult) {",
          "44:                case 'add_prefix_tbl':",
          "45:                case 'replace_prefix_tbl':",
          "46:                case 'copy_tbl_change_prefix':",
          "47:                case 'drop_db':",
          "48:                case 'drop_tbl':",
          "49:                case 'empty_tbl':",
          "50:                    $what = $submit_mult;",
          "51:                    break;",
          "52:                case 'check_tbl':",
          "53:                case 'optimize_tbl':",
          "54:                case 'repair_tbl':",
          "55:                case 'analyze_tbl':",
          "56:                    $query_type = $submit_mult;",
          "57:                    unset($submit_mult);",
          "58:                    $mult_btn   = __('Yes');",
          "59:                    break;",
          "60:                case 'export':",
          "61:                    unset($submit_mult);",
          "62:                    include 'db_export.php';",
          "63:                    exit;",
          "64:                    break;",
          "65:            } // end switch",
          "66:         }",
          "67:     } elseif (isset($selected_fld) && !empty($selected_fld)) {",
          "69:         $selected     = $selected_fld;",
          "70:         switch ($submit_mult) {",
          "71:             case 'drop':",
          "72:                 $what     = 'drop_fld';",
          "73:                 break;",
          "74:             case 'primary':",
          "76:                 PMA_DBI_select_db($db);",
          "77:                 $result      = PMA_DBI_query('SHOW KEYS FROM ' . PMA_backquote($table) . ';');",
          "78:                 $primary     = '';",
          "79:                 while ($row = PMA_DBI_fetch_assoc($result)) {",
          "81:                     if ($row['Key_name'] == 'PRIMARY') {",
          "82:                         $primary .= $row['Column_name'] . ', ';",
          "83:                     }",
          "84:                 } // end while",
          "85:                 PMA_DBI_free_result($result);",
          "86:                 if (empty($primary)) {",
          "88:                     unset($submit_mult);",
          "89:                     $query_type = 'primary_fld';",
          "90:                     $mult_btn   = __('Yes');",
          "91:                 } else {",
          "93:                     $what = 'primary_fld';",
          "94:                 }",
          "95:                 break;",
          "96:             case 'index':",
          "97:                 unset($submit_mult);",
          "98:                 $query_type = 'index_fld';",
          "99:                 $mult_btn   = __('Yes');",
          "101:             case 'unique':",
          "103:                 $query_type = 'unique_fld';",
          "106:             case 'spatial':",
          "108:                 $query_type = 'spatial_fld';",
          "109:                 $mult_btn   = __('Yes');",
          "111:             case 'ftext':",
          "113:                 $query_type = 'fulltext_fld';",
          "115:                 break;",
          "116:             case 'change':",
          "117:                 include './tbl_alter.php';",
          "118:                 break;",
          "119:             case 'browse':",
          "",
          "[Added Lines]",
          "40:             $selected = $selected_tbl;",
          "41:             switch ($submit_mult) {",
          "42:             case 'add_prefix_tbl':",
          "43:             case 'replace_prefix_tbl':",
          "44:             case 'copy_tbl_change_prefix':",
          "45:             case 'drop_db':",
          "46:             case 'drop_tbl':",
          "47:             case 'empty_tbl':",
          "48:                 $what = $submit_mult;",
          "50:             case 'check_tbl':",
          "51:             case 'optimize_tbl':",
          "52:             case 'repair_tbl':",
          "53:             case 'analyze_tbl':",
          "54:                 $query_type = $submit_mult;",
          "58:             case 'export':",
          "60:                 include 'db_export.php';",
          "61:                 exit;",
          "63:             } // end switch",
          "64:         }",
          "65:     } elseif (isset($selected_fld) && !empty($selected_fld)) {",
          "67:         $selected     = $selected_fld;",
          "68:         switch ($submit_mult) {",
          "69:         case 'drop':",
          "70:             $what     = 'drop_fld';",
          "71:             break;",
          "72:         case 'primary':",
          "74:             PMA_DBI_select_db($db);",
          "75:             $result      = PMA_DBI_query('SHOW KEYS FROM ' . PMA_backquote($table) . ';');",
          "76:             $primary     = '';",
          "77:             while ($row = PMA_DBI_fetch_assoc($result)) {",
          "79:                 if ($row['Key_name'] == 'PRIMARY') {",
          "80:                     $primary .= $row['Column_name'] . ', ';",
          "81:                 }",
          "82:             } // end while",
          "83:             PMA_DBI_free_result($result);",
          "84:             if (empty($primary)) {",
          "87:                 $query_type = 'primary_fld';",
          "89:             } else {",
          "91:                 $what = 'primary_fld';",
          "92:             }",
          "93:             break;",
          "94:         case 'index':",
          "95:             unset($submit_mult);",
          "96:             $query_type = 'index_fld';",
          "97:             $mult_btn   = __('Yes');",
          "98:             break;",
          "99:         case 'unique':",
          "100:             unset($submit_mult);",
          "101:             $query_type = 'unique_fld';",
          "102:             $mult_btn   = __('Yes');",
          "103:             break;",
          "104:         case 'spatial':",
          "105:             unset($submit_mult);",
          "106:             $query_type = 'spatial_fld';",
          "107:             $mult_btn   = __('Yes');",
          "108:             break;",
          "109:         case 'ftext':",
          "110:             unset($submit_mult);",
          "111:             $query_type = 'fulltext_fld';",
          "112:             $mult_btn   = __('Yes');",
          "113:             break;",
          "114:         case 'change':",
          "115:             include './tbl_alter.php';",
          "116:             break;",
          "117:         case 'browse':",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "156:     $i = 0;",
          "157:     foreach ($selected AS $idx => $sval) {",
          "158:         switch ($what) {",
          "165:                     . PMA_backquote(htmlspecialchars($sval))",
          "212:                     . PMA_backquote(htmlspecialchars($sval))",
          "213:                     . ',';",
          "218:         } // end switch",
          "219:         $i++;",
          "220:     }",
          "",
          "[Removed Lines]",
          "159:             case 'row_delete':",
          "160:                 $full_query .= htmlspecialchars($sval)",
          "161:                     . ';<br />';",
          "162:                 break;",
          "163:             case 'drop_db':",
          "164:                 $full_query .= 'DROP DATABASE '",
          "166:                     . ';<br />';",
          "167:                 $reload = 1;",
          "168:                 break;",
          "170:             case 'drop_tbl':",
          "171:                 $current = $sval;",
          "172:                 if (!empty($views) && in_array($current, $views)) {",
          "173:                     $full_query_views .= (empty($full_query_views) ? 'DROP VIEW ' : ', ')",
          "174:                         . PMA_backquote(htmlspecialchars($current));",
          "175:                 } else {",
          "176:                     $full_query .= (empty($full_query) ? 'DROP TABLE ' : ', ')",
          "177:                         . PMA_backquote(htmlspecialchars($current));",
          "178:                 }",
          "179:                 break;",
          "181:             case 'empty_tbl':",
          "182:                 $full_query .= 'TRUNCATE ';",
          "183:                 $full_query .= PMA_backquote(htmlspecialchars($sval))",
          "184:                             . ';<br />';",
          "185:                 break;",
          "187:             case 'primary_fld':",
          "188:                 if ($full_query == '') {",
          "189:                     $full_query .= 'ALTER TABLE '",
          "190:                         . PMA_backquote(htmlspecialchars($table))",
          "191:                         . '<br />&nbsp;&nbsp;DROP PRIMARY KEY,'",
          "192:                         . '<br />&nbsp;&nbsp; ADD PRIMARY KEY('",
          "193:                         . '<br />&nbsp;&nbsp;&nbsp;&nbsp; '",
          "194:                         . PMA_backquote(htmlspecialchars($sval))",
          "195:                         . ',';",
          "196:                 } else {",
          "197:                     $full_query .= '<br />&nbsp;&nbsp;&nbsp;&nbsp; '",
          "198:                         . PMA_backquote(htmlspecialchars($sval))",
          "199:                         . ',';",
          "200:                 }",
          "201:                 if ($i == $selected_cnt-1) {",
          "202:                     $full_query = preg_replace('@,$@', ');<br />', $full_query);",
          "203:                 }",
          "204:                 break;",
          "206:             case 'drop_fld':",
          "207:                 if ($full_query == '') {",
          "208:                     $full_query .= 'ALTER TABLE '",
          "209:                         . PMA_backquote(htmlspecialchars($table));",
          "210:                 }",
          "211:                 $full_query .= '<br />&nbsp;&nbsp;DROP '",
          "214:                 if ($i == $selected_cnt - 1) {",
          "215:                     $full_query = preg_replace('@,$@', ';<br />', $full_query);",
          "216:                 }",
          "217:                 break;",
          "",
          "[Added Lines]",
          "157:         case 'row_delete':",
          "158:             $full_query .= htmlspecialchars($sval)",
          "159:                 . ';<br />';",
          "160:             break;",
          "161:         case 'drop_db':",
          "162:             $full_query .= 'DROP DATABASE '",
          "163:                 . PMA_backquote(htmlspecialchars($sval))",
          "164:                 . ';<br />';",
          "165:             $reload = 1;",
          "166:             break;",
          "168:         case 'drop_tbl':",
          "169:             $current = $sval;",
          "170:             if (!empty($views) && in_array($current, $views)) {",
          "171:                 $full_query_views .= (empty($full_query_views) ? 'DROP VIEW ' : ', ')",
          "172:                     . PMA_backquote(htmlspecialchars($current));",
          "173:             } else {",
          "174:                 $full_query .= (empty($full_query) ? 'DROP TABLE ' : ', ')",
          "175:                     . PMA_backquote(htmlspecialchars($current));",
          "176:             }",
          "177:             break;",
          "179:         case 'empty_tbl':",
          "180:             $full_query .= 'TRUNCATE ';",
          "181:             $full_query .= PMA_backquote(htmlspecialchars($sval))",
          "182:                         . ';<br />';",
          "183:             break;",
          "185:         case 'primary_fld':",
          "186:             if ($full_query == '') {",
          "187:                 $full_query .= 'ALTER TABLE '",
          "188:                     . PMA_backquote(htmlspecialchars($table))",
          "189:                     . '<br />&nbsp;&nbsp;DROP PRIMARY KEY,'",
          "190:                     . '<br />&nbsp;&nbsp; ADD PRIMARY KEY('",
          "191:                     . '<br />&nbsp;&nbsp;&nbsp;&nbsp; '",
          "193:                     . ',';",
          "194:             } else {",
          "195:                 $full_query .= '<br />&nbsp;&nbsp;&nbsp;&nbsp; '",
          "198:             }",
          "199:             if ($i == $selected_cnt-1) {",
          "200:                 $full_query = preg_replace('@,$@', ');<br />', $full_query);",
          "201:             }",
          "202:             break;",
          "204:         case 'drop_fld':",
          "205:             if ($full_query == '') {",
          "206:                 $full_query .= 'ALTER TABLE '",
          "207:                     . PMA_backquote(htmlspecialchars($table));",
          "208:             }",
          "209:             $full_query .= '<br />&nbsp;&nbsp;DROP '",
          "210:                 . PMA_backquote(htmlspecialchars($sval))",
          "211:                 . ',';",
          "212:             if ($i == $selected_cnt - 1) {",
          "213:                 $full_query = preg_replace('@,$@', ';<br />', $full_query);",
          "214:             }",
          "215:             break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "245:     if ($what == 'drop_tbl' && !empty($views)) {",
          "246:         foreach ($views as $current) {",
          "247:             $_url_params['views'][] = $current;",
          "249:     }",
          "250:     if ($what == 'row_delete') {",
          "251:         $_url_params['original_sql_query'] = $original_sql_query;",
          "",
          "[Removed Lines]",
          "248:        }",
          "",
          "[Added Lines]",
          "246:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "254:         }",
          "255:     }",
          "256:     ?>",
          "258:     <?php",
          "259:     echo PMA_generate_common_hidden_inputs($_url_params);",
          "262:         <fieldset class = \"input\">",
          "263:                 <legend><?php echo ($what == 'replace_prefix_tbl' ? __('Replace table prefix') : __('Copy table with prefix')) ?>:</legend>",
          "264:                 <table>",
          "",
          "[Removed Lines]",
          "257: <form action=\"<?php echo $action; ?>\" method=\"post\">",
          "260:     ?>",
          "261: <?php if ($what == 'replace_prefix_tbl' || $what == 'copy_tbl_change_prefix') { ?>",
          "",
          "[Added Lines]",
          "255:     <form action=\"<?php echo $action; ?>\" method=\"post\">",
          "258:     if ($what == 'replace_prefix_tbl' || $what == 'copy_tbl_change_prefix') { ?>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "274:                 <button type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('Yes'); ?>\" id=\"buttonYes\"><?php echo __('Submit'); ?></button>",
          "275:         </fieldset>",
          "276:     <?php",
          "278:         <fieldset class = \"input\">",
          "279:                 <legend><?php echo __('Add table prefix') ?>:</legend>",
          "280:                 <table>",
          "",
          "[Removed Lines]",
          "277:         } elseif ($what == 'add_prefix_tbl') { ?>",
          "",
          "[Added Lines]",
          "274:     } elseif ($what == 'add_prefix_tbl') { ?>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "287:                 <button type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('Yes'); ?>\" id=\"buttonYes\"><?php echo __('Submit'); ?></button>",
          "288:         </fieldset>",
          "289:     <?php",
          "304:     <?php",
          "305:     }",
          "306:     include './libraries/footer.inc.php';",
          "308: } elseif ($mult_btn == __('Yes')) {",
          "312:     if ($query_type == 'drop_db' || $query_type == 'drop_tbl' || $query_type == 'drop_fld') {",
          "313:         include_once './libraries/relation_cleanup.lib.php';",
          "314:     }",
          "",
          "[Removed Lines]",
          "290:         } else { ?>",
          "291:     <fieldset class=\"confirmation\">",
          "292:         <legend><?php",
          "293:             if ($what == 'drop_db') {",
          "294:                 echo  __('You are about to DESTROY a complete database!') . '&nbsp;';",
          "295:             }",
          "296:             echo __('Do you really want to execute following query?');",
          "297:         ?>:</legend>",
          "298:         <tt><?php echo $full_query; ?></tt>",
          "299:     </fieldset>",
          "300:     <fieldset class=\"tblFooters\">",
          "301:         <input type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('Yes'); ?>\" id=\"buttonYes\" />",
          "302:         <input type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('No'); ?>\" id=\"buttonNo\" />",
          "303:     </fieldset>",
          "",
          "[Added Lines]",
          "287:     } else { ?>",
          "288:         <fieldset class=\"confirmation\">",
          "289:             <legend><?php",
          "290:                 if ($what == 'drop_db') {",
          "291:                     echo  __('You are about to DESTROY a complete database!') . '&nbsp;';",
          "292:                 }",
          "293:                 echo __('Do you really want to execute following query?');",
          "294:             ?>:</legend>",
          "295:             <tt><?php echo $full_query; ?></tt>",
          "296:         </fieldset>",
          "297:         <fieldset class=\"tblFooters\">",
          "298:             <input type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('Yes'); ?>\" id=\"buttonYes\" />",
          "299:             <input type=\"submit\" name=\"mult_btn\" value=\"<?php echo __('No'); ?>\" id=\"buttonNo\" />",
          "300:         </fieldset>",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "340:     for ($i = 0; $i < $selected_cnt; $i++) {",
          "341:         switch ($query_type) {",
          "436:         case 'add_prefix_tbl':",
          "456:         } // end switch",
          "",
          "[Removed Lines]",
          "342:             case 'row_delete':",
          "343:                 $a_query = $selected[$i];",
          "344:                 $run_parts = true;",
          "345:                 break;",
          "347:             case 'drop_db':",
          "348:                 PMA_relationsCleanupDatabase($selected[$i]);",
          "349:                 $a_query   = 'DROP DATABASE '",
          "350:                            . PMA_backquote($selected[$i]);",
          "351:                 $reload    = 1;",
          "352:                 $run_parts = true;",
          "353:                 $rebuild_database_list = true;",
          "354:                 break;",
          "356:             case 'drop_tbl':",
          "357:                 PMA_relationsCleanupTable($db, $selected[$i]);",
          "358:                 $current = $selected[$i];",
          "359:                 if (!empty($views) && in_array($current, $views)) {",
          "360:                     $sql_query_views .= (empty($sql_query_views) ? 'DROP VIEW ' : ', ')",
          "361:                               . PMA_backquote($current);",
          "362:                 } else {",
          "363:                     $sql_query .= (empty($sql_query) ? 'DROP TABLE ' : ', ')",
          "364:                                . PMA_backquote($current);",
          "365:                 }",
          "366:                 $reload    = 1;",
          "367:                 break;",
          "369:             case 'check_tbl':",
          "370:                 $sql_query .= (empty($sql_query) ? 'CHECK TABLE ' : ', ')",
          "371:                            . PMA_backquote($selected[$i]);",
          "372:                 $use_sql    = true;",
          "373:                 break;",
          "375:             case 'optimize_tbl':",
          "376:                 $sql_query .= (empty($sql_query) ? 'OPTIMIZE TABLE ' : ', ')",
          "377:                            . PMA_backquote($selected[$i]);",
          "378:                 $use_sql    = true;",
          "379:                 break;",
          "381:             case 'analyze_tbl':",
          "382:                 $sql_query .= (empty($sql_query) ? 'ANALYZE TABLE ' : ', ')",
          "383:                            . PMA_backquote($selected[$i]);",
          "384:                 $use_sql    = true;",
          "385:                 break;",
          "387:             case 'repair_tbl':",
          "388:                 $sql_query .= (empty($sql_query) ? 'REPAIR TABLE ' : ', ')",
          "389:                            . PMA_backquote($selected[$i]);",
          "390:                 $use_sql    = true;",
          "391:                 break;",
          "393:             case 'empty_tbl':",
          "394:                 $a_query = 'TRUNCATE ';",
          "395:                 $a_query .= PMA_backquote($selected[$i]);",
          "396:                 $run_parts = true;",
          "397:                 break;",
          "399:             case 'drop_fld':",
          "400:                 PMA_relationsCleanupColumn($db, $table, $selected[$i]);",
          "401:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) : ',')",
          "402:                            . ' DROP ' . PMA_backquote($selected[$i])",
          "403:                            . (($i == $selected_cnt-1) ? ';' : '');",
          "404:                 break;",
          "406:             case 'primary_fld':",
          "407:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . (empty($primary) ? '' : ' DROP PRIMARY KEY,') . ' ADD PRIMARY KEY( ' : ', ')",
          "408:                            . PMA_backquote($selected[$i])",
          "409:                            . (($i == $selected_cnt-1) ? ');' : '');",
          "410:                 break;",
          "412:             case 'index_fld':",
          "413:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD INDEX( ' : ', ')",
          "414:                            . PMA_backquote($selected[$i])",
          "415:                            . (($i == $selected_cnt-1) ? ');' : '');",
          "416:                 break;",
          "418:             case 'unique_fld':",
          "419:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD UNIQUE( ' : ', ')",
          "420:                            . PMA_backquote($selected[$i])",
          "421:                            . (($i == $selected_cnt-1) ? ');' : '');",
          "422:                 break;",
          "424:             case 'spatial_fld':",
          "425:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD SPATIAL( ' : ', ')",
          "426:                            . PMA_backquote($selected[$i])",
          "427:                            . (($i == $selected_cnt-1) ? ');' : '');",
          "428:                 break;",
          "430:             case 'fulltext_fld':",
          "431:                 $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD FULLTEXT( ' : ', ')",
          "432:                            . PMA_backquote($selected[$i])",
          "433:                            . (($i == $selected_cnt-1) ? ');' : '');",
          "434:                 break;",
          "437:                 $newtablename = $add_prefix . $selected[$i];",
          "438:                 $a_query = 'ALTER TABLE ' . PMA_backquote($selected[$i]) . ' RENAME ' . PMA_backquote($newtablename) ; // ADD PREFIX TO TABLE NAME",
          "439:                 $run_parts = true;",
          "440:                 break;",
          "442:             case 'replace_prefix_tbl':",
          "443:                 $current = $selected[$i];",
          "444:                 $newtablename = preg_replace(\"/^\" . $from_prefix . \"/\", $to_prefix, $current);",
          "445:                 $a_query = 'ALTER TABLE ' . PMA_backquote($selected[$i]) . ' RENAME ' . PMA_backquote($newtablename) ; // CHANGE PREFIX PATTERN",
          "446:                 $run_parts = true;",
          "447:                 break;",
          "449:             case 'copy_tbl_change_prefix':",
          "450:                 $current = $selected[$i];",
          "451:                 $newtablename = preg_replace(\"/^\" . $from_prefix . \"/\", $to_prefix, $current);",
          "452:                 $a_query = 'CREATE TABLE ' . PMA_backquote($newtablename) . ' SELECT * FROM ' . PMA_backquote($selected[$i]) ; // COPY TABLE AND CHANGE PREFIX PATTERN",
          "453:                 $run_parts = true;",
          "454:                 break;",
          "",
          "[Added Lines]",
          "339:         case 'row_delete':",
          "340:             $a_query = $selected[$i];",
          "341:             $run_parts = true;",
          "342:             break;",
          "344:         case 'drop_db':",
          "345:             PMA_relationsCleanupDatabase($selected[$i]);",
          "346:             $a_query   = 'DROP DATABASE '",
          "347:                        . PMA_backquote($selected[$i]);",
          "348:             $reload    = 1;",
          "349:             $run_parts = true;",
          "350:             $rebuild_database_list = true;",
          "351:             break;",
          "353:         case 'drop_tbl':",
          "354:             PMA_relationsCleanupTable($db, $selected[$i]);",
          "355:             $current = $selected[$i];",
          "356:             if (!empty($views) && in_array($current, $views)) {",
          "357:                 $sql_query_views .= (empty($sql_query_views) ? 'DROP VIEW ' : ', ')",
          "358:                           . PMA_backquote($current);",
          "359:             } else {",
          "360:                 $sql_query .= (empty($sql_query) ? 'DROP TABLE ' : ', ')",
          "361:                            . PMA_backquote($current);",
          "362:             }",
          "363:             $reload    = 1;",
          "364:             break;",
          "366:         case 'check_tbl':",
          "367:             $sql_query .= (empty($sql_query) ? 'CHECK TABLE ' : ', ')",
          "368:                        . PMA_backquote($selected[$i]);",
          "369:             $use_sql    = true;",
          "370:             break;",
          "372:         case 'optimize_tbl':",
          "373:             $sql_query .= (empty($sql_query) ? 'OPTIMIZE TABLE ' : ', ')",
          "374:                        . PMA_backquote($selected[$i]);",
          "375:             $use_sql    = true;",
          "376:             break;",
          "378:         case 'analyze_tbl':",
          "379:             $sql_query .= (empty($sql_query) ? 'ANALYZE TABLE ' : ', ')",
          "380:                        . PMA_backquote($selected[$i]);",
          "381:             $use_sql    = true;",
          "382:             break;",
          "384:         case 'repair_tbl':",
          "385:             $sql_query .= (empty($sql_query) ? 'REPAIR TABLE ' : ', ')",
          "386:                        . PMA_backquote($selected[$i]);",
          "387:             $use_sql    = true;",
          "388:             break;",
          "390:         case 'empty_tbl':",
          "391:             $a_query = 'TRUNCATE ';",
          "392:             $a_query .= PMA_backquote($selected[$i]);",
          "393:             $run_parts = true;",
          "394:             break;",
          "396:         case 'drop_fld':",
          "397:             PMA_relationsCleanupColumn($db, $table, $selected[$i]);",
          "398:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) : ',')",
          "399:                        . ' DROP ' . PMA_backquote($selected[$i])",
          "400:                        . (($i == $selected_cnt-1) ? ';' : '');",
          "401:             break;",
          "403:         case 'primary_fld':",
          "404:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . (empty($primary) ? '' : ' DROP PRIMARY KEY,') . ' ADD PRIMARY KEY( ' : ', ')",
          "405:                        . PMA_backquote($selected[$i])",
          "406:                        . (($i == $selected_cnt-1) ? ');' : '');",
          "407:             break;",
          "409:         case 'index_fld':",
          "410:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD INDEX( ' : ', ')",
          "411:                        . PMA_backquote($selected[$i])",
          "412:                        . (($i == $selected_cnt-1) ? ');' : '');",
          "413:             break;",
          "415:         case 'unique_fld':",
          "416:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD UNIQUE( ' : ', ')",
          "417:                        . PMA_backquote($selected[$i])",
          "418:                        . (($i == $selected_cnt-1) ? ');' : '');",
          "419:             break;",
          "421:         case 'spatial_fld':",
          "422:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD SPATIAL( ' : ', ')",
          "423:                        . PMA_backquote($selected[$i])",
          "424:                        . (($i == $selected_cnt-1) ? ');' : '');",
          "425:             break;",
          "427:         case 'fulltext_fld':",
          "428:             $sql_query .= (empty($sql_query) ? 'ALTER TABLE ' . PMA_backquote($table) . ' ADD FULLTEXT( ' : ', ')",
          "429:                        . PMA_backquote($selected[$i])",
          "430:                        . (($i == $selected_cnt-1) ? ');' : '');",
          "431:             break;",
          "434:             $newtablename = $add_prefix . $selected[$i];",
          "435:             $a_query = 'ALTER TABLE ' . PMA_backquote($selected[$i]) . ' RENAME ' . PMA_backquote($newtablename); // ADD PREFIX TO TABLE NAME",
          "436:             $run_parts = true;",
          "437:             break;",
          "439:         case 'replace_prefix_tbl':",
          "440:             $current = $selected[$i];",
          "441:             $newtablename = preg_replace(\"/^\" . $from_prefix . \"/\", $to_prefix, $current);",
          "442:             $a_query = 'ALTER TABLE ' . PMA_backquote($selected[$i]) . ' RENAME ' . PMA_backquote($newtablename); // CHANGE PREFIX PATTERN",
          "443:             $run_parts = true;",
          "444:             break;",
          "446:         case 'copy_tbl_change_prefix':",
          "447:             $current = $selected[$i];",
          "448:             $newtablename = preg_replace(\"/^\" . $from_prefix . \"/\", $to_prefix, $current);",
          "449:             $a_query = 'CREATE TABLE ' . PMA_backquote($newtablename) . ' SELECT * FROM ' . PMA_backquote($selected[$i]); // COPY TABLE AND CHANGE PREFIX PATTERN",
          "450:             $run_parts = true;",
          "451:             break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "469:     if ($query_type == 'drop_tbl') {",
          "470:         if (!empty($sql_query)) {",
          "474:             unset($sql_query_views);",
          "475:         }",
          "476:     }",
          "",
          "[Removed Lines]",
          "471:         $sql_query .= ';';",
          "472:     } elseif (!empty($sql_query_views)) {",
          "473:         $sql_query = $sql_query_views . ';';",
          "",
          "[Added Lines]",
          "468:             $sql_query .= ';';",
          "469:         } elseif (!empty($sql_query_views)) {",
          "470:             $sql_query = $sql_query_views . ';';",
          "",
          "---------------"
        ],
        "libraries/navigation_header.inc.php||libraries/navigation_header.inc.php": [
          "File: libraries/navigation_header.inc.php -> libraries/navigation_header.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     if ($GLOBALS['cfg']['LeftLogoLink']) {",
          "34:         echo '<a href=\"' . htmlspecialchars($GLOBALS['cfg']['LeftLogoLink']);",
          "35:         switch ($GLOBALS['cfg']['LeftLogoLinkWindow']) {",
          "37:                 echo '\" target=\"_blank\"';",
          "46:         }",
          "47:         echo '>' . $logo . '</a>' . \"\\n\";",
          "48:     } else {",
          "",
          "[Removed Lines]",
          "36:             case 'new':",
          "38:                 break;",
          "39:             case 'main':",
          "41:                 if (substr(strtolower($GLOBALS['cfg']['LeftLogoLink']), 0, 4) !== '://') {",
          "42:                     echo '?' . $query_url . '\" target=\"frame_content\"';",
          "43:                 } else {",
          "44:                     echo '\" target=\"_blank\"';",
          "45:                 }",
          "",
          "[Added Lines]",
          "36:         case 'new':",
          "37:             echo '\" target=\"_blank\"';",
          "38:             break;",
          "39:         case 'main':",
          "41:             if (substr(strtolower($GLOBALS['cfg']['LeftLogoLink']), 0, 4) !== '://') {",
          "42:                 echo '?' . $query_url . '\" target=\"frame_content\"';",
          "43:             } else {",
          "45:             }",
          "",
          "---------------"
        ],
        "libraries/opendocument.lib.php||libraries/opendocument.lib.php": [
          "File: libraries/opendocument.lib.php -> libraries/opendocument.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     $zipfile = new zipfile();",
          "36:     $zipfile -> addFile($mime, 'mimetype');",
          "37:     $zipfile -> addFile($data, 'content.xml');",
          "39:         . '<office:document-meta '",
          "40:             . 'xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" '",
          "41:             . 'xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" '",
          "",
          "[Removed Lines]",
          "38:     $zipfile -> addFile('<?xml version=\"1.0\" encoding=\"UTF-8\"?'. '>'",
          "",
          "[Added Lines]",
          "38:     $zipfile -> addFile(",
          "39:         '<?xml version=\"1.0\" encoding=\"UTF-8\"?'. '>'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:                 . '<meta:creation-date>' . strftime('%Y-%m-%dT%H:%M:%S') . '</meta:creation-date>'",
          "47:             . '</office:meta>'",
          "48:         . '</office:document-meta>',",
          "51:         . '<office:document-styles '. $GLOBALS['OpenDocumentNS'] . 'office:version=\"1.0\">'",
          "52:             . '<office:font-face-decls>'",
          "53:                 . '<style:font-face style:name=\"Arial Unicode MS\" svg:font-family=\"\\'Arial Unicode MS\\'\" style:font-pitch=\"variable\"/>'",
          "",
          "[Removed Lines]",
          "49:         'meta.xml');",
          "50:     $zipfile -> addFile('<?xml version=\"1.0\" encoding=\"UTF-8\"?' . '>'",
          "",
          "[Added Lines]",
          "50:         'meta.xml'",
          "51:     );",
          "52:     $zipfile -> addFile(",
          "53:         '<?xml version=\"1.0\" encoding=\"UTF-8\"?' . '>'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:                 . '<style:master-page style:name=\"Standard\" style:page-layout-name=\"pm1\"/>'",
          "91:             . '</office:master-styles>'",
          "92:         . '</office:document-styles>',",
          "95:         . '<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\">'",
          "96:         . '<manifest:file-entry manifest:media-type=\"' . $mime . '\" manifest:full-path=\"/\"/>'",
          "97:         . '<manifest:file-entry manifest:media-type=\"text/xml\" manifest:full-path=\"content.xml\"/>'",
          "98:         . '<manifest:file-entry manifest:media-type=\"text/xml\" manifest:full-path=\"meta.xml\"/>'",
          "99:         . '<manifest:file-entry manifest:media-type=\"text/xml\" manifest:full-path=\"styles.xml\"/>'",
          "100:         . '</manifest:manifest>',",
          "102:     return $zipfile -> file();",
          "103: }",
          "104: ?>",
          "",
          "[Removed Lines]",
          "93:         'styles.xml');",
          "94:     $zipfile -> addFile('<?xml version=\"1.0\" encoding=\"UTF-8\"?' . '>'",
          "101:         'META-INF/manifest.xml');",
          "",
          "[Added Lines]",
          "96:         'styles.xml'",
          "97:     );",
          "98:     $zipfile -> addFile(",
          "99:         '<?xml version=\"1.0\" encoding=\"UTF-8\"?' . '>'",
          "106:         'META-INF/manifest.xml'",
          "107:     );",
          "",
          "---------------"
        ],
        "libraries/parse_analyze.lib.php||libraries/parse_analyze.lib.php": [
          "File: libraries/parse_analyze.lib.php -> libraries/parse_analyze.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:         $table = $analyzed_sql[0]['table_ref'][0]['table_true_name'];",
          "47:     }",
          "48:     if (isset($analyzed_sql[0]['table_ref'][0]['db'])",
          "50:         $db    = $analyzed_sql[0]['table_ref'][0]['db'];",
          "51:     } else {",
          "52:         $db = $prev_db;",
          "",
          "[Removed Lines]",
          "49:       && strlen($analyzed_sql[0]['table_ref'][0]['db'])) {",
          "",
          "[Added Lines]",
          "49:         && strlen($analyzed_sql[0]['table_ref'][0]['db'])",
          "50:     ) {",
          "",
          "---------------"
        ],
        "libraries/pmd_common.php||libraries/pmd_common.php": [
          "File: libraries/pmd_common.php -> libraries/pmd_common.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:         $js_var .= \"['\" . $con['C_NAME'][$i] . \"']\";",
          "140:         $script_contr .= $js_var . \" = new Array();\\n\";",
          "141:         if (in_array($con['DTN'][$i], $GLOBALS['PMD_URL'][\"TABLE_NAME\"])",
          "143:             $js_var .= \"['\" . $con['DTN'][$i] . \"']\";",
          "144:             $script_contr .= $js_var . \" = new Array();\\n\";",
          "145:             $m_col = array();//}",
          "",
          "[Removed Lines]",
          "142:          && in_array($con['STN'][$i], $GLOBALS['PMD_URL'][\"TABLE_NAME\"])) {",
          "",
          "[Added Lines]",
          "142:             && in_array($con['STN'][$i], $GLOBALS['PMD_URL'][\"TABLE_NAME\"])",
          "143:         ) {",
          "",
          "---------------"
        ],
        "libraries/relation.lib.php||libraries/relation.lib.php": [
          "File: libraries/relation.lib.php -> libraries/relation.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "872: function PMA_foreignDropdown($disp_row, $foreign_field, $foreign_display, $data,",
          "875:     if (null === $max) {",
          "876:         $max = $GLOBALS['cfg']['ForeignKeyMaxLimit'];",
          "877:     }",
          "",
          "[Removed Lines]",
          "873:     $max = null)",
          "874: {",
          "",
          "[Added Lines]",
          "873:     $max = null",
          "874: ) {",
          "",
          "---------------"
        ],
        "libraries/relation_cleanup.lib.php||libraries/relation_cleanup.lib.php": [
          "File: libraries/relation_cleanup.lib.php -> libraries/relation_cleanup.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:         $remove_query = 'DELETE FROM ' . PMA_backquote($cfgRelation['db']) . '.' . PMA_backquote($cfgRelation['designer_coords'])",
          "144:                     . ' WHERE db_name  = \\'' . PMA_sqlAddSlashes($db) . '\\'';",
          "145:         PMA_query_as_controluser($remove_query);",
          "148:     if ($cfgRelation['relwork']) {",
          "149:         $remove_query = 'DELETE FROM ' . PMA_backquote($cfgRelation['db']) . '.' . PMA_backquote($cfgRelation['relation'])",
          "",
          "[Removed Lines]",
          "146:      }",
          "",
          "[Added Lines]",
          "146:     }",
          "",
          "---------------"
        ],
        "libraries/replication.inc.php||libraries/replication.inc.php": [
          "File: libraries/replication.inc.php -> libraries/replication.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     if ($stop) {",
          "188:         PMA_replication_slave_control(\"STOP\", null, $link);",
          "189:     }",
          "192:         'MASTER_HOST=\\'' . $host . '\\',' .",
          "193:         'MASTER_PORT=' . ($port * 1) . ',' .",
          "194:         'MASTER_USER=\\'' . $user . '\\',' .",
          "195:         'MASTER_PASSWORD=\\'' . $password . '\\',' .",
          "196:         'MASTER_LOG_FILE=\\'' . $pos[\"File\"] . '\\',' .",
          "199:     if ($start) {",
          "200:         PMA_replication_slave_control(\"START\", null, $link);",
          "",
          "[Removed Lines]",
          "185: function PMA_replication_slave_change_master($user, $password, $host, $port, $pos, $stop = true, $start = true, $link = null)",
          "186: {",
          "191:     $out = PMA_DBI_try_query('CHANGE MASTER TO ' .",
          "197:         'MASTER_LOG_POS=' . $pos[\"Position\"] . ';', $link);",
          "",
          "[Added Lines]",
          "190: function PMA_replication_slave_change_master($user, $password, $host, $port,",
          "191:     $pos, $stop = true, $start = true, $link = null",
          "192: ) {",
          "197:     $out = PMA_DBI_try_query(",
          "198:         'CHANGE MASTER TO ' .",
          "204:         'MASTER_LOG_POS=' . $pos[\"Position\"] . ';', $link",
          "205:     );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253: function PMA_replication_master_replicated_dbs($link = null)",
          "254: {",
          "257:     $do_db     = array();",
          "258:     $ignore_db = array();",
          "",
          "[Removed Lines]",
          "255:     $data = PMA_DBI_fetch_result('SHOW MASTER STATUS', null, null, $link); // let's find out, which databases are replicated",
          "",
          "[Added Lines]",
          "265:     $data = PMA_DBI_fetch_result('SHOW MASTER STATUS', null, null, $link);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "340:     $matching_tables_num = sizeof($matching_tables);",
          "342:     for ($i = 0; $i < sizeof($matching_tables); $i++) {",
          "345:     }",
          "346:     for ($j = 0; $j < sizeof($source_tables_uncommon); $j++) {",
          "347:         PMA_dataDiffInUncommonTables($source_tables_uncommon, $src_db, $src_link, $j, $row_count);",
          "",
          "[Removed Lines]",
          "343:         PMA_dataDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $matching_tables_fields, $update_array, $insert_array,",
          "344:             $delete_array, $fields_num, $i, $matching_tables_keys);",
          "",
          "[Added Lines]",
          "356:         PMA_dataDiffInTables(",
          "357:             $src_db, $trg_db, $src_link, $trg_link, $matching_tables,",
          "358:             $matching_tables_fields, $update_array, $insert_array,",
          "359:             $delete_array, $fields_num, $i, $matching_tables_keys",
          "360:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "365:     $criteria = array('Field', 'Type', 'Null', 'Collation', 'Key', 'Default', 'Comment');",
          "367:     for ($counter = 0; $counter < $matching_tables_num; $counter++) {",
          "373:     }",
          "378:     for ($q = 0; $q < sizeof($source_tables_uncommon); $q++) {",
          "379:         if (isset($source_tables_uncommon[$q])) {",
          "381:         }",
          "382:         if (isset($row_count[$q]) && $data) {",
          "384:         }",
          "385:     }",
          "386: }",
          "",
          "[Removed Lines]",
          "368:         PMA_structureDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_columns,",
          "369:             $target_columns, $alter_str_array, $add_column_array, $uncommon_columns, $criteria, $target_tables_keys, $counter);",
          "371:         PMA_indexesDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_indexes, $target_indexes,",
          "372:             $add_indexes_array, $alter_indexes_array, $remove_indexes_array, $counter);",
          "380:             PMA_createTargetTables($src_db, $trg_db, $src_link, $trg_link, $source_tables_uncommon, $q, $uncommon_tables_fields, false);",
          "383:             PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $source_tables_uncommon, $q, $uncommon_tables_fields, false);",
          "",
          "[Added Lines]",
          "384:         PMA_structureDiffInTables(",
          "385:             $src_db, $trg_db, $src_link, $trg_link, $matching_tables,",
          "386:             $source_columns, $target_columns, $alter_str_array, $add_column_array,",
          "387:             $uncommon_columns, $criteria, $target_tables_keys, $counter",
          "388:         );",
          "390:         PMA_indexesDiffInTables(",
          "391:             $src_db, $trg_db, $src_link, $trg_link, $matching_tables,",
          "392:             $source_indexes, $target_indexes, $add_indexes_array,",
          "393:             $alter_indexes_array, $remove_indexes_array, $counter",
          "394:         );",
          "403:             PMA_createTargetTables(",
          "404:                 $src_db, $trg_db, $src_link, $trg_link, $source_tables_uncommon,",
          "405:                 $q, $uncommon_tables_fields, false",
          "406:             );",
          "409:             PMA_populateTargetTables(",
          "410:                 $src_db, $trg_db, $src_link, $trg_link, $source_tables_uncommon,",
          "411:                 $q, $uncommon_tables_fields, false",
          "412:             );",
          "",
          "---------------"
        ],
        "libraries/server_common.inc.php||libraries/server_common.inc.php": [
          "File: libraries/server_common.inc.php -> libraries/server_common.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: $is_superuser = PMA_isSuperuser();",
          "47:     PMA_DBI_select_db('mysql', $userlink);",
          "48: }",
          "",
          "[Removed Lines]",
          "46: if ($is_superuser && !PMA_DRIZZLE) {",
          "",
          "[Added Lines]",
          "46: if ($is_superuser && ! PMA_DRIZZLE) {",
          "",
          "---------------"
        ],
        "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php": [
          "File: libraries/server_synchronize.lib.php -> libraries/server_synchronize.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     if (isset($matching_table[$matching_table_index])) {",
          "93:         $fld = array();",
          "95:         $is_key = array();",
          "96:         if (isset($fld_results)) {",
          "97:             foreach ($fld_results as $each_field) {",
          "",
          "[Removed Lines]",
          "89: function PMA_dataDiffInTables($src_db, $trg_db, $src_link, $trg_link, &$matching_table, &$matching_tables_fields,",
          "90:     &$update_array, &$insert_array, &$delete_array, &$fields_num, $matching_table_index, &$matching_tables_keys)",
          "91: {",
          "94:         $fld_results = PMA_DBI_get_columns($src_db, $matching_table[$matching_table_index], null, true, $src_link);",
          "",
          "[Added Lines]",
          "90: function PMA_dataDiffInTables($src_db, $trg_db, $src_link, $trg_link,",
          "91:     &$matching_table, &$matching_tables_fields, &$update_array, &$insert_array,",
          "92:     &$delete_array, &$fields_num, $matching_table_index, &$matching_tables_keys",
          "93: ) {",
          "96:         $fld_results = PMA_DBI_get_columns(",
          "97:             $src_db, $matching_table[$matching_table_index], null, true, $src_link",
          "98:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:         $fields_num[$matching_table_index] = sizeof($fld);",
          "107:         $matching_tables_keys[$matching_table_index] = $is_key;",
          "110:         $source_size = sizeof($source_result_set);",
          "113:         $all_keys_match = true;",
          "114:         $trg_keys = array();",
          "",
          "[Removed Lines]",
          "109:         $source_result_set = PMA_get_column_values($src_db, $matching_table[$matching_table_index], $is_key, $src_link);",
          "112:         $trg_fld_results = PMA_DBI_get_columns($trg_db, $matching_table[$matching_table_index], null, true, $trg_link);",
          "",
          "[Added Lines]",
          "113:         $source_result_set = PMA_get_column_values(",
          "114:             $src_db, $matching_table[$matching_table_index], $is_key, $src_link",
          "115:         );",
          "118:         $trg_fld_results = PMA_DBI_get_columns(",
          "119:             $trg_db, $matching_table[$matching_table_index], null, true, $trg_link",
          "120:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:                     $trg_select_query .= PMA_backquote($is_key[0]). \"='\" . $source_result_set[$j] . \"'\";",
          "141:                 } elseif (sizeof($is_key) > 1) {",
          "142:                     for ($k=0; $k < sizeof($is_key); $k++) {",
          "144:                         if ($k < (sizeof($is_key)-1)) {",
          "145:                             $trg_select_query .= \" AND \";",
          "146:                         }",
          "",
          "[Removed Lines]",
          "143:                         $trg_select_query .= PMA_backquote($is_key[$k]) . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "",
          "[Added Lines]",
          "151:                         $trg_select_query .= PMA_backquote($is_key[$k])",
          "152:                             . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "155:                         . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "157:                     if (sizeof($is_key) == 1) {",
          "159:                     } elseif (sizeof($is_key) > 1) {",
          "160:                         for ($k=0; $k< sizeof($is_key); $k++) {",
          "162:                             if ($k < (sizeof($is_key) - 1)) {",
          "163:                                 $src_select_query .= \" AND \";",
          "164:                             }",
          "",
          "[Removed Lines]",
          "158:                         $src_select_query .= PMA_backquote($is_key[0]) . \"='\" . $source_result_set[$j] . \"'\";",
          "161:                             $src_select_query .= PMA_backquote($is_key[$k]) . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "",
          "[Added Lines]",
          "167:                         $src_select_query .= PMA_backquote($is_key[0])",
          "168:                             . \"='\" . $source_result_set[$j] . \"'\";",
          "171:                             $src_select_query .= PMA_backquote($is_key[$k])",
          "172:                                 . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "305:     if (isset($trg_keys[$matching_table_index])) {",
          "306:         $target_key_values = PMA_get_column_values($trg_db, $matching_table[$matching_table_index], $trg_keys[$matching_table_index], $trg_link);",
          "307:     }",
          "",
          "[Removed Lines]",
          "303: function PMA_findDeleteRowsFromTargetTables(&$delete_array, $matching_table, $matching_table_index, $trg_keys, $src_keys, $trg_db, $trg_link, $src_db, $src_link)",
          "304: {",
          "",
          "[Added Lines]",
          "314: function PMA_findDeleteRowsFromTargetTables(&$delete_array, $matching_table,",
          "315:     $matching_table_index, $trg_keys, $src_keys, $trg_db, $trg_link, $src_db, $src_link",
          "316: ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "395: {",
          "396:     if (isset($update_array[$matching_table_index])) {",
          "397:         if (sizeof($update_array[$matching_table_index])) {",
          "",
          "[Removed Lines]",
          "394: function PMA_updateTargetTables($table, $update_array, $src_db, $trg_db, $trg_link, $matching_table_index, $matching_table_keys, $display)",
          "",
          "[Added Lines]",
          "407: function PMA_updateTargetTables($table, $update_array, $src_db, $trg_db,",
          "408:     $trg_link, $matching_table_index, $matching_table_keys, $display",
          "409: )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "472:     if (isset($array_insert[$matching_table_index])) {",
          "473:         if (sizeof($array_insert[$matching_table_index])) {",
          "474:             for ($insert_row = 0; $insert_row< sizeof($array_insert[$matching_table_index]); $insert_row++) {",
          "",
          "[Removed Lines]",
          "468: function PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link, $trg_link, $table_fields, &$array_insert, $matching_table_index,",
          "469:  $matching_tables_keys, $source_columns, &$add_column_array, $criteria, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields, $uncommon_cols,",
          "470:  &$alter_str_array, &$source_indexes, &$target_indexes, &$add_indexes_array, &$alter_indexes_array, &$delete_array, &$update_array, $display)",
          "471: {",
          "",
          "[Added Lines]",
          "483: function PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link,",
          "484:     $trg_link, $table_fields, &$array_insert, $matching_table_index,",
          "485:     $matching_tables_keys, $source_columns, &$add_column_array, $criteria,",
          "486:     $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields, $uncommon_cols,",
          "487:     &$alter_str_array, &$source_indexes, &$target_indexes, &$add_indexes_array,",
          "488:     &$alter_indexes_array, &$delete_array, &$update_array, $display",
          "489: ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "605:     if (isset($uncommon_tables[$table_index])) {",
          "606:         $fields_result = PMA_DBI_get_columns($src_db, $uncommon_tables[$table_index], null, true, $src_link);",
          "607:         $fields = array();",
          "",
          "[Removed Lines]",
          "603: function PMA_createTargetTables($src_db, $trg_db, $src_link, $trg_link, &$uncommon_tables, $table_index, &$uncommon_tables_fields, $display)",
          "604: {",
          "",
          "[Added Lines]",
          "621: function PMA_createTargetTables($src_db, $trg_db, $src_link, $trg_link,",
          "622:     &$uncommon_tables, $table_index, &$uncommon_tables_fields, $display",
          "623: ) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "614:         $Create_Query = PMA_DBI_fetch_value(\"SHOW CREATE TABLE \" . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), 0, 1, $src_link);",
          "621:         );",
          "623:         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "",
          "[Removed Lines]",
          "617:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "618:                                             PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]),",
          "619:                                             $Create_Query,",
          "620:                                             $limit = 1",
          "",
          "[Added Lines]",
          "636:         $Create_Table_Query = preg_replace(",
          "637:             '/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "638:             PMA_backquote($trg_db) . '.' . PMA_backquote($uncommon_tables[$table_index]),",
          "639:             $Create_Query,",
          "640:             $limit = 1",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "659:     $display = false; // todo: maybe display some of the queries if they are not too numerous",
          "660:     $unbuffered_result = PMA_DBI_try_query('SELECT * FROM ' . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), $src_link, PMA_DBI_QUERY_UNBUFFERED);",
          "661:     if (false !== $unbuffered_result) {",
          "",
          "[Removed Lines]",
          "657: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $uncommon_tables, $table_index, $uncommon_tables_fields, $display)",
          "658: {",
          "",
          "[Added Lines]",
          "677: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link,",
          "678:     $uncommon_tables, $table_index, $uncommon_tables_fields, $display",
          "679: ) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "696:     for ($i = 0; $i < sizeof($delete_array[$table_index]); $i++) {",
          "697:         if (isset($target_tables_keys[$table_index])) {",
          "698:             $delete_query = 'DELETE FROM ' . PMA_backquote($trg_db) . '.' .PMA_backquote($matching_tables[$table_index]) . ' WHERE ';",
          "",
          "[Removed Lines]",
          "694: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index, $target_tables_keys, $delete_array, $display)",
          "695: {",
          "",
          "[Added Lines]",
          "715: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index,",
          "716:     $target_tables_keys, $delete_array, $display",
          "717: ) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "762:     $source_columns[$matching_table_index] = PMA_DBI_get_columns_full($src_db, $matching_tables[$matching_table_index], null, $src_link);",
          "763:     $target_columns[$matching_table_index] = PMA_DBI_get_columns_full($trg_db, $matching_tables[$matching_table_index], null, $trg_link);",
          "",
          "[Removed Lines]",
          "758: function PMA_structureDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_columns, &$target_columns, &$alter_str_array,",
          "759:  &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys, $matching_table_index)",
          "760: {",
          "",
          "[Added Lines]",
          "780: function PMA_structureDiffInTables($src_db, $trg_db, $src_link, $trg_link,",
          "781:     $matching_tables, &$source_columns, &$target_columns, &$alter_str_array,",
          "782:     &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys,",
          "783:     $matching_table_index",
          "784: ) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "825:     for ($i = 0; $i < sizeof($matching_tables_fields[$table_counter]); $i++) {",
          "826:         if (isset($add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]])) {",
          "827:             $query = \"ALTER TABLE \" . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$table_counter]). \" ADD COLUMN \" .",
          "",
          "[Removed Lines]",
          "822: function PMA_addColumnsInTargetTable($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_columns, &$add_column_array, $matching_tables_fields,",
          "823:          $criteria, $matching_tables_keys, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields, $table_counter, $uncommon_cols, $display)",
          "824: {",
          "",
          "[Added Lines]",
          "846: function PMA_addColumnsInTargetTable($src_db, $trg_db, $src_link, $trg_link,",
          "847:     $matching_tables, $source_columns, &$add_column_array, $matching_tables_fields,",
          "848:     $criteria, $matching_tables_keys, $target_tables_keys, $uncommon_tables,",
          "849:     &$uncommon_tables_fields, $table_counter, $uncommon_cols, $display",
          "850: ) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "914:     $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "915:                     AND TABLE_NAME = '\" . $referenced_table . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "",
          "[Removed Lines]",
          "912: function PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link, $referenced_table, &$uncommon_tables, &$uncommon_tables_fields, $display)",
          "913: {",
          "",
          "[Added Lines]",
          "938: function PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link,",
          "939:     $referenced_table, &$uncommon_tables, &$uncommon_tables_fields, $display",
          "940: ) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "950:     $check = true;",
          "951:     $sql_query = '';",
          "952:     $found = false;",
          "",
          "[Removed Lines]",
          "947: function PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables, &$source_columns, &$alter_str_array, $matching_tables_fields, $criteria,",
          "948:  &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display)",
          "949: {",
          "",
          "[Added Lines]",
          "975: function PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables,",
          "976:     &$source_columns, &$alter_str_array, $matching_tables_fields, $criteria,",
          "977:     &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display",
          "978: ) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1079:     if (isset($uncommon_columns[$table_counter])) {",
          "1080:         $drop_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1081:         for ($a = 0; $a < sizeof($uncommon_columns[$table_counter]); $a++) {",
          "",
          "[Removed Lines]",
          "1077: function PMA_removeColumnsFromTargetTable($trg_db, $trg_link, $matching_tables, $uncommon_columns, $table_counter, $display)",
          "1078: {",
          "",
          "[Added Lines]",
          "1106: function PMA_removeColumnsFromTargetTable($trg_db, $trg_link, $matching_tables,",
          "1107:     $uncommon_columns, $table_counter, $display",
          "1108: ) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1141:     $source_indexes[$table_counter] = PMA_DBI_get_table_indexes($src_db, $matching_tables[$table_counter], $src_link);",
          "1142:     $target_indexes[$table_counter] = PMA_DBI_get_table_indexes($trg_db, $matching_tables[$table_counter], $trg_link);",
          "",
          "[Removed Lines]",
          "1137: function PMA_indexesDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_indexes, &$target_indexes, &$add_indexes_array,",
          "1138:  &$alter_indexes_array, &$remove_indexes_array, $table_counter)",
          "1139: {",
          "",
          "[Added Lines]",
          "1169: function PMA_indexesDiffInTables($src_db, $trg_db, $src_link, $trg_link,",
          "1170:     $matching_tables, &$source_indexes, &$target_indexes, &$add_indexes_array,",
          "1171:     &$alter_indexes_array, &$remove_indexes_array, $table_counter",
          "1172: ) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1202:     if (isset($add_indexes_array[$table_counter])) {",
          "1203:         $sql = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]) . \" ADD\" ;",
          "",
          "[Removed Lines]",
          "1198: function PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "1199:           $remove_indexes_array, $table_counter, $display)",
          "1200: {",
          "",
          "[Added Lines]",
          "1231: function PMA_applyIndexesDiff($trg_db, $trg_link, $matching_tables, $source_indexes,",
          "1232:     $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "1233:     $remove_indexes_array, $table_counter, $display",
          "1234: ) {",
          "",
          "---------------"
        ],
        "libraries/session.inc.php||libraries/session.inc.php": [
          "File: libraries/session.inc.php -> libraries/session.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: @ini_set('session.use_cookies', true);",
          "",
          "[Removed Lines]",
          "30: session_set_cookie_params(0, $GLOBALS['PMA_Config']->getCookiePath(),",
          "31:     '', $GLOBALS['PMA_Config']->isHttps(), true);",
          "",
          "[Added Lines]",
          "30: session_set_cookie_params(",
          "31:     0, $GLOBALS['PMA_Config']->getCookiePath(),",
          "32:     '', $GLOBALS['PMA_Config']->isHttps(), true",
          "33: );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: @ini_set('session.use_only_cookies', false);",
          "",
          "[Removed Lines]",
          "46: @ini_set('url_rewriter.tags',",
          "47:     'a=href,frame=src,input=src,form=fakeentry,fieldset=');",
          "",
          "[Added Lines]",
          "48: @ini_set(",
          "49:      'url_rewriter.tags',",
          "50:     'a=href,frame=src,input=src,form=fakeentry,fieldset='",
          "51: );",
          "",
          "---------------"
        ],
        "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php": [
          "File: libraries/sql_query_form.lib.php -> libraries/sql_query_form.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:     $fields_list    = array();",
          "187:     if (! strlen($GLOBALS['db'])) {",
          "190:             '&quot;' . htmlspecialchars(",
          "192:     } elseif (! strlen($GLOBALS['table'])) {",
          "194:         $db     = $GLOBALS['db'];",
          "",
          "[Removed Lines]",
          "189:         $legend = sprintf(__('Run SQL query/queries on server %s'),",
          "191:                 ! empty($GLOBALS['cfg']['Servers'][$GLOBALS['server']]['verbose']) ? $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['verbose'] : $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['host']) . '&quot;');",
          "",
          "[Added Lines]",
          "191:         $legend = sprintf(",
          "192:             __('Run SQL query/queries on server %s'),",
          "194:                 ! empty($GLOBALS['cfg']['Servers'][$GLOBALS['server']]['verbose'])",
          "195:                 ? $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['verbose']",
          "196:                 : $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['host']",
          "197:             ) . '&quot;'",
          "198:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:         <input type=\"text\" name=\"bkm_label\" id=\"bkm_label\" tabindex=\"110\" value=\"\" />",
          "302:         </div>",
          "303:         <div class=\"formelement\">",
          "306:         <label for=\"id_bkm_all_users\">",
          "307:             <?php echo __('Let every user access this bookmark'); ?></label>",
          "308:         </div>",
          "",
          "[Removed Lines]",
          "304:         <input type=\"checkbox\" name=\"bkm_all_users\" tabindex=\"111\" id=\"id_bkm_all_users\"",
          "305:             value=\"true\" />",
          "",
          "[Added Lines]",
          "311:         <input type=\"checkbox\" name=\"bkm_all_users\" tabindex=\"111\" id=\"id_bkm_all_users\" value=\"true\" />",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "449:     echo '</div>';",
          "451:     if ($files === false) {",
          "453:     } elseif (!empty($files)) {",
          "454:         echo '<div class=\"formelement\">';",
          "455:         echo '<strong>' . __('web server upload directory') .':</strong>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "452:         $errors[] = PMA_Message::error( __('The directory you set for upload work cannot be reached'));",
          "",
          "[Added Lines]",
          "458:         $errors[] = PMA_Message::error(__('The directory you set for upload work cannot be reached'));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "467:     echo '<fieldset id=\"\" class=\"tblFooters\">';",
          "468:     echo __('Character set of the file:') . \"\\n\";",
          "471:     echo '<input type=\"submit\" name=\"SQL\" value=\"' . __('Go')",
          "472:         .'\" />' . \"\\n\";",
          "473:     echo '<div class=\"clearfloat\"></div>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "469:     echo PMA_generateCharsetDropdownBox(PMA_CSDROPDOWN_CHARSET,",
          "470:             'charset_of_file', null, 'utf8', false);",
          "",
          "[Added Lines]",
          "475:     echo PMA_generateCharsetDropdownBox(",
          "476:         PMA_CSDROPDOWN_CHARSET,",
          "477:         'charset_of_file', null, 'utf8', false",
          "478:     );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5c45d0d35c203fe1b8e1c720ae8af7e40f4ce6c",
      "candidate_info": {
        "commit_hash": "b5c45d0d35c203fe1b8e1c720ae8af7e40f4ce6c",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/b5c45d0d35c203fe1b8e1c720ae8af7e40f4ce6c",
        "files": [
          "libraries/server_synchronize.lib.php"
        ],
        "message": "White space cleanup",
        "before_after_code_files": [
          "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ],
          "candidate": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php": [
          "File: libraries/server_synchronize.lib.php -> libraries/server_synchronize.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: function PMA_getMatchingTables($trg_tables, $src_tables, &$matching_tables, &$uncommon_source_tables)",
          "20: {",
          "25:                 $present_in_target = true;",
          "26:                 $matching_tables[] = $src_tables[$k];",
          "27:             }",
          "",
          "[Removed Lines]",
          "1: <?php",
          "21:     for($k=0; $k< sizeof($src_tables); $k++) {",
          "22:         $present_in_target = false;",
          "23:         for($l=0; $l < sizeof($trg_tables); $l++) {",
          "24:             if ($src_tables[$k] === $trg_tables[$l]) {",
          "",
          "[Added Lines]",
          "1: <?php",
          "21:     for($k=0; $k< sizeof($src_tables); $k++) {",
          "22:         $present_in_target = false;",
          "23:         for($l=0; $l < sizeof($trg_tables); $l++) {",
          "24:             if ($src_tables[$k] === $trg_tables[$l]) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: function PMA_getNonMatchingTargetTables($trg_tables, $matching_tables, &$uncommon_target_tables)",
          "47: {",
          "48:     for($c=0; $c<sizeof($trg_tables) ;$c++) {",
          "50:         for($d=0; $d < sizeof($matching_tables); $d++)",
          "51:         {",
          "52:             if ($trg_tables[$c] === $matching_tables[$d]) {",
          "53:                 $match=true;",
          "55:         }",
          "56:         if ($match === false) {",
          "57:             $uncommon_target_tables[] = $trg_tables[$c];",
          "59:     }",
          "60: }",
          "",
          "[Removed Lines]",
          "49:         $match = false;",
          "54:             }",
          "58:         }",
          "",
          "[Added Lines]",
          "49:         $match = false;",
          "54:             }",
          "58:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93: function PMA_dataDiffInTables($src_db, $trg_db, $src_link, $trg_link, &$matching_table, &$matching_tables_fields,",
          "94:     &$update_array, &$insert_array, &$delete_array, &$fields_num, $matching_table_index, &$matching_tables_keys)",
          "96:     if (isset($matching_table[$matching_table_index])) {",
          "97:         $fld = array();",
          "98:         $fld_results = PMA_DBI_get_fields($src_db, $matching_table[$matching_table_index], $src_link);",
          "",
          "[Removed Lines]",
          "95: {",
          "",
          "[Added Lines]",
          "95: {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:                     $is_key[] = $field_name;",
          "105:                 }",
          "106:                 $fld[] = $field_name;",
          "108:         }",
          "110:         $fields_num[$matching_table_index] = sizeof($fld);",
          "111:         $matching_tables_keys[$matching_table_index] = $is_key;",
          "114:         $source_size = sizeof($source_result_set);",
          "116:         $trg_fld_results = PMA_DBI_get_fields($trg_db, $matching_table[$matching_table_index], $trg_link);",
          "117:         $all_keys_match = true;",
          "118:         $trg_keys = array();",
          "120:         if (isset($trg_fld_results)) {",
          "121:             foreach ($trg_fld_results as $each_field) {",
          "122:                 if ($each_field['Key'] == 'PRI') {",
          "124:                     if (! (in_array($each_field['Field'], $is_key))) {",
          "125:                         $all_keys_match = false;",
          "129:         }",
          "130:         $update_row = 0;",
          "131:         $insert_row = 0;",
          "132:         $update_field = 0;",
          "133:         $insert_field = 0;",
          "137:             $starting_index = 0;",
          "140:    if (isset($source_result_set[$j]) && ($all_keys_match)) {",
          "144:                  . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "146:                 if (sizeof($is_key) == 1) {",
          "147:                     $trg_select_query .= $is_key[0]. \"='\" . $source_result_set[$j] . \"'\";",
          "148:                 } elseif (sizeof($is_key) > 1){",
          "149:                     for ($k=0; $k < sizeof($is_key); $k++) {",
          "150:                         $trg_select_query .= $is_key[$k] . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "151:                         if ($k < (sizeof($is_key)-1)){",
          "153:                         }",
          "155:                 }",
          "157:                 $target_result_set = PMA_DBI_fetch_result($trg_select_query, null, null, $trg_link);",
          "158:     if ($target_result_set) {",
          "162:                      . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "164:                     if (sizeof($is_key) == 1) {",
          "165:                         $src_select_query .= $is_key[0] . \"='\" . $source_result_set[$j] . \"'\";",
          "166:                     } else if(sizeof($is_key) > 1){",
          "167:                         for ($k=0; $k< sizeof($is_key); $k++) {",
          "168:                             $src_select_query .= $is_key[$k] . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "169:                             if ($k < (sizeof($is_key) - 1)){",
          "171:                             }",
          "172:                         }",
          "175:                     $src_result_set = PMA_DBI_fetch_result($src_select_query, null, null, $src_link);",
          "182:                     for ($m = 0; ($m < $fields_num[$matching_table_index]) && ($starting_index == 0) ; $m++) {",
          "183:                         if (isset($src_result_set[0][$fld[$m]])) {",
          "",
          "[Removed Lines]",
          "107:             }",
          "109:         $matching_tables_fields[$matching_table_index] = $fld;",
          "113:         $source_result_set = PMA_DBI_get_column_values($src_db, $matching_table[$matching_table_index], $is_key, $src_link);",
          "123:                     $trg_keys[] = $each_field['Field'];",
          "126:                     }",
          "127:                 }",
          "128:             }",
          "134:         $starting_index = 0;",
          "136:         for ($j = 0; $j < $source_size; $j++) {",
          "138:    $update_field = 0;",
          "143:                 $trg_select_query = \"SELECT * FROM \" . PMA_backquote($trg_db) . \".\"",
          "152:                             $trg_select_query .= \" AND \";",
          "154:                     }",
          "161:                     $src_select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\"",
          "170:                                 $src_select_query .= \" AND \";",
          "173:                     }",
          "",
          "[Added Lines]",
          "107:             }",
          "109:         $matching_tables_fields[$matching_table_index] = $fld;",
          "113:         $source_result_set = PMA_DBI_get_column_values($src_db, $matching_table[$matching_table_index], $is_key, $src_link);",
          "123:                     $trg_keys[] = $each_field['Field'];",
          "126:                     }",
          "127:                 }",
          "128:             }",
          "134:         $starting_index = 0;",
          "136:         for ($j = 0; $j < $source_size; $j++) {",
          "138:    $update_field = 0;",
          "143:                 $trg_select_query = \"SELECT * FROM \" . PMA_backquote($trg_db) . \".\"",
          "152:                             $trg_select_query .= \" AND \";",
          "154:                     }",
          "161:                     $src_select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\"",
          "170:                                 $src_select_query .= \" AND \";",
          "173:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "187:                                     if ($source_result_set[$j]) {",
          "188:                                         $update_array[$matching_table_index][$update_row][$is_key[0]] = $source_result_set[$j];",
          "189:                                     }",
          "191:                                     for ($n=0; $n < sizeof($is_key); $n++) {",
          "192:                                         if (isset($src_result_set[0][$is_key[$n]])) {",
          "193:                                             $update_array[$matching_table_index][$update_row][$is_key[$n]] = $src_result_set[0][$is_key[$n]];",
          "194:                                         }",
          "195:                                     }",
          "196:                                 }",
          "198:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "200:                                 $update_field++;",
          "201:                                 if (isset($src_result_set[0][$fld[$m]])) {",
          "203:                                     $update_field++;",
          "204:                                 }",
          "205:                                 $starting_index = $m;",
          "",
          "[Removed Lines]",
          "190:                                 } elseif (sizeof($is_key) > 1) {",
          "202:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "[Added Lines]",
          "190:                                 } elseif (sizeof($is_key) > 1) {",
          "202:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "209:                                if (sizeof($is_key) == 1) {",
          "210:                                     if ($source_result_set[$j]) {",
          "211:                                         $update_array[$matching_table_index][$update_row][$is_key[0]] = $source_result_set[$j];",
          "213:                                     }",
          "215:                                     for ($n = 0; $n < sizeof($is_key); $n++) {",
          "216:                                         if (isset($src_result_set[0][$is_key[$n]])) {",
          "217:                                             $update_array[$matching_table_index][$update_row][$is_key[$n]] = $src_result_set[0][$is_key[$n]];",
          "218:                                         }",
          "219:                                     }",
          "220:                                 }",
          "222:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "224:                                 $update_field++;",
          "225:                                 if (isset($src_result_set[0][$fld[$m]])) {",
          "227:                                     $update_field++;",
          "228:                                 }",
          "229:                                 $starting_index = $m;",
          "",
          "[Removed Lines]",
          "214:                                 } elseif (sizeof($is_key) > 1) {",
          "226:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "[Added Lines]",
          "214:                                 } elseif (sizeof($is_key) > 1) {",
          "226:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "232:                       }",
          "233:                     }",
          "234:                     for ($m = $starting_index + 1; $m < $fields_num[$matching_table_index] ; $m++)",
          "236:                         if (isset($src_result_set[0][$fld[$m]])) {",
          "238:                                 if (($src_result_set[0][$fld[$m]] != $target_result_set[0][$fld[$m]]) && (!(in_array($fld[$m], $is_key)))) {",
          "240:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "241:                                 $update_field++;",
          "242:                                 if ($src_result_set[0][$fld[$m]]) {",
          "243:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "244:                                     $update_field++;",
          "245:                                 }",
          "247:                             }",
          "248:                         } else {",
          "250:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "251:                                 $update_field++;",
          "252:                                 if ($src_result_set[0][$fld[$m]]) {",
          "253:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "254:                                     $update_field++;",
          "255:                                 }",
          "257:                             }",
          "258:                         }",
          "259:                     }",
          "",
          "[Removed Lines]",
          "235:                     {",
          "237:                             if (isset($target_result_set[0][$fld[$m]])) {",
          "239:                                 $update_row--;",
          "246:                                 $update_row++;",
          "249:                                $update_row--;",
          "256:                                 $update_row++;",
          "",
          "[Added Lines]",
          "235:                     {",
          "237:                             if (isset($target_result_set[0][$fld[$m]])) {",
          "239:                                 $update_row--;",
          "246:                                 $update_row++;",
          "249:                                $update_row--;",
          "256:                                 $update_row++;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "265:                         if (isset($source_result_set[$j])) {",
          "266:                             $insert_array[$matching_table_index][$insert_row][$is_key[0]] = $source_result_set[$j];",
          "267:                         }",
          "269:                         for($l = 0; $l < sizeof($is_key); $l++) {",
          "270:                             if (isset($source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]])) {",
          "271:                                 $insert_array[$matching_table_index][$insert_row][$is_key[$l]] = $source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]];",
          "",
          "[Removed Lines]",
          "268:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "[Added Lines]",
          "268:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "277:             } else {",
          "282:                     if (sizeof($is_key) == 1) {",
          "283:                         if (isset($source_result_set[$j])) {",
          "284:                             $insert_array[$matching_table_index][$insert_row][$is_key[0]] = $source_result_set[$j];",
          "285:                         }",
          "287:                         for ($l = 0; $l < sizeof($is_key); $l++) {",
          "288:                             if (isset($source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]])) {",
          "289:                                 $insert_array[$matching_table_index][$insert_row][$is_key[$l]] = $source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]];",
          "",
          "[Removed Lines]",
          "286:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "[Added Lines]",
          "286:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "293:                 $insert_row++;",
          "294:             }",
          "295:         } // for loop ends",
          "315: function PMA_findDeleteRowsFromTargetTables(&$delete_array, $matching_table, $matching_table_index, $trg_keys, $src_keys, $trg_db, $trg_link,$src_db, $src_link)",
          "316: {",
          "317:     if (isset($trg_keys[$matching_table_index])) {",
          "320:     }",
          "321:     if (isset($src_keys[$matching_table_index])) {",
          "324:     }",
          "325:     $all_keys_match = 1;",
          "326:     for ($a = 0; $a < sizeof($trg_keys[$matching_table_index]); $a++) {",
          "",
          "[Removed Lines]",
          "296:     }",
          "297: }",
          "318:         $target_key_values = PMA_DBI_get_column_values($trg_db, $matching_table[$matching_table_index], $trg_keys[$matching_table_index], $trg_link);",
          "319:         $target_row_size = sizeof($target_key_values);",
          "322:         $source_key_values = PMA_DBI_get_column_values($src_db, $matching_table[$matching_table_index], $src_keys[$matching_table_index], $src_link);",
          "323:         $source_size = sizeof($source_key_values);",
          "",
          "[Added Lines]",
          "296:     }",
          "297: }",
          "318:         $target_key_values = PMA_DBI_get_column_values($trg_db, $matching_table[$matching_table_index], $trg_keys[$matching_table_index], $trg_link);",
          "319:         $target_row_size = sizeof($target_key_values);",
          "322:         $source_key_values = PMA_DBI_get_column_values($src_db, $matching_table[$matching_table_index], $src_keys[$matching_table_index], $src_link);",
          "323:         $source_size = sizeof($source_key_values);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "328:            if (! (in_array($trg_keys[$matching_table_index][$a], $src_keys[$matching_table_index]))) {",
          "329:                $all_keys_match = 0;",
          "330:            }",
          "332:     }",
          "333:     if (! ($all_keys_match)) {",
          "334:         if (isset($target_key_values)) {",
          "",
          "[Removed Lines]",
          "331:        }",
          "",
          "[Added Lines]",
          "331:        }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "337:     }",
          "338:     if (isset($trg_keys[$matching_table_index])) {",
          "339:         if ((sizeof($trg_keys[$matching_table_index]) == 1) && $all_keys_match) {",
          "341:            if (isset($target_key_values)) {",
          "342:                for ($i = 0; $i < sizeof($target_key_values); $i++) {",
          "343:                     if (! (in_array($target_key_values[$i], $source_key_values))) {",
          "344:                         $delete_array[$matching_table_index][$row] = $target_key_values[$i];",
          "346:                     }",
          "348:             }",
          "349:         } elseif ((sizeof($trg_keys[$matching_table_index]) > 1) && $all_keys_match) {",
          "351:             if (isset($target_key_values)) {",
          "352:                 for ($i = 0; $i < sizeof($target_key_values); $i++) {",
          "353:                     $is_present = false;",
          "",
          "[Removed Lines]",
          "340:            $row = 0;",
          "345:                         $row++;",
          "347:                 }",
          "350:             $row = 0;",
          "",
          "[Added Lines]",
          "340:            $row = 0;",
          "345:                         $row++;",
          "347:                 }",
          "350:             $row = 0;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "356:                         for ($k = 0; $k < sizeof($trg_keys[$matching_table_index]); $k++) {",
          "357:                             if ($target_key_values[$i][$trg_keys[$matching_table_index][$k]] != $source_key_values[$j][$trg_keys[$matching_table_index][$k]]) {",
          "358:                                 $check = false;",
          "360:                         }",
          "361:                         if ($check) {",
          "362:                             $is_present = true;",
          "",
          "[Removed Lines]",
          "359:                             }",
          "",
          "[Added Lines]",
          "359:                             }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "368:                         }",
          "369:                         $row++;",
          "370:                     }",
          "373:         }",
          "375: }",
          "",
          "[Removed Lines]",
          "371:                 }",
          "372:             }",
          "374:     }",
          "",
          "[Added Lines]",
          "371:                 }",
          "372:             }",
          "374:     }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "388: function PMA_dataDiffInUncommonTables($source_tables_uncommon, $src_db, $src_link, $index, &$row_count)",
          "389: {",
          "393: }",
          "",
          "[Removed Lines]",
          "390:    $query = \"SELECT COUNT(*) FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($source_tables_uncommon[$index]);",
          "391:    $rows  = PMA_DBI_fetch_result($query, null, null, $src_link);",
          "392:    $row_count[$index] = $rows[0];",
          "",
          "[Added Lines]",
          "390:    $query = \"SELECT COUNT(*) FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($source_tables_uncommon[$index]);",
          "391:    $rows  = PMA_DBI_fetch_result($query, null, null, $src_link);",
          "392:    $row_count[$index] = $rows[0];",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "411: function PMA_updateTargetTables($table, $update_array, $src_db, $trg_db, $trg_link, $matching_table_index, $matching_table_keys, $display)",
          "413:     if (isset($update_array[$matching_table_index])) {",
          "414:         if (sizeof($update_array[$matching_table_index])) {",
          "416:             for ($update_row = 0; $update_row < sizeof($update_array[$matching_table_index]); $update_row++) {",
          "419:                      $update_fields_num = sizeof($update_array[$matching_table_index][$update_row])-sizeof($matching_table_keys[$matching_table_index]);",
          "420:                      if ($update_fields_num > 0) {",
          "423:                      for ($update_field = 0; $update_field < $update_fields_num; $update_field = $update_field+2) {",
          "424:                          if (isset($update_array[$matching_table_index][$update_row][$update_field]) && isset($update_array[$matching_table_index][$update_row][$update_field+1])) {",
          "425:                              $query .= $update_array[$matching_table_index][$update_row][$update_field] . \"='\" . $update_array[$matching_table_index][$update_row][$update_field+1] . \"'\";",
          "426:                          }",
          "427:                          if ($update_field < ($update_fields_num - 2)) {",
          "429:                          }",
          "430:                      }",
          "431:                      $query .= \" WHERE \";",
          "",
          "[Removed Lines]",
          "412: {",
          "418:                 if (isset($update_array[$matching_table_index][$update_row])) {",
          "421:                         $query = \"UPDATE \" . PMA_backquote($trg_db) . \".\" .PMA_backquote($table[$matching_table_index]) . \" SET \";",
          "428:                              $query .= \", \";",
          "",
          "[Added Lines]",
          "412: {",
          "418:                 if (isset($update_array[$matching_table_index][$update_row])) {",
          "421:                         $query = \"UPDATE \" . PMA_backquote($trg_db) . \".\" .PMA_backquote($table[$matching_table_index]) . \" SET \";",
          "428:                              $query .= \", \";",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "443:                     }",
          "444:                     if ($display == true) {",
          "445:                         echo \"<p>\" . $query . \"</p>\";",
          "447:                     PMA_DBI_try_query($query, $trg_link, 0);",
          "448:                     }",
          "450:             }",
          "451:         }",
          "452:     }",
          "453: }",
          "",
          "[Removed Lines]",
          "446:                     }",
          "449:                 }",
          "",
          "[Added Lines]",
          "446:                     }",
          "449:                 }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "487: function PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link, $trg_link, $table_fields, &$array_insert, $matching_table_index,",
          "489:  &$alter_str_array,&$source_indexes, &$target_indexes, &$add_indexes_array, &$alter_indexes_array, &$delete_array, &$update_array, $display)",
          "491:     if(isset($array_insert[$matching_table_index])) {",
          "492:         if (sizeof($array_insert[$matching_table_index])) {",
          "493:             for ($insert_row = 0; $insert_row< sizeof($array_insert[$matching_table_index]); $insert_row++) {",
          "494:                 if (isset($array_insert[$matching_table_index][$insert_row][$matching_tables_keys[$matching_table_index][0]])) {",
          "496:                     $select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "497:                     for ($i = 0; $i < sizeof($matching_tables_keys[$matching_table_index]); $i++) {",
          "498:                         $select_query .= $matching_tables_keys[$matching_table_index][$i] . \"='\";",
          "499:                         $select_query .= $array_insert[$matching_table_index][$insert_row][$matching_tables_keys[$matching_table_index][$i]] . \"'\" ;",
          "501:                         if ($i < (sizeof($matching_tables_keys[$matching_table_index]) - 1)) {",
          "503:                         }",
          "504:                     }",
          "505:                     $select_query .= \"; \";",
          "506:                     $result = PMA_DBI_fetch_result ($select_query, null, null, $src_link);",
          "507:                     $insert_query = \"INSERT INTO \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_table[$matching_table_index]) .\" (\";",
          "510:                     {",
          "511:                         $insert_query .=  $table_fields[$matching_table_index][$field_index];",
          "514:                                          AND TABLE_NAME = '\" . $matching_table[$matching_table_index]. \"'AND COLUMN_NAME = '\" .",
          "515:                                          $table_fields[$matching_table_index][$field_index] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\" ;",
          "517:                         $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $trg_link);",
          "518:                         if (sizeof($is_fk_result) > 0) {",
          "519:                             for ($j = 0; $j < sizeof($is_fk_result); $j++)",
          "520:                             {",
          "521:                                 $table_index = array_keys($matching_table, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "523:                                 if (isset($alter_str_array[$table_index[0]])) {",
          "524:                                    PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables, $source_columns, $alter_str_array, $matching_tables_fields,",
          "525:                                     $criteria, $matching_tables_keys, $target_tables_keys, $table_index[0], $display);",
          "528:                                 if (isset($uncommon_columns[$table_index[0]])) {",
          "529:                                     PMA_removeColumnsFromTargetTable($trg_db, $trg_link, $matching_tables, $uncommon_columns, $table_index[0], $display);",
          "532:                                 if (isset($add_column_array[$table_index[0]])) {",
          "533:                                     PMA_findDeleteRowsFromTargetTables($delete_array, $matching_tables, $table_index[0], $target_tables_keys, $matching_tables_keys,",
          "534:                                     $trg_db, $trg_link, $src_db, $src_link);",
          "536:                                     if (isset($delete_array[$table_index[0]])) {",
          "537:                                        PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index[0], $target_tables_keys, $delete_array, $display);",
          "541:                                     $matching_tables_fields, $criteria, $matching_tables_keys, $target_tables_keys, $uncommon_tables,$uncommon_tables_fields,",
          "542:                                     $table_index[0], $uncommon_cols, $display);",
          "543:                                     unset($add_column_array[$table_index[0]]);",
          "544:                                 }",
          "546:                                     || isset($alter_indexes_array[$table_index[0]])) {",
          "550:                                     unset($add_indexes_array[$table_index[0]]);",
          "551:                                     unset($alter_indexes_array[$table_index[0]]);",
          "552:                                     unset($remove_indexes_array[$table_index[0]]);",
          "",
          "[Removed Lines]",
          "488:  $matching_tables_keys, $source_columns, &$add_column_array, $criteria, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields,$uncommon_cols,",
          "490: {",
          "502:                             $select_query.= \" AND \";",
          "509:                     for ($field_index = 0; $field_index < sizeof($table_fields[$matching_table_index]); $field_index++)",
          "513:                         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db .\"'",
          "526:                                     unset($alter_str_array[$table_index[0]]);",
          "527:                                 }",
          "530:                                     unset($uncommon_columns[$table_index[0]]);",
          "531:                                 }",
          "538:                                        unset($delete_array[$table_index[0]]);",
          "539:                                     }",
          "540:                                     PMA_addColumnsInTargetTable($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_columns, $add_column_array,",
          "545:                                 if (isset($add_indexes_array[$table_index[0]]) || isset($remove_indexes_array[$table_index[0]])",
          "547:                                     PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "548:                                     $remove_indexes_array, $table_index[0], $display);",
          "",
          "[Added Lines]",
          "488:  $matching_tables_keys, $source_columns, &$add_column_array, $criteria, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields,$uncommon_cols,",
          "490: {",
          "502:                             $select_query.= \" AND \";",
          "509:                     for ($field_index = 0; $field_index < sizeof($table_fields[$matching_table_index]); $field_index++)",
          "513:                         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db .\"'",
          "526:                                     unset($alter_str_array[$table_index[0]]);",
          "527:                                 }",
          "530:                                     unset($uncommon_columns[$table_index[0]]);",
          "531:                                 }",
          "538:                                        unset($delete_array[$table_index[0]]);",
          "539:                                     }",
          "540:                                     PMA_addColumnsInTargetTable($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_columns, $add_column_array,",
          "545:                                 if (isset($add_indexes_array[$table_index[0]]) || isset($remove_indexes_array[$table_index[0]])",
          "547:                                     PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "548:                                     $remove_indexes_array, $table_index[0], $display);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "559:                                 if (isset($array_insert[$table_index[0]])) {",
          "560:                                      PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link, $trg_link, $table_fields, $array_insert,",
          "561:                                      $table_index[0], $matching_tables_keys, $source_columns, $add_column_array, $criteria, $target_tables_keys, $uncommon_tables,",
          "564:                                      unset($array_insert[$table_index[0]]);",
          "566:                             }",
          "567:                         }",
          "568:                         if ($field_index < sizeof($table_fields[$matching_table_index])-1) {",
          "569:                             $insert_query .= \", \";",
          "570:                         }",
          "572:                     $insert_query .= \") VALUES(\";",
          "573:                     if (sizeof($table_fields[$matching_table_index]) == 1) {",
          "574:                          $insert_query .= \"'\" . PMA_sqlAddslashes($result[0]) . \"'\";",
          "",
          "[Removed Lines]",
          "562:                                      $uncommon_tables_fields, $uncommon_cols, $alter_str_array, $source_indexes, $target_indexes, $add_indexes_array,",
          "563:                                      $alter_indexes_array, $delete_array, $update_array, $display);",
          "565:                                 }",
          "571:                     }",
          "",
          "[Added Lines]",
          "562:                                      $uncommon_tables_fields, $uncommon_cols, $alter_str_array, $source_indexes, $target_indexes, $add_indexes_array,",
          "563:                                      $alter_indexes_array, $delete_array, $update_array, $display);",
          "565:                                 }",
          "571:                     }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "581:                             }",
          "582:                             if ($field_index < (sizeof($table_fields[$matching_table_index])) - 1) {",
          "583:                                     $insert_query .= \" ,\" ;",
          "585:                         }",
          "587:                     $insert_query .= \");\";",
          "588:                     if ($display == true) {",
          "589:                         PMA_displayQuery($insert_query);",
          "590:                     }",
          "591:                     PMA_DBI_try_query($insert_query, $trg_link, 0);",
          "593:             }",
          "594:         }",
          "595:     }",
          "613: function PMA_createTargetTables($src_db, $trg_db, $src_link, $trg_link, &$uncommon_tables, $table_index, &$uncommon_tables_fields, $display)",
          "614: {",
          "615:     if (isset($uncommon_tables[$table_index])) {",
          "",
          "[Removed Lines]",
          "584:                             }",
          "586:                     }",
          "592:                 }",
          "596: }",
          "",
          "[Added Lines]",
          "584:                             }",
          "586:                     }",
          "592:                 }",
          "596: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "619:             $field_name = $each_field['Field'];",
          "620:             $fields[] = $field_name;",
          "621:         }",
          "624:         $Create_Query = PMA_DBI_fetch_value(\"SHOW CREATE TABLE \" . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), 0, 1, $src_link);",
          "628:                                             PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]),",
          "629:                                             $Create_Query,",
          "630:                                             $limit = 1",
          "631:         );",
          "634:                         AND TABLE_NAME = '\" . $uncommon_tables[$table_index] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\" ;",
          "636:         $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $src_link);",
          "637:         if (sizeof($is_fk_result) > 0) {",
          "638:             for ($j = 0; $j < sizeof($is_fk_result); $j++)",
          "",
          "[Removed Lines]",
          "622:         $uncommon_tables_fields[$table_index] = $fields;",
          "627:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "633:         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "",
          "[Added Lines]",
          "622:         $uncommon_tables_fields[$table_index] = $fields;",
          "627:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "633:         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "641:                     $table_index = array_keys($uncommon_tables, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "642:                     PMA_createTargetTables($src_db, $trg_db, $trg_link, $src_link, $uncommon_tables, $table_index[0], $uncommon_tables_fields, $display);",
          "643:                     unset($uncommon_tables[$table_index[0]]);",
          "645:             }",
          "646:          }",
          "647:          if ($display == true) {",
          "648:               echo '<p>' . $Create_Table_Query . '</p>';",
          "649:          }",
          "650:          PMA_DBI_try_query($Create_Table_Query, $trg_link, 0);",
          "652: }",
          "",
          "[Removed Lines]",
          "644:                 }",
          "651:     }",
          "",
          "[Added Lines]",
          "644:                 }",
          "651:     }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "673:     $display = false; // todo: maybe display some of the queries if they are not too numerous",
          "674:     $unbuffered_result = PMA_DBI_try_query('SELECT * FROM ' . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), $src_link, PMA_DBI_QUERY_UNBUFFERED);",
          "675:     if (false !== $unbuffered_result) {",
          "677:         while ($one_row = PMA_DBI_fetch_row($unbuffered_result)) {",
          "678:             $insert_query .= '(';",
          "679:             $key_of_last_value = count($one_row) - 1;",
          "",
          "[Removed Lines]",
          "671: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $uncommon_tables, $table_index, $uncommon_tables_fields, $display)",
          "672: {",
          "676:         $insert_query = 'INSERT INTO ' . PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]) . ' VALUES';",
          "",
          "[Added Lines]",
          "671: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $uncommon_tables, $table_index, $uncommon_tables_fields, $display)",
          "672: {",
          "676:         $insert_query = 'INSERT INTO ' . PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]) . ' VALUES';",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "694:     }",
          "695: }",
          "712: {",
          "713:     for($i = 0; $i < sizeof($delete_array[$table_index]); $i++) {",
          "714:         if (isset($target_tables_keys[$table_index])) {",
          "716:             for($y = 0; $y < sizeof($target_tables_keys[$table_index]); $y++) {",
          "717:                 $delete_query .= $target_tables_keys[$table_index][$y] . \" = '\";",
          "719:                 if (sizeof($target_tables_keys[$table_index]) == 1) {",
          "721:                 } elseif (sizeof($target_tables_keys[$table_index]) > 1) {",
          "722:                     $delete_query .= $delete_array[$table_index][$i][$target_tables_keys[$table_index][$y]] . \"'\";",
          "723:                 }",
          "724:                 if ($y < (sizeof($target_tables_keys[$table_index]) - 1)) {",
          "725:                     $delete_query .= ' AND ';",
          "726:                 }",
          "728:                             AND REFERENCED_TABLE_NAME = '\" . $matching_tables[$table_index].\"' AND REFERENCED_COLUMN_NAME = '\"",
          "729:                            . $target_tables_keys[$table_index][$y] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "731:                 $pk_query_result = PMA_DBI_fetch_result($pk_query, null, null, $trg_link);",
          "732:                 $result_size = sizeof($pk_query_result);",
          "734:                 if ($result_size > 0) {",
          "735:                     for ($b = 0; $b < $result_size; $b++) {",
          "736:                         $drop_pk_query = \"DELETE FROM \" . PMA_backquote($pk_query_result[$b]['TABLE_SCHEMA']) . \".\" . PMA_backquote($pk_query_result[$b]['TABLE_NAME']) . \" WHERE \" . $pk_query_result[$b]['COLUMN_NAME'] . \" = \" . $target_tables_keys[$table_index][$y] . \";\";",
          "737:                         PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "741:         }",
          "742:         if ($display == true) {",
          "744:         }",
          "745:         PMA_DBI_try_query($delete_query, $trg_link, 0);",
          "746:     }",
          "",
          "[Removed Lines]",
          "711: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index, $target_tables_keys, $delete_array, $display)",
          "715:             $delete_query = 'DELETE FROM ' . PMA_backquote($trg_db) . '.' .PMA_backquote($matching_tables[$table_index]) . ' WHERE ';",
          "720:                     $delete_query .= $delete_array[$table_index][$i] . \"'\";",
          "727:                 $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "738:                     }",
          "739:                 }",
          "740:             }",
          "743:             echo '<p>' . $delete_query . '</p>';",
          "",
          "[Added Lines]",
          "711: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index, $target_tables_keys, $delete_array, $display)",
          "715:             $delete_query = 'DELETE FROM ' . PMA_backquote($trg_db) . '.' .PMA_backquote($matching_tables[$table_index]) . ' WHERE ';",
          "720:                     $delete_query .= $delete_array[$table_index][$i] . \"'\";",
          "727:                 $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "738:                     }",
          "739:                 }",
          "740:             }",
          "743:             echo '<p>' . $delete_query . '</p>';",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "778: function PMA_structureDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_columns, &$target_columns, &$alter_str_array,",
          "780: {",
          "782:     $source_columns[$matching_table_index] = PMA_DBI_get_columns_full($src_db, $matching_tables[$matching_table_index], null, $src_link);",
          "783:     $target_columns[$matching_table_index] = PMA_DBI_get_columns_full($trg_db, $matching_tables[$matching_table_index], null, $trg_link);",
          "784:     foreach ($source_columns[$matching_table_index] as $column_name => $each_column) {",
          "785:         if (isset($target_columns[$matching_table_index][$column_name]['Field'])) {",
          "787:             for ($i = 0; $i < sizeof($criteria); $i++) {",
          "788:                 if ($source_columns[$matching_table_index][$column_name][$criteria[$i]] != $target_columns[$matching_table_index][$column_name][$criteria[$i]]) {",
          "789:                     if (($criteria[$i] == 'Default') && ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == '' )) {",
          "791:                     } else {",
          "792:                         if (! (($criteria[$i] == 'Key') && (($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "795:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')))) {",
          "796:                             $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = $source_columns[$matching_table_index][$column_name][$criteria[$i]];",
          "797:                         }",
          "",
          "[Removed Lines]",
          "779:  &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys, $matching_table_index)",
          "790:                         $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = 'None';",
          "793:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "794:                             || ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')",
          "",
          "[Added Lines]",
          "779:  &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys, $matching_table_index)",
          "790:                         $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = 'None';",
          "793:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "794:                             || ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "806:     foreach ($target_columns[$matching_table_index] as $fld_name => $each_column) {",
          "807:         if (! (isset($source_columns[$matching_table_index][$fld_name]['Field']))) {",
          "809:         }",
          "810:         if ($target_columns[$matching_table_index][$fld_name]['Key'] == 'PRI') {",
          "811:             $keys[] = $fld_name;",
          "812:         }",
          "813:     }",
          "814:     if (isset($fields_uncommon)) {",
          "816:     }",
          "817:     if (isset($keys)) {",
          "819:     }",
          "820: }",
          "",
          "[Removed Lines]",
          "808:             $fields_uncommon[] = $fld_name;",
          "815:         $uncommon_columns[$matching_table_index] = $fields_uncommon;",
          "818:         $target_tables_keys[$matching_table_index] = $keys;",
          "",
          "[Added Lines]",
          "808:             $fields_uncommon[] = $fld_name;",
          "815:         $uncommon_columns[$matching_table_index] = $fields_uncommon;",
          "818:         $target_tables_keys[$matching_table_index] = $keys;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "852:         if (isset($add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]])) {",
          "853:             $query = \"ALTER TABLE \" . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$table_counter]). \" ADD COLUMN \" .",
          "854:             $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \" \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Type'];",
          "856:             if($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Null'] == 'NO') {",
          "857:                 $query .= ' Not Null ';",
          "858:             } elseif ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Null'] == 'YES') {",
          "860:             }",
          "861:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Collation'] != '') {",
          "862:                 $query .= ' COLLATE ' . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Collation'];",
          "",
          "[Removed Lines]",
          "859:                 $query .= ' Null ';",
          "",
          "[Added Lines]",
          "859:                 $query .= ' Null ';",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "865:                 $query .= \" DEFAULT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Default'];",
          "866:             }",
          "867:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'] != '') {",
          "871:                 $trg_key_size = sizeof($target_tables_keys[$table_counter]);",
          "872:                 if ($trg_key_size) {",
          "873:                     $check = true;",
          "875:                         if (! (in_array($target_tables_keys[$table_counter], $uncommon_cols))) {",
          "876:                              $check = false;",
          "878:                     }",
          "879:                     if (! $check) {",
          "881:                     }",
          "883:                 $query .= \" , ADD PRIMARY KEY (\";",
          "884:                 for ($t = 0; $t < sizeof($matching_tables_keys[$table_counter]); $t++) {",
          "885:                     $query .= $matching_tables_keys[$table_counter][$t];",
          "",
          "[Removed Lines]",
          "868:                 $query .= \" COMMENT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'];",
          "869:             }",
          "870:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Key'] == 'PRI' ) {",
          "874:                     for ($a = 0; ($a < $trg_key_size) && ($check); $a++) {",
          "877:                          }",
          "880:                         $query .= \" ,DROP PRIMARY KEY \" ;",
          "882:                 }",
          "",
          "[Added Lines]",
          "868:                 $query .= \" COMMENT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'];",
          "869:             }",
          "870:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Key'] == 'PRI' ) {",
          "874:                     for ($a = 0; ($a < $trg_key_size) && ($check); $a++) {",
          "877:                          }",
          "880:                         $query .= \" ,DROP PRIMARY KEY \" ;",
          "882:                 }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "912:                     PMA_createTargetTables($src_db, $trg_db, $trg_link, $src_link, $uncommon_tables, $table_index[0], $uncommon_tables_fields);",
          "913:                     unset($uncommon_tables[$table_index[0]]);",
          "914:                 }",
          "917:                             (\" . $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \") REFERENCES \" . PMA_backquote($trg_db) .",
          "918:                              '.' . PMA_backquote($is_fk_result[0]['REFERENCED_TABLE_NAME']) . \" (\" . $is_fk_result[0]['REFERENCED_COLUMN_NAME'] . \");\";",
          "921:             }",
          "922:         }",
          "923:     }",
          "",
          "[Removed Lines]",
          "915:                 $fk_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$table_counter]) .",
          "916:                             \"ADD CONSTRAINT FOREIGN KEY \" . $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \"",
          "920:                 PMA_DBI_try_query($fk_query, $trg_link, null);",
          "",
          "[Added Lines]",
          "915:                 $fk_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$table_counter]) .",
          "916:                             \"ADD CONSTRAINT FOREIGN KEY \" . $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \"",
          "920:                 PMA_DBI_try_query($fk_query, $trg_link, null);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "942: function PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link ,$referenced_table, &$uncommon_tables, &$uncommon_tables_fields, $display)",
          "943: {",
          "945:                     AND TABLE_NAME = '\" . $referenced_table . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "947:     $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $src_link);",
          "948:     if (sizeof($is_fk_result) > 0) {",
          "949:         for ($j = 0; $j < sizeof($is_fk_result); $j++) {",
          "950:             if (in_array($is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables)) {",
          "951:                 $table_index = array_keys($uncommon_tables, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "954:                 PMA_createTargetTables($src_db, $trg_db, $trg_link, $src_link, $uncommon_tables, $table_index[0], $uncommon_tables_fields, $display);",
          "955:                 unset($uncommon_tables[$table_index[0]]);",
          "957:         }",
          "958:     }",
          "959: }",
          "",
          "[Removed Lines]",
          "944:     $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "952:                 PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link, $is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables,",
          "953:                 $uncommon_tables_fields, $display);",
          "956:             }",
          "",
          "[Added Lines]",
          "944:     $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "952:                 PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link, $is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables,",
          "953:                 $uncommon_tables_fields, $display);",
          "956:             }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "981: function PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables, &$source_columns, &$alter_str_array, $matching_tables_fields, $criteria,",
          "983: {",
          "984:     $check = true;",
          "985:     $sql_query = '';",
          "",
          "[Removed Lines]",
          "982:  &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display)",
          "",
          "[Added Lines]",
          "982:  &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1008:         }",
          "1009:         $pri_query .= \");\";",
          "1010:     }",
          "1012:     if (isset($pri_query)) {",
          "1013:         if ($display == true) {",
          "1014:             echo '<p>' . $pri_query . '</p>';",
          "1015:         }",
          "1017:     }",
          "1018:     for ($t = 0; $t < sizeof($matching_tables_fields[$matching_table_index]); $t++) {",
          "1019:         if ((isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]])) && (sizeof($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]) > 0)) {",
          "1022:             $found = false;",
          "1023:             for ($i = 0; $i < sizeof($criteria); $i++)",
          "1024:             {",
          "1025:                 if (isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]]) && $criteria[$i] != 'Key') {",
          "1027:                     if (($criteria[$i] == 'Type') && (! isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i+1]]))) {",
          "1028:                         if ($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i + 1]] == 'NO') {",
          "1029:                             $sql_query .= \" Not Null\" ;",
          "",
          "[Removed Lines]",
          "1016:         PMA_DBI_try_query($pri_query, $trg_link, 0);",
          "1020:             $sql_query = 'ALTER TABLE ' . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$matching_table_index]) . ' MODIFY ' .",
          "1021:             $matching_tables_fields[$matching_table_index][$t] . ' ' . $source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'];",
          "1026:                     $found = true;",
          "",
          "[Added Lines]",
          "1016:         PMA_DBI_try_query($pri_query, $trg_link, 0);",
          "1020:             $sql_query = 'ALTER TABLE ' . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$matching_table_index]) . ' MODIFY ' .",
          "1021:             $matching_tables_fields[$matching_table_index][$t] . ' ' . $source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'];",
          "1026:                     $found = true;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1049:                     } elseif($criteria[$i] == 'Default') {",
          "1050:                         if(! (isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[2]]))) {",
          "1051:                             $sql_query .= \" Not Null \" ;",
          "1053:                         if (is_string($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]])) {",
          "1054:                             if ($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'] != 'timestamp') {",
          "1055:                                 $sql_query .=  \" DEFAULT '\" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]] . \"'\";",
          "1056:                             } elseif($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'] == 'timestamp') {",
          "1058:                             }",
          "1059:                         } elseif (is_numeric($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]])) {",
          "1060:                             $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "[Removed Lines]",
          "1052:                         }",
          "1057:                                 $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "[Added Lines]",
          "1052:                         }",
          "1057:                                 $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1092:     if ($check) {",
          "1093:         if ($display == true) {",
          "1094:             echo '<p>' . $query . '</p>';",
          "1096:         PMA_DBI_try_query($query, $trg_link, 0);",
          "1097:     }",
          "1098: }",
          "",
          "[Removed Lines]",
          "1095:         }",
          "",
          "[Added Lines]",
          "1095:         }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1116:         $drop_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1117:         for ($a = 0; $a < sizeof($uncommon_columns[$table_counter]); $a++) {",
          "1120:                          AND REFERENCED_TABLE_NAME = '\" . $matching_tables[$table_counter].\"' AND REFERENCED_COLUMN_NAME = '\"",
          "1121:                          . $uncommon_columns[$table_counter][$a] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "1123:             $pk_query_result = PMA_DBI_fetch_result($pk_query, null, null, $trg_link);",
          "1124:             $result_size = sizeof($pk_query_result);",
          "1126:             if ($result_size > 0) {",
          "1127:                 for ($b = 0; $b < $result_size; $b++) {",
          "1128:                     $drop_pk_query = \"ALTER TABLE \" . PMA_backquote($pk_query_result[$b]['TABLE_SCHEMA']) . \".\" . PMA_backquote($pk_query_result[$b]['TABLE_NAME']) . \"",
          "1129:                                       DROP FOREIGN KEY \" . $pk_query_result[$b]['CONSTRAINT_NAME'] . \", DROP COLUMN \" . $pk_query_result[$b]['COLUMN_NAME'] . \";\";",
          "1134:                      . $matching_tables[$table_counter]. \"' AND COLUMN_NAME = '\" . $uncommon_columns[$table_counter][$a] . \"'",
          "1135:                       AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "",
          "[Removed Lines]",
          "1119:             $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "1130:                     PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "1131:                 }",
          "1132:             }",
          "1133:             $query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db . \"' AND TABLE_NAME = '\"",
          "",
          "[Added Lines]",
          "1119:             $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "1130:                     PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "1131:                 }",
          "1132:             }",
          "1133:             $query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db . \"' AND TABLE_NAME = '\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1142:             $drop_query .=  \" DROP COLUMN \" . $uncommon_columns[$table_counter][$a];",
          "1143:             if ($a < (sizeof($uncommon_columns[$table_counter]) - 1)) {",
          "1144:                 $drop_query .= \" , \" ;",
          "1146:         }",
          "1147:         $drop_query .= \";\" ;",
          "1149:         if ($display == true) {",
          "1150:             echo '<p>' . $drop_query . '</p>';",
          "1151:         }",
          "1174: function PMA_indexesDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_indexes, &$target_indexes, &$add_indexes_array,",
          "1175:  &$alter_indexes_array, &$remove_indexes_array, $table_counter)",
          "1176: {",
          "1178:     $source_indexes[$table_counter] = PMA_DBI_get_table_indexes($src_db, $matching_tables[$table_counter],$src_link);",
          "1180:     for ($a = 0; $a < sizeof($source_indexes[$table_counter]); $a++) {",
          "1181:         $found = false;",
          "1182:         $z = 0;",
          "",
          "[Removed Lines]",
          "1145:             }",
          "1152:         PMA_DBI_try_query($drop_query, $trg_link, 0);",
          "1153:     }",
          "1154: }",
          "1179:     $target_indexes[$table_counter] = PMA_DBI_get_table_indexes($trg_db, $matching_tables[$table_counter],$trg_link);",
          "",
          "[Added Lines]",
          "1145:             }",
          "1152:         PMA_DBI_try_query($drop_query, $trg_link, 0);",
          "1153:     }",
          "1154: }",
          "1179:     $target_indexes[$table_counter] = PMA_DBI_get_table_indexes($trg_db, $matching_tables[$table_counter],$trg_link);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1194:                     }",
          "1195:                 }",
          "1196:             }",
          "1198:         }",
          "1199:         if ($found === false) {",
          "1200:             if(! ($source_indexes[$table_counter][$a]['Key_name'] == 'PRIMARY')) {",
          "1202:             }",
          "1203:         }",
          "1204:     }",
          "1207:     for ($b = 0; $b < sizeof($target_indexes[$table_counter]); $b++) {",
          "1208:         $found = false;",
          "",
          "[Removed Lines]",
          "1197:             $z++;",
          "1201:                 $add_indexes_array [$table_counter][] = $source_indexes[$table_counter][$a]['Column_name'];",
          "",
          "[Added Lines]",
          "1197:             $z++;",
          "1201:                 $add_indexes_array [$table_counter][] = $source_indexes[$table_counter][$a]['Column_name'];",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1212:             if ($target_indexes[$table_counter][$b]['Column_name'] == $source_indexes[$table_counter][$c]['Column_name']) {",
          "1213:                 $found = true;",
          "1214:             }",
          "1216:         }",
          "1217:         if ($found === false) {",
          "1219:         }",
          "1220:     }",
          "1221: }",
          "1240:           $remove_indexes_array, $table_counter, $display)",
          "1241: {",
          "",
          "[Removed Lines]",
          "1215:             $c++;",
          "1218:             $remove_indexes_array[$table_counter][] = $target_indexes[$table_counter][$b]['Key_name'];",
          "1239: function PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "",
          "[Added Lines]",
          "1215:             $c++;",
          "1218:             $remove_indexes_array[$table_counter][] = $target_indexes[$table_counter][$b]['Key_name'];",
          "1239: function PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1244:         $sql = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]) . \" ADD\" ;",
          "1245:         for ($a = 0; $a < sizeof($source_indexes[$table_counter]); $a++) {",
          "1246:             if (isset($add_indexes_array[$table_counter][$a])) {",
          "1248:                     if ($source_indexes[$table_counter][$b]['Column_name'] == $add_indexes_array[$table_counter][$a]) {",
          "1249:                         if ($source_indexes[$table_counter][$b]['Non_unique'] == '0') {",
          "1250:                             $sql .= \" UNIQUE \";",
          "",
          "[Removed Lines]",
          "1247:                 for ($b = 0; $b < sizeof($source_indexes[$table_counter]); $b++) {",
          "",
          "[Added Lines]",
          "1247:                 for ($b = 0; $b < sizeof($source_indexes[$table_counter]); $b++) {",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1265:         $query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1266:         for ($a = 0; $a < sizeof($alter_indexes_array[$table_counter]); $a++) {",
          "1267:             if (isset($alter_indexes_array[$table_counter][$a])) {",
          "1269:                 $got_first_index_column = false;",
          "1271:                     if ($source_indexes[$table_counter][$z]['Key_name'] == $alter_indexes_array[$table_counter][$a]) {",
          "1272:                         if (! $got_first_index_column) {",
          "1273:                             if ($source_indexes[$table_counter][$z]['Non_unique'] == '0') {",
          "",
          "[Removed Lines]",
          "1268:                 $query .= ' DROP INDEX ' . PMA_backquote($alter_indexes_array[$table_counter][$a]) . \" , ADD \";",
          "1270:                 for ($z = 0; $z < sizeof($source_indexes[$table_counter]); $z++) {",
          "",
          "[Added Lines]",
          "1268:                 $query .= ' DROP INDEX ' . PMA_backquote($alter_indexes_array[$table_counter][$a]) . \" , ADD \";",
          "1270:                 for ($z = 0; $z < sizeof($source_indexes[$table_counter]); $z++) {",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1294:         $drop_index_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1295:         for ($a = 0; $a < sizeof($target_indexes[$table_counter]); $a++) {",
          "1296:             if (isset($remove_indexes_array[$table_counter][$a])) {",
          "1298:             }",
          "1299:             if ($a < (sizeof($remove_indexes_array[$table_counter]) - 1)) {",
          "1300:                 $drop_index_query .= \" , \" ;",
          "1301:             }",
          "1302:         }",
          "1304:         if ($display == true) {",
          "1305:             echo '<p>' . $drop_index_query . '</p>';",
          "1306:         }",
          "1308:     }",
          "1309: }",
          "1318: function PMA_displayQuery($query) {",
          "1319:     if (strlen($query) > $GLOBALS['cfg']['MaxCharactersInDisplayedSQL']) {",
          "",
          "[Removed Lines]",
          "1297:                 $drop_index_query .= \" DROP INDEX \" . $remove_indexes_array[$table_counter][$a];",
          "1303:         $drop_index_query .= \" ; \" ;",
          "1307:         PMA_DBI_try_query($drop_index_query, $trg_link, 0);",
          "",
          "[Added Lines]",
          "1297:                 $drop_index_query .= \" DROP INDEX \" . $remove_indexes_array[$table_counter][$a];",
          "1303:         $drop_index_query .= \" ; \" ;",
          "1307:         PMA_DBI_try_query($drop_index_query, $trg_link, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfdf3aa7c346ca90768874bfb7dd5a44920d215f",
      "candidate_info": {
        "commit_hash": "cfdf3aa7c346ca90768874bfb7dd5a44920d215f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/cfdf3aa7c346ca90768874bfb7dd5a44920d215f",
        "files": [
          "libraries/server_synchronize.lib.php"
        ],
        "message": "Whitespace cleanup Removed @uses and fixed broken PHPDoc comments",
        "before_after_code_files": [
          "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ],
          "candidate": [
            "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/server_synchronize.lib.php||libraries/server_synchronize.lib.php": [
          "File: libraries/server_synchronize.lib.php -> libraries/server_synchronize.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: function PMA_getMatchingTables($trg_tables, $src_tables, &$matching_tables, &$uncommon_source_tables)",
          "20: {",
          "25:                 $present_in_target = true;",
          "26:                 $matching_tables[] = $src_tables[$k];",
          "27:             }",
          "",
          "[Removed Lines]",
          "21:     for($k=0; $k< sizeof($src_tables); $k++) {",
          "22:         $present_in_target = false;",
          "23:         for($l=0; $l < sizeof($trg_tables); $l++) {",
          "24:             if ($src_tables[$k] === $trg_tables[$l]) {",
          "",
          "[Added Lines]",
          "20:     for($k=0; $k< sizeof($src_tables); $k++) {",
          "21:         $present_in_target = false;",
          "22:         for($l=0; $l < sizeof($trg_tables); $l++) {",
          "23:             if ($src_tables[$k] === $trg_tables[$l]) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: function PMA_getNonMatchingTargetTables($trg_tables, $matching_tables, &$uncommon_target_tables)",
          "47: {",
          "48:     for($c=0; $c<sizeof($trg_tables) ;$c++) {",
          "50:         for($d=0; $d < sizeof($matching_tables); $d++)",
          "51:         {",
          "52:             if ($trg_tables[$c] === $matching_tables[$d]) {",
          "53:                 $match=true;",
          "55:         }",
          "56:         if ($match === false) {",
          "57:             $uncommon_target_tables[] = $trg_tables[$c];",
          "59:     }",
          "60: }",
          "",
          "[Removed Lines]",
          "49:         $match = false;",
          "54:             }",
          "58:         }",
          "",
          "[Added Lines]",
          "47:         $match = false;",
          "52:             }",
          "56:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90: function PMA_dataDiffInTables($src_db, $trg_db, $src_link, $trg_link, &$matching_table, &$matching_tables_fields,",
          "91:     &$update_array, &$insert_array, &$delete_array, &$fields_num, $matching_table_index, &$matching_tables_keys)",
          "93:     if (isset($matching_table[$matching_table_index])) {",
          "94:         $fld = array();",
          "95:         $fld_results = PMA_DBI_get_columns($src_db, $matching_table[$matching_table_index], true, $src_link);",
          "",
          "[Removed Lines]",
          "92: {",
          "",
          "[Added Lines]",
          "88: {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:                     $is_key[] = $field_name;",
          "102:                 }",
          "103:                 $fld[] = $field_name;",
          "105:         }",
          "106:         $matching_tables_fields[$matching_table_index] = $fld;",
          "107:         $fields_num[$matching_table_index] = sizeof($fld);",
          "108:         $matching_tables_keys[$matching_table_index] = $is_key;",
          "111:         $source_size = sizeof($source_result_set);",
          "113:         $trg_fld_results = PMA_DBI_get_columns($trg_db, $matching_table[$matching_table_index], true, $trg_link);",
          "114:         $all_keys_match = true;",
          "115:         $trg_keys = array();",
          "117:         if (isset($trg_fld_results)) {",
          "118:             foreach ($trg_fld_results as $each_field) {",
          "119:                 if ($each_field['Key'] == 'PRI') {",
          "121:                     if (! (in_array($each_field['Field'], $is_key))) {",
          "122:                         $all_keys_match = false;",
          "126:         }",
          "127:         $update_row = 0;",
          "128:         $insert_row = 0;",
          "129:         $update_field = 0;",
          "130:         $insert_field = 0;",
          "134:             $starting_index = 0;",
          "137:    if (isset($source_result_set[$j]) && ($all_keys_match)) {",
          "141:                  . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "143:                 if (sizeof($is_key) == 1) {",
          "144:                     $trg_select_query .= $is_key[0]. \"='\" . $source_result_set[$j] . \"'\";",
          "145:                 } elseif (sizeof($is_key) > 1){",
          "146:                     for ($k=0; $k < sizeof($is_key); $k++) {",
          "147:                         $trg_select_query .= $is_key[$k] . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "148:                         if ($k < (sizeof($is_key)-1)){",
          "150:                         }",
          "152:                 }",
          "154:                 $target_result_set = PMA_DBI_fetch_result($trg_select_query, null, null, $trg_link);",
          "155:     if ($target_result_set) {",
          "159:                      . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "161:                     if (sizeof($is_key) == 1) {",
          "162:                         $src_select_query .= $is_key[0] . \"='\" . $source_result_set[$j] . \"'\";",
          "163:                     } else if(sizeof($is_key) > 1){",
          "164:                         for ($k=0; $k< sizeof($is_key); $k++) {",
          "165:                             $src_select_query .= $is_key[$k] . \"='\" . $source_result_set[$j][$is_key[$k]] . \"'\";",
          "166:                             if ($k < (sizeof($is_key) - 1)){",
          "168:                             }",
          "169:                         }",
          "172:                     $src_result_set = PMA_DBI_fetch_result($src_select_query, null, null, $src_link);",
          "179:                     for ($m = 0; ($m < $fields_num[$matching_table_index]) && ($starting_index == 0) ; $m++) {",
          "180:                         if (isset($src_result_set[0][$fld[$m]])) {",
          "",
          "[Removed Lines]",
          "104:             }",
          "110:         $source_result_set = PMA_get_column_values($src_db, $matching_table[$matching_table_index], $is_key, $src_link);",
          "120:                     $trg_keys[] = $each_field['Field'];",
          "123:                     }",
          "124:                 }",
          "125:             }",
          "131:         $starting_index = 0;",
          "133:         for ($j = 0; $j < $source_size; $j++) {",
          "135:    $update_field = 0;",
          "140:                 $trg_select_query = \"SELECT * FROM \" . PMA_backquote($trg_db) . \".\"",
          "149:                             $trg_select_query .= \" AND \";",
          "151:                     }",
          "158:                     $src_select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\"",
          "167:                                 $src_select_query .= \" AND \";",
          "170:                     }",
          "",
          "[Added Lines]",
          "100:             }",
          "106:         $source_result_set = PMA_get_column_values($src_db, $matching_table[$matching_table_index], $is_key, $src_link);",
          "116:                     $trg_keys[] = $each_field['Field'];",
          "119:                     }",
          "120:                 }",
          "121:             }",
          "127:         $starting_index = 0;",
          "129:         for ($j = 0; $j < $source_size; $j++) {",
          "131:    $update_field = 0;",
          "136:                 $trg_select_query = \"SELECT * FROM \" . PMA_backquote($trg_db) . \".\"",
          "145:                             $trg_select_query .= \" AND \";",
          "147:                     }",
          "154:                     $src_select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\"",
          "163:                                 $src_select_query .= \" AND \";",
          "166:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "191:                                         }",
          "192:                                     }",
          "193:                                 }",
          "195:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "197:                                 $update_field++;",
          "198:                                 if (isset($src_result_set[0][$fld[$m]])) {",
          "200:                                     $update_field++;",
          "201:                                 }",
          "202:                                 $starting_index = $m;",
          "",
          "[Removed Lines]",
          "199:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "[Added Lines]",
          "195:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "215:                                         }",
          "216:                                     }",
          "217:                                 }",
          "219:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "221:                                 $update_field++;",
          "222:                                 if (isset($src_result_set[0][$fld[$m]])) {",
          "224:                                     $update_field++;",
          "225:                                 }",
          "226:                                 $starting_index = $m;",
          "",
          "[Removed Lines]",
          "223:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "[Added Lines]",
          "219:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "229:                       }",
          "230:                     }",
          "231:                     for ($m = $starting_index + 1; $m < $fields_num[$matching_table_index] ; $m++)",
          "233:                         if (isset($src_result_set[0][$fld[$m]])) {",
          "235:                                 if (($src_result_set[0][$fld[$m]] != $target_result_set[0][$fld[$m]]) && (!(in_array($fld[$m], $is_key)))) {",
          "237:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "238:                                 $update_field++;",
          "239:                                 if ($src_result_set[0][$fld[$m]]) {",
          "240:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "241:                                     $update_field++;",
          "242:                                 }",
          "244:                             }",
          "245:                         } else {",
          "247:                                 $update_array[$matching_table_index][$update_row][$update_field] = $fld[$m];",
          "248:                                 $update_field++;",
          "249:                                 if ($src_result_set[0][$fld[$m]]) {",
          "250:                                     $update_array[$matching_table_index][$update_row][$update_field] = $src_result_set[0][$fld[$m]];",
          "251:                                     $update_field++;",
          "252:                                 }",
          "254:                             }",
          "255:                         }",
          "256:                     }",
          "",
          "[Removed Lines]",
          "232:                     {",
          "234:                             if (isset($target_result_set[0][$fld[$m]])) {",
          "236:                                 $update_row--;",
          "243:                                 $update_row++;",
          "246:                                $update_row--;",
          "253:                                 $update_row++;",
          "",
          "[Added Lines]",
          "228:                     {",
          "230:                             if (isset($target_result_set[0][$fld[$m]])) {",
          "232:                                 $update_row--;",
          "239:                                 $update_row++;",
          "242:                                $update_row--;",
          "249:                                 $update_row++;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "262:                         if (isset($source_result_set[$j])) {",
          "263:                             $insert_array[$matching_table_index][$insert_row][$is_key[0]] = $source_result_set[$j];",
          "264:                         }",
          "266:                         for($l = 0; $l < sizeof($is_key); $l++) {",
          "267:                             if (isset($source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]])) {",
          "268:                                 $insert_array[$matching_table_index][$insert_row][$is_key[$l]] = $source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]];",
          "",
          "[Removed Lines]",
          "265:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "[Added Lines]",
          "261:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "274:             } else {",
          "279:                     if (sizeof($is_key) == 1) {",
          "280:                         if (isset($source_result_set[$j])) {",
          "281:                             $insert_array[$matching_table_index][$insert_row][$is_key[0]] = $source_result_set[$j];",
          "282:                         }",
          "284:                         for ($l = 0; $l < sizeof($is_key); $l++) {",
          "285:                             if (isset($source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]])) {",
          "286:                                 $insert_array[$matching_table_index][$insert_row][$is_key[$l]] = $source_result_set[$j][$matching_tables_fields[$matching_table_index][$l]];",
          "",
          "[Removed Lines]",
          "283:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "[Added Lines]",
          "279:                     } elseif (sizeof($is_key) > 1) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "290:                 $insert_row++;",
          "291:             }",
          "292:         } // for loop ends",
          "309: function PMA_findDeleteRowsFromTargetTables(&$delete_array, $matching_table, $matching_table_index, $trg_keys, $src_keys, $trg_db, $trg_link,$src_db, $src_link)",
          "310: {",
          "311:     if (isset($trg_keys[$matching_table_index])) {",
          "312:         $target_key_values = PMA_get_column_values($trg_db, $matching_table[$matching_table_index], $trg_keys[$matching_table_index], $trg_link);",
          "314:     }",
          "315:     if (isset($src_keys[$matching_table_index])) {",
          "316:         $source_key_values = PMA_get_column_values($src_db, $matching_table[$matching_table_index], $src_keys[$matching_table_index], $src_link);",
          "318:     }",
          "319:     $all_keys_match = 1;",
          "320:     for ($a = 0; $a < sizeof($trg_keys[$matching_table_index]); $a++) {",
          "",
          "[Removed Lines]",
          "293:     }",
          "294: }",
          "313:         $target_row_size = sizeof($target_key_values);",
          "317:         $source_size = sizeof($source_key_values);",
          "",
          "[Added Lines]",
          "289:     }",
          "290: }",
          "309:         $target_row_size = sizeof($target_key_values);",
          "313:         $source_size = sizeof($source_key_values);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "322:            if (! (in_array($trg_keys[$matching_table_index][$a], $src_keys[$matching_table_index]))) {",
          "323:                $all_keys_match = 0;",
          "324:            }",
          "326:     }",
          "327:     if (! ($all_keys_match)) {",
          "328:         if (isset($target_key_values)) {",
          "",
          "[Removed Lines]",
          "325:        }",
          "",
          "[Added Lines]",
          "321:        }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "331:     }",
          "332:     if (isset($trg_keys[$matching_table_index])) {",
          "333:         if ((sizeof($trg_keys[$matching_table_index]) == 1) && $all_keys_match) {",
          "335:            if (isset($target_key_values)) {",
          "336:                for ($i = 0; $i < sizeof($target_key_values); $i++) {",
          "337:                     if (! (in_array($target_key_values[$i], $source_key_values))) {",
          "338:                         $delete_array[$matching_table_index][$row] = $target_key_values[$i];",
          "340:                     }",
          "342:             }",
          "343:         } elseif ((sizeof($trg_keys[$matching_table_index]) > 1) && $all_keys_match) {",
          "345:             if (isset($target_key_values)) {",
          "346:                 for ($i = 0; $i < sizeof($target_key_values); $i++) {",
          "347:                     $is_present = false;",
          "",
          "[Removed Lines]",
          "334:            $row = 0;",
          "339:                         $row++;",
          "341:                 }",
          "344:             $row = 0;",
          "",
          "[Added Lines]",
          "330:            $row = 0;",
          "335:                         $row++;",
          "337:                 }",
          "340:             $row = 0;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "350:                         for ($k = 0; $k < sizeof($trg_keys[$matching_table_index]); $k++) {",
          "351:                             if ($target_key_values[$i][$trg_keys[$matching_table_index][$k]] != $source_key_values[$j][$trg_keys[$matching_table_index][$k]]) {",
          "352:                                 $check = false;",
          "354:                         }",
          "355:                         if ($check) {",
          "356:                             $is_present = true;",
          "",
          "[Removed Lines]",
          "353:                             }",
          "",
          "[Added Lines]",
          "349:                             }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "362:                         }",
          "363:                         $row++;",
          "364:                     }",
          "367:         }",
          "369: }",
          "381: function PMA_dataDiffInUncommonTables($source_tables_uncommon, $src_db, $src_link, $index, &$row_count)",
          "382: {",
          "386: }",
          "402: function PMA_updateTargetTables($table, $update_array, $src_db, $trg_db, $trg_link, $matching_table_index, $matching_table_keys, $display)",
          "404:     if (isset($update_array[$matching_table_index])) {",
          "405:         if (sizeof($update_array[$matching_table_index])) {",
          "407:             for ($update_row = 0; $update_row < sizeof($update_array[$matching_table_index]); $update_row++) {",
          "410:                      $update_fields_num = sizeof($update_array[$matching_table_index][$update_row])-sizeof($matching_table_keys[$matching_table_index]);",
          "411:                      if ($update_fields_num > 0) {",
          "414:                      for ($update_field = 0; $update_field < $update_fields_num; $update_field = $update_field+2) {",
          "415:                          if (isset($update_array[$matching_table_index][$update_row][$update_field]) && isset($update_array[$matching_table_index][$update_row][$update_field+1])) {",
          "416:                              $query .= $update_array[$matching_table_index][$update_row][$update_field] . \"='\" . $update_array[$matching_table_index][$update_row][$update_field+1] . \"'\";",
          "417:                          }",
          "418:                          if ($update_field < ($update_fields_num - 2)) {",
          "420:                          }",
          "421:                      }",
          "422:                      $query .= \" WHERE \";",
          "",
          "[Removed Lines]",
          "365:                 }",
          "366:             }",
          "368:     }",
          "383:    $query = \"SELECT COUNT(*) FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($source_tables_uncommon[$index]);",
          "384:    $rows  = PMA_DBI_fetch_result($query, null, null, $src_link);",
          "385:    $row_count[$index] = $rows[0];",
          "403: {",
          "409:                 if (isset($update_array[$matching_table_index][$update_row])) {",
          "412:                         $query = \"UPDATE \" . PMA_backquote($trg_db) . \".\" .PMA_backquote($table[$matching_table_index]) . \" SET \";",
          "419:                              $query .= \", \";",
          "",
          "[Added Lines]",
          "361:                 }",
          "362:             }",
          "364:     }",
          "378:    $query = \"SELECT COUNT(*) FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($source_tables_uncommon[$index]);",
          "379:    $rows  = PMA_DBI_fetch_result($query, null, null, $src_link);",
          "380:    $row_count[$index] = $rows[0];",
          "398: {",
          "404:                 if (isset($update_array[$matching_table_index][$update_row])) {",
          "407:                         $query = \"UPDATE \" . PMA_backquote($trg_db) . \".\" .PMA_backquote($table[$matching_table_index]) . \" SET \";",
          "414:                              $query .= \", \";",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "434:                     }",
          "435:                     if ($display == true) {",
          "436:                         echo \"<p>\" . $query . \"</p>\";",
          "438:                     PMA_DBI_try_query($query, $trg_link, 0);",
          "439:                     }",
          "441:             }",
          "442:         }",
          "443:     }",
          "444: }",
          "",
          "[Removed Lines]",
          "437:                     }",
          "440:                 }",
          "",
          "[Added Lines]",
          "431:                     }",
          "434:                 }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "476: function PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link, $trg_link, $table_fields, &$array_insert, $matching_table_index,",
          "478:  &$alter_str_array,&$source_indexes, &$target_indexes, &$add_indexes_array, &$alter_indexes_array, &$delete_array, &$update_array, $display)",
          "480:     if(isset($array_insert[$matching_table_index])) {",
          "481:         if (sizeof($array_insert[$matching_table_index])) {",
          "482:             for ($insert_row = 0; $insert_row< sizeof($array_insert[$matching_table_index]); $insert_row++) {",
          "483:                 if (isset($array_insert[$matching_table_index][$insert_row][$matching_tables_keys[$matching_table_index][0]])) {",
          "485:                     $select_query = \"SELECT * FROM \" . PMA_backquote($src_db) . \".\" . PMA_backquote($matching_table[$matching_table_index]) . \" WHERE \";",
          "486:                     for ($i = 0; $i < sizeof($matching_tables_keys[$matching_table_index]); $i++) {",
          "487:                         $select_query .= $matching_tables_keys[$matching_table_index][$i] . \"='\";",
          "488:                         $select_query .= $array_insert[$matching_table_index][$insert_row][$matching_tables_keys[$matching_table_index][$i]] . \"'\" ;",
          "490:                         if ($i < (sizeof($matching_tables_keys[$matching_table_index]) - 1)) {",
          "491:                             $select_query.= \" AND \";",
          "492:                         }",
          "",
          "[Removed Lines]",
          "477:  $matching_tables_keys, $source_columns, &$add_column_array, $criteria, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields,$uncommon_cols,",
          "479: {",
          "",
          "[Added Lines]",
          "469:  $matching_tables_keys, $source_columns, &$add_column_array, $criteria, $target_tables_keys, $uncommon_tables, &$uncommon_tables_fields,$uncommon_cols,",
          "471: {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "494:                     $select_query .= \"; \";",
          "495:                     $result = PMA_DBI_fetch_result ($select_query, null, null, $src_link);",
          "496:                     $insert_query = \"INSERT INTO \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_table[$matching_table_index]) .\" (\";",
          "499:                     {",
          "500:                         $insert_query .=  $table_fields[$matching_table_index][$field_index];",
          "503:                                          AND TABLE_NAME = '\" . $matching_table[$matching_table_index]. \"'AND COLUMN_NAME = '\" .",
          "504:                                          $table_fields[$matching_table_index][$field_index] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\" ;",
          "506:                         $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $trg_link);",
          "507:                         if (sizeof($is_fk_result) > 0) {",
          "508:                             for ($j = 0; $j < sizeof($is_fk_result); $j++)",
          "509:                             {",
          "510:                                 $table_index = array_keys($matching_table, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "512:                                 if (isset($alter_str_array[$table_index[0]])) {",
          "513:                                    PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables, $source_columns, $alter_str_array, $matching_tables_fields,",
          "514:                                     $criteria, $matching_tables_keys, $target_tables_keys, $table_index[0], $display);",
          "517:                                 if (isset($uncommon_columns[$table_index[0]])) {",
          "518:                                     PMA_removeColumnsFromTargetTable($trg_db, $trg_link, $matching_tables, $uncommon_columns, $table_index[0], $display);",
          "521:                                 if (isset($add_column_array[$table_index[0]])) {",
          "522:                                     PMA_findDeleteRowsFromTargetTables($delete_array, $matching_tables, $table_index[0], $target_tables_keys, $matching_tables_keys,",
          "523:                                     $trg_db, $trg_link, $src_db, $src_link);",
          "525:                                     if (isset($delete_array[$table_index[0]])) {",
          "526:                                        PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index[0], $target_tables_keys, $delete_array, $display);",
          "529:                                     PMA_addColumnsInTargetTable($src_db, $trg_db, $src_link, $trg_link, $matching_tables, $source_columns, $add_column_array,",
          "530:                                     $matching_tables_fields, $criteria, $matching_tables_keys, $target_tables_keys, $uncommon_tables,$uncommon_tables_fields,",
          "531:                                     $table_index[0], $uncommon_cols, $display);",
          "",
          "[Removed Lines]",
          "498:                     for ($field_index = 0; $field_index < sizeof($table_fields[$matching_table_index]); $field_index++)",
          "502:                         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db .\"'",
          "515:                                     unset($alter_str_array[$table_index[0]]);",
          "516:                                 }",
          "519:                                     unset($uncommon_columns[$table_index[0]]);",
          "520:                                 }",
          "527:                                        unset($delete_array[$table_index[0]]);",
          "528:                                     }",
          "",
          "[Added Lines]",
          "490:                     for ($field_index = 0; $field_index < sizeof($table_fields[$matching_table_index]); $field_index++)",
          "494:                         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db .\"'",
          "507:                                     unset($alter_str_array[$table_index[0]]);",
          "508:                                 }",
          "511:                                     unset($uncommon_columns[$table_index[0]]);",
          "512:                                 }",
          "519:                                        unset($delete_array[$table_index[0]]);",
          "520:                                     }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "548:                                 if (isset($array_insert[$table_index[0]])) {",
          "549:                                      PMA_insertIntoTargetTable($matching_table, $src_db, $trg_db, $src_link, $trg_link, $table_fields, $array_insert,",
          "550:                                      $table_index[0], $matching_tables_keys, $source_columns, $add_column_array, $criteria, $target_tables_keys, $uncommon_tables,",
          "553:                                      unset($array_insert[$table_index[0]]);",
          "555:                             }",
          "556:                         }",
          "557:                         if ($field_index < sizeof($table_fields[$matching_table_index])-1) {",
          "558:                             $insert_query .= \", \";",
          "559:                         }",
          "561:                     $insert_query .= \") VALUES(\";",
          "562:                     if (sizeof($table_fields[$matching_table_index]) == 1) {",
          "563:                          $insert_query .= \"'\" . PMA_sqlAddSlashes($result[0]) . \"'\";",
          "",
          "[Removed Lines]",
          "551:                                      $uncommon_tables_fields, $uncommon_cols, $alter_str_array, $source_indexes, $target_indexes, $add_indexes_array,",
          "552:                                      $alter_indexes_array, $delete_array, $update_array, $display);",
          "554:                                 }",
          "560:                     }",
          "",
          "[Added Lines]",
          "543:                                      $uncommon_tables_fields, $uncommon_cols, $alter_str_array, $source_indexes, $target_indexes, $add_indexes_array,",
          "544:                                      $alter_indexes_array, $delete_array, $update_array, $display);",
          "546:                                 }",
          "552:                     }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "570:                             }",
          "571:                             if ($field_index < (sizeof($table_fields[$matching_table_index])) - 1) {",
          "572:                                     $insert_query .= \" ,\" ;",
          "574:                         }",
          "576:                     $insert_query .= \");\";",
          "577:                     if ($display == true) {",
          "578:                         PMA_displayQuery($insert_query);",
          "579:                     }",
          "580:                     PMA_DBI_try_query($insert_query, $trg_link, 0);",
          "582:             }",
          "583:         }",
          "584:     }",
          "599: function PMA_createTargetTables($src_db, $trg_db, $src_link, $trg_link, &$uncommon_tables, $table_index, &$uncommon_tables_fields, $display)",
          "600: {",
          "601:     if (isset($uncommon_tables[$table_index])) {",
          "",
          "[Removed Lines]",
          "573:                             }",
          "575:                     }",
          "581:                 }",
          "585: }",
          "",
          "[Added Lines]",
          "565:                             }",
          "567:                     }",
          "573:                 }",
          "577: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "605:             $field_name = $each_field['Field'];",
          "606:             $fields[] = $field_name;",
          "607:         }",
          "610:         $Create_Query = PMA_DBI_fetch_value(\"SHOW CREATE TABLE \" . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), 0, 1, $src_link);",
          "614:                                             PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]),",
          "615:                                             $Create_Query,",
          "616:                                             $limit = 1",
          "617:         );",
          "620:                         AND TABLE_NAME = '\" . $uncommon_tables[$table_index] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\" ;",
          "622:         $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $src_link);",
          "623:         if (sizeof($is_fk_result) > 0) {",
          "624:             for ($j = 0; $j < sizeof($is_fk_result); $j++)",
          "",
          "[Removed Lines]",
          "608:         $uncommon_tables_fields[$table_index] = $fields;",
          "613:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "619:         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "",
          "[Added Lines]",
          "600:         $uncommon_tables_fields[$table_index] = $fields;",
          "605:         $Create_Table_Query = preg_replace('/' . preg_quote(PMA_backquote($uncommon_tables[$table_index]), '/') . '/',",
          "611:         $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "627:                     $table_index = array_keys($uncommon_tables, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "628:                     PMA_createTargetTables($src_db, $trg_db, $trg_link, $src_link, $uncommon_tables, $table_index[0], $uncommon_tables_fields, $display);",
          "629:                     unset($uncommon_tables[$table_index[0]]);",
          "631:             }",
          "632:          }",
          "633:          if ($display == true) {",
          "634:               echo '<p>' . $Create_Table_Query . '</p>';",
          "635:          }",
          "636:          PMA_DBI_try_query($Create_Table_Query, $trg_link, 0);",
          "638: }",
          "655:     $display = false; // todo: maybe display some of the queries if they are not too numerous",
          "656:     $unbuffered_result = PMA_DBI_try_query('SELECT * FROM ' . PMA_backquote($src_db) . '.' . PMA_backquote($uncommon_tables[$table_index]), $src_link, PMA_DBI_QUERY_UNBUFFERED);",
          "657:     if (false !== $unbuffered_result) {",
          "659:         while ($one_row = PMA_DBI_fetch_row($unbuffered_result)) {",
          "660:             $insert_query .= '(';",
          "661:             $key_of_last_value = count($one_row) - 1;",
          "",
          "[Removed Lines]",
          "630:                 }",
          "637:     }",
          "653: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $uncommon_tables, $table_index, $uncommon_tables_fields, $display)",
          "654: {",
          "658:         $insert_query = 'INSERT INTO ' . PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]) . ' VALUES';",
          "",
          "[Added Lines]",
          "622:                 }",
          "629:     }",
          "645: function PMA_populateTargetTables($src_db, $trg_db, $src_link, $trg_link, $uncommon_tables, $table_index, $uncommon_tables_fields, $display)",
          "646: {",
          "650:         $insert_query = 'INSERT INTO ' . PMA_backquote($trg_db) . '.' .PMA_backquote($uncommon_tables[$table_index]) . ' VALUES';",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "675:         PMA_DBI_try_query($insert_query, $trg_link, 0);",
          "676:     }",
          "677: }",
          "691: {",
          "692:     for($i = 0; $i < sizeof($delete_array[$table_index]); $i++) {",
          "693:         if (isset($target_tables_keys[$table_index])) {",
          "695:             for($y = 0; $y < sizeof($target_tables_keys[$table_index]); $y++) {",
          "696:                 $delete_query .= $target_tables_keys[$table_index][$y] . \" = '\";",
          "698:                 if (sizeof($target_tables_keys[$table_index]) == 1) {",
          "700:                 } elseif (sizeof($target_tables_keys[$table_index]) > 1) {",
          "701:                     $delete_query .= $delete_array[$table_index][$i][$target_tables_keys[$table_index][$y]] . \"'\";",
          "702:                 }",
          "703:                 if ($y < (sizeof($target_tables_keys[$table_index]) - 1)) {",
          "704:                     $delete_query .= ' AND ';",
          "705:                 }",
          "707:                             AND REFERENCED_TABLE_NAME = '\" . $matching_tables[$table_index].\"' AND REFERENCED_COLUMN_NAME = '\"",
          "708:                            . $target_tables_keys[$table_index][$y] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "710:                 $pk_query_result = PMA_DBI_fetch_result($pk_query, null, null, $trg_link);",
          "711:                 $result_size = sizeof($pk_query_result);",
          "713:                 if ($result_size > 0) {",
          "714:                     for ($b = 0; $b < $result_size; $b++) {",
          "715:                         $drop_pk_query = \"DELETE FROM \" . PMA_backquote($pk_query_result[$b]['TABLE_SCHEMA']) . \".\" . PMA_backquote($pk_query_result[$b]['TABLE_NAME']) . \" WHERE \" . $pk_query_result[$b]['COLUMN_NAME'] . \" = \" . $target_tables_keys[$table_index][$y] . \";\";",
          "716:                         PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "720:         }",
          "721:         if ($display == true) {",
          "723:         }",
          "724:         PMA_DBI_try_query($delete_query, $trg_link, 0);",
          "725:     }",
          "726: }",
          "",
          "[Removed Lines]",
          "690: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index, $target_tables_keys, $delete_array, $display)",
          "694:             $delete_query = 'DELETE FROM ' . PMA_backquote($trg_db) . '.' .PMA_backquote($matching_tables[$table_index]) . ' WHERE ';",
          "699:                     $delete_query .= $delete_array[$table_index][$i] . \"'\";",
          "706:                 $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "717:                     }",
          "718:                 }",
          "719:             }",
          "722:             echo '<p>' . $delete_query . '</p>';",
          "",
          "[Added Lines]",
          "682: function PMA_deleteFromTargetTable($trg_db, $trg_link, $matching_tables, $table_index, $target_tables_keys, $delete_array, $display)",
          "686:             $delete_query = 'DELETE FROM ' . PMA_backquote($trg_db) . '.' .PMA_backquote($matching_tables[$table_index]) . ' WHERE ';",
          "691:                     $delete_query .= $delete_array[$table_index][$i] . \"'\";",
          "698:                 $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "709:                     }",
          "710:                 }",
          "711:             }",
          "714:             echo '<p>' . $delete_query . '</p>';",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "755: function PMA_structureDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_columns, &$target_columns, &$alter_str_array,",
          "757: {",
          "759:     $source_columns[$matching_table_index] = PMA_DBI_get_columns_full($src_db, $matching_tables[$matching_table_index], null, $src_link);",
          "760:     $target_columns[$matching_table_index] = PMA_DBI_get_columns_full($trg_db, $matching_tables[$matching_table_index], null, $trg_link);",
          "761:     foreach ($source_columns[$matching_table_index] as $column_name => $each_column) {",
          "762:         if (isset($target_columns[$matching_table_index][$column_name]['Field'])) {",
          "764:             for ($i = 0; $i < sizeof($criteria); $i++) {",
          "765:                 if ($source_columns[$matching_table_index][$column_name][$criteria[$i]] != $target_columns[$matching_table_index][$column_name][$criteria[$i]]) {",
          "766:                     if (($criteria[$i] == 'Default') && ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == '' )) {",
          "768:                     } else {",
          "769:                         if (! (($criteria[$i] == 'Key') && (($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "772:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')))) {",
          "773:                             $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = $source_columns[$matching_table_index][$column_name][$criteria[$i]];",
          "774:                         }",
          "",
          "[Removed Lines]",
          "756:  &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys, $matching_table_index)",
          "767:                         $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = 'None';",
          "770:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "771:                             || ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')",
          "",
          "[Added Lines]",
          "747:  &$add_column_array, &$uncommon_columns, $criteria, &$target_tables_keys, $matching_table_index)",
          "758:                         $alter_str_array[$matching_table_index][$column_name][$criteria[$i]] = 'None';",
          "761:                             || ($target_columns[$matching_table_index][$column_name][$criteria[$i]] == 'MUL')",
          "762:                             || ($source_columns[$matching_table_index][$column_name][$criteria[$i]] == 'UNI')",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "783:     foreach ($target_columns[$matching_table_index] as $fld_name => $each_column) {",
          "784:         if (! (isset($source_columns[$matching_table_index][$fld_name]['Field']))) {",
          "786:         }",
          "787:         if ($target_columns[$matching_table_index][$fld_name]['Key'] == 'PRI') {",
          "788:             $keys[] = $fld_name;",
          "789:         }",
          "790:     }",
          "791:     if (isset($fields_uncommon)) {",
          "793:     }",
          "794:     if (isset($keys)) {",
          "796:     }",
          "797: }",
          "",
          "[Removed Lines]",
          "785:             $fields_uncommon[] = $fld_name;",
          "792:         $uncommon_columns[$matching_table_index] = $fields_uncommon;",
          "795:         $target_tables_keys[$matching_table_index] = $keys;",
          "",
          "[Added Lines]",
          "776:             $fields_uncommon[] = $fld_name;",
          "783:         $uncommon_columns[$matching_table_index] = $fields_uncommon;",
          "786:         $target_tables_keys[$matching_table_index] = $keys;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "826:             if($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Null'] == 'NO') {",
          "827:                 $query .= ' Not Null ';",
          "828:             } elseif ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Null'] == 'YES') {",
          "830:             }",
          "831:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Collation'] != '') {",
          "832:                 $query .= ' COLLATE ' . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Collation'];",
          "",
          "[Removed Lines]",
          "829:                 $query .= ' Null ';",
          "",
          "[Added Lines]",
          "820:                 $query .= ' Null ';",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "835:                 $query .= \" DEFAULT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Default'];",
          "836:             }",
          "837:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'] != '') {",
          "841:                 $trg_key_size = sizeof($target_tables_keys[$table_counter]);",
          "842:                 if ($trg_key_size) {",
          "843:                     $check = true;",
          "845:                         if (! (in_array($target_tables_keys[$table_counter], $uncommon_cols))) {",
          "846:                              $check = false;",
          "848:                     }",
          "849:                     if (! $check) {",
          "851:                     }",
          "853:                 $query .= \" , ADD PRIMARY KEY (\";",
          "854:                 for ($t = 0; $t < sizeof($matching_tables_keys[$table_counter]); $t++) {",
          "855:                     $query .= $matching_tables_keys[$table_counter][$t];",
          "",
          "[Removed Lines]",
          "838:                 $query .= \" COMMENT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'];",
          "839:             }",
          "840:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Key'] == 'PRI' ) {",
          "844:                     for ($a = 0; ($a < $trg_key_size) && ($check); $a++) {",
          "847:                          }",
          "850:                         $query .= \" ,DROP PRIMARY KEY \" ;",
          "852:                 }",
          "",
          "[Added Lines]",
          "829:                 $query .= \" COMMENT \" . $source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Comment'];",
          "830:             }",
          "831:             if ($source_columns[$table_counter][$matching_tables_fields[$table_counter][$i]]['Key'] == 'PRI' ) {",
          "835:                     for ($a = 0; ($a < $trg_key_size) && ($check); $a++) {",
          "838:                          }",
          "841:                         $query .= \" ,DROP PRIMARY KEY \" ;",
          "843:                 }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "886:                             \"ADD CONSTRAINT FOREIGN KEY \" . $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \"",
          "887:                             (\" . $add_column_array[$table_counter][$matching_tables_fields[$table_counter][$i]] . \") REFERENCES \" . PMA_backquote($trg_db) .",
          "888:                              '.' . PMA_backquote($is_fk_result[0]['REFERENCED_TABLE_NAME']) . \" (\" . $is_fk_result[0]['REFERENCED_COLUMN_NAME'] . \");\";",
          "891:             }",
          "892:         }",
          "893:     }",
          "",
          "[Removed Lines]",
          "890:                 PMA_DBI_try_query($fk_query, $trg_link, null);",
          "",
          "[Added Lines]",
          "881:                 PMA_DBI_try_query($fk_query, $trg_link, null);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "908: function PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link ,$referenced_table, &$uncommon_tables, &$uncommon_tables_fields, $display)",
          "909: {",
          "911:                     AND TABLE_NAME = '\" . $referenced_table . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "913:     $is_fk_result = PMA_DBI_fetch_result($is_fk_query, null, null, $src_link);",
          "914:     if (sizeof($is_fk_result) > 0) {",
          "915:         for ($j = 0; $j < sizeof($is_fk_result); $j++) {",
          "916:             if (in_array($is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables)) {",
          "917:                 $table_index = array_keys($uncommon_tables, $is_fk_result[$j]['REFERENCED_TABLE_NAME']);",
          "920:                 PMA_createTargetTables($src_db, $trg_db, $trg_link, $src_link, $uncommon_tables, $table_index[0], $uncommon_tables_fields, $display);",
          "921:                 unset($uncommon_tables[$table_index[0]]);",
          "923:         }",
          "924:     }",
          "925: }",
          "",
          "[Removed Lines]",
          "910:     $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "918:                 PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link, $is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables,",
          "919:                 $uncommon_tables_fields, $display);",
          "922:             }",
          "",
          "[Added Lines]",
          "901:     $is_fk_query = \"SELECT * FROM  information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $src_db . \"'",
          "909:                 PMA_checkForeignKeys($src_db, $src_link, $trg_db, $trg_link, $is_fk_result[$j]['REFERENCED_TABLE_NAME'], $uncommon_tables,",
          "910:                 $uncommon_tables_fields, $display);",
          "913:             }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "942: function PMA_alterTargetTableStructure($trg_db, $trg_link, $matching_tables, &$source_columns, &$alter_str_array, $matching_tables_fields, $criteria,",
          "944: {",
          "945:     $check = true;",
          "946:     $sql_query = '';",
          "",
          "[Removed Lines]",
          "943:  &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display)",
          "",
          "[Added Lines]",
          "933:  &$matching_tables_keys, &$target_tables_keys, $matching_table_index, $display)",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "969:         }",
          "970:         $pri_query .= \");\";",
          "971:     }",
          "973:     if (isset($pri_query)) {",
          "974:         if ($display == true) {",
          "975:             echo '<p>' . $pri_query . '</p>';",
          "976:         }",
          "978:     }",
          "979:     for ($t = 0; $t < sizeof($matching_tables_fields[$matching_table_index]); $t++) {",
          "980:         if ((isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]])) && (sizeof($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]) > 0)) {",
          "983:             $found = false;",
          "984:             for ($i = 0; $i < sizeof($criteria); $i++)",
          "985:             {",
          "986:                 if (isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]]) && $criteria[$i] != 'Key') {",
          "988:                     if (($criteria[$i] == 'Type') && (! isset($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i+1]]))) {",
          "989:                         if ($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i + 1]] == 'NO') {",
          "990:                             $sql_query .= \" Not Null\" ;",
          "",
          "[Removed Lines]",
          "977:         PMA_DBI_try_query($pri_query, $trg_link, 0);",
          "981:             $sql_query = 'ALTER TABLE ' . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$matching_table_index]) . ' MODIFY ' .",
          "982:             $matching_tables_fields[$matching_table_index][$t] . ' ' . $source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'];",
          "987:                     $found = true;",
          "",
          "[Added Lines]",
          "967:         PMA_DBI_try_query($pri_query, $trg_link, 0);",
          "971:             $sql_query = 'ALTER TABLE ' . PMA_backquote($trg_db) . '.' . PMA_backquote($matching_tables[$matching_table_index]) . ' MODIFY ' .",
          "972:             $matching_tables_fields[$matching_table_index][$t] . ' ' . $source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'];",
          "977:                     $found = true;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1015:                             if ($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'] != 'timestamp') {",
          "1016:                                 $sql_query .=  \" DEFAULT '\" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]] . \"'\";",
          "1017:                             } elseif($source_columns[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]]['Type'] == 'timestamp') {",
          "1019:                             }",
          "1020:                         } elseif (is_numeric($alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]])) {",
          "1021:                             $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "[Removed Lines]",
          "1018:                                 $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "[Added Lines]",
          "1008:                                 $sql_query .=  \" DEFAULT \" . $alter_str_array[$matching_table_index][$matching_tables_fields[$matching_table_index][$t]][$criteria[$i]];",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1053:     if ($check) {",
          "1054:         if ($display == true) {",
          "1055:             echo '<p>' . $query . '</p>';",
          "1057:         PMA_DBI_try_query($query, $trg_link, 0);",
          "1058:     }",
          "1059: }",
          "1071: function PMA_removeColumnsFromTargetTable($trg_db, $trg_link, $matching_tables, $uncommon_columns, $table_counter, $display)",
          "",
          "[Removed Lines]",
          "1056:         }",
          "",
          "[Added Lines]",
          "1046:         }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1074:         $drop_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1075:         for ($a = 0; $a < sizeof($uncommon_columns[$table_counter]); $a++) {",
          "1078:                          AND REFERENCED_TABLE_NAME = '\" . $matching_tables[$table_counter].\"' AND REFERENCED_COLUMN_NAME = '\"",
          "1079:                          . $uncommon_columns[$table_counter][$a] . \"' AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "1081:             $pk_query_result = PMA_DBI_fetch_result($pk_query, null, null, $trg_link);",
          "1082:             $result_size = sizeof($pk_query_result);",
          "1084:             if ($result_size > 0) {",
          "1085:                 for ($b = 0; $b < $result_size; $b++) {",
          "1086:                     $drop_pk_query = \"ALTER TABLE \" . PMA_backquote($pk_query_result[$b]['TABLE_SCHEMA']) . \".\" . PMA_backquote($pk_query_result[$b]['TABLE_NAME']) . \"",
          "1087:                                       DROP FOREIGN KEY \" . $pk_query_result[$b]['CONSTRAINT_NAME'] . \", DROP COLUMN \" . $pk_query_result[$b]['COLUMN_NAME'] . \";\";",
          "1092:                      . $matching_tables[$table_counter]. \"' AND COLUMN_NAME = '\" . $uncommon_columns[$table_counter][$a] . \"'",
          "1093:                       AND TABLE_NAME <> REFERENCED_TABLE_NAME;\";",
          "",
          "[Removed Lines]",
          "1077:             $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "1088:                     PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "1089:                 }",
          "1090:             }",
          "1091:             $query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db . \"' AND TABLE_NAME = '\"",
          "",
          "[Added Lines]",
          "1067:             $pk_query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = '\" . $trg_db . \"'",
          "1078:                     PMA_DBI_try_query($drop_pk_query, $trg_link, 0);",
          "1079:                 }",
          "1080:             }",
          "1081:             $query = \"SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = '\" . $trg_db . \"' AND TABLE_NAME = '\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1100:             $drop_query .=  \" DROP COLUMN \" . $uncommon_columns[$table_counter][$a];",
          "1101:             if ($a < (sizeof($uncommon_columns[$table_counter]) - 1)) {",
          "1102:                 $drop_query .= \" , \" ;",
          "1104:         }",
          "1105:         $drop_query .= \";\" ;",
          "1107:         if ($display == true) {",
          "1108:             echo '<p>' . $drop_query . '</p>';",
          "1109:         }",
          "1132: function PMA_indexesDiffInTables($src_db, $trg_db, $src_link, $trg_link, $matching_tables, &$source_indexes, &$target_indexes, &$add_indexes_array,",
          "1133:  &$alter_indexes_array, &$remove_indexes_array, $table_counter)",
          "1134: {",
          "1136:     $source_indexes[$table_counter] = PMA_get_table_indexes($src_db, $matching_tables[$table_counter],$src_link);",
          "1138:     for ($a = 0; $a < sizeof($source_indexes[$table_counter]); $a++) {",
          "1139:         $found = false;",
          "1140:         $z = 0;",
          "",
          "[Removed Lines]",
          "1103:             }",
          "1110:         PMA_DBI_try_query($drop_query, $trg_link, 0);",
          "1111:     }",
          "1112: }",
          "1137:     $target_indexes[$table_counter] = PMA_get_table_indexes($trg_db, $matching_tables[$table_counter],$trg_link);",
          "",
          "[Added Lines]",
          "1093:             }",
          "1100:         PMA_DBI_try_query($drop_query, $trg_link, 0);",
          "1101:     }",
          "1102: }",
          "1126:     $target_indexes[$table_counter] = PMA_get_table_indexes($trg_db, $matching_tables[$table_counter],$trg_link);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1152:                     }",
          "1153:                 }",
          "1154:             }",
          "1156:         }",
          "1157:         if ($found === false) {",
          "1158:             if(! ($source_indexes[$table_counter][$a]['Key_name'] == 'PRIMARY')) {",
          "1160:             }",
          "1161:         }",
          "1162:     }",
          "1165:     for ($b = 0; $b < sizeof($target_indexes[$table_counter]); $b++) {",
          "1166:         $found = false;",
          "",
          "[Removed Lines]",
          "1155:             $z++;",
          "1159:                 $add_indexes_array [$table_counter][] = $source_indexes[$table_counter][$a]['Column_name'];",
          "",
          "[Added Lines]",
          "1144:             $z++;",
          "1148:                 $add_indexes_array [$table_counter][] = $source_indexes[$table_counter][$a]['Column_name'];",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1170:             if ($target_indexes[$table_counter][$b]['Column_name'] == $source_indexes[$table_counter][$c]['Column_name']) {",
          "1171:                 $found = true;",
          "1172:             }",
          "1174:         }",
          "1175:         if ($found === false) {",
          "1177:         }",
          "1178:     }",
          "1179: }",
          "1196:           $remove_indexes_array, $table_counter, $display)",
          "1197: {",
          "",
          "[Removed Lines]",
          "1173:             $c++;",
          "1176:             $remove_indexes_array[$table_counter][] = $target_indexes[$table_counter][$b]['Key_name'];",
          "1195: function PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "",
          "[Added Lines]",
          "1162:             $c++;",
          "1165:             $remove_indexes_array[$table_counter][] = $target_indexes[$table_counter][$b]['Key_name'];",
          "1184: function PMA_applyIndexesDiff ($trg_db, $trg_link, $matching_tables, $source_indexes, $target_indexes, $add_indexes_array, $alter_indexes_array,",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1200:         $sql = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]) . \" ADD\" ;",
          "1201:         for ($a = 0; $a < sizeof($source_indexes[$table_counter]); $a++) {",
          "1202:             if (isset($add_indexes_array[$table_counter][$a])) {",
          "1204:                     if ($source_indexes[$table_counter][$b]['Column_name'] == $add_indexes_array[$table_counter][$a]) {",
          "1205:                         if ($source_indexes[$table_counter][$b]['Non_unique'] == '0') {",
          "1206:                             $sql .= \" UNIQUE \";",
          "",
          "[Removed Lines]",
          "1203:                 for ($b = 0; $b < sizeof($source_indexes[$table_counter]); $b++) {",
          "",
          "[Added Lines]",
          "1192:                 for ($b = 0; $b < sizeof($source_indexes[$table_counter]); $b++) {",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1221:         $query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1222:         for ($a = 0; $a < sizeof($alter_indexes_array[$table_counter]); $a++) {",
          "1223:             if (isset($alter_indexes_array[$table_counter][$a])) {",
          "1225:                 $got_first_index_column = false;",
          "1227:                     if ($source_indexes[$table_counter][$z]['Key_name'] == $alter_indexes_array[$table_counter][$a]) {",
          "1228:                         if (! $got_first_index_column) {",
          "1229:                             if ($source_indexes[$table_counter][$z]['Non_unique'] == '0') {",
          "",
          "[Removed Lines]",
          "1224:                 $query .= ' DROP INDEX ' . PMA_backquote($alter_indexes_array[$table_counter][$a]) . \" , ADD \";",
          "1226:                 for ($z = 0; $z < sizeof($source_indexes[$table_counter]); $z++) {",
          "",
          "[Added Lines]",
          "1213:                 $query .= ' DROP INDEX ' . PMA_backquote($alter_indexes_array[$table_counter][$a]) . \" , ADD \";",
          "1215:                 for ($z = 0; $z < sizeof($source_indexes[$table_counter]); $z++) {",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1250:         $drop_index_query = \"ALTER TABLE \" . PMA_backquote($trg_db) . \".\" . PMA_backquote($matching_tables[$table_counter]);",
          "1251:         for ($a = 0; $a < sizeof($target_indexes[$table_counter]); $a++) {",
          "1252:             if (isset($remove_indexes_array[$table_counter][$a])) {",
          "1254:             }",
          "1255:             if ($a < (sizeof($remove_indexes_array[$table_counter]) - 1)) {",
          "1256:                 $drop_index_query .= \" , \" ;",
          "1257:             }",
          "1258:         }",
          "1260:         if ($display == true) {",
          "1261:             echo '<p>' . $drop_index_query . '</p>';",
          "1262:         }",
          "1264:     }",
          "1265: }",
          "1273: function PMA_displayQuery($query) {",
          "1274:     if (strlen($query) > $GLOBALS['cfg']['MaxCharactersInDisplayedSQL']) {",
          "",
          "[Removed Lines]",
          "1253:                 $drop_index_query .= \" DROP INDEX \" . $remove_indexes_array[$table_counter][$a];",
          "1259:         $drop_index_query .= \" ; \" ;",
          "1263:         PMA_DBI_try_query($drop_index_query, $trg_link, 0);",
          "",
          "[Added Lines]",
          "1242:                 $drop_index_query .= \" DROP INDEX \" . $remove_indexes_array[$table_counter][$a];",
          "1248:         $drop_index_query .= \" ; \" ;",
          "1252:         PMA_DBI_try_query($drop_index_query, $trg_link, 0);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1278: }",
          "1285: function PMA_syncDisplayHeaderSource($src_db) {",
          "1288:     echo '<table id=\"serverstatusconnections\" class=\"data\" width=\"55%\">';",
          "1289:     echo '<tr>';",
          "",
          "[Removed Lines]",
          "1286:     echo '<div id=\"serverstatus\" style = \"overflow: auto; width: 1020px; height: 220px; border-left: 1px gray solid; border-bottom: 1px gray solid; padding:0px; margin-bottom: 1em \"> ';",
          "",
          "[Added Lines]",
          "1275:     echo '<div id=\"serverstatus\" style = \"overflow: auto; width: 1020px; height: 220px; border-left: 1px gray solid; border-bottom: 1px gray solid; padding:0; margin-bottom: 1em \"> ';",
          "",
          "---------------"
        ]
      }
    }
  ]
}