{
  "cve_id": "CVE-2016-7125",
  "cve_desc": "ext/session/session.c in PHP before 5.6.25 and 7.x before 7.0.10 skips invalid session names in a way that triggers incorrect parsing, which allows remote attackers to inject arbitrary-type session data by leveraging control of a session name, as demonstrated by object injection.",
  "repo": "php/php-src",
  "patch_hash": "8763c6090d627d8bb0ee1d030c30e58f406be9ce",
  "patch_info": {
    "commit_hash": "8763c6090d627d8bb0ee1d030c30e58f406be9ce",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/8763c6090d627d8bb0ee1d030c30e58f406be9ce",
    "files": [
      "ext/session/session.c",
      "ext/session/tests/bug72681.phpt"
    ],
    "message": "Fix bug #72681 - consume data even if we're not storing them",
    "before_after_code_files": [
      "ext/session/session.c||ext/session/session.c",
      "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
    ]
  },
  "patch_diff": {
    "ext/session/session.c||ext/session/session.c": [
      "File: ext/session/session.c -> ext/session/session.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "924:  int namelen;",
      "925:  int has_value;",
      "926:  php_unserialize_data_t var_hash;",
      "928:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
      "930:  for (p = val; p < endptr; ) {",
      "931:   zval **tmp;",
      "932:   namelen = ((unsigned char)(*p)) & (~PS_BIN_UNDEF);",
      "934:   if (namelen < 0 || namelen > PS_BIN_MAX || (p + namelen) >= endptr) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "927:  int skip = 0;",
      "933:   skip = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "945:   if (zend_hash_find(&EG(symbol_table), name, namelen + 1, (void **) &tmp) == SUCCESS) {",
      "946:    if ((Z_TYPE_PP(tmp) == IS_ARRAY && Z_ARRVAL_PP(tmp) == &EG(symbol_table)) || *tmp == PS(http_session_vars)) {",
      "949:    }",
      "950:   }",
      "952:   if (has_value) {",
      "953:    ALLOC_INIT_ZVAL(current);",
      "954:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
      "956:    } else {",
      "957:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
      "958:     return FAILURE;",
      "959:    }",
      "960:    var_push_dtor_no_addref(&var_hash, &current);",
      "961:   }",
      "963:   efree(name);",
      "964:  }",
      "",
      "[Removed Lines]",
      "947:     efree(name);",
      "948:     continue;",
      "955:     php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "962:   PS_ADD_VARL(name, namelen);",
      "",
      "[Added Lines]",
      "949:     skip = 1;",
      "956:     if (!skip) {",
      "957:      php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "958:     }",
      "965:   if (!skip) {",
      "966:    PS_ADD_VARL(name, namelen);",
      "967:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1016:  int namelen;",
      "1017:  int has_value;",
      "1018:  php_unserialize_data_t var_hash;",
      "1020:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1024:  int skip = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1024:  while (p < endptr) {",
      "1025:   zval **tmp;",
      "1026:   q = p;",
      "1027:   while (*q != PS_DELIMITER) {",
      "1028:    if (++q >= endptr) goto break_outer_loop;",
      "1029:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1033:   skip = 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1041:   if (zend_hash_find(&EG(symbol_table), name, namelen + 1, (void **) &tmp) == SUCCESS) {",
      "1042:    if ((Z_TYPE_PP(tmp) == IS_ARRAY && Z_ARRVAL_PP(tmp) == &EG(symbol_table)) || *tmp == PS(http_session_vars)) {",
      "1044:    }",
      "1045:   }",
      "1047:   if (has_value) {",
      "1048:    ALLOC_INIT_ZVAL(current);",
      "1049:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
      "1051:    } else {",
      "1052:     var_push_dtor_no_addref(&var_hash, &current);",
      "1053:     efree(name);",
      "",
      "[Removed Lines]",
      "1043:     goto skip;",
      "1050:     php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "",
      "[Added Lines]",
      "1050:     skip = 1;",
      "1057:     if (!skip) {",
      "1058:      php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "1059:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1056:    }",
      "1057:    var_push_dtor_no_addref(&var_hash, &current);",
      "1058:   }",
      "1060: skip:",
      "1061:   efree(name);",
      "",
      "[Removed Lines]",
      "1059:   PS_ADD_VARL(name, namelen);",
      "",
      "[Added Lines]",
      "1068:   if (!skip) {",
      "1069:    PS_ADD_VARL(name, namelen);",
      "1070:   }",
      "",
      "---------------"
    ],
    "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt": [
      "File: ext/session/tests/bug72681.phpt -> ext/session/tests/bug72681.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72681: PHP Session Data Injection Vulnerability",
      "3: --SKIPIF--",
      "4: <?php include('skipif.inc'); ?>",
      "5: --FILE--",
      "6: <?php",
      "7: ini_set('session.serialize_handler', 'php');",
      "8: session_start();",
      "9: $_SESSION['_SESSION'] = 'ryat|O:8:\"stdClass\":0:{}';",
      "10: session_write_close();",
      "11: session_start();",
      "12: var_dump($_SESSION);",
      "13: ?>",
      "14: --EXPECT--",
      "15: array(0) {",
      "16: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
      "candidate_info": {
        "commit_hash": "6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
        "files": [
          "ext/session/php_session.h",
          "ext/session/session.c",
          "ext/spl/spl_observer.c",
          "ext/standard/php_var.h",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed unserialize()",
        "before_after_code_files": [
          "ext/session/php_session.h||ext/session/php_session.h",
          "ext/session/session.c||ext/session/session.c",
          "ext/spl/spl_observer.c||ext/spl/spl_observer.c",
          "ext/standard/php_var.h||ext/standard/php_var.h",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/php_session.h||ext/session/php_session.h": [
          "File: ext/session/php_session.h -> ext/session/php_session.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: PHPAPI void session_adapt_url(const char *, size_t, char **, size_t * TSRMLS_DC);",
          "223: PHPAPI void php_add_session_var(zend_string *name TSRMLS_DC);",
          "225: PHPAPI zval *php_get_session_var(zend_string *name TSRMLS_DC);",
          "227: PHPAPI int php_session_register_module(ps_module *);",
          "",
          "[Removed Lines]",
          "224: PHPAPI void php_set_session_var(zend_string *name, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "[Added Lines]",
          "224: PHPAPI zval *php_set_session_var(zend_string *name, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159: }",
          "163: {",
          "164:  IF_SESSION_VARS() {",
          "166:  }",
          "167: }",
          "",
          "[Removed Lines]",
          "165:   zend_set_hash_symbol(state_val, name->val, name->len, Z_ISREF_P(state_val), 1, Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))));",
          "",
          "[Added Lines]",
          "165:   return zend_hash_update(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), name, state_val);",
          "167:  return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "924:   }",
          "926:   if (has_value) {",
          "928:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "930:    }",
          "932:   }",
          "933:   PS_ADD_VARL(name);",
          "934:   STR_RELEASE(name);",
          "",
          "[Removed Lines]",
          "927:    ZVAL_NULL(&current);",
          "929:     php_set_session_var(name, &current, &var_hash  TSRMLS_CC);",
          "931:    zval_ptr_dtor(&current);",
          "",
          "[Added Lines]",
          "928:    ZVAL_UNDEF(&current);",
          "930:     zval *zv = php_set_session_var(name, &current, &var_hash  TSRMLS_CC);",
          "931:     var_replace(&var_hash, &current, zv);",
          "932:    } else {",
          "933:     zval_ptr_dtor(&current);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "978: {",
          "979:  const char *p, *q;",
          "980:  const char *endptr = val + vallen;",
          "982:  int has_value;",
          "983:  int namelen;",
          "984:  zend_string *name;",
          "",
          "[Removed Lines]",
          "981:  zval stack, *current = NULL;",
          "",
          "[Added Lines]",
          "984:  zval current;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "989:  p = val;",
          "992:  while (p < endptr) {",
          "993:   zval *tmp;",
          "994:   q = p;",
          "",
          "[Removed Lines]",
          "991:  array_init(&stack);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1013:   }",
          "1015:   if (has_value) {",
          "1022:    }",
          "1023:   }",
          "1024:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "1016:    zval dummy;",
          "1017:    ZVAL_NULL(&dummy);",
          "1019:    current = zend_hash_next_index_insert(Z_ARRVAL(stack), &dummy);",
          "1020:    if (php_var_unserialize(current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1021:     php_set_session_var(name, current, &var_hash TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1018:    ZVAL_UNDEF(&current);",
          "1019:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1020:     zval *zv = php_set_session_var(name, &current, &var_hash TSRMLS_CC);",
          "1021:     var_replace(&var_hash, &current, zv);",
          "1022:    } else {",
          "1023:     zval_ptr_dtor(&current);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1030: break_outer_loop:",
          "1032:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1035:  return SUCCESS;",
          "1036: }",
          "",
          "[Removed Lines]",
          "1033:  zval_ptr_dtor(&stack);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
          "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:    ZVAL_NULL(&pelement->inf);",
          "214:   }",
          "215:   spl_object_storage_free_hash(intern, hash);",
          "217:  }",
          "219:  ZVAL_COPY(&element.obj, obj);",
          "",
          "[Removed Lines]",
          "216:   return;",
          "",
          "[Added Lines]",
          "216:   return pelement;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:  } else {",
          "223:   ZVAL_NULL(&element.inf);",
          "224:  }",
          "226:  spl_object_storage_free_hash(intern, hash);",
          "",
          "[Removed Lines]",
          "225:  zend_hash_update_mem(&intern->storage, hash, &element, sizeof(spl_SplObjectStorageElement));",
          "",
          "[Added Lines]",
          "225:  pelement = zend_hash_update_mem(&intern->storage, hash, &element, sizeof(spl_SplObjectStorageElement));",
          "227:  return pelement;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "796:  const unsigned char *p, *s;",
          "797:  php_unserialize_data_t var_hash;",
          "798:  zval entry, pmembers, pcount, inf;",
          "799:  long count;",
          "801:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &buf, &buf_len) == FAILURE) {",
          "802:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "800:  spl_SplObjectStorageElement *element;",
          "802:  HashPosition pos;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "869:     var_push_dtor(&var_hash, &pelement->obj);",
          "870:    }",
          "871:   }",
          "873:   zval_ptr_dtor(&entry);",
          "874:   zval_ptr_dtor(&inf);",
          "875:  }",
          "",
          "[Removed Lines]",
          "872:   spl_object_storage_attach(intern, getThis(), &entry, &inf TSRMLS_CC);",
          "",
          "[Added Lines]",
          "876:   element = spl_object_storage_attach(intern, getThis(), &entry, &inf TSRMLS_CC);",
          "877:   var_replace(&var_hash, &entry, &element->obj);",
          "878:   var_replace(&var_hash, &inf, &element->inf);",
          "",
          "---------------"
        ],
        "ext/standard/php_var.h||ext/standard/php_var.h": [
          "File: ext/standard/php_var.h -> ext/standard/php_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: PHPAPI void php_var_serialize(smart_str *buf, zval *struc, php_serialize_data_t *var_hash TSRMLS_DC);",
          "53: PHPAPI int php_var_unserialize(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "54: PHPAPI int php_var_unserialize_intern(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "56: #define PHP_VAR_SERIALIZE_INIT(var_hash_ptr) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: PHPAPI int php_var_unserialize_ref(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:  } \\",
          "115: } while (0)",
          "117: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hash, zval *val);",
          "118: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval);",
          "119: PHPAPI void var_destroy(php_unserialize_data_t *var_hash);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hash, zval *ozval, zval *nzval);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  void *next;",
          "35: } var_entries;",
          "37: static inline void var_push(php_unserialize_data_t *var_hashx, zval *rval)",
          "38: {",
          "39:  var_entries *var_hash = (*var_hashx)->last;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: typedef struct {",
          "38:  zval data[VAR_ENTRIES_MAX];",
          "39:  long used_slots;",
          "40:  void *next;",
          "41: } var_dtor_entries;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "62: {",
          "64: #if VAR_ENTRIES_DBG",
          "65:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "66: #endif",
          "68:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "70:   var_hash->used_slots = 0;",
          "71:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "63:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "69:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "69:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "75:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:   (*var_hashx)->last_dtor = var_hash;",
          "80:  }",
          "84: }",
          "87: #if 0",
          "88: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "89: {",
          "91: #if VAR_ENTRIES_DBG",
          "92:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "93: #endif",
          "95:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "97:   var_hash->used_slots = 0;",
          "98:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "82:  if (Z_REFCOUNTED_P(rval)) Z_ADDREF_P(rval);",
          "83:  var_hash->data[var_hash->used_slots++] = rval;",
          "90:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "96:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "88:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "89:  var_hash->used_slots++;",
          "96:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "102:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:   (*var_hashx)->last_dtor = var_hash;",
          "107:  }",
          "110: }",
          "111: #endif",
          "114: {",
          "115:  var_entries *var_hash = (*var_hashx)->first;",
          "116: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "109:  var_hash->data[var_hash->used_slots++] = rval;",
          "113: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "",
          "[Added Lines]",
          "115:  ZVAL_COPY_VALUE(&var_hash->data[var_hash->used_slots], rval);",
          "116:  var_hash->used_slots++;",
          "120: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "121: {",
          "122:  long i;",
          "123:  var_entries *var_hash = (*var_hashx)->first;",
          "124: #if VAR_ENTRIES_DBG",
          "125:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "126: #endif",
          "128:  while (var_hash) {",
          "129:   for (i = 0; i < var_hash->used_slots; i++) {",
          "130:    if (var_hash->data[i] == ozval) {",
          "131:     var_hash->data[i] = nzval;",
          "133:    }",
          "134:   }",
          "135:   var_hash = var_hash->next;",
          "136:  }",
          "137: }",
          "139: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "122:   id -= VAR_ENTRIES_MAX;",
          "123:  }",
          "132: }",
          "134: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "",
          "[Removed Lines]",
          "125:  if (!var_hash) return !SUCCESS;",
          "127:  if (id < 0 || id >= var_hash->used_slots) return !SUCCESS;",
          "131:  return SUCCESS;",
          "",
          "[Added Lines]",
          "151:  if (!var_hash) return NULL;",
          "153:  if (id < 0 || id >= var_hash->used_slots) return NULL;",
          "155:  return var_hash->data[id];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "136:  void *next;",
          "137:  long i;",
          "138:  var_entries *var_hash = (*var_hashx)->first;",
          "139: #if VAR_ENTRIES_DBG",
          "140:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "141: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "146:   var_hash = next;",
          "147:  }",
          "154:   }",
          "158:  }",
          "159: }",
          "",
          "[Removed Lines]",
          "149:  var_hash = (*var_hashx)->first_dtor;",
          "151:  while (var_hash) {",
          "152:   for (i = 0; i < var_hash->used_slots; i++) {",
          "153:    zval_ptr_dtor(var_hash->data[i]);",
          "155:   next = var_hash->next;",
          "156:   efree(var_hash);",
          "157:   var_hash = next;",
          "",
          "[Added Lines]",
          "174:  while (var_dtor_hash) {",
          "175:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "176:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "178:   next = var_dtor_hash->next;",
          "179:   efree(var_dtor_hash);",
          "180:   var_dtor_hash = next;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "210: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "213: #line 218 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "236: #line 241 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "443:  start = cursor;",
          "447: {",
          "448:  YYCTYPE yych;",
          "449:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "446: #line 447 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "472: #line 473 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "503:  yych = *(YYMARKER = ++YYCURSOR);",
          "504:  if (yych == ':') goto yy95;",
          "505: yy3:",
          "507:  { return 0; }",
          "509: yy4:",
          "510:  yych = *(YYMARKER = ++YYCURSOR);",
          "511:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "506: #line 793 \"ext/standard/var_unserializer.re\"",
          "508: #line 509 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "532: #line 817 \"ext/standard/var_unserializer.re\"",
          "534: #line 535 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "548:  goto yy3;",
          "549: yy14:",
          "550:  ++YYCURSOR;",
          "552:  {",
          "554:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "556: }",
          "558: yy16:",
          "559:  yych = *++YYCURSOR;",
          "560:  goto yy3;",
          "",
          "[Removed Lines]",
          "551: #line 787 \"ext/standard/var_unserializer.re\"",
          "557: #line 558 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "577: #line 811 \"ext/standard/var_unserializer.re\"",
          "583: #line 584 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "584:  yych = *++YYCURSOR;",
          "585:  if (yych != '\"') goto yy18;",
          "586:  ++YYCURSOR;",
          "588:  {",
          "589:  size_t len, len2, len3, maxlen;",
          "590:  long elements;",
          "",
          "[Removed Lines]",
          "587: #line 648 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "613: #line 672 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "724:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "725: }",
          "727: yy25:",
          "728:  yych = *++YYCURSOR;",
          "729:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "726: #line 727 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "752: #line 753 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "748:  yych = *++YYCURSOR;",
          "749:  if (yych != '\"') goto yy18;",
          "750:  ++YYCURSOR;",
          "752:  {",
          "",
          "[Removed Lines]",
          "751: #line 640 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "777: #line 664 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "756:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "757:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "758: }",
          "760: yy32:",
          "761:  yych = *++YYCURSOR;",
          "762:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "759: #line 760 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "785: #line 786 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "777:  yych = *++YYCURSOR;",
          "778:  if (yych != '{') goto yy18;",
          "779:  ++YYCURSOR;",
          "781:  {",
          "782:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "780: #line 619 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "806: #line 643 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "799:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "800: }",
          "802: yy39:",
          "803:  yych = *++YYCURSOR;",
          "804:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "801: #line 802 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "827: #line 828 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "819:  yych = *++YYCURSOR;",
          "820:  if (yych != '\"') goto yy18;",
          "821:  ++YYCURSOR;",
          "823:  {",
          "824:  size_t len, maxlen;",
          "",
          "[Removed Lines]",
          "822: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "848: #line 613 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "849:  efree(str);",
          "850:  return 1;",
          "851: }",
          "853: yy46:",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "878: #line 879 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "870:  yych = *++YYCURSOR;",
          "871:  if (yych != '\"') goto yy18;",
          "872:  ++YYCURSOR;",
          "874:  {",
          "875:  size_t len, maxlen;",
          "876:  char *str;",
          "",
          "[Removed Lines]",
          "873: #line 562 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "899: #line 586 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "897:  ZVAL_STRINGL(rval, str, len);",
          "898:  return 1;",
          "899: }",
          "901: yy53:",
          "902:  yych = *++YYCURSOR;",
          "903:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "900: #line 901 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "926: #line 927 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "985:  }",
          "986: yy63:",
          "987:  ++YYCURSOR;",
          "989:  {",
          "990: #if SIZEOF_LONG == 4",
          "991: use_double:",
          "",
          "[Removed Lines]",
          "988: #line 553 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1014: #line 577 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "994:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "995:  return 1;",
          "996: }",
          "998: yy65:",
          "999:  yych = *++YYCURSOR;",
          "1000:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "997: #line 998 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1023: #line 1024 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1053:  yych = *++YYCURSOR;",
          "1054:  if (yych != ';') goto yy18;",
          "1055:  ++YYCURSOR;",
          "1057:  {",
          "",
          "[Removed Lines]",
          "1056: #line 537 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1082: #line 561 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1070:  return 1;",
          "1071: }",
          "1073: yy76:",
          "1074:  yych = *++YYCURSOR;",
          "1075:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1072: #line 1073 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1098: #line 1099 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1096:  if (yych <= '9') goto yy79;",
          "1097:  if (yych != ';') goto yy18;",
          "1098:  ++YYCURSOR;",
          "1100:  {",
          "1101: #if SIZEOF_LONG == 4",
          "1102:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1099: #line 511 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1125: #line 535 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1122:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1123:  return 1;",
          "1124: }",
          "1126: yy83:",
          "1127:  yych = *++YYCURSOR;",
          "1128:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1125: #line 1126 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1151: #line 1152 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1130:  yych = *++YYCURSOR;",
          "1131:  if (yych != ';') goto yy18;",
          "1132:  ++YYCURSOR;",
          "1134:  {",
          "1136:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1137:  return 1;",
          "1138: }",
          "1140: yy87:",
          "1141:  ++YYCURSOR;",
          "1143:  {",
          "1145:  ZVAL_NULL(rval);",
          "1146:  return 1;",
          "1147: }",
          "1149: yy89:",
          "1150:  yych = *++YYCURSOR;",
          "1151:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1133: #line 505 \"ext/standard/var_unserializer.re\"",
          "1139: #line 1140 \"ext/standard/var_unserializer.c\"",
          "1142: #line 499 \"ext/standard/var_unserializer.re\"",
          "1148: #line 1149 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1159: #line 529 \"ext/standard/var_unserializer.re\"",
          "1165: #line 1166 \"ext/standard/var_unserializer.c\"",
          "1168: #line 523 \"ext/standard/var_unserializer.re\"",
          "1174: #line 1175 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1168:  if (yych <= '9') goto yy91;",
          "1169:  if (yych != ';') goto yy18;",
          "1170:  ++YYCURSOR;",
          "1172:  {",
          "1173:  long id;",
          "",
          "[Removed Lines]",
          "1171: #line 476 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1197: #line 500 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1176:  if (!var_hash) return 0;",
          "1178:  id = parse_iv(start + 2) - 1;",
          "1180:   return 0;",
          "1181:  }",
          "",
          "[Removed Lines]",
          "1179:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "",
          "[Added Lines]",
          "1205:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1192:  return 1;",
          "1193: }",
          "1195: yy95:",
          "1196:  yych = *++YYCURSOR;",
          "1197:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1194: #line 1195 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1220: #line 1221 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1214:  if (yych <= '9') goto yy97;",
          "1215:  if (yych != ';') goto yy18;",
          "1216:  ++YYCURSOR;",
          "1218:  {",
          "1219:  long id;",
          "",
          "[Removed Lines]",
          "1217: #line 451 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1243: #line 477 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1222:  if (!var_hash) return 0;",
          "1224:  id = parse_iv(start + 2) - 1;",
          "1226:   return 0;",
          "1227:  }",
          "1232:  if (Z_ISREF_P(rval_ref)) {",
          "1233:   ZVAL_COPY(rval, rval_ref);",
          "1234:  } else {",
          "",
          "[Removed Lines]",
          "1225:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1229:  if (!ZVAL_IS_UNDEF(rval)) {",
          "1230:   zval_ptr_dtor(rval);",
          "1231:  }",
          "",
          "[Added Lines]",
          "1251:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1255:  zval_ptr_dtor(rval);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1240:  return 1;",
          "1241: }",
          "1243: }",
          "1247:  return 0;",
          "",
          "[Removed Lines]",
          "1242: #line 1243 \"ext/standard/var_unserializer.c\"",
          "1244: #line 795 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
          "1268: #line 819 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  void *next;",
          "33: } var_entries;",
          "35: static inline void var_push(php_unserialize_data_t *var_hashx, zval *rval)",
          "36: {",
          "37:  var_entries *var_hash = (*var_hashx)->last;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: typedef struct {",
          "36:  zval data[VAR_ENTRIES_MAX];",
          "37:  long used_slots;",
          "38:  void *next;",
          "39: } var_dtor_entries;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "60: {",
          "62: #if VAR_ENTRIES_DBG",
          "63:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "64: #endif",
          "66:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "68:   var_hash->used_slots = 0;",
          "69:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "61:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "67:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "67:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "73:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:   (*var_hashx)->last_dtor = var_hash;",
          "78:  }",
          "82: }",
          "85: #if 0",
          "86: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "87: {",
          "89: #if VAR_ENTRIES_DBG",
          "90:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "91: #endif",
          "93:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "95:   var_hash->used_slots = 0;",
          "96:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "80:  if (Z_REFCOUNTED_P(rval)) Z_ADDREF_P(rval);",
          "81:  var_hash->data[var_hash->used_slots++] = rval;",
          "88:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "94:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "86:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "87:  var_hash->used_slots++;",
          "94:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "100:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:   (*var_hashx)->last_dtor = var_hash;",
          "105:  }",
          "108: }",
          "109: #endif",
          "112: {",
          "113:  var_entries *var_hash = (*var_hashx)->first;",
          "114: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "107:  var_hash->data[var_hash->used_slots++] = rval;",
          "111: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "",
          "[Added Lines]",
          "113:  ZVAL_COPY_VALUE(&var_hash->data[var_hash->used_slots], rval);",
          "114:  var_hash->used_slots++;",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "119: {",
          "120:  long i;",
          "121:  var_entries *var_hash = (*var_hashx)->first;",
          "122: #if VAR_ENTRIES_DBG",
          "123:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "124: #endif",
          "126:  while (var_hash) {",
          "127:   for (i = 0; i < var_hash->used_slots; i++) {",
          "128:    if (var_hash->data[i] == ozval) {",
          "129:     var_hash->data[i] = nzval;",
          "131:    }",
          "132:   }",
          "133:   var_hash = var_hash->next;",
          "134:  }",
          "135: }",
          "137: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "120:   id -= VAR_ENTRIES_MAX;",
          "121:  }",
          "130: }",
          "132: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "",
          "[Removed Lines]",
          "123:  if (!var_hash) return !SUCCESS;",
          "125:  if (id < 0 || id >= var_hash->used_slots) return !SUCCESS;",
          "129:  return SUCCESS;",
          "",
          "[Added Lines]",
          "149:  if (!var_hash) return NULL;",
          "151:  if (id < 0 || id >= var_hash->used_slots) return NULL;",
          "153:  return var_hash->data[id];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "134:  void *next;",
          "135:  long i;",
          "136:  var_entries *var_hash = (*var_hashx)->first;",
          "137: #if VAR_ENTRIES_DBG",
          "138:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "139: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "144:   var_hash = next;",
          "145:  }",
          "152:   }",
          "156:  }",
          "157: }",
          "",
          "[Removed Lines]",
          "147:  var_hash = (*var_hashx)->first_dtor;",
          "149:  while (var_hash) {",
          "150:   for (i = 0; i < var_hash->used_slots; i++) {",
          "151:    zval_ptr_dtor(var_hash->data[i]);",
          "153:   next = var_hash->next;",
          "154:   efree(var_hash);",
          "155:   var_hash = next;",
          "",
          "[Added Lines]",
          "172:  while (var_dtor_hash) {",
          "173:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "174:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "176:   next = var_dtor_hash->next;",
          "177:   efree(var_dtor_hash);",
          "178:   var_dtor_hash = next;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "455:  if (!var_hash) return 0;",
          "457:  id = parse_iv(start + 2) - 1;",
          "459:   return 0;",
          "460:  }",
          "465:  if (Z_ISREF_P(rval_ref)) {",
          "466:   ZVAL_COPY(rval, rval_ref);",
          "467:  } else {",
          "",
          "[Removed Lines]",
          "458:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "462:  if (!ZVAL_IS_UNDEF(rval)) {",
          "463:   zval_ptr_dtor(rval);",
          "464:  }",
          "",
          "[Added Lines]",
          "484:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "488:  zval_ptr_dtor(rval);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "480:  if (!var_hash) return 0;",
          "482:  id = parse_iv(start + 2) - 1;",
          "484:   return 0;",
          "485:  }",
          "",
          "[Removed Lines]",
          "483:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "",
          "[Added Lines]",
          "507:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db3040708a5ff8322e0e83a285ab9fe87df04792",
      "candidate_info": {
        "commit_hash": "db3040708a5ff8322e0e83a285ab9fe87df04792",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/db3040708a5ff8322e0e83a285ab9fe87df04792",
        "files": [
          "ext/session/session.c",
          "ext/session/tests/session_encode_error2.phpt"
        ],
        "message": "Remove \"register_globals\" support codes from php/php_binary serializers. As a result, users may use PS_UNDEF_MAKER(=!) char for session variable name.",
        "before_after_code_files": [
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/session_encode_error2.phpt||ext/session/tests/session_encode_error2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "887:    smart_str_appendc(&buf, (unsigned char)ZSTR_LEN(key));",
          "888:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "889:    php_var_serialize(&buf, struc, &var_hash);",
          "894:  );",
          "896:  smart_str_0(&buf);",
          "",
          "[Removed Lines]",
          "890:   } else {",
          "891:    if (ZSTR_LEN(key) > PS_BIN_MAX) continue;",
          "892:    smart_str_appendc(&buf, (unsigned char) (ZSTR_LEN(key) & PS_BIN_UNDEF));",
          "893:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "904: {",
          "905:  const char *p;",
          "906:  const char *endptr = val + vallen;",
          "908:  int namelen;",
          "909:  zend_string *name;",
          "910:  php_unserialize_data_t var_hash;",
          "912:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "907:  int has_value;",
          "",
          "[Added Lines]",
          "906:  zval *current, rv;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "919:    return FAILURE;",
          "920:   }",
          "924:   name = zend_string_init(p + 1, namelen, 0);",
          "926:   p += namelen + 1;",
          "940:   } else {",
          "942:   }",
          "943:   zend_string_release(name);",
          "944:  }",
          "",
          "[Removed Lines]",
          "922:   has_value = *p & PS_BIN_UNDEF ? 0 : 1;",
          "928:   if (has_value) {",
          "929:    zval *current, rv;",
          "930:    current = var_tmp_var(&var_hash);",
          "931:    if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "932:     ZVAL_PTR(&rv, current);",
          "933:     php_set_session_var(name, &rv, &var_hash);",
          "934:    } else {",
          "935:     zend_string_release(name);",
          "936:     php_session_normalize_vars();",
          "937:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "938:     return FAILURE;",
          "939:    }",
          "941:    PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "920:   current = var_tmp_var(&var_hash);",
          "922:   if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "923:    ZVAL_PTR(&rv, current);",
          "924:    php_set_session_var(name, &rv, &var_hash);",
          "926:    zend_string_release(name);",
          "927:    php_session_normalize_vars();",
          "928:    PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "929:    return FAILURE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "953: #define PS_DELIMITER '|'",
          "957: {",
          "",
          "[Removed Lines]",
          "954: #define PS_UNDEF_MARKER '!'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "962:  PHP_VAR_SERIALIZE_INIT(var_hash);",
          "964:  PS_ENCODE_LOOP(",
          "978:  );",
          "980:  smart_str_0(&buf);",
          "",
          "[Removed Lines]",
          "965:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "966:    if (memchr(ZSTR_VAL(key), PS_DELIMITER, ZSTR_LEN(key)) || memchr(ZSTR_VAL(key), PS_UNDEF_MARKER, ZSTR_LEN(key))) {",
          "967:     PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "968:     smart_str_free(&buf);",
          "969:     return NULL;",
          "970:    }",
          "971:    smart_str_appendc(&buf, PS_DELIMITER);",
          "973:    php_var_serialize(&buf, struc, &var_hash);",
          "974:   } else {",
          "975:    smart_str_appendc(&buf, PS_UNDEF_MARKER);",
          "976:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "977:    smart_str_appendc(&buf, PS_DELIMITER);",
          "",
          "[Added Lines]",
          "952:   smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "953:   if (memchr(ZSTR_VAL(key), PS_DELIMITER, ZSTR_LEN(key))) {",
          "954:    PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "955:    smart_str_free(&buf);",
          "956:    return NULL;",
          "957:   }",
          "958:   smart_str_appendc(&buf, PS_DELIMITER);",
          "959:   php_var_serialize(&buf, struc, &var_hash);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "990:  const char *endptr = val + vallen;",
          "991:  ptrdiff_t namelen;",
          "992:  zend_string *name;",
          "994:  php_unserialize_data_t var_hash;",
          "996:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "993:  int has_value, retval = SUCCESS;",
          "",
          "[Added Lines]",
          "975:  int retval = SUCCESS;",
          "977:  zval *current, rv;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1002:   while (*q != PS_DELIMITER) {",
          "1003:    if (++q >= endptr) goto break_outer_loop;",
          "1004:   }",
          "1012:   namelen = q - p;",
          "1013:   name = zend_string_init(p, namelen, 0);",
          "1014:   q++;",
          "1027:   } else {",
          "1029:   }",
          "1030:   zend_string_release(name);",
          "1032:   p = q;",
          "1033:  }",
          "1034: break_outer_loop:",
          "1035:  php_session_normalize_vars();",
          "",
          "[Removed Lines]",
          "1005:   if (p[0] == PS_UNDEF_MARKER) {",
          "1006:    p++;",
          "1007:    has_value = 0;",
          "1008:   } else {",
          "1009:    has_value = 1;",
          "1010:   }",
          "1016:   if (has_value) {",
          "1017:    zval *current, rv;",
          "1018:    current = var_tmp_var(&var_hash);",
          "1019:    if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "1020:     ZVAL_PTR(&rv, current);",
          "1021:     php_set_session_var(name, &rv, &var_hash);",
          "1022:    } else {",
          "1023:     zend_string_release(name);",
          "1024:     retval = FAILURE;",
          "1025:     goto break_outer_loop;",
          "1026:    }",
          "1028:    PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "993:   current = var_tmp_var(&var_hash);",
          "994:   if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "995:    ZVAL_PTR(&rv, current);",
          "996:    php_set_session_var(name, &rv, &var_hash);",
          "998:    zend_string_release(name);",
          "999:    retval = FAILURE;",
          "1000:    goto break_outer_loop;",
          "",
          "---------------"
        ],
        "ext/session/tests/session_encode_error2.phpt||ext/session/tests/session_encode_error2.phpt": [
          "File: ext/session/tests/session_encode_error2.phpt -> ext/session/tests/session_encode_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: -- Iteration 20 --",
          "222: bool(true)",
          "224: bool(true)",
          "226: -- Iteration 21 --",
          "",
          "[Removed Lines]",
          "223: bool(false)",
          "",
          "[Added Lines]",
          "223: string(33) \"Hello World!|s:12:\"Hello World!\";\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3740dadecec9d47cde6055996e2ca13dd10c4f6",
      "candidate_info": {
        "commit_hash": "a3740dadecec9d47cde6055996e2ca13dd10c4f6",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a3740dadecec9d47cde6055996e2ca13dd10c4f6",
        "files": [
          "ext/session/session.c",
          "ext/session/tests/bug72681.phpt"
        ],
        "message": "Remove outdate checks",
        "before_after_code_files": [
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c",
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c",
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "837:  for (p = val; p < endptr; ) {",
          "839:   skip = 0;",
          "840:   namelen = ((unsigned char)(*p)) & (~PS_BIN_UNDEF);",
          "",
          "[Removed Lines]",
          "838:   zval *tmp;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "851:   p += namelen + 1;",
          "860:   if (has_value) {",
          "861:    zval *current, rv;",
          "862:    current = var_tmp_var(&var_hash);",
          "",
          "[Removed Lines]",
          "853:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "854:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "855:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "856:     skip = 1;",
          "857:    }",
          "858:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "933:  p = val;",
          "935:  while (p < endptr) {",
          "937:   q = p;",
          "938:   skip = 0;",
          "939:   while (*q != PS_DELIMITER) {",
          "",
          "[Removed Lines]",
          "936:   zval *tmp;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "950:   name = zend_string_init(p, namelen, 0);",
          "951:   q++;",
          "960:   if (has_value) {",
          "961:    zval *current, rv;",
          "962:    current = var_tmp_var(&var_hash);",
          "",
          "[Removed Lines]",
          "953:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "954:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "955:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "956:     skip = 1;",
          "957:    }",
          "958:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt": [
          "File: ext/session/tests/bug72681.phpt -> ext/session/tests/bug72681.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: <?php",
          "7: ini_set('session.serialize_handler', 'php');",
          "8: session_start();",
          "10: $_SESSION['ryat'] = 'ryat|O:8:\"stdClass\":0:{}';",
          "11: session_write_close();",
          "12: session_start();",
          "13: var_dump($_SESSION);",
          "14: ?>",
          "15: --EXPECT--",
          "16: array(0) {",
          "17: }",
          "",
          "[Removed Lines]",
          "9: $GLOBALS['ryat'] = $GLOBALS;",
          "",
          "[Added Lines]",
          "9: $GLOBALS['ryat'] = $_SESSION;",
          "13: var_dump($ryat);",
          "19: array(1) {",
          "20:   [\"ryat\"]=>",
          "21:   string(24) \"ryat|O:8:\"stdClass\":0:{}\"",
          "22: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6640aded24b6363688f8db081972b6c29bbb5e4a",
      "candidate_info": {
        "commit_hash": "6640aded24b6363688f8db081972b6c29bbb5e4a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6640aded24b6363688f8db081972b6c29bbb5e4a",
        "files": [
          "ext/session/session.c"
        ],
        "message": "fix memory leak",
        "before_after_code_files": [
          "ext/session/session.c||ext/session/session.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: {",
          "141:  int retval = SUCCESS;",
          "144:  if (PS(session_status) != php_session_active) {",
          "145:   php_error_docref(NULL, E_WARNING, \"Trying to destroy uninitialized session\");",
          "",
          "[Removed Lines]",
          "142:  zend_string *var_name;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1048:    } else {",
          "1049:     zval_ptr_dtor(&current);",
          "1050:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1051:     return FAILURE;",
          "1052:    }",
          "1053:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1050:     zend_string_release(name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05d53dee7d70a94c0cef57ae2dae735f98a3d833",
      "candidate_info": {
        "commit_hash": "05d53dee7d70a94c0cef57ae2dae735f98a3d833",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/05d53dee7d70a94c0cef57ae2dae735f98a3d833",
        "files": [
          "NEWS",
          "ext/session/session.c",
          "ext/session/tests/bug71972.phpt"
        ],
        "message": "Fixed bug #71972 (Cyclic references causing session_start(): Failed to decode session object)",
        "before_after_code_files": [
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/bug71972.phpt||ext/session/tests/bug71972.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "613: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616: {",
          "617:  PS_ENCODE_VARS;",
          "619:  IF_SESSION_VARS() {",
          "620:   PS_ENCODE_LOOP(",
          "621:    if (Z_TYPE_P(struc) == IS_PTR) {",
          "622:     zval *zv = (zval *)Z_PTR_P(struc);",
          "623:     ZVAL_COPY_VALUE(struc, zv);",
          "624:     ZVAL_UNDEF(zv);",
          "625:    }",
          "626:   );",
          "627:  }",
          "628: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "944: {",
          "945:  const char *p;",
          "946:  const char *endptr = val + vallen;",
          "948:  int has_value;",
          "949:  int namelen;",
          "950:  zend_string *name;",
          "",
          "[Removed Lines]",
          "947:  zval current;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "967:   p += namelen + 1;",
          "969:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "971:     zend_string_release(name);",
          "972:     continue;",
          "973:    }",
          "974:   }",
          "976:   if (has_value) {",
          "981:    } else {",
          "983:     zend_string_release(name);",
          "984:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "985:     return FAILURE;",
          "986:    }",
          "987:   }",
          "989:   zend_string_release(name);",
          "990:  }",
          "992:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "994:  return SUCCESS;",
          "",
          "[Removed Lines]",
          "970:    if ((Z_TYPE_P(tmp) == IS_ARRAY && Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "977:    ZVAL_UNDEF(&current);",
          "978:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "979:     zval *zv = php_set_session_var(name, &current, &var_hash );",
          "980:     var_replace(&var_hash, &current, zv);",
          "982:     zval_ptr_dtor(&current);",
          "988:   PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "984:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "985:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "992:    zval *current, rv;",
          "993:    current = var_tmp_var(&var_hash);",
          "994:    if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "995:     ZVAL_PTR(&rv, current);",
          "996:     php_set_session_var(name, &rv, &var_hash );",
          "999:     php_session_normalize_vars();",
          "1003:   } else {",
          "1004:    PS_ADD_VARL(name);",
          "1009:  php_session_normalize_vars();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1033: {",
          "1034:  const char *p, *q;",
          "1035:  const char *endptr = val + vallen;",
          "1038:  ptrdiff_t namelen;",
          "1039:  zend_string *name;",
          "1040:  php_unserialize_data_t var_hash;",
          "1042:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "1036:  zval current;",
          "1037:  int has_value;",
          "",
          "[Added Lines]",
          "1056:  int has_value, retval = SUCCESS;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1061:   q++;",
          "1063:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "1065:     goto skip;",
          "1066:    }",
          "1067:   }",
          "1069:   if (has_value) {",
          "1074:    } else {",
          "1077:     zend_string_release(name);",
          "1079:    }",
          "1080:   }",
          "1082: skip:",
          "1083:   zend_string_release(name);",
          "1085:   p = q;",
          "1086:  }",
          "1087: break_outer_loop:",
          "1089:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1092: }",
          "",
          "[Removed Lines]",
          "1064:    if ((Z_TYPE_P(tmp) == IS_ARRAY && Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "1070:    ZVAL_UNDEF(&current);",
          "1071:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash)) {",
          "1072:     zval *zv = php_set_session_var(name, &current, &var_hash);",
          "1073:     var_replace(&var_hash, &current, zv);",
          "1075:     zval_ptr_dtor(&current);",
          "1076:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1078:     return FAILURE;",
          "1081:   PS_ADD_VARL(name);",
          "1091:  return SUCCESS;",
          "",
          "[Added Lines]",
          "1081:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "1082:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "1088:    zval *current, rv;",
          "1089:    current = var_tmp_var(&var_hash);",
          "1090:    if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "1091:     ZVAL_PTR(&rv, current);",
          "1092:     php_set_session_var(name, &rv, &var_hash);",
          "1095:     retval = FAILURE;",
          "1096:     goto break_outer_loop;",
          "1098:   } else {",
          "1099:    PS_ADD_VARL(name);",
          "1107:  php_session_normalize_vars();",
          "1111:  return retval;",
          "",
          "---------------"
        ],
        "ext/session/tests/bug71972.phpt||ext/session/tests/bug71972.phpt": [
          "File: ext/session/tests/bug71972.phpt -> ext/session/tests/bug71972.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #71972 (Cyclic references causing session_start(): Failed to decode session object)",
          "3: --SKIPIF--",
          "4: <?php include('skipif.inc'); ?>",
          "5: --INI--",
          "6: session.save_handler=files",
          "7: --FILE--",
          "8: <?php",
          "9: ob_start();",
          "10: session_start();",
          "12: $_SESSION['boogie'] = 1;",
          "14: $_SESSION['obj1'] = new stdClass();",
          "15: for ( $x=2; $x < 20; $x++) {",
          "16:  cyclic_ref($x);",
          "17: }",
          "19: function cyclic_ref($num) {",
          "20:  $_SESSION['obj'.$num] = new stdClass();",
          "21:  $_SESSION['obj'.$num]->test = new stdClass();//NOTE: No bug if try commenting out this too.",
          "22:  $_SESSION['obj'.$num]->obj1 = $_SESSION['obj1'];",
          "23: }",
          "25: var_dump(session_decode(session_encode()) == $_SESSION);",
          "26: ?>",
          "27: --EXPECT--",
          "28: bool(true)",
          "",
          "---------------"
        ]
      }
    }
  ]
}