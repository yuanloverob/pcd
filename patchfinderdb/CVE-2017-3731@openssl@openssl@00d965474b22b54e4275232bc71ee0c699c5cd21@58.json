{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d17628067daef233f2196a822775af083ec1660",
      "candidate_info": {
        "commit_hash": "0d17628067daef233f2196a822775af083ec1660",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0d17628067daef233f2196a822775af083ec1660",
        "files": [
          "crypto/x509v3/v3_cpols.c"
        ],
        "message": "Fix a crash with malformed user notice policy numbers\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2352)\n(cherry picked from commit fe4075f25962dbd302d856c11ac47adb84edc9ca)",
        "before_after_code_files": [
          "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c": [
          "File: crypto/x509v3/v3_cpols.c -> crypto/x509v3/v3_cpols.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "345:     return 1;",
          "347:  merr:",
          "348:     X509V3err(X509V3_F_NREF_NOS, ERR_R_MALLOC_FAILURE);",
          "350:  err:",
          "352:     return 0;",
          "353: }",
          "",
          "[Removed Lines]",
          "351:     sk_ASN1_INTEGER_pop_free(nnums, ASN1_STRING_free);",
          "",
          "[Added Lines]",
          "348:     ASN1_INTEGER_free(aint);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1968ea9850f7e50609284756ca78e465e5ee4fb9",
      "candidate_info": {
        "commit_hash": "1968ea9850f7e50609284756ca78e465e5ee4fb9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1968ea9850f7e50609284756ca78e465e5ee4fb9",
        "files": [
          "test/evp_test.c"
        ],
        "message": "test/evp_test.c: If no algorithm was specified, don't try to check for DES\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2319)\n(cherry picked from commit 31b69e9a26c5b127ce273bc5834b9e13e5e25556)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1245:     size_t mac_len;",
          "1247: #ifdef OPENSSL_NO_DES",
          "1250:         err = NULL;",
          "1251:         goto err;",
          "",
          "[Removed Lines]",
          "1248:     if (strstr(mdata->alg, \"DES\") != NULL) {",
          "",
          "[Added Lines]",
          "1248:     if (mdata->alg != NULL && strstr(mdata->alg, \"DES\") != NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "078fdfc446ecdc4df65f519c8afdad2153c4a348",
      "candidate_info": {
        "commit_hash": "078fdfc446ecdc4df65f519c8afdad2153c4a348",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/078fdfc446ecdc4df65f519c8afdad2153c4a348",
        "files": [
          "test/recipes/15-test_rsapss.t"
        ],
        "message": "Rather use -out parameter than redirect stdout\n\nOn some platforms, setting stdout to binary mode isn't quite enough,\nwhich makes the result unusable.  With -out, we have better control.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2939)\n(cherry picked from commit d8f9213ae2f0c59198fe56eeb70c34d735422254)",
        "before_after_code_files": [
          "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t": [
          "File: test/recipes/15-test_rsapss.t -> test/recipes/15-test_rsapss.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #using test/testrsa.pem which happens to be a 512 bit RSA",
          "22: ok(run(app(['openssl', 'dgst', '-sign', srctop_file('test', 'testrsa.pem'), '-sha1',",
          "23:             '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "26:    \"openssl dgst -sign\");",
          "28: with({ exit_checker => sub { return shift == 1; } },",
          "",
          "[Removed Lines]",
          "24:             '-sigopt', 'rsa_mgf1_md:sha512', srctop_file('test', 'testrsa.pem')],",
          "25:            stdout => 'testrsapss.sig')),",
          "",
          "[Added Lines]",
          "24:             '-sigopt', 'rsa_mgf1_md:sha512', '-out', 'testrsapss.sig',",
          "25:             srctop_file('test', 'testrsa.pem')])),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce180867a4ae781cd84fdcf01ba6e2320de651ef",
      "candidate_info": {
        "commit_hash": "ce180867a4ae781cd84fdcf01ba6e2320de651ef",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ce180867a4ae781cd84fdcf01ba6e2320de651ef",
        "files": [
          "apps/enc.c"
        ],
        "message": "Let the output from 'openssl enc -ciphers' go to stdout\n\nAlso, don't exit with an error code\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2716)\n(cherry picked from commit 341de5f1997d21b60cee69be656f1ae709bccdac)",
        "before_after_code_files": [
          "apps/enc.c||apps/enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/enc.c||apps/enc.c": [
          "File: apps/enc.c -> apps/enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             ret = 0;",
          "135:             goto end;",
          "136:         case OPT_LIST:",
          "138:             OBJ_NAME_do_all_sorted(OBJ_NAME_TYPE_CIPHER_METH,",
          "141:             goto end;",
          "142:         case OPT_E:",
          "143:             enc = 1;",
          "",
          "[Removed Lines]",
          "137:             BIO_printf(bio_err, \"Supported ciphers:\\n\");",
          "139:                                    show_ciphers, bio_err);",
          "140:             BIO_printf(bio_err, \"\\n\");",
          "",
          "[Added Lines]",
          "137:             BIO_printf(bio_out, \"Supported ciphers:\\n\");",
          "139:                                    show_ciphers, bio_out);",
          "140:             BIO_printf(bio_out, \"\\n\");",
          "141:             ret = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b37fce59cb7c48776361ac8cb8a808793016eefd",
      "candidate_info": {
        "commit_hash": "b37fce59cb7c48776361ac8cb8a808793016eefd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b37fce59cb7c48776361ac8cb8a808793016eefd",
        "files": [
          "apps/ts.c",
          "crypto/ec/ec_ameth.c",
          "ssl/ssl_ciph.c"
        ],
        "message": "mem leak on error path and error propagation fix\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2559)\n(cherry picked from commit e0670973d5c0b837eb5a9f1670e47107f466fbc7)",
        "before_after_code_files": [
          "apps/ts.c||apps/ts.c",
          "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c",
          "ssl/ssl_ciph.c||ssl/ssl_ciph.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ts.c||apps/ts.c": [
          "File: apps/ts.c -> apps/ts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:             goto err;",
          "891:         f = TS_VFY_VERSION | TS_VFY_SIGNER;",
          "892:         if (data != NULL) {",
          "893:             f |= TS_VFY_DATA;",
          "895:                 goto err;",
          "896:         } else if (digest != NULL) {",
          "897:             long imprint_len;",
          "898:             unsigned char *hexstr = OPENSSL_hexstr2buf(digest, &imprint_len);",
          "",
          "[Removed Lines]",
          "894:             if (TS_VERIFY_CTX_set_data(ctx, BIO_new_file(data, \"rb\")) == NULL)",
          "",
          "[Added Lines]",
          "893:             BIO *out = NULL;",
          "896:             if ((out = BIO_new_file(data, \"rb\")) == NULL)",
          "897:                 goto err;",
          "898:             if (TS_VERIFY_CTX_set_data(ctx, out) == NULL) {",
          "899:                 BIO_free_all(out);",
          "901:             }",
          "",
          "---------------"
        ],
        "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c": [
          "File: crypto/ec/ec_ameth.c -> crypto/ec/ec_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     }",
          "256:     if (!PKCS8_pkey_set0(p8, OBJ_nid2obj(NID_X9_62_id_ecPublicKey), 0,",
          "258:         return 0;",
          "260:     return 1;",
          "261: }",
          "",
          "[Removed Lines]",
          "257:                          ptype, pval, ep, eplen))",
          "",
          "[Added Lines]",
          "257:                          ptype, pval, ep, eplen)) {",
          "258:         OPENSSL_free(ep);",
          "260:     }",
          "",
          "---------------"
        ],
        "ssl/ssl_ciph.c||ssl/ssl_ciph.c": [
          "File: ssl/ssl_ciph.c -> ssl/ssl_ciph.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1827:     if (id < 193 || id > 255) {",
          "1828:         SSLerr(SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD,",
          "1829:                SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE);",
          "1831:     }",
          "1833:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_DISABLE);",
          "",
          "[Removed Lines]",
          "1830:         return 0;",
          "",
          "[Added Lines]",
          "1830:         return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}