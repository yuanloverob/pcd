{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4065b241e89000588131cac5228f397964ab034f",
      "candidate_info": {
        "commit_hash": "4065b241e89000588131cac5228f397964ab034f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4065b241e89000588131cac5228f397964ab034f",
        "files": [
          "doc/api/child_processes.markdown",
          "lib/child_process.js"
        ],
        "message": "child_process: remove dummy \"setsid\" option setting",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     timeout: 0,",
          "229:     maxBuffer: 200 * 1024,",
          "230:     killSignal: 'SIGTERM',",
          "232:     cwd: null,",
          "233:     env: null",
          "234:   };",
          "",
          "[Removed Lines]",
          "231:     setsid: false,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e63c7821d5fc4e2f92c0606ab16b7846893ac3d1",
      "candidate_info": {
        "commit_hash": "e63c7821d5fc4e2f92c0606ab16b7846893ac3d1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e63c7821d5fc4e2f92c0606ab16b7846893ac3d1",
        "files": [
          ".gitignore",
          "Makefile",
          "test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js",
          "test/gc/testcfg.py",
          "tools/test.py"
        ],
        "message": "Tests for memory leaks\n\nConflicts:\n\n\tMakefile",
        "before_after_code_files": [
          "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js||test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js",
          "test/gc/testcfg.py||test/gc/testcfg.py",
          "tools/test.py||tools/test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js": [
          "File: test/gc/test-http-client-connaborted.js -> test/gc/test-http-client-connaborted.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: function serverHandler(req, res) {",
          "5:   res.connection.destroy();",
          "6: }",
          "8: var http  = require('http'),",
          "9:     weak    = require('weak'),",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "13:     todo    = 18,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "18: console.log('We should do '+ todo +' requests');",
          "20: var http = require('http');",
          "21: var server = http.createServer(serverHandler);",
          "22: server.listen(PORT, getall);",
          "24: function getall() {",
          "25:   for (var i = 0; i < todo; i++) {",
          "26:     (function(){",
          "27:       function cb(res) {",
          "28:         done+=1;",
          "29:         statusLater();",
          "30:       }",
          "32:       var req = http.get({",
          "33:         hostname: 'localhost',",
          "34:         pathname: '/',",
          "35:         port: PORT",
          "36:       }, cb).on('error', cb);",
          "38:       count++;",
          "39:       weak(req, afterGC);",
          "40:     })()",
          "41:   }",
          "42: }",
          "44: function afterGC(){",
          "45:   countGC ++;",
          "46: }",
          "48: function statusLater() {",
          "49:   setTimeout(status, 1);",
          "50: }",
          "52: function status() {",
          "53:   gc();",
          "54:   console.log('Done: %d/%d', done, todo);",
          "55:   console.log('Collected: %d/%d', countGC, count);",
          "56:   if (done === todo) {",
          "57:     console.log('All should be collected now.');",
          "58:     assert(count === countGC);",
          "59:     process.exit(0);",
          "60:   }",
          "61: }",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js": [
          "File: test/gc/test-http-client-onerror.js -> test/gc/test-http-client-onerror.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: function serverHandler(req, res) {",
          "5:   res.writeHead(200, {'Content-Type': 'text/plain'});",
          "6:   res.end('Hello World\\n');",
          "7: }",
          "9: var http  = require('http'),",
          "10:     weak    = require('weak'),",
          "11:     done    = 0,",
          "12:     count   = 0,",
          "13:     countGC = 0,",
          "14:     todo    = 18,",
          "15:     common = require('../common.js'),",
          "16:     assert = require('assert'),",
          "17:     PORT = common.PORT;",
          "19: console.log('We should do '+ todo +' requests');",
          "21: var http = require('http');",
          "22: var server = http.createServer(serverHandler);",
          "23: server.listen(PORT, getall);",
          "25: function getall() {",
          "26:   for (var i = 0; i < todo; i++) {",
          "27:     (function(){",
          "28:       function cb(res) {",
          "29:         done+=1;",
          "30:         statusLater();",
          "31:       }",
          "32:       function onerror(er) {",
          "33:         throw er;",
          "34:       }",
          "36:       var req = http.get({",
          "37:         hostname: 'localhost',",
          "38:         pathname: '/',",
          "39:         port: PORT",
          "40:       }, cb).on('error', onerror);",
          "42:       count++;",
          "43:       weak(req, afterGC);",
          "44:     })()",
          "45:   }",
          "46: }",
          "48: function afterGC(){",
          "49:   countGC ++;",
          "50: }",
          "52: function statusLater() {",
          "53:   setTimeout(status, 1);",
          "54: }",
          "56: function status() {",
          "57:   gc();",
          "58:   console.log('Done: %d/%d', done, todo);",
          "59:   console.log('Collected: %d/%d', countGC, count);",
          "60:   if (done === todo) {",
          "61:     console.log('All should be collected now.');",
          "62:     assert(count === countGC);",
          "63:     process.exit(0);",
          "64:   }",
          "65: }",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js": [
          "File: test/gc/test-http-client-timeout.js -> test/gc/test-http-client-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: function serverHandler(req, res) {",
          "5:   setTimeout(function () {",
          "6:     res.writeHead(200)",
          "7:     res.end('hello\\n');",
          "8:   }, 100);",
          "9: }",
          "11: var http  = require('http'),",
          "12:     weak    = require('weak'),",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "16:     todo    = 18,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "21: console.log('We should do '+ todo +' requests');",
          "23: var http = require('http');",
          "24: var server = http.createServer(serverHandler);",
          "25: server.listen(PORT, getall);",
          "27: function getall() {",
          "28:   for (var i = 0; i < todo; i++) {",
          "29:     (function(){",
          "30:       function cb() {",
          "31:         done+=1;",
          "32:         statusLater();",
          "33:       }",
          "35:       var req = http.get({",
          "36:         hostname: 'localhost',",
          "37:         pathname: '/',",
          "38:         port: PORT",
          "39:       }, cb);",
          "40:       req.on('error', cb);",
          "41:       req.setTimeout(10, function(){",
          "42:         console.log('timeout (expected)')",
          "43:       });",
          "45:       count++;",
          "46:       weak(req, afterGC);",
          "47:     })()",
          "48:   }",
          "49: }",
          "51: function afterGC(){",
          "52:   countGC ++;",
          "53: }",
          "55: function statusLater() {",
          "56:   setTimeout(status, 1);",
          "57: }",
          "59: function status() {",
          "60:   gc();",
          "61:   console.log('Done: %d/%d', done, todo);",
          "62:   console.log('Collected: %d/%d', countGC, count);",
          "63:   if (done === todo) {",
          "64:     console.log('All should be collected now.');",
          "65:     assert(count === countGC);",
          "66:     process.exit(0);",
          "67:   }",
          "68: }",
          "",
          "---------------"
        ],
        "test/gc/test-http-client.js||test/gc/test-http-client.js": [
          "File: test/gc/test-http-client.js -> test/gc/test-http-client.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: function serverHandler(req, res) {",
          "4:   res.writeHead(200, {'Content-Type': 'text/plain'});",
          "5:   res.end('Hello World\\n');",
          "6: }",
          "8: var http  = require('http'),",
          "9:     weak    = require('weak'),",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "13:     todo    = 5,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "18: console.log('We should do '+ todo +' requests');",
          "20: var http = require('http');",
          "21: var server = http.createServer(serverHandler);",
          "22: server.listen(PORT, getall);",
          "25: function getall() {",
          "26:   for (var i = 0; i < todo; i++) {",
          "27:     (function(){",
          "28:       function cb(res) {",
          "29:         console.error('in cb')",
          "30:         done+=1;",
          "31:         res.on('end', statusLater);",
          "32:       }",
          "34:       var req = http.get({",
          "35:         hostname: 'localhost',",
          "36:         pathname: '/',",
          "37:         port: PORT",
          "38:       }, cb)",
          "40:       count++;",
          "41:       weak(req, afterGC);",
          "42:     })()",
          "43:   }",
          "44: }",
          "46: function afterGC(){",
          "47:   countGC ++;",
          "48: }",
          "50: function statusLater() {",
          "51:   setTimeout(status, 1);",
          "52: }",
          "54: function status() {",
          "55:   gc();",
          "56:   console.log('Done: %d/%d', done, todo);",
          "57:   console.log('Collected: %d/%d', countGC, count);",
          "58:   if (done === todo) {",
          "59:     console.log('All should be collected now.');",
          "60:     assert(count === countGC);",
          "61:     process.exit(0);",
          "62:   }",
          "63: }",
          "",
          "---------------"
        ],
        "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js": [
          "File: test/gc/test-net-timeout.js -> test/gc/test-net-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: function serverHandler(sock) {",
          "5:   sock.setTimeout(120000);",
          "6:   setTimeout(function () {",
          "7:     sock.end('hello\\n');",
          "8:   }, 100);",
          "9: }",
          "11: var net  = require('net'),",
          "12:     weak    = require('weak'),",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "16:     todo    = 18,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "21: console.log('We should do '+ todo +' requests');",
          "23: var server = net.createServer(serverHandler);",
          "24: server.listen(PORT, getall);",
          "26: function getall() {",
          "27:   for (var i = 0; i < todo; i++) {",
          "28:     (function(){",
          "29:       var req = net.connect(PORT, '127.0.0.1');",
          "30:       req.setTimeout(10, function() {",
          "31:         console.log('timeout (expected)')",
          "32:         req.destroy();",
          "33:         done++;",
          "34:         statusLater();",
          "35:       });",
          "37:       count++;",
          "38:       weak(req, afterGC);",
          "39:     })()",
          "40:   }",
          "41: }",
          "43: function afterGC(){",
          "44:   countGC ++;",
          "45: }",
          "47: function statusLater() {",
          "48:   setTimeout(status, 1);",
          "49: }",
          "51: function status() {",
          "52:   gc();",
          "53:   console.log('Done: %d/%d', done, todo);",
          "54:   console.log('Collected: %d/%d', countGC, count);",
          "55:   if (done === todo) {",
          "56:     console.log('All should be collected now.');",
          "57:     assert(count === countGC);",
          "58:     process.exit(0);",
          "59:   }",
          "60: }",
          "",
          "---------------"
        ],
        "test/gc/testcfg.py||test/gc/testcfg.py": [
          "File: test/gc/testcfg.py -> test/gc/testcfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright 2008 the V8 project authors. All rights reserved.",
          "2: # Redistribution and use in source and binary forms, with or without",
          "3: # modification, are permitted provided that the following conditions are",
          "4: # met:",
          "5: #",
          "6: #     * Redistributions of source code must retain the above copyright",
          "7: #       notice, this list of conditions and the following disclaimer.",
          "8: #     * Redistributions in binary form must reproduce the above",
          "9: #       copyright notice, this list of conditions and the following",
          "10: #       disclaimer in the documentation and/or other materials provided",
          "11: #       with the distribution.",
          "12: #     * Neither the name of Google Inc. nor the names of its",
          "13: #       contributors may be used to endorse or promote products derived",
          "14: #       from this software without specific prior written permission.",
          "15: #",
          "16: # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
          "17: # \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
          "18: # LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
          "19: # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
          "20: # OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
          "21: # SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
          "22: # LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
          "23: # DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
          "24: # THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
          "25: # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
          "26: # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          "28: import test",
          "29: import os",
          "30: import shutil",
          "31: from shutil import rmtree",
          "32: from os import mkdir",
          "33: from glob import glob",
          "34: from os.path import join, dirname, exists",
          "35: import re",
          "38: FLAGS_PATTERN = re.compile(r\"//\\s+Flags:(.*)\")",
          "39: FILES_PATTERN = re.compile(r\"//\\s+Files:(.*)\")",
          "42: class GCTestCase(test.TestCase):",
          "44:   def __init__(self, path, file, mode, context, config):",
          "45:     super(GCTestCase, self).__init__(context, path, mode)",
          "46:     self.file = file",
          "47:     self.config = config",
          "48:     self.mode = mode",
          "49:     self.tmpdir = join(dirname(self.config.root), 'tmp')",
          "51:   def AfterRun(self, result):",
          "52:     # delete the whole tmp dir",
          "53:     try:",
          "54:       rmtree(self.tmpdir)",
          "55:     except:",
          "56:       pass",
          "57:     # make it again.",
          "58:     try:",
          "59:       mkdir(self.tmpdir)",
          "60:     except:",
          "61:       pass",
          "63:   def BeforeRun(self):",
          "64:     # delete the whole tmp dir",
          "65:     try:",
          "66:       rmtree(self.tmpdir)",
          "67:     except:",
          "68:       pass",
          "69:     # make it again.",
          "70:     # intermittently fails on win32, so keep trying",
          "71:     while not os.path.exists(self.tmpdir):",
          "72:       try:",
          "73:         mkdir(self.tmpdir)",
          "74:       except:",
          "75:         pass",
          "77:   def GetLabel(self):",
          "78:     return \"%s %s\" % (self.mode, self.GetName())",
          "80:   def GetName(self):",
          "81:     return self.path[-1]",
          "83:   def GetCommand(self):",
          "84:     result = [self.config.context.GetVm(self.mode)]",
          "85:     source = open(self.file).read()",
          "86:     flags_match = FLAGS_PATTERN.search(source)",
          "87:     if flags_match:",
          "88:       result += flags_match.group(1).strip().split()",
          "89:     files_match = FILES_PATTERN.search(source);",
          "90:     additional_files = []",
          "91:     if files_match:",
          "92:       additional_files += files_match.group(1).strip().split()",
          "93:     for a_file in additional_files:",
          "94:       result.append(join(dirname(self.config.root), '..', a_file))",
          "95:     result += [\"--expose-gc\"]",
          "96:     result += [self.file]",
          "97:     return result",
          "99:   def GetSource(self):",
          "100:     return open(self.file).read()",
          "103: class GCTestConfiguration(test.TestConfiguration):",
          "105:   def __init__(self, context, root):",
          "106:     super(GCTestConfiguration, self).__init__(context, root)",
          "108:   def Ls(self, path):",
          "109:     def SelectTest(name):",
          "110:       return name.startswith('test-') and name.endswith('.js')",
          "111:     return [f[:-3] for f in os.listdir(path) if SelectTest(f)]",
          "113:   def ListTests(self, current_path, path, mode):",
          "114:     all_tests = [current_path + [t] for t in self.Ls(join(self.root))]",
          "115:     result = []",
          "116:     for test in all_tests:",
          "117:       if self.Contains(path, test):",
          "118:         file_path = join(self.root, reduce(join, test[1:], \"\") + \".js\")",
          "119:         result.append(GCTestCase(test, file_path, mode, self.context, self))",
          "120:     return result",
          "122:   def GetBuildRequirements(self):",
          "123:     return ['sample', 'sample=shell']",
          "125:   def GetTestStatus(self, sections, defs):",
          "126:     status_file = join(self.root, 'gc.status')",
          "127:     if exists(status_file):",
          "128:       test.ReadConfigurationInto(status_file, sections, defs)",
          "132: def GetConfiguration(context, root):",
          "133:   return GCTestConfiguration(context, root)",
          "",
          "---------------"
        ],
        "tools/test.py||tools/test.py": [
          "File: tools/test.py -> tools/test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1275:     return ExpandCommand",
          "1281: def GetSuites(test_root):",
          "",
          "[Removed Lines]",
          "1278: BUILT_IN_TESTS = ['simple', 'pummel', 'message', 'internet']",
          "",
          "[Added Lines]",
          "1278: BUILT_IN_TESTS = ['simple', 'pummel', 'message', 'internet', 'gc']",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea97d6ed5ff659a48a0fa715fb6572758b7ddd34",
      "candidate_info": {
        "commit_hash": "ea97d6ed5ff659a48a0fa715fb6572758b7ddd34",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ea97d6ed5ff659a48a0fa715fb6572758b7ddd34",
        "files": [
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "isolates: rename node::Isolate member isolate_ to v8_isolate_",
        "before_after_code_files": [
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   SLIST_INIT(&at_exit_callbacks_);",
          "39:   loop_ = loop;",
          "45:   }",
          "50:   globals_init(&globals_);",
          "51: }",
          "",
          "[Removed Lines]",
          "41:   isolate_ = v8::Isolate::GetCurrent();",
          "42:   if (isolate_ == NULL) {",
          "43:     isolate_ = v8::Isolate::New();",
          "44:     isolate_->Enter();",
          "47:   assert(isolate_->GetData() == NULL);",
          "48:   isolate_->SetData(this);",
          "",
          "[Added Lines]",
          "41:   v8_isolate_ = v8::Isolate::GetCurrent();",
          "42:   if (v8_isolate_ == NULL) {",
          "43:     v8_isolate_ = v8::Isolate::New();",
          "44:     v8_isolate_->Enter();",
          "47:   assert(v8_isolate_->GetData() == NULL);",
          "48:   v8_isolate_->SetData(this);",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     return loop_;",
          "58:   }",
          "61:     NODE_ISOLATE_CHECK(this);",
          "63:   }",
          "",
          "[Removed Lines]",
          "60:   operator v8::Isolate*() {",
          "62:     return isolate_;",
          "",
          "[Added Lines]",
          "60:   v8::Isolate* GetV8Isolate() {",
          "62:     return v8_isolate_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   };",
          "84:   SLIST_HEAD(AtExitCallbacks, AtExitCallbackInfo) at_exit_callbacks_;",
          "86:   uv_loop_t* loop_;",
          "",
          "[Removed Lines]",
          "85:   v8::Isolate* isolate_;",
          "",
          "[Added Lines]",
          "85:   v8::Isolate* v8_isolate_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0685707bc643250de297b59f4f58878d4c17292e",
      "candidate_info": {
        "commit_hash": "0685707bc643250de297b59f4f58878d4c17292e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0685707bc643250de297b59f4f58878d4c17292e",
        "files": [
          "src/pipe_wrap.cc",
          "src/tcp_wrap.cc"
        ],
        "message": "tcp, pipe: don't assert on uv_accept() errors\n\nIt's possible for a new connection to be closed in the window between the\naccept() syscall and the call to uv_accept(). Deal with it and move on, don't\nassert.",
        "before_after_code_files": [
          "src/pipe_wrap.cc||src/pipe_wrap.cc",
          "src/tcp_wrap.cc||src/tcp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/pipe_wrap.cc||src/pipe_wrap.cc": [
          "File: src/pipe_wrap.cc -> src/pipe_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:   PipeWrap* client_wrap =",
          "205:       static_cast<PipeWrap*>(client_obj->GetPointerFromInternalField(0));",
          "213:   Local<Value> argv[1] = { client_obj };",
          "",
          "[Removed Lines]",
          "207:   int r = uv_accept(handle, (uv_stream_t*)&client_wrap->handle_);",
          "210:   assert(r == 0);",
          "",
          "[Added Lines]",
          "207:   if (uv_accept(handle, (uv_stream_t*)&client_wrap->handle_)) return;",
          "",
          "---------------"
        ],
        "src/tcp_wrap.cc||src/tcp_wrap.cc": [
          "File: src/tcp_wrap.cc -> src/tcp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:     TCPWrap* client_wrap =",
          "367:         static_cast<TCPWrap*>(client_obj->GetPointerFromInternalField(0));",
          "375:     argv[0] = client_obj;",
          "",
          "[Removed Lines]",
          "369:     int r = uv_accept(handle, (uv_stream_t*)&client_wrap->handle_);",
          "372:     assert(r == 0);",
          "",
          "[Added Lines]",
          "369:     if (uv_accept(handle, (uv_stream_t*)&client_wrap->handle_)) return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fc84fdad94cc8b30ed8aed0bcd06a53ceb1defd",
      "candidate_info": {
        "commit_hash": "9fc84fdad94cc8b30ed8aed0bcd06a53ceb1defd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9fc84fdad94cc8b30ed8aed0bcd06a53ceb1defd",
        "files": [
          "deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "deps/openssl/openssl/crypto/ui/ui_openssl.c"
        ],
        "message": "openssl: don't read user input from the TTY",
        "before_after_code_files": [
          "deps/openssl/openssl/crypto/ui/ui_dummy.c||deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "deps/openssl/openssl/crypto/ui/ui_openssl.c||deps/openssl/openssl/crypto/ui/ui_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/crypto/ui/ui_dummy.c||deps/openssl/openssl/crypto/ui/ui_dummy.c": [
          "File: deps/openssl/openssl/crypto/ui/ui_dummy.c -> deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: #include <openssl/e_os2.h>",
          "57: #include <evp.h>",
          "58: #include \"ui_locl.h\"",
          "59: #include \"cryptlib.h\"",
          "61: #ifdef OPENSSL_NO_TTY",
          "63: static int dummy_read_write_string(UI *ui, UI_STRING *uis);",
          "64: static int dummy_open_close(UI *ui);",
          "66: static UI_METHOD ui_dummy =",
          "67:  {",
          "68:  \"Dummy user interface\",",
          "69:  dummy_open_close,",
          "70:  dummy_read_write_string,",
          "71:  NULL,",
          "72:  dummy_read_write_string,",
          "73:  dummy_open_close,",
          "74:  NULL",
          "75:  };",
          "77: UI_METHOD *UI_OpenSSL(void)",
          "78:  {",
          "79:  return &ui_dummy;",
          "80:  }",
          "82: static int dummy_open_close(UI *ui)",
          "83:  {",
          "85:   return 1;",
          "86:  }",
          "88: static int dummy_read_write_string(UI *ui, UI_STRING *uis)",
          "89:  {",
          "91:  return 0;",
          "92:  }",
          "95: #endif",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/crypto/ui/ui_openssl.c||deps/openssl/openssl/crypto/ui/ui_openssl.c": [
          "File: deps/openssl/openssl/crypto/ui/ui_openssl.c -> deps/openssl/openssl/crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: #include <openssl/e_os2.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: #ifndef OPENSSL_NO_TTY",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:  return(strlen(buf));",
          "711:  }",
          "712: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "715: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}