{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d717edf80ed3494a5a25c0b82ce61e5885de68ac",
      "candidate_info": {
        "commit_hash": "d717edf80ed3494a5a25c0b82ce61e5885de68ac",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d717edf80ed3494a5a25c0b82ce61e5885de68ac",
        "files": [
          "ssl/ssl_lib.c",
          "ssl/ssl_locl.h",
          "ssl/statem/statem_clnt.c",
          "ssl/t1_lib.c"
        ],
        "message": "Don't fail the connection in SSLv3 if server selects ECDHE\n\nECDHE is not properly defined for SSLv3. Commit fe55c4a2 prevented ECDHE\nfrom being selected in that protocol. However, historically, servers do\nstill select ECDHE anyway so that commit causes interoperability problems.\nClients that previously worked when talking to an SSLv3 server could now\nfail.\n\nThis commit introduces an exception which enables a client to continue in\nSSLv3 if the server selected ECDHE.\n\n(cherry picked from commit 8af91fd9d08487e0dffb6ccac5f42633c964f3f0)\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3734)",
        "before_after_code_files": [
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/ssl_locl.h||ssl/ssl_locl.h",
          "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1944:     ssl_set_client_disabled(s);",
          "1945:     for (i = 0; i < sk_SSL_CIPHER_num(ciphers); i++) {",
          "1946:         const SSL_CIPHER *c = sk_SSL_CIPHER_value(ciphers, i);",
          "1948:             if (!sk)",
          "1949:                 sk = sk_SSL_CIPHER_new_null();",
          "1950:             if (!sk)",
          "",
          "[Removed Lines]",
          "1947:         if (!ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_SUPPORTED)) {",
          "",
          "[Added Lines]",
          "1947:         if (!ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_SUPPORTED, 0)) {",
          "",
          "---------------"
        ],
        "ssl/ssl_locl.h||ssl/ssl_locl.h": [
          "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2070: __owur int tls12_check_peer_sigalg(const EVP_MD **pmd, SSL *s,",
          "2071:                                    const unsigned char *sig, EVP_PKEY *pkey);",
          "2072: void ssl_set_client_disabled(SSL *s);",
          "2075: __owur int ssl_add_clienthello_use_srtp_ext(SSL *s, unsigned char *p, int *len,",
          "2076:                                             int maxlen);",
          "",
          "[Removed Lines]",
          "2073: __owur int ssl_cipher_disabled(SSL *s, const SSL_CIPHER *c, int op);",
          "",
          "[Added Lines]",
          "2073: __owur int ssl_cipher_disabled(SSL *s, const SSL_CIPHER *c, int op, int echde);",
          "",
          "---------------"
        ],
        "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
          "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1042:         al = SSL_AD_ILLEGAL_PARAMETER;",
          "1043:         SSLerr(SSL_F_TLS_PROCESS_SERVER_HELLO, SSL_R_WRONG_CIPHER_RETURNED);",
          "1044:         goto f_err;",
          "",
          "[Removed Lines]",
          "1041:     if (ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_CHECK)) {",
          "",
          "[Added Lines]",
          "1041:     if (ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_CHECK, 1)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2919:     for (i = 0; i < sk_SSL_CIPHER_num(sk); i++) {",
          "2920:         c = sk_SSL_CIPHER_value(sk, i);",
          "2923:             continue;",
          "2924:         j = s->method->put_cipher_by_char(c, p);",
          "2925:         p += j;",
          "",
          "[Removed Lines]",
          "2922:         if (ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_SUPPORTED))",
          "",
          "[Added Lines]",
          "2922:         if (ssl_cipher_disabled(s, c, SSL_SECOP_CIPHER_SUPPORTED, 0))",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "870: {",
          "871:     if (c->algorithm_mkey & s->s3->tmp.mask_k",
          "872:         || c->algorithm_auth & s->s3->tmp.mask_a)",
          "873:         return 1;",
          "874:     if (s->s3->tmp.max_ver == 0)",
          "875:         return 1;",
          "879:     if (SSL_IS_DTLS(s) && (DTLS_VERSION_GT(c->min_dtls, s->s3->tmp.max_ver)",
          "880:                            || DTLS_VERSION_LT(c->max_dtls, s->s3->tmp.min_ver)))",
          "881:         return 1;",
          "",
          "[Removed Lines]",
          "869: int ssl_cipher_disabled(SSL *s, const SSL_CIPHER *c, int op)",
          "876:     if (!SSL_IS_DTLS(s) && ((c->min_tls > s->s3->tmp.max_ver)",
          "877:                             || (c->max_tls < s->s3->tmp.min_ver)))",
          "878:         return 1;",
          "",
          "[Added Lines]",
          "870: int ssl_cipher_disabled(SSL *s, const SSL_CIPHER *c, int op, int ecdhe)",
          "877:     if (!SSL_IS_DTLS(s)) {",
          "878:         int min_tls = c->min_tls;",
          "884:         if (min_tls == TLS1_VERSION && ecdhe",
          "885:                 && (c->algorithm_mkey & (SSL_kECDHE | SSL_kECDHEPSK)) != 0)",
          "886:             min_tls = SSL3_VERSION;",
          "888:         if ((min_tls > s->s3->tmp.max_ver) || (c->max_tls < s->s3->tmp.min_ver))",
          "889:             return 1;",
          "890:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3126315f41e3e9ddfc10d7524f49641a42697ab",
      "candidate_info": {
        "commit_hash": "c3126315f41e3e9ddfc10d7524f49641a42697ab",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c3126315f41e3e9ddfc10d7524f49641a42697ab",
        "files": [
          "crypto/cryptlib.c"
        ],
        "message": "The Cygwin gcc doesn't define _WIN32, don't pretend it does\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5060)\n\n(cherry picked from commit 4d3c278c1a4f940e098edac6de3d370b94d1bb8b)",
        "before_after_code_files": [
          "crypto/cryptlib.c||crypto/cryptlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/cryptlib.c||crypto/cryptlib.c": [
          "File: crypto/cryptlib.c -> crypto/cryptlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: }",
          "100: #endif",
          "103: # include <tchar.h>",
          "104: # include <signal.h>",
          "105: # ifdef __WATCOMC__",
          "",
          "[Removed Lines]",
          "102: #if defined(_WIN32) && !defined(__CYGWIN__)",
          "",
          "[Added Lines]",
          "102: #if defined(_WIN32)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "308: {",
          "309:     OPENSSL_showfatal(\"%s:%d: OpenSSL internal error: %s\\n\",",
          "310:                       file, line, message);",
          "312:     abort();",
          "313: #else",
          "",
          "[Removed Lines]",
          "311: #if !defined(_WIN32) || defined(__CYGWIN__)",
          "",
          "[Added Lines]",
          "311: #if !defined(_WIN32)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ebcdb354ebcc6a54fb49d4eff8d20f114e43313",
      "candidate_info": {
        "commit_hash": "6ebcdb354ebcc6a54fb49d4eff8d20f114e43313",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6ebcdb354ebcc6a54fb49d4eff8d20f114e43313",
        "files": [
          "crypto/objects/obj_dat.c"
        ],
        "message": "Fix an incoherent test.\n\nPointer 'o' is set inside a local buffer, so it can't be NULL.\nAlso fix coding style and add comments\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4754)\n(cherry picked from commit cef115ff0ca4255d3decc1dda87c5418a961fd2c)",
        "before_after_code_files": [
          "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
          "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "654:             while (isspace((unsigned char)*s))",
          "655:                 s++;",
          "657:                 s = NULL;",
          "659:                 l = s;",
          "660:                 while ((*l != '\\0') && !isspace((unsigned char)*l))",
          "661:                     l++;",
          "",
          "[Removed Lines]",
          "656:             if (*s == '\\0')",
          "658:             else {",
          "",
          "[Added Lines]",
          "660:             if (*s == '\\0') {",
          "662:             } else {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "664:                     while (isspace((unsigned char)*l))",
          "665:                         l++;",
          "667:                         l = NULL;",
          "669:                     l = NULL;",
          "670:             }",
          "672:             s = NULL;",
          "675:         if (!OBJ_create(o, s, l))",
          "676:             return (num);",
          "677:         num++;",
          "",
          "[Removed Lines]",
          "666:                     if (*l == '\\0')",
          "668:                 } else",
          "671:         } else",
          "673:         if ((o == NULL) || (*o == '\\0'))",
          "674:             return (num);",
          "",
          "[Added Lines]",
          "670:                     if (*l == '\\0') {",
          "672:                     }",
          "673:                 } else {",
          "675:                 }",
          "677:         } else {",
          "679:         }",
          "680:         if (*o == '\\0')",
          "681:             return num;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "382253938fd95d8ac65c56ba74b5cf95b05f6ebf",
      "candidate_info": {
        "commit_hash": "382253938fd95d8ac65c56ba74b5cf95b05f6ebf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/382253938fd95d8ac65c56ba74b5cf95b05f6ebf",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0h-dev\n\nReviewed-by: Andy Polyakov <appro@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010007fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0g-fips  2 Nov 2017\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0g  2 Nov 2017\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100080L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0h-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0h-dev  xx XXX xxxx\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c188d4af022700961882971b90b70ac71702470",
      "candidate_info": {
        "commit_hash": "7c188d4af022700961882971b90b70ac71702470",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7c188d4af022700961882971b90b70ac71702470",
        "files": [
          "e_os.h"
        ],
        "message": "Remove NO_DIRENT; it isn't used anywhere\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4261)\n\n(cherry picked from commit 32c1356302e74dfa5e8bd2d7002c18d91a323b70)",
        "before_after_code_files": [
          "e_os.h||e_os.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "e_os.h||e_os.h": [
          "File: e_os.h -> e_os.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "171: #  if !defined(WINNT) && !defined(__DJGPP__)",
          "172: #   define NO_SYSLOG",
          "173: #  endif",
          "176: #  ifdef WINDOWS",
          "177: #   if !defined(_WIN32_WCE) && !defined(_WIN32_WINNT)",
          "",
          "[Removed Lines]",
          "174: #  define NO_DIRENT",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}