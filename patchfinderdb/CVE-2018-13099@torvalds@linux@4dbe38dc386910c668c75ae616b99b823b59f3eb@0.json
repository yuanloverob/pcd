{
  "cve_id": "CVE-2018-13099",
  "cve_desc": "An issue was discovered in fs/f2fs/inline.c in the Linux kernel through 4.4. A denial of service (out-of-bounds memory access and BUG) can occur for a modified f2fs filesystem image in which an inline inode contains an invalid reserved blkaddr.",
  "repo": "torvalds/linux",
  "patch_hash": "4dbe38dc386910c668c75ae616b99b823b59f3eb",
  "patch_info": {
    "commit_hash": "4dbe38dc386910c668c75ae616b99b823b59f3eb",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/4dbe38dc386910c668c75ae616b99b823b59f3eb",
    "files": [
      "fs/f2fs/inline.c"
    ],
    "message": "f2fs: fix to do sanity check with reserved blkaddr of inline inode\n\nAs Wen Xu reported in bugzilla, after image was injected with random data\nby fuzzing, inline inode would contain invalid reserved blkaddr, then\nduring inline conversion, we will encounter illegal memory accessing\nreported by KASAN, the root cause of this is when writing out converted\ninline page, we will use invalid reserved blkaddr to update sit bitmap,\nresult in accessing memory beyond sit bitmap boundary.\n\nIn order to fix this issue, let's do sanity check with reserved block\naddress of inline inode to avoid above condition.\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=200179\n\n[ 1428.846352] BUG: KASAN: use-after-free in update_sit_entry+0x80/0x7f0\n[ 1428.846618] Read of size 4 at addr ffff880194483540 by task a.out/2741\n\n[ 1428.846855] CPU: 0 PID: 2741 Comm: a.out Tainted: G        W         4.17.0+ #1\n[ 1428.846858] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[ 1428.846860] Call Trace:\n[ 1428.846868]  dump_stack+0x71/0xab\n[ 1428.846875]  print_address_description+0x6b/0x290\n[ 1428.846881]  kasan_report+0x28e/0x390\n[ 1428.846888]  ? update_sit_entry+0x80/0x7f0\n[ 1428.846898]  update_sit_entry+0x80/0x7f0\n[ 1428.846906]  f2fs_allocate_data_block+0x6db/0xc70\n[ 1428.846914]  ? f2fs_get_node_info+0x14f/0x590\n[ 1428.846920]  do_write_page+0xc8/0x150\n[ 1428.846928]  f2fs_outplace_write_data+0xfe/0x210\n[ 1428.846935]  ? f2fs_do_write_node_page+0x170/0x170\n[ 1428.846941]  ? radix_tree_tag_clear+0xff/0x130\n[ 1428.846946]  ? __mod_node_page_state+0x22/0xa0\n[ 1428.846951]  ? inc_zone_page_state+0x54/0x100\n[ 1428.846956]  ? __test_set_page_writeback+0x336/0x5d0\n[ 1428.846964]  f2fs_convert_inline_page+0x407/0x6d0\n[ 1428.846971]  ? f2fs_read_inline_data+0x3b0/0x3b0\n[ 1428.846978]  ? __get_node_page+0x335/0x6b0\n[ 1428.846987]  f2fs_convert_inline_inode+0x41b/0x500\n[ 1428.846994]  ? f2fs_convert_inline_page+0x6d0/0x6d0\n[ 1428.847000]  ? kasan_unpoison_shadow+0x31/0x40\n[ 1428.847005]  ? kasan_kmalloc+0xa6/0xd0\n[ 1428.847024]  f2fs_file_mmap+0x79/0xc0\n[ 1428.847029]  mmap_region+0x58b/0x880\n[ 1428.847037]  ? arch_get_unmapped_area+0x370/0x370\n[ 1428.847042]  do_mmap+0x55b/0x7a0\n[ 1428.847048]  vm_mmap_pgoff+0x16f/0x1c0\n[ 1428.847055]  ? vma_is_stack_for_current+0x50/0x50\n[ 1428.847062]  ? __fsnotify_update_child_dentry_flags.part.1+0x160/0x160\n[ 1428.847068]  ? do_sys_open+0x206/0x2a0\n[ 1428.847073]  ? __fget+0xb4/0x100\n[ 1428.847079]  ksys_mmap_pgoff+0x278/0x360\n[ 1428.847085]  ? find_mergeable_anon_vma+0x50/0x50\n[ 1428.847091]  do_syscall_64+0x73/0x160\n[ 1428.847098]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[ 1428.847102] RIP: 0033:0x7fb1430766ba\n[ 1428.847103] Code: 89 f5 41 54 49 89 fc 55 53 74 35 49 63 e8 48 63 da 4d 89 f9 49 89 e8 4d 63 d6 48 89 da 4c 89 ee 4c 89 e7 b8 09 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 56 5b 5d 41 5c 41 5d 41 5e 41 5f c3 0f 1f 00\n[ 1428.847162] RSP: 002b:00007ffc651d9388 EFLAGS: 00000246 ORIG_RAX: 0000000000000009\n[ 1428.847167] RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007fb1430766ba\n[ 1428.847170] RDX: 0000000000000001 RSI: 0000000000001000 RDI: 0000000000000000\n[ 1428.847173] RBP: 0000000000000003 R08: 0000000000000003 R09: 0000000000000000\n[ 1428.847176] R10: 0000000000008002 R11: 0000000000000246 R12: 0000000000000000\n[ 1428.847179] R13: 0000000000001000 R14: 0000000000008002 R15: 0000000000000000\n\n[ 1428.847252] Allocated by task 2683:\n[ 1428.847372]  kasan_kmalloc+0xa6/0xd0\n[ 1428.847380]  kmem_cache_alloc+0xc8/0x1e0\n[ 1428.847385]  getname_flags+0x73/0x2b0\n[ 1428.847390]  user_path_at_empty+0x1d/0x40\n[ 1428.847395]  vfs_statx+0xc1/0x150\n[ 1428.847401]  __do_sys_newlstat+0x7e/0xd0\n[ 1428.847405]  do_syscall_64+0x73/0x160\n[ 1428.847411]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n[ 1428.847466] Freed by task 2683:\n[ 1428.847566]  __kasan_slab_free+0x137/0x190\n[ 1428.847571]  kmem_cache_free+0x85/0x1e0\n[ 1428.847575]  filename_lookup+0x191/0x280\n[ 1428.847580]  vfs_statx+0xc1/0x150\n[ 1428.847585]  __do_sys_newlstat+0x7e/0xd0\n[ 1428.847590]  do_syscall_64+0x73/0x160\n[ 1428.847596]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n[ 1428.847648] The buggy address belongs to the object at ffff880194483300\n                which belongs to the cache names_cache of size 4096\n[ 1428.847946] The buggy address is located 576 bytes inside of\n                4096-byte region [ffff880194483300, ffff880194484300)\n[ 1428.848234] The buggy address belongs to the page:\n[ 1428.848366] page:ffffea0006512000 count:1 mapcount:0 mapping:ffff8801f3586380 index:0x0 compound_mapcount: 0\n[ 1428.848606] flags: 0x17fff8000008100(slab|head)\n[ 1428.848737] raw: 017fff8000008100 dead000000000100 dead000000000200 ffff8801f3586380\n[ 1428.848931] raw: 0000000000000000 0000000000070007 00000001ffffffff 0000000000000000\n[ 1428.849122] page dumped because: kasan: bad access detected\n\n[ 1428.849305] Memory state around the buggy address:\n[ 1428.849436]  ffff880194483400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849620]  ffff880194483480: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849804] >ffff880194483500: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849985]                                            ^\n[ 1428.850120]  ffff880194483580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.850303]  ffff880194483600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.850498] ==================================================================\n\nReported-by: Wen Xu <wen.xu@gatech.edu>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "before_after_code_files": [
      "fs/f2fs/inline.c||fs/f2fs/inline.c"
    ]
  },
  "patch_diff": {
    "fs/f2fs/inline.c||fs/f2fs/inline.c": [
      "File: fs/f2fs/inline.c -> fs/f2fs/inline.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130:  if (err)",
      "131:   return err;",
      "133:  f2fs_bug_on(F2FS_P_SB(page), PageWriteback(page));",
      "135:  f2fs_do_read_inline_data(page, dn->inode_page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:  if (unlikely(dn->data_blkaddr != NEW_ADDR)) {",
      "134:   f2fs_put_dnode(dn);",
      "135:   set_sbi_flag(fio.sbi, SBI_NEED_FSCK);",
      "136:   f2fs_msg(fio.sbi->sb, KERN_WARNING,",
      "137:    \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, \"",
      "138:    \"run fsck to fix.\",",
      "139:    __func__, dn->inode->i_ino, dn->data_blkaddr);",
      "140:   return -EINVAL;",
      "141:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "363:  if (err)",
      "364:   goto out;",
      "366:  f2fs_wait_on_page_writeback(page, DATA, true);",
      "368:  dentry_blk = page_address(page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "376:  if (unlikely(dn.data_blkaddr != NEW_ADDR)) {",
      "377:   f2fs_put_dnode(&dn);",
      "378:   set_sbi_flag(F2FS_P_SB(page), SBI_NEED_FSCK);",
      "379:   f2fs_msg(F2FS_P_SB(page)->sb, KERN_WARNING,",
      "380:    \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, \"",
      "381:    \"run fsck to fix.\",",
      "382:    __func__, dir->i_ino, dn.data_blkaddr);",
      "383:   err = -EINVAL;",
      "384:   goto out;",
      "385:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42bf546c1fe3f3654bdf914e977acbc2b80a5be5",
      "candidate_info": {
        "commit_hash": "42bf546c1fe3f3654bdf914e977acbc2b80a5be5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/42bf546c1fe3f3654bdf914e977acbc2b80a5be5",
        "files": [
          "fs/f2fs/super.c"
        ],
        "message": "f2fs: fix to do sanity check with secs_per_zone\n\nAs Wen Xu reported in below link:\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=200183\n\n- Overview\nDivide zero in reset_curseg() when mounting a crafted f2fs image\n\n- Reproduce\n\n- Kernel message\n[  588.281510] divide error: 0000 [#1] SMP KASAN PTI\n[  588.282701] CPU: 0 PID: 1293 Comm: mount Not tainted 4.18.0-rc1+ #4\n[  588.284000] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[  588.286178] RIP: 0010:reset_curseg+0x94/0x1a0\n[  588.298166] RSP: 0018:ffff8801e88d7940 EFLAGS: 00010246\n[  588.299360] RAX: 0000000000000014 RBX: ffff8801e1d46d00 RCX: ffffffffb88bf60b\n[  588.300809] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff8801e1d46d64\n[  588.305272] R13: 0000000000000000 R14: 0000000000000014 R15: 0000000000000000\n[  588.306822] FS:  00007fad85008840(0000) GS:ffff8801f6e00000(0000) knlGS:0000000000000000\n[  588.308456] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  588.309623] CR2: 0000000001705078 CR3: 00000001f30f8000 CR4: 00000000000006f0\n[  588.311085] Call Trace:\n[  588.311637]  f2fs_build_segment_manager+0x103f/0x3410\n[  588.316136]  ? f2fs_commit_super+0x1b0/0x1b0\n[  588.317031]  ? set_blocksize+0x90/0x140\n[  588.319473]  f2fs_mount+0x15/0x20\n[  588.320166]  mount_fs+0x60/0x1a0\n[  588.320847]  ? alloc_vfsmnt+0x309/0x360\n[  588.321647]  vfs_kern_mount+0x6b/0x1a0\n[  588.322432]  do_mount+0x34a/0x18c0\n[  588.323175]  ? strndup_user+0x46/0x70\n[  588.323937]  ? copy_mount_string+0x20/0x20\n[  588.324793]  ? memcg_kmem_put_cache+0x1b/0xa0\n[  588.325702]  ? kasan_check_write+0x14/0x20\n[  588.326562]  ? _copy_from_user+0x6a/0x90\n[  588.327375]  ? memdup_user+0x42/0x60\n[  588.328118]  ksys_mount+0x83/0xd0\n[  588.328808]  __x64_sys_mount+0x67/0x80\n[  588.329607]  do_syscall_64+0x78/0x170\n[  588.330400]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[  588.331461] RIP: 0033:0x7fad848e8b9a\n[  588.336022] RSP: 002b:00007ffd7c5b6be8 EFLAGS: 00000206 ORIG_RAX: 00000000000000a5\n[  588.337547] RAX: ffffffffffffffda RBX: 00000000016f8030 RCX: 00007fad848e8b9a\n[  588.338999] RDX: 00000000016f8210 RSI: 00000000016f9f30 RDI: 0000000001700ec0\n[  588.340442] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000013\n[  588.341887] R10: 00000000c0ed0000 R11: 0000000000000206 R12: 0000000001700ec0\n[  588.343341] R13: 00000000016f8210 R14: 0000000000000000 R15: 0000000000000003\n[  588.354891] ---[ end trace 4ce02f25ff7d3df5 ]---\n[  588.355862] RIP: 0010:reset_curseg+0x94/0x1a0\n[  588.360742] RSP: 0018:ffff8801e88d7940 EFLAGS: 00010246\n[  588.361812] RAX: 0000000000000014 RBX: ffff8801e1d46d00 RCX: ffffffffb88bf60b\n[  588.363485] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff8801e1d46d64\n[  588.365213] RBP: ffff8801e88d7968 R08: ffffed003c32266f R09: ffffed003c32266f\n[  588.366661] R10: 0000000000000001 R11: ffffed003c32266e R12: ffff8801f0337700\n[  588.368110] R13: 0000000000000000 R14: 0000000000000014 R15: 0000000000000000\n[  588.370057] FS:  00007fad85008840(0000) GS:ffff8801f6e00000(0000) knlGS:0000000000000000\n[  588.372099] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  588.373291] CR2: 0000000001705078 CR3: 00000001f30f8000 CR4: 00000000000006f0\n\n- Location\nhttps://elixir.bootlin.com/linux/latest/source/fs/f2fs/segment.c#L2147\n        curseg->zone = GET_ZONE_FROM_SEG(sbi, curseg->segno);\n\nIf secs_per_zone is corrupted due to fuzzing test, it will cause divide\nzero operation when using GET_ZONE_FROM_SEG macro, so we should do more\nsanity check with secs_per_zone during mount to avoid this issue.\n\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
        "before_after_code_files": [
          "fs/f2fs/super.c||fs/f2fs/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/f2fs/super.c||fs/f2fs/super.c": [
          "File: fs/f2fs/super.c -> fs/f2fs/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2227:   return 1;",
          "2228:  }",
          "2231:   f2fs_msg(sb, KERN_INFO,",
          "2233:    secs_per_zone, total_sections);",
          "2234:   return 1;",
          "2235:  }",
          "",
          "[Removed Lines]",
          "2230:  if (secs_per_zone > total_sections) {",
          "2232:    \"Wrong secs_per_zone (%u > %u)\",",
          "",
          "[Added Lines]",
          "2230:  if (secs_per_zone > total_sections || !secs_per_zone) {",
          "2232:    \"Wrong secs_per_zone / total_sections (%u, %u)\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6afebb70ee7a4bde106dc1a875e7ac7997248f84",
      "candidate_info": {
        "commit_hash": "6afebb70ee7a4bde106dc1a875e7ac7997248f84",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6afebb70ee7a4bde106dc1a875e7ac7997248f84",
        "files": [
          "drivers/mfd/hi655x-pmic.c"
        ],
        "message": "mfd: hi655x: Fix regmap area declared size for hi655x\n\nFixes https://bugs.linaro.org/show_bug.cgi?id=3903\n\nLTP Functional tests have caused a bad paging request when triggering\nthe regmap_read_debugfs() logic of the device PMIC Hi6553 (reading\nregmap/f8000000.pmic/registers file during read_all test):\n\nUnable to handle kernel paging request at virtual address ffff0\n[ffff00000984e000] pgd=0000000077ffe803, pud=0000000077ffd803,0\nInternal error: Oops: 96000007 [#1] SMP\n...\nHardware name: HiKey Development Board (DT)\n...\nCall trace:\n regmap_mmio_read8+0x24/0x40\n regmap_mmio_read+0x48/0x70\n _regmap_bus_reg_read+0x38/0x48\n _regmap_read+0x68/0x170\n regmap_read+0x50/0x78\n regmap_read_debugfs+0x1a0/0x308\n regmap_map_read_file+0x48/0x58\n full_proxy_read+0x68/0x98\n __vfs_read+0x48/0x80\n vfs_read+0x94/0x150\n SyS_read+0x6c/0xd8\n el0_svc_naked+0x30/0x34\nCode: aa1e03e0 d503201f f9400280 8b334000 (39400000)\n\nInvestigations have showed that, when triggered by debugfs read()\nhandler, the mmio regmap logic was reading a bigger (16k) register area\nthan the one mapped by devm_ioremap_resource() during hi655x-pmic probe\ntime (4k).\n\nThis commit changes hi655x's max register, according to HW specs, to be\nthe same as the one declared in the pmic device in hi6220's dts, fixing\nthe issue.\n\nCc: <stable@vger.kernel.org> #v4.9 #v4.14 #v4.16 #v4.17\nSigned-off-by: Rafael David Tinoco <rafael.tinoco@linaro.org>\nSigned-off-by: Lee Jones <lee.jones@linaro.org>",
        "before_after_code_files": [
          "drivers/mfd/hi655x-pmic.c||drivers/mfd/hi655x-pmic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mfd/hi655x-pmic.c||drivers/mfd/hi655x-pmic.c": [
          "File: drivers/mfd/hi655x-pmic.c -> drivers/mfd/hi655x-pmic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  .reg_bits = 32,",
          "50:  .reg_stride = HI655X_STRIDE,",
          "51:  .val_bits = 8,",
          "53: };",
          "55: static struct resource pwrkey_resources[] = {",
          "",
          "[Removed Lines]",
          "52:  .max_register = HI655X_BUS_ADDR(0xFFF),",
          "",
          "[Added Lines]",
          "52:  .max_register = HI655X_BUS_ADDR(0x400) - HI655X_STRIDE,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9dc956b2c8523aed39d1e6508438be9fea28c8fc",
      "candidate_info": {
        "commit_hash": "9dc956b2c8523aed39d1e6508438be9fea28c8fc",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9dc956b2c8523aed39d1e6508438be9fea28c8fc",
        "files": [
          "fs/f2fs/super.c"
        ],
        "message": "f2fs: fix to do sanity check with user_block_count\n\nThis patch fixs to do sanity check with user_block_count.\n\n- Overview\nDivide zero in utilization when mount() a corrupted f2fs image\n\n- Reproduce (4.18 upstream kernel)\n\n- Kernel message\n[  564.099503] F2FS-fs (loop0): invalid crc value\n[  564.101991] divide error: 0000 [#1] SMP KASAN PTI\n[  564.103103] CPU: 1 PID: 1298 Comm: f2fs_discard-7: Not tainted 4.18.0-rc1+ #4\n[  564.104584] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[  564.106624] RIP: 0010:issue_discard_thread+0x248/0x5c0\n[  564.107692] Code: ff ff 48 8b bd e8 fe ff ff 41 8b 9d 4c 04 00 00 e8 cd b8 ad ff 41 8b 85 50 04 00 00 31 d2 48 8d 04 80 48 8d 04 80 48 c1 e0 02 <48> f7 f3 83 f8 50 7e 16 41 c7 86 7c ff ff ff 01 00 00 00 41 c7 86\n[  564.111686] RSP: 0018:ffff8801f3117dc0 EFLAGS: 00010206\n[  564.112775] RAX: 0000000000000384 RBX: 0000000000000000 RCX: ffffffffb88c1e03\n[  564.114250] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff8801e3aa4850\n[  564.115706] RBP: ffff8801f3117f00 R08: 1ffffffff751a1d0 R09: fffffbfff751a1d0\n[  564.117177] R10: 0000000000000001 R11: fffffbfff751a1d0 R12: 00000000fffffffc\n[  564.118634] R13: ffff8801e3aa4400 R14: ffff8801f3117ed8 R15: ffff8801e2050000\n[  564.120094] FS:  0000000000000000(0000) GS:ffff8801f6f00000(0000) knlGS:0000000000000000\n[  564.121748] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  564.122923] CR2: 000000000202b078 CR3: 00000001f11ac000 CR4: 00000000000006e0\n[  564.124383] Call Trace:\n[  564.124924]  ? __issue_discard_cmd+0x480/0x480\n[  564.125882]  ? __sched_text_start+0x8/0x8\n[  564.126756]  ? __kthread_parkme+0xcb/0x100\n[  564.127620]  ? kthread_blkcg+0x70/0x70\n[  564.128412]  kthread+0x180/0x1d0\n[  564.129105]  ? __issue_discard_cmd+0x480/0x480\n[  564.130029]  ? kthread_associate_blkcg+0x150/0x150\n[  564.131033]  ret_from_fork+0x35/0x40\n[  564.131794] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core snd_pcm snd_timer snd mac_hid i2c_piix4 soundcore ib_iser rdma_cm iw_cm ib_cm ib_core iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid1 raid0 multipath linear 8139too crct10dif_pclmul crc32_pclmul qxl drm_kms_helper syscopyarea aesni_intel sysfillrect sysimgblt fb_sys_fops ttm drm aes_x86_64 crypto_simd cryptd 8139cp glue_helper mii pata_acpi floppy\n[  564.141798] ---[ end trace 4ce02f25ff7d3df5 ]---\n[  564.142773] RIP: 0010:issue_discard_thread+0x248/0x5c0\n[  564.143885] Code: ff ff 48 8b bd e8 fe ff ff 41 8b 9d 4c 04 00 00 e8 cd b8 ad ff 41 8b 85 50 04 00 00 31 d2 48 8d 04 80 48 8d 04 80 48 c1 e0 02 <48> f7 f3 83 f8 50 7e 16 41 c7 86 7c ff ff ff 01 00 00 00 41 c7 86\n[  564.147776] RSP: 0018:ffff8801f3117dc0 EFLAGS: 00010206\n[  564.148856] RAX: 0000000000000384 RBX: 0000000000000000 RCX: ffffffffb88c1e03\n[  564.150424] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff8801e3aa4850\n[  564.151906] RBP: ffff8801f3117f00 R08: 1ffffffff751a1d0 R09: fffffbfff751a1d0\n[  564.153463] R10: 0000000000000001 R11: fffffbfff751a1d0 R12: 00000000fffffffc\n[  564.154915] R13: ffff8801e3aa4400 R14: ffff8801f3117ed8 R15: ffff8801e2050000\n[  564.156405] FS:  0000000000000000(0000) GS:ffff8801f6f00000(0000) knlGS:0000000000000000\n[  564.158070] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  564.159279] CR2: 000000000202b078 CR3: 00000001f11ac000 CR4: 00000000000006e0\n[  564.161043] ==================================================================\n[  564.162587] BUG: KASAN: stack-out-of-bounds in from_kuid_munged+0x1d/0x50\n[  564.163994] Read of size 4 at addr ffff8801f3117c84 by task f2fs_discard-7:/1298\n\n[  564.165852] CPU: 1 PID: 1298 Comm: f2fs_discard-7: Tainted: G      D           4.18.0-rc1+ #4\n[  564.167593] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[  564.169522] Call Trace:\n[  564.170057]  dump_stack+0x7b/0xb5\n[  564.170778]  print_address_description+0x70/0x290\n[  564.171765]  kasan_report+0x291/0x390\n[  564.172540]  ? from_kuid_munged+0x1d/0x50\n[  564.173408]  __asan_load4+0x78/0x80\n[  564.174148]  from_kuid_munged+0x1d/0x50\n[  564.174962]  do_notify_parent+0x1f5/0x4f0\n[  564.175808]  ? send_sigqueue+0x390/0x390\n[  564.176639]  ? css_set_move_task+0x152/0x340\n[  564.184197]  do_exit+0x1290/0x1390\n[  564.184950]  ? __issue_discard_cmd+0x480/0x480\n[  564.185884]  ? mm_update_next_owner+0x380/0x380\n[  564.186829]  ? __sched_text_start+0x8/0x8\n[  564.187672]  ? __kthread_parkme+0xcb/0x100\n[  564.188528]  ? kthread_blkcg+0x70/0x70\n[  564.189333]  ? kthread+0x180/0x1d0\n[  564.190052]  ? __issue_discard_cmd+0x480/0x480\n[  564.190983]  rewind_stack_do_exit+0x17/0x20\n\n[  564.192190] The buggy address belongs to the page:\n[  564.193213] page:ffffea0007cc45c0 count:0 mapcount:0 mapping:0000000000000000 index:0x0\n[  564.194856] flags: 0x2ffff0000000000()\n[  564.195644] raw: 02ffff0000000000 0000000000000000 dead000000000200 0000000000000000\n[  564.197247] raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\n[  564.198826] page dumped because: kasan: bad access detected\n\n[  564.200299] Memory state around the buggy address:\n[  564.201306]  ffff8801f3117b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[  564.202779]  ffff8801f3117c00: 00 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3\n[  564.204252] >ffff8801f3117c80: f3 f3 f3 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n[  564.205742]                    ^\n[  564.206424]  ffff8801f3117d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[  564.207908]  ffff8801f3117d80: f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00\n[  564.209389] ==================================================================\n[  564.231795] F2FS-fs (loop0): Mounted with checkpoint version = 2\n\n- Location\nhttps://elixir.bootlin.com/linux/v4.18-rc1/source/fs/f2fs/segment.h#L586\n\treturn div_u64((u64)valid_user_blocks(sbi) * 100,\n\t\t\t\t\tsbi->user_block_count);\nMissing checks on sbi->user_block_count.\n\nReported-by: Wen Xu <wen.xu@gatech.edu>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
        "before_after_code_files": [
          "fs/f2fs/super.c||fs/f2fs/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/f2fs/super.c||fs/f2fs/super.c": [
          "File: fs/f2fs/super.c -> fs/f2fs/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2283:  unsigned int sit_segs, nat_segs;",
          "2284:  unsigned int sit_bitmap_size, nat_bitmap_size;",
          "2285:  unsigned int log_blocks_per_seg;",
          "2286:  int i;",
          "2288:  total = le32_to_cpu(raw_super->segment_count);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2286:  unsigned int segment_count_main;",
          "2287:  block_t user_block_count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2307:   return 1;",
          "2308:  }",
          "2310:  main_segs = le32_to_cpu(raw_super->segment_count_main);",
          "2311:  blocks_per_seg = sbi->blocks_per_seg;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2312:  user_block_count = le64_to_cpu(ckpt->user_block_count);",
          "2313:  segment_count_main = le32_to_cpu(raw_super->segment_count_main);",
          "2314:  log_blocks_per_seg = le32_to_cpu(raw_super->log_blocks_per_seg);",
          "2315:  if (!user_block_count || user_block_count >=",
          "2316:    segment_count_main << log_blocks_per_seg) {",
          "2317:   f2fs_msg(sbi->sb, KERN_ERR,",
          "2318:    \"Wrong user_block_count: %u\", user_block_count);",
          "2319:   return 1;",
          "2320:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2324:  sit_bitmap_size = le32_to_cpu(ckpt->sit_ver_bitmap_bytesize);",
          "2325:  nat_bitmap_size = le32_to_cpu(ckpt->nat_ver_bitmap_bytesize);",
          "2328:  if (sit_bitmap_size != ((sit_segs / 2) << log_blocks_per_seg) / 8 ||",
          "2329:   nat_bitmap_size != ((nat_segs / 2) << log_blocks_per_seg) / 8) {",
          "",
          "[Removed Lines]",
          "2326:  log_blocks_per_seg = le32_to_cpu(raw_super->log_blocks_per_seg);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e34438c903b653daca2b2a7de95aed46226f8ed3",
      "candidate_info": {
        "commit_hash": "e34438c903b653daca2b2a7de95aed46226f8ed3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e34438c903b653daca2b2a7de95aed46226f8ed3",
        "files": [
          "fs/f2fs/inode.c"
        ],
        "message": "f2fs: fix to do sanity check with node footer and iblocks\n\nThis patch adds to do sanity check with below fields of inode to\navoid reported panic.\n- node footer\n- iblocks\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=200223\n\n- Overview\nBUG() triggered in f2fs_truncate_inode_blocks() when un-mounting a mounted f2fs image after writing to it\n\n- Reproduce\n\n- POC (poc.c)\n\nstatic void activity(char *mpoint) {\n\n  char *foo_bar_baz;\n  int err;\n\n  static int buf[8192];\n  memset(buf, 0, sizeof(buf));\n\n  err = asprintf(&foo_bar_baz, \"%s/foo/bar/baz\", mpoint);\n\n  // open / write / read\n  int fd = open(foo_bar_baz, O_RDWR | O_TRUNC, 0777);\n  if (fd >= 0) {\n    write(fd, (char *)buf, 517);\n    write(fd, (char *)buf, sizeof(buf));\n    close(fd);\n  }\n\n}\n\nint main(int argc, char *argv[]) {\n  activity(argv[1]);\n  return 0;\n}\n\n- Kernel meesage\n[  552.479723] F2FS-fs (loop0): Mounted with checkpoint version = 2\n[  556.451891] ------------[ cut here ]------------\n[  556.451899] kernel BUG at fs/f2fs/node.c:987!\n[  556.452920] invalid opcode: 0000 [#1] SMP KASAN PTI\n[  556.453936] CPU: 1 PID: 1310 Comm: umount Not tainted 4.18.0-rc1+ #4\n[  556.455213] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[  556.457140] RIP: 0010:f2fs_truncate_inode_blocks+0x4a7/0x6f0\n[  556.458280] Code: e8 ae ea ff ff 41 89 c7 c1 e8 1f 84 c0 74 0a 41 83 ff fe 0f 85 35 ff ff ff 81 85 b0 fe ff ff fb 03 00 00 e9 f7 fd ff ff 0f 0b <0f> 0b e8 62 b7 9a 00 48 8b bd a0 fe ff ff e8 56 54 ae ff 48 8b b5\n[  556.462015] RSP: 0018:ffff8801f292f808 EFLAGS: 00010286\n[  556.463068] RAX: ffffed003e73242d RBX: ffff8801f292f958 RCX: ffffffffb88b81bc\n[  556.464479] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff8801f3992164\n[  556.465901] RBP: ffff8801f292f980 R08: ffffed003e73242d R09: ffffed003e73242d\n[  556.467311] R10: 0000000000000001 R11: ffffed003e73242c R12: 00000000fffffc64\n[  556.468706] R13: ffff8801f3992000 R14: 0000000000000058 R15: 00000000ffff8801\n[  556.470117] FS:  00007f8029297840(0000) GS:ffff8801f6f00000(0000) knlGS:0000000000000000\n[  556.471702] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  556.472838] CR2: 000055f5f57305d8 CR3: 00000001f18b0000 CR4: 00000000000006e0\n[  556.474265] Call Trace:\n[  556.474782]  ? f2fs_alloc_nid_failed+0xf0/0xf0\n[  556.475686]  ? truncate_nodes+0x980/0x980\n[  556.476516]  ? pagecache_get_page+0x21f/0x2f0\n[  556.477412]  ? __asan_loadN+0xf/0x20\n[  556.478153]  ? __get_node_page+0x331/0x5b0\n[  556.478992]  ? reweight_entity+0x1e6/0x3b0\n[  556.479826]  f2fs_truncate_blocks+0x55e/0x740\n[  556.480709]  ? f2fs_truncate_data_blocks+0x20/0x20\n[  556.481689]  ? __radix_tree_lookup+0x34/0x160\n[  556.482630]  ? radix_tree_lookup+0xd/0x10\n[  556.483445]  f2fs_truncate+0xd4/0x1a0\n[  556.484206]  f2fs_evict_inode+0x5ce/0x630\n[  556.485032]  evict+0x16f/0x290\n[  556.485664]  iput+0x280/0x300\n[  556.486300]  dentry_unlink_inode+0x165/0x1e0\n[  556.487169]  __dentry_kill+0x16a/0x260\n[  556.487936]  dentry_kill+0x70/0x250\n[  556.488651]  shrink_dentry_list+0x125/0x260\n[  556.489504]  shrink_dcache_parent+0xc1/0x110\n[  556.490379]  ? shrink_dcache_sb+0x200/0x200\n[  556.491231]  ? bit_wait_timeout+0xc0/0xc0\n[  556.492047]  do_one_tree+0x12/0x40\n[  556.492743]  shrink_dcache_for_umount+0x3f/0xa0\n[  556.493656]  generic_shutdown_super+0x43/0x1c0\n[  556.494561]  kill_block_super+0x52/0x80\n[  556.495341]  kill_f2fs_super+0x62/0x70\n[  556.496105]  deactivate_locked_super+0x6f/0xa0\n[  556.497004]  deactivate_super+0x5e/0x80\n[  556.497785]  cleanup_mnt+0x61/0xa0\n[  556.498492]  __cleanup_mnt+0x12/0x20\n[  556.499218]  task_work_run+0xc8/0xf0\n[  556.499949]  exit_to_usermode_loop+0x125/0x130\n[  556.500846]  do_syscall_64+0x138/0x170\n[  556.501609]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[  556.502659] RIP: 0033:0x7f8028b77487\n[  556.503384] Code: 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 31 f6 e9 09 00 00 00 66 0f 1f 84 00 00 00 00 00 b8 a6 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d e1 c9 2b 00 f7 d8 64 89 01 48\n[  556.507137] RSP: 002b:00007fff9f2e3598 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6\n[  556.508637] RAX: 0000000000000000 RBX: 0000000000ebd030 RCX: 00007f8028b77487\n[  556.510069] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000000000ec41e0\n[  556.511481] RBP: 0000000000ec41e0 R08: 0000000000000000 R09: 0000000000000014\n[  556.512892] R10: 00000000000006b2 R11: 0000000000000246 R12: 00007f802908083c\n[  556.514320] R13: 0000000000000000 R14: 0000000000ebd210 R15: 00007fff9f2e3820\n[  556.515745] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core snd_pcm snd_timer snd mac_hid i2c_piix4 soundcore ib_iser rdma_cm iw_cm ib_cm ib_core iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid1 raid0 multipath linear 8139too crct10dif_pclmul crc32_pclmul qxl drm_kms_helper syscopyarea aesni_intel sysfillrect sysimgblt fb_sys_fops ttm drm aes_x86_64 crypto_simd cryptd 8139cp glue_helper mii pata_acpi floppy\n[  556.529276] ---[ end trace 4ce02f25ff7d3df5 ]---\n[  556.530340] RIP: 0010:f2fs_truncate_inode_blocks+0x4a7/0x6f0\n[  556.531513] Code: e8 ae ea ff ff 41 89 c7 c1 e8 1f 84 c0 74 0a 41 83 ff fe 0f 85 35 ff ff ff 81 85 b0 fe ff ff fb 03 00 00 e9 f7 fd ff ff 0f 0b <0f> 0b e8 62 b7 9a 00 48 8b bd a0 fe ff ff e8 56 54 ae ff 48 8b b5\n[  556.535330] RSP: 0018:ffff8801f292f808 EFLAGS: 00010286\n[  556.536395] RAX: ffffed003e73242d RBX: ffff8801f292f958 RCX: ffffffffb88b81bc\n[  556.537824] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff8801f3992164\n[  556.539290] RBP: ffff8801f292f980 R08: ffffed003e73242d R09: ffffed003e73242d\n[  556.540709] R10: 0000000000000001 R11: ffffed003e73242c R12: 00000000fffffc64\n[  556.542131] R13: ffff8801f3992000 R14: 0000000000000058 R15: 00000000ffff8801\n[  556.543579] FS:  00007f8029297840(0000) GS:ffff8801f6f00000(0000) knlGS:0000000000000000\n[  556.545180] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  556.546338] CR2: 000055f5f57305d8 CR3: 00000001f18b0000 CR4: 00000000000006e0\n[  556.547809] ==================================================================\n[  556.549248] BUG: KASAN: stack-out-of-bounds in arch_tlb_gather_mmu+0x52/0x170\n[  556.550672] Write of size 8 at addr ffff8801f292fd10 by task umount/1310\n\n[  556.552338] CPU: 1 PID: 1310 Comm: umount Tainted: G      D           4.18.0-rc1+ #4\n[  556.553886] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[  556.555756] Call Trace:\n[  556.556264]  dump_stack+0x7b/0xb5\n[  556.556944]  print_address_description+0x70/0x290\n[  556.557903]  kasan_report+0x291/0x390\n[  556.558649]  ? arch_tlb_gather_mmu+0x52/0x170\n[  556.559537]  __asan_store8+0x57/0x90\n[  556.560268]  arch_tlb_gather_mmu+0x52/0x170\n[  556.561110]  tlb_gather_mmu+0x12/0x40\n[  556.561862]  exit_mmap+0x123/0x2a0\n[  556.562555]  ? __ia32_sys_munmap+0x50/0x50\n[  556.563384]  ? exit_aio+0x98/0x230\n[  556.564079]  ? __x32_compat_sys_io_submit+0x260/0x260\n[  556.565099]  ? taskstats_exit+0x1f4/0x640\n[  556.565925]  ? kasan_check_read+0x11/0x20\n[  556.566739]  ? mm_update_next_owner+0x322/0x380\n[  556.567652]  mmput+0x8b/0x1d0\n[  556.568260]  do_exit+0x43a/0x1390\n[  556.568937]  ? mm_update_next_owner+0x380/0x380\n[  556.569855]  ? deactivate_super+0x5e/0x80\n[  556.570668]  ? cleanup_mnt+0x61/0xa0\n[  556.571395]  ? __cleanup_mnt+0x12/0x20\n[  556.572156]  ? task_work_run+0xc8/0xf0\n[  556.572917]  ? exit_to_usermode_loop+0x125/0x130\n[  556.573861]  rewind_stack_do_exit+0x17/0x20\n[  556.574707] RIP: 0033:0x7f8028b77487\n[  556.575428] Code: Bad RIP value.\n[  556.576106] RSP: 002b:00007fff9f2e3598 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6\n[  556.577599] RAX: 0000000000000000 RBX: 0000000000ebd030 RCX: 00007f8028b77487\n[  556.579020] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000000000ec41e0\n[  556.580422] RBP: 0000000000ec41e0 R08: 0000000000000000 R09: 0000000000000014\n[  556.581833] R10: 00000000000006b2 R11: 0000000000000246 R12: 00007f802908083c\n[  556.583252] R13: 0000000000000000 R14: 0000000000ebd210 R15: 00007fff9f2e3820\n\n[  556.584983] The buggy address belongs to the page:\n[  556.585961] page:ffffea0007ca4bc0 count:0 mapcount:0 mapping:0000000000000000 index:0x0\n[  556.587540] flags: 0x2ffff0000000000()\n[  556.588296] raw: 02ffff0000000000 0000000000000000 dead000000000200 0000000000000000\n[  556.589822] raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\n[  556.591359] page dumped because: kasan: bad access detected\n\n[  556.592786] Memory state around the buggy address:\n[  556.593753]  ffff8801f292fc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[  556.595191]  ffff8801f292fc80: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00\n[  556.596613] >ffff8801f292fd00: 00 00 f3 00 00 00 00 f3 f3 00 00 00 00 f4 f4 f4\n[  556.598044]                          ^\n[  556.598797]  ffff8801f292fd80: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n[  556.600225]  ffff8801f292fe00: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 f4 f4 f4\n[  556.601647] ==================================================================\n\n- Location\nhttps://elixir.bootlin.com/linux/v4.18-rc1/source/fs/f2fs/node.c#L987\n\t\tcase NODE_DIND_BLOCK:\n\t\t\terr = truncate_nodes(&dn, nofs, offset[1], 3);\n\t\t\tcont = 0;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tBUG(); <---\n\t\t}\n\nReported-by Wen Xu <wen.xu@gatech.edu>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
        "before_after_code_files": [
          "fs/f2fs/inode.c||fs/f2fs/inode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/f2fs/inode.c||fs/f2fs/inode.c": [
          "File: fs/f2fs/inode.c -> fs/f2fs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:  ri->i_inode_checksum = cpu_to_le32(f2fs_inode_chksum(sbi, page));",
          "194: }",
          "197: {",
          "198:  struct f2fs_sb_info *sbi = F2FS_I_SB(inode);",
          "200:  if (f2fs_sb_has_flexible_inline_xattr(sbi->sb)",
          "201:    && !f2fs_has_extra_attr(inode)) {",
          "",
          "[Removed Lines]",
          "196: static bool sanity_check_inode(struct inode *inode)",
          "",
          "[Added Lines]",
          "196: static bool sanity_check_inode(struct inode *inode, struct page *node_page)",
          "199:  unsigned long long iblocks;",
          "201:  iblocks = le64_to_cpu(F2FS_INODE(node_page)->i_blocks);",
          "202:  if (!iblocks) {",
          "203:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "204:   f2fs_msg(sbi->sb, KERN_WARNING,",
          "205:    \"%s: corrupted inode i_blocks i_ino=%lx iblocks=%llu, \"",
          "206:    \"run fsck to fix.\",",
          "207:    __func__, inode->i_ino, iblocks);",
          "208:   return false;",
          "209:  }",
          "211:  if (ino_of_node(node_page) != nid_of_node(node_page)) {",
          "212:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "213:   f2fs_msg(sbi->sb, KERN_WARNING,",
          "214:    \"%s: corrupted inode footer i_ino=%lx, ino,nid: \"",
          "215:    \"[%u, %u] run fsck to fix.\",",
          "216:    __func__, inode->i_ino,",
          "217:    ino_of_node(node_page), nid_of_node(node_page));",
          "218:   return false;",
          "219:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  get_inline_info(inode, ri);",
          "271:   f2fs_put_page(node_page, 1);",
          "272:   return -EINVAL;",
          "273:  }",
          "",
          "[Removed Lines]",
          "270:  if (!sanity_check_inode(inode)) {",
          "",
          "[Added Lines]",
          "291:  if (!sanity_check_inode(inode, node_page)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3bc8fd637a9623f5c507bd18f9677effbddf584",
      "candidate_info": {
        "commit_hash": "c3bc8fd637a9623f5c507bd18f9677effbddf584",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c3bc8fd637a9623f5c507bd18f9677effbddf584",
        "files": [
          "include/linux/ftrace.h",
          "include/linux/irqflags.h",
          "include/linux/lockdep.h",
          "include/linux/preempt.h",
          "include/trace/events/preemptirq.h",
          "init/main.c",
          "kernel/locking/lockdep.c",
          "kernel/sched/core.c",
          "kernel/trace/Kconfig",
          "kernel/trace/Makefile",
          "kernel/trace/trace_irqsoff.c",
          "kernel/trace/trace_preemptirq.c"
        ],
        "message": "tracing: Centralize preemptirq tracepoints and unify their usage\n\nThis patch detaches the preemptirq tracepoints from the tracers and\nkeeps it separate.\n\nAdvantages:\n* Lockdep and irqsoff event can now run in parallel since they no longer\nhave their own calls.\n\n* This unifies the usecase of adding hooks to an irqsoff and irqson\nevent, and a preemptoff and preempton event.\n  3 users of the events exist:\n  - Lockdep\n  - irqsoff and preemptoff tracers\n  - irqs and preempt trace events\n\nThe unification cleans up several ifdefs and makes the code in preempt\ntracer and irqsoff tracers simpler. It gets rid of all the horrific\nifdeferry around PROVE_LOCKING and makes configuration of the different\nusers of the tracepoints more easy and understandable. It also gets rid\nof the time_* function calls from the lockdep hooks used to call into\nthe preemptirq tracer which is not needed anymore. The negative delta in\nlines of code in this patch is quite large too.\n\nIn the patch we introduce a new CONFIG option PREEMPTIRQ_TRACEPOINTS\nas a single point for registering probes onto the tracepoints. With\nthis,\nthe web of config options for preempt/irq toggle tracepoints and its\nusers becomes:\n\n PREEMPT_TRACER   PREEMPTIRQ_EVENTS  IRQSOFF_TRACER PROVE_LOCKING\n       |                 |     \\         |           |\n       \\    (selects)    /      \\        \\ (selects) /\n      TRACE_PREEMPT_TOGGLE       ----> TRACE_IRQFLAGS\n                      \\                  /\n                       \\ (depends on)   /\n                     PREEMPTIRQ_TRACEPOINTS\n\nOther than the performance tests mentioned in the previous patch, I also\nran the locking API test suite. I verified that all tests cases are\npassing.\n\nI also injected issues by not registering lockdep probes onto the\ntracepoints and I see failures to confirm that the probes are indeed\nworking.\n\nThis series + lockdep probes not registered (just to inject errors):\n[    0.000000]      hard-irqs-on + irq-safe-A/21:  ok  |  ok  |  ok  |\n[    0.000000]      soft-irqs-on + irq-safe-A/21:  ok  |  ok  |  ok  |\n[    0.000000]        sirq-safe-A => hirqs-on/12:FAILED|FAILED|  ok  |\n[    0.000000]        sirq-safe-A => hirqs-on/21:FAILED|FAILED|  ok  |\n[    0.000000]          hard-safe-A + irqs-on/12:FAILED|FAILED|  ok  |\n[    0.000000]          soft-safe-A + irqs-on/12:FAILED|FAILED|  ok  |\n[    0.000000]          hard-safe-A + irqs-on/21:FAILED|FAILED|  ok  |\n[    0.000000]          soft-safe-A + irqs-on/21:FAILED|FAILED|  ok  |\n[    0.000000]     hard-safe-A + unsafe-B #1/123:  ok  |  ok  |  ok  |\n[    0.000000]     soft-safe-A + unsafe-B #1/123:  ok  |  ok  |  ok  |\n\nWith this series + lockdep probes registered, all locking tests pass:\n\n[    0.000000]      hard-irqs-on + irq-safe-A/21:  ok  |  ok  |  ok  |\n[    0.000000]      soft-irqs-on + irq-safe-A/21:  ok  |  ok  |  ok  |\n[    0.000000]        sirq-safe-A => hirqs-on/12:  ok  |  ok  |  ok  |\n[    0.000000]        sirq-safe-A => hirqs-on/21:  ok  |  ok  |  ok  |\n[    0.000000]          hard-safe-A + irqs-on/12:  ok  |  ok  |  ok  |\n[    0.000000]          soft-safe-A + irqs-on/12:  ok  |  ok  |  ok  |\n[    0.000000]          hard-safe-A + irqs-on/21:  ok  |  ok  |  ok  |\n[    0.000000]          soft-safe-A + irqs-on/21:  ok  |  ok  |  ok  |\n[    0.000000]     hard-safe-A + unsafe-B #1/123:  ok  |  ok  |  ok  |\n[    0.000000]     soft-safe-A + unsafe-B #1/123:  ok  |  ok  |  ok  |\n\nLink: http://lkml.kernel.org/r/20180730222423.196630-4-joel@joelfernandes.org\n\nAcked-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReviewed-by: Namhyung Kim <namhyung@kernel.org>\nSigned-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>\nSigned-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>",
        "before_after_code_files": [
          "include/linux/ftrace.h||include/linux/ftrace.h",
          "include/linux/irqflags.h||include/linux/irqflags.h",
          "include/linux/lockdep.h||include/linux/lockdep.h",
          "include/linux/preempt.h||include/linux/preempt.h",
          "include/trace/events/preemptirq.h||include/trace/events/preemptirq.h",
          "init/main.c||init/main.c",
          "kernel/locking/lockdep.c||kernel/locking/lockdep.c",
          "kernel/sched/core.c||kernel/sched/core.c",
          "kernel/trace/trace_irqsoff.c||kernel/trace/trace_irqsoff.c",
          "kernel/trace/trace_preemptirq.c||kernel/trace/trace_preemptirq.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/linux/ftrace.h||include/linux/ftrace.h": [
          "File: include/linux/ftrace.h -> include/linux/ftrace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "701:  return CALLER_ADDR2;",
          "702: }",
          "714:   extern void trace_preempt_on(unsigned long a0, unsigned long a1);",
          "715:   extern void trace_preempt_off(unsigned long a0, unsigned long a1);",
          "716: #else",
          "",
          "[Removed Lines]",
          "704: #ifdef CONFIG_IRQSOFF_TRACER",
          "705:   extern void time_hardirqs_on(unsigned long a0, unsigned long a1);",
          "706:   extern void time_hardirqs_off(unsigned long a0, unsigned long a1);",
          "707: #else",
          "708:   static inline void time_hardirqs_on(unsigned long a0, unsigned long a1) { }",
          "709:   static inline void time_hardirqs_off(unsigned long a0, unsigned long a1) { }",
          "710: #endif",
          "712: #if defined(CONFIG_PREEMPT_TRACER) || \\",
          "713:  (defined(CONFIG_DEBUG_PREEMPT) && defined(CONFIG_PREEMPTIRQ_EVENTS))",
          "",
          "[Added Lines]",
          "704: #ifdef CONFIG_TRACE_PREEMPT_TOGGLE",
          "",
          "---------------"
        ],
        "include/linux/irqflags.h||include/linux/irqflags.h": [
          "File: include/linux/irqflags.h -> include/linux/irqflags.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include <linux/typecheck.h>",
          "16: #include <asm/irqflags.h>",
          "19:   extern void trace_softirqs_on(unsigned long ip);",
          "20:   extern void trace_softirqs_off(unsigned long ip);",
          "21:   extern void trace_hardirqs_on(void);",
          "22:   extern void trace_hardirqs_off(void);",
          "23: # define trace_hardirq_context(p) ((p)->hardirq_context)",
          "",
          "[Removed Lines]",
          "18: #ifdef CONFIG_TRACE_IRQFLAGS",
          "",
          "[Added Lines]",
          "19: #ifdef CONFIG_PROVE_LOCKING",
          "22: #else",
          "23: # define trace_softirqs_on(ip) do { } while (0)",
          "24: # define trace_softirqs_off(ip) do { } while (0)",
          "25: #endif",
          "27: #ifdef CONFIG_TRACE_IRQFLAGS",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #else",
          "44: # define trace_hardirqs_on()  do { } while (0)",
          "45: # define trace_hardirqs_off()  do { } while (0)",
          "48: # define trace_hardirq_context(p) 0",
          "49: # define trace_softirq_context(p) 0",
          "50: # define trace_hardirqs_enabled(p) 0",
          "",
          "[Removed Lines]",
          "46: # define trace_softirqs_on(ip)  do { } while (0)",
          "47: # define trace_softirqs_off(ip)  do { } while (0)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/linux/lockdep.h||include/linux/lockdep.h": [
          "File: include/linux/lockdep.h -> include/linux/lockdep.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "270: extern void lockdep_reset(void);",
          "271: extern void lockdep_reset_lock(struct lockdep_map *lock);",
          "272: extern void lockdep_free_key_range(void *start, unsigned long size);",
          "",
          "[Removed Lines]",
          "269: extern void lockdep_info(void);",
          "",
          "[Added Lines]",
          "269: extern void lockdep_init(void);",
          "270: extern void lockdep_init_early(void);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "406: # define lock_downgrade(l, i)   do { } while (0)",
          "407: # define lock_set_class(l, n, k, s, i)  do { } while (0)",
          "408: # define lock_set_subclass(l, s, i)  do { } while (0)",
          "410: # define lockdep_init_map(lock, name, key, sub) \\",
          "411:   do { (void)(name); (void)(key); } while (0)",
          "412: # define lockdep_set_class(lock, key)  do { (void)(key); } while (0)",
          "",
          "[Removed Lines]",
          "409: # define lockdep_info()    do { } while (0)",
          "",
          "[Added Lines]",
          "410: # define lockdep_init()    do { } while (0)",
          "411: # define lockdep_init_early()   do { } while (0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536: extern void print_irqtrace_events(struct task_struct *curr);",
          "537: #else",
          "538: static inline void print_irqtrace_events(struct task_struct *curr)",
          "",
          "[Removed Lines]",
          "535: #ifdef CONFIG_TRACE_IRQFLAGS",
          "",
          "[Added Lines]",
          "537: #ifdef CONFIG_PROVE_LOCKING",
          "",
          "---------------"
        ],
        "include/linux/preempt.h||include/linux/preempt.h": [
          "File: include/linux/preempt.h -> include/linux/preempt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "151: #define in_atomic_preempt_off() (preempt_count() != PREEMPT_DISABLE_OFFSET)",
          "154: extern void preempt_count_add(int val);",
          "155: extern void preempt_count_sub(int val);",
          "156: #define preempt_count_dec_and_test() \\",
          "",
          "[Removed Lines]",
          "153: #if defined(CONFIG_DEBUG_PREEMPT) || defined(CONFIG_PREEMPT_TRACER)",
          "",
          "[Added Lines]",
          "153: #if defined(CONFIG_DEBUG_PREEMPT) || defined(CONFIG_TRACE_PREEMPT_TOGGLE)",
          "",
          "---------------"
        ],
        "include/trace/events/preemptirq.h||include/trace/events/preemptirq.h": [
          "File: include/trace/events/preemptirq.h -> include/trace/events/preemptirq.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #undef TRACE_SYSTEM",
          "4: #define TRACE_SYSTEM preemptirq",
          "",
          "[Removed Lines]",
          "1: #ifdef CONFIG_PREEMPTIRQ_EVENTS",
          "",
          "[Added Lines]",
          "1: #ifdef CONFIG_PREEMPTIRQ_TRACEPOINTS",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     (void *)((unsigned long)(_stext) + __entry->parent_offs))",
          "33: );",
          "36: DEFINE_EVENT(preemptirq_template, irq_disable,",
          "37:       TP_PROTO(unsigned long ip, unsigned long parent_ip),",
          "38:       TP_ARGS(ip, parent_ip));",
          "",
          "[Removed Lines]",
          "35: #ifndef CONFIG_PROVE_LOCKING",
          "",
          "[Added Lines]",
          "35: #ifdef CONFIG_TRACE_IRQFLAGS",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "40: DEFINE_EVENT(preemptirq_template, irq_enable,",
          "41:       TP_PROTO(unsigned long ip, unsigned long parent_ip),",
          "42:       TP_ARGS(ip, parent_ip));",
          "43: #endif",
          "46: DEFINE_EVENT(preemptirq_template, preempt_disable,",
          "47:       TP_PROTO(unsigned long ip, unsigned long parent_ip),",
          "48:       TP_ARGS(ip, parent_ip));",
          "",
          "[Removed Lines]",
          "45: #ifdef CONFIG_DEBUG_PREEMPT",
          "",
          "[Added Lines]",
          "43: #else",
          "44: #define trace_irq_enable(...)",
          "45: #define trace_irq_disable(...)",
          "46: #define trace_irq_enable_rcuidle(...)",
          "47: #define trace_irq_disable_rcuidle(...)",
          "50: #ifdef CONFIG_TRACE_PREEMPT_TOGGLE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "50: DEFINE_EVENT(preemptirq_template, preempt_enable,",
          "51:       TP_PROTO(unsigned long ip, unsigned long parent_ip),",
          "52:       TP_ARGS(ip, parent_ip));",
          "53: #endif",
          "57: #include <trace/define_trace.h>",
          "62: #define trace_irq_enable(...)",
          "63: #define trace_irq_disable(...)",
          "64: #define trace_irq_enable_rcuidle(...)",
          "65: #define trace_irq_disable_rcuidle(...)",
          "69: #define trace_preempt_enable(...)",
          "70: #define trace_preempt_disable(...)",
          "71: #define trace_preempt_enable_rcuidle(...)",
          "",
          "[Removed Lines]",
          "61: #if !defined(CONFIG_PREEMPTIRQ_EVENTS) || defined(CONFIG_PROVE_LOCKING)",
          "66: #endif",
          "68: #if !defined(CONFIG_PREEMPTIRQ_EVENTS) || !defined(CONFIG_DEBUG_PREEMPT)",
          "",
          "[Added Lines]",
          "58: #else",
          "59: #define trace_preempt_enable(...)",
          "60: #define trace_preempt_disable(...)",
          "61: #define trace_preempt_enable_rcuidle(...)",
          "62: #define trace_preempt_disable_rcuidle(...)",
          "",
          "---------------"
        ],
        "init/main.c||init/main.c": [
          "File: init/main.c -> init/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:  profile_init();",
          "649:  call_function_init();",
          "650:  WARN(!irqs_disabled(), \"Interrupts were enabled early\\n\");",
          "651:  early_boot_irqs_disabled = false;",
          "652:  local_irq_enable();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "652:  lockdep_init_early();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "663:   panic(\"Too many boot %s vars at `%s'\", panic_later,",
          "664:         panic_param);",
          "",
          "[Removed Lines]",
          "666:  lockdep_info();",
          "",
          "[Added Lines]",
          "669:  lockdep_init();",
          "",
          "---------------"
        ],
        "kernel/locking/lockdep.c||kernel/locking/lockdep.c": [
          "File: kernel/locking/lockdep.c -> kernel/locking/lockdep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: #include \"lockdep_internals.h\"",
          "58: #define CREATE_TRACE_POINTS",
          "59: #include <trace/events/lock.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: #include <trace/events/preemptirq.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2839:  debug_atomic_inc(hardirqs_on_events);",
          "2840: }",
          "2843: {",
          "2846:  if (unlikely(!debug_locks || current->lockdep_recursion))",
          "2847:   return;",
          "",
          "[Removed Lines]",
          "2842: __visible void trace_hardirqs_on_caller(unsigned long ip)",
          "2844:  time_hardirqs_on(CALLER_ADDR0, ip);",
          "",
          "[Added Lines]",
          "2843: static void lockdep_hardirqs_on(void *none, unsigned long ignore,",
          "2844:     unsigned long ip)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2881:  __trace_hardirqs_on_caller(ip);",
          "2882:  current->lockdep_recursion = 0;",
          "2883: }",
          "2896: {",
          "2897:  struct task_struct *curr = current;",
          "2901:  if (unlikely(!debug_locks || current->lockdep_recursion))",
          "2902:   return;",
          "",
          "[Removed Lines]",
          "2884: EXPORT_SYMBOL(trace_hardirqs_on_caller);",
          "2886: void trace_hardirqs_on(void)",
          "2887: {",
          "2888:  trace_hardirqs_on_caller(CALLER_ADDR0);",
          "2889: }",
          "2890: EXPORT_SYMBOL(trace_hardirqs_on);",
          "2895: __visible void trace_hardirqs_off_caller(unsigned long ip)",
          "2899:  time_hardirqs_off(CALLER_ADDR0, ip);",
          "",
          "[Added Lines]",
          "2888: static void lockdep_hardirqs_off(void *none, unsigned long ignore,",
          "2889:      unsigned long ip)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2919:  } else",
          "2920:   debug_atomic_inc(redundant_hardirqs_off);",
          "2921: }",
          "",
          "[Removed Lines]",
          "2922: EXPORT_SYMBOL(trace_hardirqs_off_caller);",
          "2924: void trace_hardirqs_off(void)",
          "2925: {",
          "2926:  trace_hardirqs_off_caller(CALLER_ADDR0);",
          "2927: }",
          "2928: EXPORT_SYMBOL(trace_hardirqs_off);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4330:  raw_local_irq_restore(flags);",
          "4331: }",
          "4334: {",
          "4335:  printk(\"Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar\\n\");",
          "",
          "[Removed Lines]",
          "4333: void __init lockdep_info(void)",
          "",
          "[Added Lines]",
          "4318: void __init lockdep_init_early(void)",
          "4319: {",
          "4320: #ifdef CONFIG_PROVE_LOCKING",
          "4321:  register_trace_prio_irq_disable(lockdep_hardirqs_off, NULL, INT_MAX);",
          "4322:  register_trace_prio_irq_enable(lockdep_hardirqs_on, NULL, INT_MIN);",
          "4323: #endif",
          "4324: }",
          "4326: void __init lockdep_init(void)",
          "",
          "---------------"
        ],
        "kernel/sched/core.c||kernel/sched/core.c": [
          "File: kernel/sched/core.c -> kernel/sched/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3189: #endif",
          "3191: #if defined(CONFIG_PREEMPT) && (defined(CONFIG_DEBUG_PREEMPT) || \\",
          "",
          "[Removed Lines]",
          "3192:     defined(CONFIG_PREEMPT_TRACER))",
          "",
          "[Added Lines]",
          "3192:     defined(CONFIG_TRACE_PREEMPT_TOGGLE))",
          "",
          "---------------"
        ],
        "kernel/trace/trace_irqsoff.c||kernel/trace/trace_irqsoff.c": [
          "File: kernel/trace/trace_irqsoff.c -> kernel/trace/trace_irqsoff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include \"trace.h\"",
          "20: #include <trace/events/preemptirq.h>",
          "22: #if defined(CONFIG_IRQSOFF_TRACER) || defined(CONFIG_PREEMPT_TRACER)",
          "",
          "[Removed Lines]",
          "19: #define CREATE_TRACE_POINTS",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450: }",
          "451: EXPORT_SYMBOL_GPL(stop_critical_timings);",
          "513: #ifdef CONFIG_FUNCTION_TRACER",
          "514: static bool function_enabled;",
          "",
          "[Removed Lines]",
          "453: #ifdef CONFIG_IRQSOFF_TRACER",
          "454: #ifdef CONFIG_PROVE_LOCKING",
          "455: void time_hardirqs_on(unsigned long a0, unsigned long a1)",
          "456: {",
          "457:  if (!preempt_trace() && irq_trace())",
          "458:   stop_critical_timing(a0, a1);",
          "459: }",
          "461: void time_hardirqs_off(unsigned long a0, unsigned long a1)",
          "462: {",
          "463:  if (!preempt_trace() && irq_trace())",
          "464:   start_critical_timing(a0, a1);",
          "465: }",
          "472: static inline void tracer_hardirqs_on(void)",
          "473: {",
          "474:  if (!preempt_trace() && irq_trace())",
          "475:   stop_critical_timing(CALLER_ADDR0, CALLER_ADDR1);",
          "476: }",
          "478: static inline void tracer_hardirqs_off(void)",
          "479: {",
          "480:  if (!preempt_trace() && irq_trace())",
          "481:   start_critical_timing(CALLER_ADDR0, CALLER_ADDR1);",
          "482: }",
          "484: static inline void tracer_hardirqs_on_caller(unsigned long caller_addr)",
          "485: {",
          "486:  if (!preempt_trace() && irq_trace())",
          "487:   stop_critical_timing(CALLER_ADDR0, caller_addr);",
          "488: }",
          "490: static inline void tracer_hardirqs_off_caller(unsigned long caller_addr)",
          "491: {",
          "492:  if (!preempt_trace() && irq_trace())",
          "493:   start_critical_timing(CALLER_ADDR0, caller_addr);",
          "494: }",
          "499: #ifdef CONFIG_PREEMPT_TRACER",
          "500: static inline void tracer_preempt_on(unsigned long a0, unsigned long a1)",
          "501: {",
          "502:  if (preempt_trace() && !irq_trace())",
          "503:   stop_critical_timing(a0, a1);",
          "504: }",
          "506: static inline void tracer_preempt_off(unsigned long a0, unsigned long a1)",
          "507: {",
          "508:  if (preempt_trace() && !irq_trace())",
          "509:   start_critical_timing(a0, a1);",
          "510: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "659: }",
          "661: #ifdef CONFIG_IRQSOFF_TRACER",
          "662: static int irqsoff_tracer_init(struct trace_array *tr)",
          "663: {",
          "664:  trace_type = TRACER_IRQS_OFF;",
          "666:  return __irqsoff_tracer_init(tr);",
          "667: }",
          "669: static void irqsoff_tracer_reset(struct trace_array *tr)",
          "670: {",
          "671:  __irqsoff_tracer_reset(tr);",
          "672: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "604: static void tracer_hardirqs_on(void *none, unsigned long a0, unsigned long a1)",
          "605: {",
          "606:  if (!preempt_trace() && irq_trace())",
          "607:   stop_critical_timing(a0, a1);",
          "608: }",
          "610: static void tracer_hardirqs_off(void *none, unsigned long a0, unsigned long a1)",
          "611: {",
          "612:  if (!preempt_trace() && irq_trace())",
          "613:   start_critical_timing(a0, a1);",
          "614: }",
          "620:  register_trace_irq_disable(tracer_hardirqs_off, NULL);",
          "621:  register_trace_irq_enable(tracer_hardirqs_on, NULL);",
          "627:  unregister_trace_irq_disable(tracer_hardirqs_off, NULL);",
          "628:  unregister_trace_irq_enable(tracer_hardirqs_on, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "690:  .allow_instances = true,",
          "691:  .use_max_tr = true,",
          "692: };",
          "698: #ifdef CONFIG_PREEMPT_TRACER",
          "699: static int preemptoff_tracer_init(struct trace_array *tr)",
          "700: {",
          "701:  trace_type = TRACER_PREEMPT_OFF;",
          "703:  return __irqsoff_tracer_init(tr);",
          "704: }",
          "706: static void preemptoff_tracer_reset(struct trace_array *tr)",
          "707: {",
          "708:  __irqsoff_tracer_reset(tr);",
          "709: }",
          "",
          "[Removed Lines]",
          "693: # define register_irqsoff(trace) register_tracer(&trace)",
          "694: #else",
          "695: # define register_irqsoff(trace) do { } while (0)",
          "696: #endif",
          "",
          "[Added Lines]",
          "654: static void tracer_preempt_on(void *none, unsigned long a0, unsigned long a1)",
          "655: {",
          "656:  if (preempt_trace() && !irq_trace())",
          "657:   stop_critical_timing(a0, a1);",
          "658: }",
          "660: static void tracer_preempt_off(void *none, unsigned long a0, unsigned long a1)",
          "661: {",
          "662:  if (preempt_trace() && !irq_trace())",
          "663:   start_critical_timing(a0, a1);",
          "664: }",
          "670:  register_trace_preempt_disable(tracer_preempt_off, NULL);",
          "671:  register_trace_preempt_enable(tracer_preempt_on, NULL);",
          "677:  unregister_trace_preempt_disable(tracer_preempt_off, NULL);",
          "678:  unregister_trace_preempt_enable(tracer_preempt_on, NULL);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "727:  .allow_instances = true,",
          "728:  .use_max_tr = true,",
          "729: };",
          "738: static int preemptirqsoff_tracer_init(struct trace_array *tr)",
          "739: {",
          "740:  trace_type = TRACER_IRQS_OFF | TRACER_PREEMPT_OFF;",
          "742:  return __irqsoff_tracer_init(tr);",
          "743: }",
          "745: static void preemptirqsoff_tracer_reset(struct trace_array *tr)",
          "746: {",
          "747:  __irqsoff_tracer_reset(tr);",
          "748: }",
          "",
          "[Removed Lines]",
          "730: # define register_preemptoff(trace) register_tracer(&trace)",
          "731: #else",
          "732: # define register_preemptoff(trace) do { } while (0)",
          "733: #endif",
          "735: #if defined(CONFIG_IRQSOFF_TRACER) && \\",
          "736:  defined(CONFIG_PREEMPT_TRACER)",
          "",
          "[Added Lines]",
          "703: #if defined(CONFIG_IRQSOFF_TRACER) && defined(CONFIG_PREEMPT_TRACER)",
          "709:  register_trace_irq_disable(tracer_hardirqs_off, NULL);",
          "710:  register_trace_irq_enable(tracer_hardirqs_on, NULL);",
          "711:  register_trace_preempt_disable(tracer_preempt_off, NULL);",
          "712:  register_trace_preempt_enable(tracer_preempt_on, NULL);",
          "719:  unregister_trace_irq_disable(tracer_hardirqs_off, NULL);",
          "720:  unregister_trace_irq_enable(tracer_hardirqs_on, NULL);",
          "721:  unregister_trace_preempt_disable(tracer_preempt_off, NULL);",
          "722:  unregister_trace_preempt_enable(tracer_preempt_on, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "766:  .allow_instances = true,",
          "767:  .use_max_tr = true,",
          "768: };",
          "773: #endif",
          "775: __init static int init_irqsoff_tracer(void)",
          "776: {",
          "791: #endif",
          "796: #endif",
          "865: #endif",
          "879: }",
          "",
          "[Removed Lines]",
          "770: # define register_preemptirqsoff(trace) register_tracer(&trace)",
          "771: #else",
          "772: # define register_preemptirqsoff(trace) do { } while (0)",
          "777:  register_irqsoff(irqsoff_tracer);",
          "778:  register_preemptoff(preemptoff_tracer);",
          "779:  register_preemptirqsoff(preemptirqsoff_tracer);",
          "781:  return 0;",
          "782: }",
          "783: core_initcall(init_irqsoff_tracer);",
          "786: #ifndef CONFIG_IRQSOFF_TRACER",
          "787: static inline void tracer_hardirqs_on(void) { }",
          "788: static inline void tracer_hardirqs_off(void) { }",
          "789: static inline void tracer_hardirqs_on_caller(unsigned long caller_addr) { }",
          "790: static inline void tracer_hardirqs_off_caller(unsigned long caller_addr) { }",
          "793: #ifndef CONFIG_PREEMPT_TRACER",
          "794: static inline void tracer_preempt_on(unsigned long a0, unsigned long a1) { }",
          "795: static inline void tracer_preempt_off(unsigned long a0, unsigned long a1) { }",
          "798: #if defined(CONFIG_TRACE_IRQFLAGS) && !defined(CONFIG_PROVE_LOCKING)",
          "800: static DEFINE_PER_CPU(int, tracing_irq_cpu);",
          "802: void trace_hardirqs_on(void)",
          "803: {",
          "804:  if (!this_cpu_read(tracing_irq_cpu))",
          "805:   return;",
          "807:  trace_irq_enable_rcuidle(CALLER_ADDR0, CALLER_ADDR1);",
          "808:  tracer_hardirqs_on();",
          "810:  this_cpu_write(tracing_irq_cpu, 0);",
          "811: }",
          "812: EXPORT_SYMBOL(trace_hardirqs_on);",
          "814: void trace_hardirqs_off(void)",
          "815: {",
          "816:  if (this_cpu_read(tracing_irq_cpu))",
          "817:   return;",
          "819:  this_cpu_write(tracing_irq_cpu, 1);",
          "821:  trace_irq_disable_rcuidle(CALLER_ADDR0, CALLER_ADDR1);",
          "822:  tracer_hardirqs_off();",
          "823: }",
          "824: EXPORT_SYMBOL(trace_hardirqs_off);",
          "826: __visible void trace_hardirqs_on_caller(unsigned long caller_addr)",
          "827: {",
          "828:  if (!this_cpu_read(tracing_irq_cpu))",
          "829:   return;",
          "831:  trace_irq_enable_rcuidle(CALLER_ADDR0, caller_addr);",
          "832:  tracer_hardirqs_on_caller(caller_addr);",
          "834:  this_cpu_write(tracing_irq_cpu, 0);",
          "835: }",
          "836: EXPORT_SYMBOL(trace_hardirqs_on_caller);",
          "838: __visible void trace_hardirqs_off_caller(unsigned long caller_addr)",
          "839: {",
          "840:  if (this_cpu_read(tracing_irq_cpu))",
          "841:   return;",
          "843:  this_cpu_write(tracing_irq_cpu, 1);",
          "845:  trace_irq_disable_rcuidle(CALLER_ADDR0, caller_addr);",
          "846:  tracer_hardirqs_off_caller(caller_addr);",
          "847: }",
          "848: EXPORT_SYMBOL(trace_hardirqs_off_caller);",
          "854: void trace_softirqs_on(unsigned long ip)",
          "855: {",
          "856: }",
          "858: void trace_softirqs_off(unsigned long ip)",
          "859: {",
          "860: }",
          "862: inline void print_irqtrace_events(struct task_struct *curr)",
          "863: {",
          "864: }",
          "867: #if defined(CONFIG_PREEMPT_TRACER) || \\",
          "868:  (defined(CONFIG_DEBUG_PREEMPT) && defined(CONFIG_PREEMPTIRQ_EVENTS))",
          "869: void trace_preempt_on(unsigned long a0, unsigned long a1)",
          "870: {",
          "871:  trace_preempt_enable_rcuidle(a0, a1);",
          "872:  tracer_preempt_on(a0, a1);",
          "873: }",
          "875: void trace_preempt_off(unsigned long a0, unsigned long a1)",
          "876: {",
          "877:  trace_preempt_disable_rcuidle(a0, a1);",
          "878:  tracer_preempt_off(a0, a1);",
          "880: #endif",
          "",
          "[Added Lines]",
          "750: #ifdef CONFIG_IRQSOFF_TRACER",
          "751:  register_tracer(&irqsoff_tracer);",
          "753: #ifdef CONFIG_PREEMPT_TRACER",
          "754:  register_tracer(&preemptoff_tracer);",
          "756: #if defined(CONFIG_IRQSOFF_TRACER) && defined(CONFIG_PREEMPT_TRACER)",
          "757:  register_tracer(&preemptirqsoff_tracer);",
          "760:  return 0;",
          "762: core_initcall(init_irqsoff_tracer);",
          "",
          "---------------"
        ],
        "kernel/trace/trace_preemptirq.c||kernel/trace/trace_preemptirq.c": [
          "File: kernel/trace/trace_preemptirq.c -> kernel/trace/trace_preemptirq.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: #include <linux/kallsyms.h>",
          "9: #include <linux/uaccess.h>",
          "10: #include <linux/module.h>",
          "11: #include <linux/ftrace.h>",
          "13: #define CREATE_TRACE_POINTS",
          "14: #include <trace/events/preemptirq.h>",
          "16: #ifdef CONFIG_TRACE_IRQFLAGS",
          "18: static DEFINE_PER_CPU(int, tracing_irq_cpu);",
          "20: void trace_hardirqs_on(void)",
          "21: {",
          "22:  if (!this_cpu_read(tracing_irq_cpu))",
          "23:   return;",
          "25:  trace_irq_enable_rcuidle(CALLER_ADDR0, CALLER_ADDR1);",
          "26:  this_cpu_write(tracing_irq_cpu, 0);",
          "27: }",
          "28: EXPORT_SYMBOL(trace_hardirqs_on);",
          "30: void trace_hardirqs_off(void)",
          "31: {",
          "32:  if (this_cpu_read(tracing_irq_cpu))",
          "33:   return;",
          "35:  this_cpu_write(tracing_irq_cpu, 1);",
          "36:  trace_irq_disable_rcuidle(CALLER_ADDR0, CALLER_ADDR1);",
          "37: }",
          "38: EXPORT_SYMBOL(trace_hardirqs_off);",
          "40: __visible void trace_hardirqs_on_caller(unsigned long caller_addr)",
          "41: {",
          "42:  if (!this_cpu_read(tracing_irq_cpu))",
          "43:   return;",
          "45:  trace_irq_enable_rcuidle(CALLER_ADDR0, caller_addr);",
          "46:  this_cpu_write(tracing_irq_cpu, 0);",
          "47: }",
          "48: EXPORT_SYMBOL(trace_hardirqs_on_caller);",
          "50: __visible void trace_hardirqs_off_caller(unsigned long caller_addr)",
          "51: {",
          "52:  if (this_cpu_read(tracing_irq_cpu))",
          "53:   return;",
          "55:  this_cpu_write(tracing_irq_cpu, 1);",
          "56:  trace_irq_disable_rcuidle(CALLER_ADDR0, caller_addr);",
          "57: }",
          "58: EXPORT_SYMBOL(trace_hardirqs_off_caller);",
          "61: #ifdef CONFIG_TRACE_PREEMPT_TOGGLE",
          "63: void trace_preempt_on(unsigned long a0, unsigned long a1)",
          "64: {",
          "65:  trace_preempt_enable_rcuidle(a0, a1);",
          "66: }",
          "68: void trace_preempt_off(unsigned long a0, unsigned long a1)",
          "69: {",
          "70:  trace_preempt_disable_rcuidle(a0, a1);",
          "71: }",
          "72: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}