{
  "cve_id": "CVE-2021-42341",
  "cve_desc": "checkpath in OpenRC before 0.44.7 uses the direct output of strlen() to allocate strings, which does not account for the '\\0' byte at the end of the string. This results in memory corruption. CVE-2021-42341 was introduced in git commit 63db2d99e730547339d1bdd28e8437999c380cae, which was introduced as part of OpenRC 0.44.0 development.",
  "repo": "OpenRC/openrc",
  "patch_hash": "bb8334104baf4d5a4a442a8647fb9204738f2204",
  "patch_info": {
    "commit_hash": "bb8334104baf4d5a4a442a8647fb9204738f2204",
    "repo": "OpenRC/openrc",
    "commit_url": "https://github.com/OpenRC/openrc/commit/bb8334104baf4d5a4a442a8647fb9204738f2204",
    "files": [
      "src/rc/checkpath.c"
    ],
    "message": "checkpath: fix allocation size of path buffer\n\nstrlen's return value isn't enough to be used\ndirectly for (x)malloc; it doesn't include\nthe null byte at the end of the string.\n\nX-Gentoo-Bug: 816900\nX-Gentoo-Bug-URL: https://bugs.gentoo.org/816900\nFixes: #459\nFixes: #462",
    "before_after_code_files": [
      "src/rc/checkpath.c||src/rc/checkpath.c"
    ]
  },
  "patch_diff": {
    "src/rc/checkpath.c||src/rc/checkpath.c": [
      "File: src/rc/checkpath.c -> src/rc/checkpath.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "151:  char *ch;",
      "152:  char *ch2;",
      "153:  char *str;",
      "155:  ch = path;",
      "156:  ch2 = str;",
      "157:  while (true) {",
      "",
      "[Removed Lines]",
      "154:  str = xmalloc(strlen(path));",
      "",
      "[Added Lines]",
      "154:  str = xmalloc(strlen(path) + 1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "63db2d99e730547339d1bdd28e8437999c380cae",
      "candidate_info": {
        "commit_hash": "63db2d99e730547339d1bdd28e8437999c380cae",
        "repo": "OpenRC/openrc",
        "commit_url": "https://github.com/OpenRC/openrc/commit/63db2d99e730547339d1bdd28e8437999c380cae",
        "files": [
          "src/rc/checkpath.c"
        ],
        "message": "checkpath: remove extra slashes from paths\n\nThis fixes #418.",
        "before_after_code_files": [
          "src/rc/checkpath.c||src/rc/checkpath.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rc/checkpath.c||src/rc/checkpath.c"
          ],
          "candidate": [
            "src/rc/checkpath.c||src/rc/checkpath.c"
          ]
        }
      },
      "candidate_diff": {
        "src/rc/checkpath.c||src/rc/checkpath.c": [
          "File: src/rc/checkpath.c -> src/rc/checkpath.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:  if (dirfd == -1)",
          "94:   eerrorx(\"%s: unable to open the root directory: %s\",",
          "95:     applet, strerror(errno));",
          "98:  while (*ch) {",
          "99:   if (*ch == '/')",
          "100:    components++;",
          "101:   ch++;",
          "102:  }",
          "103:  item = strtok(path_dupe, \"/\");",
          "104: #ifdef O_PATH",
          "105:  flags |= O_PATH;",
          "",
          "[Removed Lines]",
          "96:  path_dupe = xstrdup(path);",
          "97:  ch = path_dupe;",
          "",
          "[Added Lines]",
          "96:  ch = path;",
          "102:  path_dupe = xstrdup(path);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:    dirfd = new_dirfd;",
          "137:    free(linkpath);",
          "138:    linkpath = NULL;",
          "141:   }",
          "142:  }",
          "143:  free(path_dupe);",
          "148:  return dirfd;",
          "149: }",
          "151: static int do_check(char *path, uid_t uid, gid_t gid, mode_t mode,",
          "152:  inode_t type, bool trunc, bool chowner, bool symlinks, bool selinux_on)",
          "153: {",
          "",
          "[Removed Lines]",
          "139:    item = strtok(NULL, \"/\");",
          "140:    components--;",
          "144:  if (linkpath) {",
          "145:   free(linkpath);",
          "146:   linkpath = NULL;",
          "147:  }",
          "",
          "[Added Lines]",
          "140:   item = strtok(NULL, \"/\");",
          "141:   components--;",
          "144:  free(linkpath);",
          "148: static char *clean_path(char *path)",
          "149: {",
          "150:  char *ch;",
          "151:  char *ch2;",
          "152:  char *str;",
          "153:  str = xmalloc(strlen(path));",
          "154:  ch = path;",
          "155:  ch2 = str;",
          "156:  while (true) {",
          "158:   ch++;",
          "159:   ch2++;",
          "160:   if (!*(ch-1))",
          "161:    break;",
          "162:   while (*(ch - 1) == '/' && *ch == '/')",
          "163:    ch++;",
          "164:  }",
          "166:  while ((ch = strrchr(str, '/'))) {",
          "167:   if (ch == str)",
          "168:    break;",
          "169:   if (!*(ch+1))",
          "171:   else",
          "172:    break;",
          "173:  }",
          "174:  return str;",
          "175: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "345:  bool symlinks = false;",
          "346:  bool writable = false;",
          "347:  bool selinux_on = false;",
          "349:  applet = basename_c(argv[0]);",
          "350:  while ((opt = getopt_long(argc, argv, getoptstring,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374:  char *path = NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "407:   selinux_on = true;",
          "409:  while (optind < argc) {",
          "410:   if (writable)",
          "413:      symlinks, selinux_on))",
          "414:    retval = EXIT_FAILURE;",
          "415:   optind++;",
          "416:  }",
          "418:  if (selinux_on)",
          "",
          "[Removed Lines]",
          "411:    exit(!is_writable(argv[optind]));",
          "412:   if (do_check(argv[optind], uid, gid, mode, type, trunc, chowner,",
          "",
          "[Added Lines]",
          "437:   path = clean_path(argv[optind]);",
          "439:    exit(!is_writable(path));",
          "440:   if (do_check(path, uid, gid, mode, type, trunc, chowner,",
          "444:   free(path);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc45b55f895d0c21b5ac3e5a65b0bf00f76adeb7",
      "candidate_info": {
        "commit_hash": "cc45b55f895d0c21b5ac3e5a65b0bf00f76adeb7",
        "repo": "OpenRC/openrc",
        "commit_url": "https://github.com/OpenRC/openrc/commit/cc45b55f895d0c21b5ac3e5a65b0bf00f76adeb7",
        "files": [
          "src/rc/checkpath.c"
        ],
        "message": "checkpath: fix allocation size of path buffer\n\nstrlen's return value isn't enough to be used\ndirectly for (x)malloc; it doesn't include\nthe null byte at the end of the string.\n\nX-Gentoo-Bug: 816900\nX-Gentoo-Bug-URL: https://bugs.gentoo.org/816900\nFixes: #459\nFixes: #462",
        "before_after_code_files": [
          "src/rc/checkpath.c||src/rc/checkpath.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/rc/checkpath.c||src/rc/checkpath.c"
          ],
          "candidate": [
            "src/rc/checkpath.c||src/rc/checkpath.c"
          ]
        }
      },
      "candidate_diff": {
        "src/rc/checkpath.c||src/rc/checkpath.c": [
          "File: src/rc/checkpath.c -> src/rc/checkpath.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:  char *ch;",
          "152:  char *ch2;",
          "153:  char *str;",
          "155:  ch = path;",
          "156:  ch2 = str;",
          "157:  while (true) {",
          "",
          "[Removed Lines]",
          "154:  str = xmalloc(strlen(path));",
          "",
          "[Added Lines]",
          "154:  str = xmalloc(strlen(path) + 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}