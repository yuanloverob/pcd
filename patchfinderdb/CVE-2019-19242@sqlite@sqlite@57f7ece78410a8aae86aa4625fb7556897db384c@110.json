{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b6299681c63e5ea8b61892f4e5dffaac25031723",
      "candidate_info": {
        "commit_hash": "b6299681c63e5ea8b61892f4e5dffaac25031723",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b6299681c63e5ea8b61892f4e5dffaac25031723",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/window4.tcl",
          "test/window4.test"
        ],
        "message": "Add extra test cases related to the previous commit.\n\nFossilOrigin-Name: 3c690b2b05b7338f3325c50a0750c6023e1173afa4388e836ecb2cc49f19a0ac",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/window4.tcl||test/window4.tcl",
          "test/window4.test||test/window4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 712e47714863a8ed7ff73324d9fec569633e8b901c436c633b0220d16a7a9302",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/window4.tcl||test/window4.tcl": [
          "File: test/window4.tcl -> test/window4.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "385:   ) sub;",
          "386: }",
          "389: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388: execsql_test 12.0 {",
          "389:   DROP TABLE IF EXISTS t2;",
          "390:   CREATE TABLE t2(a INTEGER);",
          "391:   INSERT INTO t2 VALUES(1), (2), (3);",
          "392: }",
          "394: execsql_test 12.1 {",
          "395:   SELECT (SELECT min(a) OVER ()) FROM t2",
          "396: }",
          "398: execsql_float_test 12.2 {",
          "399:   SELECT (SELECT avg(a)) FROM t2 ORDER BY 1",
          "400: }",
          "402: execsql_float_test 12.3 {",
          "403:   SELECT",
          "404:     (SELECT avg(a) UNION SELECT min(a) OVER ())",
          "405:   FROM t2 GROUP BY a",
          "406:   ORDER BY 1",
          "407: }",
          "",
          "---------------"
        ],
        "test/window4.test||test/window4.test": [
          "File: test/window4.test -> test/window4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1324:   ) sub;",
          "1325: } {0   1   2}",
          "1327: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1327: do_execsql_test 12.0 {",
          "1328:   DROP TABLE IF EXISTS t2;",
          "1329:   CREATE TABLE t2(a INTEGER);",
          "1330:   INSERT INTO t2 VALUES(1), (2), (3);",
          "1331: } {}",
          "1333: do_execsql_test 12.1 {",
          "1334:   SELECT (SELECT min(a) OVER ()) FROM t2",
          "1335: } {1   2   3}",
          "1338: do_test 12.2 {",
          "1339:   set myres {}",
          "1340:   foreach r [db eval {SELECT (SELECT avg(a)) FROM t2 ORDER BY 1}] {",
          "1341:     lappend myres [format %.4f [set r]]",
          "1342:   }",
          "1343:   set res2 {2.0000}",
          "1344:   set i 0",
          "1345:   foreach r [set myres] r2 [set res2] {",
          "1346:     if {[set r]<([set r2]-0.0001) || [set r]>([set r2]+0.0001)} {",
          "1347:       error \"list element [set i] does not match: got=[set r] expected=[set r2]\"",
          "1348:     }",
          "1349:     incr i",
          "1350:   }",
          "1351:   set {} {}",
          "1352: } {}",
          "1355: do_test 12.3 {",
          "1356:   set myres {}",
          "1357:   foreach r [db eval {SELECT",
          "1358:     (SELECT avg(a) UNION SELECT min(a) OVER ())",
          "1359:   FROM t2 GROUP BY a",
          "1360:   ORDER BY 1}] {",
          "1361:     lappend myres [format %.4f [set r]]",
          "1362:   }",
          "1363:   set res2 {1.0000 2.0000 3.0000}",
          "1364:   set i 0",
          "1365:   foreach r [set myres] r2 [set res2] {",
          "1366:     if {[set r]<([set r2]-0.0001) || [set r]>([set r2]+0.0001)} {",
          "1367:       error \"list element [set i] does not match: got=[set r] expected=[set r2]\"",
          "1368:     }",
          "1369:     incr i",
          "1370:   }",
          "1371:   set {} {}",
          "1372: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e72bdb5fe78558392bab7c53604b91a20755129",
      "candidate_info": {
        "commit_hash": "3e72bdb5fe78558392bab7c53604b91a20755129",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3e72bdb5fe78558392bab7c53604b91a20755129",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "test/fts4aa.test"
        ],
        "message": "Detect and prevent infinite recursion in fts3SelectLeaf() due to a malformed FTS3 btree.\n\nFossilOrigin-Name: dfcf081d842629a0b177be7eb2eb8ce719324068991040a581e33ea1d5db3d27",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "test/fts4aa.test||test/fts4aa.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2023:       rc = sqlite3Fts3ReadBlock(p, piLeaf?*piLeaf:*piLeaf2, &zBlob, &nBlob, 0);",
          "2024:     }",
          "2025:     if( rc==SQLITE_OK ){",
          "2027:     }",
          "2028:     sqlite3_free(zBlob);",
          "2029:   }",
          "",
          "[Removed Lines]",
          "2026:       rc = fts3SelectLeaf(p, zTerm, nTerm, zBlob, nBlob, piLeaf, piLeaf2);",
          "",
          "[Added Lines]",
          "2026:       int iNewHeight = 0;",
          "2027:       fts3GetVarint32(zBlob, &iNewHeight);",
          "2028:       if( iNewHeight<=iHeight ){",
          "2029:         rc = FTS_CORRUPT_VTAB;",
          "2030:       }else{",
          "2031:         rc = fts3SelectLeaf(p, zTerm, nTerm, zBlob, nBlob, piLeaf, piLeaf2);",
          "2032:       }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 10f8a3b718e0f47be528fba086c318e1dfe18ead383d01cfa24dedabad41e0a2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts4aa.test||test/fts4aa.test": [
          "File: test/fts4aa.test -> test/fts4aa.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:   SELECT quote(matchinfo(f,'pnax')) from f where f match '0 1';",
          "238: } {X'0200000000000000000000000E0000000E00000001000000010000000100000001000000'}",
          "241: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240: # 2019-11-18 Detect infinite loop in fts3SelectLeaf()",
          "241: db close",
          "242: sqlite3 db :memory:",
          "243: do_catchsql_test fts4aa-7.10 {",
          "244:   CREATE VIRTUAL TABLE f USING fts4();",
          "245:   INSERT INTO f_segdir VALUES (63,60,60,60,'60 60',x'3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c483c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c20003c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c283c3c3c3c3c3c3c3c3c3c3c223c3c3c3c3c3c3c3c3c');",
          "246:   INSERT INTO f_segments VALUES (60,x'3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c5a3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2a3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c5e3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c803c3c3c3c3c3c233c3c3c3c1c3c3c3c3c3c3c3c3c3c3c3c1b3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c273c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c1a3c3c3c3c3c3c000200003c3c3c3c3c3c3c3c3c3c3c3c3c383c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d898d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d3c3c3c3c3c3c3c3c3c3cba3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c1c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c00023c3c3c3c3c3c383c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3cbc3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2c3c3c3c403c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c16161616161616163c3c3c3c3c3c3c3c3c3c3c3c3c583c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2b3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c1c013c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c20003c3c3c3c3c3c3c3c3c3c3c800000003c3c3c3c3c3c3c2c3c3c3c3c3c3c353c08080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808fc3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c323c3c3c3c3c3c3c3c3c3c3c4f3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3cfcfcfcfcfcfcfcfcfcfcfc10fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfd02fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc03e8fcfcfcfc3c3c3c3c3c3c8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c553c3c3c3c3c3c3c3c3c3c3c3c3c573c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c000000803c3c4dd5d5a6d52cf3d5d5d5d5d5d5d5d5d5d5d5d5d5d53c3c3c3c3f3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2d3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c013c3c3c3c00643c3c3c3ce93c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c263c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c363c3c3c3c3c3c3c3c3c3c3c3c3c3c543c3c3c3c3c3c3c3c3c3c273c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c330000003c3c3c3c3c3c3c3c3c3c3c3c3c3c4d3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c000010003c3c3c3c3c3c413c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c1c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c403c3c3c3c3c3c3c3c3c3c3c3cec0000fa3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2d3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c4c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c5e3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c1b3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c593c3c3c3c3c3c243c3c373c3c3c3c3cff3c3c3c3c3c3c3c3c3c3c3c3c3c000080003c3c3c3c3c3c3c3c3c3c353c3c3c3c3c3d3c3c3c3c3c3c3c3c3c3c3c3c4d3c3c3c3c3c3c3c3c3c3c3c3c3c40003c3c3c3c3c293c3c3c3c3c3c3c3c3c3d3c3c3c3c3c3c3c3c353c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c4f3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3f3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3cff7f3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c2d3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3ca43c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3cbf3c3c3c3c3c3c3c3c3c008000003c3c3c3c3c3c3c3c343c3c373c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c593c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c');",
          "247:   SELECT * from f where f match '0';",
          "248: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2cfbea2a4ce631957554e480e90b711ef681249",
      "candidate_info": {
        "commit_hash": "d2cfbea2a4ce631957554e480e90b711ef681249",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d2cfbea2a4ce631957554e480e90b711ef681249",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Remove a NEVER() that was added in the previous check-in because it is in fact reachable.\n\nFossilOrigin-Name: 74eba2558a81f9e790d95a12a0c5379d4f80b43c8698ef9d6a31ff8d160a53d8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a0819086a521fb0ca4ffd12f959b168a89ea2e30a2844bbbd39831b2b9ecf29b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8068:     assert( sz<=pBt->maxLocal+23 );",
          "8069:     assert( iOvflSpace <= (int)pBt->pageSize );",
          "8070:     insertCell(pParent, nxDiv+i, pCell, sz, pTemp, pNew->pgno, &rc);",
          "8072:     assert( sqlite3PagerIswriteable(pParent->pDbPage) );",
          "8073:   }",
          "",
          "[Removed Lines]",
          "8071:     if( NEVER(rc!=SQLITE_OK) ) goto balance_cleanup;",
          "",
          "[Added Lines]",
          "8071:     if( rc!=SQLITE_OK ) goto balance_cleanup;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8975ac9e1e5f9cf5bf394fb8e3f5e9f4d0f2470",
      "candidate_info": {
        "commit_hash": "e8975ac9e1e5f9cf5bf394fb8e3f5e9f4d0f2470",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e8975ac9e1e5f9cf5bf394fb8e3f5e9f4d0f2470",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite3ext.h"
        ],
        "message": "Add new APIs to the extension loading mechanism.\n\nFossilOrigin-Name: 6f122faf8a34b986e58ba4622cff918c6d133d6f91d4b723b50bd086d5bed8e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite3ext.h||src/sqlite3ext.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b3f2c3205a28dc21ea7080e5e1ba246ce9c9b90c1309262ca11d8e40943ed677",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite3ext.h||src/sqlite3ext.h": [
          "File: src/sqlite3ext.h -> src/sqlite3ext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "319:                             void(*xDestroy)(void*));",
          "321:   const char *(*normalized_sql)(sqlite3_stmt*);",
          "322: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:   int (*stmt_isexplain)(sqlite3_stmt*);",
          "324:   int (*value_frombind)(sqlite3_value*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "608: #define sqlite3_create_window_function sqlite3_api->create_window_function",
          "610: #define sqlite3_normalized_sql         sqlite3_api->normalized_sql",
          "613: #if !defined(SQLITE_CORE) && !defined(SQLITE_OMIT_LOAD_EXTENSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "615: #define sqlite3_stmt_isexplain         sqlite3_api->isexplain",
          "616: #define sqlite3_value_frombind         sqlite3_api->frombind",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc6214ee3910093d930962ba026e1f8329b6ef98",
      "candidate_info": {
        "commit_hash": "dc6214ee3910093d930962ba026e1f8329b6ef98",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dc6214ee3910093d930962ba026e1f8329b6ef98",
        "files": [
          "ext/rbu/rbu_common.tcl",
          "ext/rbu/rbuvacuum2.test",
          "ext/rbu/sqlite3rbu.c",
          "ext/rbu/sqlite3rbu.h",
          "ext/rbu/test_rbu.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a problem with using \"<db>-vacuum\" (the default) as the state database when resuming an RBU vacuum.\n\nFossilOrigin-Name: c878d741733a897d47a1a0b57b454bc9095ce302b48cc01089336d5d20e2a24c",
        "before_after_code_files": [
          "ext/rbu/rbu_common.tcl||ext/rbu/rbu_common.tcl",
          "ext/rbu/rbuvacuum2.test||ext/rbu/rbuvacuum2.test",
          "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c",
          "ext/rbu/sqlite3rbu.h||ext/rbu/sqlite3rbu.h",
          "ext/rbu/test_rbu.c||ext/rbu/test_rbu.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rbu/rbu_common.tcl||ext/rbu/rbu_common.tcl": [
          "File: ext/rbu/rbu_common.tcl -> ext/rbu/rbu_common.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   set rc",
          "87: }",
          "93:     while 1 {",
          "95:       set state [rbu state]",
          "96:       check_prestep_state test.db $state",
          "97:       set rc [rbu step]",
          "",
          "[Removed Lines]",
          "89: proc do_rbu_vacuum_test {tn step} {",
          "90:   forcedelete state.db",
          "91:   uplevel [list do_test $tn.1 {",
          "92:     if {$step==0} { sqlite3rbu_vacuum rbu test.db state.db }",
          "94:       if {$step==1} { sqlite3rbu_vacuum rbu test.db state.db }",
          "",
          "[Added Lines]",
          "89: proc do_rbu_vacuum_test {tn step {statedb state.db}} {",
          "90:   forcedelete $statedb",
          "91:   if {$statedb==\"\" && $step==1} breakpoint",
          "92:   uplevel [list do_test $tn.1 [string map [list %state% $statedb] {",
          "93:     if {$step==0} { sqlite3rbu_vacuum rbu test.db {%state%}}",
          "95:       if {$step==1} { sqlite3rbu_vacuum rbu test.db {%state%}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:       if {$step==1} { rbu close }",
          "101:     }",
          "102:     rbu close",
          "105:   uplevel [list do_execsql_test $tn.2 {",
          "106:     PRAGMA integrity_check",
          "",
          "[Removed Lines]",
          "103:   } {SQLITE_DONE}]",
          "",
          "[Added Lines]",
          "104:   }] {SQLITE_DONE}]",
          "",
          "---------------"
        ],
        "ext/rbu/rbuvacuum2.test||ext/rbu/rbuvacuum2.test": [
          "File: ext/rbu/rbuvacuum2.test -> ext/rbu/rbuvacuum2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: source [file join [file dirname [info script]] rbu_common.tcl]",
          "22:   #-------------------------------------------------------------------------",
          "23:   # Test that a database that contains fts3 tables can be vacuumed.",
          "",
          "[Removed Lines]",
          "19: foreach step {0 1} {",
          "20:   set ::testprefix rbuvacuum2-$step",
          "",
          "[Added Lines]",
          "19: foreach {step} {0 1} {",
          "20: foreach {ttt state} {",
          "21:   s state.db t test.db-vacuum n {}",
          "22: } {",
          "23:   set ::testprefix rbuvacuum2-$step$ttt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:       INSERT INTO t1 VALUES('fix this issue', 'at some point');",
          "30:     }",
          "34:     do_execsql_test 1.3 {",
          "35:       SELECT * FROM t1;",
          "",
          "[Removed Lines]",
          "32:     do_rbu_vacuum_test 1.2 $step",
          "",
          "[Added Lines]",
          "35:     do_rbu_vacuum_test 1.2 $step $state",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:       INSERT INTO t1 VALUES('a b c', 'x y z');",
          "47:     }",
          "50:     do_execsql_test 1.7 {",
          "51:       INSERT INTO t1(t1) VALUES('integrity-check');",
          "52:       SELECT * FROM t1;",
          "",
          "[Removed Lines]",
          "49:     do_rbu_vacuum_test 1.6 $step",
          "",
          "[Added Lines]",
          "52:     do_rbu_vacuum_test 1.6 $step $state",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:       INSERT INTO t1 VALUES('fix this issue', 'at some point');",
          "68:     }",
          "72:     do_execsql_test 2.3 {",
          "73:       SELECT * FROM t1;",
          "",
          "[Removed Lines]",
          "70:     do_rbu_vacuum_test 2.2 $step",
          "",
          "[Added Lines]",
          "73:     do_rbu_vacuum_test 2.2 $step $state",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "84:       INSERT INTO t1 VALUES('a b c', 'x y z');",
          "85:     }",
          "88:     do_execsql_test 2.7 {",
          "89:       INSERT INTO t1(t1) VALUES('integrity-check');",
          "90:       SELECT * FROM t1;",
          "",
          "[Removed Lines]",
          "87:     do_rbu_vacuum_test 2.6 $step",
          "",
          "[Added Lines]",
          "90:     do_rbu_vacuum_test 2.6 $step $state",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "107:       INSERT INTO rt VALUES(3, 55, 65);",
          "108:     }",
          "112:     do_execsql_test 3.3 {",
          "113:       SELECT * FROM rt;",
          "",
          "[Removed Lines]",
          "110:     do_rbu_vacuum_test 3.2 $step",
          "",
          "[Added Lines]",
          "113:     do_rbu_vacuum_test 3.2 $step $state",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "120:       SELECT rowid FROM rt WHERE x2>59 AND x1 < 59",
          "121:     } {2 3}",
          "125:     do_execsql_test 3.6.1 {",
          "126:       SELECT rowid FROM rt WHERE x2>51 AND x1 < 51",
          "",
          "[Removed Lines]",
          "123:     do_rbu_vacuum_test 3.5 $step",
          "",
          "[Added Lines]",
          "126:     do_rbu_vacuum_test 3.5 $step $state",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "147:     trigger tr1 t1 0 {CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN SELECT 1; END}",
          "148:     }",
          "151:     do_execsql_test 4.4 {",
          "152:       SELECT * FROM sqlite_master;",
          "153:     } {",
          "",
          "[Removed Lines]",
          "150:     do_rbu_vacuum_test 4.3 $step",
          "",
          "[Added Lines]",
          "153:     do_rbu_vacuum_test 4.3 $step $state",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "157:     }",
          "158:   }",
          "159: }",
          "161: #-------------------------------------------------------------------------",
          "162: # Test that passing a NULL value as the second argument to",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "231:   execsql { PRAGMA integrity_check }",
          "232: } {ok}",
          "234: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238: do_test 6.4 {",
          "239:   sqlite3rbu_vacuum rbu test.db test.db-vactmp",
          "240:   list [catch { rbu close } msg] $msg",
          "241: } {1 SQLITE_MISUSE}",
          "",
          "---------------"
        ],
        "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c": [
          "File: ext/rbu/sqlite3rbu.c -> ext/rbu/sqlite3rbu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2477:         if( *zExtra=='\\0' ) zExtra = 0;",
          "2478:       }",
          "2481:           sqlite3_db_filename(p->dbRbu, \"main\"),",
          "2482:           (zExtra==0 ? \"\" : \"&\"), (zExtra==0 ? \"\" : zExtra)",
          "2483:       );",
          "",
          "[Removed Lines]",
          "2480:       zTarget = sqlite3_mprintf(\"file:%s-vacuum?rbu_memory=1%s%s\",",
          "",
          "[Added Lines]",
          "2480:       zTarget = sqlite3_mprintf(\"file:%s-vactmp?rbu_memory=1%s%s\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3743:   const char *zState",
          "3744: ){",
          "3745:   if( zTarget==0 ){ return rbuMisuseError(); }",
          "3747:   return openRbuHandle(0, zTarget, zState);",
          "3748: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3746:   if( zState ){",
          "3747:     int n = strlen(zState);",
          "3748:     if( n>=7 && 0==memcmp(\"-vactmp\", &zState[n-7], 7) ){",
          "3749:       return rbuMisuseError();",
          "3750:     }",
          "3751:   }",
          "",
          "---------------"
        ],
        "ext/rbu/sqlite3rbu.h||ext/rbu/sqlite3rbu.h": [
          "File: ext/rbu/sqlite3rbu.h -> ext/rbu/sqlite3rbu.h"
        ],
        "ext/rbu/test_rbu.c||ext/rbu/test_rbu.c": [
          "File: ext/rbu/test_rbu.c -> ext/rbu/test_rbu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:   zCmd = Tcl_GetString(objv[1]);",
          "274:   zTarget = Tcl_GetString(objv[2]);",
          "275:   if( objc==4 ) zStateDb = Tcl_GetString(objv[3]);",
          "277:   pRbu = sqlite3rbu_vacuum(zTarget, zStateDb);",
          "278:   Tcl_CreateObjCommand(interp, zCmd, test_sqlite3rbu_cmd, (ClientData)pRbu, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:   if( zStateDb && zStateDb[0]=='\\0' ) zStateDb = 0;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 77f150b8b46761f4f62f9d8926c10a95a70589a4525393fc16b321bd98c083a7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}