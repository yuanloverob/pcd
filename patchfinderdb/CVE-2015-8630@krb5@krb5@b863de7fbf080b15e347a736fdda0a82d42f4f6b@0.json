{
  "cve_id": "CVE-2015-8630",
  "cve_desc": "The (1) kadm5_create_principal_3 and (2) kadm5_modify_principal functions in lib/kadm5/srv/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) by specifying KADM5_POLICY with a NULL policy name.",
  "repo": "krb5/krb5",
  "patch_hash": "b863de7fbf080b15e347a736fdda0a82d42f4f6b",
  "patch_info": {
    "commit_hash": "b863de7fbf080b15e347a736fdda0a82d42f4f6b",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/b863de7fbf080b15e347a736fdda0a82d42f4f6b",
    "files": [
      "src/lib/kadm5/srv/svr_principal.c"
    ],
    "message": "Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for\nentry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission\nto modify a principal entry can cause kadmind to dereference a null\npointer by supplying a null policy value but including KADM5_POLICY in\nthe mask.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8342 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup",
    "before_after_code_files": [
      "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
    ]
  },
  "patch_diff": {
    "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c": [
      "File: src/lib/kadm5/srv/svr_principal.c -> src/lib/kadm5/srv/svr_principal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:     if(!(mask & KADM5_PRINCIPAL) || (mask & KADM5_MOD_NAME) ||",
      "399:        (mask & KADM5_MOD_TIME) || (mask & KADM5_LAST_PWD_CHANGE) ||",
      "400:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:     if (entry == NULL)",
      "399:         return EINVAL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "403:         return KADM5_BAD_MASK;",
      "404:     if ((mask & KADM5_KEY_DATA) && entry->n_key_data != 0)",
      "405:         return KADM5_BAD_MASK;",
      "406:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
      "407:         return KADM5_BAD_MASK;",
      "408:     if((mask & ~ALL_PRINC_MASK))",
      "409:         return KADM5_BAD_MASK;",
      "",
      "[Removed Lines]",
      "410:     if (entry == NULL)",
      "411:         return EINVAL;",
      "",
      "[Added Lines]",
      "408:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
      "409:         return KADM5_BAD_MASK;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "644:     krb5_clear_error_message(handle->context);",
      "646:     if((mask & KADM5_PRINCIPAL) || (mask & KADM5_LAST_PWD_CHANGE) ||",
      "647:        (mask & KADM5_MOD_TIME) || (mask & KADM5_MOD_NAME) ||",
      "648:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "648:     if(entry == NULL)",
      "649:         return EINVAL;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "651:         return KADM5_BAD_MASK;",
      "652:     if((mask & ~ALL_PRINC_MASK))",
      "653:         return KADM5_BAD_MASK;",
      "654:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
      "655:         return KADM5_BAD_MASK;",
      "658:     if (mask & KADM5_TL_DATA) {",
      "659:         tl_data_orig = entry->tl_data;",
      "660:         while (tl_data_orig) {",
      "",
      "[Removed Lines]",
      "656:     if(entry == (kadm5_principal_ent_t) NULL)",
      "657:         return EINVAL;",
      "",
      "[Added Lines]",
      "658:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
      "659:         return KADM5_BAD_MASK;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46ed05100ed8b0a82e047089cec94147ff471fb1",
      "candidate_info": {
        "commit_hash": "46ed05100ed8b0a82e047089cec94147ff471fb1",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/46ed05100ed8b0a82e047089cec94147ff471fb1",
        "files": [
          "src/lib/kadm5/srv/svr_principal.c"
        ],
        "message": "Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for\nentry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission\nto modify a principal entry can cause kadmind to dereference a null\npointer by supplying a null policy value but including KADM5_POLICY in\nthe mask.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\n(cherry picked from commit b863de7fbf080b15e347a736fdda0a82d42f4f6b)\n\nticket: 8342\nversion_fixed: 1.14.1",
        "before_after_code_files": [
          "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ],
          "candidate": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c": [
          "File: src/lib/kadm5/srv/svr_principal.c -> src/lib/kadm5/srv/svr_principal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:     if(!(mask & KADM5_PRINCIPAL) || (mask & KADM5_MOD_NAME) ||",
          "399:        (mask & KADM5_MOD_TIME) || (mask & KADM5_LAST_PWD_CHANGE) ||",
          "400:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:     if (entry == NULL)",
          "399:         return EINVAL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:         return KADM5_BAD_MASK;",
          "404:     if ((mask & KADM5_KEY_DATA) && entry->n_key_data != 0)",
          "405:         return KADM5_BAD_MASK;",
          "406:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
          "407:         return KADM5_BAD_MASK;",
          "408:     if((mask & ~ALL_PRINC_MASK))",
          "409:         return KADM5_BAD_MASK;",
          "",
          "[Removed Lines]",
          "410:     if (entry == NULL)",
          "411:         return EINVAL;",
          "",
          "[Added Lines]",
          "408:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
          "409:         return KADM5_BAD_MASK;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "644:     krb5_clear_error_message(handle->context);",
          "646:     if((mask & KADM5_PRINCIPAL) || (mask & KADM5_LAST_PWD_CHANGE) ||",
          "647:        (mask & KADM5_MOD_TIME) || (mask & KADM5_MOD_NAME) ||",
          "648:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "648:     if(entry == NULL)",
          "649:         return EINVAL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "651:         return KADM5_BAD_MASK;",
          "652:     if((mask & ~ALL_PRINC_MASK))",
          "653:         return KADM5_BAD_MASK;",
          "654:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
          "655:         return KADM5_BAD_MASK;",
          "658:     if (mask & KADM5_TL_DATA) {",
          "659:         tl_data_orig = entry->tl_data;",
          "660:         while (tl_data_orig) {",
          "",
          "[Removed Lines]",
          "656:     if(entry == (kadm5_principal_ent_t) NULL)",
          "657:         return EINVAL;",
          "",
          "[Added Lines]",
          "658:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
          "659:         return KADM5_BAD_MASK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9056a68f46e0bd1e3be5a4ec5f44655460d0ac9",
      "candidate_info": {
        "commit_hash": "f9056a68f46e0bd1e3be5a4ec5f44655460d0ac9",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/f9056a68f46e0bd1e3be5a4ec5f44655460d0ac9",
        "files": [
          "src/lib/kadm5/srv/svr_principal.c"
        ],
        "message": "Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for\nentry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission\nto modify a principal entry can cause kadmind to dereference a null\npointer by supplying a null policy value but including KADM5_POLICY in\nthe mask.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\n(cherry picked from commit b863de7fbf080b15e347a736fdda0a82d42f4f6b)\n\nticket: 8342\nversion_fixed: 1.13.4\ntags: -pullup\nstatus: resolved",
        "before_after_code_files": [
          "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ],
          "candidate": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c": [
          "File: src/lib/kadm5/srv/svr_principal.c -> src/lib/kadm5/srv/svr_principal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:     if(!(mask & KADM5_PRINCIPAL) || (mask & KADM5_MOD_NAME) ||",
          "399:        (mask & KADM5_MOD_TIME) || (mask & KADM5_LAST_PWD_CHANGE) ||",
          "400:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:     if (entry == NULL)",
          "399:         return EINVAL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:         return KADM5_BAD_MASK;",
          "404:     if ((mask & KADM5_KEY_DATA) && entry->n_key_data != 0)",
          "405:         return KADM5_BAD_MASK;",
          "406:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
          "407:         return KADM5_BAD_MASK;",
          "408:     if((mask & ~ALL_PRINC_MASK))",
          "409:         return KADM5_BAD_MASK;",
          "",
          "[Removed Lines]",
          "410:     if (entry == NULL)",
          "411:         return EINVAL;",
          "",
          "[Added Lines]",
          "408:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
          "409:         return KADM5_BAD_MASK;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "644:     krb5_clear_error_message(handle->context);",
          "646:     if((mask & KADM5_PRINCIPAL) || (mask & KADM5_LAST_PWD_CHANGE) ||",
          "647:        (mask & KADM5_MOD_TIME) || (mask & KADM5_MOD_NAME) ||",
          "648:        (mask & KADM5_MKVNO) || (mask & KADM5_AUX_ATTRIBUTES) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "648:     if(entry == NULL)",
          "649:         return EINVAL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "651:         return KADM5_BAD_MASK;",
          "652:     if((mask & ~ALL_PRINC_MASK))",
          "653:         return KADM5_BAD_MASK;",
          "654:     if((mask & KADM5_POLICY) && (mask & KADM5_POLICY_CLR))",
          "655:         return KADM5_BAD_MASK;",
          "658:     if (mask & KADM5_TL_DATA) {",
          "659:         tl_data_orig = entry->tl_data;",
          "660:         while (tl_data_orig) {",
          "",
          "[Removed Lines]",
          "656:     if(entry == (kadm5_principal_ent_t) NULL)",
          "657:         return EINVAL;",
          "",
          "[Added Lines]",
          "658:     if((mask & KADM5_POLICY) && entry->policy == NULL)",
          "659:         return KADM5_BAD_MASK;",
          "",
          "---------------"
        ]
      }
    }
  ]
}