{
  "cve_id": "CVE-2018-6345",
  "cve_desc": "The function number_format is vulnerable to a heap overflow issue when its second argument ($dec_points) is excessively large. The internal implementation of the function will cause a string to be created with an invalid length, which can then interact poorly with other functions. This affects all supported versions of HHVM (3.30.1 and 3.27.5 and below).",
  "repo": "facebook/hhvm",
  "patch_hash": "190ffdf6c8b1ec443be202c7d69e63a7e3da25e3",
  "patch_info": {
    "commit_hash": "190ffdf6c8b1ec443be202c7d69e63a7e3da25e3",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/190ffdf6c8b1ec443be202c7d69e63a7e3da25e3",
    "files": [
      "hphp/runtime/base/zend-string.cpp",
      "hphp/test/slow/string/number_format_error.php",
      "hphp/test/slow/string/number_format_error.php.expect"
    ],
    "message": "Fix a bug in number_format()\n\nSummary: In case of error while calling snprintf, return empty string instead of malformed string.\n\nReviewed By: binliu19\n\nDifferential Revision: D13379372\n\nfbshipit-source-id: 1e5611598464daccc674d5a96558c9f2aee08fc8",
    "before_after_code_files": [
      "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
      "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
      "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
    ]
  },
  "patch_diff": {
    "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
      "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1768:   String tmpstr(63, ReserveString);",
      "1769:   tmpbuf = tmpstr.mutableData();",
      "1770:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
      "1771:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
      "1772:     tmpstr.setSize(tmplen);",
      "1773:     return tmpstr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1771:   if (tmplen < 0) return empty_string();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1777:     tmpstr = String(tmplen, ReserveString);",
      "1778:     tmpbuf = tmpstr.mutableData();",
      "1779:     tmplen = snprintf(tmpbuf, tmplen + 1, \"%.*F\", dec, d);",
      "1780:     if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
      "1781:       tmpstr.setSize(tmplen);",
      "1782:       return tmpstr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1781:     if (tmplen < 0) return empty_string();",
      "",
      "---------------"
    ],
    "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php": [
      "File: hphp/test/slow/string/number_format_error.php -> hphp/test/slow/string/number_format_error.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "2:   $READ_LENGTH = 0x1000; // choose leak size",
      "4: $iptc_hdr =",
      "5:   \"\\x1c\\x01\" . // magic",
      "6:   \"\\x00\\x80\" . // dataset, recnum",
      "7:   \"\\x00\" .     // padding",
      "8:   pack(\"N\", $READ_LENGTH);",
      "10: $holder = [];",
      "11: for($i = 0; $i < 100; $i++)",
      "12:   $holder[] = str_pad($iptc_hdr, 96);",
      "14: $badstr = number_format(0,0x7fffffff);",
      "15: var_dump($badstr);",
      "17: $tmp = iptcparse($badstr);",
      "18: var_dump($tmp);",
      "19: ?>",
      "",
      "---------------"
    ],
    "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect": [
      "File: hphp/test/slow/string/number_format_error.php.expect -> hphp/test/slow/string/number_format_error.php.expect",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: string(0) \"\"",
      "2: bool(false)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "059cc43f75eeafc618c9d91edd098fda2bc12a1b",
      "candidate_info": {
        "commit_hash": "059cc43f75eeafc618c9d91edd098fda2bc12a1b",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/059cc43f75eeafc618c9d91edd098fda2bc12a1b",
        "files": [
          "hphp/test/quick/fc_enum_7.php",
          "hphp/test/quick/fc_enum_7.php.expectf",
          "hphp/test/slow/error_handler/1368.php",
          "hphp/test/slow/error_handler/1368.php.expectf",
          "hphp/test/slow/error_handler/1369.php",
          "hphp/test/slow/error_handler/1369.php.expectf",
          "hphp/test/slow/error_handler/1371.php",
          "hphp/test/slow/error_handler/1371.php.expectf",
          "hphp/test/slow/error_handler/1500.php",
          "hphp/test/slow/error_handler/1500.php.expectf",
          "hphp/test/slow/ext_std/get_defined_functions_case.php",
          "hphp/test/slow/ext_std/get_defined_functions_case.php.expect",
          "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php",
          "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf",
          "hphp/test/slow/lang/meth_caller_bad.php",
          "hphp/test/slow/lang/meth_caller_bad.php.expectf",
          "hphp/test/slow/lang/meth_caller_bad2.php",
          "hphp/test/slow/lang/meth_caller_bad2.php.expectf",
          "hphp/test/slow/object/closure-object-ids.php",
          "hphp/test/slow/object/closure-object-ids.php.expectf",
          "hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/using/bad-closure.php",
          "hphp/test/slow/using/bad-closure.php.expectf",
          "hphp/test/slow/using/bad-lambda1.php",
          "hphp/test/slow/using/bad-lambda1.php.expectf",
          "hphp/test/slow/using/bad-lambda2.php",
          "hphp/test/slow/using/bad-lambda2.php.expectf",
          "hphp/test/slow/using/bad-lambda3.php",
          "hphp/test/slow/using/bad-lambda3.php.expectf"
        ],
        "message": "Add/fix EntryPoints in some tests.\n\nReviewed By: WizKid\n\nDifferential Revision: D16414862\n\nfbshipit-source-id: 3a969cf24defa3c2aa746cc29417cf74a465a3ec",
        "before_after_code_files": [
          "hphp/test/quick/fc_enum_7.php||hphp/test/quick/fc_enum_7.php",
          "hphp/test/quick/fc_enum_7.php.expectf||hphp/test/quick/fc_enum_7.php.expectf",
          "hphp/test/slow/error_handler/1368.php||hphp/test/slow/error_handler/1368.php",
          "hphp/test/slow/error_handler/1368.php.expectf||hphp/test/slow/error_handler/1368.php.expectf",
          "hphp/test/slow/error_handler/1369.php||hphp/test/slow/error_handler/1369.php",
          "hphp/test/slow/error_handler/1369.php.expectf||hphp/test/slow/error_handler/1369.php.expectf",
          "hphp/test/slow/error_handler/1371.php||hphp/test/slow/error_handler/1371.php",
          "hphp/test/slow/error_handler/1371.php.expectf||hphp/test/slow/error_handler/1371.php.expectf",
          "hphp/test/slow/error_handler/1500.php||hphp/test/slow/error_handler/1500.php",
          "hphp/test/slow/error_handler/1500.php.expectf||hphp/test/slow/error_handler/1500.php.expectf",
          "hphp/test/slow/ext_std/get_defined_functions_case.php||hphp/test/slow/ext_std/get_defined_functions_case.php",
          "hphp/test/slow/ext_std/get_defined_functions_case.php.expect||hphp/test/slow/ext_std/get_defined_functions_case.php.expect",
          "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php||hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php",
          "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf||hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf",
          "hphp/test/slow/lang/meth_caller_bad.php||hphp/test/slow/lang/meth_caller_bad.php",
          "hphp/test/slow/lang/meth_caller_bad.php.expectf||hphp/test/slow/lang/meth_caller_bad.php.expectf",
          "hphp/test/slow/lang/meth_caller_bad2.php||hphp/test/slow/lang/meth_caller_bad2.php",
          "hphp/test/slow/lang/meth_caller_bad2.php.expectf||hphp/test/slow/lang/meth_caller_bad2.php.expectf",
          "hphp/test/slow/object/closure-object-ids.php||hphp/test/slow/object/closure-object-ids.php",
          "hphp/test/slow/object/closure-object-ids.php.expectf||hphp/test/slow/object/closure-object-ids.php.expectf",
          "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/using/bad-closure.php||hphp/test/slow/using/bad-closure.php",
          "hphp/test/slow/using/bad-closure.php.expectf||hphp/test/slow/using/bad-closure.php.expectf",
          "hphp/test/slow/using/bad-lambda1.php||hphp/test/slow/using/bad-lambda1.php",
          "hphp/test/slow/using/bad-lambda1.php.expectf||hphp/test/slow/using/bad-lambda1.php.expectf",
          "hphp/test/slow/using/bad-lambda2.php||hphp/test/slow/using/bad-lambda2.php",
          "hphp/test/slow/using/bad-lambda2.php.expectf||hphp/test/slow/using/bad-lambda2.php.expectf",
          "hphp/test/slow/using/bad-lambda3.php||hphp/test/slow/using/bad-lambda3.php",
          "hphp/test/slow/using/bad-lambda3.php.expectf||hphp/test/slow/using/bad-lambda3.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php"
          ],
          "candidate": [
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php"
          ]
        }
      },
      "candidate_diff": {
        "hphp/test/quick/fc_enum_7.php||hphp/test/quick/fc_enum_7.php": [
          "File: hphp/test/quick/fc_enum_7.php -> hphp/test/quick/fc_enum_7.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: function getFooValues2(): array<string, int> {",
          "29:   return Foo::getValues();",
          "30: }",
          "32: echo \"Some basic tests on Foo\\n\";",
          "33: var_dump(getFooValues());",
          "34: var_dump(Foo::getNames());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: <<__EntryPoint>> function main(): void {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: echo \"a broken assert()\\n\";",
          "77: var_dump(Bar::assert('welp'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78: }",
          "",
          "---------------"
        ],
        "hphp/test/quick/fc_enum_7.php.expectf||hphp/test/quick/fc_enum_7.php.expectf": [
          "File: hphp/test/quick/fc_enum_7.php.expectf -> hphp/test/quick/fc_enum_7.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: Fatal error: Uncaught exception 'UnexpectedValueException' with message 'welp is not a valid value for Bar' in %s:77",
          "73: Stack trace:",
          "74: #0 %s(77): HH\\BuiltinEnum::assert()",
          "",
          "[Removed Lines]",
          "75: #1 {main}",
          "",
          "[Added Lines]",
          "75: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1368.php||hphp/test/slow/error_handler/1368.php": [
          "File: hphp/test/slow/error_handler/1368.php -> hphp/test/slow/error_handler/1368.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: function handler($e) {",
          "6: }",
          "8: function a() {",
          "9: }",
          "",
          "[Removed Lines]",
          "4:    var_dump(strpos((string)$e, 'bomb') !== false);",
          "5:  return true;",
          "7:  set_exception_handler('handler');",
          "10:  set_exception_handler('a');",
          "11: restore_exception_handler();",
          "12: throw new Exception('bomb');",
          "",
          "[Added Lines]",
          "3:   var_dump(strpos((string)$e, 'bomb') !== false);",
          "4:   return true;",
          "8: <<__EntryPoint>> function main(): void {",
          "9:   set_exception_handler('handler');",
          "10:   set_exception_handler('a');",
          "11:   restore_exception_handler();",
          "12:   throw new Exception('bomb');",
          "13: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1368.php.expectf||hphp/test/slow/error_handler/1368.php.expectf": [
          "File: hphp/test/slow/error_handler/1368.php.expectf -> hphp/test/slow/error_handler/1368.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Fatal error: Uncaught exception 'Exception' with message 'bomb' in %s/test/slow/error_handler/1368.php:12",
          "3: Stack trace:",
          "5: bool(true)",
          "",
          "[Removed Lines]",
          "4: #0 {main}",
          "",
          "[Added Lines]",
          "4: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1369.php||hphp/test/slow/error_handler/1369.php": [
          "File: hphp/test/slow/error_handler/1369.php -> hphp/test/slow/error_handler/1369.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "7: function user_exception_handler($e) {",
          "8:   ob_end_clean();",
          "9:   var_dump(error_get_last());",
          "10:   echo 'Goodbye';",
          "11:   var_dump(error_get_last());",
          "12: }",
          "",
          "[Removed Lines]",
          "3: ob_start();",
          "4: set_exception_handler('user_exception_handler');",
          "5: echo 'Hello World';",
          "6: throw new Exception;",
          "",
          "[Added Lines]",
          "9: <<__EntryPoint>> function main(): void {",
          "10: ob_start();",
          "11: set_exception_handler('user_exception_handler');",
          "12: echo 'Hello World';",
          "13: throw new Exception;",
          "14: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1369.php.expectf||hphp/test/slow/error_handler/1369.php.expectf": [
          "File: hphp/test/slow/error_handler/1369.php.expectf -> hphp/test/slow/error_handler/1369.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: Stack trace:",
          "5: NULL",
          "6: GoodbyeNULL",
          "",
          "[Removed Lines]",
          "2: Fatal error: Uncaught exception 'Exception' with message '' in %s/test/slow/error_handler/1369.php:6",
          "4: #0 {main}",
          "",
          "[Added Lines]",
          "2: Fatal error: Uncaught exception 'Exception' with message '' in %s/test/slow/error_handler/1369.php:13",
          "4: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1371.php||hphp/test/slow/error_handler/1371.php": [
          "File: hphp/test/slow/error_handler/1371.php -> hphp/test/slow/error_handler/1371.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     set_exception_handler(array(__CLASS__, 'log'));",
          "10:   }",
          "11: }",
          "12: C::setup();",
          "13: throw new Exception('test');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: <<__EntryPoint>> function main(): void {",
          "14: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1371.php.expectf||hphp/test/slow/error_handler/1371.php.expectf": [
          "File: hphp/test/slow/error_handler/1371.php.expectf -> hphp/test/slow/error_handler/1371.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Fatal error: Uncaught exception 'Exception' with message 'test' in %s/test/slow/error_handler/1371.php:13",
          "3: Stack trace:",
          "5: string(15) \"Exception: test\"",
          "",
          "[Removed Lines]",
          "4: #0 {main}",
          "",
          "[Added Lines]",
          "4: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1500.php||hphp/test/slow/error_handler/1500.php": [
          "File: hphp/test/slow/error_handler/1500.php -> hphp/test/slow/error_handler/1500.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: function handler ($errno, $errstr, $errfile, $errline, array $errcontext) {",
          "3:   echo \"handler_called\\n\";",
          "4: }",
          "5: set_error_handler('handler');",
          "6: $undefined->foo();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: <<__EntryPoint>> function main(): void {",
          "8: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/error_handler/1500.php.expectf||hphp/test/slow/error_handler/1500.php.expectf": [
          "File: hphp/test/slow/error_handler/1500.php.expectf -> hphp/test/slow/error_handler/1500.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: handler_called",
          "4: Stack trace:",
          "",
          "[Removed Lines]",
          "3: Fatal error: Uncaught exception 'BadMethodCallException' with message 'Call to a member function foo() on a non-object (null)' in %s/1500.php:6",
          "5: #0 {main}",
          "",
          "[Added Lines]",
          "3: Fatal error: Uncaught exception 'BadMethodCallException' with message 'Call to a member function foo() on a non-object (null)' in %s/1500.php:7",
          "5: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_std/get_defined_functions_case.php||hphp/test/slow/ext_std/get_defined_functions_case.php": [
          "File: hphp/test/slow/ext_std/get_defined_functions_case.php -> hphp/test/slow/ext_std/get_defined_functions_case.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: function UpPer(){}",
          "4: var_dump(get_defined_functions()['user']);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: <<__EntryPoint>> function main(): void {",
          "6: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_std/get_defined_functions_case.php.expect||hphp/test/slow/ext_std/get_defined_functions_case.php.expect": [
          "File: hphp/test/slow/ext_std/get_defined_functions_case.php.expect -> hphp/test/slow/ext_std/get_defined_functions_case.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   [0]=>",
          "3:   string(5) \"upper\"",
          "4: }",
          "",
          "[Removed Lines]",
          "1: array(1) {",
          "",
          "[Added Lines]",
          "1: array(2) {",
          "4:   [1]=>",
          "5:   string(4) \"main\"",
          "",
          "---------------"
        ],
        "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php||hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php": [
          "File: hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php -> hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: include_once(\"meth_caller_multiple.inc\");",
          "6: class A { function afunc($x) { return $x * 3; } }",
          "8: $x = \\HH\\meth_caller(\\Ans\\A::class, \"afunc\");",
          "9: \\var_dump($x, $x(new \\Ans\\A(), 1));",
          "10: \\var_dump(\\HH\\meth_caller_get_class($x), \\HH\\meth_caller_get_method($x));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: <<__EntryPoint>> function main(): void {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18: \\var_dump($x, $x(new \\Ans\\A(), 4));",
          "20: \\var_dump($x, $x(new A(), 4));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf||hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf": [
          "File: hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf -> hphp/test/slow/global_func/meth_caller/meth_caller_multiple.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: Stack trace:",
          "22: #0 (): HH\\invariant_violation()",
          "23: #1 %s/meth_caller_multiple.php(20): MethCaller$Ans\\A$afunc()",
          "",
          "[Removed Lines]",
          "24: #2 {main}",
          "",
          "[Added Lines]",
          "24: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/lang/meth_caller_bad.php||hphp/test/slow/lang/meth_caller_bad.php": [
          "File: hphp/test/slow/lang/meth_caller_bad.php -> hphp/test/slow/lang/meth_caller_bad.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: class A {}",
          "4: $cb = meth_caller('B', 'c');",
          "5: $cb(new A());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: <<__EntryPoint>> function main(): void {",
          "6: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/lang/meth_caller_bad.php.expectf||hphp/test/slow/lang/meth_caller_bad.php.expectf": [
          "File: hphp/test/slow/lang/meth_caller_bad.php.expectf -> hphp/test/slow/lang/meth_caller_bad.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Stack trace:",
          "3: #0 (): HH\\invariant_violation()",
          "4: #1 %s/test/slow/lang/meth_caller_bad.php(5): __SystemLib\\MethCallerHelper->__invoke()",
          "",
          "[Removed Lines]",
          "5: #2 {main}",
          "",
          "[Added Lines]",
          "5: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/lang/meth_caller_bad2.php||hphp/test/slow/lang/meth_caller_bad2.php": [
          "File: hphp/test/slow/lang/meth_caller_bad2.php -> hphp/test/slow/lang/meth_caller_bad2.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:     $cb(null);",
          "7:   }",
          "8: }",
          "9: (new A())->foo();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: <<__EntryPoint>> function main(): void {",
          "12: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/lang/meth_caller_bad2.php.expectf||hphp/test/slow/lang/meth_caller_bad2.php.expectf": [
          "File: hphp/test/slow/lang/meth_caller_bad2.php.expectf -> hphp/test/slow/lang/meth_caller_bad2.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Stack trace:",
          "3: #0 (): HH\\invariant_violation()",
          "4: #1 %s/test/slow/lang/meth_caller_bad2.php(6): __SystemLib\\MethCallerHelper->__invoke()",
          "",
          "[Removed Lines]",
          "5: #2 %s/test/slow/lang/meth_caller_bad2.php(9): A->foo()",
          "6: #3 {main}",
          "",
          "[Added Lines]",
          "5: #2 %s/test/slow/lang/meth_caller_bad2.php(11): A->foo()",
          "6: %a {main}",
          "",
          "---------------"
        ],
        "hphp/test/slow/object/closure-object-ids.php||hphp/test/slow/object/closure-object-ids.php": [
          "File: hphp/test/slow/object/closure-object-ids.php -> hphp/test/slow/object/closure-object-ids.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "4: $a = $x ==> $x + 1;",
          "5: var_dump($a);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: <<__EntryPoint>> function main(): void {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: $b = $x ==> $x + 3;",
          "12: var_dump($b);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/object/closure-object-ids.php.expectf||hphp/test/slow/object/closure-object-ids.php.expectf": [
          "File: hphp/test/slow/object/closure-object-ids.php.expectf -> hphp/test/slow/object/closure-object-ids.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   [\"parameter\"]=>",
          "3:   array(1) {",
          "4:     [\"$x\"]=>",
          "",
          "[Removed Lines]",
          "1: object(Closure$;%d) (1) {",
          "",
          "[Added Lines]",
          "1: object(Closure$%S;%d) (1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7: }",
          "8: object(stdClass) (0) {",
          "9: }",
          "11:   [\"parameter\"]=>",
          "12:   array(1) {",
          "13:     [\"$x\"]=>",
          "",
          "[Removed Lines]",
          "10: object(Closure$#2;%d) (1) {",
          "",
          "[Added Lines]",
          "10: object(Closure$%s#2;%d) (1) {",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php": [
          "File: hphp/test/slow/string/number_format_error.php -> hphp/test/slow/string/number_format_error.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "4: $iptc_hdr =",
          "5:   \"\\x1c\\x01\" . // magic",
          "",
          "[Removed Lines]",
          "2:   $READ_LENGTH = 0x1000; // choose leak size",
          "",
          "[Added Lines]",
          "2: <<__EntryPoint>> function main(): void {",
          "3: $READ_LENGTH = 0x1000; // choose leak size",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: $tmp = iptcparse($badstr);",
          "18: var_dump($tmp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-closure.php||hphp/test/slow/using/bad-closure.php": [
          "File: hphp/test/slow/using/bad-closure.php -> hphp/test/slow/using/bad-closure.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: using (function() {}) {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: <<__EntryPoint>> function main(): void {",
          "4: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-closure.php.expectf||hphp/test/slow/using/bad-closure.php.expectf": [
          "File: hphp/test/slow/using/bad-closure.php.expectf -> hphp/test/slow/using/bad-closure.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: Call to undefined method Closure$;%d::__dispose() in %s/test/slow/using/bad-closure.php on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: Call to undefined method Closure$%S;%d::__dispose() in %s/test/slow/using/bad-closure.php on line 3",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda1.php||hphp/test/slow/using/bad-lambda1.php": [
          "File: hphp/test/slow/using/bad-lambda1.php -> hphp/test/slow/using/bad-lambda1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: using ($x ==> $x) {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: <<__EntryPoint>> function main(): void {",
          "4: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda1.php.expectf||hphp/test/slow/using/bad-lambda1.php.expectf": [
          "File: hphp/test/slow/using/bad-lambda1.php.expectf -> hphp/test/slow/using/bad-lambda1.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: Call to undefined method Closure$;%d::__dispose() in %s/test/slow/using/bad-lambda1.php on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: Call to undefined method Closure$%S;%d::__dispose() in %s/test/slow/using/bad-lambda1.php on line 3",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda2.php||hphp/test/slow/using/bad-lambda2.php": [
          "File: hphp/test/slow/using/bad-lambda2.php -> hphp/test/slow/using/bad-lambda2.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: using (($x) ==> $x) {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: <<__EntryPoint>> function main(): void {",
          "4: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda2.php.expectf||hphp/test/slow/using/bad-lambda2.php.expectf": [
          "File: hphp/test/slow/using/bad-lambda2.php.expectf -> hphp/test/slow/using/bad-lambda2.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: Call to undefined method Closure$;%d::__dispose() in %s/test/slow/using/bad-lambda2.php on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: Call to undefined method Closure$%S;%d::__dispose() in %s/test/slow/using/bad-lambda2.php on line 3",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda3.php||hphp/test/slow/using/bad-lambda3.php": [
          "File: hphp/test/slow/using/bad-lambda3.php -> hphp/test/slow/using/bad-lambda3.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "3: using (($x, $y) ==> $x) {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: <<__EntryPoint>> function main(): void {",
          "4: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/using/bad-lambda3.php.expectf||hphp/test/slow/using/bad-lambda3.php.expectf": [
          "File: hphp/test/slow/using/bad-lambda3.php.expectf -> hphp/test/slow/using/bad-lambda3.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: Call to undefined method Closure$;%d::__dispose() in %s/test/slow/using/bad-lambda3.php on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: Call to undefined method Closure$%S;%d::__dispose() in %s/test/slow/using/bad-lambda3.php on line 3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea0a055335e6540f6e2b7c1a4426be966f94c96e",
      "candidate_info": {
        "commit_hash": "ea0a055335e6540f6e2b7c1a4426be966f94c96e",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/ea0a055335e6540f6e2b7c1a4426be966f94c96e",
        "files": [
          "hphp/runtime/base/zend-string.cpp",
          "hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/string/number_format_error.php.expect"
        ],
        "message": "Fix a bug in number_format()\n\nSummary: In case of error while calling snprintf, return empty string instead of malformed string.\n\nReviewed By: binliu19\n\nDifferential Revision: D13379372",
        "before_after_code_files": [
          "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
          "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
            "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
          ],
          "candidate": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
            "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
          "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1768:   String tmpstr(63, ReserveString);",
          "1769:   tmpbuf = tmpstr.mutableData();",
          "1770:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
          "1771:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "1772:     tmpstr.setSize(tmplen);",
          "1773:     return tmpstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1771:   if (tmplen < 0) return empty_string();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1777:     tmpstr = String(tmplen, ReserveString);",
          "1778:     tmpbuf = tmpstr.mutableData();",
          "1779:     tmplen = snprintf(tmpbuf, tmplen + 1, \"%.*F\", dec, d);",
          "1780:     if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "1781:       tmpstr.setSize(tmplen);",
          "1782:       return tmpstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:     if (tmplen < 0) return empty_string();",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php": [
          "File: hphp/test/slow/string/number_format_error.php -> hphp/test/slow/string/number_format_error.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2:   $READ_LENGTH = 0x1000; // choose leak size",
          "4: $iptc_hdr =",
          "5:   \"\\x1c\\x01\" . // magic",
          "6:   \"\\x00\\x80\" . // dataset, recnum",
          "7:   \"\\x00\" .     // padding",
          "8:   pack(\"N\", $READ_LENGTH);",
          "10: $holder = [];",
          "11: for($i = 0; $i < 100; $i++)",
          "12:   $holder[] = str_pad($iptc_hdr, 96);",
          "14: $badstr = number_format(0,0x7fffffff);",
          "15: var_dump($badstr);",
          "17: $tmp = iptcparse($badstr);",
          "18: var_dump($tmp);",
          "19: ?>",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect": [
          "File: hphp/test/slow/string/number_format_error.php.expect -> hphp/test/slow/string/number_format_error.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: string(0) \"\"",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71d3af63db80a57db4fd0140740b5d64dd5c85af",
      "candidate_info": {
        "commit_hash": "71d3af63db80a57db4fd0140740b5d64dd5c85af",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/71d3af63db80a57db4fd0140740b5d64dd5c85af",
        "files": [
          "hphp/runtime/base/zend-string.cpp",
          "hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/string/number_format_error.php.expect"
        ],
        "message": "[CVE-2018-6345] Fix a bug in number_format()\n\nSummary: In case of error while calling snprintf, return empty string instead of malformed string.\n\nReviewed By: binliu19\n\nDifferential Revision: D13379372",
        "before_after_code_files": [
          "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
          "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
          "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
            "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
          ],
          "candidate": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
            "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php",
            "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
          "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1768:   String tmpstr(63, ReserveString);",
          "1769:   tmpbuf = tmpstr.mutableData();",
          "1770:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
          "1771:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "1772:     tmpstr.setSize(tmplen);",
          "1773:     return tmpstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1771:   if (tmplen < 0) return empty_string();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1777:     tmpstr = String(tmplen, ReserveString);",
          "1778:     tmpbuf = tmpstr.mutableData();",
          "1779:     tmplen = snprintf(tmpbuf, tmplen + 1, \"%.*F\", dec, d);",
          "1780:     if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "1781:       tmpstr.setSize(tmplen);",
          "1782:       return tmpstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:     if (tmplen < 0) return empty_string();",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/number_format_error.php||hphp/test/slow/string/number_format_error.php": [
          "File: hphp/test/slow/string/number_format_error.php -> hphp/test/slow/string/number_format_error.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2:   $READ_LENGTH = 0x1000; // choose leak size",
          "4: $iptc_hdr =",
          "5:   \"\\x1c\\x01\" . // magic",
          "6:   \"\\x00\\x80\" . // dataset, recnum",
          "7:   \"\\x00\" .     // padding",
          "8:   pack(\"N\", $READ_LENGTH);",
          "10: $holder = [];",
          "11: for($i = 0; $i < 100; $i++)",
          "12:   $holder[] = str_pad($iptc_hdr, 96);",
          "14: $badstr = number_format(0,0x7fffffff);",
          "15: var_dump($badstr);",
          "17: $tmp = iptcparse($badstr);",
          "18: var_dump($tmp);",
          "19: ?>",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/number_format_error.php.expect||hphp/test/slow/string/number_format_error.php.expect": [
          "File: hphp/test/slow/string/number_format_error.php.expect -> hphp/test/slow/string/number_format_error.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: string(0) \"\"",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    }
  ]
}