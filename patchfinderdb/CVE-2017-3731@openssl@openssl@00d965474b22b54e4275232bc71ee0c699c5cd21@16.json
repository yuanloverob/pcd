{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3bceb47a272cc930c48b88743c4734a891b1c09a",
      "candidate_info": {
        "commit_hash": "3bceb47a272cc930c48b88743c4734a891b1c09a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3bceb47a272cc930c48b88743c4734a891b1c09a",
        "files": [
          "apps/ca.c"
        ],
        "message": "Fix a double free in ca command line\n\nProviding a spkac file with no default section causes a double free.\n\nThanks to Brian Carpenter for reporting this issue.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(cherry picked from commit 229bd12487f8576fc088dc4f641950ac33c62033)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1917:     sk = CONF_get_section(parms, \"default\");",
          "1918:     if (sk_CONF_VALUE_num(sk) == 0) {",
          "1919:         BIO_printf(bio_err, \"no name/value pairs found in %s\\n\", infile);",
          "1921:         goto end;",
          "1922:     }",
          "",
          "[Removed Lines]",
          "1920:         CONF_free(parms);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "238b2bc904f45826b9082dd2f0061a12a2f61cd0",
      "candidate_info": {
        "commit_hash": "238b2bc904f45826b9082dd2f0061a12a2f61cd0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/238b2bc904f45826b9082dd2f0061a12a2f61cd0",
        "files": [
          "util/mkdef.pl"
        ],
        "message": "Code health: Remove VAX exceptions in util/mkdef.pl\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2793)\n(cherry picked from commit 96bc5d03b813a318403d45600e07d6bdcb41d195)",
        "before_after_code_files": [
          "util/mkdef.pl||util/mkdef.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: my $do_ctestall = 0;",
          "64: my $do_checkexist = 0;",
          "68: my $VMS=0;",
          "69: my $W32=0;",
          "70: my $NT=0;",
          "",
          "[Removed Lines]",
          "66: my $VMSVAX=0;",
          "67: my $VMSNonVAX=0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:   $W32 = 1;",
          "154:   $NT = 1;",
          "155:  }",
          "164:  if ($_ eq \"linux\") {",
          "165:   $linux=1;",
          "166:  }",
          "168:  if ($_ eq \"zlib\" || $_ eq \"enable-zlib\" || $_ eq \"zlib-dynamic\"",
          "169:     || $_ eq \"enable-zlib-dynamic\") {",
          "170:   $zlib = 1;",
          "",
          "[Removed Lines]",
          "156:  if ($_ eq \"VMS-VAX\") {",
          "157:   $VMS=1;",
          "158:   $VMSVAX=1;",
          "159:  }",
          "160:  if ($_ eq \"VMS-NonVAX\") {",
          "161:   $VMS=1;",
          "162:   $VMSNonVAX=1;",
          "163:  }",
          "167:  $VMS=$VMSNonVAX=1 if $_ eq \"VMS\";",
          "",
          "[Added Lines]",
          "157:  $VMS=1 if $_ eq \"VMS\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "980:  $platform{\"PEM_write_NS_CERT_SEQ\"} = \"VMS\";",
          "981:  $platform{\"PEM_read_P8_PRIV_KEY_INFO\"} = \"VMS\";",
          "982:  $platform{\"PEM_write_P8_PRIV_KEY_INFO\"} = \"VMS\";",
          "997:  # Info we know about",
          "",
          "[Removed Lines]",
          "983:  $platform{\"EVP_sha384\"} = \"!VMSVAX\";",
          "984:  $platform{\"EVP_sha512\"} = \"!VMSVAX\";",
          "985:  $platform{\"SHA384_Init\"} = \"!VMSVAX\";",
          "986:  $platform{\"SHA384_Transform\"} = \"!VMSVAX\";",
          "987:  $platform{\"SHA384_Update\"} = \"!VMSVAX\";",
          "988:  $platform{\"SHA384_Final\"} = \"!VMSVAX\";",
          "989:  $platform{\"SHA384\"} = \"!VMSVAX\";",
          "990:  $platform{\"SHA512_Init\"} = \"!VMSVAX\";",
          "991:  $platform{\"SHA512_Transform\"} = \"!VMSVAX\";",
          "992:  $platform{\"SHA512_Update\"} = \"!VMSVAX\";",
          "993:  $platform{\"SHA512_Final\"} = \"!VMSVAX\";",
          "994:  $platform{\"SHA512\"} = \"!VMSVAX\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1118:   if ($platforms) {",
          "1119:    # platforms",
          "1122:    if ($keyword eq \"VMS\" && $VMS) { return 1; }",
          "1123:    if ($keyword eq \"WIN32\" && $W32) { return 1; }",
          "1124:    if ($keyword eq \"_WIN32\" && $W32) { return 1; }",
          "1125:    if ($keyword eq \"WINNT\" && $NT) { return 1; }",
          "1126:    # Special platforms:",
          "1127:    # EXPORT_VAR_AS_FUNCTION means that global variables",
          "1131:     return 1;",
          "1132:    }",
          "1133:    if ($keyword eq \"ZLIB\" && $zlib) { return 1; }",
          "",
          "[Removed Lines]",
          "1120:    if ($keyword eq \"VMSVAX\" && $VMSVAX) { return 1; }",
          "1121:    if ($keyword eq \"VMSNonVAX\" && $VMSNonVAX) { return 1; }",
          "1128:    # will be represented as functions.  This currently",
          "1129:    # only happens on VMS-VAX.",
          "1130:    if ($keyword eq \"EXPORT_VAR_AS_FUNCTION\" && ($VMSVAX || $W32)) {",
          "",
          "[Added Lines]",
          "1103:    # will be represented as functions.",
          "1104:    if ($keyword eq \"EXPORT_VAR_AS_FUNCTION\" && $W32) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86d9b572e184262f8c14e8c31f87caa300691d39",
      "candidate_info": {
        "commit_hash": "86d9b572e184262f8c14e8c31f87caa300691d39",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/86d9b572e184262f8c14e8c31f87caa300691d39",
        "files": [
          "crypto/threads_pthread.c"
        ],
        "message": "Grouped data declarations [skip ci] Reviewed-by: Rich Salz <rsalz@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org> (Merged from https://github.com/openssl/openssl/pull/1981) (cherry picked from commit bc1dba209533f2033a4de0d93380fc0f485e6f7e)",
        "before_after_code_files": [
          "crypto/threads_pthread.c||crypto/threads_pthread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_pthread.c||crypto/threads_pthread.c": [
          "File: crypto/threads_pthread.c -> crypto/threads_pthread.c"
        ]
      }
    },
    {
      "candidate_hash": "a4905bf6423105cda266ea3dfa70c207b4b7c2ac",
      "candidate_info": {
        "commit_hash": "a4905bf6423105cda266ea3dfa70c207b4b7c2ac",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a4905bf6423105cda266ea3dfa70c207b4b7c2ac",
        "files": [
          "crypto/dh/dh_meth.c",
          "crypto/dsa/dsa_meth.c",
          "crypto/rsa/rsa_meth.c"
        ],
        "message": "Raise an error on memory alloc failure.\n\nBoth strdup or malloc failure should raise an err.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1905)\n(cherry picked from commit bad6b116a2d3c005330e618c726f172fd0fefc2a)",
        "before_after_code_files": [
          "crypto/dh/dh_meth.c||crypto/dh/dh_meth.c",
          "crypto/dsdsa_meth.c||crypto/dsa/dsa_meth.c",
          "crypto/rsrsa_meth.c||crypto/rsa/rsa_meth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_meth.c||crypto/dh/dh_meth.c": [
          "File: crypto/dh/dh_meth.c -> crypto/dh/dh_meth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: DH_METHOD *DH_meth_new(const char *name, int flags)",
          "15: {",
          "18:     if (dhm != NULL) {",
          "25:         dhm->flags = flags;",
          "26:     }",
          "29: }",
          "31: void DH_meth_free(DH_METHOD *dhm)",
          "",
          "[Removed Lines]",
          "16:     DH_METHOD *dhm = OPENSSL_zalloc(sizeof(DH_METHOD));",
          "19:         dhm->name = OPENSSL_strdup(name);",
          "20:         if (dhm->name == NULL) {",
          "21:             OPENSSL_free(dhm);",
          "22:             DHerr(DH_F_DH_METH_NEW, ERR_R_MALLOC_FAILURE);",
          "23:             return NULL;",
          "24:         }",
          "28:     return dhm;",
          "",
          "[Added Lines]",
          "16:     DH_METHOD *dhm = OPENSSL_zalloc(sizeof(*dhm));",
          "21:         dhm->name = OPENSSL_strdup(name);",
          "22:         if (dhm->name != NULL)",
          "23:             return dhm;",
          "25:         OPENSSL_free(dhm);",
          "28:     DHerr(DH_F_DH_METH_NEW, ERR_R_MALLOC_FAILURE);",
          "29:     return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: DH_METHOD *DH_meth_dup(const DH_METHOD *dhm)",
          "40: {",
          "45:     if (ret != NULL) {",
          "46:         memcpy(ret, dhm, sizeof(*dhm));",
          "47:         ret->name = OPENSSL_strdup(dhm->name);",
          "53:     }",
          "56: }",
          "58: const char *DH_meth_get0_name(const DH_METHOD *dhm)",
          "",
          "[Removed Lines]",
          "41:     DH_METHOD *ret;",
          "43:     ret = OPENSSL_malloc(sizeof(DH_METHOD));",
          "48:         if (ret->name == NULL) {",
          "49:             OPENSSL_free(ret);",
          "50:             DHerr(DH_F_DH_METH_DUP, ERR_R_MALLOC_FAILURE);",
          "51:             return NULL;",
          "52:         }",
          "55:     return ret;",
          "",
          "[Added Lines]",
          "42:     DH_METHOD *ret = OPENSSL_malloc(sizeof(*ret));",
          "48:         if (ret->name != NULL)",
          "49:             return ret;",
          "51:         OPENSSL_free(ret);",
          "54:     DHerr(DH_F_DH_METH_DUP, ERR_R_MALLOC_FAILURE);",
          "55:     return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63: int DH_meth_set1_name(DH_METHOD *dhm, const char *name)",
          "64: {",
          "68:     if (tmpname == NULL) {",
          "69:         DHerr(DH_F_DH_METH_SET1_NAME, ERR_R_MALLOC_FAILURE);",
          "70:         return 0;",
          "",
          "[Removed Lines]",
          "65:     char *tmpname;",
          "67:     tmpname = OPENSSL_strdup(name);",
          "",
          "[Added Lines]",
          "65:     char *tmpname = OPENSSL_strdup(name);",
          "",
          "---------------"
        ],
        "crypto/dsdsa_meth.c||crypto/dsa/dsa_meth.c": [
          "File: crypto/dsdsa_meth.c -> crypto/dsa/dsa_meth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     DSA_METHOD *dsam = OPENSSL_zalloc(sizeof(*dsam));",
          "29:         dsam->name = OPENSSL_strdup(name);",
          "30:         if (dsam->name != NULL)",
          "31:             return dsam;",
          "33:         OPENSSL_free(dsam);",
          "36:     DSAerr(DSA_F_DSA_METH_NEW, ERR_R_MALLOC_FAILURE);",
          "37:     return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:     DSA_METHOD *ret = OPENSSL_malloc(sizeof(*ret));",
          "56:         if (ret->name != NULL)",
          "57:             return ret;",
          "59:         OPENSSL_free(ret);",
          "62:     DSAerr(DSA_F_DSA_METH_DUP, ERR_R_MALLOC_FAILURE);",
          "63:     return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     char *tmpname = OPENSSL_strdup(name);",
          "",
          "---------------"
        ],
        "crypto/rsrsa_meth.c||crypto/rsa/rsa_meth.c": [
          "File: crypto/rsrsa_meth.c -> crypto/rsa/rsa_meth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:     RSA_METHOD *meth = OPENSSL_zalloc(sizeof(*meth));",
          "21:         meth->name = OPENSSL_strdup(name);",
          "22:         if (meth->name != NULL)",
          "23:             return meth;",
          "25:         OPENSSL_free(meth);",
          "28:     RSAerr(RSA_F_RSA_METH_NEW, ERR_R_MALLOC_FAILURE);",
          "29:     return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     RSA_METHOD *ret = OPENSSL_malloc(sizeof(*ret));",
          "48:         if (ret->name != NULL)",
          "49:             return ret;",
          "51:         OPENSSL_free(ret);",
          "54:     RSAerr(RSA_F_RSA_METH_DUP, ERR_R_MALLOC_FAILURE);",
          "55:     return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     char *tmpname = OPENSSL_strdup(name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df8dca7ac8d71b2fe5ec3a378c547dbfeb081d7e",
      "candidate_info": {
        "commit_hash": "df8dca7ac8d71b2fe5ec3a378c547dbfeb081d7e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/df8dca7ac8d71b2fe5ec3a378c547dbfeb081d7e",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Unix Makefile: Make sure to use $(PERL) when running ./Configure\n\nFor consistency, it's better to use the perl that was specified to\nConfigure last time it was called.\n\nUse case:\n\nperl v5.8.8 was first along $PATH, perl v5.22.2 was available and\nspecified as: PERL=/opt/local/bin/perl ./config.  When make wanted to\nreconfigure and called './Configure reconf', configuration broke down,\ncomplaining about a perl that's too old.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1884)\n(cherry picked from commit 12ccb021be9e1c4c947e020ea2079e985b329a8a)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "761:  cd $(SRCDIR); ls -l $(TARFILE).gz",
          "763: dist:",
          "766: # Helper targets #####################################################",
          "",
          "[Removed Lines]",
          "764:  @$(MAKE) PREPARE_CMD='./Configure dist' tar",
          "",
          "[Added Lines]",
          "764:  @$(MAKE) PREPARE_CMD='$(PERL) ./Configure dist' tar",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "820: configdata.pm: $(SRCDIR)/Configure $(SRCDIR)/config {- join(\" \", @{$config{build_file_templates}}, @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "821:  @echo \"Detected changed: $?\"",
          "822:  @echo \"Reconfiguring...\"",
          "824:  @echo \"**************************************************\"",
          "825:  @echo \"***                                            ***\"",
          "826:  @echo \"***   Please run the same make command again   ***\"",
          "",
          "[Removed Lines]",
          "823:  $(SRCDIR)/Configure reconf",
          "",
          "[Added Lines]",
          "823:  $(PERL) $(SRCDIR)/Configure reconf",
          "",
          "---------------"
        ]
      }
    }
  ]
}