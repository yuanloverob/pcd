{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "96e3be3aa30069f61636840accbb6a60934b3f4c",
      "candidate_info": {
        "commit_hash": "96e3be3aa30069f61636840accbb6a60934b3f4c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/96e3be3aa30069f61636840accbb6a60934b3f4c",
        "files": [
          "tools/msvs/msi/product.wxs"
        ],
        "message": "Added trailing backslash to npm path\n\nFix #2377: $PATH issues reported for MSI installer",
        "before_after_code_files": [
          "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs": [
          "File: tools/msvs/msi/product.wxs -> tools/msvs/msi/product.wxs",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:                          Name=\"PATH\"",
          "36:                          Part=\"last\"",
          "37:                          System=\"yes\"",
          "39:             <Environment Id=\"node_env\"",
          "40:                          Action=\"set\"",
          "41:                          Name=\"PATH\"",
          "",
          "[Removed Lines]",
          "38:                          Value=\"[AppDataFolder]npm\" />",
          "",
          "[Added Lines]",
          "38:                          Value=\"[AppDataFolder]npm\\\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "557fc396b4f5c165de90fbf9eaecb4370b46c057",
      "candidate_info": {
        "commit_hash": "557fc396b4f5c165de90fbf9eaecb4370b46c057",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/557fc396b4f5c165de90fbf9eaecb4370b46c057",
        "files": [
          "deps/v8/ChangeLog",
          "deps/v8/src/arm/builtins-arm.cc",
          "deps/v8/src/ast.cc",
          "deps/v8/src/bootstrapper.cc",
          "deps/v8/src/builtins.cc",
          "deps/v8/src/builtins.h",
          "deps/v8/src/contexts.h",
          "deps/v8/src/ia32/builtins-ia32.cc",
          "deps/v8/src/objects-inl.h",
          "deps/v8/src/objects.cc",
          "deps/v8/src/objects.h",
          "deps/v8/src/runtime.cc",
          "deps/v8/src/runtime.h",
          "deps/v8/src/version.cc",
          "deps/v8/src/x64/builtins-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-1849.js",
          "deps/v8/test/mjsunit/regress/regress-1878.js",
          "deps/v8/test/mjsunit/regress/regress-95113.js"
        ],
        "message": "Upgrade V8 to 3.8.4",
        "before_after_code_files": [
          "deps/v8/src/arm/builtins-arm.cc||deps/v8/src/arm/builtins-arm.cc",
          "deps/v8/src/ast.cc||deps/v8/src/ast.cc",
          "deps/v8/src/bootstrapper.cc||deps/v8/src/bootstrapper.cc",
          "deps/v8/src/builtins.cc||deps/v8/src/builtins.cc",
          "deps/v8/src/builtins.h||deps/v8/src/builtins.h",
          "deps/v8/src/contexts.h||deps/v8/src/contexts.h",
          "deps/v8/src/ia32/builtins-ia32.cc||deps/v8/src/ia32/builtins-ia32.cc",
          "deps/v8/src/objects-inl.h||deps/v8/src/objects-inl.h",
          "deps/v8/src/objects.cc||deps/v8/src/objects.cc",
          "deps/v8/src/objects.h||deps/v8/src/objects.h",
          "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc",
          "deps/v8/src/runtime.h||deps/v8/src/runtime.h",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/src/x64/builtins-x64.cc||deps/v8/src/x64/builtins-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-1849.js||deps/v8/test/mjsunit/regress/regress-1849.js",
          "deps/v8/test/mjsunit/regress/regress-1878.js||deps/v8/test/mjsunit/regress/regress-1878.js",
          "deps/v8/test/mjsunit/regress/regress-95113.js||deps/v8/test/mjsunit/regress/regress-95113.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/arm/builtins-arm.cc||deps/v8/src/arm/builtins-arm.cc": [
          "File: deps/v8/src/arm/builtins-arm.cc -> deps/v8/src/arm/builtins-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: }",
          "76: static void GenerateLoadArrayFunction(MacroAssembler* masm, Register result) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: static void GenerateLoadInternalArrayFunction(MacroAssembler* masm,",
          "77:                                               Register result) {",
          "80:   __ ldr(result, MemOperand(cp, Context::SlotOffset(Context::GLOBAL_INDEX)));",
          "81:   __ ldr(result,",
          "82:          FieldMemOperand(result, GlobalObject::kGlobalContextOffset));",
          "84:   __ ldr(result,",
          "85:          MemOperand(result,",
          "86:                     Context::SlotOffset(",
          "87:                         Context::INTERNAL_ARRAY_FUNCTION_INDEX)));",
          "88: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "418: }",
          "421: void Builtins::Generate_ArrayCode(MacroAssembler* masm) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437: void Builtins::Generate_InternalArrayCode(MacroAssembler* masm) {",
          "443:   Label generic_array_code, one_or_more_arguments, two_or_more_arguments;",
          "446:   GenerateLoadInternalArrayFunction(masm, r1);",
          "448:   if (FLAG_debug_code) {",
          "450:     __ ldr(r2, FieldMemOperand(r1, JSFunction::kPrototypeOrInitialMapOffset));",
          "451:     __ tst(r2, Operand(kSmiTagMask));",
          "452:     __ Assert(ne, \"Unexpected initial map for InternalArray function\");",
          "453:     __ CompareObjectType(r2, r3, r4, MAP_TYPE);",
          "454:     __ Assert(eq, \"Unexpected initial map for InternalArray function\");",
          "455:   }",
          "459:   ArrayNativeCode(masm, &generic_array_code);",
          "463:   __ bind(&generic_array_code);",
          "465:   Handle<Code> array_code =",
          "466:       masm->isolate()->builtins()->InternalArrayCodeGeneric();",
          "467:   __ Jump(array_code, RelocInfo::CODE_TARGET);",
          "468: }",
          "",
          "---------------"
        ],
        "deps/v8/src/ast.cc||deps/v8/src/ast.cc": [
          "File: deps/v8/src/ast.cc -> deps/v8/src/ast.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "748:     type->LookupInDescriptors(NULL, *name, &lookup);",
          "752:       holder_ = Handle<JSObject>(JSObject::cast(type->prototype()));",
          "753:       type = Handle<Map>(holder()->map());",
          "754:     } else if (lookup.IsProperty() && lookup.type() == CONSTANT_FUNCTION) {",
          "",
          "[Removed Lines]",
          "751:     if (!lookup.IsFound() && type->prototype()->IsJSObject()) {",
          "",
          "[Added Lines]",
          "751:     if ((!lookup.IsFound() || IsTransitionType(lookup.type()))",
          "752:         && type->prototype()->IsJSObject()) {",
          "",
          "---------------"
        ],
        "deps/v8/src/bootstrapper.cc||deps/v8/src/bootstrapper.cc": [
          "File: deps/v8/src/bootstrapper.cc -> deps/v8/src/bootstrapper.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1619:     Handle<JSFunction> array_function =",
          "1620:         InstallFunction(builtins,",
          "1621:                         \"InternalArray\",",
          "1622:                         JS_ARRAY_TYPE,",
          "1623:                         JSArray::kSize,",
          "1624:                         isolate()->initial_object_prototype(),",
          "1626:                         true);",
          "1627:     Handle<JSObject> prototype =",
          "1628:         factory()->NewJSObject(isolate()->object_function(), TENURED);",
          "",
          "[Removed Lines]",
          "1625:                         Builtins::kArrayCode,",
          "",
          "[Added Lines]",
          "1622:                         Builtins::kInternalArrayCode,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1655:     array_function->initial_map()->set_instance_descriptors(",
          "1657:   }",
          "1659:   if (FLAG_disable_native_files) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1655:     global_context()->set_internal_array_function(*array_function);",
          "",
          "---------------"
        ],
        "deps/v8/src/builtins.cc||deps/v8/src/builtins.cc": [
          "File: deps/v8/src/builtins.cc -> deps/v8/src/builtins.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "184: }",
          "188:   Heap* heap = isolate->heap();",
          "189:   isolate->counters()->array_function_runtime()->Increment();",
          "191:   JSArray* array;",
          "192:   if (CalledAsConstructor(isolate)) {",
          "194:   } else {",
          "198:     Object* obj;",
          "199:     { MaybeObject* maybe_obj = heap->AllocateJSObject(constructor);",
          "200:       if (!maybe_obj->ToObject(&obj)) return maybe_obj;",
          "",
          "[Removed Lines]",
          "187: BUILTIN(ArrayCodeGeneric) {",
          "193:     array = JSArray::cast(*args.receiver());",
          "196:     JSFunction* constructor =",
          "197:         isolate->context()->global_context()->array_function();",
          "",
          "[Added Lines]",
          "187: static MaybeObject* ArrayCodeGenericCommon(Arguments* args,",
          "188:                                            Isolate* isolate,",
          "189:                                            JSFunction* constructor) {",
          "195:     array = JSArray::cast((*args)[0]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:     array = JSArray::cast(obj);",
          "203:   }",
          "212:     if (obj->IsSmi()) {",
          "213:       int len = Smi::cast(obj)->value();",
          "214:       if (len >= 0 && len < JSObject::kInitialMaxFastElementArray) {",
          "",
          "[Removed Lines]",
          "206:   ASSERT(array->HasFastTypeElements());",
          "210:   if (args.length() == 2) {",
          "211:     Object* obj = args[1];",
          "",
          "[Added Lines]",
          "207:   if (args->length() == 2) {",
          "208:     Object* obj = (*args)[1];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:     { MaybeObject* maybe_obj = array->Initialize(0);",
          "226:       if (!maybe_obj->ToObject(&obj)) return maybe_obj;",
          "227:     }",
          "229:   }",
          "233:     return array->Initialize(JSArray::kPreallocatedArrayElements);",
          "234:   }",
          "238:   MaybeObject* maybe_object =",
          "240:                                       ALLOW_CONVERTED_DOUBLE_ELEMENTS);",
          "241:   if (maybe_object->IsFailure()) return maybe_object;",
          "",
          "[Removed Lines]",
          "228:     return array->SetElementsLength(args[1]);",
          "232:   if (args.length() == 1) {",
          "237:   int number_of_elements = args.length() - 1;",
          "239:       array->EnsureCanContainElements(&args, 1, number_of_elements,",
          "",
          "[Added Lines]",
          "225:     return array->SetElementsLength((*args)[1]);",
          "229:   if (args->length() == 1) {",
          "234:   int number_of_elements = args->length() - 1;",
          "236:       array->EnsureCanContainElements(args, 1, number_of_elements,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "257:     case FAST_SMI_ONLY_ELEMENTS: {",
          "258:       FixedArray* smi_elms = FixedArray::cast(elms);",
          "259:       for (int index = 0; index < number_of_elements; index++) {",
          "261:       }",
          "262:       break;",
          "263:     }",
          "",
          "[Removed Lines]",
          "260:         smi_elms->set(index, args[index+1], SKIP_WRITE_BARRIER);",
          "",
          "[Added Lines]",
          "257:         smi_elms->set(index, (*args)[index+1], SKIP_WRITE_BARRIER);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       WriteBarrierMode mode = elms->GetWriteBarrierMode(no_gc);",
          "267:       FixedArray* object_elms = FixedArray::cast(elms);",
          "268:       for (int index = 0; index < number_of_elements; index++) {",
          "270:       }",
          "271:       break;",
          "272:     }",
          "273:     case FAST_DOUBLE_ELEMENTS: {",
          "274:       FixedDoubleArray* double_elms = FixedDoubleArray::cast(elms);",
          "275:       for (int index = 0; index < number_of_elements; index++) {",
          "277:       }",
          "278:       break;",
          "279:     }",
          "",
          "[Removed Lines]",
          "269:         object_elms->set(index, args[index+1], mode);",
          "276:         double_elms->set(index, args[index+1]->Number());",
          "",
          "[Added Lines]",
          "266:         object_elms->set(index, (*args)[index+1], mode);",
          "273:         double_elms->set(index, (*args)[index+1]->Number());",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "288: }",
          "291: MUST_USE_RESULT static MaybeObject* AllocateJSArray(Heap* heap) {",
          "292:   JSFunction* array_function =",
          "293:       heap->isolate()->context()->global_context()->array_function();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288: BUILTIN(InternalArrayCodeGeneric) {",
          "289:   return ArrayCodeGenericCommon(",
          "290:       &args,",
          "291:       isolate,",
          "292:       isolate->context()->global_context()->internal_array_function());",
          "293: }",
          "296: BUILTIN(ArrayCodeGeneric) {",
          "297:   return ArrayCodeGenericCommon(",
          "298:       &args,",
          "299:       isolate,",
          "300:       isolate->context()->global_context()->array_function());",
          "301: }",
          "",
          "---------------"
        ],
        "deps/v8/src/builtins.h||deps/v8/src/builtins.h": [
          "File: deps/v8/src/builtins.h -> deps/v8/src/builtins.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:                                                                     \\",
          "45:   V(EmptyFunction, NO_EXTRA_ARGUMENTS)                              \\",
          "46:                                                                     \\",
          "47:   V(ArrayCodeGeneric, NO_EXTRA_ARGUMENTS)                           \\",
          "48:                                                                     \\",
          "49:   V(ArrayPush, NO_EXTRA_ARGUMENTS)                                  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   V(InternalArrayCodeGeneric, NO_EXTRA_ARGUMENTS)                   \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:   V(FunctionApply,                  BUILTIN, UNINITIALIZED,             \\",
          "179:                                     Code::kNoExtraICState)              \\",
          "180:                                                                         \\",
          "181:   V(ArrayCode,                      BUILTIN, UNINITIALIZED,             \\",
          "182:                                     Code::kNoExtraICState)              \\",
          "183:   V(ArrayConstructCode,             BUILTIN, UNINITIALIZED,             \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:   V(InternalArrayCode,              BUILTIN, UNINITIALIZED,             \\",
          "183:                                     Code::kNoExtraICState)              \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "359:   static void Generate_FunctionCall(MacroAssembler* masm);",
          "360:   static void Generate_FunctionApply(MacroAssembler* masm);",
          "362:   static void Generate_ArrayCode(MacroAssembler* masm);",
          "363:   static void Generate_ArrayConstructCode(MacroAssembler* masm);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:   static void Generate_InternalArrayCode(MacroAssembler* masm);",
          "",
          "---------------"
        ],
        "deps/v8/src/contexts.h||deps/v8/src/contexts.h": [
          "File: deps/v8/src/contexts.h -> deps/v8/src/contexts.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:   V(STRING_FUNCTION_INDEX, JSFunction, string_function) \\",
          "105:   V(STRING_FUNCTION_PROTOTYPE_MAP_INDEX, Map, string_function_prototype_map) \\",
          "106:   V(OBJECT_FUNCTION_INDEX, JSFunction, object_function) \\",
          "107:   V(ARRAY_FUNCTION_INDEX, JSFunction, array_function) \\",
          "108:   V(DATE_FUNCTION_INDEX, JSFunction, date_function) \\",
          "109:   V(JSON_OBJECT_INDEX, JSObject, json_object) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:   V(INTERNAL_ARRAY_FUNCTION_INDEX, JSFunction, internal_array_function) \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:     STRING_FUNCTION_INDEX,",
          "245:     STRING_FUNCTION_PROTOTYPE_MAP_INDEX,",
          "246:     OBJECT_FUNCTION_INDEX,",
          "247:     ARRAY_FUNCTION_INDEX,",
          "248:     DATE_FUNCTION_INDEX,",
          "249:     JSON_OBJECT_INDEX,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248:     INTERNAL_ARRAY_FUNCTION_INDEX,",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/builtins-ia32.cc||deps/v8/src/ia32/builtins-ia32.cc": [
          "File: deps/v8/src/ia32/builtins-ia32.cc -> deps/v8/src/ia32/builtins-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1308: }",
          "1311: void Builtins::Generate_ArrayCode(MacroAssembler* masm) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1311: void Builtins::Generate_InternalArrayCode(MacroAssembler* masm) {",
          "1317:   Label generic_array_code;",
          "1320:   __ LoadGlobalFunction(Context::INTERNAL_ARRAY_FUNCTION_INDEX, edi);",
          "1322:   if (FLAG_debug_code) {",
          "1324:     __ mov(ebx, FieldOperand(edi, JSFunction::kPrototypeOrInitialMapOffset));",
          "1326:     __ test(ebx, Immediate(kSmiTagMask));",
          "1327:     __ Assert(not_zero, \"Unexpected initial map for InternalArray function\");",
          "1328:     __ CmpObjectType(ebx, MAP_TYPE, ecx);",
          "1329:     __ Assert(equal, \"Unexpected initial map for InternalArray function\");",
          "1330:   }",
          "1334:   ArrayNativeCode(masm, false, &generic_array_code);",
          "1338:   __ bind(&generic_array_code);",
          "1339:   Handle<Code> array_code =",
          "1340:       masm->isolate()->builtins()->InternalArrayCodeGeneric();",
          "1341:   __ jmp(array_code, RelocInfo::CODE_TARGET);",
          "1342: }",
          "",
          "---------------"
        ],
        "deps/v8/src/objects-inl.h||deps/v8/src/objects-inl.h": [
          "File: deps/v8/src/objects-inl.h -> deps/v8/src/objects-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1219:         map != heap->free_space_map()) {",
          "1220:       for (int i = 0; i < fixed_array->length(); i++) {",
          "1221:         Object* current = fixed_array->get(i);",
          "1223:       }",
          "1224:     }",
          "1225:   }",
          "",
          "[Removed Lines]",
          "1222:         ASSERT(current->IsSmi() || current == heap->the_hole_value());",
          "",
          "[Added Lines]",
          "1222:         ASSERT(current->IsSmi() || current->IsTheHole());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1290: }",
          "1294:   ASSERT((map()->has_fast_elements() ||",
          "1295:           map()->has_fast_smi_only_elements()) ==",
          "1296:          (value->map() == GetHeap()->fixed_array_map() ||",
          "1297:           value->map() == GetHeap()->fixed_cow_array_map()));",
          "1298:   ASSERT(map()->has_fast_double_elements() ==",
          "1299:          value->IsFixedDoubleArray());",
          "1304:   WRITE_FIELD(this, kElementsOffset, value);",
          "1305:   CONDITIONAL_WRITE_BARRIER(GetHeap(), this, kElementsOffset, value, mode);",
          "1306: }",
          "1309: void JSObject::initialize_properties() {",
          "1310:   ASSERT(!GetHeap()->InNewSpace(GetHeap()->empty_fixed_array()));",
          "1311:   WRITE_FIELD(this, kPropertiesOffset, GetHeap()->empty_fixed_array());",
          "",
          "[Removed Lines]",
          "1293: void JSObject::set_elements(FixedArrayBase* value, WriteBarrierMode mode) {",
          "1300:   ASSERT(value->HasValidElements());",
          "1301: #ifdef DEBUG",
          "1302:   ValidateSmiOnlyElements();",
          "1303: #endif",
          "",
          "[Added Lines]",
          "1293: void JSObject::set_map_and_elements(Map* new_map,",
          "1294:                                     FixedArrayBase* value,",
          "1295:                                     WriteBarrierMode mode) {",
          "1296:   ASSERT(value->HasValidElements());",
          "1297: #ifdef DEBUG",
          "1298:   ValidateSmiOnlyElements();",
          "1299: #endif",
          "1300:   if (new_map != NULL) {",
          "1301:     if (mode == UPDATE_WRITE_BARRIER) {",
          "1302:       set_map(new_map);",
          "1303:     } else {",
          "1304:       ASSERT(mode == SKIP_WRITE_BARRIER);",
          "1305:       set_map_no_write_barrier(new_map);",
          "1306:     }",
          "1307:   }",
          "1319: void JSObject::set_elements(FixedArrayBase* value, WriteBarrierMode mode) {",
          "1320:   set_map_and_elements(NULL, value, mode);",
          "1321: }",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.cc||deps/v8/src/objects.cc": [
          "File: deps/v8/src/objects.cc -> deps/v8/src/objects.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "8188:   Map* new_map = NULL;",
          "8189:   if (elements()->map() != heap->non_strict_arguments_elements_map()) {",
          "8190:     Object* object;",
          "8191:     bool has_fast_smi_only_elements =",
          "8195:     ElementsKind elements_kind = has_fast_smi_only_elements",
          "8196:         ? FAST_SMI_ONLY_ELEMENTS",
          "8197:         : FAST_ELEMENTS;",
          "",
          "[Removed Lines]",
          "8192:         (set_capacity_mode == kAllowSmiOnlyElements) &&",
          "8193:         (elements()->map()->has_fast_smi_only_elements() ||",
          "8194:          elements() == heap->empty_fixed_array());",
          "",
          "[Added Lines]",
          "8194:         (set_capacity_mode == kForceSmiOnlyElements) ||",
          "8195:         ((set_capacity_mode == kAllowSmiOnlyElements) &&",
          "8196:          (elements()->map()->has_fast_smi_only_elements() ||",
          "8197:           elements() == heap->empty_fixed_array()));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8209:       WriteBarrierMode mode(new_elements->GetWriteBarrierMode(no_gc));",
          "8210:       CopyFastElementsToFast(FixedArray::cast(old_elements_raw),",
          "8211:                              new_elements, mode);",
          "8214:       break;",
          "8215:     }",
          "8216:     case DICTIONARY_ELEMENTS: {",
          "",
          "[Removed Lines]",
          "8212:       set_map(new_map);",
          "8213:       set_elements(new_elements);",
          "",
          "[Added Lines]",
          "8215:       set_map_and_elements(new_map, new_elements);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8219:       CopySlowElementsToFast(NumberDictionary::cast(old_elements_raw),",
          "8220:                              new_elements,",
          "8221:                              mode);",
          "8224:       break;",
          "8225:     }",
          "8226:     case NON_STRICT_ARGUMENTS_ELEMENTS: {",
          "",
          "[Removed Lines]",
          "8222:       set_map(new_map);",
          "8223:       set_elements(new_elements);",
          "",
          "[Added Lines]",
          "8224:       set_map_and_elements(new_map, new_elements);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9241:     } else {",
          "9242:       new_length = dictionary->max_number_key() + 1;",
          "9243:     }",
          "9245:         ? SetFastDoubleElementsCapacityAndLength(new_length, new_length)",
          "9246:         : SetFastElementsCapacityAndLength(new_length,",
          "9247:                                            new_length,",
          "9249:     if (result->IsFailure()) return result;",
          "9250: #ifdef DEBUG",
          "9251:     if (FLAG_trace_normalization) {",
          "",
          "[Removed Lines]",
          "9244:     MaybeObject* result = CanConvertToFastDoubleElements()",
          "9248:                                            kDontAllowSmiOnlyElements);",
          "",
          "[Added Lines]",
          "9245:     SetFastElementsCapacityMode set_capacity_mode = FLAG_smi_only_arrays",
          "9246:         ? kAllowSmiOnlyElements",
          "9247:         : kDontAllowSmiOnlyElements;",
          "9248:     bool has_smi_only_elements = false;",
          "9249:     bool should_convert_to_fast_double_elements =",
          "9250:         ShouldConvertToFastDoubleElements(&has_smi_only_elements);",
          "9251:     if (has_smi_only_elements) {",
          "9252:       set_capacity_mode = kForceSmiOnlyElements;",
          "9253:     }",
          "9254:     MaybeObject* result = should_convert_to_fast_double_elements",
          "9258:                                            set_capacity_mode);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9724: }",
          "9728:   if (FLAG_unbox_double_arrays) {",
          "9729:     ASSERT(HasDictionaryElements());",
          "9730:     NumberDictionary* dictionary = NumberDictionary::cast(elements());",
          "9731:     for (int i = 0; i < dictionary->Capacity(); i++) {",
          "9732:       Object* key = dictionary->KeyAt(i);",
          "9733:       if (key->IsNumber()) {",
          "9735:       }",
          "9736:     }",
          "9738:   } else {",
          "9739:     return false;",
          "9740:   }",
          "",
          "[Removed Lines]",
          "9727: bool JSObject::CanConvertToFastDoubleElements() {",
          "9734:         if (!dictionary->ValueAt(i)->IsNumber()) return false;",
          "9737:     return true;",
          "",
          "[Added Lines]",
          "9737: bool JSObject::ShouldConvertToFastDoubleElements(",
          "9738:     bool* has_smi_only_elements) {",
          "9743:     bool found_double = false;",
          "9747:         Object* value = dictionary->ValueAt(i);",
          "9748:         if (!value->IsNumber()) return false;",
          "9749:         if (!value->IsSmi()) {",
          "9750:           found_double = true;",
          "9751:         }",
          "9755:     return found_double;",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.h||deps/v8/src/objects.h": [
          "File: deps/v8/src/objects.h -> deps/v8/src/objects.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1473:   bool HasDictionaryArgumentsElements();",
          "1474:   inline NumberDictionary* element_dictionary();  // Gets slow elements.",
          "1477:   MUST_USE_RESULT inline MaybeObject* EnsureWritableFastElements();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1476:   inline void set_map_and_elements(",
          "1477:       Map* map,",
          "1478:       FixedArrayBase* value,",
          "1479:       WriteBarrierMode mode = UPDATE_WRITE_BARRIER);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1645:   bool ShouldConvertToFastElements();",
          "1651:   bool HasElementWithReceiver(JSReceiver* receiver, uint32_t index);",
          "",
          "[Removed Lines]",
          "1648:   bool CanConvertToFastDoubleElements();",
          "",
          "[Added Lines]",
          "1654:   bool ShouldConvertToFastDoubleElements(bool* has_smi_only_elements);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1709:   enum SetFastElementsCapacityMode {",
          "1710:     kAllowSmiOnlyElements,",
          "1711:     kDontAllowSmiOnlyElements",
          "1712:   };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1717:     kForceSmiOnlyElements,",
          "",
          "---------------"
        ],
        "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc": [
          "File: deps/v8/src/runtime.cc -> deps/v8/src/runtime.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "9229: }",
          "9248: RUNTIME_FUNCTION(MaybeObject*, Runtime_TraceEnter) {",
          "9249:   ASSERT(args.length() == 0);",
          "9250:   NoHandleAllocation ha;",
          "",
          "[Removed Lines]",
          "9232: RUNTIME_FUNCTION(MaybeObject*, Runtime_TraceElementsKindTransition) {",
          "9233:   ASSERT(args.length() == 5);",
          "9234:   CONVERT_ARG_CHECKED(JSObject, obj, 0);",
          "9235:   CONVERT_SMI_ARG_CHECKED(from_kind, 1);",
          "9236:   CONVERT_ARG_CHECKED(FixedArrayBase, from_elements, 2);",
          "9237:   CONVERT_SMI_ARG_CHECKED(to_kind, 3);",
          "9238:   CONVERT_ARG_CHECKED(FixedArrayBase, to_elements, 4);",
          "9239:   NoHandleAllocation ha;",
          "9240:   PrintF(\"*\");",
          "9241:   obj->PrintElementsTransition(stdout,",
          "9242:       static_cast<ElementsKind>(from_kind), *from_elements,",
          "9243:       static_cast<ElementsKind>(to_kind), *to_elements);",
          "9244:   return isolate->heap()->undefined_value();",
          "9245: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/runtime.h||deps/v8/src/runtime.h": [
          "File: deps/v8/src/runtime.h -> deps/v8/src/runtime.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:   F(DebugPrint, 1, 1) \\",
          "343:   F(DebugTrace, 0, 1) \\",
          "345:   F(TraceEnter, 0, 1) \\",
          "346:   F(TraceExit, 1, 1) \\",
          "347:   F(Abort, 2, 1) \\",
          "",
          "[Removed Lines]",
          "344:   F(TraceElementsKindTransition, 5, 1) \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     8",
          "38: #define PATCH_LEVEL       0",
          "",
          "[Removed Lines]",
          "37: #define BUILD_NUMBER      3",
          "",
          "[Added Lines]",
          "37: #define BUILD_NUMBER      4",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/builtins-x64.cc||deps/v8/src/x64/builtins-x64.cc": [
          "File: deps/v8/src/x64/builtins-x64.cc -> deps/v8/src/x64/builtins-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1327: }",
          "1330: void Builtins::Generate_ArrayCode(MacroAssembler* masm) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1330: void Builtins::Generate_InternalArrayCode(MacroAssembler* masm) {",
          "1336:   Label generic_array_code;",
          "1339:   __ LoadGlobalFunction(Context::INTERNAL_ARRAY_FUNCTION_INDEX, rdi);",
          "1341:   if (FLAG_debug_code) {",
          "1343:     __ movq(rbx, FieldOperand(rdi, JSFunction::kPrototypeOrInitialMapOffset));",
          "1345:     STATIC_ASSERT(kSmiTag == 0);",
          "1346:     Condition not_smi = NegateCondition(masm->CheckSmi(rbx));",
          "1347:     __ Check(not_smi, \"Unexpected initial map for InternalArray function\");",
          "1348:     __ CmpObjectType(rbx, MAP_TYPE, rcx);",
          "1349:     __ Check(equal, \"Unexpected initial map for InternalArray function\");",
          "1350:   }",
          "1354:   ArrayNativeCode(masm, &generic_array_code);",
          "1358:   __ bind(&generic_array_code);",
          "1359:   Handle<Code> array_code =",
          "1360:       masm->isolate()->builtins()->InternalArrayCodeGeneric();",
          "1361:   __ Jump(array_code, RelocInfo::CODE_TARGET);",
          "1362: }",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-1849.js||deps/v8/test/mjsunit/regress/regress-1849.js": [
          "File: deps/v8/test/mjsunit/regress/regress-1849.js -> deps/v8/test/mjsunit/regress/regress-1849.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: var count = 1e5;",
          "33: var arr = new Array(count);",
          "34: assertFalse(%HasFastDoubleElements(arr));",
          "35: for (var i = 0; i < count; i++) {",
          "36:   arr[i] = 0;",
          "37: }",
          "38: assertFalse(%HasFastDoubleElements(arr));",
          "39: assertTrue(%HasFastSmiOnlyElements(arr));",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-1878.js||deps/v8/test/mjsunit/regress/regress-1878.js": [
          "File: deps/v8/test/mjsunit/regress/regress-1878.js -> deps/v8/test/mjsunit/regress/regress-1878.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: var a = Array();",
          "33: var ai = natives.InternalArray();",
          "34: assertFalse(%HaveSameMap(ai, a));",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-95113.js||deps/v8/test/mjsunit/regress/regress-95113.js": [
          "File: deps/v8/test/mjsunit/regress/regress-95113.js -> deps/v8/test/mjsunit/regress/regress-95113.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   var i = 0;",
          "33:   while (!%HasFastDoubleElements(a)) {",
          "34:     a[i] = i;",
          "36:   }",
          "37:   assertTrue(%HasFastDoubleElements(a));",
          "38:   a.length = 1;",
          "",
          "[Removed Lines]",
          "35:     i++;",
          "",
          "[Added Lines]",
          "35:     i += 0.5;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f9ffa17b171e1a62004f426247332f662001cf9",
      "candidate_info": {
        "commit_hash": "5f9ffa17b171e1a62004f426247332f662001cf9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5f9ffa17b171e1a62004f426247332f662001cf9",
        "files": [
          "lib/fs.js",
          "test/simple/test-fs-read-stream-resume.js"
        ],
        "message": "fs: fix ReadStream.pause() emits duplicate data event\n\nFixes #3258.",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-fs-read-stream-resume.js||test/simple/test-fs-read-stream-resume.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1205:   this.paused = false;",
          "1207:   if (this.buffer) {",
          "1209:     this.buffer = null;",
          "1210:   }",
          "",
          "[Removed Lines]",
          "1208:     this._emitData(this.buffer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-fs-read-stream-resume.js||test/simple/test-fs-read-stream-resume.js": [
          "File: test/simple/test-fs-read-stream-resume.js -> test/simple/test-fs-read-stream-resume.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "25: var fs = require('fs');",
          "26: var path = require('path');",
          "28: var file = path.join(common.fixturesDir, 'x.txt');",
          "29: var data = '';",
          "30: var first = true;",
          "32: var stream = fs.createReadStream(file);",
          "33: stream.setEncoding('utf8');",
          "34: stream.on('data', function(chunk) {",
          "35:   data += chunk;",
          "36:   if (first) {",
          "37:     first = false;",
          "38:     stream.resume();",
          "39:   }",
          "40: });",
          "42: process.nextTick(function() {",
          "43:   stream.pause();",
          "44:   setTimeout(function() {",
          "45:     stream.resume();",
          "46:   }, 100);",
          "47: });",
          "49: process.on('exit', function() {",
          "50:   assert.equal(data, 'xyz\\n');",
          "51: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4ed3c19697e875c289363381498a896347cbca6",
      "candidate_info": {
        "commit_hash": "b4ed3c19697e875c289363381498a896347cbca6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b4ed3c19697e875c289363381498a896347cbca6",
        "files": [
          "src/node_file.cc"
        ],
        "message": "remove NODE_USE_64BIT_UV_FS_API",
        "before_after_code_files": [
          "src/node_file.cc||src/node_file.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "501:   int64_t len = GET_TRUNCATE_LENGTH(args[1]);",
          "503:   if (args[2]->IsFunction()) {",
          "507:     ASYNC_CALL(ftruncate, args[2], fd, len)",
          "509:   } else {",
          "513:     SYNC_CALL(ftruncate, 0, fd, len)",
          "515:     return Undefined();",
          "516:   }",
          "517: }",
          "",
          "[Removed Lines]",
          "504: #ifdef NODE_USE_64BIT_UV_FS_API",
          "505:     ASYNC_CALL(ftruncate64, args[2], fd, len)",
          "506: #else",
          "508: #endif",
          "510: #ifdef NODE_USE_64BIT_UV_FS_API",
          "511:     SYNC_CALL(ftruncate64, 0, fd, len)",
          "512: #else",
          "514: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "727:   Local<Value> cb = args[5];",
          "729:   if (cb->IsFunction()) {",
          "733:     ASYNC_CALL(write, cb, fd, buf, len, pos)",
          "735:   } else {",
          "739:     SYNC_CALL(write, 0, fd, buf, len, pos)",
          "741:     return scope.Close(Integer::New(SYNC_RESULT));",
          "742:   }",
          "743: }",
          "",
          "[Removed Lines]",
          "730: #ifdef NODE_USE_64BIT_UV_FS_API",
          "731:     ASYNC_CALL(write64, cb, fd, buf, len, pos)",
          "732: #else",
          "734: #endif",
          "736: #ifdef NODE_USE_64BIT_UV_FS_API",
          "737:     SYNC_CALL(write64, 0, fd, buf, len, pos)",
          "738: #else",
          "740: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "798:   cb = args[5];",
          "800:   if (cb->IsFunction()) {",
          "804:     ASYNC_CALL(read, cb, fd, buf, len, pos);",
          "806:   } else {",
          "810:     SYNC_CALL(read, 0, fd, buf, len, pos)",
          "812:     Local<Integer> bytesRead = Integer::New(SYNC_RESULT);",
          "813:     return scope.Close(bytesRead);",
          "814:   }",
          "",
          "[Removed Lines]",
          "801: #ifdef NODE_USE_64BIT_UV_FS_API",
          "802:     ASYNC_CALL(read64, cb, fd, buf, len, pos);",
          "803: #else",
          "805: #endif",
          "807: #ifdef NODE_USE_64BIT_UV_FS_API",
          "808:     SYNC_CALL(read64, 0, fd, buf, len, pos)",
          "809: #else",
          "811: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8c4ecea0b03a4524eda172dfd7f08992c1538c8",
      "candidate_info": {
        "commit_hash": "d8c4ecea0b03a4524eda172dfd7f08992c1538c8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d8c4ecea0b03a4524eda172dfd7f08992c1538c8",
        "files": [
          "test/simple/test-cluster-master-error.js"
        ],
        "message": "test: fix race in simple/test-cluster-master-error\n\nSaid test checks that the workers shut down when the master errors but it failed\nintermittently. Insert a small delay before doing the 'is dead?' check to give\nthe workers a chance to shut down.",
        "before_after_code_files": [
          "test/simple/test-cluster-master-error.js||test/simple/test-cluster-master-error.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-cluster-master-error.js||test/simple/test-cluster-master-error.js": [
          "File: test/simple/test-cluster-master-error.js -> test/simple/test-cluster-master-error.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:     existMaster = (code === 1);",
          "125:   });",
          "127:   process.once('exit', function() {",
          "",
          "[Removed Lines]",
          "116:     var alive = false;",
          "117:     workers.forEach(function(pid) {",
          "118:       if (isAlive(pid)) {",
          "119:         alive = true;",
          "120:       }",
          "121:     });",
          "124:     existWorker = !alive;",
          "",
          "[Added Lines]",
          "116:     setTimeout(checkWorkers, 200);",
          "118:     function checkWorkers() {",
          "120:       var alive = false;",
          "121:       workers.forEach(function(pid) {",
          "122:         if (isAlive(pid)) {",
          "123:           alive = true;",
          "124:         }",
          "125:       });",
          "128:       existWorker = !alive;",
          "129:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}