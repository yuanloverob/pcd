{
  "cve_id": "CVE-2016-10050",
  "cve_desc": "Heap-based buffer overflow in the ReadRLEImage function in coders/rle.c in ImageMagick 6.9.4-8 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted RLE file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "139d4323c40d7363bfdd2382c3821a6f76d69430",
  "patch_info": {
    "commit_hash": "139d4323c40d7363bfdd2382c3821a6f76d69430",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/139d4323c40d7363bfdd2382c3821a6f76d69430",
    "files": [
      "ChangeLog",
      "coders/rle.c"
    ],
    "message": "RLE check for pixel offset less than 0 (heap overflow report from Craig Young)",
    "before_after_code_files": [
      "coders/rle.c||coders/rle.c"
    ]
  },
  "patch_diff": {
    "coders/rle.c||coders/rle.c": [
      "File: coders/rle.c -> coders/rle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "175:     bits_per_pixel,",
      "176:     map_length,",
      "177:     number_colormaps,",
      "179:     number_planes_filled,",
      "180:     one,",
      "181:     offset,",
      "182:     pixel_info_length;",
      "184:   ssize_t",
      "185:     count,",
      "",
      "[Removed Lines]",
      "178:     number_planes,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "389:           operand=ReadBlobByte(image);",
      "390:           if (opcode & 0x40)",
      "391:             operand=ReadBlobLSBSignedShort(image);",
      "393:             number_planes+plane;",
      "394:           operand++;",
      "395:           if (offset+((size_t) operand*number_planes) > pixel_info_length)",
      "",
      "[Removed Lines]",
      "392:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
      "",
      "[Added Lines]",
      "392:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
      "393:             number_planes+plane;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "420:             operand=ReadBlobLSBSignedShort(image);",
      "421:           pixel=(unsigned char) ReadBlobByte(image);",
      "422:           (void) ReadBlobByte(image);",
      "424:             number_planes+plane;",
      "425:           operand++;",
      "426:           if (offset+((size_t) operand*number_planes) > pixel_info_length)",
      "",
      "[Removed Lines]",
      "423:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
      "",
      "[Added Lines]",
      "424:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
      "425:             number_planes+plane;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f6240ee77847787f6d7618b669d3a2040a2d6d40",
      "candidate_info": {
        "commit_hash": "f6240ee77847787f6d7618b669d3a2040a2d6d40",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/f6240ee77847787f6d7618b669d3a2040a2d6d40",
        "files": [
          "ChangeLog",
          "coders/rle.c"
        ],
        "message": "Check for EOF conditions for RLE image format",
        "before_after_code_files": [
          "coders/rle.c||coders/rle.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/rle.c||coders/rle.c"
          ],
          "candidate": [
            "coders/rle.c||coders/rle.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/rle.c||coders/rle.c": [
          "File: coders/rle.c -> coders/rle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: #define SkipLinesOp  0x01",
          "133: #define SetColorOp  0x02",
          "134: #define SkipPixelsOp  0x03",
          "135: #define ByteDataOp  0x05",
          "136: #define RunDataOp  0x06",
          "137: #define EOFOp  0x07",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135: #define ByteDataOp  0x05",
          "136: #define RunDataOp  0x06",
          "137: #define EOFOp  0x07",
          "138: #define ThrowRLEException(exception,message) \\",
          "139: { \\",
          "140:   if (colormap != (unsigned char *) NULL) \\",
          "141:     colormap=(unsigned char *) RelinquishMagickMemory(colormap); \\",
          "142:   if (pixel_info != (MemoryInfo *) NULL) \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "206:   status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);",
          "207:   if (status == MagickFalse)",
          "208:     return(DestroyImageList(image));",
          "210:     Determine if this a RLE file.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:     Determine if this a RLE file.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:     ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "215:   do",
          "216:   {",
          "220:     image->page.x=ReadBlobLSBShort(image);",
          "221:     image->page.y=ReadBlobLSBShort(image);",
          "",
          "[Removed Lines]",
          "218:       Read image header.",
          "",
          "[Added Lines]",
          "228:       Read image header.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "226:     number_planes=(size_t) ReadBlobByte(image);",
          "227:     bits_per_pixel=(size_t) ReadBlobByte(image);",
          "228:     number_colormaps=(size_t) ReadBlobByte(image);",
          "229:     map_length=(unsigned char) ReadBlobByte(image);",
          "230:     if (map_length >= 22)",
          "231:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239:     map_length=(unsigned char) ReadBlobByte(image);",
          "240:     if (map_length >= 22)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "253:         for (i=0; i < (ssize_t) number_planes; i++)",
          "255:       }",
          "262:         break;",
          "263:       }",
          "264:     colormap=(unsigned char *) NULL;",
          "",
          "[Removed Lines]",
          "256:     if ((number_planes & 0x01) == 0)",
          "257:       (void) ReadBlobByte(image);",
          "258:     if (EOFBlob(image) != MagickFalse)",
          "259:       {",
          "260:         ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
          "261:           image->filename);",
          "",
          "[Added Lines]",
          "268:     if ((number_planes & 0x01) == 0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "271:           3*map_length*sizeof(*colormap));",
          "272:         if (colormap == (unsigned char *) NULL)",
          "273:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "274:         p=colormap;",
          "275:         for (i=0; i < (ssize_t) number_colormaps; i++)",
          "276:           for (x=0; x < (ssize_t) map_length; x++)",
          "278:               ReadBlobLSBShort(image)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281:         p=colormap;",
          "284:    {",
          "286:               ReadBlobLSBShort(image)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "300:             comment=DestroyString(comment);",
          "301:             if ((length & 0x01) == 0)",
          "302:               (void) ReadBlobByte(image);",
          "308:           image->filename);",
          "309:         break;",
          "310:       }",
          "",
          "[Removed Lines]",
          "303:           }",
          "304:       }",
          "305:     if (EOFBlob(image) != MagickFalse)",
          "306:       {",
          "307:         ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
          "",
          "[Added Lines]",
          "314:           }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "359:       Read runlength-encoded image.",
          "361:     plane=0;",
          "362:     x=0;",
          "363:     y=0;",
          "364:     opcode=ReadBlobByte(image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "369:     x=0;",
          "370:     y=0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "366:     {",
          "367:       switch (opcode & 0x3f)",
          "368:       {",
          "369:         case SkipLinesOp:",
          "371:           operand=ReadBlobByte(image);",
          "372:           if (opcode & 0x40)",
          "373:             operand=ReadBlobLSBSignedShort(image);",
          "",
          "[Removed Lines]",
          "370:         {",
          "",
          "[Added Lines]",
          "378:         case SkipLinesOp:",
          "379:         {",
          "381:           if (opcode == EOF)",
          "382:             ThrowRLEException(CorruptImageError,\"UnexpectedEndOfFile\");",
          "383:           if (opcode & 0x40)",
          "384:             {",
          "385:               operand=ReadBlobLSBSignedShort(image);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "375:           y+=operand;",
          "376:           break;",
          "377:         }",
          "378:         case SetColorOp:",
          "379:         {",
          "380:           operand=ReadBlobByte(image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393:         case SetColorOp:",
          "394:         {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "384:           x=0;",
          "385:           break;",
          "386:         }",
          "387:         case SkipPixelsOp:",
          "389:           operand=ReadBlobByte(image);",
          "390:           if (opcode & 0x40)",
          "391:             operand=ReadBlobLSBSignedShort(image);",
          "392:           x+=operand;",
          "393:           break;",
          "394:         }",
          "395:         case ByteDataOp:",
          "399:             operand=ReadBlobLSBSignedShort(image);",
          "400:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
          "402:           operand++;",
          "403:           if ((offset < 0) ||",
          "404:               (offset+((size_t) operand*number_planes) > pixel_info_length))",
          "",
          "[Removed Lines]",
          "388:         {",
          "396:         {",
          "397:           operand=ReadBlobByte(image);",
          "398:           if (opcode & 0x40)",
          "401:             number_planes+plane;",
          "",
          "[Added Lines]",
          "404:         case SkipPixelsOp:",
          "405:         {",
          "407:           if (opcode == EOF)",
          "408:             ThrowRLEException(CorruptImageError,\"UnexpectedEndOfFile\");",
          "409:           if (opcode & 0x40)",
          "410:             {",
          "411:               operand=ReadBlobLSBSignedShort(image);",
          "418:         case ByteDataOp:",
          "419:         {",
          "421:           if (opcode == EOF)",
          "422:             ThrowRLEException(CorruptImageError,\"UnexpectedEndOfFile\");",
          "423:           if (opcode & 0x40)",
          "424:             {",
          "425:               operand=ReadBlobLSBSignedShort(image);",
          "426:               if (opcode == EOF)",
          "427:                 ThrowRLEException(CorruptImageError,\"UnexpectedEndOfFile\");",
          "430:             number_planes+plane);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "422:           x+=operand;",
          "423:           break;",
          "424:         }",
          "425:         case RunDataOp:",
          "427:           operand=ReadBlobByte(image);",
          "428:           if (opcode & 0x40)",
          "431:           (void) ReadBlobByte(image);",
          "432:           offset=((image->rows-y-1)*image->columns*number_planes)+x*",
          "434:           operand++;",
          "435:           if ((offset < 0) ||",
          "436:               (offset+((size_t) operand*number_planes) > pixel_info_length))",
          "",
          "[Removed Lines]",
          "426:         {",
          "429:             operand=ReadBlobLSBSignedShort(image);",
          "430:           pixel=(unsigned char) ReadBlobByte(image);",
          "433:             number_planes+plane;",
          "",
          "[Added Lines]",
          "454:         case RunDataOp:",
          "455:         {",
          "457:           if (opcode == EOF)",
          "458:             ThrowRLEException(CorruptImageError,\"UnexpectedEndOfFile\");",
          "459:           if (opcode & 0x40)",
          "460:             {",
          "461:               operand=ReadBlobLSBSignedShort(image);",
          "464:             }",
          "465:           pixel=(unsigned char) ReadBlobByte(image);",
          "468:             number_planes+plane);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "452:           break;",
          "453:         }",
          "454:         default:",
          "455:           break;",
          "456:       }",
          "457:       opcode=ReadBlobByte(image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "490:           break;",
          "491:       }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "467:         mask=(MagickStatusType) (map_length-1);",
          "468:         p=pixels;",
          "469:         x=(ssize_t) number_planes;",
          "471:           for (i=0; i < (ssize_t) number_pixels; i++)",
          "472:           {",
          "473:             ValidateColormapValue(image,*p & mask,&index,exception);",
          "",
          "[Removed Lines]",
          "470:         if (number_colormaps == 1)",
          "",
          "[Added Lines]",
          "507:         if (number_colormaps == 1)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "476:           }",
          "477:         else",
          "478:           if ((number_planes >= 3) && (number_colormaps >= 3))",
          "480:               for (x=0; x < (ssize_t) number_planes; x++)",
          "481:               {",
          "482:                 ValidateColormapValue(image,(size_t) (x*map_length+",
          "",
          "[Removed Lines]",
          "479:             for (i=0; i < (ssize_t) number_pixels; i++)",
          "",
          "[Added Lines]",
          "516:             for (i=0; i < (ssize_t) number_pixels; i++)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "570:             {",
          "571:               q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);",
          "572:               if (q == (Quantum *) NULL)",
          "574:               for (x=0; x < (ssize_t) image->columns; x++)",
          "575:               {",
          "576:                 SetPixelIndex(image,*p++,q);",
          "",
          "[Removed Lines]",
          "573:                 break;",
          "",
          "[Added Lines]",
          "610:                 break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}