{
  "cve_id": "CVE-2020-12465",
  "cve_desc": "An array overflow was discovered in mt76_add_fragment in drivers/net/wireless/mediatek/mt76/dma.c in the Linux kernel before 5.5.10, aka CID-b102f0c522cf. An oversized packet with too many rx fragments can corrupt memory of adjacent pages.",
  "repo": "torvalds/linux",
  "patch_hash": "b102f0c522cf668c8382c56a4f771b37d011cda2",
  "patch_info": {
    "commit_hash": "b102f0c522cf668c8382c56a4f771b37d011cda2",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b102f0c522cf668c8382c56a4f771b37d011cda2",
    "files": [
      "drivers/net/wireless/mediatek/mt76/dma.c"
    ],
    "message": "mt76: fix array overflow on receiving too many fragments for a packet\n\nIf the hardware receives an oversized packet with too many rx fragments,\nskb_shinfo(skb)->frags can overflow and corrupt memory of adjacent pages.\nThis becomes especially visible if it corrupts the freelist pointer of\na slab page.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Felix Fietkau <nbd@nbd.name>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
    "before_after_code_files": [
      "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
    ]
  },
  "patch_diff": {
    "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c": [
      "File: drivers/net/wireless/mediatek/mt76/dma.c -> drivers/net/wireless/mediatek/mt76/dma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "447:  struct page *page = virt_to_head_page(data);",
      "448:  int offset = data - page_address(page);",
      "449:  struct sk_buff *skb = q->rx_head;",
      "455:  if (more)",
      "456:   return;",
      "",
      "[Removed Lines]",
      "451:  offset += q->buf_offset;",
      "452:  skb_add_rx_frag(skb, skb_shinfo(skb)->nr_frags, page, offset, len,",
      "453:    q->buf_size);",
      "",
      "[Added Lines]",
      "450:  struct skb_shared_info *shinfo = skb_shinfo(skb);",
      "452:  if (shinfo->nr_frags < ARRAY_SIZE(shinfo->frags)) {",
      "453:   offset += q->buf_offset;",
      "454:   skb_add_rx_frag(skb, shinfo->nr_frags, page, offset, len,",
      "455:     q->buf_size);",
      "456:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0bd52c591a1070c54dc428e926660eb4f981099",
      "candidate_info": {
        "commit_hash": "d0bd52c591a1070c54dc428e926660eb4f981099",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0bd52c591a1070c54dc428e926660eb4f981099",
        "files": [
          "drivers/net/wireless/mediatek/mt76/dma.c"
        ],
        "message": "mt76: dma: do not report truncated frames to mac80211\n\nCommit b102f0c522cf6 (\"mt76: fix array overflow on receiving too many\nfragments for a packet\") fixes a possible OOB access but it introduces a\nmemory leak since the pending frame is not released to page_frag_cache\nif the frag array of skb_shared_info is full. Commit 93a1d4791c10\n(\"mt76: dma: fix a possible memory leak in mt76_add_fragment()\") fixes\nthe issue but does not free the truncated skb that is forwarded to\nmac80211 layer. Fix the leftover issue discarding even truncated skbs.\n\nFixes: 93a1d4791c10 (\"mt76: dma: fix a possible memory leak in mt76_add_fragment()\")\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/a03166fcc8214644333c68674a781836e0f57576.1612697217.git.lorenzo@kernel.org",
        "before_after_code_files": [
          "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
          ],
          "candidate": [
            "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c": [
          "File: drivers/net/wireless/mediatek/mt76/dma.c -> drivers/net/wireless/mediatek/mt76/dma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "512: {",
          "513:  struct sk_buff *skb = q->rx_head;",
          "514:  struct skb_shared_info *shinfo = skb_shinfo(skb);",
          "517:   struct page *page = virt_to_head_page(data);",
          "518:   int offset = data - page_address(page) + q->buf_offset;",
          "522:  } else {",
          "523:   skb_free_frag(data);",
          "524:  }",
          "",
          "[Removed Lines]",
          "516:  if (shinfo->nr_frags < ARRAY_SIZE(shinfo->frags)) {",
          "520:   skb_add_rx_frag(skb, shinfo->nr_frags, page, offset, len,",
          "521:     q->buf_size);",
          "",
          "[Added Lines]",
          "515:  int nr_frags = shinfo->nr_frags;",
          "517:  if (nr_frags < ARRAY_SIZE(shinfo->frags)) {",
          "521:   skb_add_rx_frag(skb, nr_frags, page, offset, len, q->buf_size);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "527:   return;",
          "529:  q->rx_head = NULL;",
          "531: }",
          "533: static int",
          "",
          "[Removed Lines]",
          "530:  dev->drv->rx_skb(dev, q - dev->q_rx, skb);",
          "",
          "[Added Lines]",
          "530:  if (nr_frags < ARRAY_SIZE(shinfo->frags))",
          "531:   dev->drv->rx_skb(dev, q - dev->q_rx, skb);",
          "532:  else",
          "533:   dev_kfree_skb(skb);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93a1d4791c10d443bc67044def7efee2991d48b7",
      "candidate_info": {
        "commit_hash": "93a1d4791c10d443bc67044def7efee2991d48b7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/93a1d4791c10d443bc67044def7efee2991d48b7",
        "files": [
          "drivers/net/wireless/mediatek/mt76/dma.c"
        ],
        "message": "mt76: dma: fix a possible memory leak in mt76_add_fragment()\n\nFix a memory leak in mt76_add_fragment routine returning the buffer\nto the page_frag_cache when we receive a new fragment and the\nskb_shared_info frag array is full.\n\nFixes: b102f0c522cf6 (\"mt76: fix array overflow on receiving too many fragments for a packet\")\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nAcked-by: Felix Fietkau <nbd@nbd.name>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/4f9dd73407da88b2a552517ce8db242d86bf4d5c.1611616130.git.lorenzo@kernel.org",
        "before_after_code_files": [
          "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
          ],
          "candidate": [
            "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/mediatek/mt76/dma.c||drivers/net/wireless/mediatek/mt76/dma.c": [
          "File: drivers/net/wireless/mediatek/mt76/dma.c -> drivers/net/wireless/mediatek/mt76/dma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "509: mt76_add_fragment(struct mt76_dev *dev, struct mt76_queue *q, void *data,",
          "510:     int len, bool more)",
          "511: {",
          "514:  struct sk_buff *skb = q->rx_head;",
          "515:  struct skb_shared_info *shinfo = skb_shinfo(skb);",
          "517:  if (shinfo->nr_frags < ARRAY_SIZE(shinfo->frags)) {",
          "519:   skb_add_rx_frag(skb, shinfo->nr_frags, page, offset, len,",
          "520:     q->buf_size);",
          "521:  }",
          "523:  if (more)",
          "",
          "[Removed Lines]",
          "512:  struct page *page = virt_to_head_page(data);",
          "513:  int offset = data - page_address(page);",
          "518:   offset += q->buf_offset;",
          "",
          "[Added Lines]",
          "516:   struct page *page = virt_to_head_page(data);",
          "517:   int offset = data - page_address(page) + q->buf_offset;",
          "521:  } else {",
          "522:   skb_free_frag(data);",
          "",
          "---------------"
        ]
      }
    }
  ]
}