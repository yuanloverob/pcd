{
  "cve_id": "CVE-2019-19924",
  "cve_desc": "SQLite 3.30.1 mishandles certain parser-tree rewriting, related to expr.c, vdbeaux.c, and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
  "patch_info": {
    "commit_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8654186b0236d556aa85528c2573ee0b6ab71be3",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/vdbeaux.c",
      "src/window.c"
    ],
    "message": "When an error occurs while rewriting the parser tree for window functions in the sqlite3WindowRewrite() routine, make sure that pParse->nErr is set, and make sure that this shuts down any subsequent code generation that might depend on the transformations that were implemented.  This fixes a problem discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: e2bddcd4c55ba3cbe0130332679ff4b048630d0ced9a8899982edb5a3569ba7f",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/vdbeaux.c||src/vdbeaux.c",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 4417c5bf0aabb34ed174f01afd981c924ae965a42128719d8d6735536631d12f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "376:   int addr;",
      "377:   CollSeq *p4;",
      "379:   if( isCommuted ){",
      "380:     p4 = sqlite3BinaryCompareCollSeq(pParse, pRight, pLeft);",
      "381:   }else{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:   if( pParse->nErr ) return 0;",
      "",
      "---------------"
    ],
    "src/vdbeaux.c||src/vdbeaux.c": [
      "File: src/vdbeaux.c -> src/vdbeaux.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1304: static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){",
      "1305:   assert( p->nOp>0 || p->aOp==0 );",
      "1307:   if( p->nOp ){",
      "1308:     assert( p->aOp );",
      "1309:     sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);",
      "",
      "[Removed Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed );",
      "",
      "[Added Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed",
      "1307:           || p->pParse->nErr>0 );",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "935:     pTab = sqlite3DbMallocZero(db, sizeof(Table));",
      "936:     if( pTab==0 ){",
      "938:     }",
      "940:     p->pSrc = 0;",
      "",
      "[Removed Lines]",
      "937:       return SQLITE_NOMEM;",
      "",
      "[Added Lines]",
      "937:       return sqlite3ErrorToParser(db, SQLITE_NOMEM);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1039:     sqlite3DbFree(db, pTab);",
      "1040:   }",
      "1042:   return rc;",
      "1043: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if( rc && pParse->nErr==0 ){",
      "1043:     assert( pParse->db->mallocFailed );",
      "1044:     return sqlite3ErrorToParser(pParse->db, SQLITE_NOMEM);",
      "1045:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e4c26c41b4e8e5b047f620c8c51282b869ea21a2",
      "candidate_info": {
        "commit_hash": "e4c26c41b4e8e5b047f620c8c51282b869ea21a2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e4c26c41b4e8e5b047f620c8c51282b869ea21a2",
        "files": [
          "ext/session/sqlite3session.h",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a typo in a comment that is used to generate session documentation.\n\nFossilOrigin-Name: a1f50d57ce76f6c08a0ddbdd3c3fe2732d0e57dda14cb9aa3da00a14ceb4bc44",
        "before_after_code_files": [
          "ext/session/sqlite3session.h||ext/session/sqlite3session.h",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/sqlite3session.h||ext/session/sqlite3session.h": [
          "File: ext/session/sqlite3session.h -> ext/session/sqlite3session.h"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3873941c4fb9aa2d0de1129722c5fcdf2be1ea261677d4841ed99f896c778459",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
      "candidate_info": {
        "commit_hash": "660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/symbols.sh"
        ],
        "message": "Update tool/symbols.sh to ignore symbols from sessions and rebaser and to not try to compile with ICU which is not available on all platforms.\n\nFossilOrigin-Name: 0bab4ece6e81916d0f7255a8e553b8ca040cb8a96ab21e294212e232119f8ddc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/symbols.sh||tool/symbols.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0ada58e9303d53aba8bdc37abe5904aa40e91f80e247eb51cb1192387b0d661c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/symbols.sh||tool/symbols.sh": [
          "File: tool/symbols.sh -> tool/symbols.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #",
          "6: make sqlite3.c",
          "9: gcc -c -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_RTREE \\",
          "10:   -DSQLITE_ENABLE_MEMORY_MANAGEMENT -DSQLITE_ENABLE_STAT3 \\",
          "11:   -DSQLITE_ENABLE_MEMSYS5 -DSQLITE_ENABLE_UNLOCK_NOTIFY \\",
          "12:   -DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_ATOMIC_WRITE \\",
          "14:   sqlite3.c",
          "15: nm sqlite3.o | grep ' [TD] ' | sort -k 3",
          "20: echo '****** Dependencies of the core. No extensions. No OS interface *******'",
          "21: gcc -c -DSQLITE_ENABLE_MEMORY_MANAGEMENT -DSQLITE_ENABLE_STAT3 \\",
          "",
          "[Removed Lines]",
          "8: echo '****** Exported symbols from a build including RTREE, FTS4 & ICU ******'",
          "13:   -DSQLITE_ENABLE_ICU -DSQLITE_ENABLE_PREUPDATE_HOOK -DSQLITE_ENABLE_SESSION \\",
          "17: echo '****** Surplus symbols from a build including RTREE, FTS4 & ICU ******'",
          "18: nm sqlite3.o | grep ' [TD] ' | grep -v ' .*sqlite3_'",
          "",
          "[Added Lines]",
          "8: echo '****** Exported symbols from a build including RTREE, FTS4 & FTS5 ******'",
          "13:   -DSQLITE_ENABLE_PREUPDATE_HOOK -DSQLITE_ENABLE_SESSION \\",
          "14:   -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_GEOPOLY \\",
          "18: echo '****** Surplus symbols from a build including RTREE, FTS4 & FTS5 ******'",
          "19: nm sqlite3.o | grep ' [TD] ' |",
          "20:    egrep -v ' .*sqlite3(session|rebaser|changeset|changegroup)?_'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5198ff5767c4367124c3aecbb483c209c2f0b17b",
      "candidate_info": {
        "commit_hash": "5198ff5767c4367124c3aecbb483c209c2f0b17b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5198ff5767c4367124c3aecbb483c209c2f0b17b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/autoindex1.test",
          "test/eqp.test",
          "test/rowvalue4.test"
        ],
        "message": "Do not generate subroutines for non-static SELECT and EXISTS expressions. Fix up some test cases to account for the minor changes in EXPLAIN QUERY PLAN output.\n\nFossilOrigin-Name: 06de44ec9e173992ca9afb89dd2b4e40d2a7e35512c7959603cdceb606f5dfbd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/autoindex1.test||test/autoindex1.test",
          "test/eqp.test||test/eqp.test",
          "test/rowvalue4.test||test/rowvalue4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6b24d3fb94e787d25e49501714780dfb0c0c99077102056aa68445f4808cdd57",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2865:   Vdbe *v = pParse->pVdbe;",
          "2866:   assert( v!=0 );",
          "",
          "[Removed Lines]",
          "2869:   if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2870:     sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn, pExpr->y.sub.iAddr);",
          "2871:     return pExpr->iTable;",
          "2872:   }",
          "2875:   ExprSetProperty(pExpr, EP_Subrtn);",
          "2876:   pExpr->y.sub.regReturn = ++pParse->nMem;",
          "2877:   pExpr->y.sub.iAddr =",
          "2878:     sqlite3VdbeAddOp2(v, OP_Integer, 0, pExpr->y.sub.regReturn) + 1;",
          "2879:   VdbeComment((v, \"return address\"));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2891:   if( !ExprHasProperty(pExpr, EP_VarSelect) ){",
          "2892:     addrOnce = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "2893:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2881:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2882:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2883:                         pExpr->y.sub.iAddr);",
          "2884:       return pExpr->iTable;",
          "2885:     }",
          "2888:     ExprSetProperty(pExpr, EP_Subrtn);",
          "2889:     pExpr->y.sub.regReturn = ++pParse->nMem;",
          "2890:     pExpr->y.sub.iAddr =",
          "2891:       sqlite3VdbeAddOp2(v, OP_Integer, 0, pExpr->y.sub.regReturn) + 1;",
          "2892:     VdbeComment((v, \"return address\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2939:   ExprSetVVAProperty(pExpr, EP_NoReduce);",
          "2940:   if( addrOnce ){",
          "2941:     sqlite3VdbeJumpHere(v, addrOnce);",
          "2948:   return rReg;",
          "2949: }",
          "",
          "[Removed Lines]",
          "2942:   }",
          "2945:   sqlite3VdbeAddOp1(v, OP_Return, pExpr->y.sub.regReturn);",
          "2946:   sqlite3VdbeChangeP1(v, pExpr->y.sub.iAddr-1, sqlite3VdbeCurrentAddr(v)-1);",
          "",
          "[Added Lines]",
          "2946:     sqlite3VdbeAddOp1(v, OP_Return, pExpr->y.sub.regReturn);",
          "2947:     sqlite3VdbeChangeP1(v, pExpr->y.sub.iAddr-1, sqlite3VdbeCurrentAddr(v)-1);",
          "2948:   }",
          "",
          "---------------"
        ],
        "test/autoindex1.test||test/autoindex1.test": [
          "File: test/autoindex1.test -> test/autoindex1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "184: } {",
          "185:   QUERY PLAN",
          "186:   |--SEARCH TABLE t501 USING INTEGER PRIMARY KEY (rowid=?)",
          "188:      `--SCAN TABLE t502",
          "189: }",
          "190: do_eqp_test autoindex1-501 {",
          "",
          "[Removed Lines]",
          "187:   `--LIST SUBQUERY",
          "",
          "[Added Lines]",
          "187:   `--LIST SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193: } {",
          "194:   QUERY PLAN",
          "195:   |--SCAN TABLE t501",
          "197:      `--SEARCH TABLE t502 USING AUTOMATIC COVERING INDEX (y=?)",
          "198: }",
          "199: do_eqp_test autoindex1-502 {",
          "",
          "[Removed Lines]",
          "196:   `--CORRELATED LIST SUBQUERY",
          "",
          "[Added Lines]",
          "196:   `--CORRELATED LIST SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203: } {",
          "204:   QUERY PLAN",
          "205:   |--SEARCH TABLE t501 USING INTEGER PRIMARY KEY (rowid=?)",
          "207:      `--SCAN TABLE t502",
          "208: }",
          "",
          "[Removed Lines]",
          "206:   `--CORRELATED LIST SUBQUERY",
          "",
          "[Added Lines]",
          "206:   `--CORRELATED LIST SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/eqp.test||test/eqp.test": [
          "File: test/eqp.test -> test/eqp.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "286: } {",
          "287:   QUERY PLAN",
          "288:   |--SCAN TABLE t1",
          "290:      `--SCAN TABLE t2",
          "291: }",
          "292: det 3.3.2 {",
          "",
          "[Removed Lines]",
          "289:   `--LIST SUBQUERY",
          "",
          "[Added Lines]",
          "289:   `--LIST SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "294: } {",
          "295:   QUERY PLAN",
          "296:   |--SCAN TABLE t1",
          "298:      `--SCAN TABLE t2",
          "299: }",
          "300: det 3.3.3 {",
          "",
          "[Removed Lines]",
          "297:   `--CORRELATED LIST SUBQUERY",
          "",
          "[Added Lines]",
          "297:   `--CORRELATED LIST SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/rowvalue4.test||test/rowvalue4.test": [
          "File: test/rowvalue4.test -> test/rowvalue4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "235: } {",
          "236:   QUERY PLAN",
          "237:   |--SEARCH TABLE d2 USING INDEX d2ab (a=? AND b=?)",
          "239:   |  `--SCAN TABLE d1",
          "241:      `--SCAN TABLE d1",
          "242: }",
          "",
          "[Removed Lines]",
          "238:   |--LIST SUBQUERY",
          "240:   `--LIST SUBQUERY",
          "",
          "[Added Lines]",
          "238:   |--LIST SUBQUERY xxxxxx",
          "240:   `--LIST SUBQUERY xxxxxx",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0de0ab82074f1898fe1b7374683aeea6afae0675",
      "candidate_info": {
        "commit_hash": "0de0ab82074f1898fe1b7374683aeea6afae0675",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0de0ab82074f1898fe1b7374683aeea6afae0675",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Fix a case in wapptest.tcl where a failed test might report 0 errors.\n\nFossilOrigin-Name: 2be1ed70df605663822d1afdde757f426ccf2ee38add8dc6b6bb4fc4d90a31dc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 713caa382cf7ddef872e510a76a5fca40be1a8d8876ce2f91b632bb0810a6630",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:       sqlite3 sqlite3.exe",
          "223:       test.log test-out.txt",
          "224:       core",
          "225:     }",
          "226:     foreach f [glob -nocomplain [file join $G(test.$name.dir) *]] {",
          "227:       set t [file tail $f]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:       wapptest_make.sh",
          "226:       wapptest_configure.sh",
          "227:       wapptest_run.tcl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:       set rc [catch { exec {*}$cfg >& test.log } msg]",
          "278:       if {$rc==0} {",
          "279:         set make [readfile wapptest_make.sh]",
          "281:       }",
          "282:     }",
          "283:   } else {",
          "284:     append res {",
          "285:       set make [readfile wapptest_make.sh]",
          "287:     }",
          "288:   }",
          "290:   set res",
          "291: }",
          "",
          "[Removed Lines]",
          "280:         catch { exec {*}$make >>& test.log }",
          "286:       catch { exec {*}$make >>& test.log }",
          "",
          "[Added Lines]",
          "283:         set rc [catch { exec {*}$make >>& test.log }]",
          "289:       set rc [catch { exec {*}$make >>& test.log }]",
          "293:   append res { exit $rc }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8bcc6866143ce2570c57e44f4868e0f8f6e1c4ed",
      "candidate_info": {
        "commit_hash": "8bcc6866143ce2570c57e44f4868e0f8f6e1c4ed",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8bcc6866143ce2570c57e44f4868e0f8f6e1c4ed",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fts4umlaut.test"
        ],
        "message": "The fts4umlaut.test module requires FTS5, so do not try to run it without that module.\n\nFossilOrigin-Name: dee3ae900129d39d69aff3ec6187376be100803ee6170bbf39529f37b4253260",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/fts4umlaut.test||test/fts4umlaut.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0bf4c70a6849da74797e8616a4f3730492ad02882ae67a0fe0f3b3cc3f1043b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts4umlaut.test||test/fts4umlaut.test": [
          "File: test/fts4umlaut.test -> test/fts4umlaut.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: source $testdir/tester.tcl",
          "17: set testprefix fts4umlaut",
          "20:   finish_test",
          "21:   return",
          "22: }",
          "",
          "[Removed Lines]",
          "19: ifcapable !fts3 {",
          "",
          "[Added Lines]",
          "19: ifcapable !fts3||!fts5 {",
          "",
          "---------------"
        ]
      }
    }
  ]
}