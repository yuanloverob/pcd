{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "550e1d07a69db5af9129533ba7983594b3ed3fec",
      "candidate_info": {
        "commit_hash": "550e1d07a69db5af9129533ba7983594b3ed3fec",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/550e1d07a69db5af9129533ba7983594b3ed3fec",
        "files": [
          "ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_buffer.c",
          "test/sslapitest.c"
        ],
        "message": "Fix a leak in SSL_clear()\n\nSSL_clear() was resetting numwpipes to 0, but not freeing any allocated\nmemory for existing write buffers.\n\nFixes #2026\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 4bf086005fe5ebcda5dc4d48ff701b41ab9b07f0)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_buffer.c||ssl/record/ssl3_buffer.c",
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
          ],
          "candidate": [
            "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: void RECORD_LAYER_clear(RECORD_LAYER *rl)",
          "41: {",
          "44:     rl->rstate = SSL_ST_READ_HEADER;",
          "",
          "[Removed Lines]",
          "42:     unsigned int pipes;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     rl->wpend_buf = NULL;",
          "64:     SSL3_BUFFER_clear(&rl->rbuf);",
          "68:     rl->numrpipes = 0;",
          "69:     SSL3_RECORD_clear(rl->rrec, SSL_MAX_PIPELINES);",
          "",
          "[Removed Lines]",
          "65:     for (pipes = 0; pipes < rl->numwpipes; pipes++)",
          "66:         SSL3_BUFFER_clear(&rl->wbuf[pipes]);",
          "67:     rl->numwpipes = 0;",
          "",
          "[Added Lines]",
          "63:     ssl3_release_write_buffer(rl->s);",
          "",
          "---------------"
        ],
        "ssl/record/ssl3_buffer.c||ssl/record/ssl3_buffer.c": [
          "File: ssl/record/ssl3_buffer.c -> ssl/record/ssl3_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:     wb = RECORD_LAYER_get_wbuf(&s->rlayer);",
          "107:     for (currpipe = 0; currpipe < numwpipes; currpipe++) {",
          "110:                 s->rlayer.numwpipes = currpipe;",
          "111:                 goto err;",
          "112:             }",
          "115:         }",
          "116:     }",
          "",
          "[Removed Lines]",
          "108:         if (wb[currpipe].buf == NULL) {",
          "109:             if ((p = OPENSSL_malloc(len)) == NULL) {",
          "113:             wb[currpipe].buf = p;",
          "114:             wb[currpipe].len = len;",
          "",
          "[Added Lines]",
          "108:         SSL3_BUFFER *thiswb = &wb[currpipe];",
          "110:         if (thiswb->buf == NULL) {",
          "111:             p = OPENSSL_malloc(len);",
          "112:             if (p == NULL) {",
          "116:             memset(thiswb, 0, sizeof(SSL3_BUFFER));",
          "117:             thiswb->buf = p;",
          "118:             thiswb->len = len;",
          "",
          "---------------"
        ],
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         goto end;",
          "102:     }",
          "106:  end:",
          "107:     X509_free(chaincert);",
          "108:     SSL_free(serverssl);",
          "",
          "[Removed Lines]",
          "104:     testresult = 1;",
          "",
          "[Added Lines]",
          "108:     if (!SSL_clear(serverssl)) {",
          "109:         printf(\"Unexpected failure from SSL_clear()\\n\");",
          "110:         goto end;",
          "111:     }",
          "113:     testresult = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "133b9756e7357128954f28d4fcbb4db8b39d4f9a",
      "candidate_info": {
        "commit_hash": "133b9756e7357128954f28d4fcbb4db8b39d4f9a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/133b9756e7357128954f28d4fcbb4db8b39d4f9a",
        "files": [
          "apps/dhparam.c"
        ],
        "message": "Ensure dhparams can handle X9.42 params in DER\n\ndhparams correctly handles X9.42 params in PEM format. However it failed\nto correctly processes them when reading/writing DER format.\n\nFixes #3102\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3111)\n(cherry picked from commit 18d20b5eb66fda0ada2e65c2b19aeae75827bdf8)",
        "before_after_code_files": [
          "apps/dhparam.c||apps/dhparam.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/dhparam.c||apps/dhparam.c": [
          "File: apps/dhparam.c -> apps/dhparam.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:         } else",
          "243: # endif",
          "244:         {",
          "246:                 dh = d2i_DHparams_bio(in, NULL);",
          "248:                 dh = PEM_read_bio_DHparams(in, NULL, NULL, NULL);",
          "250:             if (dh == NULL) {",
          "251:                 BIO_printf(bio_err, \"unable to load DH parameters\\n\");",
          "",
          "[Removed Lines]",
          "245:             if (informat == FORMAT_ASN1)",
          "",
          "[Added Lines]",
          "245:             if (informat == FORMAT_ASN1) {",
          "252:                 if (dh == NULL && BIO_reset(in) == 0)",
          "253:                     dh = d2i_DHxparams_bio(in, NULL);",
          "254:             } else {",
          "257:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:     if (!noout) {",
          "341:         const BIGNUM *q;",
          "342:         DH_get0_pqg(dh, NULL, &q, NULL);",
          "346:             i = PEM_write_bio_DHxparams(out, dh);",
          "347:         else",
          "348:             i = PEM_write_bio_DHparams(out, dh);",
          "",
          "[Removed Lines]",
          "343:         if (outformat == FORMAT_ASN1)",
          "344:             i = i2d_DHparams_bio(out, dh);",
          "345:         else if (q != NULL)",
          "",
          "[Added Lines]",
          "352:         if (outformat == FORMAT_ASN1) {",
          "353:             if (q != NULL)",
          "354:                 i = i2d_DHxparams_bio(out, dh);",
          "355:             else",
          "356:                 i = i2d_DHparams_bio(out, dh);",
          "357:         } else if (q != NULL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8114d7d775b5802f283a9325635f9f2732e0341",
      "candidate_info": {
        "commit_hash": "f8114d7d775b5802f283a9325635f9f2732e0341",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f8114d7d775b5802f283a9325635f9f2732e0341",
        "files": [
          "crypto/bn/bn_lcl.h"
        ],
        "message": "bn: fix BN_DEBUG + BN_DEBUG_RAND support\n\nCouple of updates to make this code work properly again;\n* use OPENSSL_assert() instead of assert() (and #include <assert.h>)\n* the circular-dependency-avoidance uses RAND_bytes() (not pseudo)\n\nChange-Id: Iefb5a9dd73f71fd81c1268495c54a64378955354\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 0b50ac1a0fe907f4effcf3f2f36dac32523938c5)",
        "before_after_code_files": [
          "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h": [
          "File: crypto/bn/bn_lcl.h -> crypto/bn/bn_lcl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "147: # ifdef BN_DEBUG",
          "152: #  ifdef BN_DEBUG_RAND",
          "156: #    define BN_DEBUG_TRIX",
          "157: #   endif",
          "158: #   define bn_pollute(a) \\",
          "",
          "[Removed Lines]",
          "150: #  include <assert.h>",
          "154: #   ifndef RAND_pseudo_bytes",
          "155: int RAND_pseudo_bytes(unsigned char *buf, int num);",
          "",
          "[Added Lines]",
          "151: #   ifndef RAND_bytes",
          "152: int RAND_bytes(unsigned char *buf, int num);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:             } \\",
          "172:         } while(0)",
          "173: #   ifdef BN_DEBUG_TRIX",
          "175: #   endif",
          "176: #  else",
          "177: #   define bn_pollute(a)",
          "",
          "[Removed Lines]",
          "174: #    undef RAND_pseudo_bytes",
          "",
          "[Added Lines]",
          "171: #    undef RAND_bytes",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:         do { \\",
          "181:                 const BIGNUM *_bnum2 = (a); \\",
          "182:                 if (_bnum2 != NULL) { \\",
          "184:                                 (_bnum2->d[_bnum2->top - 1] != 0)); \\",
          "185:                         bn_pollute(_bnum2); \\",
          "186:                 } \\",
          "",
          "[Removed Lines]",
          "183:                         assert((_bnum2->top == 0) || \\",
          "",
          "[Added Lines]",
          "180:                         OPENSSL_assert((_bnum2->top == 0) || \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192: #  define bn_wcheck_size(bn, words) \\",
          "193:         do { \\",
          "194:                 const BIGNUM *_bnum2 = (bn); \\",
          "197:                 (void)(_bnum2); \\",
          "198:         } while(0)",
          "",
          "[Removed Lines]",
          "195:                 assert((words) <= (_bnum2)->dmax && (words) >= (_bnum2)->top); \\",
          "",
          "[Added Lines]",
          "192:                 OPENSSL_assert((words) <= (_bnum2)->dmax && \\",
          "193:                         (words) >= (_bnum2)->top); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
      "candidate_info": {
        "commit_hash": "aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
        "files": [
          "crypto/ui/ui_err.c",
          "crypto/ui/ui_lib.c",
          "include/openssl/ui.h"
        ],
        "message": "UI_process() didn't generate errors\n\nSince there are many parts of UI_process() that can go wrong, it isn't\nvery helpful to only return -1 with no further explanation.  With this\nchange, the error message will at least show which part went wrong.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2037)\n(cherry picked from commit 0a687ab0a92d2d68289364a6e232028c229f44bb)",
        "before_after_code_files": [
          "crypto/ui/ui_err.c||crypto/ui/ui_err.c",
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c",
          "include/openssl/ui.h||include/openssl/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_err.c||crypto/ui/ui_err.c": [
          "File: crypto/ui/ui_err.c -> crypto/ui/ui_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     {ERR_FUNC(UI_F_UI_DUP_VERIFY_STRING), \"UI_dup_verify_string\"},",
          "31:     {ERR_FUNC(UI_F_UI_GET0_RESULT), \"UI_get0_result\"},",
          "32:     {ERR_FUNC(UI_F_UI_NEW_METHOD), \"UI_new_method\"},",
          "33:     {ERR_FUNC(UI_F_UI_SET_RESULT), \"UI_set_result\"},",
          "34:     {0, NULL}",
          "35: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     {ERR_FUNC(UI_F_UI_PROCESS), \"UI_process\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     {ERR_REASON(UI_R_INDEX_TOO_LARGE), \"index too large\"},",
          "41:     {ERR_REASON(UI_R_INDEX_TOO_SMALL), \"index too small\"},",
          "42:     {ERR_REASON(UI_R_NO_RESULT_BUFFER), \"no result buffer\"},",
          "43:     {ERR_REASON(UI_R_RESULT_TOO_LARGE), \"result too large\"},",
          "44:     {ERR_REASON(UI_R_RESULT_TOO_SMALL), \"result too small\"},",
          "45:     {ERR_REASON(UI_R_UNKNOWN_CONTROL_COMMAND), \"unknown control command\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     {ERR_REASON(UI_R_PROCESSING_ERROR), \"processing error\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423: int UI_process(UI *ui)",
          "424: {",
          "425:     int i, ok = 0;",
          "430:     if (ui->flags & UI_FLAG_PRINT_ERRORS)",
          "431:         ERR_print_errors_cb((int (*)(const char *, size_t, void *))",
          "",
          "[Removed Lines]",
          "427:     if (ui->meth->ui_open_session && !ui->meth->ui_open_session(ui))",
          "428:         return -1;",
          "",
          "[Added Lines]",
          "426:     const char *state = \"processing\";",
          "428:     if (ui->meth->ui_open_session && !ui->meth->ui_open_session(ui)) {",
          "429:         state = \"opening session\";",
          "430:         ok = -1;",
          "431:         goto err;",
          "432:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "436:             && !ui->meth->ui_write_string(ui,",
          "437:                                           sk_UI_STRING_value(ui->strings, i)))",
          "438:         {",
          "439:             ok = -1;",
          "440:             goto err;",
          "441:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:             state = \"writing strings\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "447:             ok = -2;",
          "448:             goto err;",
          "450:             ok = -1;",
          "451:             goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:             state = \"flushing\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "463:                 ok = -2;",
          "464:                 goto err;",
          "466:                 ok = -1;",
          "467:                 goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472:                 state = \"reading strings\";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "472:         }",
          "473:     }",
          "474:  err:",
          "477:     return ok;",
          "478: }",
          "",
          "[Removed Lines]",
          "475:     if (ui->meth->ui_close_session && !ui->meth->ui_close_session(ui))",
          "476:         return -1;",
          "",
          "[Added Lines]",
          "482:     if (ui->meth->ui_close_session && !ui->meth->ui_close_session(ui)) {",
          "483:         if (state == NULL)",
          "484:             state = \"closing session\";",
          "485:         ok = -1;",
          "486:     }",
          "488:     if (ok == -1) {",
          "489:         UIerr(UI_F_UI_PROCESS, UI_R_PROCESSING_ERROR);",
          "490:         ERR_add_error_data(2, \"while \", state);",
          "491:     }",
          "",
          "---------------"
        ],
        "include/openssl/ui.h||include/openssl/ui.h": [
          "File: include/openssl/ui.h -> include/openssl/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: # define UI_F_UI_DUP_VERIFY_STRING                        106",
          "351: # define UI_F_UI_GET0_RESULT                              107",
          "352: # define UI_F_UI_NEW_METHOD                               104",
          "353: # define UI_F_UI_SET_RESULT                               105",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353: # define UI_F_UI_PROCESS                                  113",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "357: # define UI_R_INDEX_TOO_LARGE                             102",
          "358: # define UI_R_INDEX_TOO_SMALL                             103",
          "359: # define UI_R_NO_RESULT_BUFFER                            105",
          "360: # define UI_R_RESULT_TOO_LARGE                            100",
          "361: # define UI_R_RESULT_TOO_SMALL                            101",
          "362: # define UI_R_UNKNOWN_CONTROL_COMMAND                     106",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361: # define UI_R_PROCESSING_ERROR                            107",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db2fed4443042db3e7921810d944cfd15d347d08",
      "candidate_info": {
        "commit_hash": "db2fed4443042db3e7921810d944cfd15d347d08",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/db2fed4443042db3e7921810d944cfd15d347d08",
        "files": [
          "crypto/rsa/rsa_oaep.c"
        ],
        "message": "Fix a memory leak in RSA_padding_add_PKCS1_OAEP_mgf1\n\nSigned-off-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Matt Caswell <matt@openssl.org>\nGH: #2140\n(cherry picked from commit c6d215e0d278fcd51ad474a3647b61e1b67290bb)",
        "before_after_code_files": [
          "crypto/rsrsa_oaep.c||crypto/rsa/rsa_oaep.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rsrsa_oaep.c||crypto/rsa/rsa_oaep.c": [
          "File: crypto/rsrsa_oaep.c -> crypto/rsa/rsa_oaep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:         goto err;",
          "99:         goto err;",
          "106:  err:",
          "107:     OPENSSL_free(dbmask);",
          "108:     return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}