{
  "cve_id": "CVE-2016-10061",
  "cve_desc": "The ReadGROUP4Image function in coders/tiff.c in ImageMagick before 7.0.1-10 does not check the return value of the fputc function, which allows remote attackers to cause a denial of service (crash) via a crafted image file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "4e914bbe371433f0590cefdf3bd5f3a5710069f9",
  "patch_info": {
    "commit_hash": "4e914bbe371433f0590cefdf3bd5f3a5710069f9",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/4e914bbe371433f0590cefdf3bd5f3a5710069f9",
    "files": [
      "coders/tiff.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/196",
    "before_after_code_files": [
      "coders/tiff.c||coders/tiff.c"
    ]
  },
  "patch_diff": {
    "coders/tiff.c||coders/tiff.c": [
      "File: coders/tiff.c -> coders/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "390:   length=fwrite(\"\\032\\001\\005\\000\\001\\000\\000\\000\",1,8,file);",
      "391:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
      "392:   length=fwrite(\"\\033\\001\\005\\000\\001\\000\\000\\000\",1,8,file);",
      "393:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
      "395:   length=fwrite(\"\\000\\000\\000\\000\",1,4,file);",
      "396:   length=WriteLSBLong(file,(long) image->resolution.x);",
      "397:   length=WriteLSBLong(file,1);",
      "",
      "[Removed Lines]",
      "394:   length=fwrite(\"\\050\\001\\003\\000\\001\\000\\000\\000\\002\\000\\000\\000\",1,12,file);",
      "",
      "[Added Lines]",
      "393:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
      "395:   length=fwrite(\"\\000\\000\\000\\000\",1,4,file);",
      "396:   length=WriteLSBLong(file,(long) image->resolution.x);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "413:     {",
      "414:       (void) CopyMagickString(image->filename,image_info->filename,",
      "415:         MagickPathExtent);",
      "416:       (void) CopyMagickString(image->magick_filename,image_info->filename,",
      "417:         MagickPathExtent);",
      "418:       (void) CopyMagickString(image->magick,\"GROUP4\",MagickPathExtent);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "418:       (void) CopyMagickString(image->magick_filename,image_info->filename,",
      "419:         MagickPathExtent);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "933e96f01a8c889c7bf5ffd30020e86a02a046e7",
      "candidate_info": {
        "commit_hash": "933e96f01a8c889c7bf5ffd30020e86a02a046e7",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/933e96f01a8c889c7bf5ffd30020e86a02a046e7",
        "files": [
          "MagickWand/magick-cli.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/196",
        "before_after_code_files": [
          "MagickWand/magick-cli.c||MagickWand/magick-cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "MagickWand/magick-cli.c||MagickWand/magick-cli.c": [
          "File: MagickWand/magick-cli.c -> MagickWand/magick-cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "636:    The option is not formally documented.",
          "638:       magick -concatenate files... output",
          "640:    This is much like the UNIX \"cat\" command, but for both UNIX and Windows,",
          "641:    however the last argument provides the output filename.",
          "643: static MagickBooleanType ConcatenateImages(int argc,char **argv,",
          "644:      ExceptionInfo *exception )",
          "645: {",
          "646:   FILE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "645: {",
          "646:   FILE",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "650:   int",
          "651:     c;",
          "664:   }",
          "666: #if 0",
          "667:     fprintf(stderr, \"DEBUG: Concatenate Image: \\\"%s\\\"\\n\", argv[i]);",
          "668: #endif",
          "669:     input=fopen_utf8(argv[i],\"rb\");",
          "671:         ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[i]);",
          "672:         continue;",
          "673:       }",
          "674:     for (c=fgetc(input); c != EOF; c=fgetc(input))",
          "676:     (void) fclose(input);",
          "677:     (void) remove_utf8(argv[i]);",
          "678:   }",
          "",
          "[Removed Lines]",
          "653:   register ssize_t",
          "654:     i;",
          "656:   if (ExpandFilenames(&argc,&argv) == MagickFalse)",
          "657:     ThrowFileException(exception,ResourceLimitError,\"MemoryAllocationFailed\",",
          "658:          GetExceptionMessage(errno));",
          "660:   output=fopen_utf8(argv[argc-1],\"wb\");",
          "661:   if (output == (FILE *) NULL) {",
          "662:     ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[argc-1]);",
          "663:     return(MagickFalse);",
          "665:   for (i=2; i < (ssize_t) (argc-1); i++) {",
          "670:     if (input == (FILE *) NULL) {",
          "675:       (void) fputc((char) c,output);",
          "",
          "[Added Lines]",
          "656:   register ssize_t",
          "659:   if (ExpandFilenames(&argc,&argv) == MagickFalse)",
          "660:     ThrowFileException(exception,ResourceLimitError,\"MemoryAllocationFailed\",",
          "661:       GetExceptionMessage(errno));",
          "662:   output=fopen_utf8(argv[argc-1],\"wb\");",
          "663:   if (output == (FILE *) NULL)",
          "664:     {",
          "665:       ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",",
          "666:         argv[argc-1]);",
          "668:     }",
          "669:   status=MagickTrue;",
          "674:       {",
          "675:         ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[i]);",
          "680:         status=MagickFalse;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ed56f49e4eb858c26420324d74882a22089fe3d",
      "candidate_info": {
        "commit_hash": "8ed56f49e4eb858c26420324d74882a22089fe3d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8ed56f49e4eb858c26420324d74882a22089fe3d",
        "files": [
          "coders/tiff.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/352 https://github.com/ImageMagick/ImageMagick/issues/196",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:   file=(FILE *) NULL;",
          "367:   unique_file=AcquireUniqueFileResource(filename);",
          "368:   if (unique_file != -1)",
          "369:     file=fdopen(unique_file,\"wb\");",
          "370:   if ((unique_file == -1) || (file == (FILE *) NULL))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368:   if (unique_file != -1)",
          "369:     file=fdopen(unique_file,\"wb\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "397:   length=WriteLSBLong(file,(long) image->resolution.x);",
          "398:   length=WriteLSBLong(file,1);",
          "399:   status=MagickTrue;",
          "400:   for (length=0; (c=ReadBlobByte(image)) != EOF; length++)",
          "401:     if (fputc(c,file) != c)",
          "402:       status=MagickFalse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "402:   for (length=0; (c=ReadBlobByte(image)) != EOF; length++)",
          "403:     if (fputc(c,file) != c)",
          "",
          "---------------"
        ]
      }
    }
  ]
}