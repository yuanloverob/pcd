{
  "cve_id": "CVE-2019-20421",
  "cve_desc": "In Jp2Image::readMetadata() in jp2image.cpp in Exiv2 0.27.2, an input file can result in an infinite loop and hang, with high CPU consumption. Remote attackers could leverage this vulnerability to cause a denial of service via a crafted file.",
  "repo": "Exiv2/exiv2",
  "patch_hash": "a82098f4f90cd86297131b5663c3dec6a34470e8",
  "patch_info": {
    "commit_hash": "a82098f4f90cd86297131b5663c3dec6a34470e8",
    "repo": "Exiv2/exiv2",
    "commit_url": "https://github.com/Exiv2/exiv2/commit/a82098f4f90cd86297131b5663c3dec6a34470e8",
    "files": [
      "src/jp2image.cpp",
      "test/data/Jp2Image_readMetadata_loop.poc",
      "tests/bugfixes/github/test_CVE_2017_17725.py",
      "tests/bugfixes/github/test_issue_1011.py"
    ],
    "message": "Fix #1011 fix_1011_jp2_readmetadata_loop (#1013)\n\nFix #1011 fix_1011_jp2_readmetadata_loop",
    "before_after_code_files": [
      "src/jp2image.cpp||src/jp2image.cpp",
      "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
      "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
    ]
  },
  "patch_diff": {
    "src/jp2image.cpp||src/jp2image.cpp": [
      "File: src/jp2image.cpp -> src/jp2image.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "22:   File:      jp2image.cpp",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "197:         return result;",
      "198:     }",
      "200:     void Jp2Image::readMetadata()",
      "201:     {",
      "202: #ifdef EXIV2_DEBUG_MESSAGES",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "196: static void boxes_check(size_t b,size_t m)",
      "197: {",
      "198:     if ( b > m ) {",
      "199: #ifdef EXIV2_DEBUG_MESSAGES",
      "200:         std::cout << \"Exiv2::Jp2Image::readMetadata box maximum exceeded\" << std::endl;",
      "201: #endif",
      "202:         throw Error(kerCorruptedMetadata);",
      "203:     }",
      "204: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "219:         Jp2BoxHeader      subBox    = {0,0};",
      "220:         Jp2ImageHeaderBox ihdr      = {0,0,0,0,0,0,0,0};",
      "221:         Jp2UuidBox        uuid      = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};",
      "223:         while (io_->read((byte*)&box, sizeof(box)) == sizeof(box))",
      "224:         {",
      "225:             position   = io_->tell();",
      "226:             box.length = getLong((byte*)&box.length, bigEndian);",
      "227:             box.type   = getLong((byte*)&box.type, bigEndian);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "228:         size_t            boxes     = 0 ;",
      "229:         size_t            boxem     = 1000 ; // boxes max",
      "233:             boxes_check(boxes++,boxem );",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "252:                     while (io_->read((byte*)&subBox, sizeof(subBox)) == sizeof(subBox) && subBox.length )",
      "253:                     {",
      "254:                         subBox.length = getLong((byte*)&subBox.length, bigEndian);",
      "255:                         subBox.type   = getLong((byte*)&subBox.type, bigEndian);",
      "256: #ifdef EXIV2_DEBUG_MESSAGES",
      "257:                         std::cout << \"Exiv2::Jp2Image::readMetadata: \"",
      "258:                         << \"subBox = \" << toAscii(subBox.type) << \" length = \" << subBox.length << std::endl;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:                         boxes_check(boxes++, boxem) ;",
      "266:                         if (subBox.length > io_->size() ) {",
      "267:                             throw Error(kerCorruptedMetadata);",
      "268:                         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "308:                         }",
      "310:                         io_->seek(restore,BasicIo::beg);",
      "312:                         restore = io_->tell();",
      "313:                     }",
      "314:                     break;",
      "",
      "[Removed Lines]",
      "311:                         io_->seek(subBox.length, Exiv2::BasicIo::cur);",
      "",
      "[Added Lines]",
      "324:                         if ( io_->seek(subBox.length, Exiv2::BasicIo::cur) != 0 ) {",
      "325:                             throw Error(kerCorruptedMetadata);",
      "326:                         }",
      "",
      "---------------"
    ],
    "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py": [
      "File: tests/bugfixes/github/test_CVE_2017_17725.py -> tests/bugfixes/github/test_CVE_2017_17725.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     filename = \"$data_path/poc_2017-12-12_issue188\"",
      "12:     commands = [\"$exiv2 \" + filename]",
      "13:     stdout = [\"\"]",
      "16: \"\"\"]",
      "17:     retval = [1]",
      "",
      "[Removed Lines]",
      "14:     stderr = [\"\"\"$exiv2_overflow_exception_message \"\"\" + filename + \"\"\":",
      "15: $addition_overflow_message",
      "",
      "[Added Lines]",
      "14:     stderr = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
      "15: $kerCorruptedMetadata",
      "",
      "---------------"
    ],
    "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py": [
      "File: tests/bugfixes/github/test_issue_1011.py -> tests/bugfixes/github/test_issue_1011.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # -*- coding: utf-8 -*-",
      "3: from system_tests import CaseMeta, path",
      "5: class Test_issue_1011(metaclass=CaseMeta):",
      "7:     filename = path(\"$data_path/Jp2Image_readMetadata_loop.poc\")",
      "8:     commands = [\"$exiv2 \" + filename]",
      "9:     stdout   = [\"\"]",
      "10:     stderr   = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
      "11: $kerCorruptedMetadata",
      "12: \"\"\"]",
      "13:     retval = [1]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b917c3f7dd86336a9f6fda4456422c419dfe88c",
      "candidate_info": {
        "commit_hash": "1b917c3f7dd86336a9f6fda4456422c419dfe88c",
        "repo": "Exiv2/exiv2",
        "commit_url": "https://github.com/Exiv2/exiv2/commit/1b917c3f7dd86336a9f6fda4456422c419dfe88c",
        "files": [
          "src/jp2image.cpp",
          "test/data/Jp2Image_readMetadata_loop.poc",
          "tests/bugfixes/github/test_CVE_2017_17725.py",
          "tests/bugfixes/github/test_issue_1011.py"
        ],
        "message": "Fix #1011 fix_1011_jp2_readmetadata_loop",
        "before_after_code_files": [
          "src/jp2image.cpp||src/jp2image.cpp",
          "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
          "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Exiv2/exiv2/pull/1013"
        ],
        "olp_code_files": {
          "patch": [
            "src/jp2image.cpp||src/jp2image.cpp",
            "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
            "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
          ],
          "candidate": [
            "src/jp2image.cpp||src/jp2image.cpp",
            "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
            "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
          ]
        }
      },
      "candidate_diff": {
        "src/jp2image.cpp||src/jp2image.cpp": [
          "File: src/jp2image.cpp -> src/jp2image.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "22:   File:      jp2image.cpp",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:         return result;",
          "198:     }",
          "200:     void Jp2Image::readMetadata()",
          "201:     {",
          "202: #ifdef EXIV2_DEBUG_MESSAGES",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "196: static void boxes_check(size_t b,size_t m)",
          "197: {",
          "198:     if ( b > m ) {",
          "199: #ifdef EXIV2_DEBUG_MESSAGES",
          "200:         std::cout << \"Exiv2::Jp2Image::readMetadata box maximum exceeded\" << std::endl;",
          "201: #endif",
          "202:         throw Error(kerCorruptedMetadata);",
          "203:     }",
          "204: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "219:         Jp2BoxHeader      subBox    = {0,0};",
          "220:         Jp2ImageHeaderBox ihdr      = {0,0,0,0,0,0,0,0};",
          "221:         Jp2UuidBox        uuid      = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};",
          "223:         while (io_->read((byte*)&box, sizeof(box)) == sizeof(box))",
          "224:         {",
          "225:             position   = io_->tell();",
          "226:             box.length = getLong((byte*)&box.length, bigEndian);",
          "227:             box.type   = getLong((byte*)&box.type, bigEndian);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:         size_t            boxes     = 0 ;",
          "229:         size_t            boxem     = 1000 ; // boxes max",
          "233:             boxes_check(boxes++,boxem );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "252:                     while (io_->read((byte*)&subBox, sizeof(subBox)) == sizeof(subBox) && subBox.length )",
          "253:                     {",
          "254:                         subBox.length = getLong((byte*)&subBox.length, bigEndian);",
          "255:                         subBox.type   = getLong((byte*)&subBox.type, bigEndian);",
          "256: #ifdef EXIV2_DEBUG_MESSAGES",
          "257:                         std::cout << \"Exiv2::Jp2Image::readMetadata: \"",
          "258:                         << \"subBox = \" << toAscii(subBox.type) << \" length = \" << subBox.length << std::endl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:                         boxes_check(boxes++, boxem) ;",
          "266:                         if (subBox.length > io_->size() ) {",
          "267:                             throw Error(kerCorruptedMetadata);",
          "268:                         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "308:                         }",
          "310:                         io_->seek(restore,BasicIo::beg);",
          "312:                         restore = io_->tell();",
          "313:                     }",
          "314:                     break;",
          "",
          "[Removed Lines]",
          "311:                         io_->seek(subBox.length, Exiv2::BasicIo::cur);",
          "",
          "[Added Lines]",
          "324:                         if ( io_->seek(subBox.length, Exiv2::BasicIo::cur) != 0 ) {",
          "325:                             throw Error(kerCorruptedMetadata);",
          "326:                         }",
          "",
          "---------------"
        ],
        "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py": [
          "File: tests/bugfixes/github/test_CVE_2017_17725.py -> tests/bugfixes/github/test_CVE_2017_17725.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     filename = \"$data_path/poc_2017-12-12_issue188\"",
          "12:     commands = [\"$exiv2 \" + filename]",
          "13:     stdout = [\"\"]",
          "16: \"\"\"]",
          "17:     retval = [1]",
          "",
          "[Removed Lines]",
          "14:     stderr = [\"\"\"$exiv2_overflow_exception_message \"\"\" + filename + \"\"\":",
          "15: $addition_overflow_message",
          "",
          "[Added Lines]",
          "14:     stderr = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
          "15: $kerCorruptedMetadata",
          "",
          "---------------"
        ],
        "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py": [
          "File: tests/bugfixes/github/test_issue_1011.py -> tests/bugfixes/github/test_issue_1011.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- coding: utf-8 -*-",
          "3: from system_tests import CaseMeta, path",
          "5: class Test_issue_1011(metaclass=CaseMeta):",
          "7:     filename = path(\"$data_path/Jp2Image_readMetadata_loop.poc\")",
          "8:     commands = [\"$exiv2 \" + filename]",
          "9:     stdout   = [\"\"]",
          "10:     stderr   = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
          "11: $kerCorruptedMetadata",
          "12: \"\"\"]",
          "13:     retval = [1]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "730211a127972b2ced70ff2d455e36a88428ac7f",
      "candidate_info": {
        "commit_hash": "730211a127972b2ced70ff2d455e36a88428ac7f",
        "repo": "Exiv2/exiv2",
        "commit_url": "https://github.com/Exiv2/exiv2/commit/730211a127972b2ced70ff2d455e36a88428ac7f",
        "files": [
          "src/jp2image.cpp"
        ],
        "message": "Fix #1011 fix_1011_jp2_readmetadata_loop\n\n(cherry picked from commit 1b917c3f7dd86336a9f6fda4456422c419dfe88c)\n(cherry picked from commit 55af05397a7e3517f24c5fb503efb4bec90c66f0)",
        "before_after_code_files": [
          "src/jp2image.cpp||src/jp2image.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/jp2image.cpp||src/jp2image.cpp"
          ],
          "candidate": [
            "src/jp2image.cpp||src/jp2image.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/jp2image.cpp||src/jp2image.cpp": [
          "File: src/jp2image.cpp -> src/jp2image.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #include \"rcsid_int.hpp\"",
          "29: EXIV2_RCSID(\"@(#) $Id$\")",
          "",
          "[Removed Lines]",
          "23:   File:      jp2image.cpp",
          "24:   Version:   $Rev$",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:         return result;",
          "205:     }",
          "207:     void Jp2Image::readMetadata()",
          "208:     {",
          "209: #ifdef DEBUG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202: static void boxes_check(size_t b,size_t m)",
          "203: {",
          "204:     if ( b > m ) {",
          "205: #ifdef EXIV2_DEBUG_MESSAGES",
          "206:         std::cout << \"Exiv2::Jp2Image::readMetadata box maximum exceeded\" << std::endl;",
          "207: #endif",
          "208:         throw Error(kerCorruptedMetadata);",
          "209:     }",
          "210: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "226:         Jp2BoxHeader      subBox    = {0,0};",
          "227:         Jp2ImageHeaderBox ihdr      = {0,0,0,0,0,0,0,0};",
          "228:         Jp2UuidBox        uuid      = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};",
          "230:         while (io_->read((byte*)&box, sizeof(box)) == sizeof(box))",
          "231:         {",
          "232:             position   = io_->tell();",
          "233:             box.length = getLong((byte*)&box.length, bigEndian);",
          "234:             box.type   = getLong((byte*)&box.type, bigEndian);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:         size_t            boxes     = 0 ;",
          "235:         size_t            boxem     = 1000 ; // boxes max",
          "239:             boxes_check(boxes++,boxem );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "259:                     while (io_->read((byte*)&subBox, sizeof(subBox)) == sizeof(subBox) && subBox.length )",
          "260:                     {",
          "261:                         subBox.length = getLong((byte*)&subBox.length, bigEndian);",
          "262:                         subBox.type   = getLong((byte*)&subBox.type, bigEndian);",
          "263: #ifdef DEBUG",
          "264:                         std::cout << \"Exiv2::Jp2Image::readMetadata: \"",
          "265:                         << \"subBox = \" << toAscii(subBox.type) << \" length = \" << subBox.length << std::endl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:                         boxes_check(boxes++, boxem) ;",
          "272:                         if (subBox.length > io_->size() ) {",
          "273:                             throw Error(kerCorruptedMetadata);",
          "274:                         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "315:                         }",
          "317:                         io_->seek(restore,BasicIo::beg);",
          "319:                         restore = io_->tell();",
          "320:                     }",
          "321:                     break;",
          "",
          "[Removed Lines]",
          "318:                         io_->seek(subBox.length, Exiv2::BasicIo::cur);",
          "",
          "[Added Lines]",
          "331:                         if ( io_->seek(subBox.length, Exiv2::BasicIo::cur) != 0 ) {",
          "332:                             throw Error(kerCorruptedMetadata);",
          "333:                         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55af05397a7e3517f24c5fb503efb4bec90c66f0",
      "candidate_info": {
        "commit_hash": "55af05397a7e3517f24c5fb503efb4bec90c66f0",
        "repo": "Exiv2/exiv2",
        "commit_url": "https://github.com/Exiv2/exiv2/commit/55af05397a7e3517f24c5fb503efb4bec90c66f0",
        "files": [
          "src/jp2image.cpp",
          "test/data/Jp2Image_readMetadata_loop.poc",
          "tests/bugfixes/github/test_CVE_2017_17725.py",
          "tests/bugfixes/github/test_issue_1011.py"
        ],
        "message": "Fix #1011 fix_1011_jp2_readmetadata_loop\n\n(cherry picked from commit 1b917c3f7dd86336a9f6fda4456422c419dfe88c)",
        "before_after_code_files": [
          "src/jp2image.cpp||src/jp2image.cpp",
          "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
          "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/jp2image.cpp||src/jp2image.cpp",
            "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
            "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
          ],
          "candidate": [
            "src/jp2image.cpp||src/jp2image.cpp",
            "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py",
            "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py"
          ]
        }
      },
      "candidate_diff": {
        "src/jp2image.cpp||src/jp2image.cpp": [
          "File: src/jp2image.cpp -> src/jp2image.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "22:   File:      jp2image.cpp",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:         return result;",
          "199:     }",
          "201:     void Jp2Image::readMetadata()",
          "202:     {",
          "203: #ifdef EXIV2_DEBUG_MESSAGES",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197: static void boxes_check(size_t b,size_t m)",
          "198: {",
          "199:     if ( b > m ) {",
          "200: #ifdef EXIV2_DEBUG_MESSAGES",
          "201:         std::cout << \"Exiv2::Jp2Image::readMetadata box maximum exceeded\" << std::endl;",
          "202: #endif",
          "203:         throw Error(kerCorruptedMetadata);",
          "204:     }",
          "205: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "219:         Jp2BoxHeader      subBox    = {0,0};",
          "220:         Jp2ImageHeaderBox ihdr      = {0,0,0,0,0,0,0,0};",
          "221:         Jp2UuidBox        uuid      = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};",
          "223:         while (io_->read((byte*)&box, sizeof(box)) == sizeof(box))",
          "224:         {",
          "225:             int64 position = io_->tell();",
          "226:             box.length = getLong((byte*)&box.length, bigEndian);",
          "227:             box.type   = getLong((byte*)&box.type, bigEndian);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:         size_t            boxes     = 0 ;",
          "229:         size_t            boxem     = 1000 ; // boxes max",
          "233:             boxes_check(boxes++,boxem );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "252:                     while (io_->read((byte*)&subBox, sizeof(subBox)) == sizeof(subBox) && subBox.length )",
          "253:                     {",
          "254:                         subBox.length = getLong((byte*)&subBox.length, bigEndian);",
          "255:                         subBox.type   = getLong((byte*)&subBox.type, bigEndian);",
          "256: #ifdef EXIV2_DEBUG_MESSAGES",
          "257:                         std::cout << \"Exiv2::Jp2Image::readMetadata: \"",
          "258:                         << \"subBox = \" << toAscii(subBox.type) << \" length = \" << subBox.length << std::endl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:                         boxes_check(boxes++, boxem) ;",
          "266:                         if (subBox.length > io_->size() ) {",
          "267:                             throw Error(kerCorruptedMetadata);",
          "268:                         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "308:                         }",
          "310:                         io_->seek(restore,BasicIo::beg);",
          "312:                         restore = io_->tell();",
          "313:                     }",
          "314:                     break;",
          "",
          "[Removed Lines]",
          "311:                         io_->seek(subBox.length, Exiv2::BasicIo::cur);",
          "",
          "[Added Lines]",
          "324:                         if ( io_->seek(subBox.length, Exiv2::BasicIo::cur) != 0 ) {",
          "325:                             throw Error(kerCorruptedMetadata);",
          "326:                         }",
          "",
          "---------------"
        ],
        "tests/bugfixes/github/test_CVE_2017_17725.py||tests/bugfixes/github/test_CVE_2017_17725.py": [
          "File: tests/bugfixes/github/test_CVE_2017_17725.py -> tests/bugfixes/github/test_CVE_2017_17725.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     filename = \"$data_path/poc_2017-12-12_issue188\"",
          "12:     commands = [\"$exiv2 \" + filename]",
          "13:     stdout = [\"\"]",
          "16: \"\"\"]",
          "17:     retval = [1]",
          "",
          "[Removed Lines]",
          "14:     stderr = [\"\"\"$exiv2_overflow_exception_message \"\"\" + filename + \"\"\":",
          "15: $addition_overflow_message",
          "",
          "[Added Lines]",
          "14:     stderr = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
          "15: $kerCorruptedMetadata",
          "",
          "---------------"
        ],
        "tests/bugfixes/github/test_issue_1011.py||tests/bugfixes/github/test_issue_1011.py": [
          "File: tests/bugfixes/github/test_issue_1011.py -> tests/bugfixes/github/test_issue_1011.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- coding: utf-8 -*-",
          "3: from system_tests import CaseMeta, path",
          "5: class Test_issue_1011(metaclass=CaseMeta):",
          "7:     filename = path(\"$data_path/Jp2Image_readMetadata_loop.poc\")",
          "8:     commands = [\"$exiv2 \" + filename]",
          "9:     stdout   = [\"\"]",
          "10:     stderr   = [\"\"\"$exiv2_exception_message \"\"\" + filename + \"\"\":",
          "11: $kerCorruptedMetadata",
          "12: \"\"\"]",
          "13:     retval = [1]",
          "",
          "---------------"
        ]
      }
    }
  ]
}